"Are you serious?" comments aside, from a programming perspective there's a very simple reason: the OpenType spec only affords a glyph address space of one USHORT, so one font can only support 16 bits worth of glyphs, or 65536 glyphs max.
The current version of Unicode, v8 as of this answer, currently contains 120737 assigned code points, or almost twice as many as fit in a modern font. In fact, Unicode hasn't fit in a modern OpenType font since 2001, with the release of Unicode 3.1, which upped the number of code points from  	49259 to 94205.
"So what about font collections?" I hear you ask. Why not use multiple fonts and support all unicode that way? Well now, you've just described Adobe Source Pro, and Google's Noto (which are the same font).
So: "Why isn't there a font that contains all Unicode glyphs?", because that's been technically impossible since 2001. But it's really the wrong question. Are there any font families that support all of Unicode? Yes, there are.

