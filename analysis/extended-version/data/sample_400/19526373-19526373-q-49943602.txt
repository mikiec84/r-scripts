I have an asp.net web application running on an IIS 7.5/.NET Framework 4.0 server.  Whenever I navigate to any webpage running on this server, it takes about 12 seconds to initially load.  After that, navigation is quick (about 0.5 seconds, even on heavy hitting pages).  If you leave it idle for two minutes, it slows again for the next request.  I can tell that this is because the connection time-out is set to 120 seconds...I am guessing that after that limit, the site must reload everything when the next page is requesting.  This site does call two different databases, however, default page should not do so and suffers the long initial load time.  I have tried setting up Application Initialization for IIS 7.5, but noticed very marginal change at best after this was done.  From what I've been reading, there seems to be very mixed success with this module in IIS 7.5.  Is there any other means of circumventing this load time without having to rely solely on a high connection timeout value, since that would not resolve initial load time anyway?
Update
Per Zerkey's question in the comments below, I got a little curious and looked around for ways to see what was loading, as debugging it from my PC was still slow, but considerably faster (about 4-6 seconds).  In IIS on the server this is published to, I went to Worker Processes, selected the process and clicked current requests on the right.  This showed me that it gets hung up on a 3rd party mobile redirection service I am using called 51degrees.mobi.  It takes about 10 of those 12 seconds for that redirect.  My timeout for this service was set too low.  As I recall, this timeout was set this way because the user has the ability to toggle back and forth between mobile and desktop after the initial redirect if they choose.  Disabling the timeout fixed the issue except on initial load/redirect, which would be fine, but now once the user tries to toggle between mobile/default, it will always take them to the desktop site until they clear their browser cache.  I am using 51degrees.mobi because more traditional methods like using isMobileDevice weren't even working.  If anyone has any input on how I could get the desired behavior out of 51degrees.mobi, I'm all ears.  I will post this in a new question and link when I can.

