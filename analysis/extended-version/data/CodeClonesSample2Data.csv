ContentNormalizedHash,LineCount,ThreadCount,Content
-7761885323131420759,256,5,"    package facebooklocation.facebooklocation;&#xD;&#xA;    &#xD;&#xA;    import android.content.Intent;&#xD;&#xA;    import android.content.pm.PackageInfo;&#xD;&#xA;    import android.content.pm.PackageManager;&#xD;&#xA;    import android.content.pm.Signature;&#xD;&#xA;    import android.support.v7.app.AppCompatActivity;&#xD;&#xA;    import android.os.Bundle;&#xD;&#xA;    import android.util.Base64;&#xD;&#xA;    import android.util.Log;&#xD;&#xA;    import android.view.View;&#xD;&#xA;    import android.widget.ImageView;&#xD;&#xA;    import android.widget.LinearLayout;&#xD;&#xA;    import android.widget.TextView;&#xD;&#xA;    import com.bumptech.glide.Glide;&#xD;&#xA;    import com.facebook.AccessToken;&#xD;&#xA;    import com.facebook.CallbackManager;&#xD;&#xA;    import com.facebook.FacebookCallback;&#xD;&#xA;    import com.facebook.FacebookException;&#xD;&#xA;    import com.facebook.FacebookSdk;&#xD;&#xA;    import com.facebook.GraphRequest;&#xD;&#xA;    import com.facebook.GraphResponse;&#xD;&#xA;    import com.facebook.HttpMethod;&#xD;&#xA;    import com.facebook.login.LoginManager;&#xD;&#xA;    import com.facebook.login.LoginResult;&#xD;&#xA;    import org.json.JSONObject;&#xD;&#xA;    import java.security.MessageDigest;&#xD;&#xA;    import java.security.NoSuchAlgorithmException;&#xD;&#xA;    import java.util.Arrays;&#xD;&#xA;    &#xD;&#xA;    public class MainActivity extends AppCompatActivity implements View.OnClickListener {&#xD;&#xA;    &#xD;&#xA;        CallbackManager callbackManager;&#xD;&#xA;        ImageView iv_image, iv_facebook;&#xD;&#xA;        TextView tv_name, tv_email, tv_dob, tv_location, tv_facebook;&#xD;&#xA;        LinearLayout ll_facebook;&#xD;&#xA;        String str_facebookname, str_facebookemail, str_facebookid, str_birthday, str_location;&#xD;&#xA;        boolean boolean_login;&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        protected void onCreate(Bundle savedInstanceState) {&#xD;&#xA;            super.onCreate(savedInstanceState);&#xD;&#xA;            setContentView(R.layout.activity_main);&#xD;&#xA;    &#xD;&#xA;            init();&#xD;&#xA;            getKeyHash();&#xD;&#xA;            listener();&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        private void init() {&#xD;&#xA;            iv_image = (ImageView) findViewById(R.id.iv_image);&#xD;&#xA;            iv_facebook = (ImageView) findViewById(R.id.iv_facebook);&#xD;&#xA;            tv_name = (TextView) findViewById(R.id.tv_name);&#xD;&#xA;            tv_email = (TextView) findViewById(R.id.tv_email);&#xD;&#xA;            tv_dob = (TextView) findViewById(R.id.tv_dob);&#xD;&#xA;            tv_location = (TextView) findViewById(R.id.tv_location);&#xD;&#xA;            tv_facebook = (TextView) findViewById(R.id.tv_facebook);&#xD;&#xA;            ll_facebook = (LinearLayout) findViewById(R.id.ll_facebook);&#xD;&#xA;            FacebookSdk.sdkInitialize(this.getApplicationContext());&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private void listener() {&#xD;&#xA;            tv_facebook.setOnClickListener(this);&#xD;&#xA;            ll_facebook.setOnClickListener(this);&#xD;&#xA;            iv_facebook.setOnClickListener(this);&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private void facebookLogin() {&#xD;&#xA;            callbackManager = CallbackManager.Factory.create();&#xD;&#xA;            LoginManager.getInstance().registerCallback(callbackManager, new FacebookCallback<LoginResult>() {&#xD;&#xA;                @Override&#xD;&#xA;                public void onSuccess(LoginResult loginResult) {&#xD;&#xA;                    Log.e(""ONSUCCESS"", ""User ID: "" + loginResult.getAccessToken().getUserId()&#xD;&#xA;                            + ""\n"" + ""Auth Token: "" + loginResult.getAccessToken().getToken()&#xD;&#xA;                    );&#xD;&#xA;                    GraphRequest request = GraphRequest.newMeRequest(loginResult.getAccessToken(),&#xD;&#xA;                            new GraphRequest.GraphJSONObjectCallback() {&#xD;&#xA;                                @Override&#xD;&#xA;                                public void onCompleted(JSONObject object, GraphResponse response) {&#xD;&#xA;                                    try {&#xD;&#xA;    &#xD;&#xA;                                        boolean_login = true;&#xD;&#xA;                                        tv_facebook.setText(""Logout from Facebook"");&#xD;&#xA;    &#xD;&#xA;                                        Log.e(""object"", object.toString());&#xD;&#xA;                                        str_facebookname = object.getString(""name"");&#xD;&#xA;    &#xD;&#xA;                                        try {&#xD;&#xA;                                            str_facebookemail = object.getString(""email"");&#xD;&#xA;                                        } catch (Exception e) {&#xD;&#xA;                                            str_facebookemail = """";&#xD;&#xA;                                            e.printStackTrace();&#xD;&#xA;                                        }&#xD;&#xA;    &#xD;&#xA;                                        try {&#xD;&#xA;                                            str_facebookid = object.getString(""id"");&#xD;&#xA;                                        } catch (Exception e) {&#xD;&#xA;                                            str_facebookid = """";&#xD;&#xA;                                            e.printStackTrace();&#xD;&#xA;    &#xD;&#xA;                                        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;                                        try {&#xD;&#xA;                                            str_birthday = object.getString(""birthday"");&#xD;&#xA;                                        } catch (Exception e) {&#xD;&#xA;                                            str_birthday = """";&#xD;&#xA;                                            e.printStackTrace();&#xD;&#xA;                                        }&#xD;&#xA;    &#xD;&#xA;                                        try {&#xD;&#xA;                                            JSONObject jsonobject_location = object.getJSONObject(""location"");&#xD;&#xA;                                            str_location = jsonobject_location.getString(""name"");&#xD;&#xA;    &#xD;&#xA;                                        } catch (Exception e) {&#xD;&#xA;                                            str_location = """";&#xD;&#xA;                                            e.printStackTrace();&#xD;&#xA;                                        }&#xD;&#xA;    &#xD;&#xA;                                        fn_profilepic();&#xD;&#xA;    &#xD;&#xA;                                    } catch (Exception e) {&#xD;&#xA;    &#xD;&#xA;                                    }&#xD;&#xA;                                }&#xD;&#xA;                            });&#xD;&#xA;                    Bundle parameters = new Bundle();&#xD;&#xA;                    parameters.putString(""fields"", ""id, name, email,gender,birthday,location"");&#xD;&#xA;    &#xD;&#xA;                    request.setParameters(parameters);&#xD;&#xA;                    request.executeAsync();&#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;                @Override&#xD;&#xA;                public void onCancel() {&#xD;&#xA;                    if (AccessToken.getCurrentAccessToken() == null) {&#xD;&#xA;                        return; // already logged out&#xD;&#xA;                    }&#xD;&#xA;                    new GraphRequest(AccessToken.getCurrentAccessToken(), ""/me/permissions/"", null, HttpMethod.DELETE, new GraphRequest&#xD;&#xA;                            .Callback() {&#xD;&#xA;                        @Override&#xD;&#xA;                        public void onCompleted(GraphResponse graphResponse) {&#xD;&#xA;                            LoginManager.getInstance().logOut();&#xD;&#xA;                            LoginManager.getInstance().logInWithReadPermissions(MainActivity.this, Arrays.asList(""public_profile,email""));&#xD;&#xA;                            facebookLogin();&#xD;&#xA;    &#xD;&#xA;                        }&#xD;&#xA;                    }).executeAsync();&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;                @Override&#xD;&#xA;                public void onError(FacebookException e) {&#xD;&#xA;                    Log.e(""ON ERROR"", ""Login attempt failed."");&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;                    AccessToken.setCurrentAccessToken(null);&#xD;&#xA;                    LoginManager.getInstance().logInWithReadPermissions(MainActivity.this, Arrays.asList(""public_profile,email,user_birthday""));&#xD;&#xA;                }&#xD;&#xA;            });&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void onActivityResult(int requestCode, int resultCode, Intent data) {&#xD;&#xA;            super.onActivityResult(requestCode, resultCode, data);&#xD;&#xA;    &#xD;&#xA;            try {&#xD;&#xA;                callbackManager.onActivityResult(requestCode, resultCode, data);&#xD;&#xA;            } catch (Exception e) {&#xD;&#xA;    &#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private void getKeyHash() {&#xD;&#xA;            // Add code to print out the key hash&#xD;&#xA;            try {&#xD;&#xA;                PackageInfo info = getPackageManager().getPackageInfo(""facebooklocation.facebooklocation"", PackageManager.GET_SIGNATURES);&#xD;&#xA;                for (Signature signature : info.signatures) {&#xD;&#xA;                    MessageDigest md = MessageDigest.getInstance(""SHA"");&#xD;&#xA;                    md.update(signature.toByteArray());&#xD;&#xA;                    Log.d(""KeyHash:"", Base64.encodeToString(md.digest(), Base64.DEFAULT));&#xD;&#xA;                }&#xD;&#xA;            } catch (PackageManager.NameNotFoundException e) {&#xD;&#xA;    &#xD;&#xA;            } catch (NoSuchAlgorithmException e) {&#xD;&#xA;    &#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private void fn_profilepic() {&#xD;&#xA;    &#xD;&#xA;            Bundle params = new Bundle();&#xD;&#xA;            params.putBoolean(""redirect"", false);&#xD;&#xA;            params.putString(""type"", ""large"");&#xD;&#xA;            new GraphRequest(&#xD;&#xA;                    AccessToken.getCurrentAccessToken(),&#xD;&#xA;                    ""me/picture"",&#xD;&#xA;                    params,&#xD;&#xA;                    HttpMethod.GET,&#xD;&#xA;                    new GraphRequest.Callback() {&#xD;&#xA;                        public void onCompleted(GraphResponse response) {&#xD;&#xA;    &#xD;&#xA;                            Log.e(""Response 2"", response + """");&#xD;&#xA;    &#xD;&#xA;                            try {&#xD;&#xA;                                String str_facebookimage = (String) response.getJSONObject().getJSONObject(""data"").get(""url"");&#xD;&#xA;                                Log.e(""Picture"", str_facebookimage);&#xD;&#xA;    &#xD;&#xA;                                Glide.with(MainActivity.this).load(str_facebookimage).skipMemoryCache(true).into(iv_image);&#xD;&#xA;    &#xD;&#xA;                            } catch (Exception e) {&#xD;&#xA;                                e.printStackTrace();&#xD;&#xA;                            }&#xD;&#xA;    &#xD;&#xA;                            tv_name.setText(str_facebookname);&#xD;&#xA;                            tv_email.setText(str_facebookemail);&#xD;&#xA;                            tv_dob.setText(str_birthday);&#xD;&#xA;                            tv_location.setText(str_location);&#xD;&#xA;    &#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;            ).executeAsync();&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void onClick(View view) {&#xD;&#xA;    &#xD;&#xA;            if (boolean_login) {&#xD;&#xA;                boolean_login = false;&#xD;&#xA;                LoginManager.getInstance().logOut();&#xD;&#xA;                tv_location.setText("""");&#xD;&#xA;                tv_dob.setText("""");&#xD;&#xA;                tv_email.setText("""");&#xD;&#xA;                tv_name.setText("""");&#xD;&#xA;                Glide.with(MainActivity.this).load(R.drawable.profile).into(iv_image);&#xD;&#xA;                tv_facebook.setText(""Login with Facebook"");&#xD;&#xA;            } else {&#xD;&#xA;                LoginManager.getInstance().logInWithReadPermissions(MainActivity.this, Arrays.asList(""public_profile,email,user_birthday,user_location""));&#xD;&#xA;                facebookLogin();&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        protected void onDestroy() {&#xD;&#xA;            super.onDestroy();&#xD;&#xA;            LoginManager.getInstance().logOut();&#xD;&#xA;        }&#xD;&#xA;    }"
-4750437432936525950,20,5,"    fastcgi_param	QUERY_STRING		$query_string;&#xD;&#xA;    fastcgi_param	REQUEST_METHOD		$request_method;&#xD;&#xA;    fastcgi_param	CONTENT_TYPE		$content_type;&#xD;&#xA;    fastcgi_param	CONTENT_LENGTH		$content_length;&#xD;&#xA;    fastcgi_param	SCRIPT_FILENAME		$request_filename;&#xD;&#xA;    fastcgi_param	SCRIPT_NAME		$fastcgi_script_name;&#xD;&#xA;    fastcgi_param	REQUEST_URI		$request_uri;&#xD;&#xA;    fastcgi_param	DOCUMENT_URI		$document_uri;&#xD;&#xA;    fastcgi_param	DOCUMENT_ROOT		$document_root;&#xD;&#xA;    fastcgi_param	SERVER_PROTOCOL		$server_protocol;&#xD;&#xA;    fastcgi_param	GATEWAY_INTERFACE	CGI/1.1;&#xD;&#xA;    fastcgi_param	SERVER_SOFTWARE		nginx/$nginx_version;&#xD;&#xA;    fastcgi_param	REMOTE_ADDR		$remote_addr;&#xD;&#xA;    fastcgi_param	REMOTE_PORT		$remote_port;&#xD;&#xA;    fastcgi_param	SERVER_ADDR		$server_addr;&#xD;&#xA;    fastcgi_param	SERVER_PORT		$server_port;&#xD;&#xA;    fastcgi_param	SERVER_NAME		$server_name;&#xD;&#xA;    fastcgi_param	HTTPS			$https;&#xD;&#xA;    # PHP only, required if PHP was built with --enable-force-cgi-redirect&#xD;&#xA;    fastcgi_param	REDIRECT_STATUS		200;"
8664502410569615997,20,5,"    <?xml version=""1.0"" encoding=""UTF-8""?>&#xD;&#xA;    <configuration>&#xD;&#xA;        <system.webServer>&#xD;&#xA;            <rewrite>&#xD;&#xA;                <rules>&#xD;&#xA;                    <rule name=""Rewrite to index.php"">&#xD;&#xA;                        <match url=""index.php|robots.txt|images|test.php"" />&#xD;&#xA;                        <action type=""None"" />&#xD;&#xA;                    </rule>&#xD;&#xA;                    <rule name=""Rewrite CI Index"">&#xD;&#xA;                        <match url="".*"" />&#xD;&#xA;                        <conditions>&#xD;&#xA;                            <add input=""{REQUEST_FILENAME}"" pattern=""css|js|jpg|jpeg|png|gif|ico|htm|html"" negate=""true"" />&#xD;&#xA;                        </conditions>&#xD;&#xA;                        <action type=""Rewrite"" url=""index.php/{R:0}"" />&#xD;&#xA;                    </rule>&#xD;&#xA;                </rules>&#xD;&#xA;            </rewrite>&#xD;&#xA;        </system.webServer>&#xD;&#xA;    </configuration>"
-8022421675584551241,20,5,"    <TabHost xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;    		android:id=""@android:id/tabhost""&#xD;&#xA;    		android:layout_width=""fill_parent""&#xD;&#xA;    		android:layout_height=""fill_parent"">&#xD;&#xA;    		<LinearLayout &#xD;&#xA;    					android:orientation=""vertical""&#xD;&#xA;    				    android:layout_width=""fill_parent""&#xD;&#xA;    				    android:layout_height=""fill_parent""&#xD;&#xA;    				    android:padding=""5dp"">&#xD;&#xA;    		<TabWidget&#xD;&#xA;    			android:id=""@android:id/tabs""&#xD;&#xA;    			android:layout_width=""fill_parent""&#xD;&#xA;    			android:layout_height=""wrap_content""/>&#xD;&#xA;    		<FrameLayout&#xD;&#xA;    			android:id=""@android:id/tabcontent""&#xD;&#xA;    			android:layout_width=""fill_parent""&#xD;&#xA;    			android:layout_height=""fill_parent""&#xD;&#xA;    			android:padding=""5dp""/>&#xD;&#xA;    		</LinearLayout>		&#xD;&#xA;    </TabHost>"
7179208691866932582,20,5,"    <html xmlns=""http://www.w3.org/1999/xhtml""&#xD;&#xA;          xmlns:og=""http://ogp.me/ns#""&#xD;&#xA;          xmlns:fb=""https://www.facebook.com/2008/fbml"">&#xD;&#xA;      <head>&#xD;&#xA;        <title>The Rock (1996)</title>&#xD;&#xA;        <meta property=""og:title"" content=""The Rock""/>&#xD;&#xA;        <meta property=""og:type"" content=""movie""/>&#xD;&#xA;        <meta property=""og:url"" content=""http://www.imdb.com/title/tt0117500/""/>&#xD;&#xA;        <meta property=""og:image"" content=""http://ia.media-imdb.com/rock.jpg""/>&#xD;&#xA;        <meta property=""og:site_name"" content=""IMDb""/>&#xD;&#xA;        <meta property=""fb:admins"" content=""USER_ID""/>&#xD;&#xA;        <meta property=""og:description""&#xD;&#xA;              content=""A group of U.S. Marines, under command of&#xD;&#xA;                       a renegade general, take over Alcatraz and&#xD;&#xA;                       threaten San Francisco Bay with biological&#xD;&#xA;                       weapons.""/>&#xD;&#xA;        ...&#xD;&#xA;      </head>&#xD;&#xA;      ...&#xD;&#xA;    </html>"
-2824487818535446707,20,5,"      <?xml version=""1.0"" encoding=""utf-8""?>&#xD;&#xA;     <TabHost xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;    android:id=""@android:id/tabhost""&#xD;&#xA;    android:layout_width=""fill_parent""&#xD;&#xA;    android:layout_height=""fill_parent"">&#xD;&#xA;    <LinearLayout&#xD;&#xA;        android:orientation=""vertical""&#xD;&#xA;        android:layout_width=""fill_parent""&#xD;&#xA;        android:layout_height=""fill_parent""&#xD;&#xA;        android:padding=""5dp"">&#xD;&#xA;        <TabWidget&#xD;&#xA;            android:id=""@android:id/tabs""&#xD;&#xA;            android:layout_width=""fill_parent""&#xD;&#xA;            android:layout_height=""wrap_content"" />&#xD;&#xA;        <FrameLayout&#xD;&#xA;            android:id=""@android:id/tabcontent""&#xD;&#xA;            android:layout_width=""fill_parent""&#xD;&#xA;            android:layout_height=""fill_parent""&#xD;&#xA;            android:padding=""5dp"" />&#xD;&#xA;    </LinearLayout>"
-5969751646240375211,20,5,	Letter 	Date or Time Component 	Presentation		Examples&#xD;&#xA;	G 		Era designator 			Text				AD&#xD;&#xA;	y 		Year					Year				1996; 96&#xD;&#xA;	M 		Month in year 			Month				July; Jul; 07&#xD;&#xA;	w 		Week in year 			Number				27&#xD;&#xA;	W 		Week in month			Number				2&#xD;&#xA;	D 		Day in year				Number				189&#xD;&#xA;	d 		Day in month			Number				10&#xD;&#xA;	F 		Day of week in month 	Number				2&#xD;&#xA;	E 		Day in week 			Text				Tuesday; Tue&#xD;&#xA;	a 		Am/pm marker 			Text				PM&#xD;&#xA;	H		Hour in day (0-23) 		Number				0&#xD;&#xA;	k		Hour in day (1-24) 		Number				24&#xD;&#xA;	K		Hour in am/pm (0-11)	Number				0&#xD;&#xA;	h		Hour in am/pm (1-12) 	Number				12&#xD;&#xA;	m		Minute in hour 			Number				30&#xD;&#xA;	s		Second in minute	 	Number				55&#xD;&#xA;	S		Millisecond				Number				978&#xD;&#xA;	z		Time zone 				General time zone 	Pacific Standard Time; PST; GMT-08:00&#xD;&#xA;	Z		Time zone 				RFC 822 time zone 	-0800
-7848438594015280261,20,5,"    <?xml version=""1.0"" encoding=""utf-8""?>&#xD;&#xA;    <configuration>&#xD;&#xA;      <configSections>&#xD;&#xA;        <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->&#xD;&#xA;        <section name=""entityFramework"" type=""System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"" requirePermission=""false"" />&#xD;&#xA;      </configSections>&#xD;&#xA;      <startup>&#xD;&#xA;        <supportedRuntime version=""v4.0"" sku="".NETFramework,Version=v4.5"" />&#xD;&#xA;      </startup>&#xD;&#xA;      <entityFramework>&#xD;&#xA;        <defaultConnectionFactory type=""System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework"">&#xD;&#xA;          <parameters>&#xD;&#xA;            <parameter value=""mssqllocaldb"" />&#xD;&#xA;          </parameters>&#xD;&#xA;        </defaultConnectionFactory>&#xD;&#xA;        <providers>&#xD;&#xA;          <provider invariantName=""System.Data.SqlClient"" type=""System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer"" />&#xD;&#xA;        </providers>&#xD;&#xA;      </entityFramework>&#xD;&#xA;    </configuration>"
-6477775927486515768,21,5,"    <div class=""row"">&#xD;&#xA;      <div class=""col-md-4 col-md-offset-4"">&#xD;&#xA;        <div class=""well"">&#xD;&#xA;          <%= form_for @contact do |f| %>&#xD;&#xA;            <div class=""form-group"">&#xD;&#xA;              <%= f.label :name %>&#xD;&#xA;              <%= f.text_field :name, class: 'form-control' %>&#xD;&#xA;            </div>&#xD;&#xA;            <div class=""form-group"">&#xD;&#xA;              <%= f.label :email %>&#xD;&#xA;              <%= f.email_field :email, class: 'form-control' %>&#xD;&#xA;            </div>&#xD;&#xA;            <div class=""form-group"">&#xD;&#xA;              <%= f.label :comments %>&#xD;&#xA;              <%= f.text_area :comments, class: 'form-control' %>&#xD;&#xA;            </div>&#xD;&#xA;            <%= f.submit 'Submit', class: 'btn btn-default' %>&#xD;&#xA;          <% end %>&#xD;&#xA;        </div>&#xD;&#xA;      </div>&#xD;&#xA;    </div>"
-8023795032488105868,21,5,"        fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;&#xD;&#xA;        fastcgi_param  QUERY_STRING       $query_string;&#xD;&#xA;        fastcgi_param  REQUEST_METHOD     $request_method;&#xD;&#xA;        fastcgi_param  CONTENT_TYPE       $content_type;&#xD;&#xA;        fastcgi_param  CONTENT_LENGTH     $content_length;&#xD;&#xA;        fastcgi_param  SCRIPT_NAME        $fastcgi_script_name;&#xD;&#xA;        fastcgi_param  REQUEST_URI        $request_uri;&#xD;&#xA;        fastcgi_param  DOCUMENT_URI       $document_uri;&#xD;&#xA;        fastcgi_param  DOCUMENT_ROOT      $document_root;&#xD;&#xA;        fastcgi_param  SERVER_PROTOCOL    $server_protocol;&#xD;&#xA;        fastcgi_param  REQUEST_SCHEME     $scheme;&#xD;&#xA;        fastcgi_param  HTTPS              $https if_not_empty;&#xD;&#xA;        fastcgi_param  GATEWAY_INTERFACE  CGI/1.1;&#xD;&#xA;        fastcgi_param  SERVER_SOFTWARE    nginx/$nginx_version;&#xD;&#xA;        fastcgi_param  REMOTE_ADDR        $remote_addr;&#xD;&#xA;        fastcgi_param  REMOTE_PORT        $remote_port;&#xD;&#xA;        fastcgi_param  SERVER_ADDR        $server_addr;&#xD;&#xA;        fastcgi_param  SERVER_PORT        $server_port;&#xD;&#xA;        fastcgi_param  SERVER_NAME        $server_name;&#xD;&#xA;        # PHP only, required if PHP was built with --enable-force-cgi-redirect&#xD;&#xA;        fastcgi_param  REDIRECT_STATUS    200;"
-2149819373112592314,21,5,"     <div class=""container"">&#xD;&#xA;          <div class=""row"">&#xD;&#xA;            <div class=""col"">&#xD;&#xA;              1 of 2&#xD;&#xA;            </div>&#xD;&#xA;            <div class=""col"">&#xD;&#xA;              1 of 2&#xD;&#xA;            </div>&#xD;&#xA;          </div>&#xD;&#xA;          <div class=""row"">&#xD;&#xA;            <div class=""col"">&#xD;&#xA;              1 of 3&#xD;&#xA;            </div>&#xD;&#xA;            <div class=""col"">&#xD;&#xA;              1 of 3&#xD;&#xA;            </div>&#xD;&#xA;            <div class=""col"">&#xD;&#xA;              1 of 3&#xD;&#xA;            </div>&#xD;&#xA;          </div>&#xD;&#xA;        </div>"
-152926602274958619,21,5,"    <!DOCTYPE html>&#xD;&#xA;    <html>&#xD;&#xA;        <head>&#xD;&#xA;            <meta charset=""utf-8"">&#xD;&#xA;            <title>A Simple Page with CKEditor</title>&#xD;&#xA;            <!-- Make sure the path to CKEditor is correct. -->&#xD;&#xA;            <script src=""../ckeditor.js""></script>&#xD;&#xA;        </head>&#xD;&#xA;        <body>&#xD;&#xA;            <form>&#xD;&#xA;                <textarea name=""editor1"" id=""editor1"" rows=""10"" cols=""80"">&#xD;&#xA;                    This is my textarea to be replaced with CKEditor.&#xD;&#xA;                </textarea>&#xD;&#xA;                <script>&#xD;&#xA;                    // Replace the <textarea id=""editor1""> with a CKEditor&#xD;&#xA;                    // instance, using default configuration.&#xD;&#xA;                    CKEDITOR.replace( 'editor1' );&#xD;&#xA;                </script>&#xD;&#xA;            </form>&#xD;&#xA;        </body>&#xD;&#xA;    </html>"
-8766138130181390949,21,5,"    <?xml version=""1.0""?>&#xD;&#xA;    <class>&#xD;&#xA;    	<student rollno=""393"">&#xD;&#xA;    		<firstname>dinkar</firstname>&#xD;&#xA;    		<lastname>kad</lastname>&#xD;&#xA;    		<nickname>dinkar</nickname>&#xD;&#xA;    		<marks>85</marks>&#xD;&#xA;    	</student>&#xD;&#xA;    	<student rollno=""493"">&#xD;&#xA;    		<firstname>Vaneet</firstname>&#xD;&#xA;    		<lastname>Gupta</lastname>&#xD;&#xA;    		<nickname>vinni</nickname>&#xD;&#xA;    		<marks>95</marks>&#xD;&#xA;    	</student>&#xD;&#xA;    	<student rollno=""593"">&#xD;&#xA;    		<firstname>jasvir</firstname>&#xD;&#xA;    		<lastname>singn</lastname>&#xD;&#xA;    		<nickname>jazz</nickname>&#xD;&#xA;    		<marks>90</marks>&#xD;&#xA;    	</student>&#xD;&#xA;    </class>"
3757772665335477872,21,5,"    <!DOCTYPE html>&#xD;&#xA;       <html>&#xD;&#xA;         <head>&#xD;&#xA;           <title><%= full_title(yield(:title)) %></title>&#xD;&#xA;           <%= stylesheet_link_tag    ""application"", media: ""all"" %>&#xD;&#xA;           <%= javascript_include_tag ""application"" %>&#xD;&#xA;           <%= csrf_meta_tags %>&#xD;&#xA;           <%= render 'layouts/shim' %>    &#xD;&#xA;         </head>&#xD;&#xA;         <body>&#xD;&#xA;           <%= render 'layouts/header' %>&#xD;&#xA;           <div class=""container"">&#xD;&#xA;             <% flash.each do |key, value| %>&#xD;&#xA;               <div class=""alert alert-<%= key %>""><%= value %></div>&#xD;&#xA;             <% end %>&#xD;&#xA;             <%= yield %>&#xD;&#xA;             <%= render 'layouts/footer' %>&#xD;&#xA;             <%= debug(params) if Rails.env.development? %>&#xD;&#xA;           </div>&#xD;&#xA;         </body>&#xD;&#xA;       </html>"
4140762277675166199,21,5,"        <?xml version=""1.0"" encoding=""utf-8""?>&#xD;&#xA;        <TabHost&#xD;&#xA;        	xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;        	android:id=""@android:id/tabhost""&#xD;&#xA;        	android:layout_width=""fill_parent""&#xD;&#xA;        	android:layout_height=""fill_parent"">&#xD;&#xA;        	<RelativeLayout&#xD;&#xA;        		android:layout_height=""fill_parent""&#xD;&#xA;        		android:layout_width=""fill_parent"">&#xD;&#xA;        		<TabWidget&#xD;&#xA;        			android:id=""@android:id/tabs""&#xD;&#xA;        			android:layout_alignParentBottom=""true""&#xD;&#xA;        			android:layout_width=""fill_parent""&#xD;&#xA;        			android:layout_height=""wrap_content"" />&#xD;&#xA;        		<FrameLayout&#xD;&#xA;        			android:id=""@android:id/tabcontent""&#xD;&#xA;        			android:layout_width=""fill_parent""&#xD;&#xA;        			android:layout_height=""fill_parent""&#xD;&#xA;        			android:padding=""5dp"" />&#xD;&#xA;        	</RelativeLayout>&#xD;&#xA;    </TabHost>"
-6910607690328953548,22,5,"        <activity&#xD;&#xA;        android:name=""com.example.android.GizmosActivity""&#xD;&#xA;        android:label=""@string/title_gizmos"" >&#xD;&#xA;        <intent-filter android:label=""@string/filter_view_http_gizmos"">&#xD;&#xA;            <action android:name=""android.intent.action.VIEW"" />&#xD;&#xA;            <category android:name=""android.intent.category.DEFAULT"" />&#xD;&#xA;            <category android:name=""android.intent.category.BROWSABLE"" />&#xD;&#xA;            <!-- Accepts URIs that begin with ""http://www.example.com/gizmos” -->&#xD;&#xA;            <data android:scheme=""http""&#xD;&#xA;                  android:host=""www.example.com""&#xD;&#xA;                  android:pathPrefix=""/gizmos"" />&#xD;&#xA;            <!-- note that the leading ""/"" is required for pathPrefix-->&#xD;&#xA;        </intent-filter>&#xD;&#xA;        <intent-filter android:label=""@string/filter_view_example_gizmos"">&#xD;&#xA;            <action android:name=""android.intent.action.VIEW"" />&#xD;&#xA;            <category android:name=""android.intent.category.DEFAULT"" />&#xD;&#xA;            <category android:name=""android.intent.category.BROWSABLE"" />&#xD;&#xA;            <!-- Accepts URIs that begin with ""example://gizmos” -->&#xD;&#xA;            <data android:scheme=""example""&#xD;&#xA;                  android:host=""gizmos"" />&#xD;&#xA;        </intent-filter>&#xD;&#xA;    </activity>"
-57501776612634495,22,5,"     Properties props = new Properties();&#xD;&#xA;        //IMAPS protocol&#xD;&#xA;        props.setProperty(“mail.store.protocol”, “imaps”);&#xD;&#xA;        //Set host address&#xD;&#xA;        props.setProperty(“mail.imaps.host”, imaps.gmail.com);&#xD;&#xA;        //Set specified port&#xD;&#xA;        props.setProperty(“mail.imaps.port”, “993″);&#xD;&#xA;        //Using SSL&#xD;&#xA;        props.setProperty(“mail.imaps.socketFactory.class”, “javax.net.ssl.SSLSocketFactory”);&#xD;&#xA;        props.setProperty(“mail.imaps.socketFactory.fallback”, “false”);&#xD;&#xA;        //Setting IMAP session&#xD;&#xA;        Session imapSession = Session.getInstance(props);&#xD;&#xA;    &#xD;&#xA;    Store store = imapSession.getStore(“imaps”);&#xD;&#xA;    //Connect to server by sending username and password.&#xD;&#xA;    //Example mailServer = imap.gmail.com, username = abc, password = abc&#xD;&#xA;    store.connect(mailServer, account.username, account.password);&#xD;&#xA;    //Get all mails in Inbox Forlder&#xD;&#xA;    inbox = store.getFolder(“Inbox”);&#xD;&#xA;    inbox.open(Folder.READ_ONLY);&#xD;&#xA;    //Return result to array of message&#xD;&#xA;    Message[] result = inbox.getMessages();"
9199791285607697253,22,5,"        <?xml version=""1.0"" encoding=""UTF-8""?>&#xD;&#xA;    <web-app xmlns=""http://xmlns.jcp.org/xml/ns/javaee""&#xD;&#xA;             xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""&#xD;&#xA;             xsi:schemaLocation=""http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd""&#xD;&#xA;             version=""3.1"">&#xD;&#xA;        <context-param>&#xD;&#xA;            <param-name>contextConfigLocation</param-name>&#xD;&#xA;            <param-value>/WEB-INF/applicationContext.xml</param-value>&#xD;&#xA;        </context-param>&#xD;&#xA;        <listener>&#xD;&#xA;            <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>&#xD;&#xA;        </listener>&#xD;&#xA;        <servlet>&#xD;&#xA;            <servlet-name>dispatcher</servlet-name>&#xD;&#xA;            <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>&#xD;&#xA;            <load-on-startup>1</load-on-startup>&#xD;&#xA;        </servlet>&#xD;&#xA;        <servlet-mapping>&#xD;&#xA;            <servlet-name>dispatcher</servlet-name>&#xD;&#xA;            <url-pattern>/</url-pattern>&#xD;&#xA;        </servlet-mapping>&#xD;&#xA;    </web-app>"
-8606461696064080768,22,5,"      <?xml version=""1.0"" encoding=""utf-8""?>&#xD;&#xA;        <LinearLayout xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;                      android:id=""@+id/progress_indicator""&#xD;&#xA;                      android:orientation=""vertical""&#xD;&#xA;                      android:layout_centerInParent=""true""&#xD;&#xA;                      android:layout_width=""fill_parent""&#xD;&#xA;                      android:layout_height=""fill_parent"">&#xD;&#xA;        &#xD;&#xA;            <ProgressBar android:id=""@android:id/progress""&#xD;&#xA;                         style=""?android:attr/progressBarStyleLarge""&#xD;&#xA;                         android:layout_gravity=""center""&#xD;&#xA;                         android:layout_width=""wrap_content""&#xD;&#xA;                         android:layout_height=""wrap_content""/>&#xD;&#xA;        &#xD;&#xA;            <TextView android:paddingTop=""5dip""&#xD;&#xA;                      android:layout_width=""wrap_content""&#xD;&#xA;                      android:layout_height=""wrap_content""&#xD;&#xA;                      android:layout_gravity=""center""&#xD;&#xA;                      android:text=""loading""&#xD;&#xA;                      android:textSize=""14sp""&#xD;&#xA;                      android:textColor=""?android:attr/textColorPrimary""/>&#xD;&#xA;        </LinearLayout>"
-6733886874613986677,22,5,"    <!-- Button trigger modal -->&#xD;&#xA;    <button class=""btn btn-primary btn-lg"" data-toggle=""modal"" data-target=""#myModal"">&#xD;&#xA;        Launch demo modal&#xD;&#xA;    </button>&#xD;&#xA;    <!-- Modal -->&#xD;&#xA;    <div class=""modal fade"" id=""myModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"">&#xD;&#xA;    <div class=""modal-dialog"">&#xD;&#xA;    <div class=""modal-content"">&#xD;&#xA;      <div class=""modal-header"">&#xD;&#xA;        <button type=""button"" class=""close"" data-dismiss=""modal"" aria-hidden=""true"">&times;</button>&#xD;&#xA;        <h4 class=""modal-title"" id=""myModalLabel"">Modal title</h4>&#xD;&#xA;      </div>&#xD;&#xA;      <div class=""modal-body"">&#xD;&#xA;        ...&#xD;&#xA;      </div>&#xD;&#xA;      <div class=""modal-footer"">&#xD;&#xA;        <button type=""button"" class=""btn btn-default"" data-dismiss=""modal"">Close</button>&#xD;&#xA;        <button type=""button"" class=""btn btn-primary"">Save changes</button>&#xD;&#xA;      </div>&#xD;&#xA;    </div><!-- /.modal-content -->&#xD;&#xA;    </div><!-- /.modal-dialog -->&#xD;&#xA;    </div><!-- /.modal -->"
4261672268486998438,22,5,"     switch (new Date().getDay()) {&#xD;&#xA;    case 0:&#xD;&#xA;        day = ""Sunday"";&#xD;&#xA;        break;&#xD;&#xA;    case 1:&#xD;&#xA;        day = ""Monday"";&#xD;&#xA;        break;&#xD;&#xA;    case 2:&#xD;&#xA;        day = ""Tuesday"";&#xD;&#xA;        break;&#xD;&#xA;    case 3:&#xD;&#xA;        day = ""Wednesday"";&#xD;&#xA;        break;&#xD;&#xA;    case 4:&#xD;&#xA;        day = ""Thursday"";&#xD;&#xA;        break;&#xD;&#xA;    case 5:&#xD;&#xA;        day = ""Friday"";&#xD;&#xA;        break;&#xD;&#xA;    case  6:&#xD;&#xA;        day = ""Saturday"";&#xD;&#xA;}"
-5834951289763485023,22,5,        ...&#xD;&#xA;      <profiles>&#xD;&#xA;        <profile>&#xD;&#xA;          <id>default-tools.jar</id>&#xD;&#xA;          <activation>&#xD;&#xA;            <property>&#xD;&#xA;              <name>java.vendor</name>&#xD;&#xA;              <value>Sun Microsystems Inc.</value>&#xD;&#xA;            </property>&#xD;&#xA;          </activation>&#xD;&#xA;          <dependencies>&#xD;&#xA;            <dependency>&#xD;&#xA;              <groupId>com.sun</groupId>&#xD;&#xA;              <artifactId>tools</artifactId>&#xD;&#xA;              <version>1.4.2</version>&#xD;&#xA;              <scope>system</scope>&#xD;&#xA;              <systemPath>${java.home}/../lib/tools.jar</systemPath>&#xD;&#xA;            </dependency>&#xD;&#xA;          </dependencies>&#xD;&#xA;        </profile>&#xD;&#xA;      </profiles>&#xD;&#xA;      ...
6056079521929298945,22,5,"// Parameters for SetExpressCheckout, which will be sent to PayPal<br/>&#xD;&#xA;$padata['L_BILLINGAGREEMENTDESCRIPTION0']	= 'Product description';&#xD;&#xA;$padata['L_BILLINGAGREEMENTDESCRIPTION0']	= $padata['L_BILLINGAGREEMENTDESCRIPTION0'] . &#xD;&#xA;' $'.$product->price.'/month';&#xD;&#xA;$padata['L_PAYMENTREQUEST_0_DESC0']			= $padata['L_BILLINGAGREEMENTDESCRIPTION0'] . &#xD;&#xA;' $'.$product->price.'/month';<br/>$padata['PAYMENTREQUEST_0_NOTIFYURL']		= 'http://site_url/paypal/ipn';&#xD;&#xA;$padata['PAYMENTREQUEST_0_DESC']			= $product->name;&#xD;&#xA;$padata['RETURNURL']						= 'http://site_url/paypal/returnurl';&#xD;&#xA;$padata['CANCELURL']						= 'http://site_url/paypal/cancelurl';<br/>&#xD;&#xA;$padata['PAYMENTREQUEST_0_CURRENCYCODE']	= 'USD';&#xD;&#xA;$padata['PAYMENTREQUEST_0_PAYMENTACTION']	= 'SALE';&#xD;&#xA;$padata['PAYMENTREQUEST_0_ITEMAMT']	= $product->price;<br/>$padata['PAYMENTREQUEST_0_AMT']		= $product->price;<br/>$padata['L_BILLINGTYPE0']			= 'RecurringPayments';<br/>$padata['L_PAYMENTREQUEST_0_NAME0']	= $product->name;<br/>$padata['L_PAYMENTREQUEST_0_NUMBER0']= '322';<br/>$padata['L_PAYMENTREQUEST_0_QTY0']	= '1';<br/>$padata['L_PAYMENTREQUEST_0_AMT0']	= $product->price;<br/>&#xD;&#xA;$paypal_data			= http_build_query($padata);&#xD;&#xA;$httpParsedResponseAr	= $this->PPHttpPost('SetExpressCheckout', $paypal_data);&#xD;&#xA;//Respond according to message we receive from Paypal&#xD;&#xA;if(""SUCCESS"" == strtoupper($httpParsedResponseAr[""ACK""]) || ""SUCCESSWITHWARNING"" == strtoupper($httpParsedResponseAr[""ACK""])){&#xD;&#xA;	//Redirect user to PayPal store with Token received.&#xD;&#xA;	$paypalurl ='https://www.paypal.com/cgi-bin/webscr?cmd=_express-checkout&token='.$httpParsedResponseAr[""TOKEN""].'';&#xD;&#xA;	header('Location: '.$paypalurl);&#xD;&#xA;}else{&#xD;&#xA;	echo '<div style=""color:red""><b>Error : </b>'.urldecode($httpParsedResponseAr[""L_LONGMESSAGE0""]).'</div>';<br/>&#xD;&#xA;}"
-7906196217414229085,22,5,    export class EmpInfo {&#xD;&#xA;        EmpKey: number;&#xD;&#xA;        EmpID: string;&#xD;&#xA;        Firstname: string;&#xD;&#xA;        LastName: string;&#xD;&#xA;        EmpStat: string;&#xD;&#xA;        StartDate: Date;&#xD;&#xA;        AdjustedStart: Date;&#xD;&#xA;        Anniversary: number;&#xD;&#xA;        PTOYear: number;&#xD;&#xA;        STDLTD: number;&#xD;&#xA;        Uncharged: number;&#xD;&#xA;        ETOEarned: number;&#xD;&#xA;        ETORequests: number;&#xD;&#xA;        ETORemaining: number;&#xD;&#xA;        PTOBase: number;&#xD;&#xA;        PTOCarry: number;&#xD;&#xA;        PTOBorrowed: number;&#xD;&#xA;        PTOBalance: number;&#xD;&#xA;        PTORequests: number;&#xD;&#xA;        PTORemaining: number;&#xD;&#xA;    }
-5409655032473340163,22,5,"    # built application files&#xD;&#xA;    *.apk&#xD;&#xA;    *.ap_&#xD;&#xA;    # files for the dex VM&#xD;&#xA;    *.dex&#xD;&#xA;    # Java class files&#xD;&#xA;    *.class&#xD;&#xA;    # generated files&#xD;&#xA;    bin/&#xD;&#xA;    gen/&#xD;&#xA;    # Local configuration file (sdk path, etc)&#xD;&#xA;    local.properties&#xD;&#xA;    # Eclipse project files&#xD;&#xA;    .classpath&#xD;&#xA;    .project&#xD;&#xA;    # Proguard folder generated by Eclipse&#xD;&#xA;    proguard/&#xD;&#xA;    # Intellij project files&#xD;&#xA;    *.iml&#xD;&#xA;    *.ipr&#xD;&#xA;    *.iws&#xD;&#xA;    .idea/"
-6037093443870245211,22,5,"    //Check for any member with given name, whether var, func, class, union, enum.&#xD;&#xA;    #define CREATE_MEMBER_CHECK(member)                                         \&#xD;&#xA;                                                                                \&#xD;&#xA;    template<typename T, typename = std::true_type>                             \&#xD;&#xA;    struct Alias_##member;                                                      \&#xD;&#xA;                                                                                \&#xD;&#xA;    template<typename T>                                                        \&#xD;&#xA;    struct Alias_##member <                                                     \&#xD;&#xA;        T, std::integral_constant<bool, got_type<decltype(&T::member)>::value>  \&#xD;&#xA;    > { static const decltype(&T::member) value; };                             \&#xD;&#xA;                                                                                \&#xD;&#xA;    struct AmbiguitySeed_##member { char member; };                             \&#xD;&#xA;                                                                                \&#xD;&#xA;    template<typename T>                                                        \&#xD;&#xA;    struct has_member_##member {                                                \&#xD;&#xA;        static const bool value                                                 \&#xD;&#xA;            = has_member<                                                       \&#xD;&#xA;                Alias_##member<ambiguate<T, AmbiguitySeed_##member>>            \&#xD;&#xA;                , Alias_##member<AmbiguitySeed_##member>                        \&#xD;&#xA;            >::value                                                            \&#xD;&#xA;        ;                                                                       \&#xD;&#xA;    }"
-3471792814448615190,23,5,"    <nav class=""navbar navbar-expand-lg navbar-light bg-light"">&#xD;&#xA;      <a class=""navbar-brand"" href=""#"">Navbar</a>&#xD;&#xA;      <button class=""navbar-toggler"" type=""button"" data-toggle=""collapse"" data-target=""#navbarSupportedContent"" aria-controls=""navbarSupportedContent"" aria-expanded=""false"" aria-label=""Toggle navigation"">&#xD;&#xA;        <span class=""navbar-toggler-icon""></span>&#xD;&#xA;      </button>&#xD;&#xA;      <div class=""collapse navbar-collapse"" id=""navbarSupportedContent"">&#xD;&#xA;        <ul class=""navbar-nav mr-auto"">&#xD;&#xA;          <li class=""nav-item active"">&#xD;&#xA;            <a class=""nav-link"" href=""#"">Home <span class=""sr-only"">(current)</span></a>&#xD;&#xA;          </li>&#xD;&#xA;          <li class=""nav-item"">&#xD;&#xA;            <a class=""nav-link"" href=""#"">Link</a>&#xD;&#xA;          </li>&#xD;&#xA;          <li class=""nav-item"">&#xD;&#xA;            <a class=""nav-link disabled"" href=""#"">Disabled</a>&#xD;&#xA;          </li>&#xD;&#xA;        </ul>&#xD;&#xA;        <form class=""form-inline my-2 my-lg-0"">&#xD;&#xA;          <input class=""form-control mr-sm-2"" type=""text"" placeholder=""Search"" aria-label=""Search"">&#xD;&#xA;          <button class=""btn btn-outline-success my-2 my-sm-0"" type=""submit"">Search</button>&#xD;&#xA;        </form>&#xD;&#xA;      </div>&#xD;&#xA;    </nav>"
7376288767944985063,23,5,    sound/                          Top-level package&#xD;&#xA;          __init__.py               Initialize the sound package&#xD;&#xA;          formats/                  Subpackage for file format conversions&#xD;&#xA;                  __init__.py&#xD;&#xA;                  wavread.py&#xD;&#xA;                  wavwrite.py&#xD;&#xA;                  aiffread.py&#xD;&#xA;                  aiffwrite.py&#xD;&#xA;                  auread.py&#xD;&#xA;                  auwrite.py&#xD;&#xA;                  ...&#xD;&#xA;          effects/                  Subpackage for sound effects&#xD;&#xA;                  __init__.py&#xD;&#xA;                  echo.py&#xD;&#xA;                  surround.py&#xD;&#xA;                  reverse.py&#xD;&#xA;                  ...&#xD;&#xA;          filters/                  Subpackage for filters&#xD;&#xA;                  __init__.py&#xD;&#xA;                  equalizer.py&#xD;&#xA;                  vocoder.py&#xD;&#xA;                  karaoke.py&#xD;&#xA;                  ...
3347069031461072780,23,5,    <div id='cssmenu'>&#xD;&#xA;    <ul>&#xD;&#xA;       <li class='active'><a href='index.html'><span>Home</span></a></li>&#xD;&#xA;       <li class='has-sub'><a href='#'><span>Products</span></a>&#xD;&#xA;          <ul>&#xD;&#xA;             <li class='has-sub'><a href='#'><span>Product 1</span></a>&#xD;&#xA;                <ul>&#xD;&#xA;                   <li><a href='#'><span>Sub Item</span></a></li>&#xD;&#xA;                   <li class='last'><a href='#'><span>Sub Item</span></a></li>&#xD;&#xA;                </ul>&#xD;&#xA;             </li>&#xD;&#xA;             <li class='has-sub'><a href='#'><span>Product 2</span></a>&#xD;&#xA;                <ul>&#xD;&#xA;                   <li><a href='#'><span>Sub Item</span></a></li>&#xD;&#xA;                   <li class='last'><a href='#'><span>Sub Item</span></a></li>&#xD;&#xA;                </ul>&#xD;&#xA;             </li>&#xD;&#xA;          </ul>&#xD;&#xA;       </li>&#xD;&#xA;       <li><a href='#'><span>About</span></a></li>&#xD;&#xA;       <li class='last'><a href='#'><span>Contact</span></a></li>&#xD;&#xA;    </ul>&#xD;&#xA;    </div>
-8527709252816812069,23,5,    +--docProps&#xD;&#xA;    |  +  app.xml&#xD;&#xA;    |  \  core.xml&#xD;&#xA;    +  res.log&#xD;&#xA;    +--word //this folder contains most of the files that control the content of the document&#xD;&#xA;    |  +  document.xml //Is the actual content of the document&#xD;&#xA;    |  +  endnotes.xml&#xD;&#xA;    |  +  fontTable.xml&#xD;&#xA;    |  +  footer1.xml //Containst the elements in the footer of the document&#xD;&#xA;    |  +  footnotes.xml&#xD;&#xA;    |  +--media //This folder contains all images embedded in the word&#xD;&#xA;    |  |  \  image1.jpeg&#xD;&#xA;    |  +  settings.xml&#xD;&#xA;    |  +  styles.xml&#xD;&#xA;    |  +  stylesWithEffects.xml&#xD;&#xA;    |  +--theme&#xD;&#xA;    |  |  \  theme1.xml&#xD;&#xA;    |  +  webSettings.xml&#xD;&#xA;    |  \--_rels&#xD;&#xA;    |     \  document.xml.rels //this document tells word where the images are situated&#xD;&#xA;    +  [Content_Types].xml&#xD;&#xA;    \--_rels&#xD;&#xA;       \  .rels
856893183751787001,23,5,"    <link href=""//cdn.datatables.net/1.10.7/css/jquery.dataTables.min.css"" rel=""stylesheet"" />&#xD;&#xA;    <script src=""https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js""></script> &#xD;&#xA;    <script src=""//cdn.datatables.net/1.10.7/js/jquery.dataTables.min.js""></script>&#xD;&#xA;    <table id=""example"" class=""display"">&#xD;&#xA;    <thead>&#xD;&#xA;        <tr>&#xD;&#xA;            <th></th>&#xD;&#xA;            <th>Name</th>&#xD;&#xA;            <th>Position</th>&#xD;&#xA;            <th>Office</th>&#xD;&#xA;            <th>Salary</th>&#xD;&#xA;        </tr>&#xD;&#xA;    </thead>&#xD;&#xA;    <tfoot>&#xD;&#xA;        <tr>&#xD;&#xA;            <th></th>&#xD;&#xA;            <th>Name</th>&#xD;&#xA;            <th>Position</th>&#xD;&#xA;            <th>Office</th>&#xD;&#xA;            <th>Salary</th>&#xD;&#xA;        </tr>&#xD;&#xA;    </tfoot>&#xD;&#xA;    </table>"
-2777920593735668225,23,5,"    <selector xmlns:android=""http://schemas.android.com/apk/res/android"">&#xD;&#xA;        <item>&#xD;&#xA;            <layer-list>&#xD;&#xA;                <item android:right=""5dp"" android:top=""5dp"">&#xD;&#xA;                    <shape>&#xD;&#xA;                        <corners android:radius=""3dp"" />&#xD;&#xA;                        <solid android:color=""#D6D6D6"" />&#xD;&#xA;                    </shape>&#xD;&#xA;                </item>&#xD;&#xA;                <item android:bottom=""2dp"" android:left=""2dp"">&#xD;&#xA;                    <shape>&#xD;&#xA;                        <gradient android:angle=""270"" &#xD;&#xA;                            android:endColor=""#E2E2E2"" android:startColor=""#BABABA"" />&#xD;&#xA;                        <stroke android:width=""1dp"" android:color=""#BABABA"" />&#xD;&#xA;                        <corners android:radius=""4dp"" />&#xD;&#xA;                        <padding android:bottom=""10dp"" android:left=""10dp"" &#xD;&#xA;                            android:right=""10dp"" android:top=""10dp"" />&#xD;&#xA;                    </shape>&#xD;&#xA;                </item>&#xD;&#xA;            </layer-list>&#xD;&#xA;        </item>&#xD;&#xA;        &#xD;&#xA;        </selector>"
4212625288308591662,23,5,"             var galData = JSON.parse(IDData);&#xD;&#xA;    var startnodes = [];&#xD;&#xA;    var endnodes = [];&#xD;&#xA;    var startnodetype = [];&#xD;&#xA;    var endnodetype = [];&#xD;&#xA;    var SendTime = [];&#xD;&#xA;    var PayTime = [];&#xD;&#xA;    var Total_Amt = [];&#xD;&#xA;    var Depth = [];&#xD;&#xA;    galData.map(function(e, i) {&#xD;&#xA;      startnodes.push(e[0]);&#xD;&#xA;      endnodes.push(e[1]);&#xD;&#xA;      startnodetype.push(e[2]);&#xD;&#xA;      endnodetype.push(e[3]);&#xD;&#xA;      SendTime.push(e[4]);&#xD;&#xA;      PayTime.push(e[5]);&#xD;&#xA;      Total_Amt.push(e[6]);&#xD;&#xA;      Depth.push(e[7]);&#xD;&#xA;    });&#xD;&#xA;    var final_data = createNodes(startnodes, endnodes, startnodetype, endnodetype, SendTime, PayTime, Total_Amt, Depth);&#xD;&#xA;    makeGraph(""#Network_graph"", final_data);&#xD;&#xA;     &#xD;&#xA;        "
-1893421422988386272,23,5,"    public String getTypeOfDayWithSwitchStatement(String dayOfWeekArg) {&#xD;&#xA;         String typeOfDay;&#xD;&#xA;         switch (dayOfWeekArg) {&#xD;&#xA;             case ""Monday"":&#xD;&#xA;                 typeOfDay = ""Start of work week"";&#xD;&#xA;                 break;&#xD;&#xA;             case ""Tuesday"":&#xD;&#xA;             case ""Wednesday"":&#xD;&#xA;             case ""Thursday"":&#xD;&#xA;                 typeOfDay = ""Midweek"";&#xD;&#xA;                 break;&#xD;&#xA;             case ""Friday"":&#xD;&#xA;                 typeOfDay = ""End of work week"";&#xD;&#xA;                 break;&#xD;&#xA;             case ""Saturday"":&#xD;&#xA;             case ""Sunday"":&#xD;&#xA;                 typeOfDay = ""Weekend"";&#xD;&#xA;                 break;&#xD;&#xA;             default:&#xD;&#xA;                 throw new IllegalArgumentException(""Invalid day of the week: "" + dayOfWeekArg);&#xD;&#xA;         }&#xD;&#xA;         return typeOfDay;&#xD;&#xA;    }"
-6594631667706762663,24,5,    /usr/bin/ld: /usr/lib/debug/usr/lib/x86_64-linux-gnu/crt1.o(.debug_info): relocation 0 has invalid symbol index 11&#xD;&#xA;	/usr/bin/ld: /usr/lib/debug/usr/lib/x86_64-linux-gnu/crt1.o(.debug_info): relocation 1 has invalid symbol index 12&#xD;&#xA;	/usr/bin/ld: /usr/lib/debug/usr/lib/x86_64-linux-gnu/crt1.o(.debug_info): relocation 2 has invalid symbol index 2&#xD;&#xA;	/usr/bin/ld: /usr/lib/debug/usr/lib/x86_64-linux-gnu/crt1.o(.debug_info): relocation 3 has invalid symbol index 2&#xD;&#xA;	/usr/bin/ld: /usr/lib/debug/usr/lib/x86_64-linux-gnu/crt1.o(.debug_info): relocation 4 has invalid symbol index 11&#xD;&#xA;	/usr/bin/ld: /usr/lib/debug/usr/lib/x86_64-linux-gnu/crt1.o(.debug_info): relocation 5 has invalid symbol index 13&#xD;&#xA;	/usr/bin/ld: /usr/lib/debug/usr/lib/x86_64-linux-gnu/crt1.o(.debug_info): relocation 6 has invalid symbol index 13&#xD;&#xA;	/usr/bin/ld: /usr/lib/debug/usr/lib/x86_64-linux-gnu/crt1.o(.debug_info): relocation 7 has invalid symbol index 13&#xD;&#xA;	/usr/bin/ld: /usr/lib/debug/usr/lib/x86_64-linux-gnu/crt1.o(.debug_info): relocation 8 has invalid symbol index 12&#xD;&#xA;	/usr/bin/ld: /usr/lib/debug/usr/lib/x86_64-linux-gnu/crt1.o(.debug_info): relocation 9 has invalid symbol index 13&#xD;&#xA;	/usr/bin/ld: /usr/lib/debug/usr/lib/x86_64-linux-gnu/crt1.o(.debug_info): relocation 10 has invalid symbol index 13&#xD;&#xA;	/usr/bin/ld: /usr/lib/debug/usr/lib/x86_64-linux-gnu/crt1.o(.debug_info): relocation 11 has invalid symbol index 13&#xD;&#xA;	/usr/bin/ld: /usr/lib/debug/usr/lib/x86_64-linux-gnu/crt1.o(.debug_info): relocation 12 has invalid symbol index 13&#xD;&#xA;	/usr/bin/ld: /usr/lib/debug/usr/lib/x86_64-linux-gnu/crt1.o(.debug_info): relocation 13 has invalid symbol index 13&#xD;&#xA;	/usr/bin/ld: /usr/lib/debug/usr/lib/x86_64-linux-gnu/crt1.o(.debug_info): relocation 14 has invalid symbol index 13&#xD;&#xA;	/usr/bin/ld: /usr/lib/debug/usr/lib/x86_64-linux-gnu/crt1.o(.debug_info): relocation 15 has invalid symbol index 13&#xD;&#xA;	/usr/bin/ld: /usr/lib/debug/usr/lib/x86_64-linux-gnu/crt1.o(.debug_info): relocation 16 has invalid symbol index 13&#xD;&#xA;	/usr/bin/ld: /usr/lib/debug/usr/lib/x86_64-linux-gnu/crt1.o(.debug_info): relocation 17 has invalid symbol index 13&#xD;&#xA;	/usr/bin/ld: /usr/lib/debug/usr/lib/x86_64-linux-gnu/crt1.o(.debug_info): relocation 18 has invalid symbol index 13&#xD;&#xA;	/usr/bin/ld: /usr/lib/debug/usr/lib/x86_64-linux-gnu/crt1.o(.debug_info): relocation 19 has invalid symbol index 21&#xD;&#xA;	/usr/bin/ld: /usr/lib/debug/usr/lib/x86_64-linux-gnu/crt1.o(.debug_line): relocation 0 has invalid symbol index 2&#xD;&#xA;	/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../x86_64-linux-gnu/crt1.o: In function `_start':&#xD;&#xA;	(.text+0x20): undefined reference to `main'&#xD;&#xA;	collect2: error: ld returned 1 exit status
-6101385667276464332,24,5,"    function mysql_real_escape_string (str) {&#xD;&#xA;        return str.replace(/[\0\x08\x09\x1a\n\r""'\\\%]/g, function (char) {&#xD;&#xA;            switch (char) {&#xD;&#xA;                case ""\0"":&#xD;&#xA;                    return ""\\0"";&#xD;&#xA;                case ""\x08"":&#xD;&#xA;                    return ""\\b"";&#xD;&#xA;                case ""\x09"":&#xD;&#xA;                    return ""\\t"";&#xD;&#xA;                case ""\x1a"":&#xD;&#xA;                    return ""\\z"";&#xD;&#xA;                case ""\n"":&#xD;&#xA;                    return ""\\n"";&#xD;&#xA;                case ""\r"":&#xD;&#xA;                    return ""\\r"";&#xD;&#xA;                case ""\"""":&#xD;&#xA;                case ""'"":&#xD;&#xA;                case ""\\"":&#xD;&#xA;                case ""%"":&#xD;&#xA;                    return ""\\""+char; // prepends a backslash to backslash, percent,&#xD;&#xA;                                      // and double/single quotes&#xD;&#xA;            }&#xD;&#xA;        });&#xD;&#xA;    }"
6866962704847534031,24,5,"    <nav>&#xD;&#xA;	<ul>&#xD;&#xA;		<li><a href=""#"">Home</a></li>&#xD;&#xA;		<li><a href=""#"">Tutorials</a>&#xD;&#xA;			<ul>&#xD;&#xA;				<li><a href=""#"">Photoshop</a></li>&#xD;&#xA;				<li><a href=""#"">Illustrator</a></li>&#xD;&#xA;				<li><a href=""#"">Web Design</a>&#xD;&#xA;					<ul>&#xD;&#xA;						<li><a href=""#"">HTML</a></li>&#xD;&#xA;						<li><a href=""#"">CSS</a></li>&#xD;&#xA;					</ul>&#xD;&#xA;				</li>&#xD;&#xA;			</ul>&#xD;&#xA;		</li>&#xD;&#xA;		<li><a href=""#"">Articles</a>&#xD;&#xA;			<ul>&#xD;&#xA;				<li><a href=""#"">Web Design</a></li>&#xD;&#xA;				<li><a href=""#"">User Experience</a></li>&#xD;&#xA;			</ul>&#xD;&#xA;		</li>&#xD;&#xA;		<li><a href=""#"">Inspiration</a></li>&#xD;&#xA;	</ul>&#xD;&#xA;    </nav>"
-3629284646128165230,24,5,"    enum {&#xD;&#xA;       UIControlEventTouchDown           = 1 <<  0,&#xD;&#xA;       UIControlEventTouchDownRepeat     = 1 <<  1,&#xD;&#xA;       UIControlEventTouchDragInside     = 1 <<  2,&#xD;&#xA;       UIControlEventTouchDragOutside    = 1 <<  3,&#xD;&#xA;       UIControlEventTouchDragEnter      = 1 <<  4,&#xD;&#xA;       UIControlEventTouchDragExit       = 1 <<  5,&#xD;&#xA;       UIControlEventTouchUpInside       = 1 <<  6,&#xD;&#xA;       UIControlEventTouchUpOutside      = 1 <<  7,&#xD;&#xA;       UIControlEventTouchCancel         = 1 <<  8,&#xD;&#xA;       &#xD;&#xA;       UIControlEventValueChanged        = 1 << 12,&#xD;&#xA;       &#xD;&#xA;       UIControlEventEditingDidBegin     = 1 << 16,&#xD;&#xA;       UIControlEventEditingChanged      = 1 << 17,&#xD;&#xA;       UIControlEventEditingDidEnd       = 1 << 18,&#xD;&#xA;       UIControlEventEditingDidEndOnExit = 1 << 19,&#xD;&#xA;       &#xD;&#xA;       UIControlEventAllTouchEvents      = 0x00000FFF,&#xD;&#xA;       UIControlEventAllEditingEvents    = 0x000F0000,&#xD;&#xA;       UIControlEventApplicationReserved = 0x0F000000,&#xD;&#xA;       UIControlEventSystemReserved      = 0xF0000000,&#xD;&#xA;       UIControlEventAllEvents           = 0xFFFFFFFF&#xD;&#xA;    };"
4409055853278240131,24,5,"	<!-- Button trigger modal -->&#xD;&#xA;	<button type=""button"" class=""btn btn-primary"" data-toggle=""modal"" data-target=""#exampleModal"">&#xD;&#xA;	  Launch demo modal&#xD;&#xA;	</button>&#xD;&#xA;	<!-- Modal -->&#xD;&#xA;	<div class=""modal fade"" id=""exampleModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">&#xD;&#xA;	  <div class=""modal-dialog"" role=""document"">&#xD;&#xA;	    <div class=""modal-content"">&#xD;&#xA;	      <div class=""modal-header"">&#xD;&#xA;	        <h5 class=""modal-title"" id=""exampleModalLabel"">Modal title</h5>&#xD;&#xA;	        <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">&#xD;&#xA;	          <span aria-hidden=""true"">&times;</span>&#xD;&#xA;	        </button>&#xD;&#xA;	      </div>&#xD;&#xA;	      <div class=""modal-body"">&#xD;&#xA;	        ...&#xD;&#xA;	      </div>&#xD;&#xA;	      <div class=""modal-footer"">&#xD;&#xA;	        <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Close</button>&#xD;&#xA;	        <button type=""button"" class=""btn btn-primary"">Save changes</button>&#xD;&#xA;	      </div>&#xD;&#xA;	    </div>&#xD;&#xA;	  </div>&#xD;&#xA;	</div>"
3597531366225030372,24,5,    <table>&#xD;&#xA;        <thead>&#xD;&#xA;            <tr>&#xD;&#xA;                <th>Month</th>&#xD;&#xA;                <th>Savings</th>&#xD;&#xA;            </tr>&#xD;&#xA;        </thead>&#xD;&#xA;        <tfoot>&#xD;&#xA;            <tr>&#xD;&#xA;                <td>Sum</td>&#xD;&#xA;                <td>$180</td>&#xD;&#xA;            </tr>&#xD;&#xA;        </tfoot>&#xD;&#xA;        <tbody>&#xD;&#xA;            <tr>&#xD;&#xA;                <td>January</td>&#xD;&#xA;                <td>$100</td>&#xD;&#xA;            </tr>&#xD;&#xA;            <tr>&#xD;&#xA;                <td>February</td>&#xD;&#xA;                <td>$80</td>&#xD;&#xA;            </tr>&#xD;&#xA;        </tbody>&#xD;&#xA;    </table>
5289463582358515208,24,5,"        <?xml version=""1.0"" encoding=""UTF-8""?>&#xD;&#xA;        <xsl:stylesheet version=""1.0""&#xD;&#xA;        xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"">&#xD;&#xA;        <xsl:template match=""/"">&#xD;&#xA;          <html>&#xD;&#xA;          <body>&#xD;&#xA;          <h2>My CD Collection</h2>&#xD;&#xA;          <table border=""1"">&#xD;&#xA;            <tr bgcolor=""#9acd32"">&#xD;&#xA;              <th>Title</th>&#xD;&#xA;              <th>Artist</th>&#xD;&#xA;            </tr>&#xD;&#xA;            <xsl:for-each select=""catalog/cd"">&#xD;&#xA;            <tr>&#xD;&#xA;              <td><xsl:value-of select=""title""/></td>&#xD;&#xA;              <td><xsl:value-of select=""artist""/></td>&#xD;&#xA;            </tr>&#xD;&#xA;            </xsl:for-each>&#xD;&#xA;          </table>&#xD;&#xA;          </body>&#xD;&#xA;          </html>&#xD;&#xA;        </xsl:template>&#xD;&#xA;        </xsl:stylesheet>&#xD;&#xA;                    "
-350171119176863130,24,5,"        <?xml version=""1.0"" encoding=""UTF-8""?>&#xD;&#xA;        <web-app xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""&#xD;&#xA;           xmlns=""http://java.sun.com/xml/ns/javaee"" &#xD;&#xA;           xmlns:web=""http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd""&#xD;&#xA;           xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee &#xD;&#xA;           http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd""&#xD;&#xA;           id=""WebApp_ID"" version=""3.0"">&#xD;&#xA;           &#xD;&#xA;           <display-name>Struts 2</display-name>&#xD;&#xA;           <welcome-file-list>&#xD;&#xA;              <welcome-file>index.jsp</welcome-file>&#xD;&#xA;           </welcome-file-list>&#xD;&#xA;           <filter>&#xD;&#xA;          <filter-name>struts2</filter-name>&#xD;&#xA;          <filter-class>&#xD;&#xA;             org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter&#xD;&#xA;          </filter-class>&#xD;&#xA;       </filter>&#xD;&#xA;    &#xD;&#xA;       <filter-mapping>&#xD;&#xA;          <filter-name>struts2</filter-name>&#xD;&#xA;          <url-pattern>/*</url-pattern>&#xD;&#xA;       </filter-mapping>&#xD;&#xA;    </web-app>"
1870262632508754642,25,5,"    # Load DSL and Setup Up Stages&#xD;&#xA;    require 'capistrano/setup'&#xD;&#xA;    &#xD;&#xA;    # Includes default deployment tasks&#xD;&#xA;    require 'capistrano/deploy'&#xD;&#xA;    &#xD;&#xA;    # Includes tasks from other gems included in your Gemfile&#xD;&#xA;    #&#xD;&#xA;    # For documentation on these, see for example:&#xD;&#xA;    #&#xD;&#xA;    #   https://github.com/capistrano/rvm&#xD;&#xA;    #   https://github.com/capistrano/rbenv&#xD;&#xA;    #   https://github.com/capistrano/chruby&#xD;&#xA;    #   https://github.com/capistrano/bundler&#xD;&#xA;    #   https://github.com/capistrano/rails&#xD;&#xA;    #&#xD;&#xA;    # require 'capistrano/rvm'&#xD;&#xA;    # require 'capistrano/rbenv'&#xD;&#xA;    # require 'capistrano/chruby'&#xD;&#xA;    # require 'capistrano/bundler'&#xD;&#xA;    # require 'capistrano/rails/assets'&#xD;&#xA;    # require 'capistrano/rails/migrations'&#xD;&#xA;    &#xD;&#xA;    # Loads custom tasks from `lib/capistrano/tasks' if you have any defined.&#xD;&#xA;    Dir.glob('lib/capistrano/tasks/*.rake').each { |r| import r }"
-5431146642009716959,25,5,"       <!doctype html>&#xD;&#xA;     &#xD;&#xA;    <html lang=""en"">&#xD;&#xA;    <head>&#xD;&#xA;      <meta charset=""utf-8"" />&#xD;&#xA;      <title>jQuery UI Dialog - Default functionality</title>&#xD;&#xA;      <link rel=""stylesheet"" href=""http://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css"" />&#xD;&#xA;      <script src=""http://code.jquery.com/jquery-1.9.1.js""></script>&#xD;&#xA;      <script src=""http://code.jquery.com/ui/1.10.3/jquery-ui.js""></script>&#xD;&#xA;      <link rel=""stylesheet"" href=""/resources/demos/style.css"" />&#xD;&#xA;      <script>&#xD;&#xA;      $(function() {&#xD;&#xA;        $( ""#dialog"" ).dialog();&#xD;&#xA;      });&#xD;&#xA;      </script>&#xD;&#xA;    </head>&#xD;&#xA;    <body>&#xD;&#xA;     &#xD;&#xA;    <div id=""dialog"" title=""Basic dialog"">&#xD;&#xA;      <p>This is the default dialog which is useful for displaying information. The dialog window can be moved, resized and closed with the 'x' icon.</p>&#xD;&#xA;    </div>&#xD;&#xA;     &#xD;&#xA;     &#xD;&#xA;    </body>&#xD;&#xA;    </html>"
-3103225009965776635,25,5,"    <?php require_once ""Mail.php"";  &#xD;&#xA;    $from = ""Sandra Sender <sender@example.com>""; &#xD;&#xA;    $to = ""Ramona Recipient <recipient@example.com>""; &#xD;&#xA;    $subject = ""Hi!""; &#xD;&#xA;    $body = ""Hi,\n\nHow are you?"";  &#xD;&#xA;    $host = ""ssl://mail.example.com""; &#xD;&#xA;    $port = ""465""; &#xD;&#xA;    $username = ""smtp_username""; &#xD;&#xA;    $password = ""smtp_password"";  &#xD;&#xA;    $headers = array ('From' => $from,   &#xD;&#xA;                      'To' => $to,   &#xD;&#xA;                      'Subject' => $subject); &#xD;&#xA;    $smtp = Mail::factory('smtp',   &#xD;&#xA;                          array ('host' => $host,     &#xD;&#xA;                                 'port' => $port,     &#xD;&#xA;                                 'auth' => true,     &#xD;&#xA;                                 'username' => $username,     &#xD;&#xA;                                 'password' => $password));  &#xD;&#xA;    $mail = $smtp->send($to, $headers, $body);  &#xD;&#xA;    if (PEAR::isError($mail)) {   &#xD;&#xA;        echo(""<p>"" . $mail->getMessage() . ""</p>"");  &#xD;&#xA;    } else {   &#xD;&#xA;        echo(""<p>Message successfully sent!</p>"");  &#xD;&#xA;    } &#xD;&#xA;    ?>"
5076070501171871480,25,5,"        <?xml version=""1.0"" encoding=""utf-8""?>&#xD;&#xA;    <android.support.design.widget.CoordinatorLayout xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;        xmlns:app=""http://schemas.android.com/apk/res-auto""&#xD;&#xA;        xmlns:tools=""http://schemas.android.com/tools""&#xD;&#xA;        android:layout_width=""match_parent""&#xD;&#xA;        android:layout_height=""match_parent""&#xD;&#xA;        tools:context=""MainActivity"">&#xD;&#xA;    &#xD;&#xA;        <android.support.design.widget.AppBarLayout&#xD;&#xA;            android:layout_width=""match_parent""&#xD;&#xA;            android:layout_height=""wrap_content""&#xD;&#xA;            android:theme=""@style/AppTheme.AppBarOverlay"">&#xD;&#xA;    &#xD;&#xA;            <android.support.v7.widget.Toolbar&#xD;&#xA;                android:id=""@+id/toolbar""&#xD;&#xA;                android:layout_width=""match_parent""&#xD;&#xA;                android:layout_height=""?attr/actionBarSize""&#xD;&#xA;                android:background=""?attr/colorPrimary""&#xD;&#xA;                app:popupTheme=""@style/AppTheme.PopupOverlay"" />&#xD;&#xA;    &#xD;&#xA;        </android.support.design.widget.AppBarLayout>&#xD;&#xA;    &#xD;&#xA;        <include layout=""@layout/content_main"" />&#xD;&#xA;    &#xD;&#xA;    </android.support.design.widget.CoordinatorLayout>"
-5951976531200794370,25,5,"	<RelativeLayout&#xD;&#xA;		android:layout_width=""match_parent""&#xD;&#xA;		android:layout_height=""wrap_content""&#xD;&#xA;		android:layout_marginRight=""3dp""&#xD;&#xA;		android:layout_weight="".28""&#xD;&#xA;		android:background=""@drawable/spinner_border""&#xD;&#xA;		android:orientation=""horizontal"">&#xD;&#xA;		<Spinner&#xD;&#xA;			android:id=""@+id/spinner2""&#xD;&#xA;			android:layout_width=""match_parent""&#xD;&#xA;			android:layout_height=""wrap_content""&#xD;&#xA;			android:layout_centerVertical=""true""&#xD;&#xA;			android:layout_gravity=""center""&#xD;&#xA;			android:background=""@android:color/transparent""&#xD;&#xA;			android:gravity=""center""&#xD;&#xA;			android:layout_marginLeft=""5dp""&#xD;&#xA;			android:spinnerMode=""dropdown"" />&#xD;&#xA;		<ImageView&#xD;&#xA;			android:layout_width=""wrap_content""&#xD;&#xA;			android:layout_height=""wrap_content""&#xD;&#xA;			android:layout_alignParentRight=""true""&#xD;&#xA;			android:layout_centerVertical=""true""&#xD;&#xA;			android:layout_gravity=""center""&#xD;&#xA;			android:src=""@mipmap/drop"" />&#xD;&#xA;	</RelativeLayout>"
2468346813329279311,25,5,"                bundles.Add(new ScriptBundle(""~/bundles/jquery"").Include(&#xD;&#xA;                        ""~/Scripts/jquery-{version}.js""));&#xD;&#xA;            bundles.Add(new ScriptBundle(""~/bundles/jqueryui"").Include(&#xD;&#xA;                        ""~/Scripts/jquery-ui-{version}.js""));&#xD;&#xA;            bundles.Add(new ScriptBundle(""~/bundles/jqueryval"").Include(&#xD;&#xA;                        ""~/Scripts/jquery.unobtrusive*"",&#xD;&#xA;                        ""~/Scripts/jquery.validate*""));&#xD;&#xA;            // Use the development version of Modernizr to develop with and learn from. Then, when you're&#xD;&#xA;            // ready for production, use the build tool at http://modernizr.com to pick only the tests you need.&#xD;&#xA;            bundles.Add(new ScriptBundle(""~/bundles/modernizr"").Include(&#xD;&#xA;                        ""~/Scripts/modernizr-*""));&#xD;&#xA;            bundles.Add(new StyleBundle(""~/Content/css"").Include(""~/Content/site.css""));&#xD;&#xA;            bundles.Add(new StyleBundle(""~/Content/themes/base/css"").Include(&#xD;&#xA;                        ""~/Content/themes/base/jquery.ui.core.css"",&#xD;&#xA;                        ""~/Content/themes/base/jquery.ui.resizable.css"",&#xD;&#xA;                        ""~/Content/themes/base/jquery.ui.selectable.css"",&#xD;&#xA;                        ""~/Content/themes/base/jquery.ui.accordion.css"",&#xD;&#xA;                        ""~/Content/themes/base/jquery.ui.autocomplete.css"",&#xD;&#xA;                        ""~/Content/themes/base/jquery.ui.button.css"",&#xD;&#xA;                        ""~/Content/themes/base/jquery.ui.dialog.css"",&#xD;&#xA;                        ""~/Content/themes/base/jquery.ui.slider.css"",&#xD;&#xA;                        ""~/Content/themes/base/jquery.ui.tabs.css"",&#xD;&#xA;                        ""~/Content/themes/base/jquery.ui.datepicker.css"",&#xD;&#xA;                        ""~/Content/themes/base/jquery.ui.progressbar.css"",&#xD;&#xA;                        ""~/Content/themes/base/jquery.ui.theme.css""));"
7283322084494460544,25,5,"    <?xml version=""1.0""?>&#xD;&#xA;    <xml-bindings&#xD;&#xA;        xmlns=""http://www.eclipse.org/eclipselink/xsds/persistence/oxm""&#xD;&#xA;        package-name=""blog.bindingfile"">&#xD;&#xA;        <xml-schema&#xD;&#xA;            namespace=""http://www.example.com/customer""&#xD;&#xA;            element-form-default=""QUALIFIED""/>&#xD;&#xA;        <java-types>&#xD;&#xA;            <java-type name=""Customer"">&#xD;&#xA;                <xml-root-element/>&#xD;&#xA;                <xml-type prop-order=""firstName lastName address phoneNumbers""/>&#xD;&#xA;                <java-attributes>&#xD;&#xA;                    <xml-element java-attribute=""firstName"" name=""first-name""/>&#xD;&#xA;                    <xml-element java-attribute=""lastName"" name=""last-name""/>&#xD;&#xA;                    <xml-element java-attribute=""phoneNumbers"" name=""phone-number""/>&#xD;&#xA;                </java-attributes>&#xD;&#xA;            </java-type>&#xD;&#xA;            <java-type name=""PhoneNumber"">&#xD;&#xA;                <java-attributes>&#xD;&#xA;                    <xml-attribute java-attribute=""type""/>&#xD;&#xA;                    <xml-value java-attribute=""number""/>&#xD;&#xA;                </java-attributes>&#xD;&#xA;            </java-type>&#xD;&#xA;        </java-types>&#xD;&#xA;    </xml-bindings>"
3216683451655559265,25,5,"        # (/\*[^*]*\*+(?:[^/*][^*]*\*+)*/|//(?:[^\\]|\\\n?)*?\n)|(""(?:\\[\S\s]|[^""\\])*""|'(?:\\[\S\s]|[^'\\])*'|[\S\s][^/""'\\]*)&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        (                                # (1 start), Comments &#xD;&#xA;             /\*                              # Start /* .. */ comment&#xD;&#xA;             [^*]* \*+&#xD;&#xA;             (?: [^/*] [^*]* \*+ )*&#xD;&#xA;             /                                # End /* .. */ comment&#xD;&#xA;          |  &#xD;&#xA;             //                               # Start // comment&#xD;&#xA;             (?: [^\\] | \\ \n? )*?           # Possible line-continuation&#xD;&#xA;             \n                               # End // comment&#xD;&#xA;        )                                # (1 end)&#xD;&#xA;     |  &#xD;&#xA;        (                                # (2 start), Non - comments &#xD;&#xA;             ""&#xD;&#xA;             (?: \\ [\S\s] | [^""\\] )*        # Double quoted text&#xD;&#xA;             ""&#xD;&#xA;          |  '&#xD;&#xA;             (?: \\ [\S\s] | [^'\\] )*        # Single quoted text&#xD;&#xA;             ' &#xD;&#xA;          |  [\S\s]                           # Any other char&#xD;&#xA;             [^/""'\\]*                        # Chars which doesn't start a comment, string, escape,&#xD;&#xA;                                              # or line continuation (escape + newline)&#xD;&#xA;        )                                # (2 end)"
387452440943606315,25,5,    image/jpeg&#xD;&#xA;    audio/mpeg4-generic&#xD;&#xA;    text/html&#xD;&#xA;    audio/mpeg&#xD;&#xA;    audio/aac&#xD;&#xA;    audio/wav&#xD;&#xA;    audio/ogg&#xD;&#xA;    audio/midi&#xD;&#xA;    audio/x-ms-wma&#xD;&#xA;    video/mp4&#xD;&#xA;    video/x-msvideo&#xD;&#xA;    video/x-ms-wmv&#xD;&#xA;    image/png&#xD;&#xA;    image/jpeg&#xD;&#xA;    image/gif&#xD;&#xA;    .xml ->text/xml&#xD;&#xA;    .txt -> text/plain&#xD;&#xA;    .cfg -> text/plain&#xD;&#xA;    .csv -> text/plain&#xD;&#xA;    .conf -> text/plain&#xD;&#xA;    .rc -> text/plain&#xD;&#xA;    .htm -> text/html&#xD;&#xA;    .html -> text/html&#xD;&#xA;    .pdf -> application/pdf&#xD;&#xA;    .apk -> application/vnd.android.package-archive
-5858340902814917631,25,5,"        <?xml version=""1.0""?>&#xD;&#xA;        <Workbook xmlns=""urn:schemas-microsoft-com:office:spreadsheet""&#xD;&#xA;                  xmlns:o=""urn:schemas-microsoft-com:office:office""&#xD;&#xA;                  xmlns:x=""urn:schemas-microsoft-com:office:excel""&#xD;&#xA;                  xmlns:ss=""urn:schemas-microsoft-com:office:spreadsheet""&#xD;&#xA;                  xmlns:html=""http://www.w3.org/TR/REC-html40"">&#xD;&#xA;          <Worksheet ss:Name=""Sheet1"">&#xD;&#xA;            <Table>&#xD;&#xA;              <Row>&#xD;&#xA;                <Cell><Data ss:Type=""String"">ID</Data></Cell>&#xD;&#xA;                <Cell><Data ss:Type=""String"">Name</Data></Cell>&#xD;&#xA;                <Cell><Data ss:Type=""String"">Release Date</Data></Cell>&#xD;&#xA;                <Cell><Data ss:Type=""String"">Price</Data></Cell>&#xD;&#xA;              </Row>&#xD;&#xA;              <% @products.each do |product| %>&#xD;&#xA;                  <Row>&#xD;&#xA;                    <Cell><Data ss:Type=""Number""><%= product.id %></Data></Cell>&#xD;&#xA;                    <Cell><Data ss:Type=""String""><%= product.name %></Data></Cell>&#xD;&#xA;                    <Cell><Data ss:Type=""String""><%= product.released_on %></Data></Cell>&#xD;&#xA;                    <Cell><Data ss:Type=""Number""><%= product.price %></Data></Cell>&#xD;&#xA;                  </Row>&#xD;&#xA;              <% end %>&#xD;&#xA;            </Table>&#xD;&#xA;          </Worksheet>&#xD;&#xA;        </Workbook>"
1673547186580926390,25,5,"    app/&#xD;&#xA;	----- shared/   // acts as reusable components or partials of our site&#xD;&#xA;	---------- sidebar/&#xD;&#xA;	--------------- sidebarDirective.js&#xD;&#xA;	--------------- sidebarView.html&#xD;&#xA;	---------- article/&#xD;&#xA;	--------------- articleDirective.js&#xD;&#xA;	--------------- articleView.html&#xD;&#xA;	----- components/   // each component is treated as a mini Angular app&#xD;&#xA;	---------- home/&#xD;&#xA;	--------------- homeController.js&#xD;&#xA;	--------------- homeService.js&#xD;&#xA;	--------------- homeView.html&#xD;&#xA;	---------- blog/&#xD;&#xA;	--------------- blogController.js&#xD;&#xA;	--------------- blogService.js&#xD;&#xA;	--------------- blogView.html&#xD;&#xA;	----- app.module.js&#xD;&#xA;	----- app.routes.js&#xD;&#xA;	assets/&#xD;&#xA;	----- img/      // Images and icons for your app&#xD;&#xA;	----- css/      // All styles and style related files (SCSS or LESS files)&#xD;&#xA;	----- js/       // JavaScript files written for your app that are not for angular&#xD;&#xA;	----- libs/     // Third-party libraries such as jQuery, Moment, Underscore, etc.&#xD;&#xA;	index.html"
-3397194554241528987,26,5,"    SELECT &#xD;&#xA;    	t.NAME AS TableName,&#xD;&#xA;    	i.name as indexName,&#xD;&#xA;    	p.[Rows],&#xD;&#xA;        sum(a.total_pages) as TotalPages, &#xD;&#xA;    	sum(a.used_pages) as UsedPages, &#xD;&#xA;    	sum(a.data_pages) as DataPages,&#xD;&#xA;        (sum(a.total_pages) * 8) / 1024 as TotalSpaceMB, &#xD;&#xA;    	(sum(a.used_pages) * 8) / 1024 as UsedSpaceMB, &#xD;&#xA;    	(sum(a.data_pages) * 8) / 1024 as DataSpaceMB&#xD;&#xA;    FROM &#xD;&#xA;    	sys.tables t&#xD;&#xA;    INNER JOIN		&#xD;&#xA;    	sys.indexes i ON t.OBJECT_ID = i.object_id&#xD;&#xA;    INNER JOIN &#xD;&#xA;    	sys.partitions p ON i.object_id = p.OBJECT_ID AND i.index_id = p.index_id&#xD;&#xA;    INNER JOIN &#xD;&#xA;    	sys.allocation_units a ON p.partition_id = a.container_id&#xD;&#xA;    WHERE &#xD;&#xA;    	t.NAME NOT LIKE 'dt%' AND&#xD;&#xA;    	i.OBJECT_ID > 255 AND 	&#xD;&#xA;    	i.index_id <= 1&#xD;&#xA;    GROUP BY &#xD;&#xA;    	t.NAME, i.object_id, i.index_id, i.name, p.[Rows]&#xD;&#xA;    ORDER BY &#xD;&#xA;    	object_name(i.object_id) "
7845992018518510509,26,5,"        <?xml version=""1.0"" encoding=""utf-8""?>&#xD;&#xA;    <android.support.v4.widget.DrawerLayout&#xD;&#xA;        android:id=""@+id/drawer_layout""&#xD;&#xA;        xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;        xmlns:app=""http://schemas.android.com/apk/res-auto""&#xD;&#xA;        xmlns:tools=""http://schemas.android.com/tools""&#xD;&#xA;        android:layout_width=""match_parent""&#xD;&#xA;        android:layout_height=""match_parent""&#xD;&#xA;        android:fitsSystemWindows=""true""&#xD;&#xA;        tools:openDrawer=""start"">&#xD;&#xA;    &#xD;&#xA;        <include&#xD;&#xA;            layout=""@layout/app_bar_main""&#xD;&#xA;            android:layout_width=""match_parent""&#xD;&#xA;            android:layout_height=""match_parent""/>&#xD;&#xA;    &#xD;&#xA;        <android.support.design.widget.NavigationView&#xD;&#xA;            android:id=""@+id/nav_view""&#xD;&#xA;            android:layout_width=""wrap_content""&#xD;&#xA;            android:layout_height=""match_parent""&#xD;&#xA;            android:layout_gravity=""start""&#xD;&#xA;            android:fitsSystemWindows=""true""&#xD;&#xA;            app:headerLayout=""@layout/nav_header_main""&#xD;&#xA;            app:menu=""@menu/activity_main_drawer""/>&#xD;&#xA;    &#xD;&#xA;    </android.support.v4.widget.DrawerLayout>"
-7988436576717147869,26,5,	<!-- The definition of the Root Spring Container shared by all Servlets and Filters -->&#xD;&#xA;	<context-param>&#xD;&#xA;		<param-name>contextConfigLocation</param-name>&#xD;&#xA;		<param-value>/WEB-INF/spring/root-context.xml</param-value>&#xD;&#xA;	</context-param>&#xD;&#xA;	&#xD;&#xA;	<!-- Creates the Spring Container shared by all Servlets and Filters -->&#xD;&#xA;	<listener>&#xD;&#xA;		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>&#xD;&#xA;	</listener>&#xD;&#xA;	<!-- Processes application requests -->&#xD;&#xA;	&#xD;&#xA;	<servlet>&#xD;&#xA;		<servlet-name>appServlet</servlet-name>&#xD;&#xA;		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>&#xD;&#xA;		<init-param>&#xD;&#xA;			<param-name>contextConfigLocation</param-name>&#xD;&#xA;			<param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value>&#xD;&#xA;		</init-param>&#xD;&#xA;		<load-on-startup>1</load-on-startup>&#xD;&#xA;	</servlet>&#xD;&#xA;		&#xD;&#xA;	<servlet-mapping>&#xD;&#xA;		<servlet-name>appServlet</servlet-name>&#xD;&#xA;		<url-pattern>/</url-pattern>&#xD;&#xA;	</servlet-mapping>
-1918052679475379819,26,5,"    <root>&#xD;&#xA;      <page number=""1"" section=""Arsenal"">Arsenal</page> &#xD;&#xA;      <page number=""2"" section=""Arsenal"">Arsenal</page> &#xD;&#xA;      <page number=""3"" section=""Arsenal"">Arsenal</page> &#xD;&#xA;      <page number=""4"" section=""Arsenal"">Arsenal</page> &#xD;&#xA;      <page number=""5"" section=""Arsenal"">Arsenal</page> &#xD;&#xA;      <page number=""6"" section=""Arsenal"">Arsenal</page> &#xD;&#xA;      <page number=""7"" section=""Chelsea"">Chelsea</page> &#xD;&#xA;      <page number=""8"" section=""Chelsea"">Chelsea</page> &#xD;&#xA;      <page number=""9"" section=""Chelsea"">Chelsea</page> &#xD;&#xA;      <page number=""10"" section=""Chelsea"">Chelsea</page> &#xD;&#xA;      <page number=""11"" section=""Chelsea"">Chelsea</page> &#xD;&#xA;      <page number=""12"" section=""Chelsea"">Chelsea</page> &#xD;&#xA;      <page number=""13"" section=""ManUnited"">ManUnited</page> &#xD;&#xA;      <page number=""14"" section=""ManUnited"">ManUnited</page> &#xD;&#xA;      <page number=""15"" section=""ManUnited"">ManUnited</page> &#xD;&#xA;      <page number=""16"" section=""ManUnited"">ManUnited</page> &#xD;&#xA;      <page number=""17"" section=""ManUnited"">ManUnited</page> &#xD;&#xA;      <page number=""18"" section=""ManUnited"">ManUnited</page> &#xD;&#xA;      <page number=""19"" section=""ManCity"">ManCity</page> &#xD;&#xA;      <page number=""20"" section=""ManCity"">ManCity</page> &#xD;&#xA;      <page number=""21"" section=""ManCity"">ManCity</page> &#xD;&#xA;      <page number=""22"" section=""ManCity"">ManCity</page> &#xD;&#xA;      <page number=""23"" section=""ManCity"">ManCity</page> &#xD;&#xA;      <page number=""24"" section=""ManCity"">ManCity</page> &#xD;&#xA;     </root>"
-5120932706623891063,26,5,"    <?xml version=""1.0"" encoding=""utf-8""?>&#xD;&#xA;    <LinearLayout xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;        android:orientation=""vertical""&#xD;&#xA;        android:layout_width=""fill_parent""&#xD;&#xA;        android:layout_height=""fill_parent""&#xD;&#xA;        >&#xD;&#xA;        <TextView&#xD;&#xA;            android:text=""Message""&#xD;&#xA;            android:layout_width=""fill_parent""&#xD;&#xA;            android:layout_height=""wrap_content""&#xD;&#xA;            /> &#xD;&#xA;    &#xD;&#xA;        <EditText&#xD;&#xA;            android:id=""@+id/msgTextField""&#xD;&#xA;            android:layout_width=""fill_parent""&#xD;&#xA;            android:layout_height=""wrap_content""&#xD;&#xA;            />&#xD;&#xA;        <Button&#xD;&#xA;            android:text=""Send""&#xD;&#xA;            android:id=""@+id/sendButton""&#xD;&#xA;            android:layout_width=""fill_parent""&#xD;&#xA;            android:layout_height=""wrap_content""&#xD;&#xA;            android:onClick=""send""&#xD;&#xA;            /> &#xD;&#xA;    &#xD;&#xA;    </LinearLayout>"
-6222744012560646302,27,5,"    public static Intent getPickImageIntent(Context context) {&#xD;&#xA;        Intent chooserIntent = null;&#xD;&#xA;        List<Intent> intentList = new ArrayList<>();&#xD;&#xA;        Intent pickIntent = new Intent(Intent.ACTION_PICK,&#xD;&#xA;                android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);&#xD;&#xA;        Intent takePhotoIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);&#xD;&#xA;        takePhotoIntent.putExtra(""return-data"", true);&#xD;&#xA;        takePhotoIntent.putExtra(MediaStore.EXTRA_OUTPUT, Uri.fromFile(getTempFile(context)));&#xD;&#xA;        intentList = addIntentsToList(context, intentList, pickIntent);&#xD;&#xA;        intentList = addIntentsToList(context, intentList, takePhotoIntent);&#xD;&#xA;        if (intentList.size() > 0) {&#xD;&#xA;            chooserIntent = Intent.createChooser(intentList.remove(intentList.size() - 1),&#xD;&#xA;                    context.getString(R.string.pick_image_intent_text));&#xD;&#xA;            chooserIntent.putExtra(Intent.EXTRA_INITIAL_INTENTS, intentList.toArray(new Parcelable[]{}));&#xD;&#xA;        }&#xD;&#xA;        return chooserIntent;&#xD;&#xA;    }&#xD;&#xA;    private static List<Intent> addIntentsToList(Context context, List<Intent> list, Intent intent) {&#xD;&#xA;        List<ResolveInfo> resInfo = context.getPackageManager().queryIntentActivities(intent, 0);&#xD;&#xA;        for (ResolveInfo resolveInfo : resInfo) {&#xD;&#xA;            String packageName = resolveInfo.activityInfo.packageName;&#xD;&#xA;            Intent targetedIntent = new Intent(intent);&#xD;&#xA;            targetedIntent.setPackage(packageName);&#xD;&#xA;            list.add(targetedIntent);&#xD;&#xA;        }&#xD;&#xA;        return list;&#xD;&#xA;    }"
-8901200512626481354,27,5,"    <?php&#xD;&#xA;    // input: textfile with one bitly shortened url per line&#xD;&#xA;    $plain_urls = file_get_contents('in.txt');&#xD;&#xA;    $bitly_urls = explode(""\r\n"", $plain_urls);&#xD;&#xA;    &#xD;&#xA;    // output: where should we write&#xD;&#xA;    $w_out = fopen(""out.csv"", ""a+"") or die(""Unable to open file!"");&#xD;&#xA;    &#xD;&#xA;    foreach($bitly_urls as $bitly_url) {&#xD;&#xA;      $c = curl_init($bitly_url);&#xD;&#xA;      curl_setopt($c, CURLOPT_USERAGENT, 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.106 Safari/537.36');&#xD;&#xA;      curl_setopt($c, CURLOPT_FOLLOWLOCATION, 0);&#xD;&#xA;      curl_setopt($c, CURLOPT_HEADER, 1);&#xD;&#xA;      curl_setopt($c, CURLOPT_RETURNTRANSFER, 1);&#xD;&#xA;      curl_setopt($c, CURLOPT_CONNECTTIMEOUT, 20);&#xD;&#xA;      // curl_setopt($c, CURLOPT_PROXY, 'localhost:9150');&#xD;&#xA;      // curl_setopt($c, CURLOPT_PROXYTYPE, CURLPROXY_SOCKS5);&#xD;&#xA;      $r = curl_exec($c);&#xD;&#xA;      &#xD;&#xA;      // get the redirect url:&#xD;&#xA;      $redirect_url = curl_getinfo($c)['redirect_url'];&#xD;&#xA;      &#xD;&#xA;      // write output as csv&#xD;&#xA;      $out = '""'.$bitly_url.'"";""'.$redirect_url.'""'.""\n"";&#xD;&#xA;      fwrite($w_out, $out);&#xD;&#xA;    }&#xD;&#xA;    fclose($w_out);"
-6911748604504104096,27,5,"    var minimumInterval = 200; // minimum interval between throttled function calls&#xD;&#xA;    function throttle(func, obj, evt) {&#xD;&#xA;    	var timeouttype	= 0,&#xD;&#xA;    		curEvt = null;&#xD;&#xA;    	function lowerTimeoutType(f){&#xD;&#xA;    		timeouttype=0;&#xD;&#xA;    		if (curEvt !== null){&#xD;&#xA;    			func(curEvt);&#xD;&#xA;    			curEvt = null;&#xD;&#xA;			}&#xD;&#xA;    	};&#xD;&#xA;    	return function(Evt) {&#xD;&#xA;    		switch (timeouttype){&#xD;&#xA;    			case 0: // Execute immediately&#xD;&#xA;    				++timeouttype; // increase the timeouttype&#xD;&#xA;    				func(Evt);&#xD;&#xA;					// Now, make it so that the timeouttype resets later&#xD;&#xA;    				setTimeout(lowerTimeoutType, minimumInterval);&#xD;&#xA;    				break;&#xD;&#xA;    			case 1: // Delayed execute&#xD;&#xA;					// make it so that when timeouttype expires, your function&#xD;&#xA;					// is called with the freshest event&#xD;&#xA;    				curEvt = Evt;&#xD;&#xA;    				Evt.preventDefault();&#xD;&#xA;    		}&#xD;&#xA;    	};&#xD;&#xA;    };"
-1727241429834735445,27,5,"    class MicropostsController < ApplicationController&#xD;&#xA;	before_action :logged_in_user, only: [:create, :destroy]&#xD;&#xA;	before_action :correct_user,   only: :destroy&#xD;&#xA;	def create&#xD;&#xA;		@micropost = current_user.microposts.build(micropost_params)&#xD;&#xA;		if @micropost.save&#xD;&#xA;			flash[:success] = ""Micropost created!""&#xD;&#xA;			redirect_to root_url&#xD;&#xA;		else&#xD;&#xA;			@feed_items = []&#xD;&#xA;			render 'static_pages/home'&#xD;&#xA;		end&#xD;&#xA;	end&#xD;&#xA;	def destroy&#xD;&#xA;		@micropost.destroy&#xD;&#xA;		flash[:success] = ""Micropost deleted""&#xD;&#xA;		redirect_to request.referrer || root_url&#xD;&#xA;	end&#xD;&#xA;	private&#xD;&#xA;		def micropost_params&#xD;&#xA;			params.require(:micropost).permit(:content, :picture)&#xD;&#xA;		end&#xD;&#xA;		def correct_user&#xD;&#xA;			@micropost = current_user.microposts.find_by(id: params[:id])&#xD;&#xA;			redirect_to root_url if @micropost.nil?&#xD;&#xA;		end&#xD;&#xA;     end"
3871067916708969491,27,5,"       <?xml version=""1.0"" encoding=""utf-8"" ?>&#xD;&#xA;       <resources>&#xD;&#xA;       <style name=""MainTheme"" parent=""MainTheme.Base"">&#xD;&#xA;       </style>&#xD;&#xA;       <!-- Base theme applied no matter what API -->&#xD;&#xA;       <style name=""MainTheme.Base""        parent=""Theme.AppCompat.Light.DarkActionBar"">&#xD;&#xA;         <!--If you are using revision 22.1 please use just windowNoTitle.      Without android:-->&#xD;&#xA;         <item name=""windowNoTitle"">true</item>&#xD;&#xA;         <!--We will be using the toolbar so no need to show ActionBar-->&#xD;&#xA;         <item name=""windowActionBar"">false</item>&#xD;&#xA;         <!-- Set theme colors from      http://www.google.com/design/spec/style/color.html#color-color-palette -->&#xD;&#xA;         <!-- colorPrimary is used for the default action bar background -->&#xD;&#xA;         <item name=""colorPrimary"">#2196F3</item>&#xD;&#xA;         <!-- colorPrimaryDark is used for the status bar -->&#xD;&#xA;         <item name=""colorPrimaryDark"">#1976D2</item>&#xD;&#xA;         <!-- colorAccent is used as the default value for colorControlActivated&#xD;&#xA;         which is used to tint widgets -->&#xD;&#xA;         <item name=""colorAccent"">#FF4081</item>&#xD;&#xA;         <!-- You can also set colorControlNormal, colorControlActivated&#xD;&#xA;         colorControlHighlight and colorSwitchThumbNormal. -->&#xD;&#xA;         <item name=""windowActionModeOverlay"">true</item>&#xD;&#xA;         <item name=""android:datePickerDialogTheme"">@style/AppCompatDialogStyle</item>&#xD;&#xA;       </style>&#xD;&#xA;       <style name=""AppCompatDialogStyle"" parent=""Theme.AppCompat.Light.Dialog"">&#xD;&#xA;         <item name=""colorAccent"">#FF4081</item>&#xD;&#xA;       </style>&#xD;&#xA;     </resources>"
5842236775680087988,27,5,"    <RelativeLayout xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;            xmlns:tools=""http://schemas.android.com/tools""&#xD;&#xA;            android:layout_width=""match_parent""&#xD;&#xA;            android:layout_height=""match_parent""&#xD;&#xA;            tools:context="".MainActivity"" &#xD;&#xA;            android:padding=""5dp"">&#xD;&#xA;        &#xD;&#xA;        <Switch&#xD;&#xA;            android:id=""@+id/mySwitch""&#xD;&#xA;            android:layout_width=""wrap_content""&#xD;&#xA;            android:layout_height=""wrap_content""&#xD;&#xA;            android:layout_alignParentLeft=""true""&#xD;&#xA;            android:layout_alignParentTop=""true""&#xD;&#xA;            android:layout_marginTop=""20dp""&#xD;&#xA;            android:text=""Play with the Switch"" />&#xD;&#xA;        &#xD;&#xA;        <TextView&#xD;&#xA;            android:id=""@+id/switchStatus""&#xD;&#xA;            android:layout_width=""wrap_content""&#xD;&#xA;            android:layout_height=""wrap_content""&#xD;&#xA;            android:layout_alignParentLeft=""true""&#xD;&#xA;            android:layout_below=""@+id/mySwitch""&#xD;&#xA;            android:layout_marginTop=""22dp""&#xD;&#xA;            android:text=""Medium Text""&#xD;&#xA;            android:textAppearance=""?android:attr/textAppearanceMedium"" />&#xD;&#xA;        &#xD;&#xA;	</RelativeLayout>"
-3454035910151157347,27,5,"        <div class=""container"">&#xD;&#xA;      <h2>Modal Example</h2>&#xD;&#xA;      <!-- Trigger the modal with a button -->&#xD;&#xA;      <button type=""button"" class=""btn btn-info btn-lg"" data-toggle=""modal"" data-target=""#myModal"">Open Modal</button>&#xD;&#xA;    &#xD;&#xA;      <!-- Modal -->&#xD;&#xA;      <div class=""modal fade"" id=""myModal"" role=""dialog"">&#xD;&#xA;        <div class=""modal-dialog"">&#xD;&#xA;        &#xD;&#xA;          <!-- Modal content-->&#xD;&#xA;          <div class=""modal-content"">&#xD;&#xA;            <div class=""modal-header"">&#xD;&#xA;              <button type=""button"" class=""close"" data-dismiss=""modal"">&times;</button>&#xD;&#xA;              <h4 class=""modal-title"">Modal Header</h4>&#xD;&#xA;            </div>&#xD;&#xA;            <div class=""modal-body"">&#xD;&#xA;              <p>Some text in the modal.</p>&#xD;&#xA;            </div>&#xD;&#xA;            <div class=""modal-footer"">&#xD;&#xA;              <button type=""button"" class=""btn btn-default"" data-dismiss=""modal"">Close</button>&#xD;&#xA;            </div>&#xD;&#xA;          </div>&#xD;&#xA;          &#xD;&#xA;        </div>&#xD;&#xA;      </div>&#xD;&#xA;      &#xD;&#xA;    </div>"
-1237650512498776727,27,5,    date	close&#xD;&#xA;    1-May-12	58.13&#xD;&#xA;    30-Apr-12	53.98&#xD;&#xA;    27-Apr-12	67.00&#xD;&#xA;    26-Apr-12	89.70&#xD;&#xA;    25-Apr-12	99.00&#xD;&#xA;    24-Apr-12	130.28&#xD;&#xA;    23-Apr-12	166.70&#xD;&#xA;    20-Apr-12	234.98&#xD;&#xA;    19-Apr-12	345.44&#xD;&#xA;    18-Apr-12	443.34&#xD;&#xA;    17-Apr-12	543.70&#xD;&#xA;    16-Apr-12	580.13&#xD;&#xA;    13-Apr-12	605.23&#xD;&#xA;    12-Apr-12	622.77&#xD;&#xA;    11-Apr-12	626.20&#xD;&#xA;    10-Apr-12	628.44&#xD;&#xA;    9-Apr-12	636.23&#xD;&#xA;    5-Apr-12	633.68&#xD;&#xA;    4-Apr-12	624.31&#xD;&#xA;    3-Apr-12	629.32&#xD;&#xA;    2-Apr-12	618.63&#xD;&#xA;    30-Mar-12	599.55&#xD;&#xA;    29-Mar-12	609.86&#xD;&#xA;    28-Mar-12	617.62&#xD;&#xA;    27-Mar-12	614.48&#xD;&#xA;    26-Mar-12	606.98
7819093955917923933,28,5,"	<inventory>&#xD;&#xA;		<book year=""2000"">&#xD;&#xA;			<title>Snow Crash</title>&#xD;&#xA;			<author>Neal Stephenson</author>&#xD;&#xA;			<publisher>Spectra</publisher>&#xD;&#xA;			<isbn>0553380958</isbn>&#xD;&#xA;			<price>14.95</price>&#xD;&#xA;		</book>&#xD;&#xA;	 &#xD;&#xA;		<book year=""2005"">&#xD;&#xA;			<title>Burning Tower</title>&#xD;&#xA;			<author>Larry Niven</author>&#xD;&#xA;			<author>Jerry Pournelle</author>&#xD;&#xA;			<publisher>Pocket</publisher>&#xD;&#xA;			<isbn>0743416910</isbn>&#xD;&#xA;			<price>5.99</price>&#xD;&#xA;		</book>&#xD;&#xA;	 &#xD;&#xA;		<book year=""1995"">&#xD;&#xA;			<title>Zodiac</title>&#xD;&#xA;			<author>Neal Stephenson</author>&#xD;&#xA;			<publisher>Spectra</publisher>&#xD;&#xA;			<isbn>0553573862</isbn>&#xD;&#xA;			<price>7.50</price>&#xD;&#xA;		</book>&#xD;&#xA;		<!-- more books... -->&#xD;&#xA;	 &#xD;&#xA;	</inventory>"
-5838942269616114260,28,5,"        <compatible-screens>&#xD;&#xA;        <!-- all small size screens -->&#xD;&#xA;        <screen&#xD;&#xA;            android:screenDensity=""ldpi""&#xD;&#xA;            android:screenSize=""small"" />&#xD;&#xA;        <screen&#xD;&#xA;            android:screenDensity=""mdpi""&#xD;&#xA;            android:screenSize=""small"" />&#xD;&#xA;        <screen&#xD;&#xA;            android:screenDensity=""hdpi""&#xD;&#xA;            android:screenSize=""small"" />&#xD;&#xA;        <screen&#xD;&#xA;            android:screenDensity=""xhdpi""&#xD;&#xA;            android:screenSize=""small"" />&#xD;&#xA;        <!-- all normal size screens -->&#xD;&#xA;        <screen&#xD;&#xA;            android:screenDensity=""ldpi""&#xD;&#xA;            android:screenSize=""normal"" />&#xD;&#xA;        <screen&#xD;&#xA;            android:screenDensity=""mdpi""&#xD;&#xA;            android:screenSize=""normal"" />&#xD;&#xA;        <screen&#xD;&#xA;            android:screenDensity=""hdpi""&#xD;&#xA;            android:screenSize=""normal"" />&#xD;&#xA;        <screen&#xD;&#xA;            android:screenDensity=""xhdpi""&#xD;&#xA;            android:screenSize=""normal"" />&#xD;&#xA;    </compatible-screens>"
6278780595797951243,28,5,    #        &#xD;&#xA;    # PHP is an HTML-embedded scripting language which attempts to make it                                             &#xD;&#xA;    # easy for developers to write dynamically generated webpages.                                                  &#xD;&#xA;    #&#xD;&#xA;    <IfModule prefork.c>&#xD;&#xA;      LoadModule php5_module modules/libphp5.so&#xD;&#xA;    </IfModule>&#xD;&#xA;    <IfModule worker.c>&#xD;&#xA;      LoadModule php5_module modules/libphp5-zts.so&#xD;&#xA;    </IfModule>&#xD;&#xA;    &#xD;&#xA;    #&#xD;&#xA;    # Cause the PHP interpreter to handle files with a .php extension.&#xD;&#xA;    #&#xD;&#xA;    AddHandler php5-script .php&#xD;&#xA;    AddType text/html .php&#xD;&#xA;    &#xD;&#xA;    #&#xD;&#xA;    # Add index.php to the list of files that will be served as directory&#xD;&#xA;    # indexes.&#xD;&#xA;    #&#xD;&#xA;    DirectoryIndex index.php&#xD;&#xA;    &#xD;&#xA;    #&#xD;&#xA;    # Uncomment the following line to allow PHP to pretty-print .phps&#xD;&#xA;    # files as PHP source code:&#xD;&#xA;    #&#xD;&#xA;    #AddType application/x-httpd-php-source .phps
-5634320452260364192,28,5,"    s = """"""Gur Mra bs Clguba, ol Gvz Crgref&#xD;&#xA;    &#xD;&#xA;    Ornhgvshy vf orggre guna htyl.&#xD;&#xA;    Rkcyvpvg vf orggre guna vzcyvpvg.&#xD;&#xA;    Fvzcyr vf orggre guna pbzcyrk.&#xD;&#xA;    Pbzcyrk vf orggre guna pbzcyvpngrq.&#xD;&#xA;    Syng vf orggre guna arfgrq.&#xD;&#xA;    Fcnefr vf orggre guna qrafr.&#xD;&#xA;    Ernqnovyvgl pbhagf.&#xD;&#xA;    Fcrpvny pnfrf nera'g fcrpvny rabhtu gb oernx gur ehyrf.&#xD;&#xA;    Nygubhtu cenpgvpnyvgl orngf chevgl.&#xD;&#xA;    Reebef fubhyq arire cnff fvyragyl.&#xD;&#xA;    Hayrff rkcyvpvgyl fvyraprq.&#xD;&#xA;    Va gur snpr bs nzovthvgl, ershfr gur grzcgngvba gb thrff.&#xD;&#xA;    Gurer fubhyq or bar-- naq cersrenoyl bayl bar --boivbhf jnl gb qb vg.&#xD;&#xA;    Nygubhtu gung jnl znl abg or boivbhf ng svefg hayrff lbh'er Qhgpu.&#xD;&#xA;    Abj vf orggre guna arire.&#xD;&#xA;    Nygubhtu arire vf bsgra orggre guna *evtug* abj.&#xD;&#xA;    Vs gur vzcyrzragngvba vf uneq gb rkcynva, vg'f n onq vqrn.&#xD;&#xA;    Vs gur vzcyrzragngvba vf rnfl gb rkcynva, vg znl or n tbbq vqrn.&#xD;&#xA;    Anzrfcnprf ner bar ubaxvat terng vqrn -- yrg'f qb zber bs gubfr!""""""&#xD;&#xA;        &#xD;&#xA;    d = {}&#xD;&#xA;    for c in (65, 97):&#xD;&#xA;        for i in range(26):&#xD;&#xA;            d[chr(i+c)] = chr((i+13) % 26 + c)&#xD;&#xA;    &#xD;&#xA;    print("""".join([d.get(c, c) for c in s]))"
-7505672966891028527,28,5,"    <!DOCTYPE html>&#xD;&#xA;    <html>&#xD;&#xA;    <head>&#xD;&#xA;    <script>&#xD;&#xA;    function startTime() {&#xD;&#xA;        var today = new Date();&#xD;&#xA;        var h = today.getHours();&#xD;&#xA;        var m = today.getMinutes();&#xD;&#xA;        var s = today.getSeconds();&#xD;&#xA;        m = checkTime(m);&#xD;&#xA;        s = checkTime(s);&#xD;&#xA;        document.getElementById('txt').innerHTML =&#xD;&#xA;        h + "":"" + m + "":"" + s;&#xD;&#xA;        var t = setTimeout(startTime, 500);&#xD;&#xA;    }&#xD;&#xA;    function checkTime(i) {&#xD;&#xA;        if (i < 10) {i = ""0"" + i};  // add zero in front of numbers < 10&#xD;&#xA;        return i;&#xD;&#xA;    }&#xD;&#xA;    </script>&#xD;&#xA;    </head>&#xD;&#xA;    &#xD;&#xA;    <body onload=""startTime()"">&#xD;&#xA;    &#xD;&#xA;    <div id=""txt""></div>&#xD;&#xA;    &#xD;&#xA;    </body>&#xD;&#xA;    </html>"
8451157999062190509,28,5,"    Dim strPathFile As String, strFile As String, strPath As String&#xD;&#xA;     Dim strTable As String&#xD;&#xA;     Dim blnHasFieldNames As Boolean&#xD;&#xA;    &#xD;&#xA;    ' Change this next line to True if the first row in EXCEL worksheet&#xD;&#xA;     ' has field names&#xD;&#xA;     blnHasFieldNames = False&#xD;&#xA;    &#xD;&#xA;    ' Replace C:\Documents\ with the real path to the folder that&#xD;&#xA;     ' contains the EXCEL files&#xD;&#xA;     strPath = ""C:\Documents\""&#xD;&#xA;    &#xD;&#xA;    ' Replace tablename with the real name of the table into which &#xD;&#xA;     ' the data are to be imported&#xD;&#xA;     strTable = ""tablename""&#xD;&#xA;    &#xD;&#xA;     strFile = Dir(strPath & ""*.xls"")&#xD;&#xA;     Do While Len(strFile) > 0&#xD;&#xA;           strPathFile = strPath & strFile&#xD;&#xA;           DoCmd.TransferSpreadsheet acImport, acSpreadsheetTypeExcel9, _&#xD;&#xA;                 strTable, strPathFile, blnHasFieldNames&#xD;&#xA;    &#xD;&#xA;    ' Uncomment out the next code step if you want to delete the &#xD;&#xA;     ' EXCEL file after it's been imported&#xD;&#xA;     '       Kill strPathFile&#xD;&#xA;    &#xD;&#xA;           strFile = Dir()&#xD;&#xA;     Loop"
-7185312453163527085,28,5,"      <form class=""form-horizontal"" role=""form"">&#xD;&#xA;        <div class=""form-group"">&#xD;&#xA;          <label for=""inputEmail3"" class=""col-sm-2 control-label"">Email</label>&#xD;&#xA;          <div class=""col-sm-10"">&#xD;&#xA;            <input type=""email"" class=""form-control"" id=""inputEmail3"" placeholder=""Email"">&#xD;&#xA;          </div>&#xD;&#xA;        </div>&#xD;&#xA;        <div class=""form-group"">&#xD;&#xA;          <label for=""inputPassword3"" class=""col-sm-2 control-label"">Password</label>&#xD;&#xA;          <div class=""col-sm-10"">&#xD;&#xA;            <input type=""password"" class=""form-control"" id=""inputPassword3"" placeholder=""Password"">&#xD;&#xA;          </div>&#xD;&#xA;        </div>&#xD;&#xA;        <div class=""form-group"">&#xD;&#xA;          <div class=""col-sm-offset-2 col-sm-10"">&#xD;&#xA;            <div class=""checkbox"">&#xD;&#xA;              <label>&#xD;&#xA;                <input type=""checkbox""> Remember me&#xD;&#xA;              </label>&#xD;&#xA;            </div>&#xD;&#xA;          </div>&#xD;&#xA;        </div>&#xD;&#xA;        <div class=""form-group"">&#xD;&#xA;          <div class=""col-sm-offset-2 col-sm-10"">&#xD;&#xA;            <button type=""submit"" class=""btn btn-default"">Sign in</button>&#xD;&#xA;          </div>&#xD;&#xA;        </div>&#xD;&#xA;      </form>"
-6841608432537928010,28,5,"    #include <mpi.h>&#xD;&#xA;    #include <stdio.h>&#xD;&#xA;    &#xD;&#xA;    int main(int argc, char** argv) {&#xD;&#xA;        // Initialize the MPI environment&#xD;&#xA;        MPI_Init(NULL, NULL);&#xD;&#xA;    &#xD;&#xA;        // Get the number of processes&#xD;&#xA;        int world_size;&#xD;&#xA;        MPI_Comm_size(MPI_COMM_WORLD, &world_size);&#xD;&#xA;    &#xD;&#xA;        // Get the rank of the process&#xD;&#xA;        int world_rank;&#xD;&#xA;        MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);&#xD;&#xA;    &#xD;&#xA;        // Get the name of the processor&#xD;&#xA;        char processor_name[MPI_MAX_PROCESSOR_NAME];&#xD;&#xA;        int name_len;&#xD;&#xA;        MPI_Get_processor_name(processor_name, &name_len);&#xD;&#xA;    &#xD;&#xA;        // Print off a hello world message&#xD;&#xA;        printf(""Hello world from processor %s, rank %d""&#xD;&#xA;               "" out of %d processors\n"",&#xD;&#xA;               processor_name, world_rank, world_size);&#xD;&#xA;    &#xD;&#xA;        // Finalize the MPI environment.&#xD;&#xA;        MPI_Finalize();&#xD;&#xA;    } "
-8293951991543168712,28,5,"	 $('ul.tabs').each(function(){&#xD;&#xA;	    // For each set of tabs, we want to keep track of&#xD;&#xA;	    // which tab is active and it's associated content&#xD;&#xA;	    var $active, $content, $links = $(this).find('a');&#xD;&#xA;	    // If the location.hash matches one of the links, use that as the active tab.&#xD;&#xA;	    // If no match is found, use the first link as the initial active tab.&#xD;&#xA;	    $active = $($links.filter('[href=""'+location.hash+'""]')[0] || $links[0]);&#xD;&#xA;	    $active.addClass('active');&#xD;&#xA;	    $content = $($active[0].hash);&#xD;&#xA;	    // Hide the remaining content&#xD;&#xA;	    $links.not($active).each(function () {&#xD;&#xA;	      $(this.hash).hide();&#xD;&#xA;	    });&#xD;&#xA;	    // Bind the click event handler&#xD;&#xA;	    $(this).on('click', 'a', function(e){&#xD;&#xA;	      // Make the old tab inactive.&#xD;&#xA;	      $active.removeClass('active');&#xD;&#xA;	      $content.hide();&#xD;&#xA;	      // Update the variables with the new link and content&#xD;&#xA;	      $active = $(this);&#xD;&#xA;	      $content = $(this.hash);&#xD;&#xA;	      // Make the tab active.&#xD;&#xA;	      $active.addClass('active');&#xD;&#xA;	      $content.show();&#xD;&#xA;	      // Prevent the anchor's default click action&#xD;&#xA;	      e.preventDefault();&#xD;&#xA;	    });&#xD;&#xA;	  });"
-8176738240903461099,28,5,"    - (void)webViewDidFinishLoad:(UIWebView *)awebView&#xD;&#xA;    {&#xD;&#xA;      if (awebView.isLoading)&#xD;&#xA;        return;&#xD;&#xA;    &#xD;&#xA;      UIPrintPageRenderer *render = [[UIPrintPageRenderer alloc] init];&#xD;&#xA;      [render addPrintFormatter:awebView.viewPrintFormatter startingAtPageAtIndex:0];&#xD;&#xA;      //increase these values according to your requirement&#xD;&#xA;      float topPadding = 10.0f;&#xD;&#xA;      float bottomPadding = 10.0f;&#xD;&#xA;      float leftPadding = 10.0f;&#xD;&#xA;      float rightPadding = 10.0f;&#xD;&#xA;      CGRect printableRect = CGRectMake(leftPadding,&#xD;&#xA;                                      topPadding,&#xD;&#xA;                                      kPaperSizeA4.width-leftPadding-rightPadding,&#xD;&#xA;                                      kPaperSizeA4.height-topPadding-bottomPadding);&#xD;&#xA;      CGRect paperRect = CGRectMake(0, 0, kPaperSizeA4.width, kPaperSizeA4.height);&#xD;&#xA;      [render setValue:[NSValue valueWithCGRect:paperRect] forKey:@""paperRect""];&#xD;&#xA;      [render setValue:[NSValue valueWithCGRect:printableRect] forKey:@""printableRect""];&#xD;&#xA;      NSData *pdfData = [render printToPDF];&#xD;&#xA;      if (pdfData) {&#xD;&#xA;        [pdfData writeToFile:[NSString stringWithFormat:@""%@/tmp.pdf"",NSTemporaryDirectory()] atomically: YES];&#xD;&#xA;      }&#xD;&#xA;      else&#xD;&#xA;      {&#xD;&#xA;        NSLog(@""PDF couldnot be created"");&#xD;&#xA;      }&#xD;&#xA;    }"
-7263003051969365212,29,5,"    <android.support.v4.widget.DrawerLayout&#xD;&#xA;        xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;        android:id=""@+id/drawer_layout""&#xD;&#xA;        android:layout_width=""match_parent""&#xD;&#xA;        android:layout_height=""match_parent"">&#xD;&#xA;    &#xD;&#xA;        <!-- As the main content view, the view below consumes the entire&#xD;&#xA;             space available using match_parent in both dimensions. -->&#xD;&#xA;        <FrameLayout&#xD;&#xA;            android:id=""@+id/content_frame""&#xD;&#xA;            android:layout_width=""match_parent""&#xD;&#xA;            android:layout_height=""match_parent"" />&#xD;&#xA;    &#xD;&#xA;        <!-- android:layout_gravity=""start"" tells DrawerLayout to treat&#xD;&#xA;             this as a sliding drawer on the left side for left-to-right&#xD;&#xA;             languages and on the right side for right-to-left languages.&#xD;&#xA;             The drawer is given a fixed width in dp and extends the full height of&#xD;&#xA;             the container. A solid background is used for contrast&#xD;&#xA;             with the content view. -->&#xD;&#xA;        <ListView&#xD;&#xA;            android:id=""@+id/left_drawer""&#xD;&#xA;            android:layout_width=""240dp""&#xD;&#xA;            android:layout_height=""match_parent""&#xD;&#xA;            android:layout_gravity=""start""&#xD;&#xA;            android:choiceMode=""singleChoice""&#xD;&#xA;            android:divider=""@android:color/transparent""&#xD;&#xA;            android:dividerHeight=""0dp""&#xD;&#xA;            android:background=""#111""/>&#xD;&#xA;    </android.support.v4.widget.DrawerLayout>"
-969775284486986516,29,5,"	DELIMITER $$&#xD;&#xA;	CREATE FUNCTION  `regex_replace`(pattern VARCHAR(1000),replacement VARCHAR(1000),original VARCHAR(1000))&#xD;&#xA;	RETURNS VARCHAR(1000)&#xD;&#xA;	DETERMINISTIC&#xD;&#xA;	BEGIN &#xD;&#xA;	 DECLARE temp VARCHAR(1000); &#xD;&#xA;	 DECLARE ch VARCHAR(1); &#xD;&#xA;	 DECLARE i INT;&#xD;&#xA;	 SET i = 1;&#xD;&#xA;	 SET temp = '';&#xD;&#xA;	 IF original REGEXP pattern THEN &#xD;&#xA;	  loop_label: LOOP &#xD;&#xA;	   IF i>CHAR_LENGTH(original) THEN&#xD;&#xA;		LEAVE loop_label;  &#xD;&#xA;	   END IF;&#xD;&#xA;	   SET ch = SUBSTRING(original,i,1);&#xD;&#xA;	   IF NOT ch REGEXP pattern THEN&#xD;&#xA;		SET temp = CONCAT(temp,ch);&#xD;&#xA;	   ELSE&#xD;&#xA;		SET temp = CONCAT(temp,replacement);&#xD;&#xA;	   END IF;&#xD;&#xA;	   SET i=i+1;&#xD;&#xA;	  END LOOP;&#xD;&#xA;	 ELSE&#xD;&#xA;	  SET temp = original;&#xD;&#xA;	 END IF;&#xD;&#xA;	 RETURN temp;&#xD;&#xA;	END$$&#xD;&#xA;	DELIMITER ;"
-1493628655251723135,29,5,"    <header class=""navbar navbar-fixed-top navbar-inverse"">&#xD;&#xA;      <div class=""container"">&#xD;&#xA;        <%= link_to ""sample app"", root_path, id: ""logo"" %>&#xD;&#xA;        <nav>&#xD;&#xA;          <ul class=""nav navbar-nav navbar-right"">&#xD;&#xA;            <li><%= link_to ""Home"", root_path %></li>&#xD;&#xA;            <li><%= link_to ""Help"", help_path %></li>&#xD;&#xA;            <% if logged_in? %>&#xD;&#xA;              <li><%= link_to ""Users"", '#' %></li>&#xD;&#xA;              <li class=""dropdown"">&#xD;&#xA;                <a href=""#"" class=""dropdown-toggle"" data-toggle=""dropdown"">&#xD;&#xA;                  Account <b class=""caret""></b>&#xD;&#xA;                </a>&#xD;&#xA;                <ul class=""dropdown-menu"">&#xD;&#xA;                  <li><%= link_to ""Profile"", current_user %></li>&#xD;&#xA;                  <li><%= link_to ""Settings"", '#' %></li>&#xD;&#xA;                  <li class=""divider""></li>&#xD;&#xA;                  <li>&#xD;&#xA;                    <%= link_to ""Log out"", logout_path, method: ""delete"" %>&#xD;&#xA;                  </li>&#xD;&#xA;                </ul>&#xD;&#xA;              </li>&#xD;&#xA;            <% else %>&#xD;&#xA;              <li><%= link_to ""Log in"", login_path %></li>&#xD;&#xA;            <% end %>&#xD;&#xA;          </ul>&#xD;&#xA;        </nav>&#xD;&#xA;      </div>&#xD;&#xA;    </header>"
8259472307472021851,29,5,"    //set POST variables&#xD;&#xA;    $url = 'http://domain.com/get-post.php';&#xD;&#xA;    $fields = array(&#xD;&#xA;    						'lname' => urlencode($last_name),&#xD;&#xA;    						'fname' => urlencode($first_name),&#xD;&#xA;    						'title' => urlencode($title),&#xD;&#xA;    						'company' => urlencode($institution),&#xD;&#xA;    						'age' => urlencode($age),&#xD;&#xA;    						'email' => urlencode($email),&#xD;&#xA;    						'phone' => urlencode($phone)&#xD;&#xA;    				);&#xD;&#xA;    &#xD;&#xA;    //url-ify the data for the POST&#xD;&#xA;    foreach($fields as $key=>$value) { $fields_string .= $key.'='.$value.'&'; }&#xD;&#xA;    rtrim($fields_string, '&');&#xD;&#xA;    &#xD;&#xA;    //open connection&#xD;&#xA;    $ch = curl_init();&#xD;&#xA;    &#xD;&#xA;    //set the url, number of POST vars, POST data&#xD;&#xA;    curl_setopt($ch,CURLOPT_URL, $url);&#xD;&#xA;    curl_setopt($ch,CURLOPT_POST, count($fields));&#xD;&#xA;    curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);&#xD;&#xA;    &#xD;&#xA;    //execute post&#xD;&#xA;    $result = curl_exec($ch);&#xD;&#xA;    &#xD;&#xA;    //close connection&#xD;&#xA;    curl_close($ch);"
-7828058016674612318,29,5,"		CREATE FUNCTION dbo.DelimitedSplit8K&#xD;&#xA;		--===== Define I/O parameters&#xD;&#xA;			(@pString VARCHAR(8000), @pDelimiter CHAR(1))&#xD;&#xA;		RETURNS TABLE WITH SCHEMABINDING AS&#xD;&#xA;		RETURN&#xD;&#xA;		--===== ""Inline"" CTE Driven ""Tally Table"" produces values from 0 up to 10,000...&#xD;&#xA;			-- enough to cover VARCHAR(8000)&#xD;&#xA;		WITH E1(N) AS (&#xD;&#xA;						SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1 UNION ALL &#xD;&#xA;						SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1 UNION ALL &#xD;&#xA;						SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1&#xD;&#xA;					),                          --10E+1 or 10 rows&#xD;&#xA;			E2(N) AS (SELECT 1 FROM E1 a, E1 b), --10E+2 or 100 rows&#xD;&#xA;			E4(N) AS (SELECT 1 FROM E2 a, E2 b), --10E+4 or 10,000 rows max&#xD;&#xA;		cteTally(N) AS (--==== This provides the ""zero base"" and limits the number of rows right up front&#xD;&#xA;							-- for both a performance gain and prevention of accidental ""overruns""&#xD;&#xA;						SELECT 0 UNION ALL&#xD;&#xA;						SELECT TOP (DATALENGTH(ISNULL(@pString,1))) ROW_NUMBER() OVER (ORDER BY (SELECT NULL)) FROM E4&#xD;&#xA;					),&#xD;&#xA;		cteStart(N1) AS (--==== This returns N+1 (starting position of each ""element"" just once for each delimiter)&#xD;&#xA;						SELECT t.N+1&#xD;&#xA;						FROM cteTally t&#xD;&#xA;						WHERE (SUBSTRING(@pString,t.N,1) = @pDelimiter OR t.N = 0) &#xD;&#xA;					)&#xD;&#xA;		--===== Do the actual split. The ISNULL/NULLIF combo handles the length for the final element when no delimiter is found.&#xD;&#xA;		SELECT ItemNumber = ROW_NUMBER() OVER(ORDER BY s.N1),&#xD;&#xA;			Item = SUBSTRING(@pString,s.N1,ISNULL(NULLIF(CHARINDEX(@pDelimiter,@pString,s.N1),0)-s.N1,8000))&#xD;&#xA;		FROM cteStart s;&#xD;&#xA;				"
1823709284932312754,29,5,"    package xj3dtest;&#xD;&#xA;    import java.awt.BorderLayout;&#xD;&#xA;    import java.awt.Component;&#xD;&#xA;    import java.awt.Container;&#xD;&#xA;    import javax.swing.JFrame;&#xD;&#xA;    import org.web3d.x3d.sai.Browser;&#xD;&#xA;    import org.web3d.x3d.sai.BrowserFactory;&#xD;&#xA;    import org.web3d.x3d.sai.X3DComponent;&#xD;&#xA;    import org.web3d.x3d.sai.X3DScene;&#xD;&#xA;    public class Xj3DTest extends JFrame {&#xD;&#xA;        public Xj3DTest(String title) {&#xD;&#xA;            super(title);&#xD;&#xA;            setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;&#xA;            X3DComponent x3dComponent = BrowserFactory.createX3DComponent(null);&#xD;&#xA;            Browser browser = x3dComponent.getBrowser();&#xD;&#xA;            Component browserComponent = (Component)  x3dComponent.getImplementation();&#xD;&#xA;            Container cp = getContentPane();&#xD;&#xA;            cp.setLayout(new BorderLayout());&#xD;&#xA;            cp.add(browserComponent, BorderLayout.CENTER);&#xD;&#xA;            X3DScene scene = browser.createX3DFromURL(new String[]   {""test.x3dv""});&#xD;&#xA;            browser.replaceWorld(scene);&#xD;&#xA;        }&#xD;&#xA;        public static void main(String[] args) {&#xD;&#xA;            Xj3DTest frame = new Xj3DTest(""Xj3D test"");&#xD;&#xA;            frame.setSize(640, 480);&#xD;&#xA;            frame.setLocationRelativeTo(null);&#xD;&#xA;            frame.setVisible(true);&#xD;&#xA;        }&#xD;&#xA;    }"
1548897826070195978,30,5,"    var net = require('net');&#xD;&#xA;    &#xD;&#xA;    var HOST = '127.0.0.1';&#xD;&#xA;    var PORT = 6969;&#xD;&#xA;    &#xD;&#xA;    // Create a server instance, and chain the listen function to it&#xD;&#xA;    // The function passed to net.createServer() becomes the event handler for the 'connection' event&#xD;&#xA;    // The sock object the callback function receives UNIQUE for each connection&#xD;&#xA;    net.createServer(function(sock) {&#xD;&#xA;        &#xD;&#xA;        // We have a connection - a socket object is assigned to the connection automatically&#xD;&#xA;        console.log('CONNECTED: ' + sock.remoteAddress +':'+ sock.remotePort);&#xD;&#xA;        &#xD;&#xA;        // Add a 'data' event handler to this instance of socket&#xD;&#xA;        sock.on('data', function(data) {&#xD;&#xA;            &#xD;&#xA;            console.log('DATA ' + sock.remoteAddress + ': ' + data);&#xD;&#xA;            // Write the data back to the socket, the client will receive it as data from the server&#xD;&#xA;            sock.write('You said ""' + data + '""');&#xD;&#xA;            &#xD;&#xA;        });&#xD;&#xA;        &#xD;&#xA;        // Add a 'close' event handler to this instance of socket&#xD;&#xA;        sock.on('close', function(data) {&#xD;&#xA;            console.log('CLOSED: ' + sock.remoteAddress +' '+ sock.remotePort);&#xD;&#xA;        });&#xD;&#xA;        &#xD;&#xA;    }).listen(PORT, HOST);&#xD;&#xA;    &#xD;&#xA;    console.log('Server listening on ' + HOST +':'+ PORT);"
-8828663845120501121,30,5,"     public function getBooks($start = 0, $limit = 2, $order = ""ASC"")&#xD;&#xA;      {&#xD;&#xA;       $sql_start = $start * $limit;&#xD;&#xA;       $sql_limit = $limit;&#xD;&#xA;	   $sql_order_by = $order;&#xD;&#xA;	   &#xD;&#xA;       $query = ""SELECT Library.nameOfBook, userBook.book_id, userBook.user_id FROM loginUser JOIN userBook JOIN Library ON userBook.user_id = loginUser.id AND userBook.book_id = Library.id WHERE loginUser.username=:username ORDER BY Library.nameOfBook $sql_order_by LIMIT $sql_start, $sql_limit"";&#xD;&#xA;       $statment = $this->db->prepare($query);&#xD;&#xA;       $statment->execute([&#xD;&#xA;           ':username' => $this->username&#xD;&#xA;       ]);&#xD;&#xA;       $result = $statment->fetchAll();&#xD;&#xA;   &#xD;&#xA;      echo ""<table id='myTable' border='1'>&#xD;&#xA;   &#xD;&#xA;      <tr>&#xD;&#xA;       <th><a id='sorter' href='#'>Books</a></th>&#xD;&#xA;       <th>Action</th>&#xD;&#xA;       </tr>"";&#xD;&#xA;       foreach($result as $row){&#xD;&#xA;           echo ""<tr>"";&#xD;&#xA;           echo ""<td>"" . $row['nameOfBook'] . ""</td>"";&#xD;&#xA;           echo ""<td>"" .""<input type='submit' id='delete"".$row['book_id'].""-"".$row['user_id'].""' onclick='deleteBook(this)' name='delete' value='Delete'>"" . ""</td>"";&#xD;&#xA;           echo ""</tr>"";&#xD;&#xA;       }&#xD;&#xA;   &#xD;&#xA;       echo ""</table>"";&#xD;&#xA;       echo """";&#xD;&#xA;	   return count($result);&#xD;&#xA;     }  "
-3240397532954157423,30,5,"            <HorizontalScrollView&#xD;&#xA;                android:layout_width=""match_parent""&#xD;&#xA;                android:layout_height=""fill_parent""&#xD;&#xA;                android:layout_below=""@+id/seatLegendLayout"">&#xD;&#xA;                <FrameLayout&#xD;&#xA;                    android:layout_width=""fill_parent""&#xD;&#xA;                    android:layout_height=""match_parent"">&#xD;&#xA;                    <LinearLayout&#xD;&#xA;                        android:id=""@+id/linearLayout_gridtableLayout""&#xD;&#xA;                        android:layout_width=""900dp""&#xD;&#xA;                        android:layout_height=""match_parent""&#xD;&#xA;                        android:orientation=""horizontal"">&#xD;&#xA;                        <GridView&#xD;&#xA;                            android:id=""@+id/gridView1""&#xD;&#xA;                            android:layout_width=""fill_parent""&#xD;&#xA;                            android:layout_height=""fill_parent""&#xD;&#xA;                            android:layout_margin=""4dp""&#xD;&#xA;                            android:columnWidth=""100dp""&#xD;&#xA;                            android:gravity=""center""&#xD;&#xA;                            android:numColumns=""9""&#xD;&#xA;                            android:horizontalSpacing=""1dp""&#xD;&#xA;                            android:scrollbarAlwaysDrawHorizontalTrack=""true""&#xD;&#xA;                            android:scrollbarAlwaysDrawVerticalTrack=""true""&#xD;&#xA;                            android:scrollbars=""horizontal""&#xD;&#xA;                            android:stretchMode=""none""&#xD;&#xA;                            android:verticalSpacing=""1dp"">&#xD;&#xA;                        </GridView>&#xD;&#xA;                    </LinearLayout>&#xD;&#xA;                </FrameLayout>&#xD;&#xA;            </HorizontalScrollView>"
-3719643776915177699,30,5,"    Function IsFileOpen(filename As String)&#xD;&#xA;        Dim filenum As Integer, errnum As Integer&#xD;&#xA;    &#xD;&#xA;        On Error Resume Next   ' Turn error checking off.&#xD;&#xA;        filenum = FreeFile()   ' Get a free file number.&#xD;&#xA;        ' Attempt to open the file and lock it.&#xD;&#xA;        Open filename For Input Lock Read As #filenum&#xD;&#xA;        Close filenum          ' Close the file.&#xD;&#xA;        errnum = Err           ' Save the error number that occurred.&#xD;&#xA;        On Error GoTo 0        ' Turn error checking back on.&#xD;&#xA;    &#xD;&#xA;        ' Check to see which error occurred.&#xD;&#xA;        Select Case errnum&#xD;&#xA;    &#xD;&#xA;            ' No error occurred.&#xD;&#xA;            ' File is NOT already open by another user.&#xD;&#xA;            Case 0&#xD;&#xA;             IsFileOpen = False&#xD;&#xA;    &#xD;&#xA;            ' Error number for ""Permission Denied.""&#xD;&#xA;            ' File is already opened by another user.&#xD;&#xA;            Case 70&#xD;&#xA;                IsFileOpen = True&#xD;&#xA;    &#xD;&#xA;            ' Another error occurred.&#xD;&#xA;            Case Else&#xD;&#xA;                Error errnum&#xD;&#xA;        End Select&#xD;&#xA;    &#xD;&#xA;    End Function"
-2006690659696412697,30,5,"    ================    ===============================&#xD;&#xA;    character           description&#xD;&#xA;    ================    ===============================&#xD;&#xA;       -                solid line style&#xD;&#xA;       --               dashed line style&#xD;&#xA;       -.               dash-dot line style&#xD;&#xA;       :                dotted line style&#xD;&#xA;       .                point marker&#xD;&#xA;       ,                pixel marker&#xD;&#xA;       o                circle marker&#xD;&#xA;       v                triangle_down marker&#xD;&#xA;       ^                triangle_up marker&#xD;&#xA;       <                triangle_left marker&#xD;&#xA;       >                triangle_right marker&#xD;&#xA;       1                tri_down marker&#xD;&#xA;       2                tri_up marker&#xD;&#xA;       3                tri_left marker&#xD;&#xA;       4                tri_right marker&#xD;&#xA;       s                square marker&#xD;&#xA;       p                pentagon marker&#xD;&#xA;       *                star marker&#xD;&#xA;       h                hexagon1 marker&#xD;&#xA;       H                hexagon2 marker&#xD;&#xA;       +                plus marker&#xD;&#xA;       x                x marker&#xD;&#xA;       D                diamond marker&#xD;&#xA;       d                thin_diamond marker&#xD;&#xA;       |                vline marker&#xD;&#xA;       _                hline marker&#xD;&#xA;    ================    ==============================="
256132523948787002,30,5,"    CREATE TYPE VARCHAR2_TABLE AS TABLE OF VARCHAR2(4000);&#xD;&#xA;    /&#xD;&#xA;    &#xD;&#xA;    CREATE OR REPLACE FUNCTION split_String(&#xD;&#xA;      i_str    IN  VARCHAR2,&#xD;&#xA;      i_delim  IN  VARCHAR2 DEFAULT ','&#xD;&#xA;    ) RETURN VARCHAR2_TABLE DETERMINISTIC&#xD;&#xA;    AS&#xD;&#xA;      p_result       VARCHAR2_TABLE := VARCHAR2_TABLE();&#xD;&#xA;      p_start        NUMBER(5) := 1;&#xD;&#xA;      p_end          NUMBER(5);&#xD;&#xA;      c_len CONSTANT NUMBER(5) := LENGTH( i_str );&#xD;&#xA;      c_ld  CONSTANT NUMBER(5) := LENGTH( i_delim );&#xD;&#xA;    BEGIN&#xD;&#xA;      IF c_len > 0 THEN&#xD;&#xA;        p_end := INSTR( i_str, i_delim, p_start );&#xD;&#xA;        WHILE p_end > 0 LOOP&#xD;&#xA;          p_result.EXTEND;&#xD;&#xA;          p_result( p_result.COUNT ) := SUBSTR( i_str, p_start, p_end - p_start );&#xD;&#xA;          p_start := p_end + c_ld;&#xD;&#xA;          p_end := INSTR( i_str, i_delim, p_start );&#xD;&#xA;        END LOOP;&#xD;&#xA;        IF p_start <= c_len + 1 THEN&#xD;&#xA;          p_result.EXTEND;&#xD;&#xA;          p_result( p_result.COUNT ) := SUBSTR( i_str, p_start, c_len - p_start + 1 );&#xD;&#xA;        END IF;&#xD;&#xA;      END IF;&#xD;&#xA;      RETURN p_result;&#xD;&#xA;    END;&#xD;&#xA;    /"
7599229106722182407,30,5,"    <?php    &#xD;&#xA;    $databasehost = ""localhost"";&#xD;&#xA;    $databasename = ""test"";&#xD;&#xA;    $databasetable = ""sample""; &#xD;&#xA;    $databaseusername=""test""; &#xD;&#xA;    $databasepassword = """";&#xD;&#xA;    $fieldseparator = "","";&#xD;&#xA;    $lineseparator = ""\n"";&#xD;&#xA;    $csvfile = ""filename.csv"";&#xD;&#xA;    if(!file_exists($csvfile)) {&#xD;&#xA;    die(""File not found. Make sure you specified the correct path."");&#xD;&#xA;    }&#xD;&#xA;    try {&#xD;&#xA;    $pdo = new PDO(""mysql:host=$databasehost;dbname=$databasename"", &#xD;&#xA;        $databaseusername, $databasepassword,&#xD;&#xA;        array(&#xD;&#xA;            PDO::MYSQL_ATTR_LOCAL_INFILE => true,&#xD;&#xA;            PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION&#xD;&#xA;        )&#xD;&#xA;    );&#xD;&#xA;    } catch (PDOException $e) {&#xD;&#xA;    die(""database connection failed: "".$e->getMessage());&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    $affectedRows = $pdo->exec('&#xD;&#xA;    LOAD DATA LOCAL INFILE "".$pdo->quote($csvfile)."" INTO TABLE `$databasetable`&#xD;&#xA;      FIELDS TERMINATED BY "".$pdo->quote($fieldseparator).""&#xD;&#xA;      LINES TERMINATED BY "".$pdo->quote($lineseparator))."" ');&#xD;&#xA;    echo ""Loaded a total of $affectedRows records from this csv file.\n"";&#xD;&#xA;    ?>"
1923697936279501963,30,5,"        - (void)zoomToFitMapAnnotations:(MKMapView *)mapView { &#xD;&#xA;        if ([mapView.annotations count] == 0) return; &#xD;&#xA;    &#xD;&#xA;        CLLocationCoordinate2D topLeftCoord; &#xD;&#xA;        topLeftCoord.latitude = -90; &#xD;&#xA;        topLeftCoord.longitude = 180; &#xD;&#xA;    &#xD;&#xA;        CLLocationCoordinate2D bottomRightCoord; &#xD;&#xA;        bottomRightCoord.latitude = 90; &#xD;&#xA;        bottomRightCoord.longitude = -180; &#xD;&#xA;    &#xD;&#xA;        for(MapAnnotation *annotation in mapView.annotations) { &#xD;&#xA;            topLeftCoord.longitude = fmin(topLeftCoord.longitude, annotation.coordinate.longitude); &#xD;&#xA;            topLeftCoord.latitude = fmax(topLeftCoord.latitude, annotation.coordinate.latitude); &#xD;&#xA;            bottomRightCoord.longitude = fmax(bottomRightCoord.longitude, annotation.coordinate.longitude); &#xD;&#xA;            bottomRightCoord.latitude = fmin(bottomRightCoord.latitude, annotation.coordinate.latitude); &#xD;&#xA;        } &#xD;&#xA;    &#xD;&#xA;        MKCoordinateRegion region; &#xD;&#xA;        region.center.latitude = topLeftCoord.latitude - (topLeftCoord.latitude - bottomRightCoord.latitude) * 0.5; &#xD;&#xA;        region.center.longitude = topLeftCoord.longitude + (bottomRightCoord.longitude - topLeftCoord.longitude) * 0.5;      &#xD;&#xA;        region.span.latitudeDelta = fabs(topLeftCoord.latitude - bottomRightCoord.latitude) * 1.1; &#xD;&#xA;    &#xD;&#xA;        // Add a little extra space on the sides &#xD;&#xA;        region.span.longitudeDelta = fabs(bottomRightCoord.longitude - topLeftCoord.longitude) * 1.1; &#xD;&#xA;    &#xD;&#xA;        // Add a little extra space on the sides &#xD;&#xA;        region = [mapView regionThatFits:region]; &#xD;&#xA;        [mapView setRegion:region animated:YES]; &#xD;&#xA;    }"
-8752529285949493474,30,5,"    public static void createMessage(String to, String from, String subject, String body, List<File> attachments) {&#xD;&#xA;        try {&#xD;&#xA;            Message message = new MimeMessage(Session.getInstance(System.getProperties()));&#xD;&#xA;            message.setFrom(new InternetAddress(from));&#xD;&#xA;            message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(to));&#xD;&#xA;            message.setSubject(subject);&#xD;&#xA;            // create the message part &#xD;&#xA;            MimeBodyPart content = new MimeBodyPart();&#xD;&#xA;            // fill message&#xD;&#xA;            content.setText(body);&#xD;&#xA;            Multipart multipart = new MimeMultipart();&#xD;&#xA;            multipart.addBodyPart(content);&#xD;&#xA;            // add attachments&#xD;&#xA;            for(File file : attachments) {&#xD;&#xA;                MimeBodyPart attachment = new MimeBodyPart();&#xD;&#xA;                DataSource source = new FileDataSource(file);&#xD;&#xA;                attachment.setDataHandler(new DataHandler(source));&#xD;&#xA;                attachment.setFileName(file.getName());&#xD;&#xA;                multipart.addBodyPart(attachment);&#xD;&#xA;            }&#xD;&#xA;            // integration&#xD;&#xA;            message.setContent(multipart);&#xD;&#xA;            // store file&#xD;&#xA;            message.writeTo(new FileOutputStream(new File(""c:/mail.eml"")));&#xD;&#xA;        } catch (MessagingException ex) {&#xD;&#xA;            Logger.getLogger(Mailkit.class.getName()).log(Level.SEVERE, null, ex);&#xD;&#xA;        } catch (IOException ex) {&#xD;&#xA;            Logger.getLogger(Mailkit.class.getName()).log(Level.SEVERE, null, ex);&#xD;&#xA;        }&#xD;&#xA;    }"
-7645854894603918178,30,5,"	/**&#xD;&#xA;	 * Gets the MediaStore video ID of a given file on external storage&#xD;&#xA;	 * @param filePath The path (on external storage) of the file to resolve the ID of&#xD;&#xA;	 * @param contentResolver The content resolver to use to perform the query.&#xD;&#xA;	 * @return the video ID as a long&#xD;&#xA;	 */&#xD;&#xA;	private long getVideoIdFromFilePath(String filePath,&#xD;&#xA;			ContentResolver contentResolver) {&#xD;&#xA;		long videoId;&#xD;&#xA;		Log.d(TAG,""Loading file "" + filePath);&#xD;&#xA;		&#xD;&#xA;                // This returns us content://media/external/videos/media (or something like that)&#xD;&#xA;                // I pass in ""external"" because that's the MediaStore's name for the external&#xD;&#xA;                // storage on my device (the other possibility is ""internal"")&#xD;&#xA;		Uri videosUri = MediaStore.Video.Media.getContentUri(""external"");&#xD;&#xA;		&#xD;&#xA;		Log.d(TAG,""videosUri = "" + videosUri.toString());&#xD;&#xA;		&#xD;&#xA;		String[] projection = {MediaStore.Video.VideoColumns._ID};&#xD;&#xA;		&#xD;&#xA;		// TODO This will break if we have no matching item in the MediaStore.&#xD;&#xA;		Cursor cursor = contentResolver.query(videosUri, projection, MediaStore.Video.VideoColumns.DATA + "" LIKE ?"", new String[] { filePath }, null);&#xD;&#xA;		cursor.moveToFirst();&#xD;&#xA;		int columnIndex = cursor.getColumnIndex(projection[0]);&#xD;&#xA;		videoId = cursor.getLong(columnIndex);&#xD;&#xA;		&#xD;&#xA;		Log.d(TAG,""Video ID is "" + videoId);&#xD;&#xA;		cursor.close();&#xD;&#xA;		return videoId;&#xD;&#xA;	}"
1798836197498047916,30,5,"    <?php&#xD;&#xA;    include('login.php'); // Includes Login Script&#xD;&#xA;    &#xD;&#xA;    if(isset($_SESSION['login_user'])){&#xD;&#xA;    header(""location: profile.php"");&#xD;&#xA;    }&#xD;&#xA;    ?>&#xD;&#xA;    <!DOCTYPE html>&#xD;&#xA;    <html>&#xD;&#xA;    <head>&#xD;&#xA;    <title>Login Form in PHP with Session</title>&#xD;&#xA;    <link href=""style.css"" rel=""stylesheet"" type=""text/css"">&#xD;&#xA;    </head>&#xD;&#xA;    <body>&#xD;&#xA;    <div id=""main"">&#xD;&#xA;    <h1>PHP Login Session Example</h1>&#xD;&#xA;    <div id=""login"">&#xD;&#xA;    <h2>Login Form</h2>&#xD;&#xA;    <form action="""" method=""post"">&#xD;&#xA;    <label>UserName :</label>&#xD;&#xA;    <input id=""name"" name=""username"" placeholder=""username"" type=""text"">&#xD;&#xA;    <label>Password :</label>&#xD;&#xA;    <input id=""password"" name=""password"" placeholder=""**********"" type=""password"">&#xD;&#xA;    <input name=""submit"" type=""submit"" value="" Login "">&#xD;&#xA;    <span><?php echo $error; ?></span>&#xD;&#xA;    </form>&#xD;&#xA;    </div>&#xD;&#xA;    </div>&#xD;&#xA;    </body>&#xD;&#xA;    </html>"
-8655074471080518241,30,5,"        <android.support.design.widget.CoordinatorLayout&#xD;&#xA;             xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;             xmlns:app=""http://schemas.android.com/apk/res-auto""&#xD;&#xA;             android:layout_width=""match_parent""&#xD;&#xA;             android:layout_height=""match_parent"">&#xD;&#xA;    &#xD;&#xA;         <android.support.v4.widget.NestedScrollView&#xD;&#xA;                 android:layout_width=""match_parent""&#xD;&#xA;                 android:layout_height=""match_parent""&#xD;&#xA;                 app:layout_behavior=""@string/appbar_scrolling_view_behavior"">&#xD;&#xA;    &#xD;&#xA;             <!-- Your scrolling content -->&#xD;&#xA;    &#xD;&#xA;         </android.support.v4.widget.NestedScrollView>&#xD;&#xA;    &#xD;&#xA;         <android.support.design.widget.AppBarLayout&#xD;&#xA;                 android:layout_height=""wrap_content""&#xD;&#xA;                 android:layout_width=""match_parent"">&#xD;&#xA;    &#xD;&#xA;             <android.support.v7.widget.Toolbar&#xD;&#xA;                     ...&#xD;&#xA;                     app:layout_scrollFlags=""scroll|enterAlways""/>&#xD;&#xA;    &#xD;&#xA;             <android.support.design.widget.TabLayout&#xD;&#xA;                     ...&#xD;&#xA;                     app:layout_scrollFlags=""scroll|enterAlways""/>&#xD;&#xA;    &#xD;&#xA;         </android.support.design.widget.AppBarLayout>&#xD;&#xA;    &#xD;&#xA;     </android.support.design.widget.CoordinatorLayout>"
-3170955870342331909,30,5,"    // Take the Max/Min of all data values in all graphs&#xD;&#xA;    var totalMax = 345;&#xD;&#xA;    var totalMin = -123;&#xD;&#xA;    &#xD;&#xA;    // Figure out the largest number (positive or negative)&#xD;&#xA;    var biggestNumber = Math.max(Math.abs(totalMax),Math.abs(totalMin));&#xD;&#xA;    &#xD;&#xA;    // Round to an exponent of 10 appropriate for the biggest number&#xD;&#xA;    var roundingExp = Math.floor(Math.log(biggestNumber) / Math.LN10);&#xD;&#xA;    var roundingDec = Math.pow(10,roundingExp);&#xD;&#xA;    &#xD;&#xA;    // Round your max and min to the nearest exponent of 10&#xD;&#xA;    var newMax = Math.ceil(totalMax/roundingDec)*roundingDec;&#xD;&#xA;    var newMin = Math.floor(totalMin/roundingDec)*roundingDec;&#xD;&#xA;    &#xD;&#xA;    // Determine the range of your values&#xD;&#xA;    var range = newMax - newMin;&#xD;&#xA;    &#xD;&#xA;    // Define the number of gridlines (default 5)&#xD;&#xA;    var gridlines = 5;&#xD;&#xA;    &#xD;&#xA;    // Determine an appropriate gap between gridlines&#xD;&#xA;    var interval = range / (gridlines - 1);&#xD;&#xA;    &#xD;&#xA;    // Round that interval up to the exponent of 10&#xD;&#xA;    var newInterval = Math.ceil(interval/roundingDec)*roundingDec;&#xD;&#xA;    &#xD;&#xA;    // Re-round your max and min to the new interval&#xD;&#xA;    var finalMax = Math.ceil(totalMax/newInterval)*newInterval;&#xD;&#xA;    var finalMin = Math.floor(totalMin/newInterval)*newInterval;"
-7167976661059979767,30,5,"	  <div>    &#xD;&#xA;	    <hr>&#xD;&#xA;	    <div class=""col-md-3""> &#xD;&#xA;	      <form>&#xD;&#xA;		<div class=""form-group"">&#xD;&#xA;		  <label for=""exampleSelect1""><b>Parent</b></label>&#xD;&#xA;		  <select ng-model=""selectedParent""&#xD;&#xA;		    ng-init=""selectedParent = null""&#xD;&#xA;		    ng-change=""onParentChange(selectedParent)""&#xD;&#xA;		    class=""form-control"" id=""data"">&#xD;&#xA;		    <option value="""">--Select--</option>&#xD;&#xA;		    <option ng-repeat=""(key,value) in data | orderBy:'parentName'| groupBy:'parentName'"">{{key}}</option>           &#xD;&#xA;		  </select>&#xD;&#xA;		</div>              &#xD;&#xA;	      </form>  &#xD;&#xA;	    </div>      &#xD;&#xA;	    <div class=""col-md-3"">      &#xD;&#xA;	      <form>    &#xD;&#xA;		<div class=""form-group"">&#xD;&#xA;		  <label for=""exampleSelect1""><b>Child Names</b></label>&#xD;&#xA;		  <select class=""form-control"" id=""childnames"" ng-model=""child"" &#xD;&#xA;		    ng-disabled=""!selectedParent""&#xD;&#xA;		    ng-options=""data.childName for data in data| filter: {parentName:selectedParent} | removeWith:{childName : 'Infant Food'}"" ng-change=""getValue()"">&#xD;&#xA;		    <option value="""">--Select--</option>&#xD;&#xA;		  </select>&#xD;&#xA;		</div>          &#xD;&#xA;	      </form>     &#xD;&#xA;	  </div>&#xD;&#xA;	    <div ui-view=""subbody""></div>&#xD;&#xA;	  </div>"
-4558207377818555949,30,5,"	create procedure [usp_my_procedure_name]&#xD;&#xA;	as&#xD;&#xA;	begin&#xD;&#xA;		set nocount on;&#xD;&#xA;		declare @trancount int;&#xD;&#xA;		set @trancount = @@trancount;&#xD;&#xA;		begin try&#xD;&#xA;			if @trancount = 0&#xD;&#xA;				begin transaction&#xD;&#xA;			else&#xD;&#xA;				save transaction usp_my_procedure_name;&#xD;&#xA;			-- Do the actual work here&#xD;&#xA;		&#xD;&#xA;	lbexit:&#xD;&#xA;			if @trancount = 0	&#xD;&#xA;				commit;&#xD;&#xA;		end try&#xD;&#xA;		begin catch&#xD;&#xA;			declare @error int, @message varchar(4000), @xstate int;&#xD;&#xA;			select @error = ERROR_NUMBER(), @message = ERROR_MESSAGE(), @xstate = XACT_STATE();&#xD;&#xA;			if @xstate = -1&#xD;&#xA;				rollback;&#xD;&#xA;			if @xstate = 1 and @trancount = 0&#xD;&#xA;				rollback&#xD;&#xA;			if @xstate = 1 and @trancount > 0&#xD;&#xA;				rollback transaction usp_my_procedure_name;&#xD;&#xA;			raiserror ('usp_my_procedure_name: %d: %s', 16, 1, @error, @message) ;&#xD;&#xA;		end catch	&#xD;&#xA;	end&#xD;&#xA;	go"
7578684628097229581,31,5,"    var db_config = {&#xD;&#xA;      host: 'localhost',&#xD;&#xA;        user: 'root',&#xD;&#xA;        password: '',&#xD;&#xA;        database: 'example'&#xD;&#xA;    };&#xD;&#xA;    &#xD;&#xA;    var connection;&#xD;&#xA;    &#xD;&#xA;    function handleDisconnect() {&#xD;&#xA;      connection = mysql.createConnection(db_config); // Recreate the connection, since&#xD;&#xA;                                                      // the old one cannot be reused.&#xD;&#xA;    &#xD;&#xA;      connection.connect(function(err) {              // The server is either down&#xD;&#xA;        if(err) {                                     // or restarting (takes a while sometimes).&#xD;&#xA;          console.log('error when connecting to db:', err);&#xD;&#xA;          setTimeout(handleDisconnect, 2000); // We introduce a delay before attempting to reconnect,&#xD;&#xA;        }                                     // to avoid a hot loop, and to allow our node script to&#xD;&#xA;      });                                     // process asynchronous requests in the meantime.&#xD;&#xA;                                              // If you're also serving http, display a 503 error.&#xD;&#xA;      connection.on('error', function(err) {&#xD;&#xA;        console.log('db error', err);&#xD;&#xA;        if(err.code === 'PROTOCOL_CONNECTION_LOST') { // Connection to the MySQL server is usually&#xD;&#xA;          handleDisconnect();                         // lost due to either server restart, or a&#xD;&#xA;        } else {                                      // connnection idle timeout (the wait_timeout&#xD;&#xA;          throw err;                                  // server variable configures this)&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    handleDisconnect();"
4529272327549489563,31,5,"    //If the operation is a set(), and the referenced structures &#xD;&#xA;    //don't exist, they will be created automatically.&#xD;&#xA;    var webSQLOptionsObj = {&#xD;&#xA;        databaseName: ""Example_DB"",&#xD;&#xA;        databaseDisplayName: ""Example DB"",&#xD;&#xA;        databaseVersion: """",&#xD;&#xA;        estimatedDatabaseSize: 1024 * 1024,&#xD;&#xA;        tableData: {&#xD;&#xA;            name: ""Main"",&#xD;&#xA;            keyColumnName: ""lastName"",&#xD;&#xA;            columnDefinitions: ""(lastName TEXT PRIMARY KEY, firstName TEXT)""&#xD;&#xA;        }, &#xD;&#xA;        tableIndexDataArray: [name: ""First_Name_Index"", columnNames: ""(firstName)""]&#xD;&#xA;    };&#xD;&#xA;    var indexedDBOptionsObj = {&#xD;&#xA;        databaseName: ""Example_DB"",&#xD;&#xA;        databaseVersion: 1,&#xD;&#xA;        objectStoreData: {&#xD;&#xA;            name: ""Main"",&#xD;&#xA;            keyPath: lastName,&#xD;&#xA;            autoIncrement: false&#xD;&#xA;        },&#xD;&#xA;        objectStoreIndexDataArray: [&#xD;&#xA;            {name: ""First_Name_Index"", keyPath: ""firstName"", unique: false, multiEntry: false}&#xD;&#xA;        ],&#xD;&#xA;    };&#xD;&#xA;    var optionsObj = {&#xD;&#xA;        conductDisjointly: false, &#xD;&#xA;        webSQL: webSQLOptionsObj, &#xD;&#xA;        indexedDB: indexedDBOptionsObj&#xD;&#xA;    };"
3704344147495627549,31,5,"    // sock is bound AF_INET socket, usually SOCK_DGRAM&#xD;&#xA;    // include struct in_pktinfo in the message ""ancilliary"" control data&#xD;&#xA;    setsockopt(sock, IPPROTO_IP, IP_PKTINFO, &opt, sizeof(opt));&#xD;&#xA;    // the control data is dumped here&#xD;&#xA;    char cmbuf[0x100];&#xD;&#xA;    // the remote/source sockaddr is put here&#xD;&#xA;    struct sockaddr_in peeraddr;&#xD;&#xA;    // if you want access to the data you need to init the msg_iovec fields&#xD;&#xA;    struct msghdr mh = {&#xD;&#xA;        .msg_name = &peeraddr,&#xD;&#xA;        .msg_namelen = sizeof(peeraddr),&#xD;&#xA;        .msg_control = cmbuf,&#xD;&#xA;        .msg_controllen = sizeof(cmbuf),&#xD;&#xA;    };&#xD;&#xA;    recvmsg(sock, &mh, 0);&#xD;&#xA;    for ( // iterate through all the control headers&#xD;&#xA;        struct cmsghdr *cmsg = CMSG_FIRSTHDR(&mh);&#xD;&#xA;        cmsg != NULL;&#xD;&#xA;        cmsg = CMSG_NXTHDR(&mh, cmsg))&#xD;&#xA;    {&#xD;&#xA;        // ignore the control headers that don't match what we want&#xD;&#xA;        if (cmsg->cmsg_level != IPPROTO_IP ||&#xD;&#xA;            cmsg->cmsg_type != IP_PKTINFO)&#xD;&#xA;        {&#xD;&#xA;            continue;&#xD;&#xA;        }&#xD;&#xA;        struct in_pktinfo *pi = CMSG_DATA(cmsg);&#xD;&#xA;        // at this point, peeraddr is the source sockaddr&#xD;&#xA;        // pi->ipi_spec_dst is the destination in_addr&#xD;&#xA;        // pi->ipi_addr is the receiving interface in_addr&#xD;&#xA;    }"
-2249971359891746921,31,5,"    <html>&#xD;&#xA;      <head>&#xD;&#xA;      {% block head %}&#xD;&#xA;        <title>blah</title>&#xD;&#xA;      {% if request.mobile %}&#xD;&#xA;        <link rel=""stylesheet"" href=""{{ MEDIA_URL }}/styles/base-mobile.css"">&#xD;&#xA;      {% else %}&#xD;&#xA;        <link rel=""stylesheet"" href=""{{ MEDIA_URL }}/styles/base-desktop.css"">&#xD;&#xA;      {% endif %}&#xD;&#xA;      </head>&#xD;&#xA;      <body>&#xD;&#xA;        <div id=""navigation"">&#xD;&#xA;          {% include ""_navigation.html"" %}&#xD;&#xA;        </div>&#xD;&#xA;        {% if not request.mobile %}&#xD;&#xA;        <div id=""sidebar"">&#xD;&#xA;          <p> sidebar content not fit for mobile </p>&#xD;&#xA;        </div>&#xD;&#xA;        {% endif %>&#xD;&#xA;        <div id=""content"">&#xD;&#xA;          <article>&#xD;&#xA;            {% if not request.mobile %}&#xD;&#xA;            <aside>&#xD;&#xA;              <p> aside content </p>&#xD;&#xA;            </aside>&#xD;&#xA;            {% endif %}&#xD;&#xA;            <p> article content </p>&#xD;&#xA;          </aricle>&#xD;&#xA;        </div>&#xD;&#xA;      </body>&#xD;&#xA;    </html>"
-4683002830059403787,31,5,"    require_once('../class.phpmailer.php');&#xD;&#xA;    //include(""class.smtp.php""); // optional, gets called from within class.phpmailer.php if not already loaded&#xD;&#xA;    $mail             = new PHPMailer();&#xD;&#xA;    $body             = file_get_contents('contents.html');&#xD;&#xA;    $body             = eregi_replace(""[\]"",'',$body);&#xD;&#xA;    $mail->IsSMTP(); // telling the class to use SMTP&#xD;&#xA;    $mail->Host       = ""mail.yourdomain.com""; // SMTP server&#xD;&#xA;    $mail->SMTPDebug  = 2;                     // enables SMTP debug information (for testing)&#xD;&#xA;    // 1 = errors and messages&#xD;&#xA;    // 2 = messages only&#xD;&#xA;    $mail->SMTPAuth   = true;                  // enable SMTP authentication&#xD;&#xA;    $mail->SMTPSecure = ""tls"";                 // sets the prefix to the servier&#xD;&#xA;    $mail->Host       = ""smtp.gmail.com"";      // sets GMAIL as the SMTP server&#xD;&#xA;    $mail->Port       = 587;                   // set the SMTP port for the GMAIL server&#xD;&#xA;    $mail->Username   = ""yourusername@gmail.com"";  // GMAIL username&#xD;&#xA;    $mail->Password   = ""yourpassword"";            // GMAIL password&#xD;&#xA;    $mail->SetFrom('name@yourdomain.com', 'First Last');&#xD;&#xA;    $mail->AddReplyTo(""name@yourdomain.com"",""First Last"");&#xD;&#xA;    $mail->Subject    = ""PHPMailer Test Subject via smtp (Gmail), basic"";&#xD;&#xA;    $mail->AltBody    = ""To view the message, please use an HTML compatible email viewer!""; // optional, comment out and test&#xD;&#xA;    $mail->MsgHTML($body);&#xD;&#xA;    $address = ""whoto@otherdomain.com"";&#xD;&#xA;    $mail->AddAddress($address, ""John Doe"");&#xD;&#xA;    $mail->AddAttachment(""images/phpmailer.gif"");      // attachment&#xD;&#xA;    $mail->AddAttachment(""images/phpmailer_mini.gif""); // attachment&#xD;&#xA;    &#xD;&#xA;    if(!$mail->Send()) {&#xD;&#xA;    echo ""Mailer Error: "" . $mail->ErrorInfo;&#xD;&#xA;    } else {&#xD;&#xA;    echo ""Message sent!"";&#xD;&#xA;    }"
-378524755876173744,31,5,"    - (NSData *)AES256EncryptWithKey:(NSString *)key {&#xD;&#xA;        // 'key' should be 32 bytes for AES256, will be null-padded otherwise&#xD;&#xA;        char keyPtr[kCCKeySizeAES256+1]; // room for terminator (unused)&#xD;&#xA;        bzero(keyPtr, sizeof(keyPtr)); // fill with zeroes (for padding)&#xD;&#xA;        &#xD;&#xA;        // fetch key data&#xD;&#xA;        [key getCString:keyPtr maxLength:sizeof(keyPtr) encoding:NSUTF8StringEncoding];&#xD;&#xA;        &#xD;&#xA;        NSUInteger dataLength = [self length];&#xD;&#xA;        &#xD;&#xA;        //See the doc: For block ciphers, the output size will always be less than or&#xD;&#xA;        //equal to the input size plus the size of one block.&#xD;&#xA;        //That's why we need to add the size of one block here&#xD;&#xA;        size_t bufferSize = dataLength + kCCBlockSizeAES128;&#xD;&#xA;        void *buffer = malloc(bufferSize);&#xD;&#xA;        &#xD;&#xA;        size_t numBytesEncrypted = 0;&#xD;&#xA;        CCCryptorStatus cryptStatus = CCCrypt(kCCEncrypt, kCCAlgorithmAES128, kCCOptionPKCS7Padding,&#xD;&#xA;                                              keyPtr, kCCKeySizeAES256,&#xD;&#xA;                                              NULL /* initialization vector (optional) */,&#xD;&#xA;                                              [self bytes], dataLength, /* input */&#xD;&#xA;                                              buffer, bufferSize, /* output */&#xD;&#xA;                                              &numBytesEncrypted);&#xD;&#xA;        if (cryptStatus == kCCSuccess) {&#xD;&#xA;            //the returned NSData takes ownership of the buffer and will free it on deallocation&#xD;&#xA;            return [NSData dataWithBytesNoCopy:buffer length:numBytesEncrypted];&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        free(buffer); //free the buffer;&#xD;&#xA;        return nil;&#xD;&#xA;    }"
2385982369885959105,31,5,"     try {&#xD;&#xA;        File f = new File(imagePath);&#xD;&#xA;        ExifInterface exif = new ExifInterface(f.getPath());&#xD;&#xA;        int orientation = exif.getAttributeInt(&#xD;&#xA;                ExifInterface.TAG_ORIENTATION,&#xD;&#xA;                ExifInterface.ORIENTATION_NORMAL);&#xD;&#xA;        int angle = 0;&#xD;&#xA;        if (orientation == ExifInterface.ORIENTATION_ROTATE_90) {&#xD;&#xA;            angle = 90;&#xD;&#xA;        } else if (orientation == ExifInterface.ORIENTATION_ROTATE_180) {&#xD;&#xA;            angle = 180;&#xD;&#xA;        } else if (orientation == ExifInterface.ORIENTATION_ROTATE_270) {&#xD;&#xA;            angle = 270;&#xD;&#xA;        }&#xD;&#xA;        Matrix mat = new Matrix();&#xD;&#xA;        mat.postRotate(angle);&#xD;&#xA;        BitmapFactory.Options options = new BitmapFactory.Options();&#xD;&#xA;        options.inSampleSize = 2;&#xD;&#xA;        Bitmap bmp = BitmapFactory.decodeStream(new FileInputStream(f),&#xD;&#xA;                null, options);&#xD;&#xA;        bitmap = Bitmap.createBitmap(bmp, 0, 0, bmp.getWidth(),&#xD;&#xA;                bmp.getHeight(), mat, true);&#xD;&#xA;        ByteArrayOutputStream outstudentstreamOutputStream = new ByteArrayOutputStream();&#xD;&#xA;        bitmap.compress(Bitmap.CompressFormat.PNG, 100,&#xD;&#xA;                outstudentstreamOutputStream);&#xD;&#xA;        imageView.setImageBitmap(bitmap);&#xD;&#xA;    } catch (IOException e) {&#xD;&#xA;        Log.w(""TAG"", ""-- Error in setting image"");&#xD;&#xA;    } catch (OutOfMemoryError oom) {&#xD;&#xA;        Log.w(""TAG"", ""-- OOM Error in setting image"");&#xD;&#xA;    }"
-1773720707591408982,31,5,"    function time_elapsed_string($ptime)&#xD;&#xA;    {&#xD;&#xA;        $etime = time() - $ptime;&#xD;&#xA;        if ($etime < 1)&#xD;&#xA;        {&#xD;&#xA;            return '0 seconds';&#xD;&#xA;        }&#xD;&#xA;        $a = array( 365 * 24 * 60 * 60  =>  'year',&#xD;&#xA;                     30 * 24 * 60 * 60  =>  'month',&#xD;&#xA;                          24 * 60 * 60  =>  'day',&#xD;&#xA;                               60 * 60  =>  'hour',&#xD;&#xA;                                    60  =>  'minute',&#xD;&#xA;                                     1  =>  'second'&#xD;&#xA;                    );&#xD;&#xA;        $a_plural = array( 'year'   => 'years',&#xD;&#xA;                           'month'  => 'months',&#xD;&#xA;                           'day'    => 'days',&#xD;&#xA;                           'hour'   => 'hours',&#xD;&#xA;                           'minute' => 'minutes',&#xD;&#xA;                           'second' => 'seconds'&#xD;&#xA;                    );&#xD;&#xA;        foreach ($a as $secs => $str)&#xD;&#xA;        {&#xD;&#xA;            $d = $etime / $secs;&#xD;&#xA;            if ($d >= 1)&#xD;&#xA;            {&#xD;&#xA;                $r = round($d);&#xD;&#xA;                return $r . ' ' . ($r > 1 ? $a_plural[$str] : $str) . ' ago';&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }"
-7703794767365978573,31,5,    * {&#xD;&#xA;      box-sizing: border-box;&#xD;&#xA;    }&#xD;&#xA;    #myInput {&#xD;&#xA;      background-image: url('/css/searchicon.png');&#xD;&#xA;      background-position: 10px 12px;&#xD;&#xA;      background-repeat: no-repeat;&#xD;&#xA;      width: 100%;&#xD;&#xA;      font-size: 16px;&#xD;&#xA;      padding: 12px 20px 12px 40px;&#xD;&#xA;      border: 1px solid #ddd;&#xD;&#xA;      margin-bottom: 12px;&#xD;&#xA;    }&#xD;&#xA;    #myUL {&#xD;&#xA;      list-style-type: none;&#xD;&#xA;      padding: 0;&#xD;&#xA;      margin: 0;&#xD;&#xA;    }&#xD;&#xA;    #myUL li a {&#xD;&#xA;      border: 1px solid #ddd;&#xD;&#xA;      margin-top: -1px; /* Prevent double borders */&#xD;&#xA;      background-color: #f6f6f6;&#xD;&#xA;      padding: 12px;&#xD;&#xA;      text-decoration: none;&#xD;&#xA;      font-size: 18px;&#xD;&#xA;      color: black;&#xD;&#xA;      display: block&#xD;&#xA;    }&#xD;&#xA;    #myUL li a:hover:not(.header) {&#xD;&#xA;      background-color: #eee;&#xD;&#xA;    }
6015780740095343998,31,5,"       String str;&#xD;&#xA;            SqlConnection myConn = new SqlConnection (""Server=localhost;Integrated security=SSPI;database=master"");&#xD;&#xA;        &#xD;&#xA;            str = ""CREATE DATABASE MyDatabase ON PRIMARY "" +&#xD;&#xA;                ""(NAME = MyDatabase_Data, "" +&#xD;&#xA;                ""FILENAME = 'C:\\MyDatabaseData.mdf', "" +&#xD;&#xA;                ""SIZE = 2MB, MAXSIZE = 10MB, FILEGROWTH = 10%) "" +&#xD;&#xA;                ""LOG ON (NAME = MyDatabase_Log, "" +&#xD;&#xA;                ""FILENAME = 'C:\\MyDatabaseLog.ldf', "" +&#xD;&#xA;                ""SIZE = 1MB, "" +&#xD;&#xA;                ""MAXSIZE = 5MB, "" +&#xD;&#xA;                ""FILEGROWTH = 10%)"";&#xD;&#xA;        &#xD;&#xA;            SqlCommand myCommand = new SqlCommand(str, myConn);&#xD;&#xA;            try &#xD;&#xA;            {&#xD;&#xA;                myConn.Open();&#xD;&#xA;        myCommand.ExecuteNonQuery();&#xD;&#xA;        MessageBox.Show(""DataBase is Created Successfully"", ""MyProgram"", MessageBoxButtons.OK, MessageBoxIcon.Information);&#xD;&#xA;            }&#xD;&#xA;            catch (System.Exception ex)&#xD;&#xA;            {&#xD;&#xA;        MessageBox.Show(ex.ToString(), ""MyProgram"", MessageBoxButtons.OK, MessageBoxIcon.Information);&#xD;&#xA;            }&#xD;&#xA;            finally&#xD;&#xA;            {&#xD;&#xA;        if (myConn.State == ConnectionState.Open)&#xD;&#xA;        {&#xD;&#xA;            myConn.Close();&#xD;&#xA;        }&#xD;&#xA;            }"
6567577517072161682,32,5,"    class Shop < ActiveRecord::Base    &#xD;&#xA;      attr_accessor :logo_cache&#xD;&#xA;      has_attached_file :logo&#xD;&#xA;      def cache_images&#xD;&#xA;        if logo.staged?&#xD;&#xA;          if invalid?&#xD;&#xA;            FileUtils.cp(logo.queued_for_write[:original].path, logo.path(:original))&#xD;&#xA;            @logo_cache = encrypt(logo.path(:original))&#xD;&#xA;          end&#xD;&#xA;        else&#xD;&#xA;          if @logo_cache.present?&#xD;&#xA;            File.open(decrypt(@logo_cache)) {|f| assign_attributes(logo: f)}&#xD;&#xA;          end&#xD;&#xA;        end&#xD;&#xA;      end&#xD;&#xA;      private&#xD;&#xA;      def decrypt(data)&#xD;&#xA;        return '' unless data.present?&#xD;&#xA;        cipher = build_cipher(:decrypt, 'mypassword')&#xD;&#xA;        cipher.update(Base64.urlsafe_decode64(data).unpack('m')[0]) + cipher.final&#xD;&#xA;      end&#xD;&#xA;      def encrypt(data)&#xD;&#xA;        return '' unless data.present?&#xD;&#xA;        cipher = build_cipher(:encrypt, 'mypassword')&#xD;&#xA;        Base64.urlsafe_encode64([cipher.update(data) + cipher.final].pack('m'))&#xD;&#xA;      end&#xD;&#xA;      def build_cipher(type, password)&#xD;&#xA;        cipher = OpenSSL::Cipher::Cipher.new('DES-EDE3-CBC').send(type)&#xD;&#xA;        cipher.pkcs5_keyivgen(password)&#xD;&#xA;        cipher&#xD;&#xA;      end&#xD;&#xA;    end"
1059115151761878432,32,5,"        var windw = this;&#xD;&#xA;    &#xD;&#xA;    $.fn.followTo = function ( elem ) {&#xD;&#xA;        var $this = this,&#xD;&#xA;            $window = $(windw),&#xD;&#xA;            $bumper = $(elem),&#xD;&#xA;            bumperPos = $bumper.offset().top,&#xD;&#xA;            thisHeight = $this.outerHeight(),&#xD;&#xA;            setPosition = function(){&#xD;&#xA;                if ($window.scrollTop() > (bumperPos - thisHeight)) {&#xD;&#xA;                    $this.css({&#xD;&#xA;                        position: 'absolute',&#xD;&#xA;                        top: (bumperPos - thisHeight)&#xD;&#xA;                    });&#xD;&#xA;                } else {&#xD;&#xA;                    $this.css({&#xD;&#xA;                        position: 'fixed',&#xD;&#xA;                        top: 0&#xD;&#xA;                    });&#xD;&#xA;                }&#xD;&#xA;            };&#xD;&#xA;        $window.resize(function()&#xD;&#xA;        {&#xD;&#xA;            bumperPos = pos.offset().top;&#xD;&#xA;            thisHeight = $this.outerHeight();&#xD;&#xA;            setPosition();&#xD;&#xA;        });&#xD;&#xA;        $window.scroll(setPosition);&#xD;&#xA;        setPosition();&#xD;&#xA;    };&#xD;&#xA;    &#xD;&#xA;    $('#one').followTo('#two');"
-3990695818406800162,32,5,"	<?php &#xD;&#xA;	if(isset($_POST['submit'])){&#xD;&#xA;		$to = ""email@example.com""; // this is your Email address&#xD;&#xA;		$from = $_POST['email']; // this is the sender's Email address&#xD;&#xA;		$first_name = $_POST['first_name'];&#xD;&#xA;		$last_name = $_POST['last_name'];&#xD;&#xA;		$subject = ""Form submission"";&#xD;&#xA;		$subject2 = ""Copy of your form submission"";&#xD;&#xA;		$message = $first_name . "" "" . $last_name . "" wrote the following:"" . ""\n\n"" . $_POST['message'];&#xD;&#xA;		$message2 = ""Here is a copy of your message "" . $first_name . ""\n\n"" . $_POST['message'];&#xD;&#xA;		$headers = ""From:"" . $from;&#xD;&#xA;		$headers2 = ""From:"" . $to;&#xD;&#xA;		mail($to,$subject,$message,$headers);&#xD;&#xA;		mail($from,$subject2,$message2,$headers2); // sends a copy of the message to the sender&#xD;&#xA;		echo ""Mail Sent. Thank you "" . $first_name . "", we will contact you shortly."";&#xD;&#xA;		// You can also use header('Location: thank_you.php'); to redirect to another page.&#xD;&#xA;		}&#xD;&#xA;	?>&#xD;&#xA;	<!DOCTYPE html>&#xD;&#xA;	<head>&#xD;&#xA;	<title>Form submission</title>&#xD;&#xA;	</head>&#xD;&#xA;	<body>&#xD;&#xA;	<form action="""" method=""post"">&#xD;&#xA;	First Name: <input type=""text"" name=""first_name""><br>&#xD;&#xA;	Last Name: <input type=""text"" name=""last_name""><br>&#xD;&#xA;	Email: <input type=""text"" name=""email""><br>&#xD;&#xA;	Message:<br><textarea rows=""5"" name=""message"" cols=""30""></textarea><br>&#xD;&#xA;	<input type=""submit"" name=""submit"" value=""Submit"">&#xD;&#xA;	</form>&#xD;&#xA;	</body>&#xD;&#xA;	</html> "
-5985462402618514748,32,5,"    public class AndroidWebImage extends Activity {&#xD;&#xA;    &#xD;&#xA;    ImageView bmImage; &#xD;&#xA;    LinearLayout view;&#xD;&#xA;      /** Called when the activity is first created. */&#xD;&#xA;      @Override&#xD;&#xA;      public void onCreate(Bundle savedInstanceState) {&#xD;&#xA;          super.onCreate(savedInstanceState);&#xD;&#xA;          setContentView(R.layout.main);&#xD;&#xA;          &#xD;&#xA;          view = (LinearLayout)findViewById(R.id.screen);&#xD;&#xA;          bmImage = (ImageView)findViewById(R.id.image);&#xD;&#xA;    &#xD;&#xA;          view.setDrawingCacheEnabled(true);&#xD;&#xA;          // this is the important code :)  &#xD;&#xA;          // Without it the view will have a dimension of 0,0 and the bitmap will be null          &#xD;&#xA;    &#xD;&#xA;          view.measure(MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED), &#xD;&#xA;                MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED));&#xD;&#xA;    &#xD;&#xA;          view.layout(0, 0, view.getMeasuredWidth(), view.getMeasuredHeight()); &#xD;&#xA;    &#xD;&#xA;          view.buildDrawingCache(true);&#xD;&#xA;          Bitmap b = Bitmap.createBitmap(view.getDrawingCache());&#xD;&#xA;          view.setDrawingCacheEnabled(false); // clear drawing cache&#xD;&#xA;       &#xD;&#xA;          bmImage.setImageBitmap(b);   &#xD;&#xA;      &#xD;&#xA;    };&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    }"
3584122120388913186,32,5,"     /// <summary>&#xD;&#xA;            /// Download a file&#xD;&#xA;            /// Documentation: https://developers.google.com/drive/v2/reference/files/get&#xD;&#xA;            /// </summary>&#xD;&#xA;            /// <param name=""_service"">a Valid authenticated DriveService</param>&#xD;&#xA;            /// <param name=""_fileResource"">File resource of the file to download</param>&#xD;&#xA;            /// <param name=""_saveTo"">location of where to save the file including the file name to save it as.</param>&#xD;&#xA;            /// <returns></returns>&#xD;&#xA;            public static Boolean downloadFile(DriveService _service, File _fileResource, string _saveTo)&#xD;&#xA;            {&#xD;&#xA;    &#xD;&#xA;                if (!String.IsNullOrEmpty(_fileResource.DownloadUrl))&#xD;&#xA;                {&#xD;&#xA;                    try&#xD;&#xA;                    {&#xD;&#xA;                        var x = _service.HttpClient.GetByteArrayAsync(_fileResource.DownloadUrl );&#xD;&#xA;                        byte[] arrBytes = x.Result;&#xD;&#xA;                        System.IO.File.WriteAllBytes(_saveTo, arrBytes);&#xD;&#xA;                        return true;                  &#xD;&#xA;                    }&#xD;&#xA;                    catch (Exception e)&#xD;&#xA;                    {&#xD;&#xA;                        Console.WriteLine(""An error occurred: "" + e.Message);&#xD;&#xA;                        return false;&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;                else&#xD;&#xA;                {&#xD;&#xA;                    // The file doesn't have any content stored on Drive.&#xD;&#xA;                    return false;&#xD;&#xA;                }&#xD;&#xA;            }"
3034799112008502437,33,5,"    // createCookie()&#xD;&#xA;    // name and value are strings&#xD;&#xA;    // days is the number of days until cookie expiration&#xD;&#xA;    // path is optional and should start with a leading ""/"" &#xD;&#xA;    //   and can limit which pages on your site can &#xD;&#xA;    //   read the cookie.&#xD;&#xA;    //   By default, all pages on the site can read&#xD;&#xA;    //   the cookie if path is not specified&#xD;&#xA;    function createCookie(name, value, days, path) {&#xD;&#xA;        var date, expires = """";&#xD;&#xA;        path = path || ""/"";&#xD;&#xA;        if (days) {&#xD;&#xA;            date = new Date();&#xD;&#xA;            date.setTime(date.getTime()+(days*24*60*60*1000));&#xD;&#xA;            expires = ""; expires="" + date.toGMTString();&#xD;&#xA;        }&#xD;&#xA;        document.cookie = name + ""="" + value + expires + ""; path="" + path;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    function readCookie(name) {&#xD;&#xA;        var nameEQ = name + ""="";&#xD;&#xA;        var ca = document.cookie.split(';');&#xD;&#xA;        for (var i = 0; i < ca.length; i++) {&#xD;&#xA;            var c = ca[i];&#xD;&#xA;            while (c.charAt(0)==' ') c = c.substring(1,c.length);&#xD;&#xA;            if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);&#xD;&#xA;        }&#xD;&#xA;        return null;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    function eraseCookie(name) {&#xD;&#xA;        createCookie(name, """", -1);&#xD;&#xA;    }"
-5000724854272072693,33,5,"    require_once __DIR__ . '/vendor/autoload.php';&#xD;&#xA;    // Use the developers console and download your service account&#xD;&#xA;    // credentials in JSON format. Place the file in this directory or&#xD;&#xA;    // change the key file location if necessary.&#xD;&#xA;    putenv('GOOGLE_APPLICATION_CREDENTIALS='.__DIR__.'/service-account.json');&#xD;&#xA;    /**&#xD;&#xA;     * Gets the Google client refreshing auth if needed.&#xD;&#xA;     * Documentation: https://developers.google.com/identity/protocols/OAuth2ServiceAccount&#xD;&#xA;     * Initializes a client object.&#xD;&#xA;     * @return A google client object.&#xD;&#xA;     */&#xD;&#xA;    function getGoogleClient() {&#xD;&#xA;    	return getServiceAccountClient();&#xD;&#xA;    }&#xD;&#xA;    /**&#xD;&#xA;     * Builds the Google client object.&#xD;&#xA;     * Documentation: https://developers.google.com/api-client-library/php/auth/service-accounts&#xD;&#xA;     * Scopes will need to be changed depending upon the API's being accessed. &#xD;&#xA;     * array(Google_Service_Analytics::ANALYTICS_READONLY, Google_Service_Analytics::ANALYTICS)&#xD;&#xA;     * List of Google Scopes: https://developers.google.com/identity/protocols/googlescopes&#xD;&#xA;     * @return A google client object.&#xD;&#xA;     */&#xD;&#xA;    function getServiceAccountClient() {&#xD;&#xA;    	try {	&#xD;&#xA;    		// Create and configure a new client object.		&#xD;&#xA;    		$client = new Google_Client();&#xD;&#xA;    		$client->useApplicationDefaultCredentials();&#xD;&#xA;    		$client->addScope([YOUR SCOPES HERE]);&#xD;&#xA;    		return $client;&#xD;&#xA;    	} catch (Exception $e) {&#xD;&#xA;    		print ""An error occurred: "" . $e->getMessage();&#xD;&#xA;    	}&#xD;&#xA;    }"
3083973318397202958,33,5,"      /*&#xD;&#xA;         Prabhakar&#xD;&#xA;      */&#xD;&#xA;    <%@ page contentType=""text/html; charset=UTF-8"" %>    &#xD;&#xA;    <%@ taglib prefix=""s"" uri=""/struts-tags"" %>&#xD;&#xA;    <script>&#xD;&#xA;        <%@include file=""../js/jquery-1.7.1.min.js""%>&#xD;&#xA;    </script>&#xD;&#xA;    <html>&#xD;&#xA;        <!-- JavaScript Plugins -->&#xD;&#xA;        <script>&#xD;&#xA;            function getLoad(){&#xD;&#xA;                var stateId = $('#state').val();&#xD;&#xA;                $.getJSON('HelloWorld.action', {'stateId': stateId},&#xD;&#xA;                function(data) {&#xD;&#xA;                    var divisionList = (data.regnList);&#xD;&#xA;                    var options = $(""#regn"");&#xD;&#xA;                    options.find('option')&#xD;&#xA;                    .remove()&#xD;&#xA;                    .end();&#xD;&#xA;                    options.append($(""<option />"").val(""-1"").text(""--Select--""));&#xD;&#xA;                    $.each(divisionList, function() {&#xD;&#xA;                        options.append($(""<option />"").val(this.regnId).text(this.regnName));&#xD;&#xA;                    });&#xD;&#xA;                }&#xD;&#xA;            );}&#xD;&#xA;        </script>&#xD;&#xA;        <!-- jQuery-UI Dependent Scripts -->&#xD;&#xA;        <body>&#xD;&#xA;            State List <s:select name=""stateId"" list=""stateList"" id=""state"" listKey=""stateId"" onchange=""getLoad()"" listValue=""stateName"" headerKey=""0"" headerValue=""--select--"" />&#xD;&#xA;        Regn List <s:select name=""regnId""  list=""regnList"" listKey=""regnId"" id=""regn"" listValue=""regnName"" headerKey=""0"" headerValue=""--select--"" />&#xD;&#xA;    </body>&#xD;&#xA;    </html>"
-2270864392363945364,33,5,"    private void copyAssets() {&#xD;&#xA;	    AssetManager assetManager = getAssets();&#xD;&#xA;	    String[] files = null;&#xD;&#xA;	    try {&#xD;&#xA;	        files = assetManager.list("""");&#xD;&#xA;	    } catch (IOException e) {&#xD;&#xA;	        Log.e(""tag"", ""Failed to get asset file list."", e);&#xD;&#xA;	    }&#xD;&#xA;	    for(String filename : files) {&#xD;&#xA;	        InputStream in = null;&#xD;&#xA;	        OutputStream out = null;&#xD;&#xA;	        try {&#xD;&#xA;	          in = assetManager.open(filename);&#xD;&#xA;	          File outFile = new File(getExternalFilesDir(null), filename);&#xD;&#xA;	          out = new FileOutputStream(outFile);&#xD;&#xA;	          copyFile(in, out);&#xD;&#xA;	          in.close();&#xD;&#xA;	          in = null;&#xD;&#xA;	          out.flush();&#xD;&#xA;	          out.close();&#xD;&#xA;	          out = null;&#xD;&#xA;	        } catch(IOException e) {&#xD;&#xA;	            Log.e(""tag"", ""Failed to copy asset file: "" + filename, e);&#xD;&#xA;	        }       &#xD;&#xA;	    }&#xD;&#xA;	}&#xD;&#xA;	private void copyFile(InputStream in, OutputStream out) throws IOException {&#xD;&#xA;	    byte[] buffer = new byte[1024];&#xD;&#xA;	    int read;&#xD;&#xA;	    while((read = in.read(buffer)) != -1){&#xD;&#xA;	      out.write(buffer, 0, read);&#xD;&#xA;	    }&#xD;&#xA;	}"
803453707608000930,33,5,"    CREATE FUNCTION hierarchy_connect_by_parent_eq_prior_id(value INT) RETURNS INT&#xD;&#xA;    NOT DETERMINISTIC&#xD;&#xA;    READS SQL DATA&#xD;&#xA;    BEGIN&#xD;&#xA;            DECLARE _id INT;&#xD;&#xA;            DECLARE _parent INT;&#xD;&#xA;            DECLARE _next INT;&#xD;&#xA;            DECLARE CONTINUE HANDLER FOR NOT FOUND SET @id = NULL;&#xD;&#xA;    &#xD;&#xA;            SET _parent = @id;&#xD;&#xA;            SET _id = -1;&#xD;&#xA;    &#xD;&#xA;            IF @id IS NULL THEN&#xD;&#xA;                    RETURN NULL;&#xD;&#xA;            END IF;&#xD;&#xA;    &#xD;&#xA;            LOOP&#xD;&#xA;                    SELECT  MIN(id)&#xD;&#xA;                    INTO    @id&#xD;&#xA;                    FROM    t_hierarchy&#xD;&#xA;                    WHERE   parent = _parent&#xD;&#xA;                            AND id > _id;&#xD;&#xA;                    IF @id IS NOT NULL OR _parent = @start_with THEN&#xD;&#xA;                            SET @level = @level + 1;&#xD;&#xA;                            RETURN @id;&#xD;&#xA;                    END IF;&#xD;&#xA;                    SET @level := @level - 1;&#xD;&#xA;                    SELECT  id, parent&#xD;&#xA;                    INTO    _id, _parent&#xD;&#xA;                    FROM    t_hierarchy&#xD;&#xA;                    WHERE   id = _parent;&#xD;&#xA;            END LOOP;       &#xD;&#xA;    END"
-4265396399830083832,33,5,"    <?xml version=""1.0"" encoding=""ISO-8859-1"" ?>&#xD;&#xA;    <xs:schema xmlns:xs=""http://www.w3.org/2001/XMLSchema"">&#xD;&#xA;    &#xD;&#xA;    <xs:element name=""shiporder"">&#xD;&#xA;      <xs:complexType>&#xD;&#xA;        <xs:sequence>&#xD;&#xA;          <xs:element name=""orderperson"" type=""xs:string""/>&#xD;&#xA;          <xs:element name=""shipto"">&#xD;&#xA;            <xs:complexType>&#xD;&#xA;              <xs:sequence>&#xD;&#xA;                <xs:element name=""name"" type=""xs:string""/>&#xD;&#xA;                <xs:element name=""address"" type=""xs:string""/>&#xD;&#xA;                <xs:element name=""city"" type=""xs:string""/>&#xD;&#xA;                <xs:element name=""country"" type=""xs:string""/>&#xD;&#xA;              </xs:sequence>&#xD;&#xA;            </xs:complexType>&#xD;&#xA;          </xs:element>&#xD;&#xA;          <xs:element name=""item"" maxOccurs=""unbounded"">&#xD;&#xA;            <xs:complexType>&#xD;&#xA;              <xs:sequence>&#xD;&#xA;                <xs:element name=""title"" type=""xs:string""/>&#xD;&#xA;                <xs:element name=""note"" type=""xs:string"" minOccurs=""0""/>&#xD;&#xA;                <xs:element name=""quantity"" type=""xs:positiveInteger""/>&#xD;&#xA;                <xs:element name=""price"" type=""xs:decimal""/>&#xD;&#xA;              </xs:sequence>&#xD;&#xA;            </xs:complexType>&#xD;&#xA;          </xs:element>&#xD;&#xA;        </xs:sequence>&#xD;&#xA;        <xs:attribute name=""orderid"" type=""xs:string"" use=""required""/>&#xD;&#xA;      </xs:complexType>&#xD;&#xA;    </xs:element>&#xD;&#xA;    &#xD;&#xA;    </xs:schema>"
-8387648772833438311,33,5,"     Sub XMLHTTP()&#xD;&#xA;    Dim url As String, lastRow As Long&#xD;&#xA;    Dim XMLHTTP As Object, html As Object, objResultDiv As Object, objH3 As Object, link As Object&#xD;&#xA;    Dim start_time As Date&#xD;&#xA;    Dim end_time As Date&#xD;&#xA;    lastRow = Range(""A"" & Rows.Count).End(xlUp).Row&#xD;&#xA;    Dim cookie As String&#xD;&#xA;    Dim result_cookie As String&#xD;&#xA;    start_time = Time&#xD;&#xA;    Debug.Print ""start_time:"" & start_time&#xD;&#xA;    For i = 2 To lastRow&#xD;&#xA;        url = ""https://www.google.co.in/search?q="" & Cells(i, 1) & ""&rnd="" & WorksheetFunction.RandBetween(1, 10000)&#xD;&#xA;        Set XMLHTTP = CreateObject(""MSXML2.serverXMLHTTP"")&#xD;&#xA;        XMLHTTP.Open ""GET"", url, False&#xD;&#xA;        XMLHTTP.setRequestHeader ""Content-Type"", ""text/xml""&#xD;&#xA;        XMLHTTP.setRequestHeader ""User-Agent"", ""Mozilla/5.0 (Windows NT 6.1; rv:25.0) Gecko/20100101 Firefox/25.0""&#xD;&#xA;        XMLHTTP.send&#xD;&#xA;            Set html = CreateObject(""htmlfile"")&#xD;&#xA;        html.body.innerHTML = XMLHTTP.ResponseText&#xD;&#xA;        Set objResultDiv = html.getelementbyid(""rso"")&#xD;&#xA;        Set objH3 = objResultDiv.getelementsbytagname(""H3"")(0)&#xD;&#xA;        Set link = objH3.getelementsbytagname(""a"")(0)&#xD;&#xA;        str_text = Replace(link.innerHTML, ""<EM>"", """")&#xD;&#xA;        str_text = Replace(str_text, ""</EM>"", """")&#xD;&#xA;        Cells(i, 2) = str_text&#xD;&#xA;        Cells(i, 3) = link.href&#xD;&#xA;        DoEvents&#xD;&#xA;    Next&#xD;&#xA;    end_time = Time&#xD;&#xA;    Debug.Print ""end_time:"" & end_time&#xD;&#xA;    Debug.Print ""done"" & ""Time taken : "" & DateDiff(""n"", start_time, end_time)&#xD;&#xA;        MsgBox ""done"" & ""Time taken : "" & DateDiff(""n"", start_time, end_time)&#xD;&#xA;    End Sub"
738485049224269259,33,5,"    <?xml version=""1.0"" encoding=""utf-8"" ?>&#xD;&#xA;    <portfolio>&#xD;&#xA;      <account>&#xD;&#xA;        <acct custid=""1"" fname=""Tommy"" lname=""Hawk"" &#xD;&#xA;            ssn=""928-329-1929"" dob=""4/6/1988""></acct>&#xD;&#xA;        <deposits depid=""1000"" depdate=""1/2/2011"" depamount=""1350.53""></deposits>&#xD;&#xA;        <deposits depid=""1003"" depdate=""2/3/2011"" depamount=""1377.81""></deposits>&#xD;&#xA;        <deposits depid=""1008"" depdate=""3/14/2011"" depamount=""84.00""></deposits>&#xD;&#xA;        <withdrawals wdid=""2001"" wddate=""1/31/2011"" wdamount=""80.00""></withdrawals>&#xD;&#xA;        <withdrawals wdid=""2005"" wddate=""4/8/2011"" wdamount=""80.00""></withdrawals>&#xD;&#xA;        <withdrawals wdid=""2007"" wddate=""6/1/2011"" wdamount=""2600.00""></withdrawals>&#xD;&#xA;      </account>&#xD;&#xA;      <account>&#xD;&#xA;        <acct custid=""2"" fname=""I. P."" lname=""Nightly"" &#xD;&#xA;            ssn=""457-23-4871"" dob=""6/1/1945""></acct>&#xD;&#xA;        <deposits depid=""1004"" depdate=""2/8/2011"" depamount=""741.22""></deposits>&#xD;&#xA;        <deposits depid=""1005"" depdate=""2/9/2011"" depamount=""47.00""></deposits>&#xD;&#xA;        <deposits depid=""1009"" depdate=""3/14/2011"" depamount=""89.99""></deposits>&#xD;&#xA;        <withdrawals wdid=""2003"" wddate=""3/1/2011"" wdamount=""55.00""></withdrawals>&#xD;&#xA;        <withdrawals wdid=""2004"" wddate=""3/3/2011"" wdamount=""28.00""></withdrawals>&#xD;&#xA;        <withdrawals wdid=""2006"" wddate=""4/8/2011"" wdamount=""450.00""></withdrawals>&#xD;&#xA;      </account>&#xD;&#xA;      <account>&#xD;&#xA;        <acct custid=""3"" fname=""Mary"" lname=""Echmass"" &#xD;&#xA;            ssn=""192-01-2933"" dob=""8/10/1973""></acct>&#xD;&#xA;        <deposits depid=""1002"" depdate=""1/15/2011"" depamount=""841.77""></deposits>&#xD;&#xA;        <deposits depid=""1006"" depdate=""2/14/2011"" depamount=""2170.00""></deposits>&#xD;&#xA;        <deposits depid=""1007"" depdate=""3/10/2011"" depamount=""21.01""></deposits>&#xD;&#xA;        <withdrawals wdid=""2002"" wddate=""1/16/2011"" wdamount=""700.00""></withdrawals>&#xD;&#xA;        <withdrawals wdid=""2008"" wddate=""6/3/2011"" wdamount=""24.00""></withdrawals>&#xD;&#xA;        <withdrawals wdid=""2009"" wddate=""6/30/2100"" wdamount=""38.46""></withdrawals>&#xD;&#xA;      </account>  &#xD;&#xA;    </portfolio>"
4693286438772526599,33,5,"	//&#xD;&#xA;	//  Hello World server in C++&#xD;&#xA;	//  Binds REP socket to tcp://*:5555&#xD;&#xA;	//  Expects ""Hello"" from client, replies with ""World""&#xD;&#xA;	//&#xD;&#xA;	#include <zmq.hpp>&#xD;&#xA;	#include <string>&#xD;&#xA;	#include <iostream>&#xD;&#xA;	#include <unistd.h>&#xD;&#xA;	&#xD;&#xA;	int main () {&#xD;&#xA;	    //  Prepare our context and socket&#xD;&#xA;	    zmq::context_t context (1);&#xD;&#xA;	    zmq::socket_t socket (context, ZMQ_REP);&#xD;&#xA;	    socket.bind (""tcp://*:5555"");&#xD;&#xA;	&#xD;&#xA;	    while (true) {&#xD;&#xA;	        zmq::message_t request;&#xD;&#xA;	&#xD;&#xA;	        //  Wait for next request from client&#xD;&#xA;	        socket.recv (&request);&#xD;&#xA;	        std::cout << ""Received Hello"" << std::endl;&#xD;&#xA;	&#xD;&#xA;	        //  Do some 'work'&#xD;&#xA;	        sleep (1);&#xD;&#xA;	&#xD;&#xA;	        //  Send reply back to client&#xD;&#xA;	        zmq::message_t reply (5);&#xD;&#xA;	        memcpy ((void *) reply.data (), ""World"", 5);&#xD;&#xA;	        socket.send (reply);&#xD;&#xA;	    }&#xD;&#xA;	    return 0;&#xD;&#xA;	}"
-8196280358382062293,33,5,"    Sub ADOImportFromAccessTable(DBFullName As String, _&#xD;&#xA;        TableName As String, TargetRange As Range)&#xD;&#xA;    ' Example: ADOImportFromAccessTable ""C:\FolderName\DataBaseName.mdb"", _&#xD;&#xA;        ""TableName"", Range(""C1"")&#xD;&#xA;    Dim cn As ADODB.Connection, rs As ADODB.Recordset, intColIndex As Integer&#xD;&#xA;        Set TargetRange = TargetRange.Cells(1, 1)&#xD;&#xA;        ' open the database&#xD;&#xA;        Set cn = New ADODB.Connection&#xD;&#xA;        cn.Open ""Provider=Microsoft.Jet.OLEDB.4.0; Data Source="" & _&#xD;&#xA;            DBFullName & "";""&#xD;&#xA;        Set rs = New ADODB.Recordset&#xD;&#xA;        With rs&#xD;&#xA;            ' open the recordset&#xD;&#xA;            .Open TableName, cn, adOpenStatic, adLockOptimistic, adCmdTable &#xD;&#xA;            ' all records&#xD;&#xA;            '.Open ""SELECT * FROM "" & TableName & _&#xD;&#xA;                "" WHERE [FieldName] = 'MyCriteria'"", cn, , , adCmdText &#xD;&#xA;            ' filter records&#xD;&#xA;            &#xD;&#xA;            RS2WS rs, TargetRange ' write data from the recordset to the worksheet&#xD;&#xA;            &#xD;&#xA;    '        ' optional approach for Excel 2000 or later (RS2WS is not necessary)&#xD;&#xA;    '        For intColIndex = 0 To rs.Fields.Count - 1 ' the field names&#xD;&#xA;    '            TargetRange.Offset(0, intColIndex).Value = rs.Fields(intColIndex).Name&#xD;&#xA;    '        Next&#xD;&#xA;    '        TargetRange.Offset(1, 0).CopyFromRecordset rs ' the recordset data&#xD;&#xA;    &#xD;&#xA;        End With&#xD;&#xA;        rs.Close&#xD;&#xA;        Set rs = Nothing&#xD;&#xA;        cn.Close&#xD;&#xA;        Set cn = Nothing&#xD;&#xA;    End Sub"
7879449312582157675,33,5,"     <LinearLayout xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;          android:layout_width=""match_parent""&#xD;&#xA;          android:layout_height=""match_parent""&#xD;&#xA;          android:gravity=""center""&#xD;&#xA;          android:orientation=""vertical"" >&#xD;&#xA;        &#xD;&#xA;          <TextView&#xD;&#xA;            &#xD;&#xA;            android:layout_width=""wrap_content""&#xD;&#xA;            android:layout_height=""wrap_content""&#xD;&#xA;            android:padding=""24dp"" &#xD;&#xA;            android:text=""@string/question_text""/>&#xD;&#xA;          &#xD;&#xA;          <LinearLayout&#xD;&#xA;            android:layout_width=""wrap_content""&#xD;&#xA;            android:layout_height=""wrap_content""&#xD;&#xA;            android:orientation=""horizontal"">&#xD;&#xA;        &#xD;&#xA;            <Button&#xD;&#xA;              android:id=""@+id/true_button""      &#xD;&#xA;              android:layout_width=""wrap_content""&#xD;&#xA;              android:layout_height=""wrap_content""&#xD;&#xA;              android:text=""@string/true_button"" />&#xD;&#xA;        &#xD;&#xA;            <Button&#xD;&#xA;              android:id=""@+id/false_button""&#xD;&#xA;              android:layout_width=""wrap_content""&#xD;&#xA;              android:layout_height=""wrap_content""&#xD;&#xA;              android:text=""@string/false_button"" />&#xD;&#xA;        &#xD;&#xA;          </LinearLayout>&#xD;&#xA;        &#xD;&#xA;        </LinearLayout>"
4602354098547221536,33,5,    #overlay {&#xD;&#xA;    	position: fixed;&#xD;&#xA;        z-index: 99;&#xD;&#xA;    	top: 0px;&#xD;&#xA;        left: 0px;&#xD;&#xA;        background-color: #f8f8f8;&#xD;&#xA;        width: 100%;&#xD;&#xA;        height: 100%;&#xD;&#xA;        filter: Alpha(Opacity=90);&#xD;&#xA;        opacity: 0.9;&#xD;&#xA;        -moz-opacity: 0.9;&#xD;&#xA;    }            &#xD;&#xA;    #theprogress {&#xD;&#xA;    	background-color: #fff;&#xD;&#xA;        border:1px solid #ccc;&#xD;&#xA;        padding:10px;&#xD;&#xA;        width: 300px;&#xD;&#xA;        height: 30px;&#xD;&#xA;        line-height:30px;&#xD;&#xA;        text-align: center;&#xD;&#xA;        filter: Alpha(Opacity=100);&#xD;&#xA;        opacity: 1;&#xD;&#xA;        -moz-opacity: 1;&#xD;&#xA;    }&#xD;&#xA;    #modalprogress {&#xD;&#xA;    	position: absolute;&#xD;&#xA;        top: 40%;&#xD;&#xA;        left: 50%;&#xD;&#xA;        margin: -11px 0 0 -150px;&#xD;&#xA;        color: #990000;&#xD;&#xA;        font-weight:bold;&#xD;&#xA;        font-size:14px;&#xD;&#xA;    }
4754449464921301390,34,5,"    <!DOCTYPE html>&#xD;&#xA;    <html>&#xD;&#xA;        <head>&#xD;&#xA;            <script src=""angular.js""></script>&#xD;&#xA;            <script src=""angular.ng-modules.js""></script>&#xD;&#xA;            <script>&#xD;&#xA;              var moduleA = angular.module(""MyModuleA"", []);&#xD;&#xA;              moduleA.controller(""MyControllerA"", function($scope) {&#xD;&#xA;                  $scope.name = ""Bob A"";&#xD;&#xA;              });&#xD;&#xA;              var moduleB = angular.module(""MyModuleB"", []);&#xD;&#xA;              moduleB.controller(""MyControllerB"", function($scope) {&#xD;&#xA;                  $scope.name = ""Steve B"";&#xD;&#xA;              });&#xD;&#xA;            </script>&#xD;&#xA;        </head>&#xD;&#xA;        <body>&#xD;&#xA;            <div ng-modules=""MyModuleA, MyModuleB"">&#xD;&#xA;                <h1>Module A, B</h1>&#xD;&#xA;                <div ng-controller=""MyControllerA"">&#xD;&#xA;                    {{name}}&#xD;&#xA;                </div>&#xD;&#xA;                <div ng-controller=""MyControllerB"">&#xD;&#xA;                    {{name}}&#xD;&#xA;                </div>&#xD;&#xA;            </div>&#xD;&#xA;            <div ng-module=""MyModuleB"">&#xD;&#xA;                <h1>Just Module B</h1>&#xD;&#xA;                <div ng-controller=""MyControllerB"">&#xD;&#xA;                    {{name}}&#xD;&#xA;                </div>&#xD;&#xA;            </div>&#xD;&#xA;        </body>&#xD;&#xA;    </html>"
8618723629276309333,34,5,"     // create request&#xD;&#xA;     NSMutableURLRequest *request = [[NSMutableURLRequest alloc] init];                                    &#xD;&#xA;     [request setCachePolicy:NSURLRequestReloadIgnoringLocalCacheData];&#xD;&#xA;     [request setHTTPShouldHandleCookies:NO];&#xD;&#xA;     [request setTimeoutInterval:30];&#xD;&#xA;      [request setHTTPMethod:@""POST""];&#xD;&#xA;     // set Content-Type in HTTP header&#xD;&#xA;     NSString *contentType = [NSString stringWithFormat:@""multipart/form-data; boundary=%@"", boundary];&#xD;&#xA;     [request setValue:contentType forHTTPHeaderField: @""Content-Type""];&#xD;&#xA;    // post body&#xD;&#xA;    NSMutableData *body = [NSMutableData data];&#xD;&#xA;    // add params (all params are strings)&#xD;&#xA;    for (NSString *param in _params) {&#xD;&#xA;    [body appendData:[[NSString stringWithFormat:@""--%@\r\n"", BoundaryConstant]     dataUsingEncoding:NSUTF8StringEncoding]];&#xD;&#xA;    [body appendData:[[NSString stringWithFormat:@""Content-Disposition: form-data;   name=\""%@\""\r\n\r\n"", param] dataUsingEncoding:NSUTF8StringEncoding]];&#xD;&#xA;     [body appendData:[[NSString stringWithFormat:@""%@\r\n"", [_params objectForKey:param]]    dataUsingEncoding:NSUTF8StringEncoding]];&#xD;&#xA;    }&#xD;&#xA;     // add image data&#xD;&#xA;      NSData *imageData = UIImageJPEGRepresentation(imageToPost, 1.0);&#xD;&#xA;     if (imageData) {&#xD;&#xA;      [body appendData:[[NSString stringWithFormat:@""--%@\r\n"", boundary] dataUsingEncoding:NSUTF8StringEncoding]];&#xD;&#xA;       [body appendData:[[NSString stringWithFormat:@""Content-Disposition: form-data;   name=\""%@\""; filename=\""image.jpg\""\r\n"", FileParamConstant] dataUsingEncoding:NSUTF8StringEncoding]];&#xD;&#xA;       [body appendData:[[NSString stringWithString:@""Content-Type: image/jpeg\r\n\r\n""] dataUsingEncoding:NSUTF8StringEncoding]];&#xD;&#xA;        [body appendData:imageData];&#xD;&#xA;       [body appendData:[[NSString stringWithFormat:@""\r\n""] dataUsingEncoding:NSUTF8StringEncoding]];&#xD;&#xA;        }&#xD;&#xA;       [body appendData:[[NSString stringWithFormat:@""--%@--\r\n"", boundary] dataUsingEncoding:NSUTF8StringEncoding]];&#xD;&#xA;        // setting the body of the post to the reqeust&#xD;&#xA;        [request setHTTPBody:body];&#xD;&#xA;       // set the content-length&#xD;&#xA;      NSString *postLength = [NSString stringWithFormat:@""%d"", [body length]];&#xD;&#xA;     [request setValue:postLength forHTTPHeaderField:@""Content-Length""];&#xD;&#xA;     // set URL&#xD;&#xA;     [request setURL:requestURL]; "
-6511154442208833935,34,5,"	<?php&#xD;&#xA;	define('FACEBOOK_APP_ID', 'your_app_id');&#xD;&#xA;	define('FACEBOOK_SECRET', 'your_app_secret');&#xD;&#xA;	function parse_signed_request($signed_request, $secret) {&#xD;&#xA;	list($encoded_sig, $payload) = explode('.', $signed_request, 2); &#xD;&#xA;	// decode the data&#xD;&#xA;	$sig = base64_url_decode($encoded_sig);&#xD;&#xA;	$data = json_decode(base64_url_decode($payload), true);&#xD;&#xA;	if (strtoupper($data['algorithm']) !== 'HMAC-SHA256') {&#xD;&#xA;		error_log('Unknown algorithm. Expected HMAC-SHA256');&#xD;&#xA;		return null;&#xD;&#xA;	}&#xD;&#xA;	// check sig&#xD;&#xA;	$expected_sig = hash_hmac('sha256', $payload, $secret, $raw = true);&#xD;&#xA;	if ($sig !== $expected_sig) {&#xD;&#xA;		error_log('Bad Signed JSON signature!');&#xD;&#xA;		return null;&#xD;&#xA;	}&#xD;&#xA;	return $data;&#xD;&#xA;	}&#xD;&#xA;	function base64_url_decode($input) {&#xD;&#xA;		return base64_decode(strtr($input, '-_', '+/'));&#xD;&#xA;	}&#xD;&#xA;	if ($_REQUEST) {&#xD;&#xA;	echo '<p>signed_request contents:</p>';&#xD;&#xA;	$response = parse_signed_request($_REQUEST['signed_request'], &#xD;&#xA;		                               FACEBOOK_SECRET);&#xD;&#xA;	echo '<pre>';&#xD;&#xA;	print_r($response);&#xD;&#xA;	echo '</pre>';&#xD;&#xA;	} else {&#xD;&#xA;	echo '$_REQUEST is empty';&#xD;&#xA;	}&#xD;&#xA;	?>"
-4900844451686319316,35,5,"     <!doctype html>&#xD;&#xA;        <html>&#xD;&#xA;          <head>&#xD;&#xA;            <title>Socket.IO chat</title>&#xD;&#xA;            <style>&#xD;&#xA;              * { margin: 0; padding: 0; box-sizing: border-box; }&#xD;&#xA;              body { font: 13px Helvetica, Arial; }&#xD;&#xA;              form { background: #000; padding: 3px; position: fixed; bottom: 0; width: 100%; }&#xD;&#xA;              form input { border: 0; padding: 10px; width: 90%; margin-right: .5%; }&#xD;&#xA;              form button { width: 9%; background: rgb(130, 224, 255); border: none; padding: 10px; }&#xD;&#xA;              #messages { list-style-type: none; margin: 0; padding: 0; }&#xD;&#xA;              #messages li { padding: 5px 10px; }&#xD;&#xA;              #messages li:nth-child(odd) { background: #eee; }&#xD;&#xA;            </style>&#xD;&#xA;          </head>&#xD;&#xA;          <body>&#xD;&#xA;            <ul id=""messages""></ul>&#xD;&#xA;            <form action="""">&#xD;&#xA;              <input id=""m"" autocomplete=""off"" /><button>Send</button>&#xD;&#xA;            </form>&#xD;&#xA;            <script src=""https://cdn.socket.io/socket.io-1.2.0.js""></script>&#xD;&#xA;            <script src=""http://code.jquery.com/jquery-1.11.1.js""></script>&#xD;&#xA;            <script>&#xD;&#xA;              var socket = io();&#xD;&#xA;              $('form').submit(function(){&#xD;&#xA;                socket.emit('chat message', $('#m').val());&#xD;&#xA;                $('#m').val('');&#xD;&#xA;                return false;&#xD;&#xA;              });&#xD;&#xA;              socket.on('chat message', function(msg){&#xD;&#xA;                $('#messages').append($('<li>').text(msg));&#xD;&#xA;              });&#xD;&#xA;            </script>&#xD;&#xA;          </body>&#xD;&#xA;        </html>"
-8977338102691153873,35,5,"     #include <iostream>&#xD;&#xA;     class A&#xD;&#xA;     {&#xD;&#xA;     public:&#xD;&#xA;       A() : m_i(0) { }&#xD;&#xA;     protected:&#xD;&#xA;       int m_i;&#xD;&#xA;     };&#xD;&#xA;     class B&#xD;&#xA;     {&#xD;&#xA;     public:&#xD;&#xA;        B() : m_d(0.0) { }&#xD;&#xA;     protected:&#xD;&#xA;        double m_d;&#xD;&#xA;     };&#xD;&#xA;     class C&#xD;&#xA;          : public A&#xD;&#xA;           , public B&#xD;&#xA;     {&#xD;&#xA;      public:&#xD;&#xA;          C() : m_c('a') { }&#xD;&#xA;      private:&#xD;&#xA;          char m_c;&#xD;&#xA;      };&#xD;&#xA;      int main()&#xD;&#xA;      {&#xD;&#xA;        C c;&#xD;&#xA;        A *pa = &c;&#xD;&#xA;        B *pb = &c;&#xD;&#xA;        const int x = (pa == &c) ? 1 : 2;&#xD;&#xA;        const int y = (pb == &c) ? 3 : 4;&#xD;&#xA;        const int z = (reinterpret_cast<char*>(pa) ==   reinterpret_cast<char*>(pb)) ? 5 : 6;&#xD;&#xA;        std::cout << x << y << z << std::endl;&#xD;&#xA;        return 0;&#xD;&#xA;      }"
4847553327250054238,35,5,"    private static String getCallDetails(Context context) {&#xD;&#xA;		StringBuffer stringBuffer = new StringBuffer();&#xD;&#xA;		Cursor cursor = context.getContentResolver().query(CallLog.Calls.CONTENT_URI,&#xD;&#xA;				null, null, null, CallLog.Calls.DATE + "" DESC"");&#xD;&#xA;		int number = cursor.getColumnIndex(CallLog.Calls.NUMBER);&#xD;&#xA;		int type = cursor.getColumnIndex(CallLog.Calls.TYPE);&#xD;&#xA;		int date = cursor.getColumnIndex(CallLog.Calls.DATE);&#xD;&#xA;		int duration = cursor.getColumnIndex(CallLog.Calls.DURATION);		&#xD;&#xA;		while (cursor.moveToNext()) {&#xD;&#xA;			String phNumber = cursor.getString(number);&#xD;&#xA;			String callType = cursor.getString(type);&#xD;&#xA;			String callDate = cursor.getString(date);&#xD;&#xA;			Date callDayTime = new Date(Long.valueOf(callDate));&#xD;&#xA;			String callDuration = cursor.getString(duration);&#xD;&#xA;			String dir = null;&#xD;&#xA;			int dircode = Integer.parseInt(callType);&#xD;&#xA;			switch (dircode) {&#xD;&#xA;			case CallLog.Calls.OUTGOING_TYPE:&#xD;&#xA;				dir = ""OUTGOING"";&#xD;&#xA;				break;&#xD;&#xA;			case CallLog.Calls.INCOMING_TYPE:&#xD;&#xA;				dir = ""INCOMING"";&#xD;&#xA;				break;&#xD;&#xA;			case CallLog.Calls.MISSED_TYPE:&#xD;&#xA;				dir = ""MISSED"";&#xD;&#xA;				break;&#xD;&#xA;			}&#xD;&#xA;			stringBuffer.append(""\nPhone Number:--- "" + phNumber + "" \nCall Type:--- ""&#xD;&#xA;					+ dir + "" \nCall Date:--- "" + callDayTime&#xD;&#xA;					+ "" \nCall duration in sec :--- "" + callDuration);&#xD;&#xA;			stringBuffer.append(""\n----------------------------------"");&#xD;&#xA;		}&#xD;&#xA;		cursor.close();&#xD;&#xA;		return stringBuffer.toString();&#xD;&#xA;	}"
-831230204791874757,35,5,"    <?php &#xD;&#xA;    &#xD;&#xA;    return array(&#xD;&#xA;        'controllers' => array(&#xD;&#xA;            'invokables' => array(&#xD;&#xA;                'Album\Controller\Album' => 'Album\Controller\AlbumController',&#xD;&#xA;            ),&#xD;&#xA;        ),&#xD;&#xA;    	&#xD;&#xA;    	 // The following section is new and should be added to your file&#xD;&#xA;        'router' => array(&#xD;&#xA;            'routes' => array(&#xD;&#xA;                'album' => array(&#xD;&#xA;                    'type'    => 'segment',&#xD;&#xA;                    'options' => array(&#xD;&#xA;                        'route'    => '/album[/:action][/:id]',&#xD;&#xA;                        'constraints' => array(&#xD;&#xA;                            'action' => '[a-zA-Z][a-zA-Z0-9_-]*',&#xD;&#xA;                            'id'     => '[0-9]+',&#xD;&#xA;                        ),&#xD;&#xA;                        'defaults' => array(&#xD;&#xA;                            'controller' => 'Album\Controller\Album',&#xD;&#xA;                            'action'     => 'index',&#xD;&#xA;                        ),&#xD;&#xA;                    ),&#xD;&#xA;                ),&#xD;&#xA;            ),&#xD;&#xA;        ),&#xD;&#xA;    	&#xD;&#xA;        'view_manager' => array(&#xD;&#xA;            'template_path_stack' => array(&#xD;&#xA;                'album' => __DIR__ . '/../view',&#xD;&#xA;            ),&#xD;&#xA;        ),&#xD;&#xA;    );"
-2578990970862054146,35,5,"    var count_pairs = function(_arr,x) {&#xD;&#xA;      if(!x) x = 0;&#xD;&#xA;      var pairs = 0;&#xD;&#xA;      var i = 0;&#xD;&#xA;      var k = _arr.length-1;&#xD;&#xA;      if((k+1)<2) return pairs;&#xD;&#xA;      var halfX = x/2; &#xD;&#xA;      while(i<k) {&#xD;&#xA;        var curK = _arr[k];&#xD;&#xA;        var curI = _arr[i];&#xD;&#xA;        var pairsThisLoop = 0;&#xD;&#xA;        if(curK+curI==x) {&#xD;&#xA;          // if midpoint and equal find combinations&#xD;&#xA;          if(curK==curI) {&#xD;&#xA;            var comb = 1;&#xD;&#xA;            while(--k>=i) pairs+=(comb++);&#xD;&#xA;            break;&#xD;&#xA;          }&#xD;&#xA;          // count pair and k duplicates&#xD;&#xA;          pairsThisLoop++;&#xD;&#xA;          while(_arr[--k]==curK) pairsThisLoop++;&#xD;&#xA;          // add k side pairs to running total for every i side pair found&#xD;&#xA;          pairs+=pairsThisLoop;&#xD;&#xA;          while(_arr[++i]==curI) pairs+=pairsThisLoop;&#xD;&#xA;        } else {&#xD;&#xA;          // if we are at a mid point&#xD;&#xA;          if(curK==curI) break;&#xD;&#xA;          var distK = Math.abs(halfX-curK);&#xD;&#xA;          var distI = Math.abs(halfX-curI);&#xD;&#xA;          if(distI > distK) while(_arr[++i]==curI);&#xD;&#xA;          else while(_arr[--k]==curK);&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;      return pairs;&#xD;&#xA;    }"
-578843818385910515,35,5,"    <android.support.design.widget.CoordinatorLayout &#xD;&#xA;        xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;        xmlns:app=""http://schemas.android.com/apk/res-auto""&#xD;&#xA;        android:id=""@+id/main_content""&#xD;&#xA;        android:layout_width=""match_parent""&#xD;&#xA;        android:layout_height=""match_parent"">&#xD;&#xA;    &#xD;&#xA;        <android.support.design.widget.AppBarLayout&#xD;&#xA;            android:id=""@+id/appbar""&#xD;&#xA;            android:layout_width=""match_parent""&#xD;&#xA;            android:layout_height=""wrap_content""&#xD;&#xA;            android:theme=""@style/ThemeOverlay.AppCompat.Dark.ActionBar"">&#xD;&#xA;    &#xD;&#xA;            <android.support.v7.widget.Toolbar&#xD;&#xA;                android:id=""@+id/toolbar""&#xD;&#xA;                android:layout_width=""match_parent""&#xD;&#xA;                android:layout_height=""?attr/actionBarSize""&#xD;&#xA;                android:background=""?attr/colorPrimary""&#xD;&#xA;                app:popupTheme=""@style/ThemeOverlay.AppCompat.Light""&#xD;&#xA;                app:layout_scrollFlags=""scroll|enterAlways"" />&#xD;&#xA;    &#xD;&#xA;            <android.support.design.widget.TabLayout&#xD;&#xA;                android:id=""@+id/tabs""&#xD;&#xA;                android:layout_width=""match_parent""&#xD;&#xA;                android:layout_height=""wrap_content"" />&#xD;&#xA;    &#xD;&#xA;        </android.support.design.widget.AppBarLayout>&#xD;&#xA;    &#xD;&#xA;        <android.support.v4.view.ViewPager&#xD;&#xA;            android:id=""@+id/viewpager""&#xD;&#xA;            android:layout_width=""match_parent""&#xD;&#xA;            android:layout_height=""match_parent""&#xD;&#xA;            app:layout_behavior=""@string/appbar_scrolling_view_behavior"" />&#xD;&#xA;        &#xD;&#xA;    </android.support.design.widget.CoordinatorLayout>"
-3250507249421451232,35,5,"    {&#xD;&#xA;      photos: {&#xD;&#xA;      page: 1,&#xD;&#xA;      pages: 3683,&#xD;&#xA;      perpage: 100,&#xD;&#xA;      total: ""368270"",&#xD;&#xA;      photo: [&#xD;&#xA;           {&#xD;&#xA;           id: ""29264707352"",&#xD;&#xA;           owner: ""84316756@N02"",&#xD;&#xA;           secret: ""9ed355a86e"",&#xD;&#xA;           server: ""8603"",&#xD;&#xA;           farm: 9,&#xD;&#xA;           title: ""Tercer Patio de los Claustros de la Compañía/ Arequipa"",&#xD;&#xA;           ispublic: 1,&#xD;&#xA;           isfriend: 0,&#xD;&#xA;           isfamily: 0,&#xD;&#xA;           url_m:          ""https://farm9.staticflickr.com/8603/29264707352_9ed355a86e.jpg"",&#xD;&#xA;           height_m: ""500"",&#xD;&#xA;           width_m: ""333""&#xD;&#xA;              },&#xD;&#xA;            {&#xD;&#xA;            id: ""29339070436"",&#xD;&#xA;            owner: ""146617764@N02"",&#xD;&#xA;            secret: ""b52f1e9914"",&#xD;&#xA;            server: ""8509"",&#xD;&#xA;            farm: 9,&#xD;&#xA;            title: ""2016-04-17 09.24.07"",&#xD;&#xA;            ispublic: 1,&#xD;&#xA;            isfriend: 0,&#xD;&#xA;            isfamily: 0,&#xD;&#xA;            url_m: ""https://farm9.staticflickr.com/8509/29339070436_b52f1e9914.jpg"",&#xD;&#xA;            height_m: ""281"",&#xD;&#xA;            width_m: ""500""&#xD;&#xA;           },"
-2833675487369841698,35,5,"    public static void swipe(MobileDriver driver, DIRECTION direction, long duration) {&#xD;&#xA;        Dimension size = driver.manage().window().getSize();&#xD;&#xA;        int startX = 0;&#xD;&#xA;        int endX = 0;&#xD;&#xA;        int startY = 0;&#xD;&#xA;        int endY = 0;&#xD;&#xA;        switch (direction){&#xD;&#xA;            case RIGHT:&#xD;&#xA;                startY = (int) (size.height /2);&#xD;&#xA;                startX = (int) (size.width * 0.90);&#xD;&#xA;                endX = (int) (size.width * 0.05);&#xD;&#xA;                break;&#xD;&#xA;            case LEFT:&#xD;&#xA;                startY = (int) (size.height /2);&#xD;&#xA;                startX = (int) (size.width * 0.05);&#xD;&#xA;                endX = (int) (size.width * 0.90);&#xD;&#xA;                break;&#xD;&#xA;            case UP:&#xD;&#xA;                endY= (int) (size.height * 0.70);&#xD;&#xA;                startY  = (int) (size.height * 0.30);&#xD;&#xA;                startX = (size.width / 2);&#xD;&#xA;                break;&#xD;&#xA;            case DOWN:&#xD;&#xA;                startY = (int) (size.height * 0.70);&#xD;&#xA;                endY = (int) (size.height * 0.30);&#xD;&#xA;                startX = (size.width / 2);&#xD;&#xA;                break;&#xD;&#xA;        }&#xD;&#xA;        new TouchAction(driver)&#xD;&#xA;                .press(startX, startY)&#xD;&#xA;                .waitAction(Duration.ofMillis(duration))&#xD;&#xA;                .moveTo(endX, startY)&#xD;&#xA;                .release()&#xD;&#xA;                .perform();&#xD;&#xA;    }"
-264018184635874911,35,5,"    //Current base URL (you can dynamically retrieve from $_SERVER)&#xD;&#xA;    $pgurl = 'http://example.com/scripts/php/absurl.php';&#xD;&#xA;    function absurl($url) {&#xD;&#xA;     global $pgurl;&#xD;&#xA;     if(strpos($url,'://')) return $url; //already absolute&#xD;&#xA;     if(substr($url,0,2)=='//') return 'http:'.$url; //shorthand scheme&#xD;&#xA;     if($url[0]=='/') return parse_url($pgurl,PHP_URL_SCHEME).'://'.parse_url($pgurl,PHP_URL_HOST).$url; //just add domain&#xD;&#xA;     if(strpos($pgurl,'/',9)===false) $pgurl .= '/'; //add slash to domain if needed&#xD;&#xA;     return substr($pgurl,0,strrpos($pgurl,'/')+1).$url; //for relative links, gets current directory and appends new filename&#xD;&#xA;    }&#xD;&#xA;    function nodots($path) { //Resolve dot dot slashes, no regex!&#xD;&#xA;     $arr1 = explode('/',$path);&#xD;&#xA;     $arr2 = array();&#xD;&#xA;     foreach($arr1 as $seg) {&#xD;&#xA;      switch($seg) {&#xD;&#xA;       case '.':&#xD;&#xA;        break;&#xD;&#xA;       case '..':&#xD;&#xA;        array_pop($arr2);&#xD;&#xA;        break;&#xD;&#xA;       case '...':&#xD;&#xA;        array_pop($arr2); array_pop($arr2);&#xD;&#xA;        break;&#xD;&#xA;       case '....':&#xD;&#xA;        array_pop($arr2); array_pop($arr2); array_pop($arr2);&#xD;&#xA;        break;&#xD;&#xA;       case '.....':&#xD;&#xA;        array_pop($arr2); array_pop($arr2); array_pop($arr2); array_pop($arr2);&#xD;&#xA;        break;&#xD;&#xA;       default:&#xD;&#xA;        $arr2[] = $seg;&#xD;&#xA;      }&#xD;&#xA;     }&#xD;&#xA;     return implode('/',$arr2);&#xD;&#xA;    }"
-5499957679289557787,35,5,"    <!DOCTYPE html>&#xD;&#xA;    <html>&#xD;&#xA;      <head>&#xD;&#xA;        <title>Simple Map</title>&#xD;&#xA;        <meta name=""viewport"" content=""initial-scale=1.0"">&#xD;&#xA;        <meta charset=""utf-8"">&#xD;&#xA;        <style>&#xD;&#xA;          /* Always set the map height explicitly to define the size of the div&#xD;&#xA;           * element that contains the map. */&#xD;&#xA;          #map {&#xD;&#xA;            height: 100%;&#xD;&#xA;          }&#xD;&#xA;          /* Optional: Makes the sample page fill the window. */&#xD;&#xA;          html, body {&#xD;&#xA;            height: 100%;&#xD;&#xA;            margin: 0;&#xD;&#xA;            padding: 0;&#xD;&#xA;          }&#xD;&#xA;        </style>&#xD;&#xA;      </head>&#xD;&#xA;      <body>&#xD;&#xA;        <div id=""map""></div>&#xD;&#xA;        <script>&#xD;&#xA;          var map;&#xD;&#xA;          function initMap() {&#xD;&#xA;            map = new google.maps.Map(document.getElementById('map'), {&#xD;&#xA;              center: {lat: -34.397, lng: 150.644},&#xD;&#xA;              zoom: 8&#xD;&#xA;            });&#xD;&#xA;          }&#xD;&#xA;        </script>&#xD;&#xA;        <script src=""https://maps.googleapis.com/maps/api/js?key=**YOUR_API_KEY**&callback=initMap""&#xD;&#xA;        async defer></script>&#xD;&#xA;      </body>&#xD;&#xA;    </html>"
4590982938139746369,36,5,"    Sub parse_data()&#xD;&#xA;    Dim lr As Long&#xD;&#xA;    Dim ws As Worksheet&#xD;&#xA;    Dim vcol, i As Integer&#xD;&#xA;    Dim icol As Long&#xD;&#xA;    Dim myarr As Variant&#xD;&#xA;    Dim title As String&#xD;&#xA;    Dim titlerow As Integer&#xD;&#xA;    vcol = 1        &#xD;&#xA;    Set ws = Sheets(""Sheet1"")        &#xD;&#xA;    lr = ws.Cells(ws.Rows.Count, vcol).End(xlUp).Row&#xD;&#xA;    title = ""A1:C1""            &#xD;&#xA;    titlerow = ws.Range(title).Cells(1).Row&#xD;&#xA;    icol = ws.Columns.Count&#xD;&#xA;    ws.Cells(1, icol) = ""Unique""&#xD;&#xA;    For i = 2 To lr&#xD;&#xA;    On Error Resume Next&#xD;&#xA;    If ws.Cells(i, vcol) <> """" And Application.WorksheetFunction.Match(ws.Cells(i, vcol), ws.Columns(icol), 0) = 0 Then&#xD;&#xA;    ws.Cells(ws.Rows.Count, icol).End(xlUp).Offset(1) = ws.Cells(i, vcol)&#xD;&#xA;    End If&#xD;&#xA;    Next&#xD;&#xA;    myarr = Application.WorksheetFunction.Transpose(ws.Columns(icol).SpecialCells(xlCellTypeConstants))&#xD;&#xA;    ws.Columns(icol).Clear&#xD;&#xA;    For i = 2 To UBound(myarr)&#xD;&#xA;    ws.Range(title).AutoFilter field:=vcol, Criteria1:=myarr(i) & """"&#xD;&#xA;    If Not Evaluate(""=ISREF('"" & myarr(i) & ""'!A1)"") Then&#xD;&#xA;    Sheets.Add(after:=Worksheets(Worksheets.Count)).Name = myarr(i) & """"&#xD;&#xA;    Else&#xD;&#xA;    Sheets(myarr(i) & """").Move after:=Worksheets(Worksheets.Count)&#xD;&#xA;    End If&#xD;&#xA;    ws.Range(""A"" & titlerow & "":A"" & lr).EntireRow.Copy Sheets(myarr(i) & """").Range(""A1"")&#xD;&#xA;    Sheets(myarr(i) & """").Columns.AutoFit&#xD;&#xA;    Next&#xD;&#xA;    ws.AutoFilterMode = False&#xD;&#xA;    ws.Activate&#xD;&#xA;    End Sub"
-2928181491388664103,36,5,"	public static Bitmap createContrast(Bitmap src, double value) {&#xD;&#xA;		// image size&#xD;&#xA;		int width = src.getWidth();&#xD;&#xA;		int height = src.getHeight();&#xD;&#xA;		// create output bitmap&#xD;&#xA;		Bitmap bmOut = Bitmap.createBitmap(width, height, src.getConfig());&#xD;&#xA;		// color information&#xD;&#xA;		int A, R, G, B;&#xD;&#xA;		int pixel;&#xD;&#xA;		// get contrast value&#xD;&#xA;		double contrast = Math.pow((100 + value) / 100, 2);&#xD;&#xA;		// scan through all pixels&#xD;&#xA;		for(int x = 0; x < width; ++x) {&#xD;&#xA;			for(int y = 0; y < height; ++y) {&#xD;&#xA;				// get pixel color&#xD;&#xA;				pixel = src.getPixel(x, y);&#xD;&#xA;				A = Color.alpha(pixel);&#xD;&#xA;				// apply filter contrast for every channel R, G, B&#xD;&#xA;				R = Color.red(pixel);&#xD;&#xA;				R = (int)(((((R / 255.0) - 0.5) * contrast) + 0.5) * 255.0);&#xD;&#xA;				if(R < 0) { R = 0; }&#xD;&#xA;				else if(R > 255) { R = 255; }&#xD;&#xA;				G = Color.red(pixel);&#xD;&#xA;				G = (int)(((((G / 255.0) - 0.5) * contrast) + 0.5) * 255.0);&#xD;&#xA;				if(G < 0) { G = 0; }&#xD;&#xA;				else if(G > 255) { G = 255; }&#xD;&#xA;				B = Color.red(pixel);&#xD;&#xA;				B = (int)(((((B / 255.0) - 0.5) * contrast) + 0.5) * 255.0);&#xD;&#xA;				if(B < 0) { B = 0; }&#xD;&#xA;				else if(B > 255) { B = 255; }&#xD;&#xA;				// set new pixel color to output bitmap&#xD;&#xA;				bmOut.setPixel(x, y, Color.argb(A, R, G, B));&#xD;&#xA;			}&#xD;&#xA;		}&#xD;&#xA;		return bmOut;&#xD;&#xA;	}"
7653175264456585328,36,5,"    <?xml version=""1.0"" encoding=""UTF-8""?>&#xD;&#xA;    <beans xmlns=""http://www.springframework.org/schema/beans""&#xD;&#xA;    	xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""&#xD;&#xA;    	xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd"">&#xD;&#xA;    &#xD;&#xA;    	<bean id=""grailsApplication"" class=""org.codehaus.groovy.grails.commons.GrailsApplicationFactoryBean"">&#xD;&#xA;    		<description>Grails application factory bean</description>&#xD;&#xA;    		<property name=""grailsDescriptor"" value=""/WEB-INF/grails.xml"" />&#xD;&#xA;    		<!-- <property name=""grailsResourceLoader"" ref=""grailsResourceLoader"" /> -->&#xD;&#xA;    	</bean>&#xD;&#xA;    &#xD;&#xA;    	<bean id=""pluginManager"" class=""org.codehaus.groovy.grails.plugins.GrailsPluginManagerFactoryBean"">&#xD;&#xA;    		<description>A bean that manages Grails plugins</description>&#xD;&#xA;    		<property name=""grailsDescriptor"" value=""/WEB-INF/grails.xml"" />&#xD;&#xA;    		<property name=""application"" ref=""grailsApplication"" />&#xD;&#xA;    	</bean>&#xD;&#xA;    &#xD;&#xA;    	<bean id=""grailsConfigurator"" class=""org.codehaus.groovy.grails.commons.spring.GrailsRuntimeConfigurator"">&#xD;&#xA;    		<constructor-arg>&#xD;&#xA;    			<ref bean=""grailsApplication"" />&#xD;&#xA;    		</constructor-arg>&#xD;&#xA;    		<property name=""pluginManager"" ref=""pluginManager"" />&#xD;&#xA;    	</bean>&#xD;&#xA;    &#xD;&#xA;    	<!-- &#xD;&#xA;    	<bean id=""grailsResourceLoader"" class=""org.codehaus.groovy.grails.commons.GrailsResourceLoaderFactoryBean"" />&#xD;&#xA;    	-->&#xD;&#xA;    &#xD;&#xA;    	<bean id=""characterEncodingFilter"" class=""org.springframework.web.filter.CharacterEncodingFilter"">&#xD;&#xA;    		<property name=""encoding"">&#xD;&#xA;    			<value>utf-8</value>&#xD;&#xA;    		</property>&#xD;&#xA;    	</bean>&#xD;&#xA;    &#xD;&#xA;    	<bean id=""conversionService"" class=""org.springframework.context.support.ConversionServiceFactoryBean"" />&#xD;&#xA;    </beans>"
-3971998424457726247,36,5,"    private String getDistanceOnRoad(double latitude, double longitude,&#xD;&#xA;			double prelatitute, double prelongitude) {&#xD;&#xA;		String result_in_kms = """";&#xD;&#xA;		String url = ""http://maps.google.com/maps/api/directions/xml?origin=""&#xD;&#xA;				+ latitude + "","" + longitude + ""&destination="" + prelatitute&#xD;&#xA;				+ "","" + prelongitude + ""&sensor=false&units=metric"";&#xD;&#xA;		String tag[] = { ""text"" };&#xD;&#xA;		HttpResponse response = null;&#xD;&#xA;		try {&#xD;&#xA;			HttpClient httpClient = new DefaultHttpClient();&#xD;&#xA;			HttpContext localContext = new BasicHttpContext();&#xD;&#xA;			HttpPost httpPost = new HttpPost(url);&#xD;&#xA;			response = httpClient.execute(httpPost, localContext);&#xD;&#xA;			InputStream is = response.getEntity().getContent();&#xD;&#xA;			DocumentBuilder builder = DocumentBuilderFactory.newInstance()&#xD;&#xA;					.newDocumentBuilder();&#xD;&#xA;			Document doc = builder.parse(is);&#xD;&#xA;			if (doc != null) {&#xD;&#xA;				NodeList nl;&#xD;&#xA;				ArrayList args = new ArrayList();&#xD;&#xA;				for (String s : tag) {&#xD;&#xA;					nl = doc.getElementsByTagName(s);&#xD;&#xA;					if (nl.getLength() > 0) {&#xD;&#xA;						Node node = nl.item(nl.getLength() - 1);&#xD;&#xA;						args.add(node.getTextContent());&#xD;&#xA;					} else {&#xD;&#xA;						args.add("" - "");&#xD;&#xA;					}&#xD;&#xA;				}&#xD;&#xA;				result_in_kms = String.format(""%s"", args.get(0));&#xD;&#xA;			}&#xD;&#xA;		} catch (Exception e) {&#xD;&#xA;			e.printStackTrace();&#xD;&#xA;		}&#xD;&#xA;		return result_in_kms;&#xD;&#xA;	}"
-6122251099000406691,36,5,"    var firstY = null;		&#xD;&#xA;    var lastY = null;&#xD;&#xA;    var currentY = null;&#xD;&#xA;    var vertScroll = false;&#xD;&#xA;    var initAdjustment = 0;&#xD;&#xA;    &#xD;&#xA;    // record the initial position of the cursor on start of the touch&#xD;&#xA;    jqDraggableItem.on(""touchstart"", function(event) {&#xD;&#xA;    	lastY = currentY = firstY = event.originalEvent.touches[0].pageY;&#xD;&#xA;    });&#xD;&#xA;    &#xD;&#xA;    // fires whenever the cursor moves&#xD;&#xA;    jqDraggableItem.on(""touchmove"", function(event) {&#xD;&#xA;    	currentY = event.originalEvent.touches[0].pageY;&#xD;&#xA;    	var adjustment = lastY-currentY;&#xD;&#xA;    	&#xD;&#xA;    	// Mimic native vertical scrolling where scrolling only starts after the&#xD;&#xA;        // cursor has moved up or down from its original position by ~30 pixels.&#xD;&#xA;    	if (vertScroll == false && Math.abs(currentY-firstY) > 30) {&#xD;&#xA;    		vertScroll = true;&#xD;&#xA;    		initAdjustment = currentY-firstY;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	// only apply the adjustment if the user has met the threshold for vertical scrolling&#xD;&#xA;    	if (vertScroll == true) {&#xD;&#xA;    		window.scrollBy(0,adjustment + initAdjustment);&#xD;&#xA;    		lastY = currentY + adjustment;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    });&#xD;&#xA;    &#xD;&#xA;    // when the user lifts their finger, they will again need to meet the &#xD;&#xA;    // threshold before vertical scrolling starts.&#xD;&#xA;    jqDraggableItem.on(""touchend"", function(event) {&#xD;&#xA;    	vertScroll = false;&#xD;&#xA;    });"
-1729820575709771873,36,5,"        void Application_Error(object sender, EventArgs e)&#xD;&#xA;    {&#xD;&#xA;      // Code that runs when an unhandled error occurs&#xD;&#xA;    &#xD;&#xA;      // Get the exception object.&#xD;&#xA;      Exception exc = Server.GetLastError();&#xD;&#xA;    &#xD;&#xA;      // Handle HTTP errors&#xD;&#xA;      if (exc.GetType() == typeof(HttpException))&#xD;&#xA;      {&#xD;&#xA;        // The Complete Error Handling Example generates&#xD;&#xA;        // some errors using URLs with ""NoCatch"" in them;&#xD;&#xA;        // ignore these here to simulate what would happen&#xD;&#xA;        // if a global.asax handler were not implemented.&#xD;&#xA;          if (exc.Message.Contains(""NoCatch"") || exc.Message.Contains(""maxUrlLength""))&#xD;&#xA;          return;&#xD;&#xA;    &#xD;&#xA;        //Redirect HTTP errors to HttpError page&#xD;&#xA;        Server.Transfer(""HttpErrorPage.aspx"");&#xD;&#xA;      }&#xD;&#xA;    &#xD;&#xA;      // For other kinds of errors give the user some information&#xD;&#xA;      // but stay on the default page&#xD;&#xA;      Response.Write(""<h2>Global Page Error</h2>\n"");&#xD;&#xA;      Response.Write(&#xD;&#xA;          ""<p>"" + exc.Message + ""</p>\n"");&#xD;&#xA;      Response.Write(""Return to the <a href='Default.aspx'>"" +&#xD;&#xA;          ""Default Page</a>\n"");&#xD;&#xA;    &#xD;&#xA;      // Log the exception and notify system operators&#xD;&#xA;      ExceptionUtility.LogException(exc, ""DefaultPage"");&#xD;&#xA;      ExceptionUtility.NotifySystemOps(exc);&#xD;&#xA;    &#xD;&#xA;      // Clear the error from the server&#xD;&#xA;      Server.ClearError();&#xD;&#xA;    }"
-2193254291533208228,36,5,"    import 'reflect-metadata';&#xD;&#xA;    import 'zone.js/dist/zone-node';&#xD;&#xA;    import { platformServer, renderModuleFactory } from '@angular/platform-server'&#xD;&#xA;    import { enableProdMode } from '@angular/core'&#xD;&#xA;    import { AppServerModuleNgFactory } from '../dist/ngfactory/src/app/app.server.module.ngfactory'&#xD;&#xA;    import * as express from 'express';&#xD;&#xA;    import { readFileSync } from 'fs';&#xD;&#xA;    import { join } from 'path';&#xD;&#xA;    &#xD;&#xA;    const PORT = 4000;&#xD;&#xA;    &#xD;&#xA;    enableProdMode();&#xD;&#xA;    &#xD;&#xA;    const app = express();&#xD;&#xA;    &#xD;&#xA;    let template = readFileSync(join(__dirname, '..', 'dist', 'index.html')).toString();&#xD;&#xA;    &#xD;&#xA;    app.engine('html', (_, options, callback) => {&#xD;&#xA;      const opts = { document: template, url: options.req.url };&#xD;&#xA;    &#xD;&#xA;      renderModuleFactory(AppServerModuleNgFactory, opts)&#xD;&#xA;        .then(html => callback(null, html));&#xD;&#xA;    });&#xD;&#xA;    &#xD;&#xA;    app.set('view engine', 'html');&#xD;&#xA;    app.set('views', 'src')&#xD;&#xA;    &#xD;&#xA;    app.get('*.*', express.static(join(__dirname, '..', 'dist')));&#xD;&#xA;    &#xD;&#xA;    app.get('*', (req, res) => {&#xD;&#xA;      res.render('index', { req });&#xD;&#xA;    });&#xD;&#xA;    &#xD;&#xA;    app.listen(PORT, () => {&#xD;&#xA;      console.log(`listening on http://localhost:${PORT}!`);&#xD;&#xA;    });"
6972309156836692006,36,5,"    Sub Gethits()&#xD;&#xA;        Dim url As String, lastRow As Long&#xD;&#xA;        Dim XMLHTTP As Object, html As Object, objResultDiv As Object, objH3 As Object, link As Object&#xD;&#xA;        Dim start_time As Date&#xD;&#xA;        Dim end_time As Date&#xD;&#xA;        Dim var As String&#xD;&#xA;        Dim var1 As Object&#xD;&#xA;        lastRow = Range(""A"" & Rows.Count).End(xlUp).Row&#xD;&#xA;        &#xD;&#xA;        Dim cookie As String&#xD;&#xA;        Dim result_cookie As String&#xD;&#xA;    &#xD;&#xA;        start_time = Time&#xD;&#xA;        Debug.Print ""start_time:"" & start_time&#xD;&#xA;        For i = 2 To lastRow&#xD;&#xA;            url = ""https://www.google.com/search?q="" & Cells(i, 1) & ""&rnd="" & WorksheetFunction.RandBetween(1, 10000)&#xD;&#xA;            Set XMLHTTP = CreateObject(""MSXML2.serverXMLHTTP"")&#xD;&#xA;            XMLHTTP.Open ""GET"", url, False&#xD;&#xA;            XMLHTTP.setRequestHeader ""Content-Type"", ""text/xml""&#xD;&#xA;            XMLHTTP.setRequestHeader ""User-Agent"", ""Mozilla/5.0 (Windows NT 6.1; rv:25.0) Gecko/20100101 Firefox/25.0""&#xD;&#xA;            XMLHTTP.send&#xD;&#xA;            Set html = CreateObject(""htmlfile"")&#xD;&#xA;            html.body.innerHTML = XMLHTTP.ResponseText&#xD;&#xA;            Set objResultDiv = html.getelementbyid(""rso"")&#xD;&#xA;            Set var1 = html.getelementbyid(""resultStats"")&#xD;&#xA;            Cells(i, 2).Value = var1.innerText&#xD;&#xA;           &#xD;&#xA;            DoEvents&#xD;&#xA;        Next&#xD;&#xA;    &#xD;&#xA;        end_time = Time&#xD;&#xA;        Debug.Print ""end_time:"" & end_time&#xD;&#xA;    &#xD;&#xA;        Debug.Print ""done"" & ""Time taken : "" & DateDiff(""n"", start_time, end_time)&#xD;&#xA;        MsgBox ""done"" & ""Time taken : "" & DateDiff(""n"", start_time, end_time)                &#xD;&#xA;    End Sub"
4787436025750814200,36,5,"    public static int calculateInSampleSize(&#xD;&#xA;                BitmapFactory.Options options, int reqWidth, int reqHeight) {&#xD;&#xA;        // Raw height and width of image&#xD;&#xA;        final int height = options.outHeight;&#xD;&#xA;        final int width = options.outWidth;&#xD;&#xA;        int inSampleSize = 1;&#xD;&#xA;    &#xD;&#xA;        if (height > reqHeight || width > reqWidth) {&#xD;&#xA;    &#xD;&#xA;            // Calculate ratios of height and width to requested height and width&#xD;&#xA;            final int heightRatio = Math.round((float) height / (float) reqHeight);&#xD;&#xA;            final int widthRatio = Math.round((float) width / (float) reqWidth);&#xD;&#xA;    &#xD;&#xA;            // Choose the smallest ratio as inSampleSize value, this will guarantee&#xD;&#xA;            // a final image with both dimensions larger than or equal to the&#xD;&#xA;            // requested height and width.&#xD;&#xA;            inSampleSize = heightRatio < widthRatio ? heightRatio : widthRatio;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        return inSampleSize;&#xD;&#xA;    }&#xD;&#xA;     public static Bitmap decodeSampledBitmapFromResource(Resources res, int resId,&#xD;&#xA;            int reqWidth, int reqHeight) {&#xD;&#xA;    &#xD;&#xA;        // First decode with inJustDecodeBounds=true to check dimensions&#xD;&#xA;        final BitmapFactory.Options options = new BitmapFactory.Options();&#xD;&#xA;        options.inJustDecodeBounds = true;&#xD;&#xA;        BitmapFactory.decodeResource(res, resId, options);&#xD;&#xA;    &#xD;&#xA;        // Calculate inSampleSize&#xD;&#xA;        options.inSampleSize = calculateInSampleSize(options, reqWidth, reqHeight);&#xD;&#xA;    &#xD;&#xA;        // Decode bitmap with inSampleSize set&#xD;&#xA;        options.inJustDecodeBounds = false;&#xD;&#xA;        return BitmapFactory.decodeResource(res, resId, options);&#xD;&#xA;    }"
-8632670168138345749,36,5,"    private void Form1_Load(object sender, EventArgs e)&#xD;&#xA;    {&#xD;&#xA;        // Create the list to use as the custom source.  &#xD;&#xA;        var source = new AutoCompleteStringCollection();&#xD;&#xA;        source.AddRange(new string[]&#xD;&#xA;                        {&#xD;&#xA;                            ""January"",&#xD;&#xA;                            ""February"",&#xD;&#xA;                            ""March"",&#xD;&#xA;                            ""April"",&#xD;&#xA;                            ""May"",&#xD;&#xA;                            ""June"",&#xD;&#xA;                            ""July"",&#xD;&#xA;                            ""August"",&#xD;&#xA;                            ""September"",&#xD;&#xA;                            ""October"",&#xD;&#xA;                            ""November"",&#xD;&#xA;                            ""December""&#xD;&#xA;                        });&#xD;&#xA;    &#xD;&#xA;        // Create and initialize the text box. &#xD;&#xA;        var textBox = new TextBox&#xD;&#xA;                      {&#xD;&#xA;                          AutoCompleteCustomSource = source,&#xD;&#xA;                          AutoCompleteMode = &#xD;&#xA;                              AutoCompleteMode.SuggestAppend,&#xD;&#xA;                          AutoCompleteSource =&#xD;&#xA;                              AutoCompleteSource.CustomSource,&#xD;&#xA;                          Location = new Point(20, 20),&#xD;&#xA;                          Width = ClientRectangle.Width - 40,&#xD;&#xA;                          Visible = true&#xD;&#xA;                      };&#xD;&#xA;    &#xD;&#xA;        // Add the text box to the form.&#xD;&#xA;        Controls.Add(textBox);&#xD;&#xA;    }"
7341357146618239548,36,5,"    var cachedThrottleFuncs = [],&#xD;&#xA;        minimumInterval = 200; // minimum interval between throttled function calls&#xD;&#xA;    function throttle(func, obj, evt) {&#xD;&#xA;    	var timeouttype	= 0,&#xD;&#xA;    		curFunc;&#xD;&#xA;    	function lowerTimeoutType(f){&#xD;&#xA;    		timeouttype=0;&#xD;&#xA;    		if (curFunc !== undefined){&#xD;&#xA;    			curFunc();&#xD;&#xA;    			curFunc = undefined;&#xD;&#xA;    		}&#xD;&#xA;    	};&#xD;&#xA;    	return cachedThrottleFuncs[ ~(&#xD;&#xA;    		~cachedThrottleFuncs.indexOf(func) || &#xD;&#xA;    		~(&#xD;&#xA;    		  cachedThrottleFuncs.push(function(Evt) {&#xD;&#xA;    			switch (timeouttype){&#xD;&#xA;    				case 0: // Execute immediatly&#xD;&#xA;    					++timeouttype;&#xD;&#xA;    					func.call(Evt.target, Evt);&#xD;&#xA;    					setTimeout(lowerTimeoutType, minimumInterval);&#xD;&#xA;    					break;&#xD;&#xA;    				case 1: // Delayed execute&#xD;&#xA;    					curFunc = func.bind(Evt.target, Evt);&#xD;&#xA;    					Evt.preventDefault();&#xD;&#xA;    			}&#xD;&#xA;    		  }) - 1&#xD;&#xA;    		)&#xD;&#xA;    	)];&#xD;&#xA;    };&#xD;&#xA;	function listen(obj, evt, func){&#xD;&#xA;		obj.addEventListener(evt, throttle(func, obj, evt));&#xD;&#xA;	};&#xD;&#xA;	function mute(obj, evt, func){&#xD;&#xA;		obj.removeEventListener(evt, throttle(func, obj, evt));&#xD;&#xA;	}"
-7905205715877233588,36,5,"	public class CustomGridViewAdapter extends ArrayAdapter<Item> {&#xD;&#xA;		Context context;&#xD;&#xA;		int layoutResourceId;&#xD;&#xA;		ArrayList<Item> data = new ArrayList<Item>();&#xD;&#xA;		public CustomGridViewAdapter(Context context, int layoutResourceId,&#xD;&#xA;				ArrayList<Item> data) {&#xD;&#xA;			super(context, layoutResourceId, data);&#xD;&#xA;			this.layoutResourceId = layoutResourceId;&#xD;&#xA;			this.context = context;&#xD;&#xA;			this.data = data;&#xD;&#xA;		}&#xD;&#xA;		@Override&#xD;&#xA;		public View getView(int position, View convertView, ViewGroup parent) {&#xD;&#xA;			View row = convertView;&#xD;&#xA;			RecordHolder holder = null;&#xD;&#xA;			if (row == null) {&#xD;&#xA;				LayoutInflater inflater = ((Activity) context).getLayoutInflater();&#xD;&#xA;				row = inflater.inflate(layoutResourceId, parent, false);&#xD;&#xA;				holder = new RecordHolder();&#xD;&#xA;				holder.txtTitle = (TextView) row.findViewById(R.id.item_text);&#xD;&#xA;				holder.imageItem = (ImageView) row.findViewById(R.id.item_image);&#xD;&#xA;				row.setTag(holder);&#xD;&#xA;			} else {&#xD;&#xA;				holder = (RecordHolder) row.getTag();&#xD;&#xA;			}&#xD;&#xA;			Item item = data.get(position);&#xD;&#xA;			holder.txtTitle.setText(item.getTitle());&#xD;&#xA;			holder.imageItem.setImageBitmap(item.getImage());&#xD;&#xA;			return row;&#xD;&#xA;		}&#xD;&#xA;		static class RecordHolder {&#xD;&#xA;			TextView txtTitle;&#xD;&#xA;			ImageView imageItem;&#xD;&#xA;		}&#xD;&#xA;    }&#xD;&#xA;   "
-5694332664686263755,37,5,"    	BITS 16&#xD;&#xA;    &#xD;&#xA;    start:&#xD;&#xA;    	mov ax, 07C0h		; Set up 4K stack space after this bootloader&#xD;&#xA;    	add ax, 288		; (4096 + 512) / 16 bytes per paragraph&#xD;&#xA;    	mov ss, ax&#xD;&#xA;    	mov sp, 4096&#xD;&#xA;    &#xD;&#xA;    	mov ax, 07C0h		; Set data segment to where we're loaded&#xD;&#xA;    	mov ds, ax&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    	mov si, text_string	; Put string position into SI&#xD;&#xA;    	call print_string	; Call our string-printing routine&#xD;&#xA;    &#xD;&#xA;    	jmp $			; Jump here - infinite loop!&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    	text_string db 'This is my cool new OS!', 0&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    print_string:			; Routine: output string in SI to screen&#xD;&#xA;    	mov ah, 0Eh		; int 10h 'print char' function&#xD;&#xA;    &#xD;&#xA;    .repeat:&#xD;&#xA;    	lodsb			; Get character from string&#xD;&#xA;    	cmp al, 0&#xD;&#xA;    	je .done		; If char is zero, end of string&#xD;&#xA;    	int 10h			; Otherwise, print it&#xD;&#xA;    	jmp .repeat&#xD;&#xA;    &#xD;&#xA;    .done:&#xD;&#xA;    	ret&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    	times 510-($-$$) db 0	; Pad remainder of boot sector with 0s&#xD;&#xA;    	dw 0xAA55		; The standard PC boot signature"
-518376244748769111,37,5,"    import React from 'react';&#xD;&#xA;    import { Text, TouchableOpacity } from 'react-native';&#xD;&#xA;    &#xD;&#xA;    const Button = ({ onPress, children }) => {&#xD;&#xA;      const { buttonStyle, textStyle } = styles;&#xD;&#xA;    &#xD;&#xA;      return (&#xD;&#xA;        <TouchableOpacity onPress={onPress} style={buttonStyle}>&#xD;&#xA;          <Text style={textStyle}>&#xD;&#xA;            {children}&#xD;&#xA;          </Text>&#xD;&#xA;        </TouchableOpacity>&#xD;&#xA;      );&#xD;&#xA;    };&#xD;&#xA;    &#xD;&#xA;    const styles = {&#xD;&#xA;      textStyle: {&#xD;&#xA;        alignSelf: 'center',&#xD;&#xA;        color: '#007aff',&#xD;&#xA;        fontSize: 16,&#xD;&#xA;        fontWeight: '600',&#xD;&#xA;        paddingTop: 10,&#xD;&#xA;        paddingBottom: 10&#xD;&#xA;      },&#xD;&#xA;      buttonStyle: {&#xD;&#xA;          flex: 1,&#xD;&#xA;          alignSelf: 'stretch',&#xD;&#xA;          backgroundColor: '#fff',&#xD;&#xA;          borderRadius: 5,&#xD;&#xA;          borderWidth: 1,&#xD;&#xA;          borderColor: '#007aff',&#xD;&#xA;          marginLeft: 5,&#xD;&#xA;          marginRight: 5&#xD;&#xA;      }&#xD;&#xA;    };&#xD;&#xA;    &#xD;&#xA;    export { Button };"
-3286411541952082645,37,5,"    {&#xD;&#xA;      ""name"": ""angular2-quickstart"",&#xD;&#xA;      ""version"": ""1.0.0"",&#xD;&#xA;      ""scripts"": {&#xD;&#xA;        ""start"": ""tsc && concurrently \""npm run tsc:w\"" \""npm run lite\"" "",&#xD;&#xA;        ""lite"": ""lite-server"",&#xD;&#xA;        ""postinstall"": ""typings install"",&#xD;&#xA;        ""tsc"": ""tsc"",&#xD;&#xA;        ""tsc:w"": ""tsc -w"",&#xD;&#xA;        ""typings"": ""typings""&#xD;&#xA;      },&#xD;&#xA;      ""license"": ""ISC"",&#xD;&#xA;      ""dependencies"": {&#xD;&#xA;        ""@angular/common"":  ""2.0.0-rc.1"",&#xD;&#xA;        ""@angular/compiler"":  ""2.0.0-rc.1"",&#xD;&#xA;        ""@angular/core"":  ""2.0.0-rc.1"",&#xD;&#xA;        ""@angular/http"":  ""2.0.0-rc.1"",&#xD;&#xA;        ""@angular/platform-browser"":  ""2.0.0-rc.1"",&#xD;&#xA;        ""@angular/platform-browser-dynamic"":  ""2.0.0-rc.1"",&#xD;&#xA;        ""@angular/router"":  ""2.0.0-rc.1"",&#xD;&#xA;        ""@angular/router-deprecated"":  ""2.0.0-rc.1"",&#xD;&#xA;        ""@angular/upgrade"":  ""2.0.0-rc.1"",&#xD;&#xA;        ""systemjs"": ""0.19.27"",&#xD;&#xA;        ""es6-shim"": ""^0.35.0"",&#xD;&#xA;        ""reflect-metadata"": ""^0.1.3"",&#xD;&#xA;        ""rxjs"": ""5.0.0-beta.6"",&#xD;&#xA;        ""zone.js"": ""^0.6.12"",&#xD;&#xA;        ""angular2-in-memory-web-api"": ""0.0.7"",&#xD;&#xA;        ""bootstrap"": ""^3.3.6""&#xD;&#xA;      },&#xD;&#xA;      ""devDependencies"": {&#xD;&#xA;        ""concurrently"": ""^2.0.0"",&#xD;&#xA;        ""lite-server"": ""^2.2.0"",&#xD;&#xA;        ""typescript"": ""^1.8.10"",&#xD;&#xA;        ""typings"":""^0.8.1""&#xD;&#xA;      }&#xD;&#xA;    }"
-7162799257467331544,37,5,"    - (UIImage *)resizedImage:(CGSize)newSize&#xD;&#xA;                    transform:(CGAffineTransform)transform&#xD;&#xA;               drawTransposed:(BOOL)transpose&#xD;&#xA;         interpolationQuality:(CGInterpolationQuality)quality &#xD;&#xA;    {&#xD;&#xA;        CGRect newRect = CGRectIntegral(CGRectMake(0, 0, newSize.width, newSize.height));&#xD;&#xA;        CGRect transposedRect = CGRectMake(0, 0, newRect.size.height, newRect.size.width);&#xD;&#xA;        CGImageRef imageRef = self.CGImage;&#xD;&#xA;        &#xD;&#xA;        // Build a context that's the same dimensions as the new size&#xD;&#xA;        CGContextRef bitmap = CGBitmapContextCreate(NULL,&#xD;&#xA;                                                    newRect.size.width,&#xD;&#xA;                                                    newRect.size.height,&#xD;&#xA;                                                    CGImageGetBitsPerComponent(imageRef),&#xD;&#xA;                                                    0,&#xD;&#xA;                                                    CGImageGetColorSpace(imageRef),&#xD;&#xA;                                                    CGImageGetBitmapInfo(imageRef));&#xD;&#xA;        &#xD;&#xA;        // Rotate and/or flip the image if required by its orientation&#xD;&#xA;        CGContextConcatCTM(bitmap, transform);&#xD;&#xA;        &#xD;&#xA;        // Set the quality level to use when rescaling&#xD;&#xA;        CGContextSetInterpolationQuality(bitmap, quality);&#xD;&#xA;        &#xD;&#xA;        // Draw into the context; this scales the image&#xD;&#xA;        CGContextDrawImage(bitmap, transpose ? transposedRect : newRect, imageRef);&#xD;&#xA;        &#xD;&#xA;        // Get the resized image from the context and a UIImage&#xD;&#xA;        CGImageRef newImageRef = CGBitmapContextCreateImage(bitmap);&#xD;&#xA;        UIImage *newImage = [UIImage imageWithCGImage:newImageRef];&#xD;&#xA;        &#xD;&#xA;        // Clean up&#xD;&#xA;        CGContextRelease(bitmap);&#xD;&#xA;        CGImageRelease(newImageRef);&#xD;&#xA;        &#xD;&#xA;        return newImage;&#xD;&#xA;    }"
-3352132202967808795,37,5,"    {&#xD;&#xA;      ""name"": ""angular2-quickstart"",&#xD;&#xA;      ""version"": ""1.0.0"",&#xD;&#xA;      ""scripts"": {&#xD;&#xA;        ""start"": ""tsc && concurrently \""npm run tsc:w\"" \""npm run lite\"" "",&#xD;&#xA;        ""lite"": ""lite-server"",&#xD;&#xA;        ""postinstall"": ""typings install"",&#xD;&#xA;        ""tsc"": ""tsc"",&#xD;&#xA;        ""tsc:w"": ""tsc -w"",&#xD;&#xA;        ""typings"": ""typings""&#xD;&#xA;      },&#xD;&#xA;      ""license"": ""ISC"",&#xD;&#xA;      ""dependencies"": {&#xD;&#xA;        ""@angular/common"": ""2.0.0"",&#xD;&#xA;        ""@angular/compiler"": ""2.0.0"",&#xD;&#xA;        ""@angular/core"": ""2.0.0"",&#xD;&#xA;        ""@angular/forms"": ""2.0.0"",&#xD;&#xA;        ""@angular/http"": ""2.0.0"",&#xD;&#xA;        ""@angular/platform-browser"": ""2.0.0"",&#xD;&#xA;        ""@angular/platform-browser-dynamic"": ""2.0.0"",&#xD;&#xA;        ""@angular/router"": ""3.0.0"",&#xD;&#xA;        ""@angular/upgrade"": ""2.0.0"",&#xD;&#xA;        ""core-js"": ""^2.4.1"",&#xD;&#xA;        ""reflect-metadata"": ""^0.1.3"",&#xD;&#xA;        ""rxjs"": ""5.0.0-beta.12"",&#xD;&#xA;        ""systemjs"": ""0.19.27"",&#xD;&#xA;        ""zone.js"": ""^0.6.23"",&#xD;&#xA;        ""angular2-in-memory-web-api"": ""0.0.20"",&#xD;&#xA;        ""bootstrap"": ""^3.3.6""&#xD;&#xA;      },&#xD;&#xA;      ""devDependencies"": {&#xD;&#xA;        ""concurrently"": ""^2.2.0"",&#xD;&#xA;        ""lite-server"": ""^2.2.2"",&#xD;&#xA;        ""typescript"": ""^2.0.2"",&#xD;&#xA;        ""typings"": ""^1.3.2""&#xD;&#xA;      }&#xD;&#xA;    }"
-2297944269874936844,37,5,    <table>&#xD;&#xA;      <tr>&#xD;&#xA;        <th>Company</th>&#xD;&#xA;        <th>Contact</th>&#xD;&#xA;        <th>Country</th>&#xD;&#xA;      </tr>&#xD;&#xA;      <tr>&#xD;&#xA;        <td>Alfreds Futterkiste</td>&#xD;&#xA;        <td>Maria Anders</td>&#xD;&#xA;        <td>Germany</td>&#xD;&#xA;      </tr>&#xD;&#xA;      <tr>&#xD;&#xA;        <td>Centro comercial Moctezuma</td>&#xD;&#xA;        <td>Francisco Chang</td>&#xD;&#xA;        <td>Mexico</td>&#xD;&#xA;      </tr>&#xD;&#xA;      <tr>&#xD;&#xA;        <td>Ernst Handel</td>&#xD;&#xA;        <td>Roland Mendel</td>&#xD;&#xA;        <td>Austria</td>&#xD;&#xA;      </tr>&#xD;&#xA;      <tr>&#xD;&#xA;        <td>Island Trading</td>&#xD;&#xA;        <td>Helen Bennett</td>&#xD;&#xA;        <td>UK</td>&#xD;&#xA;      </tr>&#xD;&#xA;      <tr>&#xD;&#xA;        <td>Laughing Bacchus Winecellars</td>&#xD;&#xA;        <td>Yoshi Tannamuri</td>&#xD;&#xA;        <td>Canada</td>&#xD;&#xA;      </tr>&#xD;&#xA;      <tr>&#xD;&#xA;        <td>Magazzini Alimentari Riuniti</td>&#xD;&#xA;        <td>Giovanni Rovelli</td>&#xD;&#xA;        <td>Italy</td>&#xD;&#xA;      </tr>&#xD;&#xA;    </table>
4387442035776647753,37,5,"    $(function () {&#xD;&#xA;        var startDate;&#xD;&#xA;        var endDate;&#xD;&#xA;        var selectCurrentWeek = function () {&#xD;&#xA;            window.setTimeout(function () {&#xD;&#xA;                $('.week-picker').find('.ui-datepicker-current-day a').addClass('ui-state-active')&#xD;&#xA;            }, 1);&#xD;&#xA;        }&#xD;&#xA;        $('.week-picker').datepicker({&#xD;&#xA;            showOtherMonths: true,&#xD;&#xA;            selectOtherMonths: true,&#xD;&#xA;            onSelect: function (dateText, inst) {&#xD;&#xA;                var date = $(this).datepicker('getDate');&#xD;&#xA;                startDate = new Date(date.getFullYear(), date.getMonth(), date.getDate() - date.getDay());&#xD;&#xA;                endDate = new Date(date.getFullYear(), date.getMonth(), date.getDate() - date.getDay() + 6);&#xD;&#xA;                var dateFormat = inst.settings.dateFormat || $.datepicker._defaults.dateFormat;&#xD;&#xA;                $('#startDate').text($.datepicker.formatDate(dateFormat, startDate, inst.settings));&#xD;&#xA;                $('#endDate').text($.datepicker.formatDate(dateFormat, endDate, inst.settings));&#xD;&#xA;                selectCurrentWeek();&#xD;&#xA;            },&#xD;&#xA;            beforeShowDay: function (date) {&#xD;&#xA;                var cssClass = '';&#xD;&#xA;                if (date >= startDate && date <= endDate)&#xD;&#xA;                    cssClass = 'ui-datepicker-current-day';&#xD;&#xA;                return [true, cssClass];&#xD;&#xA;            },&#xD;&#xA;            onChangeMonthYear: function (year, month, inst) {&#xD;&#xA;                selectCurrentWeek();&#xD;&#xA;            }&#xD;&#xA;        });&#xD;&#xA;        $('.week-picker .ui-datepicker-calendar tr').live('mousemove', function () {&#xD;&#xA;            $(this).find('td a').addClass('ui-state-hover');&#xD;&#xA;        });&#xD;&#xA;        $('.week-picker .ui-datepicker-calendar tr').live('mouseleave', function () {&#xD;&#xA;            $(this).find('td a').removeClass('ui-state-hover');&#xD;&#xA;        });&#xD;&#xA;    });"
-6106075639221082550,37,5,"    -(UIImage*) resizedImage:(UIImage *)inImage: (CGRect) thumbRect&#xD;&#xA;    {&#xD;&#xA;	CGImageRef			imageRef = [inImage CGImage];&#xD;&#xA;	CGImageAlphaInfo	alphaInfo = CGImageGetAlphaInfo(imageRef);&#xD;&#xA;	&#xD;&#xA;	// There's a wierdness with kCGImageAlphaNone and CGBitmapContextCreate&#xD;&#xA;	// see Supported Pixel Formats in the Quartz 2D Programming Guide&#xD;&#xA;	// Creating a Bitmap Graphics Context section&#xD;&#xA;	// only RGB 8 bit images with alpha of kCGImageAlphaNoneSkipFirst, kCGImageAlphaNoneSkipLast, kCGImageAlphaPremultipliedFirst,&#xD;&#xA;	// and kCGImageAlphaPremultipliedLast, with a few other oddball image kinds are supported&#xD;&#xA;	// The images on input here are likely to be png or jpeg files&#xD;&#xA;	if (alphaInfo == kCGImageAlphaNone)&#xD;&#xA;		alphaInfo = kCGImageAlphaNoneSkipLast;&#xD;&#xA;    &#xD;&#xA;	// Build a bitmap context that's the size of the thumbRect&#xD;&#xA;	CGContextRef bitmap = CGBitmapContextCreate(&#xD;&#xA;                                                NULL,&#xD;&#xA;                                                thumbRect.size.width,		// width&#xD;&#xA;                                                thumbRect.size.height,		// height&#xD;&#xA;                                                CGImageGetBitsPerComponent(imageRef),	// really needs to always be 8&#xD;&#xA;                                                4 * thumbRect.size.width,	// rowbytes&#xD;&#xA;                                                CGImageGetColorSpace(imageRef),&#xD;&#xA;                                                alphaInfo&#xD;&#xA;                                                );&#xD;&#xA;    &#xD;&#xA;	// Draw into the context, this scales the image&#xD;&#xA;	CGContextDrawImage(bitmap, thumbRect, imageRef);&#xD;&#xA;    &#xD;&#xA;	// Get an image from the context and a UIImage&#xD;&#xA;	CGImageRef	ref = CGBitmapContextCreateImage(bitmap);&#xD;&#xA;	UIImage*	result = [UIImage imageWithCGImage:ref];&#xD;&#xA;    &#xD;&#xA;	CGContextRelease(bitmap);	// ok if NULL&#xD;&#xA;	CGImageRelease(ref);&#xD;&#xA;    &#xD;&#xA;	return result;&#xD;&#xA;    }"
-5990496720261235273,37,5,"    public class BackgroundService extends Service {&#xD;&#xA;        private String LOG_TAG = null;&#xD;&#xA;            &#xD;&#xA;        @Override&#xD;&#xA;        public void onCreate() {&#xD;&#xA;            super.onCreate();&#xD;&#xA;            LOG_TAG = ""app_name"";&#xD;&#xA;            Log.i(LOG_TAG, ""service created"");&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public int onStartCommand(Intent intent, int flags, int startId) {&#xD;&#xA;            Log.i(LOG_TAG, ""In onStartCommand"");&#xD;&#xA;            //ur actual code&#xD;&#xA;            return START_STICKY;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public IBinder onBind(Intent intent) {&#xD;&#xA;            // Wont be called as service is not bound&#xD;&#xA;            Log.i(LOG_TAG, ""In onBind"");&#xD;&#xA;            return null;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @TargetApi(Build.VERSION_CODES.ICE_CREAM_SANDWICH)&#xD;&#xA;        @Override&#xD;&#xA;        public void onTaskRemoved(Intent rootIntent) {&#xD;&#xA;            super.onTaskRemoved(rootIntent);&#xD;&#xA;            Log.i(LOG_TAG, ""In onTaskRemoved"");&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void onDestroy() {&#xD;&#xA;            super.onDestroy();&#xD;&#xA;            Log.i(LOG_TAG, ""In onDestroyed"");&#xD;&#xA;        }&#xD;&#xA;    }"
7598706216376284881,37,5,"        Notification notification = (Notification) event.getParcelableData();&#xD;&#xA;        RemoteViews views = notification.contentView;&#xD;&#xA;        Class secretClass = views.getClass();&#xD;&#xA;        try {&#xD;&#xA;            Map<Integer, String> text = new HashMap<Integer, String>();&#xD;&#xA;            Field outerFields[] = secretClass.getDeclaredFields();&#xD;&#xA;            for (int i = 0; i < outerFields.length; i++) {&#xD;&#xA;                if (!outerFields[i].getName().equals(""mActions"")) continue;&#xD;&#xA;                outerFields[i].setAccessible(true);&#xD;&#xA;                ArrayList<Object> actions = (ArrayList<Object>) outerFields[i]&#xD;&#xA;                        .get(views);&#xD;&#xA;                for (Object action : actions) {&#xD;&#xA;                    Field innerFields[] = action.getClass().getDeclaredFields();&#xD;&#xA;                    Object value = null;&#xD;&#xA;                    Integer type = null;&#xD;&#xA;                    Integer viewId = null;&#xD;&#xA;                    for (Field field : innerFields) {&#xD;&#xA;                        field.setAccessible(true);&#xD;&#xA;                        if (field.getName().equals(""value"")) {&#xD;&#xA;                            value = field.get(action);&#xD;&#xA;                        } else if (field.getName().equals(""type"")) {&#xD;&#xA;                            type = field.getInt(action);&#xD;&#xA;                        } else if (field.getName().equals(""viewId"")) {&#xD;&#xA;                            viewId = field.getInt(action);&#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;                    if (type == 9 || type == 10) {&#xD;&#xA;                        text.put(viewId, value.toString());&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;                System.out.println(""title is: "" + text.get(16908310));&#xD;&#xA;                System.out.println(""info is: "" + text.get(16909082));&#xD;&#xA;                System.out.println(""text is: "" + text.get(16908358));&#xD;&#xA;            }&#xD;&#xA;        } catch (Exception e) {&#xD;&#xA;            e.printStackTrace();&#xD;&#xA;        }"
3618787779229516135,37,5,"      -(void)usersShow:(NSString *)userID&#xD;&#xA;    {&#xD;&#xA;        NSString *statusesShowEndpoint = @""https://api.twitter.com/1.1/users/show.json"";&#xD;&#xA;        NSDictionary *params = @{@""user_id"": userID};&#xD;&#xA;        &#xD;&#xA;        NSError *clientError;&#xD;&#xA;        NSURLRequest *request = [[[Twitter sharedInstance] APIClient]&#xD;&#xA;                                 URLRequestWithMethod:@""GET""&#xD;&#xA;                                 URL:statusesShowEndpoint&#xD;&#xA;                                 parameters:params&#xD;&#xA;                                 error:&clientError];&#xD;&#xA;        &#xD;&#xA;        if (request) {&#xD;&#xA;            [[[Twitter sharedInstance] APIClient]&#xD;&#xA;             sendTwitterRequest:request&#xD;&#xA;             completion:^(NSURLResponse *response,&#xD;&#xA;                          NSData *data,&#xD;&#xA;                          NSError *connectionError) {&#xD;&#xA;                 if (data) {&#xD;&#xA;                     // handle the response data e.g.&#xD;&#xA;                     NSError *jsonError;&#xD;&#xA;                     NSDictionary *json = [NSJSONSerialization&#xD;&#xA;                                           JSONObjectWithData:data&#xD;&#xA;                                           options:0&#xD;&#xA;                                           error:&jsonError];&#xD;&#xA;                     &#xD;&#xA;                     NSLog(@""%@"",[json description]);&#xD;&#xA;                 }&#xD;&#xA;                 else {&#xD;&#xA;                     NSLog(@""Error code: %ld | Error description: %@"", (long)[connectionError code], [connectionError localizedDescription]);&#xD;&#xA;                 }&#xD;&#xA;             }];&#xD;&#xA;        }&#xD;&#xA;        else {&#xD;&#xA;            NSLog(@""Error: %@"", clientError);&#xD;&#xA;        }&#xD;&#xA;    }"
-7279835914293594475,37,5,"    public static class MainActivity extends Activity&#xD;&#xA;            implements HeadlinesFragment.OnHeadlineSelectedListener{&#xD;&#xA;        ...&#xD;&#xA;    &#xD;&#xA;        public void onArticleSelected(int position) {&#xD;&#xA;            // The user selected the headline of an article from the HeadlinesFragment&#xD;&#xA;            // Do something here to display that article&#xD;&#xA;    &#xD;&#xA;            ArticleFragment articleFrag = (ArticleFragment)&#xD;&#xA;                    getSupportFragmentManager().findFragmentById(R.id.article_fragment);&#xD;&#xA;    &#xD;&#xA;            if (articleFrag != null) {&#xD;&#xA;                // If article frag is available, we're in two-pane layout...&#xD;&#xA;    &#xD;&#xA;                // Call a method in the ArticleFragment to update its content&#xD;&#xA;                articleFrag.updateArticleView(position);&#xD;&#xA;            } else {&#xD;&#xA;                // Otherwise, we're in the one-pane layout and must swap frags...&#xD;&#xA;    &#xD;&#xA;                // Create fragment and give it an argument for the selected article&#xD;&#xA;                ArticleFragment newFragment = new ArticleFragment();&#xD;&#xA;                Bundle args = new Bundle();&#xD;&#xA;                args.putInt(ArticleFragment.ARG_POSITION, position);&#xD;&#xA;                newFragment.setArguments(args);&#xD;&#xA;            &#xD;&#xA;                FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();&#xD;&#xA;    &#xD;&#xA;                // Replace whatever is in the fragment_container view with this fragment,&#xD;&#xA;                // and add the transaction to the back stack so the user can navigate back&#xD;&#xA;                transaction.replace(R.id.fragment_container, newFragment);&#xD;&#xA;                transaction.addToBackStack(null);&#xD;&#xA;    &#xD;&#xA;                // Commit the transaction&#xD;&#xA;                transaction.commit();&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }"
-2321213345380408323,37,5,"    function query() {&#xD;&#xA;	global $link;&#xD;&#xA;	$debug = false;&#xD;&#xA;	&#xD;&#xA;	//get the sql query&#xD;&#xA;	$args = func_get_args();&#xD;&#xA;	$sql = array_shift($args);&#xD;&#xA;	//secure the input&#xD;&#xA;	for ($i=0;$i<count($args);$i++) {&#xD;&#xA;		$args[$i] = urldecode($args[$i]);&#xD;&#xA;		$args[$i] = mysqli_real_escape_string($link, $args[$i]);&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	//build the final query&#xD;&#xA;	$sql = vsprintf($sql, $args);&#xD;&#xA;	&#xD;&#xA;	if ($debug) print $sql;&#xD;&#xA;	&#xD;&#xA;	//execute and fetch the results&#xD;&#xA;	$result = mysqli_query($link, $sql);&#xD;&#xA;	if (mysqli_errno($link)==0 && $result) {&#xD;&#xA;		&#xD;&#xA;		$rows = array();&#xD;&#xA;		if ($result!==true)&#xD;&#xA;		while ($d = mysqli_fetch_assoc($result)) {&#xD;&#xA;			array_push($rows,$d);&#xD;&#xA;		}&#xD;&#xA;		&#xD;&#xA;		//return json&#xD;&#xA;		return array('result'=>$rows);&#xD;&#xA;		&#xD;&#xA;	} else {&#xD;&#xA;	&#xD;&#xA;		//error&#xD;&#xA;		return array('error'=>'Database error');&#xD;&#xA;	}&#xD;&#xA;        }"
-8701271831425146287,37,5,"         [&#xD;&#xA;          {&#xD;&#xA;             ""id"": ""244"",&#xD;&#xA;              ""name"": ""PIZZAS"",&#xD;&#xA;              ""image"": """",&#xD;&#xA;              ""coupon"": ""1"",&#xD;&#xA;              ""icon"": """",&#xD;&#xA;              ""order"": ""1"",&#xD;&#xA;              ""aname"": """",&#xD;&#xA;              ""options"": ""2"",&#xD;&#xA;              ""subcategory"": [&#xD;&#xA;               {&#xD;&#xA;                ""id"": ""515"",&#xD;&#xA;                ""name"": ""MARGARITA"",&#xD;&#xA;                ""description"": ""Cheese and Tomato"",&#xD;&#xA;                ""image"": """",&#xD;&#xA;                ""icon"": """",&#xD;&#xA;                ""coupon"": ""1"",&#xD;&#xA;                ""order"": ""1"",&#xD;&#xA;                ""aname"": """",&#xD;&#xA;                ""options"": ""2"",&#xD;&#xA;                ""item"": [&#xD;&#xA;                            {&#xD;&#xA;                               ""id"": ""1749"",&#xD;&#xA;                               ""name"": ""9 Inch Thin & Crispy Margarita"",&#xD;&#xA;                               ""description"": """",&#xD;&#xA;                               ""price"": ""3.40"",&#xD;&#xA;                               ""coupon"": ""1"",&#xD;&#xA;                               ""image"": """",&#xD;&#xA;                               ""options"": ""2"",&#xD;&#xA;                               ""order"": ""1"",&#xD;&#xA;                               ""addon"": ""495"",&#xD;&#xA;                               ""aname"": """",&#xD;&#xA;                               ""icon"": """"&#xD;&#xA;                        }]&#xD;&#xA;                  }]&#xD;&#xA;          }]"
47566609356996905,37,5,"    <android.support.constraint.ConstraintLayout &#xD;&#xA;        xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;        xmlns:app=""http://schemas.android.com/apk/res-auto""&#xD;&#xA;        android:layout_width=""match_parent""&#xD;&#xA;        android:layout_height=""match_parent"">&#xD;&#xA;    &#xD;&#xA;        <TextView&#xD;&#xA;            android:id=""@+id/fifty_thirty""&#xD;&#xA;            android:layout_width=""0dp""&#xD;&#xA;            android:layout_height=""0dp""&#xD;&#xA;            android:background=""#ffff8800""&#xD;&#xA;            android:gravity=""center""&#xD;&#xA;            android:text=""@string/fifty_fifty_text""&#xD;&#xA;            android:textColor=""@android:color/white""&#xD;&#xA;            app:layout_constraintHeight_default=""percent""&#xD;&#xA;            app:layout_constraintHeight_percent=""0.5""&#xD;&#xA;            android:textSize=""25sp""&#xD;&#xA;            app:layout_constraintTop_toTopOf=""parent""&#xD;&#xA;            app:layout_constraintWidth_default=""percent""&#xD;&#xA;            app:layout_constraintWidth_percent=""0.5"" />&#xD;&#xA;    &#xD;&#xA;        <TextView&#xD;&#xA;            android:layout_width=""0dp""&#xD;&#xA;            android:layout_height=""0dp""&#xD;&#xA;            android:background=""#ffff5566""&#xD;&#xA;            android:gravity=""center""&#xD;&#xA;            android:text=""@string/fifty_fifty_text""&#xD;&#xA;            android:textColor=""@android:color/white""&#xD;&#xA;            android:textSize=""25sp""&#xD;&#xA;            app:layout_constraintHeight_default=""percent""&#xD;&#xA;            app:layout_constraintHeight_percent=""0.5""&#xD;&#xA;            app:layout_constraintLeft_toRightOf=""@id/fifty_thirty""&#xD;&#xA;            app:layout_constraintTop_toBottomOf=""@id/fifty_thirty""&#xD;&#xA;            app:layout_constraintWidth_default=""percent""&#xD;&#xA;            app:layout_constraintWidth_percent=""0.5"" />&#xD;&#xA;    &#xD;&#xA;    </android.support.constraint.ConstraintLayout>"
-2981790513480015830,38,5,"    <link rel=""stylesheet"" href=""https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"" integrity=""sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm"" crossorigin=""anonymous"">&#xD;&#xA;    <nav class=""navbar navbar-expand-lg navbar-light bg-light"">&#xD;&#xA;      <a class=""navbar-brand"" href=""#"">Navbar</a>&#xD;&#xA;      <button class=""navbar-toggler"" type=""button"" data-toggle=""collapse"" data-target=""#navbarSupportedContent"" aria-controls=""navbarSupportedContent"" aria-expanded=""false"" aria-label=""Toggle navigation"">&#xD;&#xA;        <span class=""navbar-toggler-icon""></span>&#xD;&#xA;      </button>&#xD;&#xA;      <div class=""collapse navbar-collapse"" id=""navbarSupportedContent"">&#xD;&#xA;        <ul class=""navbar-nav mr-auto"">&#xD;&#xA;          <li class=""nav-item active"">&#xD;&#xA;            <a class=""nav-link"" href=""#"">Home <span class=""sr-only"">(current)</span></a>&#xD;&#xA;          </li>&#xD;&#xA;          <li class=""nav-item"">&#xD;&#xA;            <a class=""nav-link"" href=""#"">Link</a>&#xD;&#xA;          </li>&#xD;&#xA;          <li class=""nav-item dropdown"">&#xD;&#xA;            <a class=""nav-link dropdown-toggle"" href=""#"" id=""navbarDropdown"" role=""button"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">&#xD;&#xA;              Dropdown&#xD;&#xA;            </a>&#xD;&#xA;            <div class=""dropdown-menu"" aria-labelledby=""navbarDropdown"">&#xD;&#xA;              <a class=""dropdown-item"" href=""#"">Action</a>&#xD;&#xA;              <a class=""dropdown-item"" href=""#"">Another action</a>&#xD;&#xA;              <div class=""dropdown-divider""></div>&#xD;&#xA;              <a class=""dropdown-item"" href=""#"">Something else here</a>&#xD;&#xA;            </div>&#xD;&#xA;          </li>&#xD;&#xA;          <li class=""nav-item"">&#xD;&#xA;            <a class=""nav-link disabled"" href=""#"">Disabled</a>&#xD;&#xA;          </li>&#xD;&#xA;        </ul>&#xD;&#xA;        <form class=""form-inline my-2 my-lg-0"">&#xD;&#xA;          <input class=""form-control mr-sm-2"" type=""search"" placeholder=""Search"" aria-label=""Search"">&#xD;&#xA;          <button class=""btn btn-outline-success my-2 my-sm-0"" type=""submit"">Search</button>&#xD;&#xA;        </form>&#xD;&#xA;      </div>&#xD;&#xA;    </nav>&#xD;&#xA;    <script src=""https://code.jquery.com/jquery-3.2.1.slim.min.js"" integrity=""sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN"" crossorigin=""anonymous""></script>&#xD;&#xA;    <script src=""https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"" integrity=""sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"" crossorigin=""anonymous""></script>&#xD;&#xA;    <script src=""https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"" integrity=""sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"" crossorigin=""anonymous""></script>"
741758969638875942,38,5,"    		jQuery(document).ready(function () {&#xD;&#xA;			// This button will increment the value&#xD;&#xA;			$('.qtyplus').click(function (e) {&#xD;&#xA;				// Stop acting like a button&#xD;&#xA;				e.preventDefault();&#xD;&#xA;				// Get the field name&#xD;&#xA;				fieldName = $(this).attr('field');&#xD;&#xA;				// Get its current value&#xD;&#xA;				var currentVal = parseInt($('input[name=' + fieldName + ']').val());&#xD;&#xA;				// If is not undefined&#xD;&#xA;				if (!isNaN(currentVal)) {&#xD;&#xA;					// Increment&#xD;&#xA;					$('input[name=' + fieldName + ']').val(currentVal + 1);&#xD;&#xA;					&#xD;&#xA;				}&#xD;&#xA;				else  {&#xD;&#xA;					// Otherwise put a 0 there&#xD;&#xA;					$('input[name=' + fieldName + ']').val(0);&#xD;&#xA;				}&#xD;&#xA;			});&#xD;&#xA;			// This button will decrement the value till 0&#xD;&#xA;			$("".qtyminus"").click(function (e) {&#xD;&#xA;				// Stop acting like a button&#xD;&#xA;				e.preventDefault();&#xD;&#xA;				// Get the field name&#xD;&#xA;				fieldName = $(this).attr('field');&#xD;&#xA;				// Get its current value&#xD;&#xA;				var currentVal = parseInt($('input[name=' + fieldName + ']').val());&#xD;&#xA;				// If it isn't undefined or its greater than 0&#xD;&#xA;				if (!isNaN(currentVal) && currentVal >= 0) {&#xD;&#xA;					// Decrement one&#xD;&#xA;					$('input[name=' + fieldName + ']').val(currentVal - 1);&#xD;&#xA;				} else {&#xD;&#xA;					// Otherwise put a 0 there&#xD;&#xA;					$('input[name=' + fieldName + ']').val(0);&#xD;&#xA;				}&#xD;&#xA;			});&#xD;&#xA;		});"
-2460862715150386992,38,5,"      <?xml version=""1.0"" encoding=""utf-8""?>&#xD;&#xA;     <LinearLayout xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;            android:orientation=""vertical""&#xD;&#xA;            android:layout_width=""fill_parent""&#xD;&#xA;            android:layout_height=""fill_parent"">&#xD;&#xA;    	<TabHost&#xD;&#xA;    	    android:id=""@android:id/tabhost""&#xD;&#xA;    	    android:layout_width=""fill_parent""&#xD;&#xA;    	    android:layout_height=""fill_parent""&#xD;&#xA;    	    >&#xD;&#xA;    	    <LinearLayout&#xD;&#xA;    	        android:orientation=""vertical""&#xD;&#xA;    	        android:layout_width=""fill_parent""&#xD;&#xA;    	        android:layout_height=""fill_parent""&#xD;&#xA;    	        >&#xD;&#xA;    	&#xD;&#xA;    	        <TabWidget&#xD;&#xA;    	            android:id=""@android:id/tabs""&#xD;&#xA;    	            android:orientation=""horizontal""&#xD;&#xA;    	            android:layout_width=""fill_parent""&#xD;&#xA;    	            android:layout_height=""wrap_content""&#xD;&#xA;    	            android:layout_weight=""0""&#xD;&#xA;    	            />&#xD;&#xA;    	&#xD;&#xA;    	        <FrameLayout&#xD;&#xA;    	            android:id=""@android:id/tabcontent""&#xD;&#xA;    	            android:layout_width=""0dp""&#xD;&#xA;    	            android:layout_height=""0dp""&#xD;&#xA;    	            android:layout_weight=""0""/>&#xD;&#xA;    	&#xD;&#xA;    	        <FrameLayout&#xD;&#xA;    	            android:id=""@+android:id/realtabcontent""&#xD;&#xA;    	            android:layout_width=""fill_parent""&#xD;&#xA;    	            android:layout_height=""0dp""&#xD;&#xA;    	            android:layout_weight=""1""/>&#xD;&#xA;    	    </LinearLayout>&#xD;&#xA;    	</TabHost>&#xD;&#xA;    </LinearLayout>"
4021287301782476352,38,5,"            class _Getch:&#xD;&#xA;            """"""Gets a single character from standard input.  Does not echo to the&#xD;&#xA;        screen.""""""&#xD;&#xA;            def __init__(self):&#xD;&#xA;                try:&#xD;&#xA;                    self.impl = _GetchWindows()&#xD;&#xA;                except ImportError:&#xD;&#xA;                    self.impl = _GetchUnix()&#xD;&#xA;        &#xD;&#xA;            def __call__(self): return self.impl()&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        class _GetchUnix:&#xD;&#xA;            def __init__(self):&#xD;&#xA;                import tty, sys&#xD;&#xA;        &#xD;&#xA;            def __call__(self):&#xD;&#xA;                import sys, tty, termios&#xD;&#xA;                fd = sys.stdin.fileno()&#xD;&#xA;                old_settings = termios.tcgetattr(fd)&#xD;&#xA;                try:&#xD;&#xA;                    tty.setraw(sys.stdin.fileno())&#xD;&#xA;                    ch = sys.stdin.read(1)&#xD;&#xA;                finally:&#xD;&#xA;                    termios.tcsetattr(fd, termios.TCSADRAIN, old_settings)&#xD;&#xA;                return ch&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        class _GetchWindows:&#xD;&#xA;            def __init__(self):&#xD;&#xA;                import msvcrt&#xD;&#xA;        &#xD;&#xA;            def __call__(self):&#xD;&#xA;                import msvcrt&#xD;&#xA;                return msvcrt.getch()&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        getch = _Getch()"
-8447731357230656940,38,5,"    (function() {&#xD;&#xA;	var triggerBttn = document.getElementById( 'trigger-overlay' ),&#xD;&#xA;		overlay = document.querySelector( 'div.overlay' ),&#xD;&#xA;		closeBttn = overlay.querySelector( 'button.overlay-close' );&#xD;&#xA;		transEndEventNames = {&#xD;&#xA;			'WebkitTransition': 'webkitTransitionEnd',&#xD;&#xA;			'MozTransition': 'transitionend',&#xD;&#xA;			'OTransition': 'oTransitionEnd',&#xD;&#xA;			'msTransition': 'MSTransitionEnd',&#xD;&#xA;			'transition': 'transitionend'&#xD;&#xA;		},&#xD;&#xA;		transEndEventName = transEndEventNames[ Modernizr.prefixed( 'transition' ) ],&#xD;&#xA;		support = { transitions : Modernizr.csstransitions };&#xD;&#xA;	function toggleOverlay() {&#xD;&#xA;		if( classie.has( overlay, 'open' ) ) {&#xD;&#xA;			classie.remove( overlay, 'open' );&#xD;&#xA;			classie.add( overlay, 'close' );&#xD;&#xA;			var onEndTransitionFn = function( ev ) {&#xD;&#xA;				if( support.transitions ) {&#xD;&#xA;					if( ev.propertyName !== 'visibility' ) return;&#xD;&#xA;					this.removeEventListener( transEndEventName, onEndTransitionFn );&#xD;&#xA;				}&#xD;&#xA;				classie.remove( overlay, 'close' );&#xD;&#xA;			};&#xD;&#xA;			if( support.transitions ) {&#xD;&#xA;				overlay.addEventListener( transEndEventName, onEndTransitionFn );&#xD;&#xA;			}&#xD;&#xA;			else {&#xD;&#xA;				onEndTransitionFn();&#xD;&#xA;			}&#xD;&#xA;		}&#xD;&#xA;		else if( !classie.has( overlay, 'close' ) ) {&#xD;&#xA;			classie.add( overlay, 'open' );&#xD;&#xA;		}&#xD;&#xA;	}&#xD;&#xA;	triggerBttn.addEventListener( 'click', toggleOverlay );&#xD;&#xA;	closeBttn.addEventListener( 'click', toggleOverlay );&#xD;&#xA;    })();"
-2655778728218166605,38,5,    android.permission.ACCESS_LOCATION_EXTRA_COMMANDS&#xD;&#xA;    android.permission.ACCESS_NETWORK_STATE&#xD;&#xA;    android.permission.ACCESS_NOTIFICATION_POLICY&#xD;&#xA;    android.permission.ACCESS_WIFI_STATE&#xD;&#xA;    android.permission.ACCESS_WIMAX_STATE&#xD;&#xA;    android.permission.BLUETOOTH&#xD;&#xA;    android.permission.BLUETOOTH_ADMIN&#xD;&#xA;    android.permission.BROADCAST_STICKY&#xD;&#xA;    android.permission.CHANGE_NETWORK_STATE&#xD;&#xA;    android.permission.CHANGE_WIFI_MULTICAST_STATE&#xD;&#xA;    android.permission.CHANGE_WIFI_STATE&#xD;&#xA;    android.permission.CHANGE_WIMAX_STATE&#xD;&#xA;    android.permission.DISABLE_KEYGUARD&#xD;&#xA;    android.permission.EXPAND_STATUS_BAR&#xD;&#xA;    android.permission.FLASHLIGHT&#xD;&#xA;    android.permission.GET_ACCOUNTS&#xD;&#xA;    android.permission.GET_PACKAGE_SIZE&#xD;&#xA;    android.permission.INTERNET&#xD;&#xA;    android.permission.KILL_BACKGROUND_PROCESSES&#xD;&#xA;    android.permission.MODIFY_AUDIO_SETTINGS&#xD;&#xA;    android.permission.NFC&#xD;&#xA;    android.permission.READ_SYNC_SETTINGS&#xD;&#xA;    android.permission.READ_SYNC_STATS&#xD;&#xA;    android.permission.RECEIVE_BOOT_COMPLETED&#xD;&#xA;    android.permission.REORDER_TASKS&#xD;&#xA;    android.permission.REQUEST_INSTALL_PACKAGES&#xD;&#xA;    android.permission.SET_TIME_ZONE&#xD;&#xA;    android.permission.SET_WALLPAPER&#xD;&#xA;    android.permission.SET_WALLPAPER_HINTS&#xD;&#xA;    android.permission.SUBSCRIBED_FEEDS_READ&#xD;&#xA;    android.permission.TRANSMIT_IR&#xD;&#xA;    android.permission.USE_FINGERPRINT&#xD;&#xA;    android.permission.VIBRATE&#xD;&#xA;    android.permission.WAKE_LOCK&#xD;&#xA;    android.permission.WRITE_SYNC_SETTINGS&#xD;&#xA;    com.android.alarm.permission.SET_ALARM&#xD;&#xA;    com.android.launcher.permission.INSTALL_SHORTCUT&#xD;&#xA;    com.android.launcher.permission.UNINSTALL_SHORTCUT
-7338269199597663540,38,5,"       public void ExportToPdf(DataTable dt)&#xD;&#xA;       {      &#xD;&#xA;        Document document = new Document();&#xD;&#xA;        PdfWriter writer = PdfWriter.GetInstance(document, new FileStream(""c://sample.pdf"", FileMode.Create));&#xD;&#xA;        document.Open();&#xD;&#xA;                iTextSharp.text.Font font5 = iTextSharp.text.FontFactory.GetFont(FontFactory.HELVETICA, 5);&#xD;&#xA;       &#xD;&#xA;        PdfPTable table = new PdfPTable(dt.Columns.Count);&#xD;&#xA;        PdfPRow row = null;&#xD;&#xA;        float[] widths = new float[] { 4f, 4f, 4f, 4f };&#xD;&#xA; &#xD;&#xA;        table.SetWidths(widths);&#xD;&#xA;      &#xD;&#xA;        table.WidthPercentage = 100;&#xD;&#xA;        int iCol = 0;&#xD;&#xA;        string colname = """";&#xD;&#xA;        PdfPCell cell = new PdfPCell(new Phrase(""Products""));&#xD;&#xA; &#xD;&#xA;        cell.Colspan = dt.Columns.Count;&#xD;&#xA; &#xD;&#xA;        foreach (DataColumn c in dt.Columns)&#xD;&#xA;        {&#xD;&#xA; &#xD;&#xA;            table.AddCell(new Phrase(c.ColumnName, font5));&#xD;&#xA;        }&#xD;&#xA;  &#xD;&#xA;        foreach (DataRow r in dt.Rows)&#xD;&#xA;        {&#xD;&#xA;            if (dt.Rows.Count > 0)&#xD;&#xA;            {&#xD;&#xA;                table.AddCell(new Phrase(r[0].ToString(), font5));&#xD;&#xA;                table.AddCell(new Phrase(r[1].ToString(), font5));&#xD;&#xA;                table.AddCell(new Phrase(r[2].ToString(), font5));&#xD;&#xA;                table.AddCell(new Phrase(r[3].ToString(), font5));&#xD;&#xA;            }          &#xD;&#xA;        }  document.Add(table);&#xD;&#xA;            document.Close();&#xD;&#xA;    }"
1929191586245541784,38,5,"    class OrderItem < ActiveRecord::Base&#xD;&#xA;      belongs_to :product&#xD;&#xA;       belongs_to :order&#xD;&#xA;    &#xD;&#xA;      validates :quantity, presence: true, numericality: { only_integer: true, greater_than: 0 }&#xD;&#xA;      validate :product_present&#xD;&#xA;      validate :order_present&#xD;&#xA;    &#xD;&#xA;      before_save :finalize&#xD;&#xA;    &#xD;&#xA;      def unit_price&#xD;&#xA;        if persisted?&#xD;&#xA;          self[:unit_price]&#xD;&#xA;        else&#xD;&#xA;           product.price&#xD;&#xA;       end&#xD;&#xA;      end&#xD;&#xA;      def total_price&#xD;&#xA;        unit_price * quantity&#xD;&#xA;      end&#xD;&#xA;    &#xD;&#xA;    private&#xD;&#xA;      def product_present&#xD;&#xA;        if product.nil?&#xD;&#xA;          errors.add(:product, ""is not valid or is not active."")&#xD;&#xA;        end&#xD;&#xA;      end&#xD;&#xA;      def order_present&#xD;&#xA;        if order.nil?&#xD;&#xA;          errors.add(:order, ""is not a valid order."")&#xD;&#xA;        end&#xD;&#xA;      end&#xD;&#xA;    &#xD;&#xA;      def finalize&#xD;&#xA;         self[:unit_price] = unit_price&#xD;&#xA;        self[:total_price] = quantity * self[:unit_price]&#xD;&#xA;      end&#xD;&#xA;    end"
2151682437532262659,39,5,"    public class EnumTest {&#xD;&#xA;    	Day day;&#xD;&#xA;    	&#xD;&#xA;    	public EnumTest(Day day) {&#xD;&#xA;    		this.day = day;&#xD;&#xA;    	}&#xD;&#xA;    	&#xD;&#xA;    	public void tellItLikeItIs() {&#xD;&#xA;    		switch (day) {&#xD;&#xA;    			case MONDAY: System.out.println(""Mondays are bad."");&#xD;&#xA;    					     break;&#xD;&#xA;    					&#xD;&#xA;    			case FRIDAY: System.out.println(""Fridays are better."");&#xD;&#xA;    					     break;&#xD;&#xA;    					     &#xD;&#xA;    			case SATURDAY:&#xD;&#xA;    			case SUNDAY: System.out.println(""Weekends are best."");&#xD;&#xA;    					     break;&#xD;&#xA;    					     &#xD;&#xA;    			default:	 System.out.println(""Midweek days are so-so."");&#xD;&#xA;    					     break;&#xD;&#xA;    		}&#xD;&#xA;    	}&#xD;&#xA;    	&#xD;&#xA;    	public static void main(String[] args) {&#xD;&#xA;    		EnumTest firstDay = new EnumTest(Day.MONDAY);&#xD;&#xA;    		firstDay.tellItLikeItIs();&#xD;&#xA;    		EnumTest thirdDay = new EnumTest(Day.WEDNESDAY);&#xD;&#xA;    		thirdDay.tellItLikeItIs();&#xD;&#xA;    		EnumTest fifthDay = new EnumTest(Day.FRIDAY);&#xD;&#xA;    		fifthDay.tellItLikeItIs();&#xD;&#xA;    		EnumTest sixthDay = new EnumTest(Day.SATURDAY);&#xD;&#xA;    		sixthDay.tellItLikeItIs();&#xD;&#xA;    		EnumTest seventhDay = new EnumTest(Day.SUNDAY);&#xD;&#xA;    		seventhDay.tellItLikeItIs();&#xD;&#xA;    		&#xD;&#xA;    		&#xD;&#xA;    	}&#xD;&#xA;    }"
7281934582951099957,39,5,"    NSString * const NotificationCategoryIdent  = @""ACTIONABLE"";&#xD;&#xA;    NSString * const NotificationActionOneIdent = @""ACTION_ONE"";&#xD;&#xA;    NSString * const NotificationActionTwoIdent = @""ACTION_TWO"";&#xD;&#xA;     &#xD;&#xA;    - (void)registerForNotification {&#xD;&#xA;     &#xD;&#xA;        UIMutableUserNotificationAction *action1;&#xD;&#xA;        action1 = [[UIMutableUserNotificationAction alloc] init];&#xD;&#xA;        [action1 setActivationMode:UIUserNotificationActivationModeBackground];&#xD;&#xA;        [action1 setTitle:@""Action 1""];&#xD;&#xA;        [action1 setIdentifier:NotificationActionOneIdent];&#xD;&#xA;        [action1 setDestructive:NO];&#xD;&#xA;        [action1 setAuthenticationRequired:NO];&#xD;&#xA;     &#xD;&#xA;        UIMutableUserNotificationAction *action2;&#xD;&#xA;        action2 = [[UIMutableUserNotificationAction alloc] init];&#xD;&#xA;        [action2 setActivationMode:UIUserNotificationActivationModeBackground];&#xD;&#xA;        [action2 setTitle:@""Action 2""];&#xD;&#xA;        [action2 setIdentifier:NotificationActionTwoIdent];&#xD;&#xA;        [action2 setDestructive:NO];&#xD;&#xA;        [action2 setAuthenticationRequired:NO];&#xD;&#xA;     &#xD;&#xA;        UIMutableUserNotificationCategory *actionCategory;&#xD;&#xA;        actionCategory = [[UIMutableUserNotificationCategory alloc] init];&#xD;&#xA;        [actionCategory setIdentifier:NotificationCategoryIdent];&#xD;&#xA;        [actionCategory setActions:@[action1, action2] &#xD;&#xA;                        forContext:UIUserNotificationActionContextDefault];&#xD;&#xA;     &#xD;&#xA;        NSSet *categories = [NSSet setWithObject:actionCategory];&#xD;&#xA;        UIUserNotificationType types = (UIUserNotificationTypeAlert|&#xD;&#xA;                                        UIUserNotificationTypeSound|&#xD;&#xA;                                        UIUserNotificationTypeBadge);&#xD;&#xA;     &#xD;&#xA;        UIUserNotificationSettings *settings;&#xD;&#xA;        settings = [UIUserNotificationSettings settingsForTypes:types&#xD;&#xA;                                                     categories:categories];&#xD;&#xA;     &#xD;&#xA;        [[UIApplication sharedApplication] registerUserNotificationSettings:settings];&#xD;&#xA;    }"
7531840245047953529,39,5,        <atom:entry xmlns:atom='http://www.w3.org/2005/Atom'&#xD;&#xA;        xmlns:gd='http://schemas.google.com/g/2005'>&#xD;&#xA;      <atom:category scheme='http://schemas.google.com/g/2005#kind'&#xD;&#xA;        term='http://schemas.google.com/contact/2008#contact'/>&#xD;&#xA;      <gd:name>&#xD;&#xA;         <gd:givenName>Elizabeth</gd:givenName>&#xD;&#xA;         <gd:familyName>Bennet</gd:familyName>&#xD;&#xA;         <gd:fullName>Elizabeth Bennet</gd:fullName>&#xD;&#xA;      </gd:name>&#xD;&#xA;      <atom:content type='text'>Notes</atom:content>&#xD;&#xA;      <gd:email rel='http://schemas.google.com/g/2005#work'&#xD;&#xA;        primary='true'&#xD;&#xA;        address='liz@gmail.com' displayName='E. Bennet'/>&#xD;&#xA;      <gd:email rel='http://schemas.google.com/g/2005#home'&#xD;&#xA;        address='liz@example.org'/>&#xD;&#xA;      <gd:phoneNumber rel='http://schemas.google.com/g/2005#work'&#xD;&#xA;        primary='true'>&#xD;&#xA;        (206)555-1212&#xD;&#xA;      </gd:phoneNumber>&#xD;&#xA;      <gd:phoneNumber rel='http://schemas.google.com/g/2005#home'>&#xD;&#xA;        (206)555-1213&#xD;&#xA;      </gd:phoneNumber>&#xD;&#xA;      <gd:im address='liz@gmail.com'&#xD;&#xA;        protocol='http://schemas.google.com/g/2005#GOOGLE_TALK'&#xD;&#xA;        primary='true'&#xD;&#xA;        rel='http://schemas.google.com/g/2005#home'/>&#xD;&#xA;      <gd:structuredPostalAddress&#xD;&#xA;          rel='http://schemas.google.com/g/2005#work'&#xD;&#xA;          primary='true'>&#xD;&#xA;        <gd:city>Mountain View</gd:city>&#xD;&#xA;        <gd:street>1600 Amphitheatre Pkwy</gd:street>&#xD;&#xA;        <gd:region>CA</gd:region>&#xD;&#xA;        <gd:postcode>94043</gd:postcode>&#xD;&#xA;        <gd:country>United States</gd:country>&#xD;&#xA;        <gd:formattedAddress>&#xD;&#xA;          1600 Amphitheatre Pkwy Mountain View&#xD;&#xA;        </gd:formattedAddress>&#xD;&#xA;      </gd:structuredPostalAddress>&#xD;&#xA;    </atom:entry>
891035238737302889,39,5,"    /**&#xD;&#xA;     * System configuration for Angular 2 samples&#xD;&#xA;     * Adjust as necessary for your application needs.&#xD;&#xA;     */&#xD;&#xA;    (function(global) {&#xD;&#xA;        // map tells the System loader where to look for things&#xD;&#xA;        var map = {&#xD;&#xA;            'app':                        'app', // 'dist',&#xD;&#xA;            '@angular':                   'node_modules/@angular',&#xD;&#xA;            'angular2-in-memory-web-api': 'node_modules/angular2-in-memory-web-api',&#xD;&#xA;            'rxjs':                       'node_modules/rxjs'&#xD;&#xA;        };&#xD;&#xA;        // packages tells the System loader how to load when no filename and/or no extension&#xD;&#xA;        var packages = {&#xD;&#xA;            'app':                        { main: 'main.js',  defaultExtension: 'js' },&#xD;&#xA;            'rxjs':                       { defaultExtension: 'js' },&#xD;&#xA;            'angular2-in-memory-web-api': { defaultExtension: 'js' }&#xD;&#xA;        };&#xD;&#xA;        var ngPackageNames = [&#xD;&#xA;            'common',&#xD;&#xA;            'compiler',&#xD;&#xA;            'core',&#xD;&#xA;            'http',&#xD;&#xA;            'platform-browser',&#xD;&#xA;            'platform-browser-dynamic',&#xD;&#xA;            'router',&#xD;&#xA;            'router-deprecated',&#xD;&#xA;            'upgrade'&#xD;&#xA;        ];&#xD;&#xA;        // Add package entries for angular packages&#xD;&#xA;        ngPackageNames.forEach(function(pkgName) {&#xD;&#xA;            packages['@angular/'+pkgName] = { main: pkgName + '.umd.js', defaultExtension: 'js' };&#xD;&#xA;        });&#xD;&#xA;        var config = {&#xD;&#xA;            map: map,&#xD;&#xA;            packages: packages&#xD;&#xA;        }&#xD;&#xA;        System.config(config);&#xD;&#xA;    })(this);"
-6152504803135930499,39,5,"    public class ViewPagerAdapter extends FragmentStatePagerAdapter {&#xD;&#xA;	CharSequence Titles[]; // This will Store the Titles of the Tabs which are&#xD;&#xA;							// Going to be passed when ViewPagerAdapter is&#xD;&#xA;							// created&#xD;&#xA;	int NumbOfTabs; // Store the number of tabs, this will also be passed when&#xD;&#xA;					// the ViewPagerAdapter is created&#xD;&#xA;	// Build a Constructor and assign the passed Values to appropriate values in&#xD;&#xA;	// the class&#xD;&#xA;	public ViewPagerAdapter(FragmentManager fm, CharSequence mTitles[],&#xD;&#xA;			int mNumbOfTabsumb) {&#xD;&#xA;		super(fm);&#xD;&#xA;		this.Titles = mTitles;&#xD;&#xA;		this.NumbOfTabs = mNumbOfTabsumb;&#xD;&#xA;	}&#xD;&#xA;	// This method return the fragment for the every position in the View Pager&#xD;&#xA;	@Override&#xD;&#xA;	public Fragment getItem(int position) {&#xD;&#xA;		if (position == 0) // if the position is 0 we are returning the First&#xD;&#xA;							// tab&#xD;&#xA;		{&#xD;&#xA;			Tab1 tab1 = new Tab1();&#xD;&#xA;			return tab1;&#xD;&#xA;		} else // As we are having 2 tabs if the position is now 0 it must be 1&#xD;&#xA;				// so we are returning second tab&#xD;&#xA;		{&#xD;&#xA;			Tab2 tab2 = new Tab2();&#xD;&#xA;			return tab2;&#xD;&#xA;		}&#xD;&#xA;	}&#xD;&#xA;	// This method return the titles for the Tabs in the Tab Strip&#xD;&#xA;	@Override&#xD;&#xA;	public CharSequence getPageTitle(int position) {&#xD;&#xA;		return Titles[position];&#xD;&#xA;	}&#xD;&#xA;	// This method return the Number of tabs for the tabs Strip&#xD;&#xA;	@Override&#xD;&#xA;	public int getCount() {&#xD;&#xA;		return NumbOfTabs;&#xD;&#xA;	}"
7584570088403637602,39,5,"    import tweepy&#xD;&#xA;    import time&#xD;&#xA;    import os&#xD;&#xA;    import json&#xD;&#xA;    import simplejson&#xD;&#xA;    search_term = 'word1'&#xD;&#xA;    search_term2= 'word2'&#xD;&#xA;    search_term3='word3'&#xD;&#xA;    lat = ""xxxx""&#xD;&#xA;    lon = ""xxxx""&#xD;&#xA;    radius = ""xxxx""&#xD;&#xA;    location = ""%s,%s,%s"" % (lat, lon, radius)&#xD;&#xA;    API_key = ""xxxx""&#xD;&#xA;    API_secret = ""xxxx""&#xD;&#xA;    Access_token = ""xxxx""&#xD;&#xA;    Access_token_secret = ""xxxx""&#xD;&#xA;    auth = tweepy.OAuthHandler(API_key, API_secret)&#xD;&#xA;    auth.set_access_token(Access_token, Access_token_secret)&#xD;&#xA;    api = tweepy.API(auth)&#xD;&#xA;    c=tweepy.Cursor(api.search,&#xD;&#xA;                     q=""{}+OR+{}"".format(search_term, search_term2, search_term3),&#xD;&#xA;                    rpp=1000,&#xD;&#xA;                    geocode=location,&#xD;&#xA;                    include_entities=True)&#xD;&#xA;    data = {}&#xD;&#xA;    i = 1&#xD;&#xA;    for tweet in c.items():&#xD;&#xA;        data['text'] = tweet.text&#xD;&#xA;        print(i, "":"", data)&#xD;&#xA;        i += 1&#xD;&#xA;        time.sleep(1)&#xD;&#xA;    wfile = open(os.getcwd()+""/workk2.txt"", mode='w')   &#xD;&#xA;    data = {}   &#xD;&#xA;    i = 0       &#xD;&#xA;    for tweet in c.items():&#xD;&#xA;        data['text'] = tweet.text   &#xD;&#xA;        wfile.write(data['text']+'\n')  &#xD;&#xA;        i += 1&#xD;&#xA;    wfile.close()"
4429860135061719689,39,5,    body {&#xD;&#xA;        padding: 0px;    &#xD;&#xA;    }&#xD;&#xA;    #container {&#xD;&#xA;        position: absolute;&#xD;&#xA;        margin: 0px;&#xD;&#xA;        padding: 0px;&#xD;&#xA;        width: 100%;&#xD;&#xA;        height: 100%;&#xD;&#xA;        overflow: hidden;  &#xD;&#xA;    }&#xD;&#xA;    .box {&#xD;&#xA;        position: absolute;&#xD;&#xA;        width: 50%;&#xD;&#xA;        height: 300px;&#xD;&#xA;        line-height: 300px;&#xD;&#xA;        font-size: 50px;&#xD;&#xA;        text-align: center;&#xD;&#xA;        border: 2px solid black;&#xD;&#xA;        left: 150%;&#xD;&#xA;        top: 100px;&#xD;&#xA;        margin-left: -25%;&#xD;&#xA;    }&#xD;&#xA;    #box1 {&#xD;&#xA;        background-color: green;&#xD;&#xA;        left: 50%;&#xD;&#xA;    }&#xD;&#xA;    #box2 {&#xD;&#xA;        background-color: yellow;&#xD;&#xA;    }&#xD;&#xA;    #box3 {&#xD;&#xA;        background-color: red;&#xD;&#xA;    }&#xD;&#xA;    #box4 {&#xD;&#xA;        background-color: orange;&#xD;&#xA;    }&#xD;&#xA;    #box5 {&#xD;&#xA;        background-color: blue;&#xD;&#xA;    }
-242627579795648446,39,5,"    <script src=""https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js""></script>&#xD;&#xA;    <div id=""countdown"">&#xD;&#xA;            <div class=""countdown-container"">&#xD;&#xA;                <div class=""contents"">&#xD;&#xA;                    <div class=""secs"">&#xD;&#xA;                        00&#xD;&#xA;                    </div>&#xD;&#xA;                    <span>Seconds</span>&#xD;&#xA;                </div>&#xD;&#xA;                <canvas id=""myCanvas"" width=""250"" height=""250""></canvas>&#xD;&#xA;            </div>&#xD;&#xA;            <div class=""countdown-container"">&#xD;&#xA;                <div class=""contents"">&#xD;&#xA;                    <div class=""mins"">&#xD;&#xA;                        00&#xD;&#xA;                    </div>&#xD;&#xA;                    <span>Minutes</span>&#xD;&#xA;                </div>&#xD;&#xA;                <canvas id=""myCanvas1"" width=""250"" height=""250""></canvas>&#xD;&#xA;            </div>&#xD;&#xA;            <div class=""countdown-container"">&#xD;&#xA;                <div class=""contents"">&#xD;&#xA;                    <div class=""hours"">&#xD;&#xA;                        00&#xD;&#xA;                    </div>&#xD;&#xA;                    <span>Hours</span>&#xD;&#xA;                </div>&#xD;&#xA;                <canvas id=""myCanvas2"" width=""250"" height=""250""></canvas>&#xD;&#xA;            </div>&#xD;&#xA;            <div class=""countdown-container"">&#xD;&#xA;                <div class=""contents"">&#xD;&#xA;                    <div class=""days"">&#xD;&#xA;                        00&#xD;&#xA;                    </div>&#xD;&#xA;                    <span>Days</span>&#xD;&#xA;                </div>&#xD;&#xA;                <canvas id=""myCanvas3"" width=""250"" height=""250""></canvas>&#xD;&#xA;            </div>&#xD;&#xA;        </div>"
-5748649697201497918,39,5,"    service: stage&#xD;&#xA;    runtime: python27&#xD;&#xA;    api_version: 1&#xD;&#xA;    threadsafe: true&#xD;&#xA;    &#xD;&#xA;    skip_files:&#xD;&#xA;    - ^(?!dist)  # Skip any files not in the dist folder&#xD;&#xA;    &#xD;&#xA;    handlers:&#xD;&#xA;    # Routing for bundles to serve directly&#xD;&#xA;    - url: /((?:inline|main|polyfills|styles|vendor)\.[a-z0-9]+\.bundle\.js)&#xD;&#xA;      secure: always&#xD;&#xA;      redirect_http_response_code: 301&#xD;&#xA;      static_files: dist/\1&#xD;&#xA;      upload: dist/.*&#xD;&#xA;    &#xD;&#xA;    # Routing for a prod styles.bundle.css to serve directly&#xD;&#xA;    - url: /(styles\.[a-z0-9]+\.bundle\.css)&#xD;&#xA;      secure: always&#xD;&#xA;      redirect_http_response_code: 301&#xD;&#xA;      static_files: dist/\1&#xD;&#xA;      upload: dist/.*&#xD;&#xA;    &#xD;&#xA;    # Routing for typedoc, assets and favicon.ico to serve directly&#xD;&#xA;    - url: /((?:assets|docs)/.*|favicon\.ico)&#xD;&#xA;      secure: always&#xD;&#xA;      redirect_http_response_code: 301&#xD;&#xA;      static_files: dist/\1&#xD;&#xA;      upload: dist/.*&#xD;&#xA;    &#xD;&#xA;    # Any other requests are routed to index.html for angular to handle so we don't need hash URLs&#xD;&#xA;    - url: /.*&#xD;&#xA;      secure: always&#xD;&#xA;      redirect_http_response_code: 301&#xD;&#xA;      static_files: dist/index.html&#xD;&#xA;      upload: dist/index\.html&#xD;&#xA;      http_headers:&#xD;&#xA;          Strict-Transport-Security: max-age=31536000; includeSubDomains&#xD;&#xA;          X-Frame-Options: DENY"
-6116276045183105976,40,5,"    <?xml version=""1.0"" encoding=""utf-8""?>&#xD;&#xA;    <selector xmlns:android=""http://schemas.android.com/apk/res/android"">&#xD;&#xA;    &#xD;&#xA;    <!-- STATES WHEN BUTTON IS NOT PRESSED -->&#xD;&#xA;    &#xD;&#xA;        <!-- Non focused states -->&#xD;&#xA;        <item android:state_focused=""false"" android:state_selected=""false""&#xD;&#xA;              android:state_pressed=""false""&#xD;&#xA;              android:drawable=""@drawable/tab_unselected"" />&#xD;&#xA;        <item android:state_focused=""false"" android:state_selected=""true""&#xD;&#xA;              android:state_pressed=""false""&#xD;&#xA;              android:drawable=""@drawable/tab_selected"" />&#xD;&#xA;    &#xD;&#xA;        <!-- Focused states (such as when focused with a d-pad or mouse hover) -->&#xD;&#xA;        <item android:state_focused=""true"" android:state_selected=""false""&#xD;&#xA;              android:state_pressed=""false""&#xD;&#xA;              android:drawable=""@drawable/tab_unselected_focused"" />&#xD;&#xA;        <item android:state_focused=""true"" android:state_selected=""true""&#xD;&#xA;              android:state_pressed=""false""&#xD;&#xA;              android:drawable=""@drawable/tab_selected_focused"" />&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    <!-- STATES WHEN BUTTON IS PRESSED -->&#xD;&#xA;    &#xD;&#xA;        <!-- Non focused states -->&#xD;&#xA;        <item android:state_focused=""false"" android:state_selected=""false""&#xD;&#xA;              android:state_pressed=""true""&#xD;&#xA;              android:drawable=""@drawable/tab_unselected_pressed"" />&#xD;&#xA;        <item android:state_focused=""false"" android:state_selected=""true""&#xD;&#xA;            android:state_pressed=""true""&#xD;&#xA;            android:drawable=""@drawable/tab_selected_pressed"" />&#xD;&#xA;    &#xD;&#xA;        <!-- Focused states (such as when focused with a d-pad or mouse hover) -->&#xD;&#xA;        <item android:state_focused=""true"" android:state_selected=""false""&#xD;&#xA;              android:state_pressed=""true""&#xD;&#xA;              android:drawable=""@drawable/tab_unselected_pressed"" />&#xD;&#xA;        <item android:state_focused=""true"" android:state_selected=""true""&#xD;&#xA;              android:state_pressed=""true""&#xD;&#xA;              android:drawable=""@drawable/tab_selected_pressed"" />&#xD;&#xA;    </selector>"
8357609149187929968,40,5,"        // Create a UIImage from sample buffer data&#xD;&#xA;    - (UIImage *) imageFromSampleBuffer:(CMSampleBufferRef) sampleBuffer&#xD;&#xA;    {&#xD;&#xA;        // Get a CMSampleBuffer's Core Video image buffer for the media data&#xD;&#xA;        CVImageBufferRef imageBuffer = CMSampleBufferGetImageBuffer(sampleBuffer);&#xD;&#xA;        // Lock the base address of the pixel buffer&#xD;&#xA;        CVPixelBufferLockBaseAddress(imageBuffer, 0);&#xD;&#xA;        &#xD;&#xA;        // Get the number of bytes per row for the pixel buffer&#xD;&#xA;        void *baseAddress = CVPixelBufferGetBaseAddress(imageBuffer);&#xD;&#xA;        &#xD;&#xA;        // Get the number of bytes per row for the pixel buffer&#xD;&#xA;        size_t bytesPerRow = CVPixelBufferGetBytesPerRow(imageBuffer);&#xD;&#xA;        // Get the pixel buffer width and height&#xD;&#xA;        size_t width = CVPixelBufferGetWidth(imageBuffer);&#xD;&#xA;        size_t height = CVPixelBufferGetHeight(imageBuffer);&#xD;&#xA;        &#xD;&#xA;        // Create a device-dependent RGB color space&#xD;&#xA;        CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();&#xD;&#xA;        &#xD;&#xA;        // Create a bitmap graphics context with the sample buffer data&#xD;&#xA;        CGContextRef context = CGBitmapContextCreate(baseAddress, width, height, 8,&#xD;&#xA;                                                     bytesPerRow, colorSpace, kCGBitmapByteOrder32Little | kCGImageAlphaPremultipliedFirst);&#xD;&#xA;        // Create a Quartz image from the pixel data in the bitmap graphics context&#xD;&#xA;        CGImageRef quartzImage = CGBitmapContextCreateImage(context);&#xD;&#xA;        // Unlock the pixel buffer&#xD;&#xA;        CVPixelBufferUnlockBaseAddress(imageBuffer,0);&#xD;&#xA;        &#xD;&#xA;        // Free up the context and color space&#xD;&#xA;        CGContextRelease(context);&#xD;&#xA;        CGColorSpaceRelease(colorSpace);&#xD;&#xA;        &#xD;&#xA;        // Create an image object from the Quartz image&#xD;&#xA;        UIImage *image = [UIImage imageWithCGImage:quartzImage];&#xD;&#xA;        &#xD;&#xA;        // Release the Quartz image&#xD;&#xA;        CGImageRelease(quartzImage);&#xD;&#xA;        &#xD;&#xA;        return image;&#xD;&#xA;        }"
6911894444565405339,40,5,"    @import url(//netdna.bootstrapcdn.com/font-awesome/3.2.1/css/font-awesome.css);&#xD;&#xA;    &#xD;&#xA;    fieldset, label { margin: 0; padding: 0; }&#xD;&#xA;    body{ margin: 20px; }&#xD;&#xA;    h1 { font-size: 1.5em; margin: 10px; }&#xD;&#xA;    /****** Style Star Rating Widget *****/&#xD;&#xA;    .rating { &#xD;&#xA;      border: none;&#xD;&#xA;      float: left;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .rating > input { display: none; } &#xD;&#xA;    .rating > label:before { &#xD;&#xA;      margin: 5px;&#xD;&#xA;      font-size: 1.25em;&#xD;&#xA;      font-family: FontAwesome;&#xD;&#xA;      display: inline-block;&#xD;&#xA;      content: ""\f005"";&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .rating > .half:before { &#xD;&#xA;      content: ""\f089"";&#xD;&#xA;      position: absolute;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .rating > label { &#xD;&#xA;      color: #ddd; &#xD;&#xA;     float: right; &#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    /***** CSS Magic to Highlight Stars on Hover *****/&#xD;&#xA;    &#xD;&#xA;    .rating > input:checked ~ label, /* show gold star when clicked */&#xD;&#xA;    .rating:not(:checked) > label:hover, /* hover current star */&#xD;&#xA;    .rating:not(:checked) > label:hover ~ label { color: #FFD700;  } /* hover previous stars in list */&#xD;&#xA;    &#xD;&#xA;    .rating > input:checked + label:hover, /* hover current star when changing rating */&#xD;&#xA;    .rating > input:checked ~ label:hover,&#xD;&#xA;    .rating > label:hover ~ input:checked ~ label, /* lighten current selection */&#xD;&#xA;    .rating > input:checked ~ label:hover ~ label { color: #FFED85;  } "
826442306771237358,40,5,"     ;(function($) {&#xD;&#xA;       $.fn.fixMe = function() {&#xD;&#xA;      return this.each(function() {&#xD;&#xA;         var $this = $(this),&#xD;&#xA;            $t_fixed;&#xD;&#xA;         function init() {&#xD;&#xA;            $this.wrap('<div class=""container"" />');&#xD;&#xA;            $t_fixed = $this.clone();&#xD;&#xA;            $t_fixed.find(""tbody"").remove().end().addClass(""fixed"").insertBefore($this);&#xD;&#xA;            resizeFixed();&#xD;&#xA;         }&#xD;&#xA;         function resizeFixed() {&#xD;&#xA;            $t_fixed.find(""th"").each(function(index) {&#xD;&#xA;               $(this).css(""width"",$this.find(""th"").eq(index).outerWidth()+""px"");&#xD;&#xA;            });&#xD;&#xA;         }&#xD;&#xA;         function scrollFixed() {&#xD;&#xA;            var offset = $(this).scrollTop(),&#xD;&#xA;            tableOffsetTop = $this.offset().top,&#xD;&#xA;            tableOffsetBottom = tableOffsetTop + $this.height() - $this.find(""thead"").height();&#xD;&#xA;            if(offset < tableOffsetTop || offset > tableOffsetBottom)&#xD;&#xA;               $t_fixed.hide();&#xD;&#xA;            else if(offset >= tableOffsetTop && offset <= tableOffsetBottom && $t_fixed.is("":hidden""))&#xD;&#xA;               $t_fixed.show();&#xD;&#xA;         }&#xD;&#xA;         $(window).resize(resizeFixed);&#xD;&#xA;         $(window).scroll(scrollFixed);&#xD;&#xA;         init();&#xD;&#xA;      });&#xD;&#xA;         };})(jQuery);&#xD;&#xA;      &#xD;&#xA;    &#xD;&#xA;    $(document).ready(function(){&#xD;&#xA;       $(""table"").fixMe();&#xD;&#xA;       $("".up"").click(function() {&#xD;&#xA;           $('html, body').animate({&#xD;&#xA;           scrollTop: 0&#xD;&#xA;       }, 2000);&#xD;&#xA;       });&#xD;&#xA;    });"
6186809200080226727,40,5,"      /**&#xD;&#xA;       * Checks if the device is rooted.&#xD;&#xA;       *&#xD;&#xA;       * @return <code>true</code> if the device is rooted, <code>false</code> otherwise.&#xD;&#xA;       */&#xD;&#xA;      public static boolean isRooted() {&#xD;&#xA;    &#xD;&#xA;        // get from build info&#xD;&#xA;        String buildTags = android.os.Build.TAGS;&#xD;&#xA;        if (buildTags != null && buildTags.contains(""test-keys"")) {&#xD;&#xA;          return true;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // check if /system/app/Superuser.apk is present&#xD;&#xA;        try {&#xD;&#xA;          File file = new File(""/system/app/Superuser.apk"");&#xD;&#xA;          if (file.exists()) {&#xD;&#xA;            return true;&#xD;&#xA;          }&#xD;&#xA;        } catch (Exception e1) {&#xD;&#xA;          // ignore&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // try executing commands&#xD;&#xA;        return canExecuteCommand(""/system/xbin/which su"")&#xD;&#xA;            || canExecuteCommand(""/system/bin/which su"") || canExecuteCommand(""which su"");&#xD;&#xA;      }&#xD;&#xA;    &#xD;&#xA;      // executes a command on the system&#xD;&#xA;      private static boolean canExecuteCommand(String command) {&#xD;&#xA;        boolean executedSuccesfully;&#xD;&#xA;        try {&#xD;&#xA;          Runtime.getRuntime().exec(command);&#xD;&#xA;          executedSuccesfully = true;&#xD;&#xA;        } catch (Exception e) {&#xD;&#xA;          executedSuccesfully = false;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        return executedSuccesfully;&#xD;&#xA;      }"
8369118428498911820,40,5,"    var app = angular.module('Calc', []);&#xD;&#xA;     var inputQuantity = [];&#xD;&#xA;        $(function() {&#xD;&#xA;          $("".form-control"").each(function(i) {&#xD;&#xA;            inputQuantity[i]=this.defaultValue;&#xD;&#xA;             $(this).data(""idx"",i); // save this field's index to access later&#xD;&#xA;          });&#xD;&#xA;          $("".form-control"").on(""keyup"", function (e) {&#xD;&#xA;            var $field = $(this),&#xD;&#xA;                val=this.value,&#xD;&#xA;                $thisIndex=parseInt($field.data(""idx""),10); // retrieve the index&#xD;&#xA;    //        window.console && console.log($field.is("":invalid""));&#xD;&#xA;              //  $field.is("":invalid"") is for Safari, it must be the last to not error in IE8&#xD;&#xA;            if (this.validity && this.validity.badInput || isNaN(val) || $field.is("":invalid"") ) {&#xD;&#xA;                this.value = inputQuantity[$thisIndex];&#xD;&#xA;                return;&#xD;&#xA;            } &#xD;&#xA;            if (val.length > Number($field.attr(""maxlength""))) {&#xD;&#xA;              val=val.slice(0, 5);&#xD;&#xA;              $field.val(val);&#xD;&#xA;            }&#xD;&#xA;            inputQuantity[$thisIndex]=val;&#xD;&#xA;          });      &#xD;&#xA;        });&#xD;&#xA;    app.controller('Calc_Ctrl', function ($scope, $http) {&#xD;&#xA;         $scope.choices = [{id : 'choice1', l2 : 0, b2 : 0}];&#xD;&#xA;         $scope.areas = [{id : 'choice2', total : 0}];&#xD;&#xA;         $scope.addNewChoice = function () {&#xD;&#xA;              var newItemNo = $scope.choices.length + 1;&#xD;&#xA;              $scope.choices.push({&#xD;&#xA;                   'id' : 'choice' + newItemNo, l2 : 0, b2 : 0&#xD;&#xA;              });&#xD;&#xA;         };&#xD;&#xA;         $scope.removeChoice = function () {&#xD;&#xA;              var lastItem = $scope.choices.length - 1;&#xD;&#xA;              if (lastItem !== 0) {&#xD;&#xA;                   $scope.choices.splice(lastItem);&#xD;&#xA;              }&#xD;&#xA;         };&#xD;&#xA;    });"
-7245958965170765695,40,5,"    /**&#xD;&#xA;     * System configuration for Angular samples&#xD;&#xA;     * Adjust as necessary for your application needs.&#xD;&#xA;     */&#xD;&#xA;    (function (global) {&#xD;&#xA;        System.config({&#xD;&#xA;            paths: {&#xD;&#xA;                // paths serve as alias&#xD;&#xA;                'npm:': 'node_modules/'&#xD;&#xA;            },&#xD;&#xA;            // map tells the System loader where to look for things&#xD;&#xA;            map: {&#xD;&#xA;                // our app is within the app folder&#xD;&#xA;                app: 'app',&#xD;&#xA;    &#xD;&#xA;                // angular bundles&#xD;&#xA;                '@angular/core': 'npm:@angular/core/bundles/core.umd.js',&#xD;&#xA;                '@angular/common': 'npm:@angular/common/bundles/common.umd.js',&#xD;&#xA;                '@angular/compiler': 'npm:@angular/compiler/bundles/compiler.umd.js',&#xD;&#xA;                '@angular/platform-browser': 'npm:@angular/platform-browser/bundles/platform-browser.umd.js',&#xD;&#xA;                '@angular/platform-browser-dynamic': 'npm:@angular/platform-browser-dynamic/bundles/platform-browser-dynamic.umd.js',&#xD;&#xA;                '@angular/http': 'npm:@angular/http/bundles/http.umd.js',&#xD;&#xA;                '@angular/router': 'npm:@angular/router/bundles/router.umd.js',&#xD;&#xA;                '@angular/forms': 'npm:@angular/forms/bundles/forms.umd.js',&#xD;&#xA;    &#xD;&#xA;                // other libraries&#xD;&#xA;                'rxjs': 'npm:rxjs',&#xD;&#xA;                'angular-in-memory-web-api': 'npm:angular-in-memory-web-api/bundles/in-memory-web-api.umd.js'&#xD;&#xA;            },&#xD;&#xA;            // packages tells the System loader how to load when no filename and/or no extension&#xD;&#xA;            packages: {&#xD;&#xA;                app: {&#xD;&#xA;                    defaultExtension: 'js'&#xD;&#xA;                },&#xD;&#xA;                rxjs: {&#xD;&#xA;                    defaultExtension: 'js'&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        });&#xD;&#xA;    })(this);"
-5681981297447140465,40,5,"    public Bitmap GenerateScreenshot(string url)&#xD;&#xA;    {&#xD;&#xA;        // This method gets a screenshot of the webpage&#xD;&#xA;        // rendered at its full size (height and width)&#xD;&#xA;        return GenerateScreenshot(url, -1, -1);&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    public Bitmap GenerateScreenshot(string url, int width, int height)&#xD;&#xA;    {&#xD;&#xA;        // Load the webpage into a WebBrowser control&#xD;&#xA;        WebBrowser wb = new WebBrowser();&#xD;&#xA;        wb.ScrollBarsEnabled = false;&#xD;&#xA;        wb.ScriptErrorsSuppressed = true;&#xD;&#xA;        wb.Navigate(url);&#xD;&#xA;        while (wb.ReadyState != WebBrowserReadyState.Complete) { Application.DoEvents(); }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        // Set the size of the WebBrowser control&#xD;&#xA;        wb.Width = width;&#xD;&#xA;        wb.Height = height;&#xD;&#xA;    &#xD;&#xA;        if (width == -1)&#xD;&#xA;        {&#xD;&#xA;            // Take Screenshot of the web pages full width&#xD;&#xA;            wb.Width = wb.Document.Body.ScrollRectangle.Width;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        if (height == -1)&#xD;&#xA;        {&#xD;&#xA;            // Take Screenshot of the web pages full height&#xD;&#xA;            wb.Height = wb.Document.Body.ScrollRectangle.Height;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // Get a Bitmap representation of the webpage as it's rendered in the WebBrowser control&#xD;&#xA;        Bitmap bitmap = new Bitmap(wb.Width, wb.Height);&#xD;&#xA;        wb.DrawToBitmap(bitmap, new Rectangle(0, 0, wb.Width, wb.Height));&#xD;&#xA;        wb.Dispose();&#xD;&#xA;    &#xD;&#xA;        return bitmap;&#xD;&#xA;    }"
6746323806278341056,40,5,"    public String getDistance(final double lat1, final double lon1, final double lat2, final double lon2){&#xD;&#xA;        String parsedDistance;&#xD;&#xA;        String response;&#xD;&#xA;            Thread thread=new Thread(new Runnable() {&#xD;&#xA;                @Override&#xD;&#xA;                public void run() {&#xD;&#xA;                    try {&#xD;&#xA;                        &#xD;&#xA;                        URL url = new URL(""http://maps.googleapis.com/maps/api/directions/json?origin="" + lat1 + "","" + lon1 + ""&destination="" + lat2 + "","" + lon2 + ""&sensor=false&units=metric&mode=driving"");&#xD;&#xA;                        final HttpURLConnection conn = (HttpURLConnection) url.openConnection();&#xD;&#xA;                        conn.setRequestMethod(""POST"");&#xD;&#xA;                        InputStream in = new BufferedInputStream(conn.getInputStream());&#xD;&#xA;                        response = org.apache.commons.io.IOUtils.toString(in, ""UTF-8"");&#xD;&#xA;                        &#xD;&#xA;                        JSONObject jsonObject = new JSONObject(response);&#xD;&#xA;                        JSONArray array = jsonObject.getJSONArray(""routes"");&#xD;&#xA;                        JSONObject routes = array.getJSONObject(0);&#xD;&#xA;                        JSONArray legs = routes.getJSONArray(""legs"");&#xD;&#xA;                        JSONObject steps = legs.getJSONObject(0);&#xD;&#xA;                        JSONObject distance = steps.getJSONObject(""distance"");&#xD;&#xA;                        parsedDistance=distance.getString(""text"");&#xD;&#xA;                    } catch (ProtocolException e) {&#xD;&#xA;                        e.printStackTrace();&#xD;&#xA;                    } catch (MalformedURLException e) {&#xD;&#xA;                        e.printStackTrace();&#xD;&#xA;                    } catch (IOException e) {&#xD;&#xA;                        e.printStackTrace();&#xD;&#xA;                    } catch (JSONException e) {&#xD;&#xA;                        e.printStackTrace();&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;            });&#xD;&#xA;        thread.start();&#xD;&#xA;        try {&#xD;&#xA;            thread.join();&#xD;&#xA;        } catch (InterruptedException e) {&#xD;&#xA;            e.printStackTrace();&#xD;&#xA;        }&#xD;&#xA;        return parsedDistance;&#xD;&#xA;    }"
502621267830018892,40,5,"    /**&#xD;&#xA;     * System configuration for Angular samples&#xD;&#xA;     * Adjust as necessary for your application needs.&#xD;&#xA;     */&#xD;&#xA;    (function (global) {&#xD;&#xA;      System.config({&#xD;&#xA;        paths: {&#xD;&#xA;          // paths serve as alias&#xD;&#xA;          'npm:': 'node_modules/'&#xD;&#xA;        },&#xD;&#xA;        // map tells the System loader where to look for things&#xD;&#xA;        map: {&#xD;&#xA;          // our app is within the app folder&#xD;&#xA;          app: 'app',&#xD;&#xA;          // angular bundles&#xD;&#xA;          '@angular/core': 'npm:@angular/core/bundles/core.umd.js',&#xD;&#xA;          '@angular/common': 'npm:@angular/common/bundles/common.umd.js',&#xD;&#xA;          '@angular/compiler': 'npm:@angular/compiler/bundles/compiler.umd.js',&#xD;&#xA;          '@angular/platform-browser': 'npm:@angular/platform-browser/bundles/platform-browser.umd.js',&#xD;&#xA;          '@angular/platform-browser-dynamic': 'npm:@angular/platform-browser-dynamic/bundles/platform-browser-dynamic.umd.js',&#xD;&#xA;          '@angular/http': 'npm:@angular/http/bundles/http.umd.js',&#xD;&#xA;          '@angular/router': 'npm:@angular/router/bundles/router.umd.js',&#xD;&#xA;          '@angular/forms': 'npm:@angular/forms/bundles/forms.umd.js',&#xD;&#xA;          '@angular/upgrade': 'npm:@angular/upgrade/bundles/upgrade.umd.js',&#xD;&#xA;          // other libraries&#xD;&#xA;          'rxjs':                      'npm:rxjs',&#xD;&#xA;          'angular-in-memory-web-api': 'npm:angular-in-memory-web-api/bundles/in-memory-web-api.umd.js'&#xD;&#xA;        },&#xD;&#xA;        // packages tells the System loader how to load when no filename and/or no extension&#xD;&#xA;        packages: {&#xD;&#xA;          app: {&#xD;&#xA;            main: './main.js',&#xD;&#xA;            defaultExtension: 'js'&#xD;&#xA;          },&#xD;&#xA;          rxjs: {&#xD;&#xA;            defaultExtension: 'js'&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;    })(this);"
-8481942554690007583,40,5,"    private Stack<String> stack;&#xD;&#xA;    &#xD;&#xA;    @Override&#xD;&#xA;    public void onCreate(Bundle savedInstanceState) {&#xD;&#xA;        super.onCreate(savedInstanceState);&#xD;&#xA;        if (stack == null)&#xD;&#xA;            stack = new Stack<String>();&#xD;&#xA;        // start default activity&#xD;&#xA;        push(""FirstStackActivity"", new Intent(this, Tab_SampleActivity.class));&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    @Override&#xD;&#xA;    public void finishFromChild(Activity child) {&#xD;&#xA;        pop();&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    @Override&#xD;&#xA;    public void onBackPressed() {&#xD;&#xA;        pop();&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    public void push(String id, Intent intent) {&#xD;&#xA;        Window window = getLocalActivityManager().startActivity(id, intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP));&#xD;&#xA;        if (window != null) {&#xD;&#xA;            stack.push(id);&#xD;&#xA;            setContentView(window.getDecorView());&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    public void pop() {&#xD;&#xA;        if (stack.size() == 1)&#xD;&#xA;            finish();&#xD;&#xA;        LocalActivityManager manager = getLocalActivityManager();&#xD;&#xA;        manager.destroyActivity(stack.pop(), true);&#xD;&#xA;        if (stack.size() > 0) {&#xD;&#xA;            Intent lastIntent = manager.getActivity(stack.peek()).getIntent();&#xD;&#xA;            Window newWindow = manager.startActivity(stack.peek(), lastIntent);&#xD;&#xA;            setContentView(newWindow.getDecorView());&#xD;&#xA;        }&#xD;&#xA;    }"
4909940376770999397,41,5,"    public class MainActivity extends ActionBarActivity {&#xD;&#xA;	@Override&#xD;&#xA;	protected void onCreate(Bundle savedInstanceState) {&#xD;&#xA;		super.onCreate(savedInstanceState);&#xD;&#xA;		setContentView(R.layout.activity_main);&#xD;&#xA;		if (savedInstanceState == null) {&#xD;&#xA;			getSupportFragmentManager().beginTransaction()&#xD;&#xA;					.add(R.id.container, new PlaceholderFragment()).commit();&#xD;&#xA;		}&#xD;&#xA;	}&#xD;&#xA;	@Override&#xD;&#xA;	public boolean onCreateOptionsMenu(Menu menu) {&#xD;&#xA;		// Inflate the menu; this adds items to the action bar if it is present.&#xD;&#xA;		getMenuInflater().inflate(R.menu.main, menu);&#xD;&#xA;		return true;&#xD;&#xA;	}&#xD;&#xA;	@Override&#xD;&#xA;	public boolean onOptionsItemSelected(MenuItem item) {&#xD;&#xA;		// Handle action bar item clicks here. The action bar will&#xD;&#xA;		// automatically handle clicks on the Home/Up button, so long&#xD;&#xA;		// as you specify a parent activity in AndroidManifest.xml.&#xD;&#xA;		int id = item.getItemId();&#xD;&#xA;		if (id == R.id.action_settings) {&#xD;&#xA;			return true;&#xD;&#xA;		}&#xD;&#xA;		return super.onOptionsItemSelected(item);&#xD;&#xA;	}&#xD;&#xA;	/**&#xD;&#xA;	 * A placeholder fragment containing a simple view.&#xD;&#xA;	 */&#xD;&#xA;	public static class PlaceholderFragment extends Fragment {&#xD;&#xA;		public PlaceholderFragment() {&#xD;&#xA;		}&#xD;&#xA;		@Override&#xD;&#xA;		public View onCreateView(LayoutInflater inflater, ViewGroup container,&#xD;&#xA;				Bundle savedInstanceState) {&#xD;&#xA;			View rootView = inflater.inflate(R.layout.fragment_main, container,&#xD;&#xA;					false);&#xD;&#xA;			return rootView;&#xD;&#xA;		}&#xD;&#xA;	}"
-4205460625525720744,41,5,"    class ApplicationPolicy&#xD;&#xA;      attr_reader :user, :record&#xD;&#xA;      def initialize(user, record)&#xD;&#xA;        @user = user&#xD;&#xA;        @record = record&#xD;&#xA;      end&#xD;&#xA;      def index?&#xD;&#xA;        false&#xD;&#xA;      end&#xD;&#xA;      def show?&#xD;&#xA;        scope.where(id: record.id).exists?&#xD;&#xA;      end&#xD;&#xA;      def create?&#xD;&#xA;        user.present?&#xD;&#xA;      end&#xD;&#xA;      def new?&#xD;&#xA;        create?&#xD;&#xA;      end&#xD;&#xA;      def update?&#xD;&#xA;        user.present? && (record.user == user || user.admin?)&#xD;&#xA;      end&#xD;&#xA;      def edit?&#xD;&#xA;        update?&#xD;&#xA;      end&#xD;&#xA;      def destroy?&#xD;&#xA;        update?&#xD;&#xA;      end&#xD;&#xA;      def scope&#xD;&#xA;        record.class&#xD;&#xA;      end&#xD;&#xA;      class Scope&#xD;&#xA;        attr_reader :user, :scope&#xD;&#xA;        def initialize(user, scope)&#xD;&#xA;          @user = user&#xD;&#xA;          @scope = scope&#xD;&#xA;        end&#xD;&#xA;        def resolve&#xD;&#xA;          scope&#xD;&#xA;        end&#xD;&#xA;      end&#xD;&#xA;    end"
4070549829462344323,41,5,"        private void Form5_Load(object sender, EventArgs e)&#xD;&#xA;        {&#xD;&#xA;            DataTable dt = new DataTable();&#xD;&#xA;            dt.Columns.Add(""name"");&#xD;&#xA;            for (int j = 0; j < 10; j++)&#xD;&#xA;            {&#xD;&#xA;                dt.Rows.Add("""");&#xD;&#xA;            }&#xD;&#xA;            this.dataGridView1.DataSource = dt;&#xD;&#xA;            this.dataGridView1.Columns[0].Width = 200;&#xD;&#xA; &#xD;&#xA;            /*&#xD;&#xA;             * First method : Convert to an existed cell type such ComboBox cell,etc&#xD;&#xA;             */&#xD;&#xA; &#xD;&#xA;            DataGridViewComboBoxCell ComboBoxCell = new DataGridViewComboBoxCell();&#xD;&#xA;            ComboBoxCell.Items.AddRange(new string[] { ""aaa"",""bbb"",""ccc"" });&#xD;&#xA;            this.dataGridView1[0, 0] = ComboBoxCell;&#xD;&#xA;            this.dataGridView1[0, 0].Value = ""bbb"";&#xD;&#xA; &#xD;&#xA;            DataGridViewTextBoxCell TextBoxCell = new DataGridViewTextBoxCell();&#xD;&#xA;            this.dataGridView1[0, 1] = TextBoxCell;&#xD;&#xA;            this.dataGridView1[0, 1].Value = ""some text"";&#xD;&#xA; &#xD;&#xA;            DataGridViewCheckBoxCell CheckBoxCell = new DataGridViewCheckBoxCell();&#xD;&#xA;            CheckBoxCell.Style.Alignment = DataGridViewContentAlignment.MiddleCenter;&#xD;&#xA;            this.dataGridView1[0, 2] = CheckBoxCell;&#xD;&#xA;            this.dataGridView1[0, 2].Value = true;&#xD;&#xA; &#xD;&#xA;            /*&#xD;&#xA;             * Second method : Add control to the host in the cell&#xD;&#xA;             */&#xD;&#xA;            DateTimePicker dtp = new DateTimePicker();&#xD;&#xA;            dtp.Value = DateTime.Now.AddDays(-10);&#xD;&#xA;            //add DateTimePicker into the control collection of the DataGridView&#xD;&#xA;            this.dataGridView1.Controls.Add(dtp);&#xD;&#xA;            //set its location and size to fit the cell&#xD;&#xA;            dtp.Location = this.dataGridView1.GetCellDisplayRectangle(0, 3,true).Location;&#xD;&#xA;            dtp.Size = this.dataGridView1.GetCellDisplayRectangle(0, 3,true).Size;&#xD;&#xA;        }&#xD;&#xA; "
1755551302365117857,41,5,"    #!/usr/bin/env python&#xD;&#xA;    # -*- coding: utf-8 -*-&#xD;&#xA;    &#xD;&#xA;    import os&#xD;&#xA;    import sys&#xD;&#xA;    import select&#xD;&#xA;    import termios&#xD;&#xA;    import tty&#xD;&#xA;    import pty&#xD;&#xA;    from subprocess import Popen&#xD;&#xA;    &#xD;&#xA;    command = 'bash'&#xD;&#xA;    # command = 'docker run -it --rm centos /bin/bash'.split()&#xD;&#xA;    &#xD;&#xA;    # save original tty setting then set it to raw mode&#xD;&#xA;    old_tty = termios.tcgetattr(sys.stdin)&#xD;&#xA;    tty.setraw(sys.stdin.fileno())&#xD;&#xA;    &#xD;&#xA;    # open pseudo-terminal to interact with subprocess&#xD;&#xA;    master_fd, slave_fd = pty.openpty()&#xD;&#xA;    &#xD;&#xA;    # use os.setsid() make it run in a new process group, or bash job control will not be enabled&#xD;&#xA;    p = Popen(command,&#xD;&#xA;              preexec_fn=os.setsid,&#xD;&#xA;              stdin=slave_fd,&#xD;&#xA;              stdout=slave_fd,&#xD;&#xA;              stderr=slave_fd,&#xD;&#xA;              universal_newlines=True)&#xD;&#xA;    &#xD;&#xA;    while p.poll() is None:&#xD;&#xA;        r, w, e = select.select([sys.stdin, master_fd], [], [])&#xD;&#xA;        if sys.stdin in r:&#xD;&#xA;            d = os.read(sys.stdin.fileno(), 10240)&#xD;&#xA;            os.write(master_fd, d)&#xD;&#xA;        elif master_fd in r:&#xD;&#xA;            o = os.read(master_fd, 10240)&#xD;&#xA;            if o:&#xD;&#xA;                os.write(sys.stdout.fileno(), o)&#xD;&#xA;    &#xD;&#xA;    # restore tty settings back&#xD;&#xA;    termios.tcsetattr(sys.stdin, termios.TCSADRAIN, old_tty)"
4849693128769342671,41,5,"        .sidebar-nav {&#xD;&#xA;        padding: 9px 0;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .dropdown-menu .sub-menu {&#xD;&#xA;        left: 100%;&#xD;&#xA;        position: absolute;&#xD;&#xA;        top: 0;&#xD;&#xA;        visibility: hidden;&#xD;&#xA;        margin-top: -1px;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .dropdown-menu li:hover .sub-menu {&#xD;&#xA;        visibility: visible;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .dropdown:hover .dropdown-menu {&#xD;&#xA;        display: block;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .nav-tabs .dropdown-menu, .nav-pills .dropdown-menu, .navbar .dropdown-menu {&#xD;&#xA;        margin-top: 0;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .navbar .sub-menu:before {&#xD;&#xA;        border-bottom: 7px solid transparent;&#xD;&#xA;        border-left: none;&#xD;&#xA;        border-right: 7px solid rgba(0, 0, 0, 0.2);&#xD;&#xA;        border-top: 7px solid transparent;&#xD;&#xA;        left: -7px;&#xD;&#xA;        top: 10px;&#xD;&#xA;    }&#xD;&#xA;    .navbar .sub-menu:after {&#xD;&#xA;        border-top: 6px solid transparent;&#xD;&#xA;        border-left: none;&#xD;&#xA;        border-right: 6px solid #fff;&#xD;&#xA;        border-bottom: 6px solid transparent;&#xD;&#xA;        left: 10px;&#xD;&#xA;        top: 11px;&#xD;&#xA;        left: -6px;&#xD;&#xA;    }"
-8734996800904274933,41,5,"    public class AndroidBug5497Workaround {&#xD;&#xA;        // For more information, see https://code.google.com/p/android/issues/detail?id=5497&#xD;&#xA;        // To use this class, simply invoke assistActivity() on an Activity that already has its content view set.&#xD;&#xA;        public static void assistActivity (Activity activity) {&#xD;&#xA;            new AndroidBug5497Workaround(activity);&#xD;&#xA;        }&#xD;&#xA;        private View mChildOfContent;&#xD;&#xA;        private int usableHeightPrevious;&#xD;&#xA;        private FrameLayout.LayoutParams frameLayoutParams;&#xD;&#xA;        private AndroidBug5497Workaround(Activity activity) {&#xD;&#xA;            FrameLayout content = (FrameLayout)  activity.findViewById(android.R.id.content);&#xD;&#xA;            mChildOfContent = content.getChildAt(0);&#xD;&#xA;            mChildOfContent.getViewTreeObserver().addOnGlobalLayoutListener(new ViewTreeObserver.OnGlobalLayoutListener() {&#xD;&#xA;                public void onGlobalLayout() {&#xD;&#xA;                    possiblyResizeChildOfContent();&#xD;&#xA;                }&#xD;&#xA;            });&#xD;&#xA;            frameLayoutParams = (FrameLayout.LayoutParams) mChildOfContent.getLayoutParams();&#xD;&#xA;        }&#xD;&#xA;        private void possiblyResizeChildOfContent() {&#xD;&#xA;            int usableHeightNow = computeUsableHeight();&#xD;&#xA;            if (usableHeightNow != usableHeightPrevious) {&#xD;&#xA;                int usableHeightSansKeyboard = mChildOfContent.getRootView().getHeight();&#xD;&#xA;                int heightDifference = usableHeightSansKeyboard - usableHeightNow;&#xD;&#xA;                if (heightDifference > (usableHeightSansKeyboard/4)) {&#xD;&#xA;                    // keyboard probably just became visible&#xD;&#xA;                    frameLayoutParams.height = usableHeightSansKeyboard - heightDifference;&#xD;&#xA;                    } else {&#xD;&#xA;                    // keyboard probably just became hidden&#xD;&#xA;                    frameLayoutParams.height = usableHeightSansKeyboard;&#xD;&#xA;                }&#xD;&#xA;                mChildOfContent.requestLayout();&#xD;&#xA;                usableHeightPrevious = usableHeightNow;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        private int computeUsableHeight() {&#xD;&#xA;            Rect r = new Rect();&#xD;&#xA;            mChildOfContent.getWindowVisibleDisplayFrame(r);&#xD;&#xA;            return (r.bottom - r.top);&#xD;&#xA;        }&#xD;&#xA;    }"
-2743313353450358998,41,5,"    jQuery(document).ready(function ($) {&#xD;&#xA;      &#xD;&#xA;    	var slideCount = $('#slider ul li').length;&#xD;&#xA;    	var slideWidth = $('#slider ul li').width();&#xD;&#xA;    	var slideHeight = $('#slider ul li').height();&#xD;&#xA;    	var sliderUlWidth = slideCount * slideWidth;&#xD;&#xA;    	&#xD;&#xA;    	$('#slider').css({ width: slideWidth, height: slideHeight });&#xD;&#xA;    	&#xD;&#xA;    	$('#slider ul').css({ width: sliderUlWidth, marginLeft: - slideWidth });&#xD;&#xA;    	&#xD;&#xA;        $('#slider ul li:last-child').prependTo('#slider ul');&#xD;&#xA;    &#xD;&#xA;        function moveLeft() {&#xD;&#xA;            $('#slider ul').animate({&#xD;&#xA;                left: + slideWidth&#xD;&#xA;            }, 200, function () {&#xD;&#xA;                $('#slider ul li:last-child').prependTo('#slider ul');&#xD;&#xA;                $('#slider ul').css('left', '');&#xD;&#xA;            });&#xD;&#xA;        };&#xD;&#xA;    &#xD;&#xA;        function moveRight() {&#xD;&#xA;            $('#slider ul').animate({&#xD;&#xA;                left: - slideWidth&#xD;&#xA;            }, 200, function () {&#xD;&#xA;                $('#slider ul li:first-child').appendTo('#slider ul');&#xD;&#xA;                $('#slider ul').css('left', '');&#xD;&#xA;            });&#xD;&#xA;        };&#xD;&#xA;    &#xD;&#xA;        $('a.control_prev').click(function () {&#xD;&#xA;            moveLeft();&#xD;&#xA;        });&#xD;&#xA;    &#xD;&#xA;        $('a.control_next').click(function () {&#xD;&#xA;            moveRight();&#xD;&#xA;        });&#xD;&#xA;    &#xD;&#xA;    });&#xD;&#xA;  "
3253642193395332605,42,5,"	<?php&#xD;&#xA;	function nicetime($date)&#xD;&#xA;	{&#xD;&#xA;		if(empty($date)) {&#xD;&#xA;			return ""No date provided"";&#xD;&#xA;		}&#xD;&#xA;	   &#xD;&#xA;		$periods         = array(""second"", ""minute"", ""hour"", ""day"", ""week"", ""month"", ""year"", ""decade"");&#xD;&#xA;		$lengths         = array(""60"",""60"",""24"",""7"",""4.35"",""12"",""10"");&#xD;&#xA;	   &#xD;&#xA;		$now             = time();&#xD;&#xA;		$unix_date         = strtotime($date);&#xD;&#xA;	   &#xD;&#xA;		   // check validity of date&#xD;&#xA;		if(empty($unix_date)) {   &#xD;&#xA;			return ""Bad date"";&#xD;&#xA;		}&#xD;&#xA;		// is it future date or past date&#xD;&#xA;		if($now > $unix_date) {   &#xD;&#xA;			$difference     = $now - $unix_date;&#xD;&#xA;			$tense         = ""ago"";&#xD;&#xA;		   &#xD;&#xA;		} else {&#xD;&#xA;			$difference     = $unix_date - $now;&#xD;&#xA;			$tense         = ""from now"";&#xD;&#xA;		}&#xD;&#xA;	   &#xD;&#xA;		for($j = 0; $difference >= $lengths[$j] && $j < count($lengths)-1; $j++) {&#xD;&#xA;			$difference /= $lengths[$j];&#xD;&#xA;		}&#xD;&#xA;	   &#xD;&#xA;		$difference = round($difference);&#xD;&#xA;	   &#xD;&#xA;		if($difference != 1) {&#xD;&#xA;			$periods[$j].= ""s"";&#xD;&#xA;		}&#xD;&#xA;	   &#xD;&#xA;		return ""$difference $periods[$j] {$tense}"";&#xD;&#xA;	}&#xD;&#xA;	$date = ""2009-03-04 17:45"";&#xD;&#xA;	$result = nicetime($date); // 2 days ago&#xD;&#xA;	?>"
-3565583768689485549,42,5,"      function custom_pagination($numpages = '', $pagerange = '', $paged='') {&#xD;&#xA;    &#xD;&#xA;      if (empty($pagerange)) {&#xD;&#xA;        $pagerange = 2;&#xD;&#xA;      }&#xD;&#xA;      global $paged;&#xD;&#xA;      if (empty($paged)) {&#xD;&#xA;        $paged = 1;&#xD;&#xA;      }&#xD;&#xA;      if ($numpages == '') {&#xD;&#xA;        global $wp_query;&#xD;&#xA;        $numpages = $wp_query->max_num_pages;&#xD;&#xA;        if(!$numpages) {&#xD;&#xA;            $numpages = 1;&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;      $pagination_args = array(&#xD;&#xA;        'base'            => get_pagenum_link(1) . '%_%',&#xD;&#xA;        'format'          => 'page/%#%',&#xD;&#xA;        'total'           => $numpages,&#xD;&#xA;        'current'         => $paged,&#xD;&#xA;        'show_all'        => False,&#xD;&#xA;        'end_size'        => 1,&#xD;&#xA;        'mid_size'        => $pagerange,&#xD;&#xA;        'prev_next'       => True,&#xD;&#xA;        'prev_text'       => __('&laquo;'),&#xD;&#xA;        'next_text'       => __('&raquo;'),&#xD;&#xA;        'type'            => 'plain',&#xD;&#xA;        'add_args'        => false,&#xD;&#xA;        'add_fragment'    => ''&#xD;&#xA;      );&#xD;&#xA;    &#xD;&#xA;      $paginate_links = paginate_links($pagination_args);&#xD;&#xA;    &#xD;&#xA;      if ($paginate_links) {&#xD;&#xA;        echo ""<nav class='custom-pagination'>"";&#xD;&#xA;          echo ""<span class='page-numbers page-num'>Page "" . $paged . "" of "" . $numpages . ""</span> "";&#xD;&#xA;          echo $paginate_links;&#xD;&#xA;        echo ""</nav>"";&#xD;&#xA;      }&#xD;&#xA;    &#xD;&#xA;    }"
-3571317264799948355,42,5,"    Chart.pluginService.register({&#xD;&#xA;	  beforeRender: function (chart) {&#xD;&#xA;	    if (chart.config.options.showAllTooltips) {&#xD;&#xA;	        // create an array of tooltips&#xD;&#xA;	        // we can't use the chart tooltip because there is only one tooltip per chart&#xD;&#xA;	        chart.pluginTooltips = [];&#xD;&#xA;	        chart.config.data.datasets.forEach(function (dataset, i) {&#xD;&#xA;	            chart.getDatasetMeta(i).data.forEach(function (sector, j) {&#xD;&#xA;	                chart.pluginTooltips.push(new Chart.Tooltip({&#xD;&#xA;	                    _chart: chart.chart,&#xD;&#xA;	                    _chartInstance: chart,&#xD;&#xA;	                    _data: chart.data,&#xD;&#xA;	                    _options: chart.options.tooltips,&#xD;&#xA;	                    _active: [sector]&#xD;&#xA;	                }, chart));&#xD;&#xA;	            });&#xD;&#xA;	        });&#xD;&#xA;	        // turn off normal tooltips&#xD;&#xA;	        chart.options.tooltips.enabled = false;&#xD;&#xA;	    }&#xD;&#xA;	},&#xD;&#xA;	  afterDraw: function (chart, easing) {&#xD;&#xA;	    if (chart.config.options.showAllTooltips) {&#xD;&#xA;	        // we don't want the permanent tooltips to animate, so don't do anything till the animation runs atleast once&#xD;&#xA;	        if (!chart.allTooltipsOnce) {&#xD;&#xA;	            if (easing !== 1)&#xD;&#xA;	                return;&#xD;&#xA;	            chart.allTooltipsOnce = true;&#xD;&#xA;	        }&#xD;&#xA;	        // turn on tooltips&#xD;&#xA;	        chart.options.tooltips.enabled = true;&#xD;&#xA;	        Chart.helpers.each(chart.pluginTooltips, function (tooltip) {&#xD;&#xA;	            tooltip.initialize();&#xD;&#xA;	            tooltip.update();&#xD;&#xA;	            // we don't actually need this since we are not animating tooltips&#xD;&#xA;	            tooltip.pivot();&#xD;&#xA;	            tooltip.transition(easing).draw();&#xD;&#xA;	        });&#xD;&#xA;	        chart.options.tooltips.enabled = false;&#xD;&#xA;	    }&#xD;&#xA;	  }&#xD;&#xA;	});"
-46594099215442497,42,5,"    #include <stdio.h>&#xD;&#xA;    #define MAXLINE 1000                   /* maximum input line length */&#xD;&#xA;    int getline(char line[], int maxline);&#xD;&#xA;    void copy(char to[], char from[]);&#xD;&#xA;    /* print the longest input line */&#xD;&#xA;    main()&#xD;&#xA;    {&#xD;&#xA;       int len;                               /* current line length */&#xD;&#xA;       int max;                               /* maximum length seen so far */&#xD;&#xA;       char line[MAXLINE];                    /* current input line */&#xD;&#xA;       char longest[MAXLINE];                 /* longest line saved here */&#xD;&#xA;       max = 0;&#xD;&#xA;       while ((len = getline(line, MAXLINE)) > 0)&#xD;&#xA;          if (len > max) {&#xD;&#xA;             max = len;&#xD;&#xA;             copy(longest, line);&#xD;&#xA;          }&#xD;&#xA;       if (max > 0) /* there was a line */&#xD;&#xA;          printf(""%s"", longest);&#xD;&#xA;       return 0;&#xD;&#xA;    }&#xD;&#xA;    /* getline: read a line into s, return length */&#xD;&#xA;    int getline(char s[], int lim)&#xD;&#xA;    {&#xD;&#xA;       int c, i;&#xD;&#xA;       for (i=0; i < lim-1 && (c=getchar())!=EOF && c!='\n'; ++i)&#xD;&#xA;          s[i] = c;&#xD;&#xA;       if (c == '\n') {&#xD;&#xA;          s[i] = c;&#xD;&#xA;          ++i;&#xD;&#xA;       }&#xD;&#xA;       s[i] = '\0';&#xD;&#xA;       return i;&#xD;&#xA;    }&#xD;&#xA;    /* copy: copy 'from' into 'to'; assume to is big enough */&#xD;&#xA;    void copy(char to[], char from[])&#xD;&#xA;    {&#xD;&#xA;       int i;&#xD;&#xA;       i = 0;&#xD;&#xA;       while ((to[i] = from[i]) != '\0')&#xD;&#xA;          ++i;&#xD;&#xA;    }"
8012493048031829965,42,5,"    DELIMITER $$&#xD;&#xA;    CREATE FUNCTION levenshtein( s1 VARCHAR(255), s2 VARCHAR(255) ) &#xD;&#xA;      RETURNS INT &#xD;&#xA;      DETERMINISTIC &#xD;&#xA;      BEGIN &#xD;&#xA;        DECLARE s1_len, s2_len, i, j, c, c_temp, cost INT; &#xD;&#xA;        DECLARE s1_char CHAR; &#xD;&#xA;        -- max strlen=255 &#xD;&#xA;        DECLARE cv0, cv1 VARBINARY(256); &#xD;&#xA;        SET s1_len = CHAR_LENGTH(s1), s2_len = CHAR_LENGTH(s2), cv1 = 0x00, j = 1, i = 1, c = 0; &#xD;&#xA;        IF s1 = s2 THEN &#xD;&#xA;          RETURN 0; &#xD;&#xA;        ELSEIF s1_len = 0 THEN &#xD;&#xA;          RETURN s2_len; &#xD;&#xA;        ELSEIF s2_len = 0 THEN &#xD;&#xA;          RETURN s1_len; &#xD;&#xA;        ELSE &#xD;&#xA;          WHILE j <= s2_len DO &#xD;&#xA;            SET cv1 = CONCAT(cv1, UNHEX(HEX(j))), j = j + 1; &#xD;&#xA;          END WHILE; &#xD;&#xA;          WHILE i <= s1_len DO &#xD;&#xA;            SET s1_char = SUBSTRING(s1, i, 1), c = i, cv0 = UNHEX(HEX(i)), j = 1; &#xD;&#xA;            WHILE j <= s2_len DO &#xD;&#xA;              SET c = c + 1; &#xD;&#xA;              IF s1_char = SUBSTRING(s2, j, 1) THEN  &#xD;&#xA;                SET cost = 0; ELSE SET cost = 1; &#xD;&#xA;              END IF; &#xD;&#xA;              SET c_temp = CONV(HEX(SUBSTRING(cv1, j, 1)), 16, 10) + cost; &#xD;&#xA;              IF c > c_temp THEN SET c = c_temp; END IF; &#xD;&#xA;                SET c_temp = CONV(HEX(SUBSTRING(cv1, j+1, 1)), 16, 10) + 1; &#xD;&#xA;                IF c > c_temp THEN  &#xD;&#xA;                  SET c = c_temp;  &#xD;&#xA;                END IF; &#xD;&#xA;                SET cv0 = CONCAT(cv0, UNHEX(HEX(c))), j = j + 1; &#xD;&#xA;            END WHILE; &#xD;&#xA;            SET cv1 = cv0, i = i + 1; &#xD;&#xA;          END WHILE; &#xD;&#xA;        END IF; &#xD;&#xA;        RETURN c; &#xD;&#xA;      END$$&#xD;&#xA;      DELIMITER ;&#xD;&#xA;    "
840612996073643589,43,5,"    @Override&#xD;&#xA;    public View getView(int position, View convertView, ViewGroup parent) {&#xD;&#xA;     &#xD;&#xA;        ViewHolderItem viewHolder;&#xD;&#xA;         &#xD;&#xA;         &#xD;&#xA;          // The convertView argument is essentially a ""ScrapView"" as described is Lucas post &#xD;&#xA;          // http://lucasr.org/2012/04/05/performance-tips-for-androids-listview/&#xD;&#xA;          // It will have a non-null value when ListView is asking you recycle the row layout. &#xD;&#xA;          // So, when convertView is not null, you should simply update its contents instead of inflating a new row    layout.&#xD;&#xA;          &#xD;&#xA;        if(convertView==null){&#xD;&#xA;             &#xD;&#xA;            // inflate the layout&#xD;&#xA;            LayoutInflater inflater = ((Activity) mContext).getLayoutInflater();&#xD;&#xA;            convertView = inflater.inflate(layoutResourceId, parent, false);&#xD;&#xA;             &#xD;&#xA;            // well set up the ViewHolder&#xD;&#xA;            viewHolder = new ViewHolderItem();&#xD;&#xA;            viewHolder.textViewItem = (TextView) convertView.findViewById(R.id.textViewItem);&#xD;&#xA;             &#xD;&#xA;            // store the holder with the view.&#xD;&#xA;            convertView.setTag(viewHolder);&#xD;&#xA;             &#xD;&#xA;        }else{&#xD;&#xA;            // we've just avoided calling findViewById() on resource everytime&#xD;&#xA;            // just use the viewHolder&#xD;&#xA;            viewHolder = (ViewHolderItem) convertView.getTag();&#xD;&#xA;        }&#xD;&#xA;         &#xD;&#xA;        // object item based on the position&#xD;&#xA;        ObjectItem objectItem = data[position];&#xD;&#xA;         &#xD;&#xA;        // assign values if the object is not null&#xD;&#xA;        if(objectItem != null) {&#xD;&#xA;            // get the TextView from the ViewHolder and then set the text (item name) and tag (item ID) values&#xD;&#xA;            viewHolder.textViewItem.setText(objectItem.itemName);&#xD;&#xA;            viewHolder.textViewItem.setTag(objectItem.itemId);&#xD;&#xA;        }&#xD;&#xA;         &#xD;&#xA;        return convertView;&#xD;&#xA;         &#xD;&#xA;    }"
1380958385336182038,43,5,"    public class BrowsePicture extends Activity {&#xD;&#xA;    &#xD;&#xA;    private static final int SELECT_PICTURE = 1;&#xD;&#xA;    &#xD;&#xA;    private String selectedImagePath;&#xD;&#xA;    &#xD;&#xA;    public void onCreate(Bundle savedInstanceState) {&#xD;&#xA;        super.onCreate(savedInstanceState);&#xD;&#xA;        setContentView(R.layout.main);&#xD;&#xA;    &#xD;&#xA;        ((Button) findViewById(R.id.Button01))&#xD;&#xA;                .setOnClickListener(new OnClickListener() {&#xD;&#xA;    &#xD;&#xA;                    public void onClick(View arg0) {&#xD;&#xA;    &#xD;&#xA;                        // in onCreate or any event where your want the user to&#xD;&#xA;                        // select a file&#xD;&#xA;                        Intent intent = new Intent();&#xD;&#xA;                        intent.setType(""image/*"");&#xD;&#xA;                        intent.setAction(Intent.ACTION_GET_CONTENT);&#xD;&#xA;                        startActivityForResult(Intent.createChooser(intent,&#xD;&#xA;                                ""Select Picture""), SELECT_PICTURE);&#xD;&#xA;                    }&#xD;&#xA;                });&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    public void onActivityResult(int requestCode, int resultCode, Intent data) {&#xD;&#xA;        if (resultCode == RESULT_OK) {&#xD;&#xA;            if (requestCode == SELECT_PICTURE) {&#xD;&#xA;                Uri selectedImageUri = data.getData();&#xD;&#xA;                selectedImagePath = getPath(selectedImageUri);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    public String getPath(Uri uri) {&#xD;&#xA;        String[] projection = { MediaStore.Images.Media.DATA };&#xD;&#xA;        Cursor cursor = managedQuery(uri, projection, null, null, null);&#xD;&#xA;        int column_index = cursor&#xD;&#xA;                .getColumnIndexOrThrow(MediaStore.Images.Media.DATA);&#xD;&#xA;        cursor.moveToFirst();&#xD;&#xA;        return cursor.getString(column_index);&#xD;&#xA;    }"
1142620446326032073,43,5,"    public class ApplicationAdapter extends ArrayAdapter<ApplicationInfo> {&#xD;&#xA;	private List<ApplicationInfo> appsList = null;&#xD;&#xA;	private Context context;&#xD;&#xA;	private PackageManager packageManager;&#xD;&#xA;	public ApplicationAdapter(Context context, int textViewResourceId,&#xD;&#xA;			List<ApplicationInfo> appsList) {&#xD;&#xA;		super(context, textViewResourceId, appsList);&#xD;&#xA;		this.context = context;&#xD;&#xA;		this.appsList = appsList;&#xD;&#xA;		packageManager = context.getPackageManager();&#xD;&#xA;	}&#xD;&#xA;	@Override&#xD;&#xA;	public int getCount() {&#xD;&#xA;		return ((null != appsList) ? appsList.size() : 0);&#xD;&#xA;	}&#xD;&#xA;	@Override&#xD;&#xA;	public ApplicationInfo getItem(int position) {&#xD;&#xA;		return ((null != appsList) ? appsList.get(position) : null);&#xD;&#xA;	}&#xD;&#xA;	@Override&#xD;&#xA;	public long getItemId(int position) {&#xD;&#xA;		return position;&#xD;&#xA;	}&#xD;&#xA;	@Override&#xD;&#xA;	public View getView(int position, View convertView, ViewGroup parent) {&#xD;&#xA;		View view = convertView;&#xD;&#xA;		if (null == view) {&#xD;&#xA;			LayoutInflater layoutInflater = (LayoutInflater) context&#xD;&#xA;					.getSystemService(Context.LAYOUT_INFLATER_SERVICE);&#xD;&#xA;			view = layoutInflater.inflate(R.layout.snippet_list_row, null);&#xD;&#xA;		}&#xD;&#xA;		ApplicationInfo data = appsList.get(position);&#xD;&#xA;		if (null != data) {&#xD;&#xA;			TextView appName = (TextView) view.findViewById(R.id.app_name);&#xD;&#xA;			TextView packageName = (TextView)   view.findViewById(R.id.app_paackage);&#xD;&#xA;			ImageView iconview = (ImageView) view.findViewById(R.id.app_icon);&#xD;&#xA;			appName.setText(data.loadLabel(packageManager));&#xD;&#xA;			packageName.setText(data.packageName);&#xD;&#xA;			iconview.setImageDrawable(data.loadIcon(packageManager));&#xD;&#xA;		}&#xD;&#xA;		return view;&#xD;&#xA;	    }&#xD;&#xA;        };"
1443710385860610152,43,5,"    var hookEvent = (function() {&#xD;&#xA;        var div;&#xD;&#xA;    &#xD;&#xA;        // The function we use on standard-compliant browsers&#xD;&#xA;        function standardHookEvent(element, eventName, handler) {&#xD;&#xA;            element.addEventListener(eventName, handler, false);&#xD;&#xA;            return element;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // The function we use on browsers with the previous Microsoft-specific mechanism&#xD;&#xA;        function oldIEHookEvent(element, eventName, handler) {&#xD;&#xA;            element.attachEvent(""on"" + eventName, function(e) {&#xD;&#xA;                e = e || window.event;&#xD;&#xA;                e.preventDefault = oldIEPreventDefault;&#xD;&#xA;                e.stopPropagation = oldIEStopPropagation;&#xD;&#xA;                handler.call(element, e);&#xD;&#xA;            });&#xD;&#xA;            return element;&#xD;&#xA;        }&#xD;&#xA;     &#xD;&#xA;        // Polyfill for preventDefault on old IE&#xD;&#xA;        function oldIEPreventDefault() {&#xD;&#xA;            this.returnValue = false;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // Polyfill for stopPropagation on old IE&#xD;&#xA;        function oldIEStopPropagation() {&#xD;&#xA;            this.cancelBubble = true;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // Return the appropriate function; we don't rely on document.body&#xD;&#xA;        // here just in case someone wants to use this within the head&#xD;&#xA;        div = document.createElement('div');&#xD;&#xA;        if (div.addEventListener) {&#xD;&#xA;            div = undefined;&#xD;&#xA;            return standardHookEvent;&#xD;&#xA;        }&#xD;&#xA;        if (div.attachEvent) {&#xD;&#xA;            div = undefined;&#xD;&#xA;            return oldIEHookEvent;&#xD;&#xA;        }&#xD;&#xA;        throw ""Neither modern event mechanism (addEventListener nor attachEvent) is supported by this browser."";&#xD;&#xA;    })();"
-2175700636868979692,43,5,"    /* Delete the tables if they already exist */&#xD;&#xA;    drop table if exists Movie;&#xD;&#xA;    drop table if exists Reviewer;&#xD;&#xA;    drop table if exists Rating;&#xD;&#xA;    &#xD;&#xA;    /* Create the schema for our tables */&#xD;&#xA;    create table Movie(mID int, title text, year int, director text);&#xD;&#xA;    create table Reviewer(rID int, name text);&#xD;&#xA;    create table Rating(rID int, mID int, stars int, ratingDate date);&#xD;&#xA;    &#xD;&#xA;    /* Populate the tables with our data */&#xD;&#xA;    insert into Movie values(101, 'Gone with the Wind', 1939, 'Victor Fleming');&#xD;&#xA;    insert into Movie values(102, 'Star Wars', 1977, 'George Lucas');&#xD;&#xA;    insert into Movie values(103, 'The Sound of Music', 1965, 'Robert Wise');&#xD;&#xA;    insert into Movie values(104, 'E.T.', 1982, 'Steven Spielberg');&#xD;&#xA;    insert into Movie values(105, 'Titanic', 1997, 'James Cameron');&#xD;&#xA;    insert into Movie values(106, 'Snow White', 1937, null);&#xD;&#xA;    insert into Movie values(107, 'Avatar', 2009, 'James Cameron');&#xD;&#xA;    insert into Movie values(108, 'Raiders of the Lost Ark', 1981, 'Steven Spielberg');&#xD;&#xA;    &#xD;&#xA;    insert into Reviewer values(201, 'Sarah Martinez');&#xD;&#xA;    insert into Reviewer values(202, 'Daniel Lewis');&#xD;&#xA;    insert into Reviewer values(203, 'Brittany Harris');&#xD;&#xA;    insert into Reviewer values(204, 'Mike Anderson');&#xD;&#xA;    insert into Reviewer values(205, 'Chris Jackson');&#xD;&#xA;    insert into Reviewer values(206, 'Elizabeth Thomas');&#xD;&#xA;    insert into Reviewer values(207, 'James Cameron');&#xD;&#xA;    insert into Reviewer values(208, 'Ashley White');&#xD;&#xA;    &#xD;&#xA;    insert into Rating values(201, 101, 2, '2011-01-22');&#xD;&#xA;    insert into Rating values(201, 101, 4, '2011-01-27');&#xD;&#xA;    insert into Rating values(202, 106, 4, null);&#xD;&#xA;    insert into Rating values(203, 103, 2, '2011-01-20');&#xD;&#xA;    insert into Rating values(203, 108, 4, '2011-01-12');&#xD;&#xA;    insert into Rating values(203, 108, 2, '2011-01-30');&#xD;&#xA;    insert into Rating values(204, 101, 3, '2011-01-09');&#xD;&#xA;    insert into Rating values(205, 103, 3, '2011-01-27');&#xD;&#xA;    insert into Rating values(205, 104, 2, '2011-01-22');&#xD;&#xA;    insert into Rating values(205, 108, 4, null);&#xD;&#xA;    insert into Rating values(206, 107, 3, '2011-01-15');&#xD;&#xA;    insert into Rating values(206, 106, 5, '2011-01-19');&#xD;&#xA;    insert into Rating values(207, 107, 5, '2011-01-20');&#xD;&#xA;    insert into Rating values(208, 104, 3, '2011-01-02');"
4338704172566074137,43,5,"    /**&#xD;&#xA;     * System configuration for Angular samples&#xD;&#xA;     * Adjust as necessary for your application needs.&#xD;&#xA;     */&#xD;&#xA;    (function (global) {&#xD;&#xA;        System.config({&#xD;&#xA;            paths: {&#xD;&#xA;                // paths serve as alias&#xD;&#xA;                'npm:': 'node_modules/'&#xD;&#xA;            },&#xD;&#xA;            // map tells the System loader where to look for things&#xD;&#xA;            map: {&#xD;&#xA;                // our app is within the app folder&#xD;&#xA;                app: 'app',&#xD;&#xA;                // angular bundles&#xD;&#xA;                '@angular/core': 'npm:@angular/core/bundles/core.umd.js',&#xD;&#xA;                '@angular/common': 'npm:@angular/common/bundles/common.umd.js',&#xD;&#xA;                '@angular/compiler': 'npm:@angular/compiler/bundles/compiler.umd.js',&#xD;&#xA;                '@angular/platform-browser': 'npm:@angular/platform-browser/bundles/platform-browser.umd.js',&#xD;&#xA;                '@angular/platform-browser-dynamic': 'npm:@angular/platform-browser-dynamic/bundles/platform-browser-dynamic.umd.js',&#xD;&#xA;                '@angular/http': 'npm:@angular/http/bundles/http.umd.js',&#xD;&#xA;                '@angular/router': 'npm:@angular/router/bundles/router.umd.js',&#xD;&#xA;                '@angular/forms': 'npm:@angular/forms/bundles/forms.umd.js',&#xD;&#xA;                // other libraries&#xD;&#xA;                'rxjs': 'npm:rxjs',&#xD;&#xA;                'angular-in-memory-web-api': 'npm:angular-in-memory-web-api'&#xD;&#xA;            },&#xD;&#xA;            // packages tells the System loader how to load when no filename and/or no extension&#xD;&#xA;            packages: {&#xD;&#xA;                app: {&#xD;&#xA;                    main: 'main.js',&#xD;&#xA;                    defaultExtension: 'js'&#xD;&#xA;                },&#xD;&#xA;                rxjs: {&#xD;&#xA;                    defaultExtension: 'js'&#xD;&#xA;                },&#xD;&#xA;                'angular-in-memory-web-api': {&#xD;&#xA;                    main: 'index.js',&#xD;&#xA;                    defaultExtension: 'js'&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        });&#xD;&#xA;    })(this);"
-5559857666065729463,43,5,"	if (!Object.prototype.watch) {&#xD;&#xA;		Object.defineProperty(Object.prototype, ""watch"", {&#xD;&#xA;			  enumerable: false&#xD;&#xA;			, configurable: true&#xD;&#xA;			, writable: false&#xD;&#xA;			, value: function (prop, handler) {&#xD;&#xA;				var&#xD;&#xA;				  oldval = this[prop]&#xD;&#xA;				, newval = oldval&#xD;&#xA;				, getter = function () {&#xD;&#xA;					return newval;&#xD;&#xA;				}&#xD;&#xA;				, setter = function (val) {&#xD;&#xA;					oldval = newval;&#xD;&#xA;					return newval = handler.call(this, prop, oldval, val);&#xD;&#xA;				}&#xD;&#xA;				;&#xD;&#xA;				&#xD;&#xA;				if (delete this[prop]) { // can't watch constants&#xD;&#xA;					Object.defineProperty(this, prop, {&#xD;&#xA;						  get: getter&#xD;&#xA;						, set: setter&#xD;&#xA;						, enumerable: true&#xD;&#xA;						, configurable: true&#xD;&#xA;					});&#xD;&#xA;				}&#xD;&#xA;			}&#xD;&#xA;		});&#xD;&#xA;	}&#xD;&#xA;	 &#xD;&#xA;	// object.unwatch&#xD;&#xA;	if (!Object.prototype.unwatch) {&#xD;&#xA;		Object.defineProperty(Object.prototype, ""unwatch"", {&#xD;&#xA;			  enumerable: false&#xD;&#xA;			, configurable: true&#xD;&#xA;			, writable: false&#xD;&#xA;			, value: function (prop) {&#xD;&#xA;				var val = this[prop];&#xD;&#xA;				delete this[prop]; // remove accessors&#xD;&#xA;				this[prop] = val;&#xD;&#xA;			}&#xD;&#xA;		});&#xD;&#xA;	}"
8800888183290423112,44,5,"    public class ClientWala {&#xD;&#xA;    	&#xD;&#xA;    	public static void main(String[] args) throws Exception{&#xD;&#xA;    	&#xD;&#xA;    		Boolean b = true;&#xD;&#xA;    	Socket s = new Socket(""127.0.0.1"", 4444);&#xD;&#xA;       &#xD;&#xA;    	System.out.println(""connected: ""+s.isConnected());&#xD;&#xA;    	&#xD;&#xA;    	&#xD;&#xA;    	OutputStream output = s.getOutputStream();&#xD;&#xA;    	PrintWriter pw = new PrintWriter(output,true);&#xD;&#xA;    	&#xD;&#xA;    	// to write data to server&#xD;&#xA;    	while(b){&#xD;&#xA;    		&#xD;&#xA;    		if (!b){&#xD;&#xA;    			&#xD;&#xA;    		     System.exit(0);&#xD;&#xA;    		}&#xD;&#xA;    		&#xD;&#xA;    		else {&#xD;&#xA;    			pw.write(new Scanner(System.in).nextLine());&#xD;&#xA;    		}&#xD;&#xA;    	}&#xD;&#xA;    	&#xD;&#xA;    	&#xD;&#xA;    	// to read data from server&#xD;&#xA;    	InputStream input   = s.getInputStream();&#xD;&#xA;    	InputStreamReader isr = new InputStreamReader(input);&#xD;&#xA;    	BufferedReader br = new BufferedReader(isr);&#xD;&#xA;    	String data = null;&#xD;&#xA;    	&#xD;&#xA;    	while ((data = br.readLine())!=null){&#xD;&#xA;    		&#xD;&#xA;    		// Print it using sysout, or do whatever you want with the incoming data from server&#xD;&#xA;    		&#xD;&#xA;    	}&#xD;&#xA;    	&#xD;&#xA;    	&#xD;&#xA;    	&#xD;&#xA;    	&#xD;&#xA;    	}&#xD;&#xA;    }"
-8088230548019605440,44,5,"          <!--&#xD;&#xA;      var timeout         = 500;&#xD;&#xA;      var closetimer    = 0;&#xD;&#xA;      var ddmenuitem      = 0;&#xD;&#xA;    &#xD;&#xA;    // open hidden layer&#xD;&#xA;    function mopen(id)&#xD;&#xA;    { &#xD;&#xA;      // cancel close timer&#xD;&#xA;      mcancelclosetime();&#xD;&#xA;    &#xD;&#xA;      // close old layer&#xD;&#xA;      if(ddmenuitem) ddmenuitem.style.visibility = 'hidden';&#xD;&#xA;    &#xD;&#xA;      // get new layer and show it&#xD;&#xA;      ddmenuitem = document.getElementById(id);&#xD;&#xA;      ddmenuitem.style.visibility = 'visible';&#xD;&#xA;    &#xD;&#xA;    }&#xD;&#xA;    // close showed layer&#xD;&#xA;    function mclose()&#xD;&#xA;    {&#xD;&#xA;      if(ddmenuitem) ddmenuitem.style.visibility = 'hidden';&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    // go close timer&#xD;&#xA;    function mclosetime()&#xD;&#xA;    {&#xD;&#xA;      closetimer = window.setTimeout(mclose, timeout);&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    // cancel close timer&#xD;&#xA;    function mcancelclosetime()&#xD;&#xA;    {&#xD;&#xA;      if(closetimer)&#xD;&#xA;      {&#xD;&#xA;        window.clearTimeout(closetimer);&#xD;&#xA;        closetimer = null;&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    // close layer when click-out&#xD;&#xA;    document.onclick = mclose; &#xD;&#xA;    // -->"
7081788974001428331,44,5,"    jQuery(document).ready(function() {&#xD;&#xA;	&#xD;&#xA;	// define variables&#xD;&#xA;	var navOffset, scrollPos = 0;&#xD;&#xA;	&#xD;&#xA;	// add utility wrapper elements for positioning&#xD;&#xA;	jQuery(""nav"").wrap('<div class=""nav-placeholder""></div>');&#xD;&#xA;	jQuery(""nav"").wrapInner('<div class=""nav-inner""></div>');&#xD;&#xA;	jQuery("".nav-inner"").wrapInner('<div class=""nav-inner-most""></div>');&#xD;&#xA;	&#xD;&#xA;	// function to run on page load and window resize&#xD;&#xA;	function stickyUtility() {&#xD;&#xA;		&#xD;&#xA;		// only update navOffset if it is not currently using fixed position&#xD;&#xA;		if (!jQuery(""nav"").hasClass(""fixed"")) {&#xD;&#xA;			navOffset = jQuery(""nav"").offset().top;&#xD;&#xA;		}&#xD;&#xA;		&#xD;&#xA;		// apply matching height to nav wrapper div to avoid awkward content jumps&#xD;&#xA;		jQuery("".nav-placeholder"").height(jQuery(""nav"").outerHeight());&#xD;&#xA;		&#xD;&#xA;	} // end stickyUtility function&#xD;&#xA;	&#xD;&#xA;	// run on page load&#xD;&#xA;	stickyUtility();&#xD;&#xA;	&#xD;&#xA;	// run on window resize&#xD;&#xA;	jQuery(window).resize(function() {&#xD;&#xA;		stickyUtility();&#xD;&#xA;	});&#xD;&#xA;	&#xD;&#xA;	// run on scroll event&#xD;&#xA;	jQuery(window).scroll(function() {&#xD;&#xA;		&#xD;&#xA;		scrollPos = jQuery(window).scrollTop();&#xD;&#xA;		&#xD;&#xA;		if (scrollPos >= navOffset) {&#xD;&#xA;			jQuery(""nav"").addClass(""fixed"");&#xD;&#xA;		} else {&#xD;&#xA;			jQuery(""nav"").removeClass(""fixed"");&#xD;&#xA;		}&#xD;&#xA;		&#xD;&#xA;	});&#xD;&#xA;	"
-5520740637449057085,44,5,"    {&#xD;&#xA;	""name"": ""laravel/laravel"",&#xD;&#xA;	""description"": ""The Laravel Framework."",&#xD;&#xA;	""keywords"": [""framework"", ""laravel""],&#xD;&#xA;	""license"": ""MIT"",&#xD;&#xA;	""type"": ""project"",&#xD;&#xA;	""require"": {&#xD;&#xA;		""laravel/framework"": ""5.0.*"",&#xD;&#xA;	},&#xD;&#xA;	""require-dev"": {&#xD;&#xA;		""phpunit/phpunit"": ""~4.0"",&#xD;&#xA;		""phpspec/phpspec"": ""~2.1""&#xD;&#xA;	},&#xD;&#xA;	""autoload"": {&#xD;&#xA;		""classmap"": [&#xD;&#xA;			""database""&#xD;&#xA;		],&#xD;&#xA;		""psr-4"": {&#xD;&#xA;			""App\\"": ""app/""&#xD;&#xA;		}&#xD;&#xA;	},&#xD;&#xA;	""autoload-dev"": {&#xD;&#xA;		""classmap"": [&#xD;&#xA;			""tests/TestCase.php""&#xD;&#xA;		]&#xD;&#xA;	},&#xD;&#xA;	""scripts"": {&#xD;&#xA;		""post-install-cmd"": [&#xD;&#xA;			""php artisan clear-compiled"",&#xD;&#xA;			""php artisan optimize""&#xD;&#xA;		],&#xD;&#xA;		""post-update-cmd"": [&#xD;&#xA;			""php artisan clear-compiled"",&#xD;&#xA;			""php artisan optimize""&#xD;&#xA;		],&#xD;&#xA;		""post-create-project-cmd"": [&#xD;&#xA;			""php -r \""copy('.env.example', '.env');\"""",&#xD;&#xA;			""php artisan key:generate""&#xD;&#xA;		]&#xD;&#xA;	},&#xD;&#xA;	""config"": {&#xD;&#xA;		""preferred-install"": ""dist""&#xD;&#xA;	}&#xD;&#xA;    }"
-684082488094366903,44,5,"    import java.awt.*;&#xD;&#xA;    import javax.swing.*;&#xD;&#xA;    import javax.swing.plaf.*;&#xD;&#xA;    &#xD;&#xA;    public class TabbedPaneWithComponent&#xD;&#xA;    {&#xD;&#xA;    	private static void createAndShowUI()&#xD;&#xA;    	{&#xD;&#xA;    		JPanel panel = new JPanel();&#xD;&#xA;    		panel.setLayout( new OverlayLayout(panel) );&#xD;&#xA;    &#xD;&#xA;    		JTabbedPane tabbedPane = new JTabbedPane();&#xD;&#xA;    		tabbedPane.add(""1"", new JTextField(""one""));&#xD;&#xA;    		tabbedPane.add(""2"", new JTextField(""two""));&#xD;&#xA;    		tabbedPane.setAlignmentX(1.0f);&#xD;&#xA;    		tabbedPane.setAlignmentY(0.0f);&#xD;&#xA;    &#xD;&#xA;    		JCheckBox checkBox = new JCheckBox(""Check Me"");&#xD;&#xA;    		checkBox.setOpaque( false );&#xD;&#xA;    		checkBox.setAlignmentX(1.0f);&#xD;&#xA;    		checkBox.setAlignmentY(0.0f);&#xD;&#xA;    &#xD;&#xA;    		panel.add( checkBox );&#xD;&#xA;    		panel.add(tabbedPane);&#xD;&#xA;    &#xD;&#xA;    		JFrame frame = new JFrame(""TabbedPane With Component"");&#xD;&#xA;    		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;&#xA;    		frame.add( panel );&#xD;&#xA;    		frame.setLocationByPlatform( true );&#xD;&#xA;    		frame.setSize(400, 100);&#xD;&#xA;    		frame.setVisible( true );&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public static void main(String[] args)&#xD;&#xA;    	{&#xD;&#xA;    		EventQueue.invokeLater(new Runnable()&#xD;&#xA;    		{&#xD;&#xA;    			public void run()&#xD;&#xA;    			{&#xD;&#xA;    				createAndShowUI();&#xD;&#xA;    			}&#xD;&#xA;    		});&#xD;&#xA;    	}&#xD;&#xA;    }"
-8212534183976614256,44,5,"    Option Explicit&#xD;&#xA;    &#xD;&#xA;    Private Type LARGE_INTEGER&#xD;&#xA;        lowpart As Long&#xD;&#xA;        highpart As Long&#xD;&#xA;    End Type&#xD;&#xA;    &#xD;&#xA;    Private Declare Function QueryPerformanceCounter Lib ""kernel32"" (lpPerformanceCount As LARGE_INTEGER) As Long&#xD;&#xA;    Private Declare Function QueryPerformanceFrequency Lib ""kernel32"" (lpFrequency As LARGE_INTEGER) As Long&#xD;&#xA;    &#xD;&#xA;    Private m_CounterStart As LARGE_INTEGER&#xD;&#xA;    Private m_CounterEnd As LARGE_INTEGER&#xD;&#xA;    Private m_crFrequency As Double&#xD;&#xA;    &#xD;&#xA;    Private Const TWO_32 = 4294967296# ' = 256# * 256# * 256# * 256#&#xD;&#xA;    &#xD;&#xA;    Private Function LI2Double(LI As LARGE_INTEGER) As Double&#xD;&#xA;    Dim Low As Double&#xD;&#xA;        Low = LI.lowpart&#xD;&#xA;        If Low < 0 Then&#xD;&#xA;            Low = Low + TWO_32&#xD;&#xA;        End If&#xD;&#xA;        LI2Double = LI.highpart * TWO_32 + Low&#xD;&#xA;    End Function&#xD;&#xA;    &#xD;&#xA;    Private Sub Class_Initialize()&#xD;&#xA;        Dim PerfFrequency As LARGE_INTEGER&#xD;&#xA;        &#xD;&#xA;        QueryPerformanceFrequency PerfFrequency&#xD;&#xA;        m_crFrequency = LI2Double(PerfFrequency)&#xD;&#xA;    End Sub&#xD;&#xA;    &#xD;&#xA;    Public Sub StartCounter()&#xD;&#xA;        QueryPerformanceCounter m_CounterStart&#xD;&#xA;    End Sub&#xD;&#xA;    &#xD;&#xA;    Property Get TimeElapsed() As Double&#xD;&#xA;    Dim crStart As Double&#xD;&#xA;    Dim crStop As Double&#xD;&#xA;        QueryPerformanceCounter m_CounterEnd&#xD;&#xA;        crStart = LI2Double(m_CounterStart)&#xD;&#xA;        crStop = LI2Double(m_CounterEnd)&#xD;&#xA;        TimeElapsed = 1000# * (crStop - crStart) / m_crFrequency&#xD;&#xA;    End Property"
-4549631338714295664,45,5,"         public static boolean isMainActivityShown ;&#xD;&#xA;         public static boolean isFragment1Shown=false ;&#xD;&#xA;         public static boolean isFragment2Shown=false ;&#xD;&#xA;        @Override&#xD;&#xA;        protected void onCreate(Bundle savedInstanceState) {&#xD;&#xA;            super.onCreate(savedInstanceState);&#xD;&#xA;            isMainActivityShown=true  //inside onCreate method put isMainActivityShown true&#xD;&#xA;            . &#xD;&#xA;            . &#xD;&#xA;            .&#xD;&#xA;            {&#xD;&#xA;            Fragment currentFragment = new Fragment1();&#xD;&#xA;            isMainActivityShown=false;   //when moving to fragment1 &#xD;&#xA;            isFragment1Shown=true;&#xD;&#xA;            frgManager = getFragmentManager();&#xD;&#xA;            frgManager.beginTransaction().replace(R.id.content_frame, currentFragment)&#xD;&#xA;                                            .commit();&#xD;&#xA;            }&#xD;&#xA;            .&#xD;&#xA;            .&#xD;&#xA;            }&#xD;&#xA;         @Override&#xD;&#xA;            public void onBackPressed() {&#xD;&#xA;         &#xD;&#xA;                if(isMainActivityShown)&#xD;&#xA;                {&#xD;&#xA;                    finish();&#xD;&#xA;                }&#xD;&#xA;                else if(isFragment1Shown)&#xD;&#xA;                {&#xD;&#xA;                   //write the code to handle back button when you are in Fragment1&#xD;&#xA;                }&#xD;&#xA;               else if(isFragment2Shown)&#xD;&#xA;                {  //When you are in Fragment 2 pressing back button will move to fragment1&#xD;&#xA;                    Fragment currentFragment = new Fragment1();&#xD;&#xA;                    isFragment2Shown=false;&#xD;&#xA;                    isFragment1Shown=true;&#xD;&#xA;        &#xD;&#xA;                    FragmentManager frgManager;&#xD;&#xA;                    frgManager = getFragmentManager();&#xD;&#xA;                    frgManager.beginTransaction().replace(R.id.content_frame, currentFragment)&#xD;&#xA;                            .commit();&#xD;&#xA;                }&#xD;&#xA;                &#xD;&#xA;                }"
-7339073597056776585,45,5,"     public class ContactsWrapper {&#xD;&#xA;        &#xD;&#xA;        private long contactId;&#xD;&#xA;        private String displayName,displayNumber,lookUp;&#xD;&#xA;        public boolean checked = true;&#xD;&#xA;        int color_string;&#xD;&#xA;        &#xD;&#xA;        public ContactsWrapper(long contactId, String displayName, String displayNumber, String lookUp, boolean checked,int color_string) {&#xD;&#xA;            // TODO Auto-generated constructor stub&#xD;&#xA;            this.contactId = contactId;&#xD;&#xA;            this.displayName = displayName;&#xD;&#xA;            this.displayNumber = displayNumber;&#xD;&#xA;            this.lookUp = lookUp;&#xD;&#xA;            this.checked = checked;&#xD;&#xA;            this.color_string =color_string;&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        public String getLookUp() {&#xD;&#xA;            return lookUp;&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        public int getColor_string() {&#xD;&#xA;            return color_string;&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        public boolean isChecked() {&#xD;&#xA;            return checked;&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        public long getContactId() {&#xD;&#xA;            return contactId;&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        public String getDisplayName() {&#xD;&#xA;            return displayName;&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        public String getDisplayNumber() {&#xD;&#xA;            return displayNumber;&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        public void setChecked(boolean checked) {&#xD;&#xA;            this.checked = checked;&#xD;&#xA;        }&#xD;&#xA;        }"
4164830290195186171,45,5,"    Sub InsertInto()&#xD;&#xA;    &#xD;&#xA;    'Declare some variables&#xD;&#xA;    Dim cnn As adodb.Connection&#xD;&#xA;    Dim cmd As adodb.Command&#xD;&#xA;    Dim strSQL As String&#xD;&#xA;    &#xD;&#xA;    'Create a new Connection object&#xD;&#xA;    Set cnn = New adodb.Connection&#xD;&#xA;    &#xD;&#xA;    'Set the connection string&#xD;&#xA;    cnn.ConnectionString = ""Provider=SQLOLEDB.1;Integrated Security=SSPI;Persist Security Info=True;Initial Catalog=Northwind;Data Source=Excel-PC\SQLEXPRESS""&#xD;&#xA;    'cnn.ConnectionString = ""DRIVER=SQL Server;SERVER=Excel-PC\SQLEXPRESS;DATABASE=Northwind;Trusted_Connection=Yes""&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    'Create a new Command object&#xD;&#xA;    Set cmd = New adodb.Command&#xD;&#xA;    &#xD;&#xA;    'Open the Connection to the database&#xD;&#xA;    cnn.Open&#xD;&#xA;    &#xD;&#xA;    'Associate the command with the connection&#xD;&#xA;    cmd.ActiveConnection = cnn&#xD;&#xA;    &#xD;&#xA;    'Tell the Command we are giving it a bit of SQL to run, not a stored procedure&#xD;&#xA;    cmd.CommandType = adCmdText&#xD;&#xA;    &#xD;&#xA;    'Create the SQL&#xD;&#xA;    strSQL = ""UPDATE TBL SET JOIN_DT = '2013-01-22' WHERE EMPID = 2""&#xD;&#xA;    &#xD;&#xA;    'Pass the SQL to the Command object&#xD;&#xA;    cmd.CommandText = strSQL&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    'Execute the bit of SQL to update the database&#xD;&#xA;    cmd.Execute&#xD;&#xA;    &#xD;&#xA;    'Close the connection again&#xD;&#xA;    cnn.Close&#xD;&#xA;    &#xD;&#xA;    'Remove the objects&#xD;&#xA;    Set cmd = Nothing&#xD;&#xA;    Set cnn = Nothing&#xD;&#xA;    &#xD;&#xA;    End Sub"
6339235602410363994,45,5,"    //Add text to UIImage&#xD;&#xA;        -(UIImage *)addText:(UIImage *)img text:(NSString *)text1&#xD;&#xA;        {&#xD;&#xA;    &#xD;&#xA;        int w = img.size.width;&#xD;&#xA;    &#xD;&#xA;        int h = img.size.height; &#xD;&#xA;    &#xD;&#xA;        //lon = h - lon;&#xD;&#xA;    &#xD;&#xA;        CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();&#xD;&#xA;    &#xD;&#xA;        CGContextRef context = CGBitmapContextCreate(NULL, w, h, 8, 4 * w, colorSpace, kCGImageAlphaPremultipliedFirst);&#xD;&#xA;    &#xD;&#xA;        &#xD;&#xA;    &#xD;&#xA;        CGContextDrawImage(context, CGRectMake(0, 0, w, h), img.CGImage);&#xD;&#xA;    &#xD;&#xA;        CGContextSetRGBFillColor(context, 0.0, 0.0, 1.0, 1);&#xD;&#xA;    &#xD;&#xA;        char* text	= (char *)[text1 cStringUsingEncoding:NSASCIIStringEncoding];// ""05/05/09"";&#xD;&#xA;    &#xD;&#xA;        CGContextSelectFont(context, ""Arial"", 18, kCGEncodingMacRoman);&#xD;&#xA;    &#xD;&#xA;        CGContextSetTextDrawingMode(context, kCGTextFill);&#xD;&#xA;    &#xD;&#xA;        CGContextSetRGBFillColor(context, 255, 255, 255, 1);&#xD;&#xA;    &#xD;&#xA;     &#xD;&#xA;    &#xD;&#xA;        //rotate text&#xD;&#xA;    &#xD;&#xA;        CGContextSetTextMatrix(context, CGAffineTransformMakeRotation( -M_PI/4 ));&#xD;&#xA;    &#xD;&#xA;        CGContextShowTextAtPoint(context, 4, 52, text, strlen(text));&#xD;&#xA;    &#xD;&#xA;        CGImageRef imageMasked = CGBitmapContextCreateImage(context);&#xD;&#xA;    &#xD;&#xA;        CGContextRelease(context);&#xD;&#xA;    &#xD;&#xA;        CGColorSpaceRelease(colorSpace);&#xD;&#xA;    &#xD;&#xA;        return [UIImage imageWithCGImage:imageMasked];&#xD;&#xA;    &#xD;&#xA;        }"
7212461850433373,45,5,"    public static DataTable MergeAll(this IList<DataTable> tables, String   primaryKeyColumn)&#xD;&#xA;    {&#xD;&#xA;        if (!tables.Any())&#xD;&#xA;            throw new ArgumentException(""Tables must not be empty"", ""tables"");&#xD;&#xA;        if(primaryKeyColumn != null)&#xD;&#xA;            foreach(DataTable t in tables)&#xD;&#xA;                if(!t.Columns.Contains(primaryKeyColumn))&#xD;&#xA;                    throw new ArgumentException(""All tables must have the specified primarykey column "" + primaryKeyColumn, ""primaryKeyColumn"");&#xD;&#xA;        if(tables.Count == 1)&#xD;&#xA;            return tables[0];&#xD;&#xA;        DataTable table = new DataTable(""TblUnion"");&#xD;&#xA;        table.BeginLoadData(); // Turns off notifications, index maintenance, and constraints while loading data&#xD;&#xA;        foreach (DataTable t in tables)&#xD;&#xA;        {&#xD;&#xA;            table.Merge(t); // same as table.Merge(t, false, MissingSchemaAction.Add);&#xD;&#xA;        }&#xD;&#xA;        table.EndLoadData();&#xD;&#xA;        if (primaryKeyColumn != null)&#xD;&#xA;        {&#xD;&#xA;            // since we might have no real primary keys defined, the rows now might have repeating fields&#xD;&#xA;            // so now we're going to ""join"" these rows ...&#xD;&#xA;            var pkGroups = table.AsEnumerable()&#xD;&#xA;                .GroupBy(r => r[primaryKeyColumn]);&#xD;&#xA;            var dupGroups = pkGroups.Where(g => g.Count() > 1);&#xD;&#xA;            foreach (var grpDup in dupGroups)&#xD;&#xA;            { &#xD;&#xA;                // use first row and modify it&#xD;&#xA;                DataRow firstRow = grpDup.First();&#xD;&#xA;                foreach (DataColumn c in table.Columns)&#xD;&#xA;                {&#xD;&#xA;                    if (firstRow.IsNull(c))&#xD;&#xA;                    {&#xD;&#xA;                        DataRow firstNotNullRow =  grpDup.Skip(1).FirstOrDefault(r => !r.IsNull(c));&#xD;&#xA;                        if (firstNotNullRow != null)&#xD;&#xA;                            firstRow[c] = firstNotNullRow[c];&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;                // remove all but first row&#xD;&#xA;                var rowsToRemove = grpDup.Skip(1);&#xD;&#xA;                foreach(DataRow rowToRemove in rowsToRemove)&#xD;&#xA;                    table.Rows.Remove(rowToRemove);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        return table;&#xD;&#xA;    }"
-7454146080824061102,45,5,"      ko.bindingHandlers.dataTablesForEach = {&#xD;&#xA;        	page: 0,&#xD;&#xA;            init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {&#xD;&#xA;              var options = ko.unwrap(valueAccessor());&#xD;&#xA;              ko.unwrap(options.data);&#xD;&#xA;              if(options.dataTableOptions.paging){&#xD;&#xA;            	valueAccessor().data.subscribe(function (changes) {&#xD;&#xA;                	var table = $(element).closest('table').DataTable();&#xD;&#xA;                    ko.bindingHandlers.dataTablesForEach.page = table.page();&#xD;&#xA;                    table.destroy();&#xD;&#xA;                }, null, 'arrayChange');          &#xD;&#xA;              }&#xD;&#xA;                var nodes = Array.prototype.slice.call(element.childNodes, 0);&#xD;&#xA;                ko.utils.arrayForEach(nodes, function (node) {&#xD;&#xA;                	if (node && node.nodeType !== 1) {&#xD;&#xA;                    	node.parentNode.removeChild(node);	&#xD;&#xA;                    }&#xD;&#xA;                });&#xD;&#xA;                return ko.bindingHandlers.foreach.init(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext);&#xD;&#xA;            },&#xD;&#xA;            update: function (element, valueAccessor, allBindings, viewModel, bindingContext) {        &#xD;&#xA;                var options = ko.unwrap(valueAccessor()),&#xD;&#xA;                    key = 'DataTablesForEach_Initialized';&#xD;&#xA;                ko.unwrap(options.data);&#xD;&#xA;                var table;&#xD;&#xA;                if(!options.dataTableOptions.paging){&#xD;&#xA;                  table = $(element).closest('table').DataTable();&#xD;&#xA;                	table.destroy();&#xD;&#xA;                }&#xD;&#xA;                ko.bindingHandlers.foreach.update(element, valueAccessor, allBindings, viewModel, bindingContext);&#xD;&#xA;                table = $(element).closest('table').DataTable(options.dataTableOptions);&#xD;&#xA;                if (options.dataTableOptions.paging) {&#xD;&#xA;                   if (table.page.info().pages - ko.bindingHandlers.dataTablesForEach.page == 0) &#xD;&#xA;                       table.page(--ko.bindingHandlers.dataTablesForEach.page).draw(false);                &#xD;&#xA;                   else &#xD;&#xA;                       table.page(ko.bindingHandlers.dataTablesForEach.page).draw(false);                &#xD;&#xA;                }        &#xD;&#xA;                if (!ko.utils.domData.get(element, key) && (options.data || options.length))&#xD;&#xA;                    ko.utils.domData.set(element, key, true);&#xD;&#xA;                return { controlsDescendantBindings: true };&#xD;&#xA;            }&#xD;&#xA;        }; &#xD;&#xA;  &#xD;&#xA;    &#xD;&#xA;  "
-1130458606136333824,45,5,"    public class PlayListActivity extends ListActivity {&#xD;&#xA;	// Songs list&#xD;&#xA;	public ArrayList<HashMap<String, String>> songsList = new ArrayList<HashMap<String, String>>();&#xD;&#xA;	@Override&#xD;&#xA;	public void onCreate(Bundle savedInstanceState) {&#xD;&#xA;		super.onCreate(savedInstanceState);&#xD;&#xA;		setContentView(R.layout.playlist);&#xD;&#xA;		ArrayList<HashMap<String, String>> songsListData = new ArrayList<HashMap<String, String>>();&#xD;&#xA;		SongsManager plm = new SongsManager();&#xD;&#xA;		// get all songs from sdcard&#xD;&#xA;		this.songsList = plm.getPlayList();&#xD;&#xA;		// looping through playlist&#xD;&#xA;		for (int i = 0; i < songsList.size(); i++) {&#xD;&#xA;			// creating new HashMap&#xD;&#xA;			HashMap<String, String> song = songsList.get(i);&#xD;&#xA;			// adding HashList to ArrayList&#xD;&#xA;			songsListData.add(song);&#xD;&#xA;		}&#xD;&#xA;		// Adding menuItems to ListView&#xD;&#xA;		ListAdapter adapter = new SimpleAdapter(this, songsListData,&#xD;&#xA;				R.layout.playlist_item, new String[] { ""songTitle"" },&#xD;&#xA;				new int[] { R.id.songTitle });&#xD;&#xA;		setListAdapter(adapter);&#xD;&#xA;		// selecting single ListView item&#xD;&#xA;		ListView lv = getListView();&#xD;&#xA;		// listening to single listitem click&#xD;&#xA;		lv.setOnItemClickListener(new OnItemClickListener() {&#xD;&#xA;			@Override&#xD;&#xA;			public void onItemClick(AdapterView<?> parent, View view,&#xD;&#xA;					int position, long id) {&#xD;&#xA;				// getting listitem index&#xD;&#xA;				int songIndex = position;&#xD;&#xA;				// Starting new intent&#xD;&#xA;				Intent in = new Intent(getApplicationContext(),&#xD;&#xA;						AndroidBuildingMusicPlayerActivity.class);&#xD;&#xA;				// Sending songIndex to PlayerActivity&#xD;&#xA;				in.putExtra(""songIndex"", songIndex);&#xD;&#xA;				setResult(100, in);&#xD;&#xA;				// Closing PlayListView&#xD;&#xA;				finish();&#xD;&#xA;			}&#xD;&#xA;		});&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;}"
5582434226374448583,46,5,    public class Pizza {&#xD;&#xA;      private int size;&#xD;&#xA;      private boolean cheese;&#xD;&#xA;      private boolean pepperoni;&#xD;&#xA;      private boolean bacon;&#xD;&#xA;    &#xD;&#xA;      public static class Builder {&#xD;&#xA;        //required&#xD;&#xA;        private final int size;&#xD;&#xA;    &#xD;&#xA;        //optional&#xD;&#xA;        private boolean cheese = false;&#xD;&#xA;        private boolean pepperoni = false;&#xD;&#xA;        private boolean bacon = false;&#xD;&#xA;    &#xD;&#xA;        public Builder(int size) {&#xD;&#xA;          this.size = size;&#xD;&#xA;        }&#xD;&#xA;      &#xD;&#xA;        public Builder cheese(boolean value) {&#xD;&#xA;          cheese = value;&#xD;&#xA;          return this;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public Builder pepperoni(boolean value) {&#xD;&#xA;          pepperoni = value;&#xD;&#xA;          return this;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public Builder bacon(boolean value) {&#xD;&#xA;          bacon = value;&#xD;&#xA;          return this;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public Pizza build() {&#xD;&#xA;          return new Pizza(this);&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;    &#xD;&#xA;      private Pizza(Builder builder) {&#xD;&#xA;        size = builder.size;&#xD;&#xA;        cheese = builder.cheese;&#xD;&#xA;        pepperoni = builder.pepperoni;&#xD;&#xA;        bacon = builder.bacon;&#xD;&#xA;      }&#xD;&#xA;    }
7300732857516991267,46,5,"    package my.app;&#xD;&#xA;    import android.graphics.Paint;&#xD;&#xA;    import android.graphics.Typeface;&#xD;&#xA;    import android.text.TextPaint;&#xD;&#xA;    import android.text.style.TypefaceSpan;&#xD;&#xA;    &#xD;&#xA;    public class CustomTypefaceSpan extends TypefaceSpan {&#xD;&#xA;    &#xD;&#xA;        private final Typeface newType;&#xD;&#xA;    &#xD;&#xA;        public CustomTypefaceSpan(String family, Typeface type) {&#xD;&#xA;            super(family);&#xD;&#xA;            newType = type;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void updateDrawState(TextPaint ds) {&#xD;&#xA;            applyCustomTypeFace(ds, newType);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void updateMeasureState(TextPaint paint) {&#xD;&#xA;            applyCustomTypeFace(paint, newType);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private static void applyCustomTypeFace(Paint paint, Typeface tf) {&#xD;&#xA;            int oldStyle;&#xD;&#xA;            Typeface old = paint.getTypeface();&#xD;&#xA;            if (old == null) {&#xD;&#xA;                oldStyle = 0;&#xD;&#xA;            } else {&#xD;&#xA;                oldStyle = old.getStyle();&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            int fake = oldStyle & ~tf.getStyle();&#xD;&#xA;            if ((fake & Typeface.BOLD) != 0) {&#xD;&#xA;                paint.setFakeBoldText(true);&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            if ((fake & Typeface.ITALIC) != 0) {&#xD;&#xA;                paint.setTextSkewX(-0.25f);&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            paint.setTypeface(tf);&#xD;&#xA;        }&#xD;&#xA;    }"
-6718037721949328210,46,5,"    class DeviseCreateUsers < ActiveRecord::Migration&#xD;&#xA;      def change&#xD;&#xA;        create_table(:users) do |t|&#xD;&#xA;          ## Database authenticatable&#xD;&#xA;          t.string :email,              :null => false, :default => """"&#xD;&#xA;          t.string :encrypted_password, :null => false, :default => """"&#xD;&#xA;    &#xD;&#xA;          ## Recoverable&#xD;&#xA;          t.string   :reset_password_token&#xD;&#xA;          t.datetime :reset_password_sent_at&#xD;&#xA;    &#xD;&#xA;          ## Rememberable&#xD;&#xA;          t.datetime :remember_created_at&#xD;&#xA;    &#xD;&#xA;          ## Trackable&#xD;&#xA;          t.integer  :sign_in_count, :default => 0&#xD;&#xA;          t.datetime :current_sign_in_at&#xD;&#xA;          t.datetime :last_sign_in_at&#xD;&#xA;          t.string   :current_sign_in_ip&#xD;&#xA;          t.string   :last_sign_in_ip&#xD;&#xA;    &#xD;&#xA;          ## Confirmable&#xD;&#xA;          # t.string   :confirmation_token&#xD;&#xA;          # t.datetime :confirmed_at&#xD;&#xA;          # t.datetime :confirmation_sent_at&#xD;&#xA;          # t.string   :unconfirmed_email # Only if using reconfirmable&#xD;&#xA;    &#xD;&#xA;          ## Lockable&#xD;&#xA;          # t.integer  :failed_attempts, :default => 0 # Only if lock strategy is :failed_attempts&#xD;&#xA;          # t.string   :unlock_token # Only if unlock strategy is :email or :both&#xD;&#xA;          # t.datetime :locked_at&#xD;&#xA;    &#xD;&#xA;          ## Token authenticatable&#xD;&#xA;          # t.string :authentication_token&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;          t.timestamps&#xD;&#xA;        end&#xD;&#xA;    &#xD;&#xA;        add_index :users, :email,                :unique => true&#xD;&#xA;        add_index :users, :reset_password_token, :unique => true&#xD;&#xA;        # add_index :users, :confirmation_token,   :unique => true&#xD;&#xA;        # add_index :users, :unlock_token,         :unique => true&#xD;&#xA;        # add_index :users, :authentication_token, :unique => true&#xD;&#xA;      end&#xD;&#xA;    end"
3257298038383163839,46,5,"            function SetCookie (name, value) {&#xD;&#xA;     var argv=SetCookie.arguments;&#xD;&#xA;      var argc=SetCookie.arguments.length;&#xD;&#xA;     var expires=(argc > 2) ? argv[2] : null;&#xD;&#xA;      var path=(argc > 3) ? argv[3] : null;&#xD;&#xA;     var domain=(argc > 4) ? argv[4] : null;&#xD;&#xA;     var secure=(argc > 5) ? argv[5] : false;&#xD;&#xA;     document.cookie=name+""=""+escape(value)+&#xD;&#xA;    ((expires==null) ? """" : (""; expires=""+expires.toGMTString()))+&#xD;&#xA;    ((path==null) ? """" : (""; path=""+path))+&#xD;&#xA;    ((domain==null) ? """" : (""; domain=""+domain))+&#xD;&#xA;    ((secure==true) ? ""; secure"" : """");&#xD;&#xA;     }&#xD;&#xA;     function getCookie(c_name)&#xD;&#xA;     {&#xD;&#xA;    var c_value = document.cookie;&#xD;&#xA;    var c_start = c_value.indexOf("" "" + c_name + ""="");&#xD;&#xA;    if (c_start == -1)&#xD;&#xA;    {&#xD;&#xA;        c_start = c_value.indexOf(c_name + ""="");&#xD;&#xA;    }&#xD;&#xA;    if (c_start == -1)&#xD;&#xA;    {&#xD;&#xA;        c_value = null;&#xD;&#xA;    }&#xD;&#xA;    else&#xD;&#xA;    {&#xD;&#xA;        c_start = c_value.indexOf(""="", c_start) + 1;&#xD;&#xA;        var c_end = c_value.indexOf("";"", c_start);&#xD;&#xA;        if (c_end == -1)&#xD;&#xA;        {&#xD;&#xA;            c_end = c_value.length;&#xD;&#xA;        }&#xD;&#xA;        c_value = unescape(c_value.substring(c_start,c_end));&#xD;&#xA;    }&#xD;&#xA;    return c_value;&#xD;&#xA;     }   &#xD;&#xA;     if (getCookie('first_load'))        &#xD;&#xA;    {&#xD;&#xA;    if (getCookie('first_load')==true)&#xD;&#xA;    {&#xD;&#xA;        window.location.reload(true); // force refresh page-liste&#xD;&#xA;        SetCookie(""first_load"",false);&#xD;&#xA;    }&#xD;&#xA;    }&#xD;&#xA;     SetCookie(""first_load"",true);"
5206663166702441949,46,5,"    #import ""OrientationEnabledNavigation.h""&#xD;&#xA;    &#xD;&#xA;    @interface OrientationEnabledNavigation ()&#xD;&#xA;    &#xD;&#xA;    @end&#xD;&#xA;    &#xD;&#xA;    @implementation OrientationEnabledNavigation&#xD;&#xA;    &#xD;&#xA;    - (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil&#xD;&#xA;    {&#xD;&#xA;        self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];&#xD;&#xA;        if (self) {&#xD;&#xA;            // Custom initialization&#xD;&#xA;        }&#xD;&#xA;        return self;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    - (void)viewDidLoad&#xD;&#xA;    {&#xD;&#xA;        [super viewDidLoad];&#xD;&#xA;    	// Do any additional setup after loading the view.&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    - (BOOL)shouldAutorotate&#xD;&#xA;    {&#xD;&#xA;        return [self.topViewController shouldAutorotate];&#xD;&#xA;    //    return NO;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    - (NSUInteger)supportedInterfaceOrientations&#xD;&#xA;    {&#xD;&#xA;        return [self.topViewController supportedInterfaceOrientations];&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    - (UIInterfaceOrientation)preferredInterfaceOrientationForPresentation&#xD;&#xA;    {&#xD;&#xA;        return [self.topViewController preferredInterfaceOrientationForPresentation];&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    - (void)didReceiveMemoryWarning&#xD;&#xA;    {&#xD;&#xA;        [super didReceiveMemoryWarning];&#xD;&#xA;        // Dispose of any resources that can be recreated.&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    @end"
3307585437984286564,46,5,"    var myModule = angular.module('myModule', []);&#xD;&#xA;    myModule.factory('mySharedService', function($rootScope) {&#xD;&#xA;        var sharedService = {};&#xD;&#xA;        &#xD;&#xA;        sharedService.message = '';&#xD;&#xA;    &#xD;&#xA;        sharedService.prepForBroadcast = function(msg) {&#xD;&#xA;            this.message = msg;&#xD;&#xA;            this.broadcastItem();&#xD;&#xA;        };&#xD;&#xA;    &#xD;&#xA;        sharedService.broadcastItem = function() {&#xD;&#xA;            $rootScope.$broadcast('handleBroadcast');&#xD;&#xA;        };&#xD;&#xA;    &#xD;&#xA;        return sharedService;&#xD;&#xA;    });&#xD;&#xA;    &#xD;&#xA;    function ControllerZero($scope, sharedService) {&#xD;&#xA;        $scope.handleClick = function(msg) {&#xD;&#xA;            sharedService.prepForBroadcast(msg);&#xD;&#xA;        };&#xD;&#xA;            &#xD;&#xA;        $scope.$on('handleBroadcast', function() {&#xD;&#xA;            $scope.message = sharedService.message;&#xD;&#xA;        });        &#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    function ControllerOne($scope, sharedService) {&#xD;&#xA;        $scope.$on('handleBroadcast', function() {&#xD;&#xA;            $scope.message = 'ONE: ' + sharedService.message;&#xD;&#xA;        });        &#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    function ControllerTwo($scope, sharedService) {&#xD;&#xA;        $scope.$on('handleBroadcast', function() {&#xD;&#xA;            $scope.message = 'TWO: ' + sharedService.message;&#xD;&#xA;        });&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    ControllerZero.$inject = ['$scope', 'mySharedService'];        &#xD;&#xA;            &#xD;&#xA;    ControllerOne.$inject = ['$scope', 'mySharedService'];&#xD;&#xA;    &#xD;&#xA;    ControllerTwo.$inject = ['$scope', 'mySharedService'];&#xD;&#xA;   "
6795664976140165844,46,5,    Unit One&#xD;&#xA;    4&#xD;&#xA;    32 8&#xD;&#xA;    38 6&#xD;&#xA;    38 6&#xD;&#xA;    16 7&#xD;&#xA;    Unit Two&#xD;&#xA;    0&#xD;&#xA;    Unit Three&#xD;&#xA;    2&#xD;&#xA;    36 7&#xD;&#xA;    36 7&#xD;&#xA;    Unit Four&#xD;&#xA;    6&#xD;&#xA;    32 6.5&#xD;&#xA;    32 6.5&#xD;&#xA;    36 6.5&#xD;&#xA;    36 6.5&#xD;&#xA;    38 6.5&#xD;&#xA;    38 6.5&#xD;&#xA;    Unit Five&#xD;&#xA;    4&#xD;&#xA;    32 6.5&#xD;&#xA;    32 8&#xD;&#xA;    32 7&#xD;&#xA;    32 8&#xD;&#xA;    Unit Six&#xD;&#xA;    5&#xD;&#xA;    38 7&#xD;&#xA;    30 6.5&#xD;&#xA;    24 8&#xD;&#xA;    24 8&#xD;&#xA;    24 8&#xD;&#xA;    Unit Seven&#xD;&#xA;    0&#xD;&#xA;    &#xD;&#xA;    Unit Eight&#xD;&#xA;    1&#xD;&#xA;    40 12&#xD;&#xA;    Unit Nine&#xD;&#xA;    5&#xD;&#xA;    24 8&#xD;&#xA;    24 6.5&#xD;&#xA;    30 6.5&#xD;&#xA;    24 7&#xD;&#xA;    32 7
2888000316185205065,47,5,"        /// <summary>&#xD;&#xA;        /// Starts the given tasks and waits for them to complete. This will run, at most, the specified number of tasks in parallel.&#xD;&#xA;        /// <para>NOTE: If one of the given tasks has already been started, an exception will be thrown.</para>&#xD;&#xA;        /// </summary>&#xD;&#xA;        /// <param name=""tasksToRun"">The tasks to run.</param>&#xD;&#xA;        /// <param name=""maxTasksToRunInParallel"">The maximum number of tasks to run in parallel.</param>&#xD;&#xA;        /// <param name=""cancellationToken"">The cancellation token.</param>&#xD;&#xA;        public static void StartAndWaitAllThrottled(IEnumerable<Task> tasksToRun, int maxTasksToRunInParallel, CancellationToken cancellationToken = new CancellationToken())&#xD;&#xA;        {&#xD;&#xA;            StartAndWaitAllThrottled(tasksToRun, maxTasksToRunInParallel, -1, cancellationToken);&#xD;&#xA;        }&#xD;&#xA; &#xD;&#xA;        /// <summary>&#xD;&#xA;        /// Starts the given tasks and waits for them to complete. This will run, at most, the specified number of tasks in parallel.&#xD;&#xA;        /// <para>NOTE: If one of the given tasks has already been started, an exception will be thrown.</para>&#xD;&#xA;        /// </summary>&#xD;&#xA;        /// <param name=""tasksToRun"">The tasks to run.</param>&#xD;&#xA;        /// <param name=""maxTasksToRunInParallel"">The maximum number of tasks to run in parallel.</param>&#xD;&#xA;        /// <param name=""timeoutInMilliseconds"">The maximum milliseconds we should allow the max tasks to run in parallel before allowing another task to start. Specify -1 to wait indefinitely.</param>&#xD;&#xA;        /// <param name=""cancellationToken"">The cancellation token.</param>&#xD;&#xA;        public static void StartAndWaitAllThrottled(IEnumerable<Task> tasksToRun, int maxTasksToRunInParallel, int timeoutInMilliseconds, CancellationToken cancellationToken = new CancellationToken())&#xD;&#xA;        {&#xD;&#xA;            // Convert to a list of tasks so that we don&#39;t enumerate over it multiple times needlessly.&#xD;&#xA;            var tasks = tasksToRun.ToList();&#xD;&#xA; &#xD;&#xA;            using (var throttler = new SemaphoreSlim(maxTasksToRunInParallel))&#xD;&#xA;            {&#xD;&#xA;                var postTaskTasks = new List<Task>();&#xD;&#xA; &#xD;&#xA;                // Have each task notify the throttler when it completes so that it decrements the number of tasks currently running.&#xD;&#xA;                tasks.ForEach(t => postTaskTasks.Add(t.ContinueWith(tsk => throttler.Release())));&#xD;&#xA; &#xD;&#xA;                // Start running each task.&#xD;&#xA;                foreach (var task in tasks)&#xD;&#xA;                {&#xD;&#xA;                    // Increment the number of tasks currently running and wait if too many are running.&#xD;&#xA;                    throttler.Wait(timeoutInMilliseconds, cancellationToken);&#xD;&#xA; &#xD;&#xA;                    cancellationToken.ThrowIfCancellationRequested();&#xD;&#xA;                    task.Start();&#xD;&#xA;                }&#xD;&#xA; &#xD;&#xA;                // Wait for all of the provided tasks to complete.&#xD;&#xA;                // We wait on the list of ""post"" tasks instead of the original tasks, otherwise there is a potential race condition where the throttler&#39;s using block is exited before some Tasks have had their ""post"" action completed, which references the throttler, resulting in an exception due to accessing a disposed object.&#xD;&#xA;                Task.WaitAll(postTaskTasks.ToArray(), cancellationToken);&#xD;&#xA;            }&#xD;&#xA;        }"
-3796903343839211530,47,5,	# Blender3D v249 OBJ File: untitled.blend&#xD;&#xA;	# www.blender3d.org&#xD;&#xA;	mtllib cube.mtl&#xD;&#xA;	v 1.000000 -1.000000 -1.000000&#xD;&#xA;	v 1.000000 -1.000000 1.000000&#xD;&#xA;	v -1.000000 -1.000000 1.000000&#xD;&#xA;	v -1.000000 -1.000000 -1.000000&#xD;&#xA;	v 1.000000 1.000000 -1.000000&#xD;&#xA;	v 0.999999 1.000000 1.000001&#xD;&#xA;	v -1.000000 1.000000 1.000000&#xD;&#xA;	v -1.000000 1.000000 -1.000000&#xD;&#xA;	vt 0.748573 0.750412&#xD;&#xA;	vt 0.749279 0.501284&#xD;&#xA;	vt 0.999110 0.501077&#xD;&#xA;	vt 0.999455 0.750380&#xD;&#xA;	vt 0.250471 0.500702&#xD;&#xA;	vt 0.249682 0.749677&#xD;&#xA;	vt 0.001085 0.750380&#xD;&#xA;	vt 0.001517 0.499994&#xD;&#xA;	vt 0.499422 0.500239&#xD;&#xA;	vt 0.500149 0.750166&#xD;&#xA;	vt 0.748355 0.998230&#xD;&#xA;	vt 0.500193 0.998728&#xD;&#xA;	vt 0.498993 0.250415&#xD;&#xA;	vt 0.748953 0.250920&#xD;&#xA;	vn 0.000000 0.000000 -1.000000&#xD;&#xA;	vn -1.000000 -0.000000 -0.000000&#xD;&#xA;	vn -0.000000 -0.000000 1.000000&#xD;&#xA;	vn -0.000001 0.000000 1.000000&#xD;&#xA;	vn 1.000000 -0.000000 0.000000&#xD;&#xA;	vn 1.000000 0.000000 0.000001&#xD;&#xA;	vn 0.000000 1.000000 -0.000000&#xD;&#xA;	vn -0.000000 -1.000000 0.000000&#xD;&#xA;	usemtl Material_ray.png&#xD;&#xA;	s off&#xD;&#xA;	f 5/1/1 1/2/1 4/3/1&#xD;&#xA;	f 5/1/1 4/3/1 8/4/1&#xD;&#xA;	f 3/5/2 7/6/2 8/7/2&#xD;&#xA;	f 3/5/2 8/7/2 4/8/2&#xD;&#xA;	f 2/9/3 6/10/3 3/5/3&#xD;&#xA;	f 6/10/4 7/6/4 3/5/4&#xD;&#xA;	f 1/2/5 5/1/5 2/9/5&#xD;&#xA;	f 5/1/6 6/10/6 2/9/6&#xD;&#xA;	f 5/1/7 8/11/7 6/10/7&#xD;&#xA;	f 8/11/7 7/12/7 6/10/7&#xD;&#xA;	f 1/2/8 2/9/8 3/13/8&#xD;&#xA;	f 1/2/8 3/13/8 4/14/8
-7568506451591210953,47,5,    <events>&#xD;&#xA;        <sales_quote_save_before> <!-- Event Called Before Quote Object is saved -->&#xD;&#xA;            <observers>&#xD;&#xA;                <save_before>&#xD;&#xA;                    <type>singleton</type>&#xD;&#xA;                    <class>Excellence_Custom_Model_Observer</class> <!-- Over Model Class -->&#xD;&#xA;                    <method>saveQuoteBefore</method> <!-- name of function -->&#xD;&#xA;                </save_before>&#xD;&#xA;            </observers>&#xD;&#xA;        </sales_quote_save_before>&#xD;&#xA;        <sales_quote_save_after> <!-- Event called After Quote Object is saved -->&#xD;&#xA;            <observers>&#xD;&#xA;                <save_after>&#xD;&#xA;                    <type>singleton</type>&#xD;&#xA;                    <class>Excellence_Custom_Model_Observer</class> <!-- Over Model Class -->&#xD;&#xA;                    <method>saveQuoteAfter</method> <!-- name of function -->&#xD;&#xA;                </save_after>&#xD;&#xA;            </observers>&#xD;&#xA;        </sales_quote_save_after>&#xD;&#xA;        <sales_quote_load_after> <!-- Event called when Quote Object is loaded -->&#xD;&#xA;            <observers>&#xD;&#xA;                <load_after>&#xD;&#xA;                    <type>singleton</type>&#xD;&#xA;                    <class>Excellence_Custom_Model_Observer</class> <!-- Over Model Class -->&#xD;&#xA;                    <method>loadQuoteAfter</method> <!-- name of function -->&#xD;&#xA;                </load_after>&#xD;&#xA;            </observers>&#xD;&#xA;        </sales_quote_load_after>&#xD;&#xA;        <sales_model_service_quote_submit_after> <!-- Event called after order placed -->&#xD;&#xA;            <observers>&#xD;&#xA;                <sales_model_service_quote_submit_after>&#xD;&#xA;                    <type>singleton</type>&#xD;&#xA;                    <class>Excellence_Custom_Model_Observer</class> <!-- Over Model Class -->&#xD;&#xA;                    <method>saveOrderAfter</method> <!-- name of function -->&#xD;&#xA;                </sales_model_service_quote_submit_after>&#xD;&#xA;            </observers>&#xD;&#xA;        </sales_model_service_quote_submit_after>&#xD;&#xA;        <sales_order_load_after> <!-- Event called after Order Object is loaded -->&#xD;&#xA;            <observers>&#xD;&#xA;                <sales_order_load_after>&#xD;&#xA;                    <type>singleton</type>&#xD;&#xA;                    <class>Excellence_Custom_Model_Observer</class> <!-- Over Model Class -->&#xD;&#xA;                    <method>loadOrderAfter</method> <!-- name of function -->&#xD;&#xA;                </sales_order_load_after>&#xD;&#xA;            </observers>&#xD;&#xA;        </sales_order_load_after>&#xD;&#xA;    </events>
-6110592690985901116,47,5,"        <script type=""text/javascript"">&#xD;&#xA;        //<![CDATA[&#xD;&#xA;            var productAddToCartForm = new VarienForm('product_addtocart_form');&#xD;&#xA;            productAddToCartForm.submit = function(button, url) {&#xD;&#xA;                if (this.validator.validate()) {&#xD;&#xA;                    var form = this.form;&#xD;&#xA;                    var oldUrl = form.action;&#xD;&#xA;                    if (url) {&#xD;&#xA;                       form.action = url;&#xD;&#xA;                    }&#xD;&#xA;                    var e = null;&#xD;&#xA;                    try {&#xD;&#xA;                        this.form.submit();&#xD;&#xA;                    } catch (e) {&#xD;&#xA;                    }&#xD;&#xA;                    this.form.action = oldUrl;&#xD;&#xA;                    if (e) {&#xD;&#xA;                        throw e;&#xD;&#xA;                    }&#xD;&#xA;                    if (button && button != 'undefined') {&#xD;&#xA;                        button.disabled = true;&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;            }.bind(productAddToCartForm);&#xD;&#xA;            productAddToCartForm.submitLight = function(button, url){&#xD;&#xA;                if(this.validator) {&#xD;&#xA;                    var nv = Validation.methods;&#xD;&#xA;                    delete Validation.methods['required-entry'];&#xD;&#xA;                    delete Validation.methods['validate-one-required'];&#xD;&#xA;                    delete Validation.methods['validate-one-required-by-name'];&#xD;&#xA;                    // Remove custom datetime validators&#xD;&#xA;                    for (var methodName in Validation.methods) {&#xD;&#xA;                        if (methodName.match(/^validate-datetime-.*/i)) {&#xD;&#xA;                            delete Validation.methods[methodName];&#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;                    if (this.validator.validate()) {&#xD;&#xA;                        if (url) {&#xD;&#xA;                            this.form.action = url;&#xD;&#xA;                        }&#xD;&#xA;                        this.form.submit();&#xD;&#xA;                    }&#xD;&#xA;                    Object.extend(Validation.methods, nv);&#xD;&#xA;                }&#xD;&#xA;            }.bind(productAddToCartForm);&#xD;&#xA;        //]]>&#xD;&#xA;        </script>"
9035380677464758126,48,5,"        public static void SetFontSize(RichTextBox target, double value)&#xD;&#xA;        {&#xD;&#xA;            // Make sure we have a richtextbox.&#xD;&#xA;            if (target == null)&#xD;&#xA;                return;&#xD;&#xA;            // Make sure we have a selection. Should have one even if there is no text selected.&#xD;&#xA;            if (target.Selection != null)&#xD;&#xA;            {&#xD;&#xA;                // Check whether there is text selected or just sitting at cursor&#xD;&#xA;                if (target.Selection.IsEmpty)&#xD;&#xA;                {&#xD;&#xA;                    // Check to see if we are at the start of the textbox and nothing has been added yet&#xD;&#xA;                    if (target.Selection.Start.Paragraph == null)&#xD;&#xA;                    {&#xD;&#xA;                        // Add a new paragraph object to the richtextbox with the fontsize&#xD;&#xA;                        Paragraph p = new Paragraph();&#xD;&#xA;                        p.FontSize = value;&#xD;&#xA;                        target.Document.Blocks.Add(p);&#xD;&#xA;                    }&#xD;&#xA;                    else&#xD;&#xA;                    {&#xD;&#xA;                        // Get current position of cursor&#xD;&#xA;                        TextPointer curCaret = target.CaretPosition;&#xD;&#xA;                        // Get the current block object that the cursor is in&#xD;&#xA;                        Block curBlock = target.Document.Blocks.Where&#xD;&#xA;                            (x => x.ContentStart.CompareTo(curCaret) == -1 && x.ContentEnd.CompareTo(curCaret) == 1).FirstOrDefault();&#xD;&#xA;                        if (curBlock != null)&#xD;&#xA;                        {&#xD;&#xA;                            Paragraph curParagraph = curBlock as Paragraph;&#xD;&#xA;                            // Create a new run object with the fontsize, and add it to the current block&#xD;&#xA;                            Run newRun = new Run();&#xD;&#xA;                            newRun.FontSize = value;&#xD;&#xA;                            curParagraph.Inlines.Add(newRun);&#xD;&#xA;                            // Reset the cursor into the new block. &#xD;&#xA;                            // If we don't do this, the font size will default again when you start typing.&#xD;&#xA;                            target.CaretPosition = newRun.ElementStart;&#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;                else // There is selected text, so change the fontsize of the selection&#xD;&#xA;                {&#xD;&#xA;                    TextRange selectionTextRange = new TextRange(target.Selection.Start, target.Selection.End);&#xD;&#xA;                    selectionTextRange.ApplyPropertyValue(TextElement.FontSizeProperty, value);&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;            // Reset the focus onto the richtextbox after selecting the font in a toolbar etc&#xD;&#xA;            target.Focus();&#xD;&#xA;        }"
-4017638730408297936,48,5,"    import java.awt.*;&#xD;&#xA;    import java.awt.event.*;&#xD;&#xA;    import java.util.*;&#xD;&#xA;    import javax.swing.*;&#xD;&#xA;    import javax.swing.Timer;&#xD;&#xA;    &#xD;&#xA;    public class TimerTime extends JPanel implements ActionListener&#xD;&#xA;    {&#xD;&#xA;    	private JLabel timeLabel;&#xD;&#xA;    &#xD;&#xA;    	public TimerTime()&#xD;&#xA;    	{&#xD;&#xA;    		timeLabel = new JLabel( new Date().toString() );&#xD;&#xA;    		add( timeLabel );&#xD;&#xA;    &#xD;&#xA;    		Timer timer = new Timer(1000, this);&#xD;&#xA;    		timer.setInitialDelay(1);&#xD;&#xA;    		timer.start();&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	@Override&#xD;&#xA;    	public void actionPerformed(ActionEvent e)&#xD;&#xA;    	{&#xD;&#xA;    		//System.out.println(e.getSource());&#xD;&#xA;    		timeLabel.setText( new Date().toString() );&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	private static void createAndShowUI()&#xD;&#xA;    	{&#xD;&#xA;    		JFrame frame = new JFrame(""TimerTime"");&#xD;&#xA;    		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;&#xA;    		frame.add( new TimerTime() );&#xD;&#xA;    		frame.setLocationByPlatform( true );&#xD;&#xA;    		frame.pack();&#xD;&#xA;    		frame.setVisible( true );&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public static void main(String[] args)&#xD;&#xA;    	{&#xD;&#xA;    		EventQueue.invokeLater(new Runnable()&#xD;&#xA;    		{&#xD;&#xA;    			public void run()&#xD;&#xA;    			{&#xD;&#xA;    				createAndShowUI();&#xD;&#xA;    			}&#xD;&#xA;    		});&#xD;&#xA;    	}&#xD;&#xA;    }"
6108429274627718710,48,5,"     public class ItemsList extends ListActivity {&#xD;&#xA;        &#xD;&#xA;        private ItemsAdapter adapter;&#xD;&#xA;        &#xD;&#xA;        @Override&#xD;&#xA;        protected void onCreate(Bundle savedInstanceState) {&#xD;&#xA;            super.onCreate(savedInstanceState);&#xD;&#xA;        &#xD;&#xA;            setContentView(R.layout.items_list);&#xD;&#xA;        &#xD;&#xA;            this.adapter = new ItemsAdapter(this, R.layout.items_list_item, ItemManager.getLoadedItems());&#xD;&#xA;            setListAdapter(this.adapter);&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        private class ItemsAdapter extends ArrayAdapter<Item> {&#xD;&#xA;        &#xD;&#xA;            private Item[] items;&#xD;&#xA;        &#xD;&#xA;            public ItemsAdapter(Context context, int textViewResourceId, Item[] items) {&#xD;&#xA;                super(context, textViewResourceId, items);&#xD;&#xA;                this.items = items;&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            @Override&#xD;&#xA;            public View getView(int position, View convertView, ViewGroup parent) {&#xD;&#xA;                View v = convertView;&#xD;&#xA;                if (v == null) {&#xD;&#xA;                    LayoutInflater vi = (LayoutInflater)getSystemService(Context.LAYOUT_INFLATER_SERVICE);&#xD;&#xA;                    v = vi.inflate(R.layout.items_list_item, null);&#xD;&#xA;                }&#xD;&#xA;        &#xD;&#xA;                Item it = items[position];&#xD;&#xA;                if (it != null) {&#xD;&#xA;         ImageView iv = (ImageView) v.findViewById(R.id.list_item_image);&#xD;&#xA;                    if (iv != null) {&#xD;&#xA;                        iv.setImageDrawable(it.getImage());&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;        &#xD;&#xA;                return v;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        @Override&#xD;&#xA;        protected void onListItemClick(ListView l, View v, int position, long id) {&#xD;&#xA;            this.adapter.getItem(position).click(this.getApplicationContext());&#xD;&#xA;        }&#xD;&#xA;        }"
-732970757702062767,49,5,"        public static void CreateMessageWithAttachment(string server)&#xD;&#xA;		{&#xD;&#xA;			// Specify the file to be attached and sent. &#xD;&#xA;			// This example assumes that a file named Data.xls exists in the &#xD;&#xA;			// current working directory. &#xD;&#xA;			string file = ""data.xls"";&#xD;&#xA;			// Create a message and set up the recipients.&#xD;&#xA;			MailMessage message = new MailMessage(&#xD;&#xA;			   ""jane@contoso.com"",&#xD;&#xA;			   ""ben@contoso.com"",&#xD;&#xA;			   ""Quarterly data report."",&#xD;&#xA;			   ""See the attached spreadsheet."");&#xD;&#xA;			// Create  the file attachment for this e-mail message.&#xD;&#xA;			Attachment data = new Attachment(file, MediaTypeNames.Application.Octet);&#xD;&#xA;			// Add time stamp information for the file.&#xD;&#xA;			ContentDisposition disposition = data.ContentDisposition;&#xD;&#xA;			disposition.CreationDate = System.IO.File.GetCreationTime(file);&#xD;&#xA;			disposition.ModificationDate = System.IO.File.GetLastWriteTime(file);&#xD;&#xA;			disposition.ReadDate = System.IO.File.GetLastAccessTime(file);&#xD;&#xA;			// Add the file attachment to this e-mail message.&#xD;&#xA;			message.Attachments.Add(data);&#xD;&#xA;			//Send the message.&#xD;&#xA;			SmtpClient client = new SmtpClient(server);&#xD;&#xA;			// Add credentials if the SMTP server requires them.&#xD;&#xA;			client.Credentials = CredentialCache.DefaultNetworkCredentials;&#xD;&#xA;      try {&#xD;&#xA;			  client.Send(message);&#xD;&#xA;			}&#xD;&#xA;			catch (Exception ex) {&#xD;&#xA;			  Console.WriteLine(""Exception caught in CreateMessageWithAttachment(): {0}"", &#xD;&#xA;                    ex.ToString() );			  &#xD;&#xA;			}&#xD;&#xA;			// Display the values in the ContentDisposition for the attachment.&#xD;&#xA;			ContentDisposition cd = data.ContentDisposition;&#xD;&#xA;			Console.WriteLine(""Content disposition"");&#xD;&#xA;			Console.WriteLine(cd.ToString());&#xD;&#xA;			Console.WriteLine(""File {0}"", cd.FileName);&#xD;&#xA;			Console.WriteLine(""Size {0}"", cd.Size);&#xD;&#xA;			Console.WriteLine(""Creation {0}"", cd.CreationDate);&#xD;&#xA;			Console.WriteLine(""Modification {0}"", cd.ModificationDate);&#xD;&#xA;			Console.WriteLine(""Read {0}"", cd.ReadDate);&#xD;&#xA;			Console.WriteLine(""Inline {0}"", cd.Inline);&#xD;&#xA;			Console.WriteLine(""Parameters: {0}"", cd.Parameters.Count);&#xD;&#xA;			foreach (DictionaryEntry d in cd.Parameters)&#xD;&#xA;			{&#xD;&#xA;				Console.WriteLine(""{0} = {1}"", d.Key, d.Value);&#xD;&#xA;			}&#xD;&#xA;			data.Dispose();&#xD;&#xA;		}"
-1033387455479850853,49,5,"         var myApp = angular.module('myApp', []);&#xD;&#xA;              &#xD;&#xA;                 myApp.directive('fileModel', ['$parse', function ($parse) {&#xD;&#xA;                    return {&#xD;&#xA;                       restrict: 'A',&#xD;&#xA;                       link: function(scope, element, attrs) {&#xD;&#xA;                          var model = $parse(attrs.fileModel);&#xD;&#xA;                          var modelSetter = model.assign;&#xD;&#xA;                          &#xD;&#xA;                          element.bind('change', function(){&#xD;&#xA;                             scope.$apply(function(){&#xD;&#xA;                                modelSetter(scope, element[0].files[0]);&#xD;&#xA;                             });&#xD;&#xA;                          });&#xD;&#xA;                       }&#xD;&#xA;                    };&#xD;&#xA;                 }]);&#xD;&#xA;              &#xD;&#xA;                 myApp.service('fileUpload', ['$http', function ($http) {&#xD;&#xA;                    this.uploadFileToUrl = function(file, uploadUrl){&#xD;&#xA;                       var fd = new FormData();&#xD;&#xA;                       fd.append('file', file);&#xD;&#xA;                    &#xD;&#xA;                       $http.post(uploadUrl, fd, {&#xD;&#xA;                          transformRequest: angular.identity,&#xD;&#xA;                          headers: {'Content-Type': undefined}&#xD;&#xA;                       })&#xD;&#xA;                    &#xD;&#xA;                       .success(function(){&#xD;&#xA;                       })&#xD;&#xA;                    &#xD;&#xA;                       .error(function(){&#xD;&#xA;                       });&#xD;&#xA;                    }&#xD;&#xA;                 }]);&#xD;&#xA;              &#xD;&#xA;                 myApp.controller('myCtrl', ['$scope', 'fileUpload', function($scope, fileUpload){&#xD;&#xA;                    $scope.uploadFile = function(){&#xD;&#xA;                       var file = $scope.myFile;&#xD;&#xA;                       &#xD;&#xA;                       console.log('file is ' );&#xD;&#xA;                       console.dir(file);&#xD;&#xA;                       &#xD;&#xA;                       var uploadUrl = ""/fileUpload"";&#xD;&#xA;                       fileUpload.uploadFileToUrl(file, uploadUrl);&#xD;&#xA;                    };&#xD;&#xA;                 }]);&#xD;&#xA;        			&#xD;&#xA;              "
-724826337465296958,49,5,"    import android.graphics.Bitmap;&#xD;&#xA;    import android.graphics.BitmapFactory;&#xD;&#xA;     public class ImageResizer {&#xD;&#xA;     public static Bitmap decodeSampledBitmapFromFile(String filename,&#xD;&#xA;        int reqWidth, int reqHeight) {&#xD;&#xA;    // First decode with inJustDecodeBounds=true to check dimensions&#xD;&#xA;    final BitmapFactory.Options&#xD;&#xA;            options = new BitmapFactory.Options();&#xD;&#xA;    options.inJustDecodeBounds = true;&#xD;&#xA;    BitmapFactory.decodeFile(filename, options);&#xD;&#xA;    // Calculate inSampleSize&#xD;&#xA;    options.inSampleSize = calculateInSampleSize(options, reqWidth, reqHeight);&#xD;&#xA;    // Decode bitmap with inSampleSize set&#xD;&#xA;    options.inJustDecodeBounds = false;&#xD;&#xA;    return BitmapFactory.decodeFile(filename, options);&#xD;&#xA;     }&#xD;&#xA;       public static int calculateInSampleSize(BitmapFactory.Options options,&#xD;&#xA;        int reqWidth, int reqHeight) {&#xD;&#xA;    // BEGIN_INCLUDE (calculate_sample_size)&#xD;&#xA;    // Raw height and width of image&#xD;&#xA;    final int height = options.outHeight;&#xD;&#xA;    final int width = options.outWidth;&#xD;&#xA;    int inSampleSize = 1;&#xD;&#xA;    if (height > reqHeight || width > reqWidth) {&#xD;&#xA;        final int halfHeight = height / 2;&#xD;&#xA;        final int halfWidth = width / 2;&#xD;&#xA;        // Calculate the largest inSampleSize value that is a power of 2 and keeps both&#xD;&#xA;        // height and width larger than the requested height and width.&#xD;&#xA;        while ((halfHeight / inSampleSize) > reqHeight&#xD;&#xA;                && (halfWidth / inSampleSize) > reqWidth) {&#xD;&#xA;            inSampleSize *= 2;&#xD;&#xA;        }&#xD;&#xA;        // This offers some additional logic in case the image has a strange&#xD;&#xA;        // aspect ratio. For example, a panorama may have a much larger&#xD;&#xA;        // width than height. In these cases the total pixels might still&#xD;&#xA;        // end up being too large to fit comfortably in memory, so we should&#xD;&#xA;        // be more aggressive with sample down the image (=larger inSampleSize).&#xD;&#xA;        long totalPixels = width * height / inSampleSize;&#xD;&#xA;        // Anything more than 2x the requested pixels we'll sample down further&#xD;&#xA;        final long totalReqPixelsCap = reqWidth * reqHeight * 2;&#xD;&#xA;        while (totalPixels > totalReqPixelsCap) {&#xD;&#xA;            inSampleSize *= 2;&#xD;&#xA;            totalPixels /= 2;&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    return inSampleSize;&#xD;&#xA;    // END_INCLUDE (calculate_sample_size)&#xD;&#xA;     }&#xD;&#xA;     }"
4062630883199219009,49,5,"        var express = require('express');&#xD;&#xA;        var path = require('path');&#xD;&#xA;        var favicon = require('serve-favicon');&#xD;&#xA;        var logger = require('morgan');&#xD;&#xA;        var cookieParser = require('cookie-parser');&#xD;&#xA;        var bodyParser = require('body-parser');&#xD;&#xA;        &#xD;&#xA;        var index = require('./routes/index');&#xD;&#xA;        var users = require('./routes/users');&#xD;&#xA;        &#xD;&#xA;        var app = express();&#xD;&#xA;        &#xD;&#xA;        // view engine setup&#xD;&#xA;        app.set('views', path.join(__dirname, 'views'));&#xD;&#xA;        app.set('view engine', 'jade');&#xD;&#xA;        &#xD;&#xA;        // uncomment after placing your favicon in /public&#xD;&#xA;        //app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));&#xD;&#xA;        app.use(logger('dev'));&#xD;&#xA;        app.use(bodyParser.json());&#xD;&#xA;        app.use(bodyParser.urlencoded({ extended: false }));&#xD;&#xA;        app.use(cookieParser());&#xD;&#xA;        app.use(express.static(path.join(__dirname, 'public')));&#xD;&#xA;        &#xD;&#xA;        app.use('/', index);&#xD;&#xA;        app.use('/users', users);&#xD;&#xA;        &#xD;&#xA;        // catch 404 and forward to error handler&#xD;&#xA;        app.use(function(req, res, next) {&#xD;&#xA;          var err = new Error('Not Found');&#xD;&#xA;          err.status = 404;&#xD;&#xA;          next(err);&#xD;&#xA;        });&#xD;&#xA;        &#xD;&#xA;        // error handler&#xD;&#xA;        app.use(function(err, req, res, next) {&#xD;&#xA;          // set locals, only providing error in development&#xD;&#xA;          res.locals.message = err.message;&#xD;&#xA;          res.locals.error = req.app.get('env') === 'development' ? err : {};&#xD;&#xA;        &#xD;&#xA;          // render the error page&#xD;&#xA;          res.status(err.status || 500);&#xD;&#xA;          res.render('error');&#xD;&#xA;        });&#xD;&#xA;        &#xD;&#xA;        module.exports = app;&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    "
-4807293101914074006,49,5,"        <form name=""contactform"" method=""post"" action=""send_form_email.php"">&#xD;&#xA;        <table width=""450px"">&#xD;&#xA;            <tr>&#xD;&#xA;                <td valign=""top"">&#xD;&#xA;                <label for=""first_name"">First Name *</label>&#xD;&#xA;            </td>&#xD;&#xA;                <td valign=""top"">&#xD;&#xA;                <input  type=""text"" name=""first_name"" maxlength=""50"" size=""30"">&#xD;&#xA;            </td>&#xD;&#xA;            </tr>&#xD;&#xA;            <tr>&#xD;&#xA;            <td valign=""top"""">&#xD;&#xA;                <label for=""last_name"">Last Name *</label>&#xD;&#xA;            </td>&#xD;&#xA;                <td valign=""top"">&#xD;&#xA;                <input  type=""text"" name=""last_name"" maxlength=""50"" size=""30"">&#xD;&#xA;            </td>&#xD;&#xA;            </tr>&#xD;&#xA;            <tr>&#xD;&#xA;                <td valign=""top"">&#xD;&#xA;                <label for=""email"">Email Address *</label>&#xD;&#xA;            </td>&#xD;&#xA;                <td valign=""top"">&#xD;&#xA;                <input  type=""text"" name=""email"" maxlength=""80"" size=""30"">&#xD;&#xA;            </td>&#xD;&#xA;            </tr>&#xD;&#xA;            <tr>&#xD;&#xA;                <td valign=""top"">&#xD;&#xA;                <label for=""telephone"">Telephone Number</label>&#xD;&#xA;            </td>&#xD;&#xA;                <td valign=""top"">&#xD;&#xA;                <input  type=""text"" name=""telephone"" maxlength=""30"" size=""30"">&#xD;&#xA;            </td>&#xD;&#xA;            </tr>&#xD;&#xA;            <tr>&#xD;&#xA;                <td valign=""top"">&#xD;&#xA;                <label for=""comments"">Comments *</label>&#xD;&#xA;            </td>&#xD;&#xA;                <td valign=""top"">&#xD;&#xA;                <textarea  name=""comments"" maxlength=""1000"" cols=""25"" rows=""6""></textarea>&#xD;&#xA;            </td>&#xD;&#xA;            </tr>&#xD;&#xA;            <tr>&#xD;&#xA;                <td colspan=""2"" style=""text-align:center"">&#xD;&#xA;                <input type=""submit"" value=""Submit"">&#xD;&#xA;            </td>&#xD;&#xA;            </tr>&#xD;&#xA;        </table>&#xD;&#xA;    </form>"
-30516825193219210,49,5,"    - (BOOL)ensureDatabaseOpen: (NSError **)error&#xD;&#xA;    {&#xD;&#xA;        // already created db connection&#xD;&#xA;        if (_contactDb != nil)&#xD;&#xA;        {&#xD;&#xA;            return YES;&#xD;&#xA;        }&#xD;&#xA;        NSLog(@"">> ContactManager::ensureDatabaseOpen"");    &#xD;&#xA;        if (![self ensureDatabasePrepared:error])&#xD;&#xA;        {&#xD;&#xA;            return NO;&#xD;&#xA;        }&#xD;&#xA;        const char *dbpath = [_dbPath UTF8String]; &#xD;&#xA;        if (sqlite3_open(dbpath, &_contactDb) != SQLITE_OK &&&#xD;&#xA;            error != nil)&#xD;&#xA;        {&#xD;&#xA;            *error = [[[NSError alloc] initWithDomain:@""ContactsManager"" code:1000 userInfo:nil] autorelease];&#xD;&#xA;            return NO;&#xD;&#xA;        }&#xD;&#xA;       NSLog(@""opened"");&#xD;&#xA;        return YES;&#xD;&#xA;    }&#xD;&#xA;    - (BOOL)ensureDatabasePrepared: (NSError **)error&#xD;&#xA;    {&#xD;&#xA;        // already prepared&#xD;&#xA;        if ((_dbPath != nil) &&&#xD;&#xA;            ([[NSFileManager defaultManager] fileExistsAtPath:_dbPath]))&#xD;&#xA;        {&#xD;&#xA;            return YES;&#xD;&#xA;        }&#xD;&#xA;        // db in main bundle - cant edit.  copy to library if !exist&#xD;&#xA;        NSString *dbTemplatePath = [[NSBundle mainBundle] pathForResource:@""contacts"" ofType:@""db""];&#xD;&#xA;        NSLog(@""%@"", dbTemplatePath);&#xD;&#xA;        NSString *libraryPath = [NSSearchPathForDirectoriesInDomains(NSLibraryDirectory, NSUserDomainMask, YES) lastObject];&#xD;&#xA;        _dbPath = [libraryPath stringByAppendingPathComponent:@""contacts.db""];&#xD;&#xA;        NSLog(@""dbPath: %@"", _dbPath);&#xD;&#xA;        // copy db from template to library&#xD;&#xA;        if (![[NSFileManager defaultManager] fileExistsAtPath:_dbPath])&#xD;&#xA;        {&#xD;&#xA;            NSLog(@""db not exists"");&#xD;&#xA;            NSError *error = nil;&#xD;&#xA;            if (![[NSFileManager defaultManager] copyItemAtPath:dbTemplatePath toPath:_dbPath error:&error])&#xD;&#xA;            {&#xD;&#xA;                return NO;&#xD;&#xA;            }&#xD;&#xA;            NSLog(@""copied"");&#xD;&#xA;        }    &#xD;&#xA;        return YES;    &#xD;&#xA;    }"
-5541670556753305688,49,5,"     public abstract class AbstractFacade<T> {&#xD;&#xA;            private Class<T> entityClass;&#xD;&#xA;        &#xD;&#xA;            public AbstractFacade(Class<T> entityClass) {&#xD;&#xA;                this.entityClass = entityClass;&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            protected abstract EntityManager getEntityManager();&#xD;&#xA;        &#xD;&#xA;            public void create(T entity) {&#xD;&#xA;                getEntityManager().persist(entity);&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            public void edit(T entity) {&#xD;&#xA;                getEntityManager().merge(entity);&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            public void remove(T entity) {&#xD;&#xA;                getEntityManager().remove(getEntityManager().merge(entity));&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            public T find(Object id) {&#xD;&#xA;                return getEntityManager().find(entityClass, id);&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            public List<T> findAll() {&#xD;&#xA;                javax.persistence.criteria.CriteriaQuery cq = getEntityManager().getCriteriaBuilder().createQuery();&#xD;&#xA;                cq.select(cq.from(entityClass));&#xD;&#xA;                return getEntityManager().createQuery(cq).getResultList();&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            public List<T> findRange(int[] range) {&#xD;&#xA;                javax.persistence.criteria.CriteriaQuery cq = getEntityManager().getCriteriaBuilder().createQuery();&#xD;&#xA;                cq.select(cq.from(entityClass));&#xD;&#xA;                javax.persistence.Query q = getEntityManager().createQuery(cq);&#xD;&#xA;                q.setMaxResults(range[1] - range[0]);&#xD;&#xA;                q.setFirstResult(range[0]);&#xD;&#xA;                return q.getResultList();&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            public int count() {&#xD;&#xA;                javax.persistence.criteria.CriteriaQuery cq = getEntityManager().getCriteriaBuilder().createQuery();&#xD;&#xA;                javax.persistence.criteria.Root<T> rt = cq.from(entityClass);&#xD;&#xA;                cq.select(getEntityManager().getCriteriaBuilder().count(rt));&#xD;&#xA;                javax.persistence.Query q = getEntityManager().createQuery(cq);&#xD;&#xA;                return ((Long) q.getSingleResult()).intValue();&#xD;&#xA;            }&#xD;&#xA;            &#xD;&#xA;        }"
4087760709374943075,50,5,"    <?xml  version=""1.0"" encoding=""UTF-8""?>&#xD;&#xA;    <beans xmlns=""http://www.springframework.org/schema/beans""&#xD;&#xA;    	xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:aop=""http://www.springframework.org/schema/aop""&#xD;&#xA;    	xmlns:context=""http://www.springframework.org/schema/context""&#xD;&#xA;    	xmlns:jee=""http://www.springframework.org/schema/jee"" xmlns:lang=""http://www.springframework.org/schema/lang""&#xD;&#xA;    	xmlns:p=""http://www.springframework.org/schema/p"" xmlns:tx=""http://www.springframework.org/schema/tx""&#xD;&#xA;    	xmlns:util=""http://www.springframework.org/schema/util""&#xD;&#xA;    	xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&#xD;&#xA;            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd&#xD;&#xA;            http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd&#xD;&#xA;            http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd&#xD;&#xA;            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd&#xD;&#xA;            http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"">&#xD;&#xA;    &#xD;&#xA;    <!-- Настраивает управление транзакциями с помощью аннотации @Transactional -->&#xD;&#xA;    	<tx:annotation-driven transaction-manager=""transactionManager"" />&#xD;&#xA;    &#xD;&#xA;    	<!-- Менеджер транзакций -->&#xD;&#xA;    	<bean id=""transactionManager""&#xD;&#xA;    		class=""org.springframework.orm.hibernate4.HibernateTransactionManager"">&#xD;&#xA;    		<property name=""sessionFactory"" ref=""sessionFactory"" />&#xD;&#xA;    	</bean>&#xD;&#xA;    	&#xD;&#xA;    	<!-- Непосредственно бин dataSource -->&#xD;&#xA;    	<bean id=""dataSource""&#xD;&#xA;    		class=""org.springframework.jdbc.datasource.DriverManagerDataSource""&#xD;&#xA;    		p:driverClassName=""com.microsoft.sqlserver.jdbc.SQLServerDriver""&#xD;&#xA;    		p:url=""jdbc:sqlserver://10.16.9.52:1433;databaseName=hhsystemTest;""&#xD;&#xA;    		p:username=""userNew"" &#xD;&#xA;    		p:password=""Pass12345"" />&#xD;&#xA;    &#xD;&#xA;    	<!-- Настройки фабрики сессий Хибернейта -->&#xD;&#xA;    	<bean id=""sessionFactory""&#xD;&#xA;    		class=""org.springframework.orm.hibernate4.LocalSessionFactoryBean"">&#xD;&#xA;    		<property name=""dataSource"" ref=""dataSource"" />&#xD;&#xA;    		<property name=""configLocation"">&#xD;&#xA;    			<value>classpath:test/hibernate.cfg.xml</value>&#xD;&#xA;    		</property>&#xD;&#xA;    &#xD;&#xA;    		<property name=""hibernateProperties"">&#xD;&#xA;    			<props>&#xD;&#xA;    				<prop key=""hibernate.show_sql"">true</prop>&#xD;&#xA;    				<prop key=""hibernate.dialect"">org.hibernate.dialect.SQLServerDialect</prop>&#xD;&#xA;    				<prop key=""hibernate.connection.charSet"">UTF-8</prop>&#xD;&#xA;    				<prop key=""hibernate.hbm2ddl.auto"">create-drop</prop> &#xD;&#xA;    			</props>&#xD;&#xA;    		</property>&#xD;&#xA;    	</bean>&#xD;&#xA;    &#xD;&#xA;    </beans>"
8297577544793673538,50,5,"    public void loginToFacebook() {&#xD;&#xA;    		mPrefs = getPreferences(MODE_PRIVATE);&#xD;&#xA;    		String access_token = mPrefs.getString(""access_token"", null);&#xD;&#xA;    		long expires = mPrefs.getLong(""access_expires"", 0);&#xD;&#xA;    &#xD;&#xA;    		if (access_token != null) {&#xD;&#xA;    			facebook.setAccessToken(access_token);&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		if (expires != 0) {&#xD;&#xA;    			facebook.setAccessExpires(expires);&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		if (!facebook.isSessionValid()) {&#xD;&#xA;    			facebook.authorize(this,&#xD;&#xA;    					new String[] { ""email"", ""publish_stream"" },&#xD;&#xA;    					new DialogListener() {&#xD;&#xA;    &#xD;&#xA;    						@Override&#xD;&#xA;    						public void onCancel() {&#xD;&#xA;    							// Function to handle cancel event&#xD;&#xA;    						}&#xD;&#xA;    &#xD;&#xA;    						@Override&#xD;&#xA;    						public void onComplete(Bundle values) {&#xD;&#xA;    							// Function to handle complete event&#xD;&#xA;    							// Edit Preferences and update facebook acess_token&#xD;&#xA;    							SharedPreferences.Editor editor = mPrefs.edit();&#xD;&#xA;    							editor.putString(""access_token"",&#xD;&#xA;    									facebook.getAccessToken());&#xD;&#xA;    							editor.putLong(""access_expires"",&#xD;&#xA;    									facebook.getAccessExpires());&#xD;&#xA;    							editor.commit();&#xD;&#xA;    						}&#xD;&#xA;    &#xD;&#xA;    						@Override&#xD;&#xA;    						public void onError(DialogError error) {&#xD;&#xA;    							// Function to handle error&#xD;&#xA;    &#xD;&#xA;    						}&#xD;&#xA;    &#xD;&#xA;    						@Override&#xD;&#xA;    						public void onFacebookError(FacebookError fberror) {&#xD;&#xA;    							// Function to handle Facebook errors&#xD;&#xA;    &#xD;&#xA;    						}&#xD;&#xA;    &#xD;&#xA;    					});&#xD;&#xA;    		}&#xD;&#xA;    	}"
-5702274559152720717,50,5,"    import android.graphics.Typeface;&#xD;&#xA;    import android.text.TextPaint;&#xD;&#xA;    import android.text.style.MetricAffectingSpan;&#xD;&#xA;    &#xD;&#xA;    public class CustomMetricAffectingSpan extends MetricAffectingSpan&#xD;&#xA;    {&#xD;&#xA;        private final Typeface _typeface;&#xD;&#xA;        private final Float    _newSize;&#xD;&#xA;        private final Integer  _newStyle;&#xD;&#xA;    &#xD;&#xA;        public CustomMetricAffectingSpan(Float size)&#xD;&#xA;        {&#xD;&#xA;            this(null, null, size);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public CustomMetricAffectingSpan(Float size, Integer style)&#xD;&#xA;        {&#xD;&#xA;            this(null, style, size);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public CustomMetricAffectingSpan(Typeface type, Integer style, Float size)&#xD;&#xA;        {&#xD;&#xA;            this._typeface = type;&#xD;&#xA;            this._newStyle = style;&#xD;&#xA;            this._newSize = size;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void updateDrawState(TextPaint ds)&#xD;&#xA;        {&#xD;&#xA;            applyNewSize(ds);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void updateMeasureState(TextPaint paint)&#xD;&#xA;        {&#xD;&#xA;            applyNewSize(paint);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private void applyNewSize(TextPaint paint)&#xD;&#xA;        {&#xD;&#xA;            if (this._newStyle != null)&#xD;&#xA;                paint.setTypeface(Typeface.create(this._typeface, this._newStyle));&#xD;&#xA;            else&#xD;&#xA;                paint.setTypeface(this._typeface);&#xD;&#xA;    &#xD;&#xA;            if (this._newSize != null)&#xD;&#xA;                paint.setTextSize(this._newSize);&#xD;&#xA;        }&#xD;&#xA;    }"
349584006112236124,50,5,"    import android.content.Context;&#xD;&#xA;    import android.util.Log;&#xD;&#xA;    &#xD;&#xA;    import com.jakewharton.picasso.OkHttp3Downloader;&#xD;&#xA;    import com.squareup.picasso.Picasso;&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * Created by Hrishikesh Kadam on 19/12/2017&#xD;&#xA;     */&#xD;&#xA;    &#xD;&#xA;    public class CustomPicasso {&#xD;&#xA;    &#xD;&#xA;        private static String LOG_TAG = CustomPicasso.class.getSimpleName();&#xD;&#xA;        private static boolean hasCustomPicassoSingletonInstanceSet;&#xD;&#xA;    &#xD;&#xA;        public static Picasso with(Context context) {&#xD;&#xA;    &#xD;&#xA;            if (hasCustomPicassoSingletonInstanceSet)&#xD;&#xA;                return Picasso.with(context);&#xD;&#xA;    &#xD;&#xA;            try {&#xD;&#xA;                Picasso.setSingletonInstance(null);&#xD;&#xA;            } catch (IllegalStateException e) {&#xD;&#xA;                Log.w(LOG_TAG, ""-> Default singleton instance already present"" +&#xD;&#xA;                        "" so CustomPicasso singleton cannot be set. Use CustomPicasso.getNewInstance() now."");&#xD;&#xA;                return Picasso.with(context);&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            Picasso picasso = new Picasso.Builder(context).&#xD;&#xA;                    downloader(new OkHttp3Downloader(context))&#xD;&#xA;                    .build();&#xD;&#xA;    &#xD;&#xA;            Picasso.setSingletonInstance(picasso);&#xD;&#xA;            Log.w(LOG_TAG, ""-> CustomPicasso singleton set to Picasso singleton."" +&#xD;&#xA;                    "" In case if you need Picasso singleton in future then use Picasso.Builder()"");&#xD;&#xA;            hasCustomPicassoSingletonInstanceSet = true;&#xD;&#xA;    &#xD;&#xA;            return picasso;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public static Picasso getNewInstance(Context context) {&#xD;&#xA;    &#xD;&#xA;            Log.w(LOG_TAG, ""-> Do not forget to call customPicasso.shutdown()"" +&#xD;&#xA;                    "" to avoid memory leak"");&#xD;&#xA;    &#xD;&#xA;            return new Picasso.Builder(context).&#xD;&#xA;                    downloader(new OkHttp3Downloader(context))&#xD;&#xA;                    .build();&#xD;&#xA;        }&#xD;&#xA;    }"
-2019168321510339597,50,5,    #text_land {&#xD;&#xA;      border: 1px solid #ccc;&#xD;&#xA;      padding: 25px;&#xD;&#xA;      margin-bottom: 30px;&#xD;&#xA;    }&#xD;&#xA;    textarea {&#xD;&#xA;      width: 95%;&#xD;&#xA;    }&#xD;&#xA;    label {&#xD;&#xA;      display: block;&#xD;&#xA;      width: 50%;&#xD;&#xA;      clear: both;&#xD;&#xA;      margin: 0 0 .5em;&#xD;&#xA;    }&#xD;&#xA;    label select {&#xD;&#xA;      width: 50%;&#xD;&#xA;      float: right;&#xD;&#xA;    }&#xD;&#xA;    * {&#xD;&#xA;      box-sizing: border-box;&#xD;&#xA;      padding: 0;&#xD;&#xA;      margin: 0;&#xD;&#xA;    }&#xD;&#xA;    body {&#xD;&#xA;      font-family: monospace;&#xD;&#xA;      font-size: 1em;&#xD;&#xA;    }&#xD;&#xA;    h3 {&#xD;&#xA;      margin: 1.2em 0;&#xD;&#xA;    }&#xD;&#xA;    div {&#xD;&#xA;      margin: 1.2em;&#xD;&#xA;    }&#xD;&#xA;    textarea {&#xD;&#xA;      width: 100%;&#xD;&#xA;    }&#xD;&#xA;    button {&#xD;&#xA;      padding: .5em;&#xD;&#xA;    }&#xD;&#xA;    p {&#xD;&#xA;      /*Here the sliles for OTHER paragraphs*/&#xD;&#xA;    }&#xD;&#xA;    #content p {&#xD;&#xA;      font-size: inherit;&#xD;&#xA;      /*So it gets the font size set on the #content div*/&#xD;&#xA;      padding: 1.2em .5em;&#xD;&#xA;      margin: 1.4em 0;&#xD;&#xA;      border: 1px dashed #aaa;&#xD;&#xA;      overflow: hidden;&#xD;&#xA;    }
-8758948997694596587,50,5,"    <script src=""https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js""></script>&#xD;&#xA;    <link href=""https://cdnjs.cloudflare.com/ajax/libs/toastr.js/1.3.1/css/toastr.css"" rel=""stylesheet"" />&#xD;&#xA;    <script src=""http://cdnjs.cloudflare.com/ajax/libs/toastr.js/1.3.1/js/toastr.js""></script>&#xD;&#xA;    <table>&#xD;&#xA;      <tr>&#xD;&#xA;        <th>Item #</th>&#xD;&#xA;        <th>1234567</th>&#xD;&#xA;        <th>7654321</th>&#xD;&#xA;        <th>5678945</th>&#xD;&#xA;      </tr>&#xD;&#xA;      <tr>&#xD;&#xA;        <th>Product</th>&#xD;&#xA;        <th><u>22 ounce Dark</u>&#xD;&#xA;        </th>&#xD;&#xA;        <th><u>12count 4oz Dark</u>&#xD;&#xA;        </th>&#xD;&#xA;        <th><u>24count 6oz TJ</u>&#xD;&#xA;        </th>&#xD;&#xA;      </tr>&#xD;&#xA;      <tr>&#xD;&#xA;        <th>2016-01-03</th>&#xD;&#xA;        <td>13587</td>&#xD;&#xA;        <td>2203</td>&#xD;&#xA;        <td>4111</td>&#xD;&#xA;      </tr>&#xD;&#xA;      <tr>&#xD;&#xA;        <th>2016-01-04</th>&#xD;&#xA;        <td>14111</td>&#xD;&#xA;        <td>3247</td>&#xD;&#xA;        <td>4332</td>&#xD;&#xA;      </tr>&#xD;&#xA;      <tr>&#xD;&#xA;        <th>2016-01-05</th>&#xD;&#xA;        <td>13212</td>&#xD;&#xA;        <td>3101</td>&#xD;&#xA;        <td>3911</td>&#xD;&#xA;      </tr>&#xD;&#xA;      <tr>&#xD;&#xA;        <th>2016-01-06</th>&#xD;&#xA;        <td>16335</td>&#xD;&#xA;        <td>3299</td>&#xD;&#xA;        <td>4001</td>&#xD;&#xA;      </tr>&#xD;&#xA;      <tr>&#xD;&#xA;        <th>2016-01-07</th>&#xD;&#xA;        <td>15421</td>&#xD;&#xA;        <td>3100</td>&#xD;&#xA;        <td>4078</td>&#xD;&#xA;      </tr>&#xD;&#xA;    </table>"
-2634030680299155558,50,5,"    class UserModelManager(BaseUserManager):&#xD;&#xA;        def create_user(self, email, password, pseudo):&#xD;&#xA;            user = self.model()&#xD;&#xA;            user.name = name&#xD;&#xA;            user.email = self.normalize_email(email=email)&#xD;&#xA;            user.set_password(password)&#xD;&#xA;            user.save()&#xD;&#xA;    &#xD;&#xA;            return user&#xD;&#xA;    &#xD;&#xA;        def create_superuser(self, email, password):&#xD;&#xA;            '''&#xD;&#xA;            Used for: python manage.py createsuperuser&#xD;&#xA;            '''&#xD;&#xA;            user = self.model()&#xD;&#xA;            user.name = 'admin-yeah'&#xD;&#xA;            user.email = self.normalize_email(email=email)&#xD;&#xA;            user.set_password(password)&#xD;&#xA;    &#xD;&#xA;            user.is_staff = True&#xD;&#xA;            user.is_superuser = True&#xD;&#xA;            user.save()&#xD;&#xA;    &#xD;&#xA;            return user&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    class UserModel(AbstractBaseUser, PermissionsMixin):&#xD;&#xA;        ## Personnal fields.&#xD;&#xA;        email = models.EmailField(max_length=254, unique=True)&#xD;&#xA;        name = models.CharField(max_length=16)&#xD;&#xA;        ## [...]&#xD;&#xA;    &#xD;&#xA;        ## Django manage fields.&#xD;&#xA;        date_joined = models.DateTimeField(auto_now_add=True)&#xD;&#xA;        is_active = models.BooleanField(default=True)&#xD;&#xA;        is_staff = models.BooleanField(default=False)&#xD;&#xA;    &#xD;&#xA;        USERNAME_FIELD = 'email'&#xD;&#xA;        REQUIRED_FIELD = ['email', 'name']&#xD;&#xA;    &#xD;&#xA;        objects = UserModelManager()&#xD;&#xA;    &#xD;&#xA;        def __str__(self):&#xD;&#xA;            return self.email&#xD;&#xA;    &#xD;&#xA;        def get_short_name(self):&#xD;&#xA;            return self.name[:2].upper()&#xD;&#xA;    &#xD;&#xA;        def get_full_name(self):&#xD;&#xA;            return self.name"
-9095893569078000211,51,5,"        - (NSArray *)getDataCounters {&#xD;&#xA;        BOOL   success;&#xD;&#xA;        struct ifaddrs *addrs;&#xD;&#xA;        const struct ifaddrs *cursor;&#xD;&#xA;        const struct if_data *networkStatisc; &#xD;&#xA;    &#xD;&#xA;    int WiFiSent = 0;&#xD;&#xA;    int WiFiReceived = 0;&#xD;&#xA;    int WWANSent = 0;&#xD;&#xA;    int WWANReceived = 0;&#xD;&#xA;    &#xD;&#xA;    NSString *name=[[[NSString alloc]init]autorelease];&#xD;&#xA;    &#xD;&#xA;    success = getifaddrs(&addrs) == 0;&#xD;&#xA;    if (success) &#xD;&#xA;    {&#xD;&#xA;        cursor = addrs;&#xD;&#xA;        while (cursor != NULL) &#xD;&#xA;        {&#xD;&#xA;            name=[NSString stringWithFormat:@""%s"",cursor->ifa_name];&#xD;&#xA;            NSLog(@""ifa_name %s == %@\n"", cursor->ifa_name,name);&#xD;&#xA;            // names of interfaces: en0 is WiFi ,pdp_ip0 is WWAN &#xD;&#xA;    &#xD;&#xA;            if (cursor->ifa_addr->sa_family == AF_LINK) &#xD;&#xA;            {&#xD;&#xA;                if ([name hasPrefix:@""en""]) &#xD;&#xA;                {&#xD;&#xA;                    networkStatisc = (const struct if_data *) cursor->ifa_data;&#xD;&#xA;                    WiFiSent+=networkStatisc->ifi_obytes;&#xD;&#xA;                    WiFiReceived+=networkStatisc->ifi_ibytes;&#xD;&#xA;                    NSLog(@""WiFiSent %d ==%d"",WiFiSent,networkStatisc->ifi_obytes);&#xD;&#xA;                    NSLog(@""WiFiReceived %d ==%d"",WiFiReceived,networkStatisc->ifi_ibytes);&#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;                if ([name hasPrefix:@""pdp_ip""]) &#xD;&#xA;                {&#xD;&#xA;                    networkStatisc = (const struct if_data *) cursor->ifa_data;&#xD;&#xA;                    WWANSent+=networkStatisc->ifi_obytes;&#xD;&#xA;                    WWANReceived+=networkStatisc->ifi_ibytes;&#xD;&#xA;                    NSLog(@""WWANSent %d ==%d"",WWANSent,networkStatisc->ifi_obytes);&#xD;&#xA;                    NSLog(@""WWANReceived %d ==%d"",WWANReceived,networkStatisc->ifi_ibytes);&#xD;&#xA;                } &#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            cursor = cursor->ifa_next;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        freeifaddrs(addrs);&#xD;&#xA;    }       &#xD;&#xA;    &#xD;&#xA;    return [NSArray arrayWithObjects:[NSNumber numberWithInt:WiFiSent], [NSNumber numberWithInt:WiFiReceived],[NSNumber numberWithInt:WWANSent],[NSNumber numberWithInt:WWANReceived], nil];"
-2972888550122734567,51,5,"    public class SomeFragment extends Fragment {&#xD;&#xA;     &#xD;&#xA;    	MapView mapView;&#xD;&#xA;    	GoogleMap map;&#xD;&#xA;     &#xD;&#xA;    	@Override&#xD;&#xA;    	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {&#xD;&#xA;    		View v = inflater.inflate(R.layout.some_layout, container, false);&#xD;&#xA;     &#xD;&#xA;     		// Gets the MapView from the XML layout and creates it&#xD;&#xA;    		mapView = (MapView) v.findViewById(R.id.mapview);&#xD;&#xA;    		mapView.onCreate(savedInstanceState);&#xD;&#xA;     &#xD;&#xA;    		// Gets to GoogleMap from the MapView and does initialization stuff&#xD;&#xA;    		map = mapView.getMap();&#xD;&#xA;    		map.getUiSettings().setMyLocationButtonEnabled(false);&#xD;&#xA;    		map.setMyLocationEnabled(true);&#xD;&#xA;     &#xD;&#xA;    		// Needs to call MapsInitializer before doing any CameraUpdateFactory calls&#xD;&#xA;    		try {&#xD;&#xA;    			MapsInitializer.initialize(this.getActivity());&#xD;&#xA;    		} catch (GooglePlayServicesNotAvailableException e) {&#xD;&#xA;    			e.printStackTrace();&#xD;&#xA;    		}&#xD;&#xA;    		&#xD;&#xA;    		// Updates the location and zoom of the MapView&#xD;&#xA;    		CameraUpdate cameraUpdate = CameraUpdateFactory.newLatLngZoom(new LatLng(43.1, -87.9), 10);&#xD;&#xA;    		map.animateCamera(cameraUpdate);&#xD;&#xA;     &#xD;&#xA;    		return v;&#xD;&#xA;    	}&#xD;&#xA;     &#xD;&#xA;    	@Override&#xD;&#xA;    	public void onResume() {&#xD;&#xA;    		mapView.onResume();&#xD;&#xA;    		super.onResume();&#xD;&#xA;    	}&#xD;&#xA;     &#xD;&#xA;    	@Override&#xD;&#xA;    	public void onDestroy() {&#xD;&#xA;    		super.onDestroy();&#xD;&#xA;    		mapView.onDestroy();&#xD;&#xA;    	}&#xD;&#xA;     &#xD;&#xA;    	@Override&#xD;&#xA;    	public void onLowMemory() {&#xD;&#xA;    		super.onLowMemory();&#xD;&#xA;    		mapView.onLowMemory();&#xD;&#xA;    	}&#xD;&#xA;     &#xD;&#xA;    }"
-8649425730671794367,51,5,"    .fixed_headers {&#xD;&#xA;      width: 750px;&#xD;&#xA;      table-layout: fixed;&#xD;&#xA;      border-collapse: collapse;&#xD;&#xA;    }&#xD;&#xA;    .fixed_headers th {&#xD;&#xA;      text-decoration: underline;&#xD;&#xA;    }&#xD;&#xA;    .fixed_headers th,&#xD;&#xA;    .fixed_headers td {&#xD;&#xA;      padding: 5px;&#xD;&#xA;      text-align: left;&#xD;&#xA;    }&#xD;&#xA;    .fixed_headers td:nth-child(1),&#xD;&#xA;    .fixed_headers th:nth-child(1) {&#xD;&#xA;      min-width: 200px;&#xD;&#xA;    }&#xD;&#xA;    .fixed_headers td:nth-child(2),&#xD;&#xA;    .fixed_headers th:nth-child(2) {&#xD;&#xA;      min-width: 200px;&#xD;&#xA;    }&#xD;&#xA;    .fixed_headers td:nth-child(3),&#xD;&#xA;    .fixed_headers th:nth-child(3) {&#xD;&#xA;      width: 350px;&#xD;&#xA;    }&#xD;&#xA;    .fixed_headers thead {&#xD;&#xA;      background-color: #333;&#xD;&#xA;      color: #FDFDFD;&#xD;&#xA;    }&#xD;&#xA;    .fixed_headers thead tr {&#xD;&#xA;      display: block;&#xD;&#xA;      position: relative;&#xD;&#xA;    }&#xD;&#xA;    .fixed_headers tbody {&#xD;&#xA;      display: block;&#xD;&#xA;      overflow: auto;&#xD;&#xA;      width: 100%;&#xD;&#xA;      height: 300px;&#xD;&#xA;    }&#xD;&#xA;    .fixed_headers tbody tr:nth-child(even) {&#xD;&#xA;      background-color: #DDD;&#xD;&#xA;    }&#xD;&#xA;    .old_ie_wrapper {&#xD;&#xA;      height: 300px;&#xD;&#xA;      width: 750px;&#xD;&#xA;      overflow-x: hidden;&#xD;&#xA;      overflow-y: auto;&#xD;&#xA;    }&#xD;&#xA;    .old_ie_wrapper tbody {&#xD;&#xA;      height: auto;&#xD;&#xA;    }"
3028368276013726183,51,5,"        public class MapRouteActivity extends MapActivity {    &#xD;&#xA;              LinearLayout linearLayout;&#xD;&#xA;       MapView mapView;&#xD;&#xA;         private Road mRoad;    &#xD;&#xA;      @Override&#xD;&#xA;      public void onCreate(Bundle savedInstanceState) {&#xD;&#xA;     super.onCreate(savedInstanceState);&#xD;&#xA;    setContentView(R.layout.main);&#xD;&#xA;    mapView = (MapView) findViewById(R.id.mapview);&#xD;&#xA;    mapView.setBuiltInZoomControls(true);    &#xD;&#xA;    new Thread() {&#xD;&#xA;    @Override&#xD;&#xA;    public void run() {&#xD;&#xA;     double fromLat = 49.85, fromLon = 24.016667; &#xD;&#xA;     double toLat = 50.45, toLon = 30.523333;&#xD;&#xA;     String url = RoadProvider&#xD;&#xA;      .getUrl(fromLat, fromLon, toLat, toLon);&#xD;&#xA;     InputStream is = getConnection(url);&#xD;&#xA;     mRoad = RoadProvider.getRoute(is);&#xD;&#xA;     mHandler.sendEmptyMessage(0);&#xD;&#xA;     }&#xD;&#xA;     }.start();&#xD;&#xA;     }&#xD;&#xA;     Handler mHandler = new Handler() {&#xD;&#xA;     public void handleMessage(android.os.Message msg) {&#xD;&#xA;      TextView textView = (TextView) findViewById(R.id.description);&#xD;&#xA;      textView.setText(mRoad.mName + "" "" + mRoad.mDescription);&#xD;&#xA;      MapOverlay mapOverlay = new MapOverlay(mRoad, mapView);&#xD;&#xA;      List<Overlay> listOfOverlays = mapView.getOverlays();&#xD;&#xA;       listOfOverlays.clear();&#xD;&#xA;       listOfOverlays.add(mapOverlay);&#xD;&#xA;       mapView.invalidate();&#xD;&#xA;        };&#xD;&#xA;        };&#xD;&#xA;     private InputStream getConnection(String url) {&#xD;&#xA;     InputStream is = null;&#xD;&#xA;      try {&#xD;&#xA;      URLConnection conn = new URL(url).openConnection();&#xD;&#xA;      is = conn.getInputStream();&#xD;&#xA;      } catch (MalformedURLException e) {&#xD;&#xA;      e.printStackTrace();&#xD;&#xA;       } catch (IOException e) {&#xD;&#xA;       e.printStackTrace();&#xD;&#xA;       }&#xD;&#xA;      return is;&#xD;&#xA;      }    &#xD;&#xA;       @Override&#xD;&#xA;     protected boolean isRouteDisplayed() {&#xD;&#xA;      return false;&#xD;&#xA;      }&#xD;&#xA;     }"
-6955766529151959903,51,5,"	private async Task GetPreviewFrameAsSoftwareBitmapAsync()&#xD;&#xA;	{&#xD;&#xA;		// Get information about the preview&#xD;&#xA;		var previewProperties = _mediaCapture.VideoDeviceController.GetMediaStreamProperties(MediaStreamType.VideoPreview) as VideoEncodingProperties;&#xD;&#xA;		// Create the video frame to request a SoftwareBitmap preview frame&#xD;&#xA;		var videoFrame = new VideoFrame(BitmapPixelFormat.Bgra8, (int)previewProperties.Width, (int)previewProperties.Height);&#xD;&#xA;		// Capture the preview frame&#xD;&#xA;		using (var currentFrame = await _mediaCapture.GetPreviewFrameAsync(videoFrame))&#xD;&#xA;		{&#xD;&#xA;			// Collect the resulting frame&#xD;&#xA;			SoftwareBitmap previewFrame = currentFrame.SoftwareBitmap;&#xD;&#xA;			// Add a simple green filter effect to the SoftwareBitmap&#xD;&#xA;            EditPixels(previewFrame);&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    private unsafe void EditPixels(SoftwareBitmap bitmap)&#xD;&#xA;	{&#xD;&#xA;		// Effect is hard-coded to operate on BGRA8 format only&#xD;&#xA;		if (bitmap.BitmapPixelFormat == BitmapPixelFormat.Bgra8)&#xD;&#xA;		{&#xD;&#xA;			// In BGRA8 format, each pixel is defined by 4 bytes&#xD;&#xA;			const int BYTES_PER_PIXEL = 4;&#xD;&#xA;			using (var buffer = bitmap.LockBuffer(BitmapBufferAccessMode.ReadWrite))&#xD;&#xA;			using (var reference = buffer.CreateReference())&#xD;&#xA;			{&#xD;&#xA;				// Get a pointer to the pixel buffer&#xD;&#xA;				byte* data;&#xD;&#xA;				uint capacity;&#xD;&#xA;				((IMemoryBufferByteAccess)reference).GetBuffer(out data, out capacity);&#xD;&#xA;				// Get information about the BitmapBuffer&#xD;&#xA;				var desc = buffer.GetPlaneDescription(0);&#xD;&#xA;				// Iterate over all pixels&#xD;&#xA;				for (uint row = 0; row < desc.Height; row++)&#xD;&#xA;				{&#xD;&#xA;					for (uint col = 0; col < desc.Width; col++)&#xD;&#xA;					{&#xD;&#xA;						// Index of the current pixel in the buffer (defined by the next 4 bytes, BGRA8)&#xD;&#xA;						var currPixel = desc.StartIndex + desc.Stride * row + BYTES_PER_PIXEL * col;&#xD;&#xA;						// Read the current pixel information into b,g,r channels (leave out alpha channel)&#xD;&#xA;						var b = data[currPixel + 0]; // Blue&#xD;&#xA;						var g = data[currPixel + 1]; // Green&#xD;&#xA;						var r = data[currPixel + 2]; // Red&#xD;&#xA;						// Boost the green channel, leave the other two untouched&#xD;&#xA;						data[currPixel + 0] = b;&#xD;&#xA;						data[currPixel + 1] = (byte)Math.Min(g + 80, 255);&#xD;&#xA;						data[currPixel + 2] = r;&#xD;&#xA;					}&#xD;&#xA;				}&#xD;&#xA;			}&#xD;&#xA;		}&#xD;&#xA;	}"
-6749304628289892192,51,5,"    using System;&#xD;&#xA;    using System.Collections.ObjectModel;&#xD;&#xA;    using Microsoft.TeamFoundation.Client; &#xD;&#xA;    using Microsoft.TeamFoundation.Framework.Common;&#xD;&#xA;    using Microsoft.TeamFoundation.Framework.Client;&#xD;&#xA;    &#xD;&#xA;    namespace TfsApplication&#xD;&#xA;    {&#xD;&#xA;        class Program&#xD;&#xA;        {&#xD;&#xA;            static void Main(String[] args)&#xD;&#xA;            {&#xD;&#xA;                // Connect to Team Foundation Server&#xD;&#xA;                //     Server is the name of the server that is running the application tier for Team Foundation.&#xD;&#xA;                //     Port is the port that Team Foundation uses. The default port is 8080.&#xD;&#xA;                //     VDir is the virtual path to the Team Foundation application. The default path is tfs.&#xD;&#xA;                Uri tfsUri = (args.Length < 1) ? &#xD;&#xA;                    new Uri(""http://Server:Port/VDir"") : new Uri(args[0]);&#xD;&#xA;    &#xD;&#xA;                TfsConfigurationServer configurationServer =&#xD;&#xA;                    TfsConfigurationServerFactory.GetConfigurationServer(tfsUri);&#xD;&#xA;    &#xD;&#xA;                // Get the catalog of team project collections&#xD;&#xA;                ReadOnlyCollection<CatalogNode> collectionNodes = configurationServer.CatalogNode.QueryChildren(&#xD;&#xA;                    new[] { CatalogResourceTypes.ProjectCollection },&#xD;&#xA;                    false, CatalogQueryOptions.None);&#xD;&#xA;    &#xD;&#xA;                // List the team project collections&#xD;&#xA;                foreach (CatalogNode collectionNode in collectionNodes)&#xD;&#xA;                {&#xD;&#xA;                    // Use the InstanceId property to get the team project collection&#xD;&#xA;                    Guid collectionId = new Guid(collectionNode.Resource.Properties[""InstanceId""]);&#xD;&#xA;                    TfsTeamProjectCollection teamProjectCollection = configurationServer.GetTeamProjectCollection(collectionId);&#xD;&#xA;    &#xD;&#xA;                    // Print the name of the team project collection&#xD;&#xA;                    Console.WriteLine(""Collection: "" + teamProjectCollection.Name);&#xD;&#xA;    &#xD;&#xA;                    // Get a catalog of team projects for the collection&#xD;&#xA;                    ReadOnlyCollection<CatalogNode> projectNodes = collectionNode.QueryChildren(&#xD;&#xA;                        new[] { CatalogResourceTypes.TeamProject },&#xD;&#xA;                        false, CatalogQueryOptions.None);&#xD;&#xA;    &#xD;&#xA;                    // List the team projects in the collection&#xD;&#xA;                    foreach (CatalogNode projectNode in projectNodes)&#xD;&#xA;                    {&#xD;&#xA;                        Console.WriteLine("" Team Project: "" + projectNode.Resource.DisplayName);&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }"
-6274542886711721985,51,5,"            body {&#xD;&#xA;            padding: 20px;&#xD;&#xA;            font-family: Arial, Helvetica, sans-serif;&#xD;&#xA;            line-height: 1.5;&#xD;&#xA;            font-size: 14px;&#xD;&#xA;            }&#xD;&#xA;            .tabs-menu {&#xD;&#xA;            height: 30px;&#xD;&#xA;            float: left;&#xD;&#xA;            clear: both;&#xD;&#xA;            }&#xD;&#xA;            .tabs-menu li {&#xD;&#xA;            height: 30px;&#xD;&#xA;            line-height: 30px;&#xD;&#xA;            float: left;&#xD;&#xA;            margin-right: 10px;&#xD;&#xA;            background-color: #ccc;&#xD;&#xA;            border-top: 1px solid #d4d4d1;&#xD;&#xA;            border-right: 1px solid #d4d4d1;&#xD;&#xA;            border-left: 1px solid #d4d4d1;&#xD;&#xA;            }&#xD;&#xA;            .tabs-menu li.current {&#xD;&#xA;            position: relative;&#xD;&#xA;            background-color: #fff;&#xD;&#xA;            border-bottom: 1px solid #fff;&#xD;&#xA;            z-index: 5;&#xD;&#xA;            }&#xD;&#xA;            .tabs-menu li a {&#xD;&#xA;            padding: 10px;&#xD;&#xA;            text-transform: uppercase;&#xD;&#xA;            color: #fff;&#xD;&#xA;            text-decoration: none;&#xD;&#xA;            }&#xD;&#xA;            .tabs-menu .current a {&#xD;&#xA;            color: #2e7da3;&#xD;&#xA;            }&#xD;&#xA;            .tab {&#xD;&#xA;            border: 1px solid #d4d4d1;&#xD;&#xA;            background-color: #fff;&#xD;&#xA;            float: left;&#xD;&#xA;            margin-bottom: 20px;&#xD;&#xA;            width: auto;&#xD;&#xA;            }&#xD;&#xA;            .tab-content {&#xD;&#xA;            width: 660px;&#xD;&#xA;            padding: 20px;&#xD;&#xA;            display: none;&#xD;&#xA;            }&#xD;&#xA;            #tab-1 {&#xD;&#xA;            display: block;&#xD;&#xA;            }"
5936719335336610102,51,5,"    <!doctype html>&#xD;&#xA;    <html lang=""en"">&#xD;&#xA;    <head>&#xD;&#xA;      <meta charset=""utf-8"">&#xD;&#xA;      <title>jQuery UI Autocomplete - Default functionality</title>&#xD;&#xA;      <link rel=""stylesheet"" href=""//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css"">&#xD;&#xA;      <script src=""//code.jquery.com/jquery-1.10.2.js""></script>&#xD;&#xA;      <script src=""//code.jquery.com/ui/1.11.4/jquery-ui.js""></script>&#xD;&#xA;      <link rel=""stylesheet"" href=""/resources/demos/style.css"">&#xD;&#xA;      <script>&#xD;&#xA;      $(function() {&#xD;&#xA;        var availableTags = [&#xD;&#xA;          ""ActionScript"",&#xD;&#xA;          ""AppleScript"",&#xD;&#xA;          ""Asp"",&#xD;&#xA;          ""BASIC"",&#xD;&#xA;          ""C"",&#xD;&#xA;          ""C++"",&#xD;&#xA;          ""Clojure"",&#xD;&#xA;          ""COBOL"",&#xD;&#xA;          ""ColdFusion"",&#xD;&#xA;          ""Erlang"",&#xD;&#xA;          ""Fortran"",&#xD;&#xA;          ""Groovy"",&#xD;&#xA;          ""Haskell"",&#xD;&#xA;          ""Java"",&#xD;&#xA;          ""JavaScript"",&#xD;&#xA;          ""Lisp"",&#xD;&#xA;          ""Perl"",&#xD;&#xA;          ""PHP"",&#xD;&#xA;          ""Python"",&#xD;&#xA;          ""Ruby"",&#xD;&#xA;          ""Scala"",&#xD;&#xA;          ""Scheme""&#xD;&#xA;        ];&#xD;&#xA;        $( ""#tags"" ).autocomplete({&#xD;&#xA;          source: availableTags&#xD;&#xA;        });&#xD;&#xA;      });&#xD;&#xA;      </script>&#xD;&#xA;    </head>&#xD;&#xA;    <body>&#xD;&#xA;     &#xD;&#xA;    <div class=""ui-widget"">&#xD;&#xA;      <label for=""tags"">Tags: </label>&#xD;&#xA;      <input id=""tags"">&#xD;&#xA;    </div>&#xD;&#xA;     &#xD;&#xA;     &#xD;&#xA;    </body>&#xD;&#xA;    </html>"
2666269259783835616,52,5,"        public class NavDrawerItem {&#xD;&#xA;	&#xD;&#xA;	private String title;&#xD;&#xA;	private int icon;&#xD;&#xA;	private String count = ""0"";&#xD;&#xA;	// boolean to set visiblity of the counter&#xD;&#xA;	private boolean isCounterVisible = false;&#xD;&#xA;	&#xD;&#xA;	public NavDrawerItem(){}&#xD;&#xA;	public NavDrawerItem(String title, int icon){&#xD;&#xA;		this.title = title;&#xD;&#xA;		this.icon = icon;&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	public NavDrawerItem(String title, int icon, boolean isCounterVisible, String count){&#xD;&#xA;		this.title = title;&#xD;&#xA;		this.icon = icon;&#xD;&#xA;		this.isCounterVisible = isCounterVisible;&#xD;&#xA;		this.count = count;&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	public String getTitle(){&#xD;&#xA;		return this.title;&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	public int getIcon(){&#xD;&#xA;		return this.icon;&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	public String getCount(){&#xD;&#xA;		return this.count;&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	public boolean getCounterVisibility(){&#xD;&#xA;		return this.isCounterVisible;&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	public void setTitle(String title){&#xD;&#xA;		this.title = title;&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	public void setIcon(int icon){&#xD;&#xA;		this.icon = icon;&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	public void setCount(String count){&#xD;&#xA;		this.count = count;&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	public void setCounterVisibility(boolean isCounterVisible){&#xD;&#xA;		this.isCounterVisible = isCounterVisible;&#xD;&#xA;	}"
8727656016298049526,52,5,"    - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions&#xD;&#xA;    {&#xD;&#xA;        self.window=[[UIWindow alloc] initWithFrame:[[UIScreen mainScreen] bounds ]];&#xD;&#xA;            &#xD;&#xA;        self.viewCon=[[ViewController alloc] init];&#xD;&#xA;        self.navCon=[[UINavigationController alloc] initWithRootViewController:self.viewCon];&#xD;&#xA;        self.navCon.navigationBar.tintColor=[UIColor blackColor];&#xD;&#xA;        self.viewCon.title=@""First View"";&#xD;&#xA;        &#xD;&#xA;        self.fView=[[FirstViewController alloc] init];&#xD;&#xA;        self.FnavCon=[[UINavigationController alloc] initWithRootViewController:self.fView];&#xD;&#xA;        self.FnavCon.navigationBar.tintColor=[UIColor blackColor];&#xD;&#xA;    &#xD;&#xA;        self.fView.title=@""Secound View"";&#xD;&#xA;        &#xD;&#xA;        self.sView=[[SecoundViewController alloc] init];&#xD;&#xA;        self.SnavCon=[[UINavigationController alloc] initWithRootViewController:self.sView];&#xD;&#xA;        self.SnavCon.navigationBar.tintColor=[UIColor blackColor];&#xD;&#xA;        self.sView.title=@""Third View"";&#xD;&#xA;        .&#xD;&#xA;        .&#xD;&#xA;        // create UIViewController and UINavigationController As you need &#xD;&#xA;        .&#xD;&#xA;        .&#xD;&#xA;        .&#xD;&#xA;        UIImage *img1=[UIImage imageNamed:@""Australia.gif""];&#xD;&#xA;        self.tbItem1=[[UITabBarItem alloc] initWithTitle:@""First Page"" image:img1 tag:1];&#xD;&#xA;        self.viewCon.tabBarItem=self.tbItem1;&#xD;&#xA;        &#xD;&#xA;        UIImage *img2=[UIImage imageNamed:@""Cameroon.gif""];&#xD;&#xA;        self.tbItem2=[[UITabBarItem alloc] initWithTitle:@""Secound Page"" image:img2 tag:2];&#xD;&#xA;        self.fView.tabBarItem=self.tbItem2;&#xD;&#xA;        &#xD;&#xA;        UIImage *img3=[UIImage imageNamed:@""Canada.png""];&#xD;&#xA;        self.tbItem3=[[UITabBarItem alloc] initWithTitle:@""Third Page"" image:img3 tag:3];&#xD;&#xA;        self.sView.tabBarItem=self.tbItem3;&#xD;&#xA;        &#xD;&#xA;        NSMutableArray *viewArr=[[NSMutableArray alloc] init];&#xD;&#xA;        [viewArr addObject:self.navCon];&#xD;&#xA;        [viewArr addObject:self.FnavCon];&#xD;&#xA;        [viewArr addObject:self.SnavCon];&#xD;&#xA;    &#xD;&#xA;        &#xD;&#xA;        self.tbCon=[[UITabBarController alloc] init];&#xD;&#xA;        self.tbCon.viewControllers=viewArr;&#xD;&#xA;        &#xD;&#xA;        [self.window addSubview:tbCon.view];&#xD;&#xA;        &#xD;&#xA;        [self.window makeKeyAndVisible];&#xD;&#xA;        &#xD;&#xA;        return YES;&#xD;&#xA;    }"
-574489661167708308,52,5,"    using System;&#xD;&#xA;    using System.Collections.Generic;&#xD;&#xA;    using System.IO;&#xD;&#xA;    using System.Linq;&#xD;&#xA;    using System.Windows.Forms;&#xD;&#xA;    public static void PlayBeep(UInt16 frequency, int msDuration, UInt16 volume = 16383)&#xD;&#xA;    {&#xD;&#xA;        var mStrm = new MemoryStream();&#xD;&#xA;        BinaryWriter writer = new BinaryWriter(mStrm);&#xD;&#xA;        const double TAU = 2 * Math.PI;&#xD;&#xA;        int formatChunkSize = 16;&#xD;&#xA;        int headerSize = 8;&#xD;&#xA;        short formatType = 1;&#xD;&#xA;        short tracks = 1;&#xD;&#xA;        int samplesPerSecond = 44100;&#xD;&#xA;        short bitsPerSample = 16;&#xD;&#xA;        short frameSize = (short)(tracks * ((bitsPerSample + 7) / 8));&#xD;&#xA;        int bytesPerSecond = samplesPerSecond * frameSize;&#xD;&#xA;        int waveSize = 4;&#xD;&#xA;        int samples = (int)((decimal)samplesPerSecond * msDuration / 1000);&#xD;&#xA;        int dataChunkSize = samples * frameSize;&#xD;&#xA;        int fileSize = waveSize + headerSize + formatChunkSize + headerSize + dataChunkSize;&#xD;&#xA;        // var encoding = new System.Text.UTF8Encoding();&#xD;&#xA;        writer.Write(0x46464952); // = encoding.GetBytes(""RIFF"")&#xD;&#xA;        writer.Write(fileSize);&#xD;&#xA;        writer.Write(0x45564157); // = encoding.GetBytes(""WAVE"")&#xD;&#xA;        writer.Write(0x20746D66); // = encoding.GetBytes(""fmt "")&#xD;&#xA;        writer.Write(formatChunkSize);&#xD;&#xA;        writer.Write(formatType);&#xD;&#xA;        writer.Write(tracks);&#xD;&#xA;        writer.Write(samplesPerSecond);&#xD;&#xA;        writer.Write(bytesPerSecond);&#xD;&#xA;        writer.Write(frameSize);&#xD;&#xA;        writer.Write(bitsPerSample);&#xD;&#xA;        writer.Write(0x61746164); // = encoding.GetBytes(""data"")&#xD;&#xA;        writer.Write(dataChunkSize);&#xD;&#xA;        {&#xD;&#xA;            double theta = frequency * TAU / (double)samplesPerSecond;&#xD;&#xA;            // 'volume' is UInt16 with range 0 thru Uint16.MaxValue ( = 65 535)&#xD;&#xA;            // we need 'amp' to have the range of 0 thru Int16.MaxValue ( = 32 767)&#xD;&#xA;            double amp = volume >> 2; // so we simply set amp = volume / 2&#xD;&#xA;            for (int step = 0; step < samples; step++)&#xD;&#xA;            {&#xD;&#xA;                short s = (short)(amp * Math.Sin(theta * (double)step));&#xD;&#xA;                writer.Write(s);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        mStrm.Seek(0, SeekOrigin.Begin);&#xD;&#xA;        new System.Media.SoundPlayer(mStrm).Play();&#xD;&#xA;        writer.Close();&#xD;&#xA;        mStrm.Close();&#xD;&#xA;    } // public static void PlayBeep(UInt16 frequency, int msDuration, UInt16 volume = 16383)"
3062601997425763773,52,5,"        import java.util.Properties;&#xD;&#xA;        import javax.mail.Message;&#xD;&#xA;        import javax.mail.MessagingException;&#xD;&#xA;        import javax.mail.PasswordAuthentication;&#xD;&#xA;        import javax.mail.Session;&#xD;&#xA;        import javax.mail.Transport;&#xD;&#xA;        import javax.mail.internet.InternetAddress;&#xD;&#xA;        import javax.mail.internet.MimeMessage;&#xD;&#xA; &#xD;&#xA;        public class SendMailTLS {&#xD;&#xA; &#xD;&#xA;	public static void main(String[] args) {&#xD;&#xA; &#xD;&#xA;		final String username = ""username@gmail.com"";&#xD;&#xA;		final String password = ""password"";&#xD;&#xA; &#xD;&#xA;		Properties props = new Properties();&#xD;&#xA;		props.put(""mail.smtp.auth"", ""true"");&#xD;&#xA;		props.put(""mail.smtp.starttls.enable"", ""true"");&#xD;&#xA;		props.put(""mail.smtp.host"", ""smtp.gmail.com"");&#xD;&#xA;		props.put(""mail.smtp.port"", ""587"");&#xD;&#xA; &#xD;&#xA;		Session session = Session.getInstance(props,&#xD;&#xA;		  new javax.mail.Authenticator() {&#xD;&#xA;			protected PasswordAuthentication getPasswordAuthentication() {&#xD;&#xA;				return new PasswordAuthentication(username, password);&#xD;&#xA;			}&#xD;&#xA;		  });&#xD;&#xA; &#xD;&#xA;		try {&#xD;&#xA; &#xD;&#xA;			Message message = new MimeMessage(session);&#xD;&#xA;			message.setFrom(new InternetAddress(""from-email@gmail.com""));&#xD;&#xA;			message.setRecipients(Message.RecipientType.TO,&#xD;&#xA;				InternetAddress.parse(""to-email@gmail.com""));&#xD;&#xA;			message.setSubject(""Testing Subject"");&#xD;&#xA;			message.setText(""Dear Mail Crawler,""&#xD;&#xA;				+ ""\n\n No spam to my email, please!"");&#xD;&#xA; &#xD;&#xA;			Transport.send(message);&#xD;&#xA; &#xD;&#xA;			System.out.println(""Done"");&#xD;&#xA; &#xD;&#xA;	&#xD;&#xA;        	} catch (MessagingException e) {&#xD;&#xA;			&#xD;&#xA;        throw new RuntimeException(e);&#xD;&#xA;	&#xD;&#xA;        	}&#xD;&#xA;	&#xD;&#xA;        }&#xD;&#xA;        }"
2451959448074786619,53,5,"    using System;&#xD;&#xA;    using System.Collections.Generic;&#xD;&#xA;    using System.Linq;&#xD;&#xA;    using System.Text;&#xD;&#xA;    using System.Threading.Tasks;&#xD;&#xA;    &#xD;&#xA;    namespace ConsoleApplication50&#xD;&#xA;    {&#xD;&#xA;        class Program&#xD;&#xA;        {&#xD;&#xA;            static void Main(string[] args)&#xD;&#xA;            {&#xD;&#xA;           &#xD;&#xA;            NumberManipulator manipulator = new NumberManipulator();&#xD;&#xA;            Console.WriteLine(""Please Enter Factorial Number:"");&#xD;&#xA;            int a= Convert.ToInt32(Console.ReadLine());&#xD;&#xA;            &#xD;&#xA;            Console.WriteLine(""---Basic Calling--"");&#xD;&#xA;            Console.WriteLine(""Factorial of {0} is: {1}"" ,a, manipulator.factorial(a));&#xD;&#xA;         &#xD;&#xA;            Console.WriteLine(""--Recursively Calling--"");&#xD;&#xA;            Console.WriteLine(""Factorial of {0} is: {1}"", a, manipulator.recursively(a));&#xD;&#xA;            &#xD;&#xA;            Console.ReadLine();&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    class NumberManipulator&#xD;&#xA;    {&#xD;&#xA;        public int factorial(int num)&#xD;&#xA;        {&#xD;&#xA;            int result=1;&#xD;&#xA;            int b = 1;&#xD;&#xA;            do&#xD;&#xA;            {&#xD;&#xA;                result = result * b;&#xD;&#xA;                Console.WriteLine(result);&#xD;&#xA;                b++;&#xD;&#xA;            } while (num >= b);&#xD;&#xA;            return result;&#xD;&#xA;        }&#xD;&#xA;        public int recursively(int num)&#xD;&#xA;        {&#xD;&#xA;            if (num <= 1)&#xD;&#xA;            {&#xD;&#xA;                return 1;&#xD;&#xA;            }&#xD;&#xA;            else&#xD;&#xA;            {&#xD;&#xA;                return recursively(num - 1) * num;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;    }"
3864838319821062167,53,5,"    package helloWorldPackage;&#xD;&#xA;     &#xD;&#xA;    import javacard.framework.APDU;&#xD;&#xA;    import javacard.framework.Applet;&#xD;&#xA;    import javacard.framework.ISO7816;&#xD;&#xA;    import javacard.framework.ISOException;&#xD;&#xA;    import javacard.framework.Util;&#xD;&#xA;     &#xD;&#xA;    public class HelloWorldApplet extends Applet &#xD;&#xA;    {&#xD;&#xA;    	private static final byte[] helloWorld = {(byte)'H',(byte)'e',(byte)'l',(byte)'l',(byte)'o',(byte)' ',(byte)'W',(byte)'o',(byte)'r',(byte)'l',(byte)'d',};&#xD;&#xA;    	private static final byte HW_CLA = (byte)0x80;&#xD;&#xA;    	private static final byte HW_INS = (byte)0x00;&#xD;&#xA;     &#xD;&#xA;    	public static void install(byte[] bArray, short bOffset, byte bLength) &#xD;&#xA;    		{&#xD;&#xA;    		new HelloWorldApplet().register(bArray, (short) (bOffset + 1), bArray[bOffset]);&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    	public void process(APDU apdu) &#xD;&#xA;    		{&#xD;&#xA;    		if (selectingApplet()) &#xD;&#xA;    			{&#xD;&#xA;    			return;&#xD;&#xA;    			}&#xD;&#xA;     &#xD;&#xA;    		byte[] buffer = apdu.getBuffer();&#xD;&#xA;    		byte CLA = (byte) (buffer[ISO7816.OFFSET_CLA] & 0xFF);&#xD;&#xA;    		byte INS = (byte) (buffer[ISO7816.OFFSET_INS] & 0xFF);&#xD;&#xA;     &#xD;&#xA;    		if (CLA != HW_CLA)&#xD;&#xA;    			{&#xD;&#xA;    			ISOException.throwIt(ISO7816.SW_CLA_NOT_SUPPORTED);&#xD;&#xA;    			}&#xD;&#xA;    &#xD;&#xA;    		switch ( INS ) &#xD;&#xA;    			{&#xD;&#xA;    			case HW_INS:&#xD;&#xA;    				getHelloWorld( apdu );&#xD;&#xA;    				break;&#xD;&#xA;    			default:&#xD;&#xA;    				ISOException.throwIt(ISO7816.SW_INS_NOT_SUPPORTED);&#xD;&#xA;    			}&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    	private void getHelloWorld( APDU apdu)&#xD;&#xA;    		{&#xD;&#xA;    		byte[] buffer = apdu.getBuffer();&#xD;&#xA;    		short length = (short) helloWorld.length;&#xD;&#xA;    		Util.arrayCopyNonAtomic(helloWorld, (short)0, buffer, (short)0, (short) length);&#xD;&#xA;    		apdu.setOutgoingAndSend((short)0, length);&#xD;&#xA;    		}&#xD;&#xA;    }"
-3655260731246317935,53,5,"        public class Contact {&#xD;&#xA;    	&#xD;&#xA;    	//private variables&#xD;&#xA;    	int _id;&#xD;&#xA;    	String _name;&#xD;&#xA;    	String _phone_number;&#xD;&#xA;    	&#xD;&#xA;    	// Empty constructor&#xD;&#xA;    	public Contact(){&#xD;&#xA;    		&#xD;&#xA;    	}&#xD;&#xA;    	// constructor&#xD;&#xA;    	public Contact(int id, String name, String _phone_number){&#xD;&#xA;    		this._id = id;&#xD;&#xA;    		this._name = name;&#xD;&#xA;    		this._phone_number = _phone_number;&#xD;&#xA;    	}&#xD;&#xA;    	&#xD;&#xA;    	// constructor&#xD;&#xA;    	public Contact(String name, String _phone_number){&#xD;&#xA;    		this._name = name;&#xD;&#xA;    		this._phone_number = _phone_number;&#xD;&#xA;    	}&#xD;&#xA;    	// getting ID&#xD;&#xA;    	public int getID(){&#xD;&#xA;    		return this._id;&#xD;&#xA;    	}&#xD;&#xA;    	&#xD;&#xA;    	// setting id&#xD;&#xA;    	public void setID(int id){&#xD;&#xA;    		this._id = id;&#xD;&#xA;    	}&#xD;&#xA;    	&#xD;&#xA;    	// getting name&#xD;&#xA;    	public String getName(){&#xD;&#xA;    		return this._name;&#xD;&#xA;    	}&#xD;&#xA;    	&#xD;&#xA;    	// setting name&#xD;&#xA;    	public void setName(String name){&#xD;&#xA;    		this._name = name;&#xD;&#xA;    	}&#xD;&#xA;    	&#xD;&#xA;    	// getting phone number&#xD;&#xA;    	public String getPhoneNumber(){&#xD;&#xA;    		return this._phone_number;&#xD;&#xA;    	}&#xD;&#xA;    	&#xD;&#xA;    	// setting phone number&#xD;&#xA;    	public void setPhoneNumber(String phone_number){&#xD;&#xA;    		this._phone_number = phone_number;&#xD;&#xA;    	}&#xD;&#xA;      }"
4364389210239291192,53,5,"    import threading&#xD;&#xA;    import sys&#xD;&#xA;     &#xD;&#xA;    class StopThread(StopIteration): pass&#xD;&#xA;    threading.SystemExit = SystemExit, StopThread&#xD;&#xA;    class Thread2(threading.Thread):&#xD;&#xA;        def stop(self):&#xD;&#xA;            self.__stop = True&#xD;&#xA;        def _bootstrap(self):&#xD;&#xA;            if threading._trace_hook is not None:&#xD;&#xA;                raise ValueError('Cannot run thread with tracing!')&#xD;&#xA;            self.__stop = False&#xD;&#xA;            sys.settrace(self.__trace)&#xD;&#xA;            super()._bootstrap()&#xD;&#xA;        def __trace(self, frame, event, arg):&#xD;&#xA;            if self.__stop:&#xD;&#xA;                raise StopThread()&#xD;&#xA;            return self.__trace&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    class Thread3(threading.Thread):&#xD;&#xA;    &#xD;&#xA;        def _bootstrap(self, stop_thread=False):&#xD;&#xA;            def stop():&#xD;&#xA;                nonlocal stop_thread&#xD;&#xA;                stop_thread = True&#xD;&#xA;            self.stop = stop&#xD;&#xA;    &#xD;&#xA;            def tracer(*_):&#xD;&#xA;                if stop_thread:&#xD;&#xA;                    raise StopThread()&#xD;&#xA;                return tracer&#xD;&#xA;            sys.settrace(tracer)&#xD;&#xA;            super()._bootstrap()&#xD;&#xA;     &#xD;&#xA;    ################################################################################&#xD;&#xA;     &#xD;&#xA;    import time&#xD;&#xA;     &#xD;&#xA;    def main():&#xD;&#xA;        test = Thread2(target=printer)&#xD;&#xA;        test.start()&#xD;&#xA;        time.sleep(1)&#xD;&#xA;        test.stop()&#xD;&#xA;        test.join()&#xD;&#xA;     &#xD;&#xA;    def printer():&#xD;&#xA;        while True:&#xD;&#xA;            print(time.time() % 1)&#xD;&#xA;            time.sleep(0.1)&#xD;&#xA;     &#xD;&#xA;    if __name__ == '__main__':&#xD;&#xA;        main()"
5125943696606500955,54,5,"    function GetDosOutput(CommandLine: string; Work: string = 'C:\'): string;&#xD;&#xA;    var&#xD;&#xA;      SA: TSecurityAttributes;&#xD;&#xA;      SI: TStartupInfo;&#xD;&#xA;      PI: TProcessInformation;&#xD;&#xA;      StdOutPipeRead, StdOutPipeWrite: THandle;&#xD;&#xA;      WasOK: Boolean;&#xD;&#xA;      Buffer: array[0..255] of AnsiChar;&#xD;&#xA;      BytesRead: Cardinal;&#xD;&#xA;      WorkDir: string;&#xD;&#xA;      Handle: Boolean;&#xD;&#xA;    begin&#xD;&#xA;      Result := '';&#xD;&#xA;      with SA do begin&#xD;&#xA;        nLength := SizeOf(SA);&#xD;&#xA;        bInheritHandle := True;&#xD;&#xA;        lpSecurityDescriptor := nil;&#xD;&#xA;      end;&#xD;&#xA;      CreatePipe(StdOutPipeRead, StdOutPipeWrite, @SA, 0);&#xD;&#xA;      try&#xD;&#xA;        with SI do&#xD;&#xA;        begin&#xD;&#xA;          FillChar(SI, SizeOf(SI), 0);&#xD;&#xA;          cb := SizeOf(SI);&#xD;&#xA;          dwFlags := STARTF_USESHOWWINDOW or STARTF_USESTDHANDLES;&#xD;&#xA;          wShowWindow := SW_HIDE;&#xD;&#xA;          hStdInput := GetStdHandle(STD_INPUT_HANDLE); // don't redirect stdin&#xD;&#xA;          hStdOutput := StdOutPipeWrite;&#xD;&#xA;          hStdError := StdOutPipeWrite;&#xD;&#xA;        end;&#xD;&#xA;        WorkDir := Work;&#xD;&#xA;        Handle := CreateProcess(nil, PChar('cmd.exe /C ' + CommandLine),&#xD;&#xA;                                nil, nil, True, 0, nil,&#xD;&#xA;                                PChar(WorkDir), SI, PI);&#xD;&#xA;        CloseHandle(StdOutPipeWrite);&#xD;&#xA;        if Handle then&#xD;&#xA;          try&#xD;&#xA;            repeat&#xD;&#xA;              WasOK := ReadFile(StdOutPipeRead, Buffer, 255, BytesRead, nil);&#xD;&#xA;              if BytesRead > 0 then&#xD;&#xA;              begin&#xD;&#xA;                Buffer[BytesRead] := #0;&#xD;&#xA;                Result := Result + Buffer;&#xD;&#xA;              end;&#xD;&#xA;            until not WasOK or (BytesRead = 0);&#xD;&#xA;            WaitForSingleObject(PI.hProcess, INFINITE);&#xD;&#xA;          finally&#xD;&#xA;            CloseHandle(PI.hThread);&#xD;&#xA;            CloseHandle(PI.hProcess);&#xD;&#xA;          end;&#xD;&#xA;      finally&#xD;&#xA;        CloseHandle(StdOutPipeRead);&#xD;&#xA;      end;&#xD;&#xA;    end;"
7431128153359959656,54,5,"    (function ($) {&#xD;&#xA;        $.fn.simulateDragDrop = function (options) {&#xD;&#xA;            return this.each(function () {&#xD;&#xA;                new $.simulateDragDrop(this, options);&#xD;&#xA;            });&#xD;&#xA;        };&#xD;&#xA;        $.simulateDragDrop = function (elem, options) {&#xD;&#xA;            this.options = options;&#xD;&#xA;            this.simulateEvent(elem, options);&#xD;&#xA;        };&#xD;&#xA;        $.extend($.simulateDragDrop.prototype, {&#xD;&#xA;            simulateEvent: function (elem, options) {&#xD;&#xA;                /*Simulating drag start*/&#xD;&#xA;                var type = 'dragstart';&#xD;&#xA;                var event = this.createEvent(type);&#xD;&#xA;                this.dispatchEvent(elem, type, event);&#xD;&#xA;    &#xD;&#xA;                /*Simulating drop*/&#xD;&#xA;                type = 'drop';&#xD;&#xA;                var dropEvent = this.createEvent(type, {});&#xD;&#xA;                dropEvent.dataTransfer = event.dataTransfer;&#xD;&#xA;                this.dispatchEvent($(options.dropTarget)[0], type, dropEvent);&#xD;&#xA;    &#xD;&#xA;                /*Simulating drag end*/&#xD;&#xA;                type = 'dragend';&#xD;&#xA;                var dragEndEvent = this.createEvent(type, {});&#xD;&#xA;                dragEndEvent.dataTransfer = event.dataTransfer;&#xD;&#xA;                this.dispatchEvent(elem, type, dragEndEvent);&#xD;&#xA;            },&#xD;&#xA;            createEvent: function (type) {&#xD;&#xA;                var event = document.createEvent(""CustomEvent"");&#xD;&#xA;                event.initCustomEvent(type, true, true, null);&#xD;&#xA;                event.dataTransfer = {&#xD;&#xA;                    data: {&#xD;&#xA;                    },&#xD;&#xA;                    setData: function (type, val) {&#xD;&#xA;                        this.data[type] = val;&#xD;&#xA;                    },&#xD;&#xA;                    getData: function (type) {&#xD;&#xA;                        return this.data[type];&#xD;&#xA;                    }&#xD;&#xA;                };&#xD;&#xA;                return event;&#xD;&#xA;            },&#xD;&#xA;            dispatchEvent: function (elem, type, event) {&#xD;&#xA;                if (elem.dispatchEvent) {&#xD;&#xA;                    elem.dispatchEvent(event);&#xD;&#xA;                } else if (elem.fireEvent) {&#xD;&#xA;                    elem.fireEvent(""on"" + type, event);&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        });&#xD;&#xA;    &#xD;&#xA;    })(jQuery);"
478359489281472843,54,5,"     HttpURLConnection connection = null;&#xD;&#xA;    DataOutputStream outputStream = null;&#xD;&#xA;    DataInputStream inputStream = null;&#xD;&#xA;    String pathToOurFile = ""/data/file_to_send.mp3"";&#xD;&#xA;    String urlServer = ""http://192.168.1.1/handle_upload.php"";&#xD;&#xA;    String lineEnd = ""\r\n"";&#xD;&#xA;    String twoHyphens = ""--"";&#xD;&#xA;    String boundary =  ""*****"";&#xD;&#xA;    int bytesRead, bytesAvailable, bufferSize;&#xD;&#xA;    byte[] buffer;&#xD;&#xA;    int maxBufferSize = 1*1024*1024;&#xD;&#xA;    try&#xD;&#xA;    {&#xD;&#xA;    FileInputStream fileInputStream = new FileInputStream(new File(pathToOurFile) );&#xD;&#xA;    &#xD;&#xA;    URL url = new URL(urlServer);&#xD;&#xA;    connection = (HttpURLConnection) url.openConnection();&#xD;&#xA;    // Allow Inputs & Outputs&#xD;&#xA;    connection.setDoInput(true);&#xD;&#xA;    connection.setDoOutput(true);&#xD;&#xA;    connection.setUseCaches(false);&#xD;&#xA;    // Enable POST method&#xD;&#xA;    connection.setRequestMethod(""POST"");&#xD;&#xA;    connection.setRequestProperty(""Connection"", ""Keep-Alive"");&#xD;&#xA;    connection.setRequestProperty(""Content-Type"", ""multipart/form-data;boundary=""+boundary);&#xD;&#xA;    outputStream = new DataOutputStream( connection.getOutputStream() );&#xD;&#xA;    outputStream.writeBytes(twoHyphens + boundary + lineEnd);&#xD;&#xA;    outputStream.writeBytes(""Content-Disposition: form-data; name=\""uploadedfile\"";filename=\"""" + pathToOurFile +""\"""" + lineEnd);&#xD;&#xA;    outputStream.writeBytes(lineEnd);&#xD;&#xA;    bytesAvailable = fileInputStream.available();&#xD;&#xA;    bufferSize = Math.min(bytesAvailable, maxBufferSize);&#xD;&#xA;    buffer = new byte[bufferSize];&#xD;&#xA;    // Read file&#xD;&#xA;    bytesRead = fileInputStream.read(buffer, 0, bufferSize);&#xD;&#xA;    while (bytesRead > 0)&#xD;&#xA;    {&#xD;&#xA;    outputStream.write(buffer, 0, bufferSize);&#xD;&#xA;    bytesAvailable = fileInputStream.available();&#xD;&#xA;    bufferSize = Math.min(bytesAvailable, maxBufferSize);&#xD;&#xA;    bytesRead = fileInputStream.read(buffer, 0, bufferSize);&#xD;&#xA;    }&#xD;&#xA;    outputStream.writeBytes(lineEnd);&#xD;&#xA;    outputStream.writeBytes(twoHyphens + boundary + twoHyphens + lineEnd);&#xD;&#xA;    // Responses from the server (code and message)&#xD;&#xA;    serverResponseCode = connection.getResponseCode();&#xD;&#xA;    serverResponseMessage = connection.getResponseMessage();&#xD;&#xA;    fileInputStream.close();&#xD;&#xA;    outputStream.flush();&#xD;&#xA;    outputStream.close();&#xD;&#xA;    }&#xD;&#xA;    catch (Exception ex)&#xD;&#xA;    {&#xD;&#xA;    //Exception handling&#xD;&#xA;    }"
4995676487870815889,54,5,"         /* A simple server in the internet domain using TCP&#xD;&#xA;          The port number is passed as an argument */&#xD;&#xA;           #include <stdio.h>&#xD;&#xA;           #include <stdlib.h>&#xD;&#xA;           #include <string.h>&#xD;&#xA;           #include <unistd.h>&#xD;&#xA;           #include <sys/types.h> &#xD;&#xA;           #include <sys/socket.h>&#xD;&#xA;           #include <netinet/in.h>&#xD;&#xA;           void error(const char *msg)&#xD;&#xA;           {&#xD;&#xA;             perror(msg);&#xD;&#xA;              exit(1);&#xD;&#xA;            }&#xD;&#xA;           int main(int argc, char *argv[])&#xD;&#xA;           {&#xD;&#xA;              int sockfd, newsockfd, portno;&#xD;&#xA;              socklen_t clilen;&#xD;&#xA;              char buffer[256];&#xD;&#xA;              struct sockaddr_in serv_addr, cli_addr;&#xD;&#xA;              int n;&#xD;&#xA;              if (argc < 2) {&#xD;&#xA;                  fprintf(stderr,""ERROR, no port provided\n"");&#xD;&#xA;                 exit(1);&#xD;&#xA;            }&#xD;&#xA;           sockfd = socket(AF_INET, SOCK_STREAM, 0);&#xD;&#xA;           if (sockfd < 0) &#xD;&#xA;           error(""ERROR opening socket"");&#xD;&#xA;         bzero((char *) &serv_addr, sizeof(serv_addr));&#xD;&#xA;         portno = atoi(argv[1]);&#xD;&#xA;         serv_addr.sin_family = AF_INET;&#xD;&#xA;         serv_addr.sin_addr.s_addr = INADDR_ANY;&#xD;&#xA;         serv_addr.sin_port = htons(portno);&#xD;&#xA;         if (bind(sockfd, (struct sockaddr *) &serv_addr,&#xD;&#xA;              sizeof(serv_addr)) < 0) &#xD;&#xA;              error(""ERROR on binding"");&#xD;&#xA;         listen(sockfd,5);&#xD;&#xA;         clilen = sizeof(cli_addr);&#xD;&#xA;         newsockfd = accept(sockfd, &#xD;&#xA;                 (struct sockaddr *) &cli_addr, &#xD;&#xA;                 &clilen);&#xD;&#xA;         if (newsockfd < 0) &#xD;&#xA;              error(""ERROR on accept"");&#xD;&#xA;         bzero(buffer,256);&#xD;&#xA;         n = read(newsockfd,buffer,255);&#xD;&#xA;         if (n < 0) error(""ERROR reading from socket"");&#xD;&#xA;         printf(""Here is the message: %s\n"",buffer);&#xD;&#xA;         n = write(newsockfd,""I got your message"",18);&#xD;&#xA;         if (n < 0) error(""ERROR writing to socket"");&#xD;&#xA;         close(newsockfd);&#xD;&#xA;         close(sockfd);&#xD;&#xA;         return 0; &#xD;&#xA;         }&#xD;&#xA;  "
8680749741017432481,55,5,"    <?xml version=""1.0"" encoding=""ISO-8859-1""?>&#xD;&#xA;    <output>&#xD;&#xA;	<orders>&#xD;&#xA;		<order>&#xD;&#xA;			<id>1</id>&#xD;&#xA;			<number>10002</number>&#xD;&#xA;			<type>Loading</type>&#xD;&#xA;			<date>2013-01-01T02:30:00</date>&#xD;&#xA;		</order>&#xD;&#xA;		<order>&#xD;&#xA;			<id>2</id>&#xD;&#xA;			<number>10003</number>&#xD;&#xA;			<type>Loading</type>&#xD;&#xA;			<date>2013-01-01T010:30:00</date>&#xD;&#xA;		</order>&#xD;&#xA;		<order>&#xD;&#xA;			<id>3</id>&#xD;&#xA;			<number>10004</number>&#xD;&#xA;			<type>Loaded</type>&#xD;&#xA;			<date>2013-01-01T12:30:00</date>&#xD;&#xA;		</order>&#xD;&#xA;	</orders>&#xD;&#xA;	<quantities>&#xD;&#xA;		<quantity>&#xD;&#xA;			<id_order>1</id_order>&#xD;&#xA;			<unit>KG</unit>&#xD;&#xA;			<value>1000</value>&#xD;&#xA;		</quantity>&#xD;&#xA;		<quantity>&#xD;&#xA;			<id_order>1</id_order>&#xD;&#xA;			<unit>PAL</unit>&#xD;&#xA;			<value>3</value>&#xD;&#xA;		</quantity>&#xD;&#xA;		<quantity>&#xD;&#xA;			<id_order>1</id_order>&#xD;&#xA;			<unit>M3</unit>&#xD;&#xA;			<value>1.5</value>&#xD;&#xA;		</quantity>&#xD;&#xA;		<quantity>&#xD;&#xA;			<id_order>2</id_order>&#xD;&#xA;			<unit>KG</unit>&#xD;&#xA;			<value>2000</value>&#xD;&#xA;		</quantity>&#xD;&#xA;		<quantity>&#xD;&#xA;			<id_order>2</id_order>&#xD;&#xA;			<unit>PAL</unit>&#xD;&#xA;			<value>4</value>&#xD;&#xA;		</quantity>&#xD;&#xA;		<quantity>&#xD;&#xA;			<id_order>3</id_order>&#xD;&#xA;			<unit>KG</unit>&#xD;&#xA;			<value>5000</value> &#xD;&#xA;		</quantity>&#xD;&#xA;	</quantities>&#xD;&#xA;    </output>"
-2702174093106255284,55,5,"    var loadedobjects = """"&#xD;&#xA;    var rootdomain = ""http://"" + window.location.hostname&#xD;&#xA;    function ajaxpage(url, containerid) {&#xD;&#xA;        var page_request = false&#xD;&#xA;        if (window.XMLHttpRequest) // if Mozilla, Safari etc&#xD;&#xA;            page_request = new XMLHttpRequest()&#xD;&#xA;        else if (window.ActiveXObject) { // if IE&#xD;&#xA;            try {&#xD;&#xA;                page_request = new ActiveXObject(""Msxml2.XMLHTTP"")&#xD;&#xA;            }&#xD;&#xA;            catch (e) {&#xD;&#xA;                try {&#xD;&#xA;                    page_request = new ActiveXObject(""Microsoft.XMLHTTP"")&#xD;&#xA;                }&#xD;&#xA;                catch (e) {&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        else&#xD;&#xA;            return false&#xD;&#xA;        page_request.onreadystatechange = function () {&#xD;&#xA;            loadpage(page_request, containerid)&#xD;&#xA;        }&#xD;&#xA;        page_request.open('GET', url, true)&#xD;&#xA;        page_request.send(null)&#xD;&#xA;    }&#xD;&#xA;    function loadpage(page_request, containerid) {&#xD;&#xA;        if (page_request.readyState == 4 && (page_request.status == 200 || window.location.href.indexOf(""http"") == -1))&#xD;&#xA;            document.getElementById(containerid).innerHTML = page_request.responseText&#xD;&#xA;    }&#xD;&#xA;    function loadobjs() {&#xD;&#xA;        if (!document.getElementById)&#xD;&#xA;            return&#xD;&#xA;        for (i = 0; i < arguments.length; i++) {&#xD;&#xA;            var file = arguments[i]&#xD;&#xA;            var fileref = """"&#xD;&#xA;            if (loadedobjects.indexOf(file) == -1) { //Check to see if this object has not already been added to page before proceeding&#xD;&#xA;                if (file.indexOf("".js"") != -1) { //If object is a js file&#xD;&#xA;                    fileref = document.createElement('script')&#xD;&#xA;                    fileref.setAttribute(""type"", ""text/javascript"");&#xD;&#xA;                    fileref.setAttribute(""src"", file);&#xD;&#xA;                }&#xD;&#xA;                else if (file.indexOf("".css"") != -1) { //If object is a css file&#xD;&#xA;                    fileref = document.createElement(""link"")&#xD;&#xA;                    fileref.setAttribute(""rel"", ""stylesheet"");&#xD;&#xA;                    fileref.setAttribute(""type"", ""text/css"");&#xD;&#xA;                    fileref.setAttribute(""href"", file);&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;            if (fileref != """") {&#xD;&#xA;                document.getElementsByTagName(""head"").item(0).appendChild(fileref)&#xD;&#xA;                loadedobjects += file + "" "" //Remember this object as being already added to page&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }"
6397820352807159964,55,5,"    <?xml version=""1.0"" encoding=""utf-8""?>&#xD;&#xA;    <RelativeLayout xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;        android:layout_width=""fill_parent""&#xD;&#xA;        android:layout_height=""fill_parent""&#xD;&#xA;        android:orientation=""vertical"" >&#xD;&#xA;        &#xD;&#xA;        <Button android:id=""@+id/btnShowLocation"" &#xD;&#xA;            android:layout_width=""wrap_content""&#xD;&#xA;            android:layout_height=""wrap_content""&#xD;&#xA;            android:text=""Show Location""&#xD;&#xA;            android:layout_centerVertical=""true""&#xD;&#xA;            android:layout_centerHorizontal=""true""/>&#xD;&#xA;    &#xD;&#xA;        <ToggleButton&#xD;&#xA;            android:id=""@+id/gps""&#xD;&#xA;            android:layout_width=""wrap_content""&#xD;&#xA;            android:layout_height=""wrap_content""&#xD;&#xA;            android:layout_above=""@+id/btnShowLocation""&#xD;&#xA;            android:layout_alignRight=""@+id/btnShowLocation""&#xD;&#xA;            android:layout_marginBottom=""49dp""&#xD;&#xA;            android:layout_marginRight=""72dp""&#xD;&#xA;            android:text=""GPS""&#xD;&#xA;             />&#xD;&#xA;    &#xD;&#xA;        <ToggleButton&#xD;&#xA;            android:id=""@+id/wifi""&#xD;&#xA;            android:layout_width=""wrap_content""&#xD;&#xA;            android:layout_height=""wrap_content""&#xD;&#xA;            android:layout_alignBaseline=""@+id/gps""&#xD;&#xA;            android:layout_alignBottom=""@+id/gps""&#xD;&#xA;            android:layout_alignLeft=""@+id/btnShowLocation""&#xD;&#xA;            android:layout_marginLeft=""79dp""&#xD;&#xA;            android:text=""WIFI"" />&#xD;&#xA;    &#xD;&#xA;        <TextView&#xD;&#xA;            android:id=""@+id/textView1""&#xD;&#xA;            android:layout_width=""wrap_content""&#xD;&#xA;            android:layout_height=""wrap_content""&#xD;&#xA;            android:layout_above=""@+id/gps""&#xD;&#xA;            android:layout_alignLeft=""@+id/btnShowLocation""&#xD;&#xA;            android:text=""GPS""&#xD;&#xA;            android:textSize=""15sp"" />&#xD;&#xA;    &#xD;&#xA;        <TextView&#xD;&#xA;            android:id=""@+id/textView2""&#xD;&#xA;            android:layout_width=""wrap_content""&#xD;&#xA;            android:layout_height=""wrap_content""&#xD;&#xA;            android:layout_alignBaseline=""@+id/textView1""&#xD;&#xA;            android:layout_alignBottom=""@+id/textView1""&#xD;&#xA;            android:layout_marginLeft=""61dp""&#xD;&#xA;            android:layout_toRightOf=""@+id/textView1""&#xD;&#xA;            android:text=""WIFI""&#xD;&#xA;            android:textSize=""15sp"" />&#xD;&#xA;    &#xD;&#xA;    </RelativeLayout>"
7278243207910670707,55,5,"    .rating {&#xD;&#xA;        float:left;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    /* :not(:checked) is a filter, so that browsers that don’t support :checked don’t &#xD;&#xA;       follow these rules. Every browser that supports :checked also supports :not(), so&#xD;&#xA;       it doesn’t make the test unnecessarily selective */&#xD;&#xA;    .rating:not(:checked) > input {&#xD;&#xA;        position:absolute;&#xD;&#xA;        top:-9999px;&#xD;&#xA;        clip:rect(0,0,0,0);&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .rating:not(:checked) > label {&#xD;&#xA;        float:right;&#xD;&#xA;        width:1em;&#xD;&#xA;        padding:0 .1em;&#xD;&#xA;        overflow:hidden;&#xD;&#xA;        white-space:nowrap;&#xD;&#xA;        cursor:pointer;&#xD;&#xA;        font-size:200%;&#xD;&#xA;        line-height:1.2;&#xD;&#xA;        color:#ddd;&#xD;&#xA;        text-shadow:1px 1px #bbb, 2px 2px #666, .1em .1em .2em rgba(0,0,0,.5);&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .rating:not(:checked) > label:before {&#xD;&#xA;        content: '★ ';&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .rating > input:checked ~ label {&#xD;&#xA;        color: #f70;&#xD;&#xA;        text-shadow:1px 1px #c60, 2px 2px #940, .1em .1em .2em rgba(0,0,0,.5);&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .rating:not(:checked) > label:hover,&#xD;&#xA;    .rating:not(:checked) > label:hover ~ label {&#xD;&#xA;        color: gold;&#xD;&#xA;        text-shadow:1px 1px goldenrod, 2px 2px #B57340, .1em .1em .2em rgba(0,0,0,.5);&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .rating > input:checked + label:hover,&#xD;&#xA;    .rating > input:checked + label:hover ~ label,&#xD;&#xA;    .rating > input:checked ~ label:hover,&#xD;&#xA;    .rating > input:checked ~ label:hover ~ label,&#xD;&#xA;    .rating > label:hover ~ input:checked ~ label {&#xD;&#xA;        color: #ea0;&#xD;&#xA;        text-shadow:1px 1px goldenrod, 2px 2px #B57340, .1em .1em .2em rgba(0,0,0,.5);&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .rating > label:active {&#xD;&#xA;        position:relative;&#xD;&#xA;        top:2px;&#xD;&#xA;        left:2px;&#xD;&#xA;    }"
985360751943875297,56,5,"        public class RealPathUtil {&#xD;&#xA;    &#xD;&#xA;        @SuppressLint(""NewApi"")&#xD;&#xA;        public static String getRealPathFromURI_API19(Context context, Uri uri){&#xD;&#xA;            String filePath = """";&#xD;&#xA;            String wholeID = DocumentsContract.getDocumentId(uri);&#xD;&#xA;    &#xD;&#xA;             // Split at colon, use second item in the array&#xD;&#xA;             String id = wholeID.split("":"")[1];&#xD;&#xA;    &#xD;&#xA;             String[] column = { MediaStore.Images.Media.DATA };     &#xD;&#xA;    &#xD;&#xA;             // where id is equal to             &#xD;&#xA;             String sel = MediaStore.Images.Media._ID + ""=?"";&#xD;&#xA;    &#xD;&#xA;             Cursor cursor = context.getContentResolver().query(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, &#xD;&#xA;                                       column, sel, new String[]{ id }, null);&#xD;&#xA;             &#xD;&#xA;             int columnIndex = cursor.getColumnIndex(column[0]);&#xD;&#xA;    &#xD;&#xA;             if (cursor.moveToFirst()) {&#xD;&#xA;                 filePath = cursor.getString(columnIndex);&#xD;&#xA;             }   &#xD;&#xA;             cursor.close();&#xD;&#xA;             return filePath;&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        @SuppressLint(""NewApi"")&#xD;&#xA;        public static String getRealPathFromURI_API11to18(Context context, Uri contentUri) {&#xD;&#xA;              String[] proj = { MediaStore.Images.Media.DATA };&#xD;&#xA;              String result = null;&#xD;&#xA;               &#xD;&#xA;              CursorLoader cursorLoader = new CursorLoader(&#xD;&#xA;                      context, &#xD;&#xA;                contentUri, proj, null, null, null);        &#xD;&#xA;              Cursor cursor = cursorLoader.loadInBackground();&#xD;&#xA;              &#xD;&#xA;              if(cursor != null){&#xD;&#xA;               int column_index = &#xD;&#xA;                 cursor.getColumnIndexOrThrow(MediaStore.Images.Media.DATA);&#xD;&#xA;               cursor.moveToFirst();&#xD;&#xA;               result = cursor.getString(column_index);&#xD;&#xA;              }&#xD;&#xA;              return result;  &#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        public static String getRealPathFromURI_BelowAPI11(Context context, Uri contentUri){&#xD;&#xA;                   String[] proj = { MediaStore.Images.Media.DATA };&#xD;&#xA;                   Cursor cursor = context.getContentResolver().query(contentUri, proj, null, null, null);&#xD;&#xA;                   int column_index&#xD;&#xA;              = cursor.getColumnIndexOrThrow(MediaStore.Images.Media.DATA);&#xD;&#xA;                   cursor.moveToFirst();&#xD;&#xA;                   return cursor.getString(column_index);&#xD;&#xA;        }&#xD;&#xA;    }"
5151860288147917767,56,5,"    package com.stevebergamini.spinnerbutton;&#xD;&#xA;    &#xD;&#xA;    import android.app.Activity;&#xD;&#xA;    import android.app.AlertDialog;&#xD;&#xA;    import android.content.DialogInterface;&#xD;&#xA;    import android.os.Bundle;&#xD;&#xA;    import android.view.View;&#xD;&#xA;    import android.view.View.OnClickListener;&#xD;&#xA;    import android.widget.Button;&#xD;&#xA;    import android.widget.Spinner;&#xD;&#xA;    &#xD;&#xA;    public class MainActivity extends Activity {&#xD;&#xA;    	&#xD;&#xA;    	Spinner spinner1;&#xD;&#xA;    	Button button1;&#xD;&#xA;    	AlertDialog ad;&#xD;&#xA;    	String[] countries;&#xD;&#xA;    	&#xD;&#xA;    	int selected = -1;&#xD;&#xA;    &#xD;&#xA;    	@Override&#xD;&#xA;    	protected void onCreate(Bundle savedInstanceState) {&#xD;&#xA;    		super.onCreate(savedInstanceState);&#xD;&#xA;    		setContentView(R.layout.activity_main);&#xD;&#xA;    		&#xD;&#xA;    		spinner1 = (Spinner) findViewById(R.id.spinner1);&#xD;&#xA;    		button1 = (Button) findViewById(R.id.button1);&#xD;&#xA;    		&#xD;&#xA;    		countries = getResources().getStringArray(R.array.country_names);&#xD;&#xA;    		&#xD;&#xA;    		//  You can also use an adapter for the allert dialog if you'd like&#xD;&#xA;    		//  ArrayAdapter<String> adapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_dropdown_item, countries);		&#xD;&#xA;    		&#xD;&#xA;    		ad = new AlertDialog.Builder(MainActivity.this).setSingleChoiceItems(countries, selected,  &#xD;&#xA;    				new  DialogInterface.OnClickListener() {&#xD;&#xA;    &#xD;&#xA;    						@Override&#xD;&#xA;    						public void onClick(DialogInterface dialog, int which) {&#xD;&#xA;    							button1.setText(countries[which]);&#xD;&#xA;    							selected = which;&#xD;&#xA;    							ad.dismiss();&#xD;&#xA;    							&#xD;&#xA;    						}}).setTitle(R.string.select_country).create();	&#xD;&#xA;    		&#xD;&#xA;    		&#xD;&#xA;    		button1.setOnClickListener( new OnClickListener(){&#xD;&#xA;    						&#xD;&#xA;    			@Override&#xD;&#xA;    			public void onClick(View v) {&#xD;&#xA;    				ad.getListView().setSelection(selected);&#xD;&#xA;    				ad.show();				&#xD;&#xA;    			}});&#xD;&#xA;    		&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    }"
8833740642451100621,56,5,"    public class RoundedImageView extends ImageView {&#xD;&#xA;	public RoundedImageView(Context context) {&#xD;&#xA;		super(context);&#xD;&#xA;		// TODO Auto-generated constructor stub&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;    public RoundedImageView(Context context, AttributeSet attrs) {&#xD;&#xA;        super(context, attrs);&#xD;&#xA;    }&#xD;&#xA;    public RoundedImageView(Context context, AttributeSet attrs, int defStyle) {&#xD;&#xA;        super(context, attrs, defStyle);&#xD;&#xA;    }&#xD;&#xA;	@Override&#xD;&#xA;	protected void onDraw(Canvas canvas) {&#xD;&#xA;		&#xD;&#xA;		Drawable drawable = getDrawable();&#xD;&#xA;		&#xD;&#xA;        if (drawable == null) {&#xD;&#xA;            return;&#xD;&#xA;        }&#xD;&#xA;        if (getWidth() == 0 || getHeight() == 0) {&#xD;&#xA;            return; &#xD;&#xA;        }&#xD;&#xA;		Bitmap b =  ((BitmapDrawable)drawable).getBitmap() ;&#xD;&#xA;		Bitmap bitmap = b.copy(Bitmap.Config.ARGB_8888, true);&#xD;&#xA;		int w = getWidth(), h = getHeight();&#xD;&#xA;		Bitmap roundBitmap =  getCroppedBitmap(bitmap, w);&#xD;&#xA;		canvas.drawBitmap(roundBitmap, 0,0, null);&#xD;&#xA;		&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	public static Bitmap getCroppedBitmap(Bitmap bmp, int radius) {&#xD;&#xA;		Bitmap sbmp;&#xD;&#xA;		if(bmp.getWidth() != radius || bmp.getHeight() != radius)&#xD;&#xA;			sbmp = Bitmap.createScaledBitmap(bmp, radius, radius, false);&#xD;&#xA;		else&#xD;&#xA;			sbmp = bmp;&#xD;&#xA;		Bitmap output = Bitmap.createBitmap(sbmp.getWidth(),&#xD;&#xA;				sbmp.getHeight(), Config.ARGB_8888);&#xD;&#xA;		Canvas canvas = new Canvas(output);&#xD;&#xA;		final int color = 0xffa19774;&#xD;&#xA;		final Paint paint = new Paint();&#xD;&#xA;		final Rect rect = new Rect(0, 0, sbmp.getWidth(), sbmp.getHeight());&#xD;&#xA;		paint.setAntiAlias(true);&#xD;&#xA;		paint.setFilterBitmap(true);&#xD;&#xA;		paint.setDither(true);&#xD;&#xA;		canvas.drawARGB(0, 0, 0, 0);&#xD;&#xA;		paint.setColor(Color.parseColor(""#BAB399""));&#xD;&#xA;		canvas.drawCircle(sbmp.getWidth() / 2+0.7f, sbmp.getHeight() / 2+0.7f,&#xD;&#xA;				sbmp.getWidth() / 2+0.1f, paint);&#xD;&#xA;		paint.setXfermode(new PorterDuffXfermode(Mode.SRC_IN));&#xD;&#xA;		canvas.drawBitmap(sbmp, rect, rect, paint);&#xD;&#xA;		&#xD;&#xA;				return output;&#xD;&#xA;	}&#xD;&#xA;    }"
3149346302013741973,56,5,"        (function($){&#xD;&#xA;    	&#xD;&#xA;    	$.confirm = function(params){&#xD;&#xA;    		&#xD;&#xA;    		if($('#confirmOverlay').length){&#xD;&#xA;    			// A confirm is already shown on the page:&#xD;&#xA;    			return false;&#xD;&#xA;    		}&#xD;&#xA;    		&#xD;&#xA;    		var buttonHTML = '';&#xD;&#xA;    		$.each(params.buttons,function(name,obj){&#xD;&#xA;    			&#xD;&#xA;    			// Generating the markup for the buttons:&#xD;&#xA;    			&#xD;&#xA;    			buttonHTML += '<a href=""#"" class=""button '+obj['class']+'"">'+name+'<span></span></a>';&#xD;&#xA;    			&#xD;&#xA;    			if(!obj.action){&#xD;&#xA;    				obj.action = function(){};&#xD;&#xA;    			}&#xD;&#xA;    		});&#xD;&#xA;    		&#xD;&#xA;    		var markup = [&#xD;&#xA;    			'<div id=""confirmOverlay"">',&#xD;&#xA;    			'<div id=""confirmBox"">',&#xD;&#xA;    			'<h1>',params.title,'</h1>',&#xD;&#xA;    			'<p>',params.message,'</p>',&#xD;&#xA;    			'<div id=""confirmButtons"">',&#xD;&#xA;    			buttonHTML,&#xD;&#xA;    			'</div></div></div>'&#xD;&#xA;    		].join('');&#xD;&#xA;    		&#xD;&#xA;    		$(markup).hide().appendTo('body').fadeIn();&#xD;&#xA;    		&#xD;&#xA;    		var buttons = $('#confirmBox .button'),&#xD;&#xA;    			i = 0;&#xD;&#xA;    &#xD;&#xA;    		$.each(params.buttons,function(name,obj){&#xD;&#xA;    			buttons.eq(i++).click(function(){&#xD;&#xA;    				&#xD;&#xA;    				// Calling the action attribute when a&#xD;&#xA;    				// click occurs, and hiding the confirm.&#xD;&#xA;    				&#xD;&#xA;    				obj.action();&#xD;&#xA;    				$.confirm.hide();&#xD;&#xA;    				return false;&#xD;&#xA;    			});&#xD;&#xA;    		});&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	$.confirm.hide = function(){&#xD;&#xA;    		$('#confirmOverlay').fadeOut(function(){&#xD;&#xA;    			$(this).remove();&#xD;&#xA;    		});&#xD;&#xA;    	}&#xD;&#xA;    	&#xD;&#xA;    })(jQuery);"
2139559183546032206,56,5,"    def append_df_to_excel(filename, df, sheet_name='Sheet1', startrow=None,&#xD;&#xA;                           truncate_sheet=False, &#xD;&#xA;                           **to_excel_kwargs):&#xD;&#xA;        """"""&#xD;&#xA;        Append a DataFrame [df] to existing Excel file [filename]&#xD;&#xA;        into [sheet_name] Sheet.&#xD;&#xA;        If [filename] doesn't exist, then this function will create it.&#xD;&#xA;        Parameters:&#xD;&#xA;          filename : File path or existing ExcelWriter&#xD;&#xA;                     (Example: '/path/to/file.xlsx')&#xD;&#xA;          df : dataframe to save to workbook&#xD;&#xA;          sheet_name : Name of sheet which will contain DataFrame.&#xD;&#xA;                       (default: 'Sheet1')&#xD;&#xA;          startrow : upper left cell row to dump data frame.&#xD;&#xA;                     Per default (startrow=None) calculate the last row&#xD;&#xA;                     in the existing DF and write to the next row...&#xD;&#xA;          truncate_sheet : truncate (remove and recreate) [sheet_name]&#xD;&#xA;                           before writing DataFrame to Excel file&#xD;&#xA;          to_excel_kwargs : arguments which will be passed to `DataFrame.to_excel()`&#xD;&#xA;                            [can be dictionary]&#xD;&#xA;        Returns: None&#xD;&#xA;        """"""&#xD;&#xA;        from openpyxl import load_workbook&#xD;&#xA;        # ignore [engine] parameter if it was passed&#xD;&#xA;        if 'engine' in to_excel_kwargs:&#xD;&#xA;            to_excel_kwargs.pop('engine')&#xD;&#xA;        writer = pd.ExcelWriter(filename, engine='openpyxl')&#xD;&#xA;        try:&#xD;&#xA;            # try to open an existing workbook&#xD;&#xA;            writer.book = load_workbook(filename)&#xD;&#xA;            &#xD;&#xA;            # get the last row in the existing Excel sheet&#xD;&#xA;            # if it was not specified explicitly&#xD;&#xA;            if startrow is None and sheet_name in writer.book.sheetnames:&#xD;&#xA;                startrow = writer.book[sheet_name].max_row&#xD;&#xA;            # truncate sheet&#xD;&#xA;            if truncate_sheet and sheet_name in writer.book.sheetnames:&#xD;&#xA;                # index of [sheet_name] sheet&#xD;&#xA;                idx = writer.book.sheetnames.index(sheet_name)&#xD;&#xA;                # remove [sheet_name]&#xD;&#xA;                writer.book.remove(writer.book.worksheets[idx])&#xD;&#xA;                # create an empty sheet [sheet_name] using old index&#xD;&#xA;                writer.book.create_sheet(sheet_name, idx)&#xD;&#xA;            &#xD;&#xA;            # copy existing sheets&#xD;&#xA;            writer.sheets = {ws.title:ws for ws in writer.book.worksheets}&#xD;&#xA;        except FileNotFoundError:&#xD;&#xA;            # file does not exist yet, we will create it&#xD;&#xA;            pass&#xD;&#xA;        if startrow is None:&#xD;&#xA;            startrow = 0&#xD;&#xA;        # write out the new sheet&#xD;&#xA;        df.to_excel(writer, sheet_name, startrow=startrow, **to_excel_kwargs)&#xD;&#xA;        # save the workbook&#xD;&#xA;        writer.save()&#xD;&#xA;        "
7354644300220592305,56,5,"	public static class ConnectionTools&#xD;&#xA;	{&#xD;&#xA;		// all params are optional&#xD;&#xA;		public static void ChangeDatabase(&#xD;&#xA;			this DbContext source,&#xD;&#xA;			string initialCatalog = """",&#xD;&#xA;			string dataSource = """",&#xD;&#xA;			string userId = """",&#xD;&#xA;			string password = """",&#xD;&#xA;			bool integratedSecuity = true,&#xD;&#xA;			string configConnectionStringName = """") &#xD;&#xA;			/* this would be used if the&#xD;&#xA;			*  connectionString name varied from &#xD;&#xA;			*  the base EF class name */&#xD;&#xA;		{&#xD;&#xA;			try&#xD;&#xA;			{&#xD;&#xA;				// use the const name if it's not null, otherwise&#xD;&#xA;				// using the convention of connection string = EF contextname&#xD;&#xA;				// grab the type name and we're done&#xD;&#xA;				var configNameEf = string.IsNullOrEmpty(configConnectionStringName)&#xD;&#xA;					? source.GetType().Name &#xD;&#xA;					: configConnectionStringName;&#xD;&#xA;	 &#xD;&#xA;				// add a reference to System.Configuration&#xD;&#xA;				var entityCnxStringBuilder = new EntityConnectionStringBuilder&#xD;&#xA;					(System.Configuration.ConfigurationManager&#xD;&#xA;						.ConnectionStrings[configNameEf].ConnectionString);&#xD;&#xA;	 &#xD;&#xA;				// init the sqlbuilder with the full EF connectionstring cargo&#xD;&#xA;				var sqlCnxStringBuilder = new SqlConnectionStringBuilder&#xD;&#xA;					(entityCnxStringBuilder.ProviderConnectionString);&#xD;&#xA;	 &#xD;&#xA;				// only populate parameters with values if added&#xD;&#xA;				if (!string.IsNullOrEmpty(initialCatalog))&#xD;&#xA;					sqlCnxStringBuilder.InitialCatalog = initialCatalog;&#xD;&#xA;				if (!string.IsNullOrEmpty(dataSource))&#xD;&#xA;					sqlCnxStringBuilder.DataSource = dataSource;&#xD;&#xA;				if (!string.IsNullOrEmpty(userId))&#xD;&#xA;					sqlCnxStringBuilder.UserID = userId;&#xD;&#xA;				if (!string.IsNullOrEmpty(password))&#xD;&#xA;					sqlCnxStringBuilder.Password = password;&#xD;&#xA;	 &#xD;&#xA;				// set the integrated security status&#xD;&#xA;				sqlCnxStringBuilder.IntegratedSecurity = integratedSecuity;&#xD;&#xA;	 &#xD;&#xA;				// now flip the properties that were changed&#xD;&#xA;				source.Database.Connection.ConnectionString &#xD;&#xA;					= sqlCnxStringBuilder.ConnectionString;&#xD;&#xA;			}&#xD;&#xA;			catch (Exception ex)&#xD;&#xA;			{&#xD;&#xA;				// set log item if required&#xD;&#xA;			}&#xD;&#xA;		}&#xD;&#xA;	}"
-4576408397067634592,56,5,"    package prabhakar;&#xD;&#xA;   &#xD;&#xA;    import glb.DB;&#xD;&#xA;    import java.util.ArrayList;&#xD;&#xA;    import java.util.List;&#xD;&#xA;    import java.util.Map;&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * Prabhakar&#xD;&#xA;     */&#xD;&#xA;    public class HelloWorld  {&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        private List<StateMaster> stateList= new ArrayList<StateMaster>();&#xD;&#xA;        private List<RegnMaster> regnList= new ArrayList<StateMaster>();&#xD;&#xA;        &#xD;&#xA;        private Integer stateId;&#xD;&#xA;        public Integer getStateId()&#xD;&#xA;        {&#xD;&#xA;        return this.stateId;&#xD;&#xA;        }&#xD;&#xA;        public void setStateId(Integer stateId)&#xD;&#xA;        {&#xD;&#xA;        this.stateId=stateId;&#xD;&#xA;        }&#xD;&#xA;        public List<StateMaster> getStateList() {&#xD;&#xA;            return stateList;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void setStateList(List<StateMaster> stateList) {&#xD;&#xA;            this.stateList = stateList;&#xD;&#xA;        }&#xD;&#xA;         public void setRegnList(List<RegnMaster> regnList) {&#xD;&#xA;            this.regnList = regnList;&#xD;&#xA;        }&#xD;&#xA;        public List<RegnMaster> getRegnList() {&#xD;&#xA;            return regnList;&#xD;&#xA;        }&#xD;&#xA;       &#xD;&#xA;        public String execute() throws Exception {&#xD;&#xA;            &#xD;&#xA;            stateList=DB.getStateData()//&#xD;&#xA;            if(stateId !=null)&#xD;&#xA;              {&#xD;&#xA;             regnList=DB.getRegnByStateId(stateId);&#xD;&#xA;              }&#xD;&#xA;             &#xD;&#xA;            //setMessage(getText(MESSAGE));&#xD;&#xA;            return ""success"";&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /**&#xD;&#xA;         * Provide default valuie for Message property.&#xD;&#xA;         */&#xD;&#xA;        &#xD;&#xA;    }"
-8923269899472139817,57,5,"	import java.io.IOException;&#xD;&#xA; 	import java.util.*;&#xD;&#xA; 	&#xD;&#xA; 	import org.apache.hadoop.fs.Path;&#xD;&#xA; 	import org.apache.hadoop.conf.*;&#xD;&#xA; 	import org.apache.hadoop.io.*;&#xD;&#xA; 	import org.apache.hadoop.mapred.*;&#xD;&#xA; 	import org.apache.hadoop.util.*;&#xD;&#xA; 	&#xD;&#xA; 	public class WordCount {&#xD;&#xA; 	&#xD;&#xA; 	   public static class Map extends MapReduceBase implements Mapper<LongWritable, Text, Text, IntWritable> {&#xD;&#xA; 	     private final static IntWritable one = new IntWritable(1);&#xD;&#xA; 	     private Text word = new Text();&#xD;&#xA; 	&#xD;&#xA; 	     public void map(LongWritable key, Text value, OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {&#xD;&#xA; 	       String line = value.toString();&#xD;&#xA; 	       StringTokenizer tokenizer = new StringTokenizer(line);&#xD;&#xA; 	       while (tokenizer.hasMoreTokens()) {&#xD;&#xA; 	         word.set(tokenizer.nextToken());&#xD;&#xA; 	         output.collect(word, one);&#xD;&#xA; 	       }&#xD;&#xA; 	     }&#xD;&#xA; 	   }&#xD;&#xA; 	&#xD;&#xA; 	   public static class Reduce extends MapReduceBase implements Reducer<Text, IntWritable, Text, IntWritable> {&#xD;&#xA; 	     public void reduce(Text key, Iterator<IntWritable> values, OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {&#xD;&#xA; 	       int sum = 0;&#xD;&#xA; 	       while (values.hasNext()) {&#xD;&#xA; 	         sum += values.next().get();&#xD;&#xA; 	       }&#xD;&#xA; 	       output.collect(key, new IntWritable(sum));&#xD;&#xA; 	     }&#xD;&#xA; 	   }&#xD;&#xA; 	&#xD;&#xA; 	   public static void main(String[] args) throws Exception {&#xD;&#xA; 		   &#xD;&#xA; 		  &#xD;&#xA; 	     JobConf conf = new JobConf(WordCount.class);&#xD;&#xA; 	     conf.setJobName(""wordcount"");&#xD;&#xA; 	&#xD;&#xA; 	     conf.setOutputKeyClass(Text.class);&#xD;&#xA; 	     conf.setOutputValueClass(IntWritable.class);&#xD;&#xA; 	&#xD;&#xA; 	     conf.setMapperClass(Map.class);&#xD;&#xA; 	     conf.setCombinerClass(Reduce.class);&#xD;&#xA; 	     conf.setReducerClass(Reduce.class);&#xD;&#xA; 	&#xD;&#xA; 	     conf.setInputFormat(TextInputFormat.class);&#xD;&#xA; 	     conf.setOutputFormat(TextOutputFormat.class);&#xD;&#xA; 	&#xD;&#xA;	     FileInputFormat.setInputPaths(conf, new Path(args[0]));&#xD;&#xA; 	     FileOutputFormat.setOutputPath(conf, new Path(args[1]));&#xD;&#xA; 	&#xD;&#xA;	     JobClient.runJob(conf);&#xD;&#xA; 	   }&#xD;&#xA; 	}"
-1638004129931638355,57,5,"    $(function () {&#xD;&#xA;        $.getJSON('https://www.highcharts.com/samples/data/jsonp.php?    filename=usdeur.json&callback=?', function (data) {&#xD;&#xA;        $('#container').highcharts({&#xD;&#xA;            chart: {&#xD;&#xA;                zoomType: 'x'&#xD;&#xA;            },&#xD;&#xA;            title: {&#xD;&#xA;                text: 'USD to EUR exchange rate over time'&#xD;&#xA;            },&#xD;&#xA;            subtitle: {&#xD;&#xA;                text: document.ontouchstart === undefined ?&#xD;&#xA;                        'Click and drag in the plot area to zoom in' : 'Pinch the chart to zoom in'&#xD;&#xA;            },&#xD;&#xA;            xAxis: {&#xD;&#xA;                type: 'datetime'&#xD;&#xA;            },&#xD;&#xA;            yAxis: {&#xD;&#xA;                title: {&#xD;&#xA;                    text: 'Exchange rate'&#xD;&#xA;                }&#xD;&#xA;            },&#xD;&#xA;            legend: {&#xD;&#xA;                enabled: false&#xD;&#xA;            },&#xD;&#xA;            plotOptions: {&#xD;&#xA;                area: {&#xD;&#xA;                    fillColor: {&#xD;&#xA;                        linearGradient: {&#xD;&#xA;                            x1: 0,&#xD;&#xA;                            y1: 0,&#xD;&#xA;                            x2: 0,&#xD;&#xA;                            y2: 1&#xD;&#xA;                        },&#xD;&#xA;                        stops: [&#xD;&#xA;                            [0, Highcharts.getOptions().colors[0]],&#xD;&#xA;                            [1, Highcharts.Color(Highcharts.getOptions().colors[0]).setOpacity(0).get('rgba')]&#xD;&#xA;                        ]&#xD;&#xA;                    },&#xD;&#xA;                    marker: {&#xD;&#xA;                        radius: 2&#xD;&#xA;                    },&#xD;&#xA;                    lineWidth: 1,&#xD;&#xA;                    states: {&#xD;&#xA;                        hover: {&#xD;&#xA;                            lineWidth: 1&#xD;&#xA;                        }&#xD;&#xA;                    },&#xD;&#xA;                    threshold: null&#xD;&#xA;                }&#xD;&#xA;            },&#xD;&#xA;            series: [{&#xD;&#xA;                type: 'area',&#xD;&#xA;                name: 'USD to EUR',&#xD;&#xA;                data: data&#xD;&#xA;            }]&#xD;&#xA;        });&#xD;&#xA;    });"
7028095738708646169,58,5,"    public class BindingActivity extends Activity {&#xD;&#xA;        LocalService mService;&#xD;&#xA;        boolean mBound = false;&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        protected void onCreate(Bundle savedInstanceState) {&#xD;&#xA;            super.onCreate(savedInstanceState);&#xD;&#xA;            setContentView(R.layout.main);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        protected void onStart() {&#xD;&#xA;            super.onStart();&#xD;&#xA;            // Bind to LocalService&#xD;&#xA;            Intent intent = new Intent(this, LocalService.class);&#xD;&#xA;            bindService(intent, mConnection, Context.BIND_AUTO_CREATE);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        protected void onStop() {&#xD;&#xA;            super.onStop();&#xD;&#xA;            // Unbind from the service&#xD;&#xA;            if (mBound) {&#xD;&#xA;                unbindService(mConnection);&#xD;&#xA;                mBound = false;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /** Called when a button is clicked (the button in the layout file attaches to&#xD;&#xA;          * this method with the android:onClick attribute) */&#xD;&#xA;        public void onButtonClick(View v) {&#xD;&#xA;            if (mBound) {&#xD;&#xA;                // Call a method from the LocalService.&#xD;&#xA;                // However, if this call were something that might hang, then this request should&#xD;&#xA;                // occur in a separate thread to avoid slowing down the activity performance.&#xD;&#xA;                int num = mService.getRandomNumber();&#xD;&#xA;                Toast.makeText(this, ""number: "" + num, Toast.LENGTH_SHORT).show();&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /** Defines callbacks for service binding, passed to bindService() */&#xD;&#xA;        private ServiceConnection mConnection = new ServiceConnection() {&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            public void onServiceConnected(ComponentName className,&#xD;&#xA;                    IBinder service) {&#xD;&#xA;                // We've bound to LocalService, cast the IBinder and get LocalService instance&#xD;&#xA;                LocalBinder binder = (LocalBinder) service;&#xD;&#xA;                mService = binder.getService();&#xD;&#xA;                mBound = true;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            public void onServiceDisconnected(ComponentName arg0) {&#xD;&#xA;                mBound = false;&#xD;&#xA;            }&#xD;&#xA;        };&#xD;&#xA;    }"
-4373213969592169847,58,5,"    import java.awt.*;&#xD;&#xA;    import javax.swing.*;&#xD;&#xA;    import javax.swing.table.*;&#xD;&#xA;    &#xD;&#xA;    public class TableIcon extends JPanel&#xD;&#xA;    {&#xD;&#xA;    	public TableIcon()&#xD;&#xA;    	{&#xD;&#xA;    		Icon aboutIcon = new ImageIcon(""about16.gif"");&#xD;&#xA;    		Icon addIcon = new ImageIcon(""add16.gif"");&#xD;&#xA;    		Icon copyIcon = new ImageIcon(""copy16.gif"");&#xD;&#xA;    &#xD;&#xA;    		String[] columnNames = {""Picture"", ""Description""};&#xD;&#xA;    		Object[][] data =&#xD;&#xA;    		{&#xD;&#xA;    			{aboutIcon, ""About""},&#xD;&#xA;    			{addIcon, ""Add""},&#xD;&#xA;    			{copyIcon, ""Copy""},&#xD;&#xA;    		};&#xD;&#xA;    &#xD;&#xA;    		DefaultTableModel model = new DefaultTableModel(data, columnNames)&#xD;&#xA;    		{&#xD;&#xA;    			//  Returning the Class of each column will allow different&#xD;&#xA;    			//  renderers to be used based on Class&#xD;&#xA;    			public Class getColumnClass(int column)&#xD;&#xA;    			{&#xD;&#xA;    				return getValueAt(0, column).getClass();&#xD;&#xA;    			}&#xD;&#xA;    		};&#xD;&#xA;    		JTable table = new JTable( model );&#xD;&#xA;    		table.setPreferredScrollableViewportSize(table.getPreferredSize());&#xD;&#xA;    &#xD;&#xA;    		JScrollPane scrollPane = new JScrollPane( table );&#xD;&#xA;    		add( scrollPane );&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	private static void createAndShowGUI()&#xD;&#xA;    	{&#xD;&#xA;    		JFrame frame = new JFrame(""Table Icon"");&#xD;&#xA;    		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;&#xA;    		frame.add(new TableIcon());&#xD;&#xA;    		frame.setLocationByPlatform( true );&#xD;&#xA;    		frame.pack();&#xD;&#xA;    		frame.setVisible( true );&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public static void main(String[] args)&#xD;&#xA;    	{&#xD;&#xA;    		EventQueue.invokeLater(new Runnable()&#xD;&#xA;    		{&#xD;&#xA;    			public void run()&#xD;&#xA;    			{&#xD;&#xA;    				createAndShowGUI();&#xD;&#xA;    			}&#xD;&#xA;    		});&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    }"
2555332344313342953,58,5,"     var ajax_arry=[];&#xD;&#xA;     var ajax_index =0;&#xD;&#xA;     var sctp = 100;&#xD;&#xA;     $(function(){&#xD;&#xA;       $('#loading').show();&#xD;&#xA;     $.ajax({&#xD;&#xA;	     url:""scroll.php"",&#xD;&#xA;                  type:""POST"",&#xD;&#xA;                  data:""actionfunction=showData&page=1"",&#xD;&#xA;        cache: false,&#xD;&#xA;        success: function(response){&#xD;&#xA;		   $('#loading').hide();&#xD;&#xA;		  $('#demoajax').html(response);&#xD;&#xA;		   &#xD;&#xA;		}&#xD;&#xA;		&#xD;&#xA;	   });&#xD;&#xA;	$(window).scroll(function(){&#xD;&#xA;       &#xD;&#xA;	   var height = $('#demoajax').height();&#xD;&#xA;	   var scroll_top = $(this).scrollTop();&#xD;&#xA;	   if(ajax_arry.length>0){&#xD;&#xA;	   $('#loading').hide();&#xD;&#xA;	   for(var i=0;i<ajax_arry.length;i++){&#xD;&#xA;	     ajax_arry[i].abort();&#xD;&#xA;	   }&#xD;&#xA;	}&#xD;&#xA;	   var page = $('#demoajax').find('.nextpage').val();&#xD;&#xA;	   var isload = $('#demoajax').find('.isload').val();&#xD;&#xA;	   &#xD;&#xA;	     if ((($(window).scrollTop()+document.body.clientHeight)==$(window).height()) && isload=='true'){&#xD;&#xA;		   $('#loading').show();&#xD;&#xA;	   var ajaxreq = $.ajax({&#xD;&#xA;	     url:""scroll.php"",&#xD;&#xA;                  type:""POST"",&#xD;&#xA;                  data:""actionfunction=showData&page=""+page,&#xD;&#xA;        cache: false,&#xD;&#xA;        success: function(response){&#xD;&#xA;		   $('#demoajax').find('.nextpage').remove();&#xD;&#xA;		   $('#demoajax').find('.isload').remove();&#xD;&#xA;		   $('#loading').hide();&#xD;&#xA;		   &#xD;&#xA;		  $('#demoajax').append(response);&#xD;&#xA;		 &#xD;&#xA;		}&#xD;&#xA;		&#xD;&#xA;	   });&#xD;&#xA;	   ajax_arry[ajax_index++]= ajaxreq;&#xD;&#xA;	   &#xD;&#xA;	   }&#xD;&#xA;	return false;&#xD;&#xA;	&#xD;&#xA;    if($(window).scrollTop() == $(window).height()) {&#xD;&#xA;       alert(""bottom!"");&#xD;&#xA;    }&#xD;&#xA;	});&#xD;&#xA;    });&#xD;&#xA;	  "
-5103831139330865298,58,5,"	<?php&#xD;&#xA;		header('Content-Type: text/plain; charset=utf-8');&#xD;&#xA;		try {&#xD;&#xA;		// Undefined | Multiple Files | $_FILES Corruption Attack&#xD;&#xA;		// If this request falls under any of them, treat it invalid.&#xD;&#xA;		if (&#xD;&#xA;			!isset($_FILES['upfile']['error']) ||&#xD;&#xA;			is_array($_FILES['upfile']['error'])&#xD;&#xA;		) {&#xD;&#xA;			throw new RuntimeException('Invalid parameters.');&#xD;&#xA;		}&#xD;&#xA;		// Check $_FILES['upfile']['error'] value.&#xD;&#xA;		switch ($_FILES['upfile']['error']) {&#xD;&#xA;			case UPLOAD_ERR_OK:&#xD;&#xA;				break;&#xD;&#xA;			case UPLOAD_ERR_NO_FILE:&#xD;&#xA;				throw new RuntimeException('No file sent.');&#xD;&#xA;			case UPLOAD_ERR_INI_SIZE:&#xD;&#xA;			case UPLOAD_ERR_FORM_SIZE:&#xD;&#xA;				throw new RuntimeException('Exceeded filesize limit.');&#xD;&#xA;			default:&#xD;&#xA;				throw new RuntimeException('Unknown errors.');&#xD;&#xA;		}&#xD;&#xA;		// You should also check filesize here. &#xD;&#xA;		if ($_FILES['upfile']['size'] > 1000000) {&#xD;&#xA;			throw new RuntimeException('Exceeded filesize limit.');&#xD;&#xA;		}&#xD;&#xA;		// DO NOT TRUST $_FILES['upfile']['mime'] VALUE !!&#xD;&#xA;		// Check MIME Type by yourself.&#xD;&#xA;		$finfo = new finfo(FILEINFO_MIME_TYPE);&#xD;&#xA;		if (false === $ext = array_search(&#xD;&#xA;			$finfo->file($_FILES['upfile']['tmp_name']),&#xD;&#xA;			array(&#xD;&#xA;				'jpg' => 'image/jpeg',&#xD;&#xA;				'png' => 'image/png',&#xD;&#xA;				'gif' => 'image/gif',&#xD;&#xA;			),&#xD;&#xA;			true&#xD;&#xA;		)) {&#xD;&#xA;			throw new RuntimeException('Invalid file format.');&#xD;&#xA;		}&#xD;&#xA;		// You should name it uniquely.&#xD;&#xA;		// DO NOT USE $_FILES['upfile']['name'] WITHOUT ANY VALIDATION !!&#xD;&#xA;		// On this example, obtain safe unique name from its binary data.&#xD;&#xA;		if (!move_uploaded_file(&#xD;&#xA;			$_FILES['upfile']['tmp_name'],&#xD;&#xA;			sprintf('./uploads/%s.%s',&#xD;&#xA;				sha1_file($_FILES['upfile']['tmp_name']),&#xD;&#xA;				$ext&#xD;&#xA;			)&#xD;&#xA;		)) {&#xD;&#xA;			throw new RuntimeException('Failed to move uploaded file.');&#xD;&#xA;		}&#xD;&#xA;		echo 'File is uploaded successfully.';&#xD;&#xA;		} catch (RuntimeException $e) {&#xD;&#xA;		echo $e->getMessage();&#xD;&#xA;		}&#xD;&#xA;	?>"
2217891423055844981,58,5,"        using System;&#xD;&#xA;    using System.Diagnostics;&#xD;&#xA;    using System.ComponentModel;&#xD;&#xA;    &#xD;&#xA;    namespace MyProcessSample&#xD;&#xA;    {&#xD;&#xA;        class MyProcess&#xD;&#xA;        {&#xD;&#xA;            // Opens the Internet Explorer application. &#xD;&#xA;            void OpenApplication(string myFavoritesPath)&#xD;&#xA;            {&#xD;&#xA;                // Start Internet Explorer. Defaults to the home page.&#xD;&#xA;                Process.Start(""IExplore.exe"");&#xD;&#xA;    &#xD;&#xA;                // Display the contents of the favorites folder in the browser.&#xD;&#xA;                Process.Start(myFavoritesPath);&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            // Opens urls and .html documents using Internet Explorer. &#xD;&#xA;            void OpenWithArguments()&#xD;&#xA;            {&#xD;&#xA;                // url's are not considered documents. They can only be opened &#xD;&#xA;                // by passing them as arguments.&#xD;&#xA;                Process.Start(""IExplore.exe"", ""www.northwindtraders.com"");&#xD;&#xA;    &#xD;&#xA;                // Start a Web page using a browser associated with .html and .asp files.&#xD;&#xA;                Process.Start(""IExplore.exe"", ""C:\\myPath\\myFile.htm"");&#xD;&#xA;                Process.Start(""IExplore.exe"", ""C:\\myPath\\myFile.asp"");&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            // Uses the ProcessStartInfo class to start new processes, &#xD;&#xA;            // both in a minimized mode. &#xD;&#xA;            void OpenWithStartInfo()&#xD;&#xA;            {&#xD;&#xA;                ProcessStartInfo startInfo = new ProcessStartInfo(""IExplore.exe"");&#xD;&#xA;                startInfo.WindowStyle = ProcessWindowStyle.Minimized;&#xD;&#xA;    &#xD;&#xA;                Process.Start(startInfo);&#xD;&#xA;    &#xD;&#xA;                startInfo.Arguments = ""www.northwindtraders.com"";&#xD;&#xA;    &#xD;&#xA;                Process.Start(startInfo);&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            static void Main()&#xD;&#xA;            {&#xD;&#xA;                // Get the path that stores favorite links. &#xD;&#xA;                string myFavoritesPath =&#xD;&#xA;                    Environment.GetFolderPath(Environment.SpecialFolder.Favorites);&#xD;&#xA;    &#xD;&#xA;                MyProcess myProcess = new MyProcess();&#xD;&#xA;    &#xD;&#xA;                myProcess.OpenApplication(myFavoritesPath);&#xD;&#xA;                myProcess.OpenWithArguments();&#xD;&#xA;                myProcess.OpenWithStartInfo();&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }"
1344295840820905821,59,5,"    #drop-zone {&#xD;&#xA;      width: 100%;&#xD;&#xA;      min-height: 150px;&#xD;&#xA;      border: 3px dashed rgba(0, 0, 0, .3);&#xD;&#xA;      border-radius: 5px;&#xD;&#xA;      font-family: Arial;&#xD;&#xA;      text-align: center;&#xD;&#xA;      position: relative;&#xD;&#xA;      font-size: 20px;&#xD;&#xA;      color: #7E7E7E;&#xD;&#xA;    }&#xD;&#xA;    #drop-zone input {&#xD;&#xA;      position: absolute;&#xD;&#xA;      cursor: pointer;&#xD;&#xA;      left: 0px;&#xD;&#xA;      top: 0px;&#xD;&#xA;      opacity: 0;&#xD;&#xA;    }&#xD;&#xA;    /*Important*/&#xD;&#xA;    #drop-zone.mouse-over {&#xD;&#xA;      border: 3px dashed rgba(0, 0, 0, .3);&#xD;&#xA;      color: #7E7E7E;&#xD;&#xA;    }&#xD;&#xA;    /*If you dont want the button*/&#xD;&#xA;    #clickHere {&#xD;&#xA;      display: inline-block;&#xD;&#xA;      cursor: pointer;&#xD;&#xA;      color: white;&#xD;&#xA;      font-size: 17px;&#xD;&#xA;      width: 150px;&#xD;&#xA;      border-radius: 4px;&#xD;&#xA;      background-color: #4679BD;&#xD;&#xA;      padding: 10px;&#xD;&#xA;    }&#xD;&#xA;    #clickHere:hover {&#xD;&#xA;      background-color: #376199;&#xD;&#xA;    }&#xD;&#xA;    #filename {&#xD;&#xA;      margin-top: 10px;&#xD;&#xA;      margin-bottom: 10px;&#xD;&#xA;      font-size: 14px;&#xD;&#xA;      line-height: 1.5em;&#xD;&#xA;    }&#xD;&#xA;    .file-preview {&#xD;&#xA;      background: #ccc;&#xD;&#xA;      border: 5px solid #fff;&#xD;&#xA;      box-shadow: 0 0 4px rgba(0, 0, 0, 0.5);&#xD;&#xA;      display: inline-block;&#xD;&#xA;      width: 60px;&#xD;&#xA;      height: 60px;&#xD;&#xA;      text-align: center;&#xD;&#xA;      font-size: 14px;&#xD;&#xA;      margin-top: 5px;&#xD;&#xA;    }&#xD;&#xA;    .closeBtn:hover {&#xD;&#xA;      color: red;&#xD;&#xA;      display:inline-block;&#xD;&#xA;    }&#xD;&#xA;    }"
-8631880304903505811,59,5,"    public class MyDB {&#xD;&#xA;	private static final String TABLE_NAME = null;&#xD;&#xA;	private static final String KEY_ID = null;&#xD;&#xA;	private SQLiteDatabase db;&#xD;&#xA;	private final Context context;&#xD;&#xA;	private final MyDBhelper dbhelper;&#xD;&#xA;	&#xD;&#xA;	&#xD;&#xA;	&#xD;&#xA;	// Initializes MyDBHelper instance&#xD;&#xA;	public MyDB(Context c){&#xD;&#xA;		&#xD;&#xA;		context = c;&#xD;&#xA;		dbhelper = new MyDBhelper(context, Constants.DATABASE_NAME, null,&#xD;&#xA;											Constants.DATABASE_VERSION);&#xD;&#xA;		&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	&#xD;&#xA;	// Closes the database connection&#xD;&#xA;	public void close()&#xD;&#xA;	{&#xD;&#xA;		db.close();&#xD;&#xA;	&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	// Initializes a SQLiteDatabase instance using MyDBhelper&#xD;&#xA;	public void open() throws SQLiteException&#xD;&#xA;	{&#xD;&#xA;		&#xD;&#xA;		try {&#xD;&#xA;			db = dbhelper.getWritableDatabase();&#xD;&#xA;		} catch(SQLiteException ex) {&#xD;&#xA;			Log.v(""Open database exception caught"", ex.getMessage());&#xD;&#xA;			db = dbhelper.getReadableDatabase();&#xD;&#xA;		}&#xD;&#xA;		&#xD;&#xA;	}&#xD;&#xA;	// updates a diary entry (existing row)&#xD;&#xA;		public boolean updateDiaryEntry(String title, long rowId)&#xD;&#xA;		{&#xD;&#xA;			&#xD;&#xA;	        ContentValues newValue = new ContentValues();&#xD;&#xA;	        newValue.put(Constants.TITLE_NAME, title);&#xD;&#xA;	       &#xD;&#xA;	        return db.update(Constants.TABLE_NAME, newValue, Constants.KEY_ID + ""="" + rowId, null)>0;&#xD;&#xA;	       &#xD;&#xA;	    }&#xD;&#xA;	&#xD;&#xA;	// Reads the diary entries from database, saves them in a Cursor class and returns     it from the method&#xD;&#xA;	public Cursor getdiaries()&#xD;&#xA;	{&#xD;&#xA;		Cursor c = db.query(Constants.TABLE_NAME, null, null,&#xD;&#xA;							null, null, null, null);&#xD;&#xA;		return c;&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	&#xD;&#xA;    }"
-5479688973704674035,59,5,"    public Location getLocation() {&#xD;&#xA;                try {&#xD;&#xA;                    locationManager = (LocationManager) mContext&#xD;&#xA;                            .getSystemService(LOCATION_SERVICE);&#xD;&#xA; &#xD;&#xA;            // getting GPS status&#xD;&#xA;            isGPSEnabled = locationManager&#xD;&#xA;                    .isProviderEnabled(LocationManager.GPS_PROVIDER);&#xD;&#xA; &#xD;&#xA;            // getting network status&#xD;&#xA;            isNetworkEnabled = locationManager&#xD;&#xA;                    .isProviderEnabled(LocationManager.NETWORK_PROVIDER);&#xD;&#xA; &#xD;&#xA;            if (!isGPSEnabled && !isNetworkEnabled) {&#xD;&#xA;                // no network provider is enabled&#xD;&#xA;            } else {&#xD;&#xA;                this.canGetLocation = true;&#xD;&#xA;                // First get location from Network Provider&#xD;&#xA;                if (isNetworkEnabled) {&#xD;&#xA;                    locationManager.requestLocationUpdates(&#xD;&#xA;                            LocationManager.NETWORK_PROVIDER,&#xD;&#xA;                            MIN_TIME_BW_UPDATES,&#xD;&#xA;                            MIN_DISTANCE_CHANGE_FOR_UPDATES, this);&#xD;&#xA;                    Log.d(""Network"", ""Network"");&#xD;&#xA;                    if (locationManager != null) {&#xD;&#xA;                        location = locationManager&#xD;&#xA;                                .getLastKnownLocation(LocationManager.NETWORK_PROVIDER);&#xD;&#xA;                        if (location != null) {&#xD;&#xA;                            latitude = location.getLatitude();&#xD;&#xA;                            longitude = location.getLongitude();&#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;                // if GPS Enabled get lat/long using GPS Services&#xD;&#xA;                if (isGPSEnabled) {&#xD;&#xA;                    if (location == null) {&#xD;&#xA;                        locationManager.requestLocationUpdates(&#xD;&#xA;                                LocationManager.GPS_PROVIDER,&#xD;&#xA;                                MIN_TIME_BW_UPDATES,&#xD;&#xA;                                MIN_DISTANCE_CHANGE_FOR_UPDATES, this);&#xD;&#xA;                        Log.d(""GPS Enabled"", ""GPS Enabled"");&#xD;&#xA;                        if (locationManager != null) {&#xD;&#xA;                            location = locationManager&#xD;&#xA;                                    .getLastKnownLocation(LocationManager.GPS_PROVIDER);&#xD;&#xA;                            if (location != null) {&#xD;&#xA;                                latitude = location.getLatitude();&#xD;&#xA;                                longitude = location.getLongitude();&#xD;&#xA;                            }&#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA; &#xD;&#xA;        } catch (Exception e) {&#xD;&#xA;            e.printStackTrace();&#xD;&#xA;        }&#xD;&#xA; &#xD;&#xA;        return location;&#xD;&#xA;    }"
-3854666211699261835,59,5,"        import android.app.Activity;&#xD;&#xA;        import android.content.Intent;&#xD;&#xA;        import android.media.MediaPlayer;&#xD;&#xA;        import android.os.Bundle;&#xD;&#xA;        import android.support.v4.view.ViewPager;&#xD;&#xA;        import android.view.Menu;&#xD;&#xA;        import android.view.MenuItem;&#xD;&#xA;        import android.widget.ShareActionProvider;&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        public class MainActivity extends Activity {&#xD;&#xA;        	&#xD;&#xA;        	MediaPlayer oursong;&#xD;&#xA;        	&#xD;&#xA;          @Override&#xD;&#xA;          public void onCreate(Bundle savedInstanceState) {&#xD;&#xA;            super.onCreate(savedInstanceState);&#xD;&#xA;            setContentView(R.layout.activity_main);&#xD;&#xA;              oursong = MediaPlayer.create(MainActivity.this, R.raw.a);&#xD;&#xA;              oursong.start ();&#xD;&#xA;            ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);&#xD;&#xA;            ImageAdapter adapter = new ImageAdapter(this);&#xD;&#xA;            viewPager.setAdapter(adapter);&#xD;&#xA;          }&#xD;&#xA;        &#xD;&#xA;          private ShareActionProvider mShareActionProvider;&#xD;&#xA;          &#xD;&#xA;        &#xD;&#xA;          @Override&#xD;&#xA;          public boolean onCreateOptionsMenu(Menu menu) {&#xD;&#xA;              // Inflate menu resource file.&#xD;&#xA;              getMenuInflater().inflate(R.menu.activity_main, menu);&#xD;&#xA;        &#xD;&#xA;              // Locate MenuItem with ShareActionProvider&#xD;&#xA;              MenuItem item = menu.findItem(R.id.menu_item_share);&#xD;&#xA;        &#xD;&#xA;              // Fetch and store ShareActionProvider&#xD;&#xA;              mShareActionProvider = (ShareActionProvider) item.getActionProvider();&#xD;&#xA;        &#xD;&#xA;              // Return true to display menu&#xD;&#xA;              return true;&#xD;&#xA;          }&#xD;&#xA;        &#xD;&#xA;          // Call to update the share intent&#xD;&#xA;          private void setShareIntent(Intent shareIntent) {&#xD;&#xA;              if (mShareActionProvider != null) {&#xD;&#xA;                  mShareActionProvider.setShareIntent(shareIntent);&#xD;&#xA;              }&#xD;&#xA;          }&#xD;&#xA;          &#xD;&#xA;             @Override&#xD;&#xA;             protected void onPause(){&#xD;&#xA;             super.onPause();&#xD;&#xA;              oursong.release();&#xD;&#xA;         }&#xD;&#xA;        &#xD;&#xA;        }"
7494245502747693139,60,5,"    #!/usr/bin/perl&#xD;&#xA;    &#xD;&#xA;    use strict;&#xD;&#xA;    use warnings;&#xD;&#xA;    &#xD;&#xA;    use threads;&#xD;&#xA;    &#xD;&#xA;    use Thread::Queue;&#xD;&#xA;    &#xD;&#xA;    my $nthreads = 5;&#xD;&#xA;    &#xD;&#xA;    my $process_q = Thread::Queue->new();&#xD;&#xA;    my $failed_q  = Thread::Queue->new();&#xD;&#xA;    &#xD;&#xA;    #this is a subroutine, but that runs 'as a thread'.&#xD;&#xA;    #when it starts, it inherits the program state 'as is'. E.g.&#xD;&#xA;    #the variable declarations above all apply - but changes to&#xD;&#xA;    #values within the program are 'thread local' unless the&#xD;&#xA;    #variable is defined as 'shared'.&#xD;&#xA;    #Behind the scenes - Thread::Queue are 'shared' arrays.&#xD;&#xA;    &#xD;&#xA;    sub worker {&#xD;&#xA;        #NB - this will sit a loop indefinitely, until you close the queue.&#xD;&#xA;        #using $process_q -> end&#xD;&#xA;        #we do this once we've queued all the things we want to process&#xD;&#xA;        #and the sub completes and exits neatly.&#xD;&#xA;        #however if you _don't_ end it, this will sit waiting forever.&#xD;&#xA;        while ( my $server = $process_q->dequeue() ) {&#xD;&#xA;            chomp($server);&#xD;&#xA;            print threads->self()->tid() . "": pinging $server\n"";&#xD;&#xA;            my $result = `/bin/ping -c 1 $server`;&#xD;&#xA;            if ($?) { $failed_q->enqueue($server) }&#xD;&#xA;            print $result;&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    #insert tasks into thread queue.&#xD;&#xA;    open( my $input_fh, ""<"", ""server_list"" ) or die $!;&#xD;&#xA;    $process_q->enqueue(<$input_fh>);&#xD;&#xA;    close($input_fh);&#xD;&#xA;    &#xD;&#xA;    #we 'end' process_q  - when we do, no more items may be inserted,&#xD;&#xA;    #and 'dequeue' returns 'undefined' when the queue is emptied.&#xD;&#xA;    #this means our worker threads (in their 'while' loop) will then exit.&#xD;&#xA;    $process_q->end();&#xD;&#xA;    &#xD;&#xA;    #start some threads&#xD;&#xA;    for ( 1 .. $nthreads ) {&#xD;&#xA;        threads->create( \&worker );&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    #Wait for threads to all finish processing.&#xD;&#xA;    foreach my $thr ( threads->list() ) {&#xD;&#xA;        $thr->join();&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    #collate results. ('synchronise' operation)&#xD;&#xA;    while ( my $server = $failed_q->dequeue_nb() ) {&#xD;&#xA;        print ""$server failed to ping\n"";&#xD;&#xA;    }"
433611270435090206,60,5,"    public static class EnumHelper  &#xD;&#xA;    {  &#xD;&#xA;        //Creates a SelectList for a nullable enum value  &#xD;&#xA;        public static SelectList SelectListFor<T>(T? selected)  &#xD;&#xA;            where T : struct  &#xD;&#xA;        {  &#xD;&#xA;            return selected == null ? SelectListFor<T>()  &#xD;&#xA;                                    : SelectListFor(selected.Value);  &#xD;&#xA;        }  &#xD;&#xA;      &#xD;&#xA;        //Creates a SelectList for an enum type  &#xD;&#xA;        public static SelectList SelectListFor<T>() where T : struct  &#xD;&#xA;        {  &#xD;&#xA;            Type t = typeof (T);  &#xD;&#xA;            if (t.IsEnum)  &#xD;&#xA;            {  &#xD;&#xA;                var values = Enum.GetValues(typeof(T)).Cast<enum>()  &#xD;&#xA;                                 .Select(e => new { Id = Convert.ToInt32(e), Name = e.GetDescription() });  &#xD;&#xA;      &#xD;&#xA;                return new SelectList(values, ""Id"", ""Name"");  &#xD;&#xA;            }  &#xD;&#xA;            return null;  &#xD;&#xA;        }  &#xD;&#xA;      &#xD;&#xA;        //Creates a SelectList for an enum value  &#xD;&#xA;        public static SelectList SelectListFor<T>(T selected) where T : struct   &#xD;&#xA;        {  &#xD;&#xA;            Type t = typeof(T);  &#xD;&#xA;            if (t.IsEnum)  &#xD;&#xA;            {  &#xD;&#xA;                var values = Enum.GetValues(t).Cast<Enum>()  &#xD;&#xA;                                 .Select(e => new { Id = Convert.ToInt32(e), Name = e.GetDescription() });  &#xD;&#xA;      &#xD;&#xA;                return new SelectList(values, ""Id"", ""Name"", Convert.ToInt32(selected));  &#xD;&#xA;            }  &#xD;&#xA;            return null;  &#xD;&#xA;        }   &#xD;&#xA;      &#xD;&#xA;        // Get the value of the description attribute if the   &#xD;&#xA;        // enum has one, otherwise use the value.  &#xD;&#xA;        public static string GetDescription<TEnum>(this TEnum value)  &#xD;&#xA;        {  &#xD;&#xA;            FieldInfo fi = value.GetType().GetField(value.ToString());  &#xD;&#xA;      &#xD;&#xA;            if (fi != null)  &#xD;&#xA;            {  &#xD;&#xA;                DescriptionAttribute[] attributes =  &#xD;&#xA;                 (DescriptionAttribute[])fi.GetCustomAttributes(  &#xD;&#xA;        typeof(DescriptionAttribute),  &#xD;&#xA;        false);  &#xD;&#xA;      &#xD;&#xA;                if (attributes.Length > 0)  &#xD;&#xA;                {  &#xD;&#xA;                     return attributes[0].Description;  &#xD;&#xA;                }  &#xD;&#xA;            }  &#xD;&#xA;      &#xD;&#xA;            return value.ToString();  &#xD;&#xA;        }  &#xD;&#xA;    }  "
-8701252044853379478,60,5,"    {&#xD;&#xA;      ""name"": ""angular-quickstart"",&#xD;&#xA;      ""version"": ""1.0.0"",&#xD;&#xA;      ""description"": ""QuickStart package.json from the documentation,     supplemented with testing support"",&#xD;&#xA;      ""scripts"": {&#xD;&#xA;    ""build"": ""tsc -p src/"",&#xD;&#xA;    ""build:watch"": ""tsc -p src/ -w"",&#xD;&#xA;    ""build:e2e"": ""tsc -p e2e/"",&#xD;&#xA;    ""serve"": ""lite-server -c=bs-config.json"",&#xD;&#xA;    ""serve:e2e"": ""lite-server -c=bs-config.e2e.json"",&#xD;&#xA;    ""prestart"": ""npm run build"",&#xD;&#xA;    ""start"": ""concurrently \""npm run build:watch\"" \""npm run serve\"""",&#xD;&#xA;    ""pree2e"": ""npm run build:e2e"",&#xD;&#xA;    ""e2e"": ""concurrently \""npm run serve:e2e\"" \""npm run protractor\"" --kill-others --success first"",&#xD;&#xA;    ""preprotractor"": ""webdriver-manager update"",&#xD;&#xA;    ""protractor"": ""protractor protractor.config.js"",&#xD;&#xA;    ""pretest"": ""npm run build"",&#xD;&#xA;    ""test"": ""concurrently \""npm run build:watch\"" \""karma start     karma.conf.js\"""",&#xD;&#xA;    ""pretest:once"": ""npm run build"",&#xD;&#xA;    ""test:once"": ""karma start karma.conf.js --single-run"",&#xD;&#xA;    ""lint"": ""tslint ./src/**/*.ts -t verbose""&#xD;&#xA;      },&#xD;&#xA;      ""keywords"": [],&#xD;&#xA;      ""author"": """",&#xD;&#xA;      ""license"": ""MIT"",&#xD;&#xA;      ""dependencies"": {&#xD;&#xA;        ""@angular/common"": ""~2.4.0"",&#xD;&#xA;        ""@angular/compiler"": ""~2.4.0"",&#xD;&#xA;        ""@angular/core"": ""~2.4.0"",&#xD;&#xA;        ""@angular/forms"": ""~2.4.0"",&#xD;&#xA;        ""@angular/http"": ""~2.4.0"",&#xD;&#xA;        ""@angular/platform-browser"": ""~2.4.0"",&#xD;&#xA;        ""@angular/platform-browser-dynamic"": ""~2.4.0"",&#xD;&#xA;        ""@angular/router"": ""~3.4.0"",&#xD;&#xA;        ""angular-in-memory-web-api"": ""~0.2.4"",&#xD;&#xA;        ""systemjs"": ""0.19.40"",&#xD;&#xA;        ""core-js"": ""^2.4.1"",&#xD;&#xA;        ""rxjs"": ""5.0.1"",&#xD;&#xA;        ""zone.js"": ""^0.7.4""&#xD;&#xA;      },&#xD;&#xA;      ""devDependencies"": {&#xD;&#xA;        ""concurrently"": ""^3.2.0"",&#xD;&#xA;        ""lite-server"": ""^2.2.2"",&#xD;&#xA;        ""typescript"": ""~2.0.10"",&#xD;&#xA;        ""canonical-path"": ""0.0.2"",&#xD;&#xA;        ""tslint"": ""^3.15.1"",&#xD;&#xA;        ""lodash"": ""^4.16.4"",&#xD;&#xA;        ""jasmine-core"": ""~2.4.1"",&#xD;&#xA;        ""karma"": ""^1.3.0"",&#xD;&#xA;        ""karma-chrome-launcher"": ""^2.0.0"",&#xD;&#xA;        ""karma-cli"": ""^1.0.1"",&#xD;&#xA;        ""karma-jasmine"": ""^1.0.2"",&#xD;&#xA;        ""karma-jasmine-html-reporter"": ""^0.2.2"",&#xD;&#xA;        ""protractor"": ""~4.0.14"",&#xD;&#xA;        ""rimraf"": ""^2.5.4"",&#xD;&#xA;        ""@types/node"": ""^6.0.46"",&#xD;&#xA;        ""@types/jasmine"": ""2.5.36""&#xD;&#xA;      },&#xD;&#xA;      ""repository"": {}&#xD;&#xA;    }"
-1419452326137323455,61,5,"    @synthesize scrollView;&#xD;&#xA;	-(void)AppleVijayAtFacebookDotCom:(id)sender{&#xD;&#xA;		&#xD;&#xA;		NSLog(@""AppleVijayAtFacebookDotCom called"");&#xD;&#xA;		&#xD;&#xA;		UIButton *button=(UIButton *)sender;&#xD;&#xA;		&#xD;&#xA;		&#xD;&#xA;		if (button.tag == 0) {&#xD;&#xA;			&#xD;&#xA;			NSLog(@""hey have clicked first button, this is my tag : %i \n\n"",button.tag);&#xD;&#xA;		}&#xD;&#xA;		else if (button.tag == 1) {&#xD;&#xA;			&#xD;&#xA;			NSLog(@""hey have clicked second button, this is my tag : %i \n\n"",button.tag);&#xD;&#xA;		}&#xD;&#xA;		// ......like this&#xD;&#xA;		&#xD;&#xA;		NSLog(@""button clicked is : %iBut \n\n"",button.tag);&#xD;&#xA;		&#xD;&#xA;			&#xD;&#xA;		&#xD;&#xA;	}		&#xD;&#xA;    -(void)createMenuWithButtonSize:(CGSize)buttonSize withOffset:(CGFloat)offset noOfButtons:(int)totalNoOfButtons{&#xD;&#xA;	&#xD;&#xA;	for (int i = 0; i < totalNoOfButtons; i++) {&#xD;&#xA;		&#xD;&#xA;		UIButton *button = [UIButton buttonWithType:UIButtonTypeCustom];&#xD;&#xA;		&#xD;&#xA;		[button addTarget:self action:@selector(AppleVijayAtFacebookDotCom:) forControlEvents:UIControlEventTouchUpInside];&#xD;&#xA;		&#xD;&#xA;			//[button1 setImage:[UIImage imageNamed:@""Button.png""] forState:UIControlStateNormal];//with image&#xD;&#xA;		&#xD;&#xA;			//OR&#xD;&#xA;		&#xD;&#xA;		[button setTitle:[NSString stringWithFormat:@""%iBut"",i] forState:UIControlStateNormal];//with title&#xD;&#xA;		&#xD;&#xA;		button.frame = CGRectMake(i*(offset+buttonSize.width), 8.0, buttonSize.width, buttonSize.height);&#xD;&#xA;		&#xD;&#xA;		button.clipsToBounds = YES;&#xD;&#xA;		&#xD;&#xA;		button.showsTouchWhenHighlighted=YES;&#xD;&#xA;		&#xD;&#xA;		button.layer.cornerRadius = 10;//half of the width&#xD;&#xA;		&#xD;&#xA;		button.layer.borderColor=[UIColor redColor].CGColor;&#xD;&#xA;		&#xD;&#xA;		button.layer.backgroundColor=[UIColor blackColor].CGColor;&#xD;&#xA;		&#xD;&#xA;		button.layer.borderWidth=2.0f;&#xD;&#xA;		&#xD;&#xA;		button.tag=i;&#xD;&#xA;		&#xD;&#xA;		[self.scrollView addSubview:button];&#xD;&#xA;		&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	self.scrollView.contentSize=CGSizeMake((buttonSize.width + offset) * totalNoOfButtons, buttonSize.height);&#xD;&#xA;	&#xD;&#xA;		//self.navigationItem.titleView=self.scrollView;//if u have navigationcontroller then enable this line&#xD;&#xA;	"
7201995205009456406,61,5,"     public class myRepository&#xD;&#xA;    {&#xD;&#xA;    public myClasses.Type[] GetAllTypes()&#xD;&#xA;    {&#xD;&#xA;        return new myClasses.Type[]&#xD;&#xA;        {&#xD;&#xA;            new myClasses.Type &#xD;&#xA;            {&#xD;&#xA;                typeId=""1"",&#xD;&#xA;                typeVal = ""New""&#xD;&#xA;            },&#xD;&#xA;            new myClasses.Type &#xD;&#xA;            {&#xD;&#xA;                typeId=""2"",&#xD;&#xA;                typeVal = ""Old""&#xD;&#xA;            }&#xD;&#xA;       };&#xD;&#xA;    }&#xD;&#xA;    public myClasses.Employee[] GetAllEmployees()&#xD;&#xA;    {&#xD;&#xA;        return new myClasses.Employee[]&#xD;&#xA;        {&#xD;&#xA;            new myClasses.Employee &#xD;&#xA;            {&#xD;&#xA;                empId=""111111"",&#xD;&#xA;                empFName = ""Jane"",&#xD;&#xA;                empLName=""Doe""&#xD;&#xA;            },&#xD;&#xA;            new myClasses.Employee &#xD;&#xA;            {&#xD;&#xA;                empId=""222222"",&#xD;&#xA;                empFName = ""John"",&#xD;&#xA;                empLName=""Doe""&#xD;&#xA;            }&#xD;&#xA;       };&#xD;&#xA;    }&#xD;&#xA;    public bool VerifyEmployeeId(string id)&#xD;&#xA;    {&#xD;&#xA;        myClasses.Employee[] emp = new myClasses.Employee[]&#xD;&#xA;        {&#xD;&#xA;            new myClasses.Employee &#xD;&#xA;            {&#xD;&#xA;                empId=""111111"",&#xD;&#xA;                empFName = ""Jane"",&#xD;&#xA;                empLName=""Doe""&#xD;&#xA;            },&#xD;&#xA;            new myClasses.Employee &#xD;&#xA;            {&#xD;&#xA;                empId=""222222"",&#xD;&#xA;                empFName = ""John"",&#xD;&#xA;                empLName=""Doe""&#xD;&#xA;            }&#xD;&#xA;       };&#xD;&#xA;        for (var i = 0; i <= emp.Length - 1; i++)&#xD;&#xA;        {&#xD;&#xA;            if (emp[i].empId == id)&#xD;&#xA;                return true;&#xD;&#xA;        }&#xD;&#xA;        return false;&#xD;&#xA;      }&#xD;&#xA;    }"
7127577845987685987,61,5,"    #access {&#xD;&#xA;    	padding:0 20px;&#xD;&#xA;    	background:#111;&#xD;&#xA;    	box-shadow:0 0 7px rgba(0, 0, 0, .1);&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    #access ul {&#xD;&#xA;    	float:left;&#xD;&#xA;    	padding:0;&#xD;&#xA;    	margin:0;&#xD;&#xA;    	list-style:none;&#xD;&#xA;    	font-weight:600;&#xD;&#xA;    	text-transform:uppercase;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    #access li {&#xD;&#xA;    	position:relative;&#xD;&#xA;    	float:left;&#xD;&#xA;    	padding:0;&#xD;&#xA;    	margin:0;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    #access ul li:first-child {&#xD;&#xA;    	padding-left:0;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    #access a {&#xD;&#xA;    	display:block;&#xD;&#xA;    	padding:15px 24px;&#xD;&#xA;    	color:#f0f0f0;&#xD;&#xA;    	text-decoration:none;&#xD;&#xA;    &#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    #menu-sample-menu li {&#xD;&#xA;        color: black;&#xD;&#xA;        text-shadow: 0px 1px 4px #777;&#xD;&#xA;        background-color: green;&#xD;&#xA;    	padding: 0 12px 0 12px;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    #menu-sample-menu li a.hover {&#xD;&#xA;        background: orange;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    #access li.current_page_item > a,&#xD;&#xA;    #access li.current-menu-item > a {&#xD;&#xA;    	background: orange;&#xD;&#xA;    	color: white;&#xD;&#xA;    	text-decoration:none;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    #access a span {&#xD;&#xA;    	color:#999;&#xD;&#xA;    	font-size:11px;&#xD;&#xA;    	font-style:italic;&#xD;&#xA;    	font-weight:normal;&#xD;&#xA;    	line-height:1.62em;&#xD;&#xA;    	text-transform:none;&#xD;&#xA;    }"
2722066141132481138,61,5,"    #!/usr/bin/python&#xD;&#xA;    import pyglet&#xD;&#xA;    from time import time, sleep&#xD;&#xA;    &#xD;&#xA;    class Window(pyglet.window.Window):&#xD;&#xA;    	def __init__(self, refreshrate):&#xD;&#xA;    		super(Window, self).__init__(vsync = False)&#xD;&#xA;    		self.frames = 0&#xD;&#xA;    		self.framerate = pyglet.text.Label(text='Unknown', font_name='Verdana', font_size=8, x=10, y=10, color=(255,255,255,255))&#xD;&#xA;    		self.last = time()&#xD;&#xA;    		self.alive = 1&#xD;&#xA;    		self.refreshrate = refreshrate&#xD;&#xA;    		self.click = None&#xD;&#xA;    		self.drag = False&#xD;&#xA;    &#xD;&#xA;    	def on_draw(self):&#xD;&#xA;    		self.render()&#xD;&#xA;    &#xD;&#xA;    	def on_mouse_press(self, x, y, button, modifiers):&#xD;&#xA;    		self.click = x,y&#xD;&#xA;    &#xD;&#xA;    	def on_mouse_drag(self, x, y, dx, dy, buttons, modifiers):&#xD;&#xA;    		if self.click:&#xD;&#xA;    			self.drag = True&#xD;&#xA;    			print 'Drag offset:',(dx,dy)&#xD;&#xA;    &#xD;&#xA;    	def on_mouse_release(self, x, y, button, modifiers):&#xD;&#xA;    		if not self.drag and self.click:&#xD;&#xA;    			print 'You clicked here', self.click, 'Relese point:',(x,y)&#xD;&#xA;    		else:&#xD;&#xA;    			print 'You draged from', self.click, 'to:',(x,y)&#xD;&#xA;    		self.click = None&#xD;&#xA;    		self.drag = False&#xD;&#xA;    &#xD;&#xA;    	def render(self):&#xD;&#xA;    		self.clear()&#xD;&#xA;    		if time() - self.last >= 1:&#xD;&#xA;    			self.framerate.text = str(self.frames)&#xD;&#xA;    			self.frames = 0&#xD;&#xA;    			self.last = time()&#xD;&#xA;    		else:&#xD;&#xA;    			self.frames += 1&#xD;&#xA;    		self.framerate.draw()&#xD;&#xA;    		self.flip()&#xD;&#xA;    &#xD;&#xA;    	def on_close(self):&#xD;&#xA;    		self.alive = 0&#xD;&#xA;    &#xD;&#xA;    	def run(self):&#xD;&#xA;    		while self.alive:&#xD;&#xA;    			self.render()&#xD;&#xA;    			# ----> Note: <----&#xD;&#xA;    			#  Without self.dispatc_events() the screen will freeze&#xD;&#xA;    			#  due to the fact that i don't call pyglet.app.run(),&#xD;&#xA;    			#  because i like to have the control when and what locks&#xD;&#xA;    			#  the application, since pyglet.app.run() is a locking call.&#xD;&#xA;    			event = self.dispatch_events()&#xD;&#xA;    			sleep(1.0/self.refreshrate)&#xD;&#xA;    &#xD;&#xA;    win = Window(23) # set the fps&#xD;&#xA;    win.run()"
3233517897659972142,62,5,"    <?php&#xD;&#xA;     $user_agent     =   $_SERVER['HTTP_USER_AGENT'];&#xD;&#xA;     function getOS() { &#xD;&#xA;    global $user_agent;&#xD;&#xA;    $os_platform    =   ""Unknown OS Platform"";&#xD;&#xA;    $os_array       =   array(&#xD;&#xA;                            '/windows nt 6.2/i'     =>  'Windows 8',&#xD;&#xA;                            '/windows nt 6.1/i'     =>  'Windows 7',&#xD;&#xA;                            '/windows nt 6.0/i'     =>  'Windows Vista',&#xD;&#xA;                            '/windows nt 5.2/i'     =>  'Windows Server 2003/XP     x64',&#xD;&#xA;                            '/windows nt 5.1/i'     =>  'Windows XP',&#xD;&#xA;                            '/windows xp/i'         =>  'Windows XP',&#xD;&#xA;                            '/windows nt 5.0/i'     =>  'Windows 2000',&#xD;&#xA;                            '/windows me/i'         =>  'Windows ME',&#xD;&#xA;                            '/win98/i'              =>  'Windows 98',&#xD;&#xA;                            '/win95/i'              =>  'Windows 95',&#xD;&#xA;                            '/win16/i'              =>  'Windows 3.11',&#xD;&#xA;                            '/macintosh|mac os x/i' =>  'Mac OS X',&#xD;&#xA;                            '/mac_powerpc/i'        =>  'Mac OS 9',&#xD;&#xA;                            '/linux/i'              =>  'Linux',&#xD;&#xA;                            '/ubuntu/i'             =>  'Ubuntu',&#xD;&#xA;                            '/iphone/i'             =>  'iPhone',&#xD;&#xA;                            '/ipod/i'               =>  'iPod',&#xD;&#xA;                            '/ipad/i'               =>  'iPad',&#xD;&#xA;                            '/android/i'            =>  'Android',&#xD;&#xA;                            '/blackberry/i'         =>  'BlackBerry',&#xD;&#xA;                            '/webos/i'              =>  'Mobile'&#xD;&#xA;                        );&#xD;&#xA;         foreach ($os_array as $regex => $value) { &#xD;&#xA;        if (preg_match($regex, $user_agent)) {&#xD;&#xA;            $os_platform    =   $value;&#xD;&#xA;        }&#xD;&#xA;        }   &#xD;&#xA;          return $os_platform;&#xD;&#xA;           }&#xD;&#xA;     function getBrowser() {&#xD;&#xA;    global $user_agent;&#xD;&#xA;    $browser        =   ""Unknown Browser"";&#xD;&#xA;    $browser_array  =   array(&#xD;&#xA;                            '/msie/i'       =>  'Internet Explorer',&#xD;&#xA;                            '/firefox/i'    =>  'Firefox',&#xD;&#xA;                            '/safari/i'     =>  'Safari',&#xD;&#xA;                            '/chrome/i'     =>  'Chrome',&#xD;&#xA;                            '/opera/i'      =>  'Opera',&#xD;&#xA;                            '/netscape/i'   =>  'Netscape',&#xD;&#xA;                            '/maxthon/i'    =>  'Maxthon',&#xD;&#xA;                            '/konqueror/i'  =>  'Konqueror',&#xD;&#xA;                            '/mobile/i'     =>  'Handheld Browser'&#xD;&#xA;                        );&#xD;&#xA;       foreach ($browser_array as $regex => $value) { &#xD;&#xA;        if (preg_match($regex, $user_agent)) {&#xD;&#xA;            $browser    =   $value;&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;     return $browser;&#xD;&#xA;      }&#xD;&#xA;     $user_os        =   getOS();&#xD;&#xA;     $user_browser   =   getBrowser();&#xD;&#xA;      $device_details =   ""<strong>Browser: </strong>"".$user_browser.""<br />                <strong>Operating System: </strong>"".$user_os."""";&#xD;&#xA;     print_r($device_details);&#xD;&#xA;    echo(""<br /><br /><br />"".$_SERVER['HTTP_USER_AGENT']."""");&#xD;&#xA;      ?>"
-1824768272201778190,62,5,"    ; @echo off&#xD;&#xA;    ;;goto :end_help&#xD;&#xA;    ;;setlocal DsiableDelayedExpansion&#xD;&#xA;    ;;;&#xD;&#xA;    ;;;&#xD;&#xA;    ;;; fileinf /l list of full file paths separated with ;&#xD;&#xA;    ;;; fileinf /f text file with a list of files to be processed ( one on each line )&#xD;&#xA;    ;;; fileinf /? prints the help&#xD;&#xA;    ;;;&#xD;&#xA;    ;;:end_help&#xD;&#xA;     &#xD;&#xA;    ; REM Creating a Newline variable (the two blank lines are required!)&#xD;&#xA;    ; set NLM=^&#xD;&#xA;     &#xD;&#xA;     &#xD;&#xA;    ; set NL=^^^%NLM%%NLM%^%NLM%%NLM%&#xD;&#xA;    ; if ""%~1"" equ ""/?"" type ""%~f0"" | find "";;;"" | find /v ""find"" && exit /b 0&#xD;&#xA;    ; if ""%~2"" equ """" type ""%~f0"" | find "";;;"" | find /v ""find"" && exit /b 0&#xD;&#xA;    ; setlocal enableDelayedExpansion&#xD;&#xA;    ; if ""%~1"" equ ""/l"" (&#xD;&#xA;    ;  set ""_files=%~2""&#xD;&#xA;    ;  echo !_files:;=%NL%!>""%TEMP%\file.paths""&#xD;&#xA;    ;  set _process_file=""%TEMP%\file.paths""&#xD;&#xA;    ;  goto :get_info&#xD;&#xA;    ; )&#xD;&#xA;     &#xD;&#xA;    ; if ""%~1"" equ ""/f"" if exist ""%~2"" (&#xD;&#xA;    ;  set _process_file=""%~2""&#xD;&#xA;    ;  goto :get_info&#xD;&#xA;    ; )&#xD;&#xA;     &#xD;&#xA;    ; echo incorect parameters & exit /b 1&#xD;&#xA;    ; :get_info&#xD;&#xA;    ; set ""file_info=""&#xD;&#xA;     &#xD;&#xA;    ; makecab /d InfFileName=%TEMP%\file.inf /d ""DiskDirectory1=%TEMP%"" /f ""%~f0""  /f %_process_file% /v0>nul&#xD;&#xA;     &#xD;&#xA;    ; for /f ""usebackq skip=4 delims="" %%f in (""%TEMP%\file.inf"") do (&#xD;&#xA;    ;  set ""file_info=%%f""&#xD;&#xA;    ;  echo !file_info:,=%nl%!&#xD;&#xA;    ; )&#xD;&#xA;     &#xD;&#xA;    ; endlocal&#xD;&#xA;    ;endlocal&#xD;&#xA;    ; del /q /f %TEMP%\file.inf 2>nul&#xD;&#xA;    ; del /q /f %TEMP%\file.path 2>nul&#xD;&#xA;    ; exit /b 0&#xD;&#xA;     &#xD;&#xA;    .set DoNotCopyFiles=on&#xD;&#xA;    .set DestinationDir=;&#xD;&#xA;    .set RptFileName=nul&#xD;&#xA;    .set InfFooter=;&#xD;&#xA;    .set InfHeader=;&#xD;&#xA;    .Set ChecksumWidth=8&#xD;&#xA;    .Set InfDiskLineFormat=;&#xD;&#xA;    .Set Cabinet=off&#xD;&#xA;    .Set Compress=off&#xD;&#xA;    .Set GenerateInf=ON&#xD;&#xA;    .Set InfDiskHeader=;&#xD;&#xA;    .Set InfFileHeader=;&#xD;&#xA;    .set InfCabinetHeader=;&#xD;&#xA;    .Set InfFileLineFormat="",file:*file*,date:*date*,size:*size*,csum:*csum*,time:*time*,vern:*ver*,vers:*vers*,lang:*lang*"""
8007275197034034836,63,5,"    windowwidth = getWindowManager().getDefaultDisplay().getWidth();&#xD;&#xA;    windowheight = getWindowManager().getDefaultDisplay().getHeight();&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    tv1 = (ImageView)findViewById(R.id.image);&#xD;&#xA;    tv1.setOnTouchListener(new View.OnTouchListener() {         &#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public boolean onTouch(View v, MotionEvent event) {&#xD;&#xA;            layoutParams1 = (RelativeLayout.LayoutParams) tv1.getLayoutParams();&#xD;&#xA;            switch(event.getActionMasked())&#xD;&#xA;            {&#xD;&#xA;                case MotionEvent.ACTION_DOWN:&#xD;&#xA;                    break;&#xD;&#xA;                case MotionEvent.ACTION_MOVE:&#xD;&#xA;                    int x_cord = (int) event.getRawX();&#xD;&#xA;                    int y_cord = (int) event.getRawY();&#xD;&#xA;                    if (x_cord > windowwidth) {&#xD;&#xA;                        x_cord = windowwidth;&#xD;&#xA;                    }&#xD;&#xA;                    if (y_cord > windowheight) {&#xD;&#xA;                        y_cord = windowheight;&#xD;&#xA;                    }&#xD;&#xA;                    layoutParams1.leftMargin = x_cord - 25;&#xD;&#xA;                    layoutParams1.topMargin = y_cord - 75;&#xD;&#xA;                    tv1.setLayoutParams(layoutParams1);&#xD;&#xA;                    break;&#xD;&#xA;                default:&#xD;&#xA;                    break;&#xD;&#xA;            }&#xD;&#xA;            return true;&#xD;&#xA;        }&#xD;&#xA;    });&#xD;&#xA;    &#xD;&#xA;    tv2 = (ImageView)findViewById(R.id.image1);&#xD;&#xA;    tv2.setOnTouchListener(new View.OnTouchListener() {         &#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public boolean onTouch(View v, MotionEvent event) {&#xD;&#xA;            layoutParams2 = (RelativeLayout.LayoutParams) tv2.getLayoutParams();&#xD;&#xA;            switch(event.getActionMasked())&#xD;&#xA;            {&#xD;&#xA;                case MotionEvent.ACTION_DOWN:&#xD;&#xA;                    break;&#xD;&#xA;                case MotionEvent.ACTION_MOVE:&#xD;&#xA;                    int x_cord = (int) event.getRawX();&#xD;&#xA;                    int y_cord = (int) event.getRawY();&#xD;&#xA;                    if (x_cord > windowwidth) {&#xD;&#xA;                        x_cord = windowwidth;&#xD;&#xA;                    }&#xD;&#xA;                    if (y_cord > windowheight) {&#xD;&#xA;                        y_cord = windowheight;&#xD;&#xA;                    }&#xD;&#xA;                    layoutParams2.leftMargin = x_cord - 25;&#xD;&#xA;                    layoutParams2.topMargin = y_cord - 75;&#xD;&#xA;                    tv2.setLayoutParams(layoutParams2);&#xD;&#xA;                    break;&#xD;&#xA;                default:&#xD;&#xA;                    break;&#xD;&#xA;            }&#xD;&#xA;            return true;&#xD;&#xA;        }&#xD;&#xA;    });"
2686492970508159630,63,5,"    <%@ WebHandler Language=""C#"" Class=""DisplayImg"" %>&#xD;&#xA;    &#xD;&#xA;    using System;&#xD;&#xA;    using System.Web;&#xD;&#xA;    using System.Configuration;&#xD;&#xA;    using System.IO;&#xD;&#xA;    using System.Data;&#xD;&#xA;    using System.Data.SqlClient;&#xD;&#xA;    &#xD;&#xA;    public class DisplayImg : IHttpHandler&#xD;&#xA;    {&#xD;&#xA;    &#xD;&#xA;        public void ProcessRequest(HttpContext context)&#xD;&#xA;        {&#xD;&#xA;            string theID;&#xD;&#xA;            if (context.Request.QueryString[""id""] != null)&#xD;&#xA;                theID = context.Request.QueryString[""id""].ToString();&#xD;&#xA;            else&#xD;&#xA;                throw new ArgumentException(""No parameter specified"");&#xD;&#xA;    &#xD;&#xA;            context.Response.ContentType = ""image/jpeg"";&#xD;&#xA;            Stream strm = DisplayImage(theID);&#xD;&#xA;            byte[] buffer = new byte[2048];&#xD;&#xA;            int byteSeq = strm.Read(buffer, 0, 2048);&#xD;&#xA;    &#xD;&#xA;            while (byteSeq > 0)&#xD;&#xA;            {&#xD;&#xA;                context.Response.OutputStream.Write(buffer, 0, byteSeq);&#xD;&#xA;                byteSeq = strm.Read(buffer, 0, 2048);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public Stream DisplayImage(string theID)&#xD;&#xA;        {&#xD;&#xA;            SqlConnection connection = new SqlConnection(ConfigurationManager.ConnectionStrings[""SERVER""].ConnectionString.ToString());&#xD;&#xA;            string sql = ""SELECT Server_image_icon FROM tbl_ServerMaster WHERE server_Code = @ID"";&#xD;&#xA;            SqlCommand cmd = new SqlCommand(sql, connection);&#xD;&#xA;            cmd.CommandType = CommandType.Text;&#xD;&#xA;            cmd.Parameters.AddWithValue(""@ID"", theID);&#xD;&#xA;            connection.Open();&#xD;&#xA;            object theImg = cmd.ExecuteScalar();&#xD;&#xA;            try&#xD;&#xA;            {&#xD;&#xA;                return new MemoryStream((byte[])theImg);&#xD;&#xA;            }&#xD;&#xA;            catch&#xD;&#xA;            {&#xD;&#xA;                return null;&#xD;&#xA;            }&#xD;&#xA;            finally&#xD;&#xA;            {&#xD;&#xA;                connection.Close();&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public bool IsReusable&#xD;&#xA;        {&#xD;&#xA;            get&#xD;&#xA;            {&#xD;&#xA;                return false;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }"
-6842642137946709059,63,5,"    package com.journaldev.spring;&#xD;&#xA;    &#xD;&#xA;    import org.springframework.beans.factory.annotation.Autowired;&#xD;&#xA;    import org.springframework.beans.factory.annotation.Qualifier;&#xD;&#xA;    import org.springframework.stereotype.Controller;&#xD;&#xA;    import org.springframework.ui.Model;&#xD;&#xA;    import org.springframework.web.bind.annotation.ModelAttribute;&#xD;&#xA;    import org.springframework.web.bind.annotation.PathVariable;&#xD;&#xA;    import org.springframework.web.bind.annotation.RequestMapping;&#xD;&#xA;    import org.springframework.web.bind.annotation.RequestMethod;&#xD;&#xA;    &#xD;&#xA;    import com.journaldev.spring.model.Person;&#xD;&#xA;    import com.journaldev.spring.service.PersonService;&#xD;&#xA;    &#xD;&#xA;    @Controller&#xD;&#xA;    public class PersonController {&#xD;&#xA;    	&#xD;&#xA;    	private PersonService personService;&#xD;&#xA;    	&#xD;&#xA;    	@Autowired(required=true)&#xD;&#xA;    	@Qualifier(value=""personService"")&#xD;&#xA;    	public void setPersonService(PersonService ps){&#xD;&#xA;    		this.personService = ps;&#xD;&#xA;    	}&#xD;&#xA;    	&#xD;&#xA;    	@RequestMapping(value = ""/persons"", method = RequestMethod.GET)&#xD;&#xA;    	public String listPersons(Model model) {&#xD;&#xA;    		model.addAttribute(""person"", new Person());&#xD;&#xA;    		model.addAttribute(""listPersons"", this.personService.listPersons());&#xD;&#xA;    		return ""person"";&#xD;&#xA;    	}&#xD;&#xA;    	&#xD;&#xA;    	//For add and update person both&#xD;&#xA;    	@RequestMapping(value= ""/person/add"", method = RequestMethod.POST)&#xD;&#xA;    	public String addPerson(@ModelAttribute(""person"") Person p){&#xD;&#xA;    		&#xD;&#xA;    		if(p.getId() == 0){&#xD;&#xA;    			//new person, add it&#xD;&#xA;    			this.personService.addPerson(p);&#xD;&#xA;    		}else{&#xD;&#xA;    			//existing person, call update&#xD;&#xA;    			this.personService.updatePerson(p);&#xD;&#xA;    		}&#xD;&#xA;    		&#xD;&#xA;    		return ""redirect:/persons"";&#xD;&#xA;    		&#xD;&#xA;    	}&#xD;&#xA;    	&#xD;&#xA;    	@RequestMapping(""/remove/{id}"")&#xD;&#xA;        public String removePerson(@PathVariable(""id"") int id){&#xD;&#xA;    		&#xD;&#xA;            this.personService.removePerson(id);&#xD;&#xA;            return ""redirect:/persons"";&#xD;&#xA;        }&#xD;&#xA;     &#xD;&#xA;        @RequestMapping(""/edit/{id}"")&#xD;&#xA;        public String editPerson(@PathVariable(""id"") int id, Model model){&#xD;&#xA;            model.addAttribute(""person"", this.personService.getPersonById(id));&#xD;&#xA;            model.addAttribute(""listPersons"", this.personService.listPersons());&#xD;&#xA;            return ""person"";&#xD;&#xA;        }&#xD;&#xA;    	&#xD;&#xA;    }"
-6793656343777026782,63,5,"     public class PlaceJSONParser {&#xD;&#xA; &#xD;&#xA;    /** Receives a JSONObject and returns a list */&#xD;&#xA;    public List<HashMap<String,String>> parse(JSONObject jObject){&#xD;&#xA; &#xD;&#xA;        JSONArray jPlaces = null;&#xD;&#xA;        try {&#xD;&#xA;            /** Retrieves all the elements in the 'places' array */&#xD;&#xA;            jPlaces = jObject.getJSONArray(""predictions"");&#xD;&#xA;        } catch (JSONException e) {&#xD;&#xA;            e.printStackTrace();&#xD;&#xA;        }&#xD;&#xA;        /** Invoking getPlaces with the array of json object&#xD;&#xA;         * where each json object represent a place&#xD;&#xA;        */&#xD;&#xA;        return getPlaces(jPlaces);&#xD;&#xA;    }&#xD;&#xA; &#xD;&#xA;    private List<HashMap<String, String>> getPlaces(JSONArray jPlaces){&#xD;&#xA;        int placesCount = jPlaces.length();&#xD;&#xA;        List<HashMap<String, String>> placesList = new ArrayList<HashMap<String,String>>();&#xD;&#xA;        HashMap<String, String> place = null;&#xD;&#xA; &#xD;&#xA;        /** Taking each place, parses and adds to list object */&#xD;&#xA;        for(int i=0; i<placesCount;i++){&#xD;&#xA;            try {&#xD;&#xA;                /** Call getPlace with place JSON object to parse the place */&#xD;&#xA;                place = getPlace((JSONObject)jPlaces.get(i));&#xD;&#xA;                placesList.add(place);&#xD;&#xA; &#xD;&#xA;            } catch (JSONException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA; &#xD;&#xA;        return placesList;&#xD;&#xA;    }&#xD;&#xA; &#xD;&#xA;    /** Parsing the Place JSON object */&#xD;&#xA;    private HashMap<String, String> getPlace(JSONObject jPlace){&#xD;&#xA; &#xD;&#xA;        HashMap<String, String> place = new HashMap<String, String>();&#xD;&#xA; &#xD;&#xA;        String id="""";&#xD;&#xA;        String reference="""";&#xD;&#xA;        String description="""";&#xD;&#xA; &#xD;&#xA;        try {&#xD;&#xA; &#xD;&#xA;            description = jPlace.getString(""description"");&#xD;&#xA;            id = jPlace.getString(""id"");&#xD;&#xA;            reference = jPlace.getString(""reference"");&#xD;&#xA; &#xD;&#xA;            place.put(""description"", description);&#xD;&#xA;            place.put(""_id"",id);&#xD;&#xA;            place.put(""reference"",reference);&#xD;&#xA; &#xD;&#xA;        } catch (JSONException e) {&#xD;&#xA;            e.printStackTrace();&#xD;&#xA;        }&#xD;&#xA;        return place;&#xD;&#xA;    }&#xD;&#xA;    }"
-8103933465944568373,64,5,"    public class VolumeKeyController {&#xD;&#xA;    &#xD;&#xA;        private MediaSessionCompat mMediaSession;&#xD;&#xA;        private final Context mContext;&#xD;&#xA;    &#xD;&#xA;        public VolumeKeyController(Context context) {&#xD;&#xA;            mContext = context;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private void createMediaSession() {&#xD;&#xA;            mMediaSession = new MediaSessionCompat(mContext, KeyUtil.log);&#xD;&#xA;    &#xD;&#xA;            mMediaSession.setFlags(MediaSessionCompat.FLAG_HANDLES_MEDIA_BUTTONS |&#xD;&#xA;                    MediaSessionCompat.FLAG_HANDLES_TRANSPORT_CONTROLS);&#xD;&#xA;            mMediaSession.setPlaybackState(new Builder()&#xD;&#xA;                    .setState(PlaybackStateCompat.STATE_PLAYING, 0, 0)&#xD;&#xA;                    .build());&#xD;&#xA;            mMediaSession.setPlaybackToRemote(getVolumeProvider());&#xD;&#xA;            mMediaSession.setActive(true);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private VolumeProviderCompat getVolumeProvider() {&#xD;&#xA;            final AudioManager audio = mContext.getSystemService(Context.AUDIO_SERVICE);&#xD;&#xA;    &#xD;&#xA;            int STREAM_TYPE = AudioManager.STREAM_MUSIC;&#xD;&#xA;            int currentVolume = audio.getStreamVolume(STREAM_TYPE);&#xD;&#xA;            int maxVolume = audio.getStreamMaxVolume(STREAM_TYPE);&#xD;&#xA;            final int VOLUME_UP = 1;&#xD;&#xA;            final int VOLUME_DOWN = -1;&#xD;&#xA;    &#xD;&#xA;            return new VolumeProviderCompat(VolumeProviderCompat.VOLUME_CONTROL_RELATIVE, maxVolume, currentVolume) {&#xD;&#xA;                @Override&#xD;&#xA;                public void onAdjustVolume(int direction) {&#xD;&#xA;                    // Up = 1, Down = -1, Release = 0&#xD;&#xA;                    // Replace with your action, if you don't want to adjust system volume&#xD;&#xA;                    if (direction == VOLUME_UP) {&#xD;&#xA;                        audio.adjustStreamVolume(STREAM_TYPE,&#xD;&#xA;                                AudioManager.ADJUST_RAISE, AudioManager.FLAG_REMOVE_SOUND_AND_VIBRATE);&#xD;&#xA;                    }&#xD;&#xA;                    else if (direction == VOLUME_DOWN) {&#xD;&#xA;                        audio.adjustStreamVolume(STREAM_TYPE,&#xD;&#xA;                                AudioManager.ADJUST_LOWER, AudioManager.FLAG_REMOVE_SOUND_AND_VIBRATE);&#xD;&#xA;                    }&#xD;&#xA;                    setCurrentVolume(audio.getStreamVolume(STREAM_TYPE));&#xD;&#xA;                }&#xD;&#xA;            };&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // Call when control needed, add a call to constructor if needed immediately&#xD;&#xA;        public void setActive(boolean active) {&#xD;&#xA;            if (mMediaSession != null) {&#xD;&#xA;                mMediaSession.setActive(active);&#xD;&#xA;                return;&#xD;&#xA;            }&#xD;&#xA;            createMediaSession();&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // Call from Service's onDestroy method&#xD;&#xA;        public void destroy() {&#xD;&#xA;            if (mMediaSession != null) {&#xD;&#xA;                mMediaSession.release();&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }"
6836089531613795265,64,5,"    $(document).ready(function() {&#xD;&#xA;    					  function exportTableToCSV($table, filename) {&#xD;&#xA;    						var $rows = $table.find('tr:has(td)'),&#xD;&#xA;    						  // Temporary delimiter characters unlikely to be typed by keyboard&#xD;&#xA;    						  // This is to avoid accidentally splitting the actual contents&#xD;&#xA;    						  tmpColDelim = String.fromCharCode(11), // vertical tab character&#xD;&#xA;    						  tmpRowDelim = String.fromCharCode(0), // null character&#xD;&#xA;    						  // actual delimiter characters for CSV format&#xD;&#xA;    						  colDelim = '"",""',&#xD;&#xA;    						  rowDelim = '""\r\n""',&#xD;&#xA;    						  // Grab text from table into CSV formatted string&#xD;&#xA;    						  csv = '""' + $rows.map(function(i, row) {&#xD;&#xA;    							var $row = $(row),&#xD;&#xA;    							  $cols = $row.find('td');&#xD;&#xA;    							return $cols.map(function(j, col) {&#xD;&#xA;    							  var $col = $(col),&#xD;&#xA;    								text = $col.text();&#xD;&#xA;    							  return text.replace(/""/g, '""""'); // escape double quotes&#xD;&#xA;    							}).get().join(tmpColDelim);&#xD;&#xA;    						  }).get().join(tmpRowDelim)&#xD;&#xA;    						  .split(tmpRowDelim).join(rowDelim)&#xD;&#xA;    						  .split(tmpColDelim).join(colDelim) + '""';&#xD;&#xA;    						// Deliberate 'false', see comment below&#xD;&#xA;    						if (false && window.navigator.msSaveBlob) {&#xD;&#xA;    						  var blob = new Blob([decodeURIComponent(csv)], {&#xD;&#xA;    							type: 'text/csv;charset=utf8'&#xD;&#xA;    						  });&#xD;&#xA;    						  // Crashes in IE 10, IE 11 and Microsoft Edge&#xD;&#xA;    						  // See MS Edge Issue #10396033&#xD;&#xA;    						  // Hence, the deliberate 'false'&#xD;&#xA;    						  // This is here just for completeness&#xD;&#xA;    						  // Remove the 'false' at your own risk&#xD;&#xA;    						  window.navigator.msSaveBlob(blob, filename);&#xD;&#xA;    						} else if (window.Blob && window.URL) {&#xD;&#xA;    						  // HTML5 Blob        &#xD;&#xA;    						  var blob = new Blob([csv], {&#xD;&#xA;    							type: 'text/csv;charset=utf-8'&#xD;&#xA;    						  });&#xD;&#xA;    						  var csvUrl = URL.createObjectURL(blob);&#xD;&#xA;    						  $(this)&#xD;&#xA;    							.attr({&#xD;&#xA;    							  'download': filename,&#xD;&#xA;    							  'href': csvUrl&#xD;&#xA;    							});&#xD;&#xA;    						} else {&#xD;&#xA;    						  // Data URI&#xD;&#xA;    						  var csvData = 'data:application/csv;charset=utf-8,' + encodeURIComponent(csv);&#xD;&#xA;    						  $(this)&#xD;&#xA;    							.attr({&#xD;&#xA;    							  'download': filename,&#xD;&#xA;    							  'href': csvData,&#xD;&#xA;    							  'target': '_blank'&#xD;&#xA;    							});&#xD;&#xA;    						}&#xD;&#xA;    					  }&#xD;&#xA;    					  // This must be a hyperlink&#xD;&#xA;    					  $("".export"").on('click', function(event) {&#xD;&#xA;    						// CSV&#xD;&#xA;    						var args = [$('#dvData>table'), 'export.csv'];&#xD;&#xA;    						exportTableToCSV.apply(this, args);&#xD;&#xA;    						// If CSV, don't do event.preventDefault() or return false&#xD;&#xA;    						// We actually need this to be a typical hyperlink&#xD;&#xA;    					  });&#xD;&#xA;    					});"
8536086212063785187,64,5,"    $i = 1;&#xD;&#xA;    $cart_items = array();   &#xD;&#xA;    while(isset($_POST['item_number' . $i]))   &#xD;&#xA;    {   &#xD;&#xA;    	$item_number = isset($_POST['item_number' . $i]) ? $_POST['item_number' . $i] : '';   &#xD;&#xA;    	$item_name = isset($_POST['item_name' . $i]) ? $_POST['item_name' . $i] : '';   &#xD;&#xA;    	$quantity = isset($_POST['quantity' . $i]) ? $_POST['quantity' . $i] : '';  &#xD;&#xA;    	$mc_gross = isset($_POST['mc_gross_' . $i]) ? $_POST['mc_gross_' . $i] : 0;&#xD;&#xA;    	$mc_handling = isset($_POST['mc_handling' . $i]) ? $_POST['mc_handling' . $i] : 0;&#xD;&#xA;    	$mc_shipping = isset($_POST['mc_shipping' . $i]) ? $_POST['mc_shipping' . $i] : 0;&#xD;&#xA;    	$custom = isset($_POST['custom' . $i]) ? $_POST['custom' . $i] : '';   &#xD;&#xA;    	$option_name1 = isset($_POST['option_name1_' . $i]) ? $_POST['option_name1_' . $i] : '';   &#xD;&#xA;    	$option_selection1 = isset($_POST['option_selection1_' . $i]) ? $_POST['option_selection1_' . $i] : '';   &#xD;&#xA;    	$option_name2 = isset($_POST['option_name2_' . $i]) ? $_POST['option_name2_' . $i] : '';   &#xD;&#xA;    	$option_selection2 = isset($_POST['option_selection2_' . $i]) ? $_POST['option_selection2_' . $i] : '';&#xD;&#xA;    	$option_name3 = isset($_POST['option_name3_' . $i]) ? $_POST['option_name3_' . $i] : '';   &#xD;&#xA;    	$option_selection3 = isset($_POST['option_selection3_' . $i]) ? $_POST['option_selection3_' . $i] : '';&#xD;&#xA;    	$option_name4 = isset($_POST['option_name4_' . $i]) ? $_POST['option_name4_' . $i] : '';   &#xD;&#xA;    	$option_selection4 = isset($_POST['option_selection4_' . $i]) ? $_POST['option_selection4_' . $i] : '';&#xD;&#xA;    	$option_name5 = isset($_POST['option_name5_' . $i]) ? $_POST['option_name5_' . $i] : '';   &#xD;&#xA;    	$option_selection5 = isset($_POST['option_selection5_' . $i]) ? $_POST['option_selection5_' . $i] : '';&#xD;&#xA;    	$option_name6 = isset($_POST['option_name6_' . $i]) ? $_POST['option_name6_' . $i] : '';   &#xD;&#xA;    	$option_selection6 = isset($_POST['option_selection6_' . $i]) ? $_POST['option_selection6_' . $i] : '';&#xD;&#xA;    	$option_name7 = isset($_POST['option_name7_' . $i]) ? $_POST['option_name7_' . $i] : '';   &#xD;&#xA;    	$option_selection7 = isset($_POST['option_selection7_' . $i]) ? $_POST['option_selection7_' . $i] : '';&#xD;&#xA;    	$option_name8 = isset($_POST['option_name8_' . $i]) ? $_POST['option_name8_' . $i] : '';   &#xD;&#xA;    	$option_selection8 = isset($_POST['option_selection8_' . $i]) ? $_POST['option_selection8_' . $i] : '';&#xD;&#xA;    	$option_name9 = isset($_POST['option_name9_' . $i]) ? $_POST['option_name9_' . $i] : '';   &#xD;&#xA;    	$option_selection9 = isset($_POST['option_selection9_' . $i]) ? $_POST['option_selection9_' . $i] : '';&#xD;&#xA;    	&#xD;&#xA;    	$btn_id = isset($_POST['btn_id' . $i]) ? $_POST['btn_id' . $i] : '';&#xD;&#xA;    	&#xD;&#xA;    	$current_item = array(   &#xD;&#xA;    						   'item_number' => $item_number,   &#xD;&#xA;    						   'item_name' => $item_name,   &#xD;&#xA;    						   'quantity' => $quantity, &#xD;&#xA;    						   'mc_gross' => $mc_gross, &#xD;&#xA;    						   'mc_handling' => $mc_handling, &#xD;&#xA;    						   'mc_shipping' => $mc_shipping, &#xD;&#xA;    						   'custom' => $custom,   &#xD;&#xA;    						   'option_name1' => $option_name1,   &#xD;&#xA;    						   'option_selection1' => $option_selection1,   &#xD;&#xA;    						   'option_name2' => $option_name2,   &#xD;&#xA;    						   'option_selection2' => $option_selection2, &#xD;&#xA;    						   'option_name3' => $option_name3, &#xD;&#xA;    						   'option_selection3' => $option_selection3, &#xD;&#xA;    						   'option_name4' => $option_name4, &#xD;&#xA;    						   'option_selection4' => $option_selection4, &#xD;&#xA;    						   'option_name5' => $option_name5, &#xD;&#xA;    						   'option_selection5' => $option_selection5, &#xD;&#xA;    						   'option_name6' => $option_name6, &#xD;&#xA;    						   'option_selection6' => $option_selection6, &#xD;&#xA;    						   'option_name7' => $option_name7, &#xD;&#xA;    						   'option_selection7' => $option_selection7, &#xD;&#xA;    						   'option_name8' => $option_name8, &#xD;&#xA;    						   'option_selection8' => $option_selection8, &#xD;&#xA;    						   'option_name9' => $option_name9, &#xD;&#xA;    						   'option_selection9' => $option_selection9, &#xD;&#xA;    						   'btn_id' => $btn_id&#xD;&#xA;    						  );   &#xD;&#xA;    		 &#xD;&#xA;    	array_push($cart_items, $current_item);   &#xD;&#xA;    	$i++;   &#xD;&#xA;    }"
-5170660584319779116,64,5,"        /**&#xD;&#xA;         * Uses a combination of a PageTransformer and swapping X & Y coordinates&#xD;&#xA;         * of touch events to create the illusion of a vertically scrolling ViewPager. &#xD;&#xA;         * &#xD;&#xA;         * Requires API 11+&#xD;&#xA;         * &#xD;&#xA;         */&#xD;&#xA;    &#xD;&#xA;    public class VerticalViewPager extends ViewPager {&#xD;&#xA;    public VerticalViewPager(Context context) {&#xD;&#xA;        super(context);&#xD;&#xA;        init();&#xD;&#xA;    }&#xD;&#xA;    public VerticalViewPager(Context context, AttributeSet attrs) {&#xD;&#xA;        super(context, attrs);&#xD;&#xA;        init();&#xD;&#xA;    }&#xD;&#xA;    private void init() {&#xD;&#xA;        // The majority of the magic happens here&#xD;&#xA;        setPageTransformer(true, new VerticalPageTransformer());&#xD;&#xA;        // The easiest way to get rid of the overscroll drawing that happens on the left and right&#xD;&#xA;        setOverScrollMode(OVER_SCROLL_NEVER);&#xD;&#xA;    }&#xD;&#xA;    private class VerticalPageTransformer implements ViewPager.PageTransformer {&#xD;&#xA;        @Override&#xD;&#xA;        public void transformPage(View view, float position) {&#xD;&#xA;            if (position < -1) { // [-Infinity,-1)&#xD;&#xA;                // This page is way off-screen to the left.&#xD;&#xA;                view.setAlpha(0);&#xD;&#xA;            } else if (position <= 1) { // [-1,1]&#xD;&#xA;                view.setAlpha(1);&#xD;&#xA;                // Counteract the default slide transition&#xD;&#xA;                view.setTranslationX(view.getWidth() * -position);&#xD;&#xA;                //set Y position to swipe in from top&#xD;&#xA;                float yPosition = position * view.getHeight();&#xD;&#xA;                view.setTranslationY(yPosition);&#xD;&#xA;            } else { // (1,+Infinity]&#xD;&#xA;                // This page is way off-screen to the right.&#xD;&#xA;                view.setAlpha(0);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    /**&#xD;&#xA;     * Swaps the X and Y coordinates of your touch event.&#xD;&#xA;     */&#xD;&#xA;    private MotionEvent swapXY(MotionEvent ev) {&#xD;&#xA;        float width = getWidth();&#xD;&#xA;        float height = getHeight();&#xD;&#xA;        float newX = (ev.getY() / height) * width;&#xD;&#xA;        float newY = (ev.getX() / width) * height;&#xD;&#xA;        ev.setLocation(newX, newY);&#xD;&#xA;        return ev;&#xD;&#xA;    }&#xD;&#xA;    @Override&#xD;&#xA;    public boolean onInterceptTouchEvent(MotionEvent ev){&#xD;&#xA;        boolean intercepted = super.onInterceptTouchEvent(swapXY(ev));&#xD;&#xA;        swapXY(ev); // return touch coordinates to original reference frame for any child views&#xD;&#xA;        return intercepted;&#xD;&#xA;    }&#xD;&#xA;    @Override&#xD;&#xA;    public boolean onTouchEvent(MotionEvent ev) {&#xD;&#xA;        return super.onTouchEvent(swapXY(ev));&#xD;&#xA;    }&#xD;&#xA;    }"
-291649677388789482,64,5,"    public class FFT {&#xD;&#xA;	  int n, m;&#xD;&#xA;	  // Lookup tables. Only need to recompute when size of FFT changes.&#xD;&#xA;	  double[] cos;&#xD;&#xA;	  double[] sin;&#xD;&#xA;	  public FFT(int n) {&#xD;&#xA;	      this.n = n;&#xD;&#xA;	      this.m = (int) (Math.log(n) / Math.log(2));&#xD;&#xA;	      // Make sure n is a power of 2&#xD;&#xA;	      if (n != (1 << m))&#xD;&#xA;	          throw new RuntimeException(""FFT length must be power of 2"");&#xD;&#xA;	      // precompute tables&#xD;&#xA;	      cos = new double[n / 2];&#xD;&#xA;	      sin = new double[n / 2];&#xD;&#xA;	      for (int i = 0; i < n / 2; i++) {&#xD;&#xA;	          cos[i] = Math.cos(-2 * Math.PI * i / n);&#xD;&#xA;	          sin[i] = Math.sin(-2 * Math.PI * i / n);&#xD;&#xA;	      }&#xD;&#xA;	  }&#xD;&#xA;	  public void fft(double[] x, double[] y) {&#xD;&#xA;	      int i, j, k, n1, n2, a;&#xD;&#xA;	      double c, s, t1, t2;&#xD;&#xA;	      // Bit-reverse&#xD;&#xA;	      j = 0;&#xD;&#xA;	      n2 = n / 2;&#xD;&#xA;	      for (i = 1; i < n - 1; i++) {&#xD;&#xA;	          n1 = n2;&#xD;&#xA;	          while (j >= n1) {&#xD;&#xA;	              j = j - n1;&#xD;&#xA;	              n1 = n1 / 2;&#xD;&#xA;	          }&#xD;&#xA;	          j = j + n1;&#xD;&#xA;	          if (i < j) {&#xD;&#xA;	              t1 = x[i];&#xD;&#xA;	              x[i] = x[j];&#xD;&#xA;	              x[j] = t1;&#xD;&#xA;	              t1 = y[i];&#xD;&#xA;	              y[i] = y[j];&#xD;&#xA;	              y[j] = t1;&#xD;&#xA;	          }&#xD;&#xA;	      }&#xD;&#xA;	      // FFT&#xD;&#xA;	      n1 = 0;&#xD;&#xA;	      n2 = 1;&#xD;&#xA;	      for (i = 0; i < m; i++) {&#xD;&#xA;	          n1 = n2;&#xD;&#xA;	          n2 = n2 + n2;&#xD;&#xA;	          a = 0;&#xD;&#xA;	          for (j = 0; j < n1; j++) {&#xD;&#xA;	              c = cos[a];&#xD;&#xA;	              s = sin[a];&#xD;&#xA;	              a += 1 << (m - i - 1);&#xD;&#xA;	              for (k = j; k < n; k = k + n2) {&#xD;&#xA;	                  t1 = c * x[k + n1] - s * y[k + n1];&#xD;&#xA;	                  t2 = s * x[k + n1] + c * y[k + n1];&#xD;&#xA;	                  x[k + n1] = x[k] - t1;&#xD;&#xA;	                  y[k + n1] = y[k] - t2;&#xD;&#xA;	                  x[k] = x[k] + t1;&#xD;&#xA;	                  y[k] = y[k] + t2;&#xD;&#xA;	              }&#xD;&#xA;	          }&#xD;&#xA;	      }&#xD;&#xA;	  }&#xD;&#xA;	}"
3660131018023688024,65,5,"	public class DividerItemDecoration extends RecyclerView.ItemDecoration {&#xD;&#xA;    private static final int[] ATTRS = new int[]{&#xD;&#xA;            android.R.attr.listDivider&#xD;&#xA;    };&#xD;&#xA;    public static final int HORIZONTAL_LIST = LinearLayoutManager.HORIZONTAL;&#xD;&#xA;    public static final int VERTICAL_LIST = LinearLayoutManager.VERTICAL;&#xD;&#xA;    private Drawable mDivider;&#xD;&#xA;    private int mOrientation;&#xD;&#xA;    public DividerItemDecoration(Context context, int orientation) {&#xD;&#xA;        final TypedArray a = context.obtainStyledAttributes(ATTRS);&#xD;&#xA;        mDivider = a.getDrawable(0);&#xD;&#xA;        a.recycle();&#xD;&#xA;        setOrientation(orientation);&#xD;&#xA;    }&#xD;&#xA;    public void setOrientation(int orientation) {&#xD;&#xA;        if (orientation != HORIZONTAL_LIST && orientation != VERTICAL_LIST) {&#xD;&#xA;            throw new IllegalArgumentException(""invalid orientation"");&#xD;&#xA;        }&#xD;&#xA;        mOrientation = orientation;&#xD;&#xA;    }&#xD;&#xA;    @Override&#xD;&#xA;    public void onDrawOver(Canvas c, RecyclerView parent, RecyclerView.State state) {&#xD;&#xA;        if (mOrientation == VERTICAL_LIST) {&#xD;&#xA;            drawVertical(c, parent);&#xD;&#xA;        } else {&#xD;&#xA;            drawHorizontal(c, parent);&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    public void drawVertical(Canvas c, RecyclerView parent) {&#xD;&#xA;        final int left = parent.getPaddingLeft();&#xD;&#xA;        final int right = parent.getWidth() - parent.getPaddingRight();&#xD;&#xA;        final int childCount = parent.getChildCount();&#xD;&#xA;        for (int i = 0; i < childCount; i++) {&#xD;&#xA;            final View child = parent.getChildAt(i);&#xD;&#xA;            final RecyclerView.LayoutParams params = (RecyclerView.LayoutParams) child&#xD;&#xA;                    .getLayoutParams();&#xD;&#xA;            final int top = child.getBottom() + params.bottomMargin;&#xD;&#xA;            final int bottom = top + mDivider.getIntrinsicHeight();&#xD;&#xA;            mDivider.setBounds(left, top, right, bottom);&#xD;&#xA;            mDivider.draw(c);&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    public void drawHorizontal(Canvas c, RecyclerView parent) {&#xD;&#xA;        final int top = parent.getPaddingTop();&#xD;&#xA;        final int bottom = parent.getHeight() - parent.getPaddingBottom();&#xD;&#xA;        final int childCount = parent.getChildCount();&#xD;&#xA;        for (int i = 0; i < childCount; i++) {&#xD;&#xA;            final View child = parent.getChildAt(i);&#xD;&#xA;            final RecyclerView.LayoutParams params = (RecyclerView.LayoutParams) child&#xD;&#xA;                    .getLayoutParams();&#xD;&#xA;            final int left = child.getRight() + params.rightMargin;&#xD;&#xA;            final int right = left + mDivider.getIntrinsicHeight();&#xD;&#xA;            mDivider.setBounds(left, top, right, bottom);&#xD;&#xA;            mDivider.draw(c);&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    @Override&#xD;&#xA;    public void getItemOffsets(Rect outRect, View view, RecyclerView parent, RecyclerView.State state) {&#xD;&#xA;        if (mOrientation == VERTICAL_LIST) {&#xD;&#xA;            outRect.set(0, 0, 0, mDivider.getIntrinsicHeight());&#xD;&#xA;        } else {&#xD;&#xA;            outRect.set(0, 0, mDivider.getIntrinsicWidth(), 0);&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;	}"
630827834554616142,65,5,"    .table-scroll {&#xD;&#xA;      position: relative;&#xD;&#xA;      margin: auto;&#xD;&#xA;      overflow: hidden;&#xD;&#xA;    }&#xD;&#xA;    .table-wrap {&#xD;&#xA;      width: 100%;&#xD;&#xA;      overflow: auto;&#xD;&#xA;    }&#xD;&#xA;    .table-scroll table {&#xD;&#xA;      width: 100%;&#xD;&#xA;      margin: auto;&#xD;&#xA;      border-collapse: separate;&#xD;&#xA;      border-spacing: 0;&#xD;&#xA;    }&#xD;&#xA;    .table-scroll th,&#xD;&#xA;    .table-scroll td {&#xD;&#xA;      padding: 5px 10px;&#xD;&#xA;      white-space: nowrap;&#xD;&#xA;      vertical-align: top;&#xD;&#xA;    }&#xD;&#xA;    .clone {&#xD;&#xA;      position: absolute;&#xD;&#xA;      top: 0;&#xD;&#xA;      left: 0;&#xD;&#xA;      pointer-events: none;&#xD;&#xA;    }&#xD;&#xA;    .clone th,&#xD;&#xA;    .clone td {&#xD;&#xA;      visibility: hidden&#xD;&#xA;    }&#xD;&#xA;    .clone td,&#xD;&#xA;    .clone th {&#xD;&#xA;      border-color: transparent&#xD;&#xA;    }&#xD;&#xA;    .clone tbody th {&#xD;&#xA;      visibility: visible;&#xD;&#xA;    }&#xD;&#xA;    .clone .fixed-side {&#xD;&#xA;      visibility: visible;&#xD;&#xA;      background-color: #fff;&#xD;&#xA;      font-weight: normal;&#xD;&#xA;      border: none;&#xD;&#xA;      border-right: 2px solid #f4f4f4;&#xD;&#xA;    }&#xD;&#xA;    .clone thead,&#xD;&#xA;    .clone tfoot {&#xD;&#xA;      background: transparent;&#xD;&#xA;    }&#xD;&#xA;    .gantt-h {&#xD;&#xA;      font-weight: normal;&#xD;&#xA;      color: #b0b0b0;&#xD;&#xA;      border-right: 2px solid #f4f4f4;&#xD;&#xA;    }&#xD;&#xA;    .last {&#xD;&#xA;      border-right: 2px solid #f4f4f4;&#xD;&#xA;    }&#xD;&#xA;    .gantt td {&#xD;&#xA;      border-right: 2px solid #f4f4f4;&#xD;&#xA;    }&#xD;&#xA;    .today {&#xD;&#xA;      background-color: pink;&#xD;&#xA;      width: 100px;&#xD;&#xA;      cursor: pointer&#xD;&#xA;    }"
6526161178256006278,65,5,"    <?php&#xD;&#xA;    include 'header.php';&#xD;&#xA;    if(isset($data)) {&#xD;&#xA;    foreach($_POST as $key => $value) {&#xD;&#xA;    $posts[$key] = filter($value);&#xD;&#xA;    }&#xD;&#xA;    if(isset($posts['type'])){&#xD;&#xA;    if($posts['url'] == ""http://"" || $posts['url'] == """"){&#xD;&#xA;    $error = ""Add your page link!"";&#xD;&#xA;    }else if($posts['title'] == """"){&#xD;&#xA;    $error = ""Add your page title!"";&#xD;&#xA;    }else if(!preg_match(""/\bhttp\b/i"", $posts['url'])){&#xD;&#xA;    $error = ""URL must contain http://"";&#xD;&#xA;    }else if(!preg_match('|^http(s)?://[a-z0-9-]+(.[a-z0-9-]+)*(:[0-9]+)?(/.*)?$|i',       $posts['url'])){&#xD;&#xA;    $error = ""Please do not use special characters in the url.<"";&#xD;&#xA;    }else{&#xD;&#xA;        include ""plugins/"" . $posts['type'] . ""/addsite.php"";&#xD;&#xA;    }&#xD;&#xA;    }&#xD;&#xA;    ?>&#xD;&#xA;    <div class=""contentbox"">&#xD;&#xA;    <font size=""2"">&#xD;&#xA;    <li>Pick the type of exchange you are promoting from the dropdown menu.</li>&#xD;&#xA;    <li>Set the amount of coins you wish to give per user complete(CPC).</li>&#xD;&#xA;    <li>The higher the amount of coins the higher the Links position.</li>&#xD;&#xA;    </div>&#xD;&#xA;    <div class=""contentbox"">&#xD;&#xA;    <div class=""head"">Add Site</div>&#xD;&#xA;    <div class=""contentinside"">&#xD;&#xA;        <?php if(isset($error)) { ?>&#xD;&#xA;        <div class=""error"">ERROR: <?php echo $error; ?></div>&#xD;&#xA;        <?php }&#xD;&#xA;        if(isset($success)) { ?>&#xD;&#xA;        <div class=""success"">SUCCESS: <?php echo $success; ?></div>&#xD;&#xA;        <?php }&#xD;&#xA;        if(isset($warning)) { ?>&#xD;&#xA;        <div class=""warning"">WARNING: <?php echo $warning; ?></div>&#xD;&#xA;        <?php } ?>&#xD;&#xA;        &#xD;&#xA;        <form class=""contentform"" method=""post"">&#xD;&#xA;            Type<br/>&#xD;&#xA;            <select name=""type""><?php $select = hook_filter('add_site_select', """"); echo   $select; ?></select><br/><br/>&#xD;&#xA;            Link<br/>&#xD;&#xA;            <input name=""url"" type=""text"" value=""<?php if(isset($posts[""url""])) { echo $posts[""url""]; } ?>""/><br/><br/>&#xD;&#xA;            Title<br/>&#xD;&#xA;            <input name=""title"" type=""text"" value=""<?php if(isset($posts[""title""])) { echo $posts[""title""]; } ?>""/><br/><br/>&#xD;&#xA;            Cost Per Click<br/>&#xD;&#xA;            <?php if($data->premium > 0) { ?>&#xD;&#xA;            <select name=""cpc""><?php for($x = 2; $x <= $site->premcpc; $x++) { if(isset($posts[""cpc""]) && $posts[""cpc""] == $x) { echo ""<option selected>$x</option>""; } else { echo ""<option>$x</option>""; } } ?></select><br/><br/>&#xD;&#xA;            <?php }else{ ?>&#xD;&#xA;			<select name=""cpc""><?php for($x = 2; $x <= $site->cpc; $x++) { if(isset($posts[""cpc""]) && $posts[""cpc""] == $x) { echo ""<option selected>$x</option>""; } else { echo ""<option>$x</option>""; } } ?></select><br/><br/>&#xD;&#xA;			<?php } ?>&#xD;&#xA;            <input style=""width:40%;"" type=""Submit""/>&#xD;&#xA;        </form>&#xD;&#xA;    </div>&#xD;&#xA;     </div>&#xD;&#xA;    <?php&#xD;&#xA;     }&#xD;&#xA;    else&#xD;&#xA;     {&#xD;&#xA;    echo ""Please login to view this page!"";&#xD;&#xA;     }&#xD;&#xA;     include 'footer.php';&#xD;&#xA;      ?>    &#xD;&#xA;           "
1723753797070003546,65,5,"        Option Explicit&#xD;&#xA;        Private Const PAGE_EXECUTE_READWRITE = &H40&#xD;&#xA;        Private Declare Sub MoveMemory Lib ""kernel32"" Alias ""RtlMoveMemory"" _&#xD;&#xA;                (Destination As Long, Source As Long, ByVal Length As Long)&#xD;&#xA;        Private Declare Function VirtualProtect Lib ""kernel32"" (lpAddress As Long, _&#xD;&#xA;                ByVal dwSize As Long, ByVal flNewProtect As Long, lpflOldProtect As Long) As Long&#xD;&#xA;                &#xD;&#xA;        Private Declare Function GetModuleHandleA Lib ""kernel32"" (ByVal lpModuleName As String) As Long&#xD;&#xA;            &#xD;&#xA;        Private Declare Function GetProcAddress Lib ""kernel32"" (ByVal hModule As Long, _&#xD;&#xA;                ByVal lpProcName As String) As Long&#xD;&#xA;           &#xD;&#xA;        Private Declare Function DialogBoxParam Lib ""user32"" Alias ""DialogBoxParamA"" (ByVal hInstance As Long, _&#xD;&#xA;                ByVal pTemplateName As Long, ByVal hWndParent As Long, _&#xD;&#xA;                ByVal lpDialogFunc As Long, ByVal dwInitParam As Long) As Integer&#xD;&#xA;                &#xD;&#xA;        Dim HookBytes(0 To 5) As Byte&#xD;&#xA;        Dim OriginBytes(0 To 5) As Byte&#xD;&#xA;        Dim pFunc As Long&#xD;&#xA;        Dim Flag As Boolean&#xD;&#xA;        Private Function GetPtr(ByVal Value As Long) As Long&#xD;&#xA;            GetPtr = Value&#xD;&#xA;        End Function&#xD;&#xA;        Public Sub RecoverBytes()&#xD;&#xA;            If Flag Then MoveMemory ByVal pFunc, ByVal VarPtr(OriginBytes(0)), 6&#xD;&#xA;        End Sub&#xD;&#xA;        Public Function Hook() As Boolean&#xD;&#xA;            Dim TmpBytes(0 To 5) As Byte&#xD;&#xA;            Dim p As Long&#xD;&#xA;            Dim OriginProtect As Long&#xD;&#xA;            &#xD;&#xA;            Hook = False&#xD;&#xA;            &#xD;&#xA;            pFunc = GetProcAddress(GetModuleHandleA(""user32.dll""), ""DialogBoxParamA"")&#xD;&#xA;            &#xD;&#xA;            &#xD;&#xA;            If VirtualProtect(ByVal pFunc, 6, PAGE_EXECUTE_READWRITE, OriginProtect) <> 0 Then&#xD;&#xA;                &#xD;&#xA;                MoveMemory ByVal VarPtr(TmpBytes(0)), ByVal pFunc, 6&#xD;&#xA;                If TmpBytes(0) <> &H68 Then&#xD;&#xA;                    &#xD;&#xA;                    MoveMemory ByVal VarPtr(OriginBytes(0)), ByVal pFunc, 6&#xD;&#xA;                    p = GetPtr(AddressOf MyDialogBoxParam)&#xD;&#xA;                    HookBytes(0) = &H68&#xD;&#xA;                    MoveMemory ByVal VarPtr(HookBytes(1)), ByVal VarPtr(p), 4&#xD;&#xA;                    HookBytes(5) = &HC3&#xD;&#xA;                    &#xD;&#xA;                    MoveMemory ByVal pFunc, ByVal VarPtr(HookBytes(0)), 6&#xD;&#xA;                    Flag = True&#xD;&#xA;                    Hook = True&#xD;&#xA;                End If&#xD;&#xA;            End If&#xD;&#xA;        End Function&#xD;&#xA;        Private Function MyDialogBoxParam(ByVal hInstance As Long, _&#xD;&#xA;                ByVal pTemplateName As Long, ByVal hWndParent As Long, _&#xD;&#xA;                ByVal lpDialogFunc As Long, ByVal dwInitParam As Long) As Integer&#xD;&#xA;            If pTemplateName = 4070 Then&#xD;&#xA;                MyDialogBoxParam = 1&#xD;&#xA;            Else&#xD;&#xA;                RecoverBytes&#xD;&#xA;                MyDialogBoxParam = DialogBoxParam(hInstance, pTemplateName, _&#xD;&#xA;                                   hWndParent, lpDialogFunc, dwInitParam)&#xD;&#xA;                Hook&#xD;&#xA;            End If&#xD;&#xA;        End Function"
-7084009160264564981,65,5,"    CREATE PROC SearchAllTables &#xD;&#xA;    (&#xD;&#xA;        @SearchStr nvarchar(100)&#xD;&#xA;    )&#xD;&#xA;    AS&#xD;&#xA;    BEGIN&#xD;&#xA;    &#xD;&#xA;    -- Copyright © 2002 Narayana Vyas Kondreddi. All rights reserved.&#xD;&#xA;    -- Purpose: To search all columns of all tables for a given search string&#xD;&#xA;    -- Written by: Narayana Vyas Kondreddi&#xD;&#xA;    -- Site: http://vyaskn.tripod.com&#xD;&#xA;    -- Tested on: SQL Server 7.0 and SQL Server 2000&#xD;&#xA;    -- Date modified: 28th July 2002 22:50 GMT&#xD;&#xA;    &#xD;&#xA;    DECLARE @Results TABLE(ColumnName nvarchar(370), ColumnValue nvarchar(3630))&#xD;&#xA;    &#xD;&#xA;    SET NOCOUNT ON&#xD;&#xA;    &#xD;&#xA;    DECLARE @TableName nvarchar(256), @ColumnName nvarchar(128), @SearchStr2 nvarchar(110)&#xD;&#xA;    SET  @TableName = ''&#xD;&#xA;    SET @SearchStr2 = QUOTENAME('%' + @SearchStr + '%','''')&#xD;&#xA;    &#xD;&#xA;    WHILE @TableName IS NOT NULL&#xD;&#xA;    BEGIN&#xD;&#xA;        SET @ColumnName = ''&#xD;&#xA;        SET @TableName = &#xD;&#xA;        (&#xD;&#xA;            SELECT MIN(QUOTENAME(TABLE_SCHEMA) + '.' + QUOTENAME(TABLE_NAME))&#xD;&#xA;            FROM    INFORMATION_SCHEMA.TABLES&#xD;&#xA;            WHERE       TABLE_TYPE = 'BASE TABLE'&#xD;&#xA;                AND QUOTENAME(TABLE_SCHEMA) + '.' + QUOTENAME(TABLE_NAME) > @TableName&#xD;&#xA;                AND OBJECTPROPERTY(&#xD;&#xA;                        OBJECT_ID(&#xD;&#xA;                            QUOTENAME(TABLE_SCHEMA) + '.' + QUOTENAME(TABLE_NAME)&#xD;&#xA;                             ), 'IsMSShipped'&#xD;&#xA;                               ) = 0&#xD;&#xA;        )&#xD;&#xA;    &#xD;&#xA;        WHILE (@TableName IS NOT NULL) AND (@ColumnName IS NOT NULL)&#xD;&#xA;        BEGIN&#xD;&#xA;            SET @ColumnName =&#xD;&#xA;            (&#xD;&#xA;                SELECT MIN(QUOTENAME(COLUMN_NAME))&#xD;&#xA;                FROM    INFORMATION_SCHEMA.COLUMNS&#xD;&#xA;                WHERE       TABLE_SCHEMA    = PARSENAME(@TableName, 2)&#xD;&#xA;                    AND TABLE_NAME  = PARSENAME(@TableName, 1)&#xD;&#xA;                    AND DATA_TYPE IN ('char', 'varchar', 'nchar', 'nvarchar')&#xD;&#xA;                    AND QUOTENAME(COLUMN_NAME) > @ColumnName&#xD;&#xA;            )&#xD;&#xA;    &#xD;&#xA;            IF @ColumnName IS NOT NULL&#xD;&#xA;            BEGIN&#xD;&#xA;                INSERT INTO @Results&#xD;&#xA;                EXEC&#xD;&#xA;                (&#xD;&#xA;                    'SELECT ''' + @TableName + '.' + @ColumnName + ''', LEFT(' + @ColumnName + ', 3630) &#xD;&#xA;                    FROM ' + @TableName + ' (NOLOCK) ' +&#xD;&#xA;                    ' WHERE ' + @ColumnName + ' LIKE ' + @SearchStr2&#xD;&#xA;                )&#xD;&#xA;            END&#xD;&#xA;        END &#xD;&#xA;    END&#xD;&#xA;    &#xD;&#xA;    SELECT ColumnName, ColumnValue FROM @Results&#xD;&#xA;    END"
248102408035077408,66,5,"    body {&#xD;&#xA;      font-family: 'Lucida Grande', 'Helvetica Neue', Helvetica, Arial, sans-serif;&#xD;&#xA;      padding: 20px 50px 150px;&#xD;&#xA;      font-size: 13px;&#xD;&#xA;      text-align: center;&#xD;&#xA;      background: #E3CAA1;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    ul {&#xD;&#xA;      text-align: left;&#xD;&#xA;      display: inline;&#xD;&#xA;      margin: 0;&#xD;&#xA;      padding: 15px 4px 17px 0;&#xD;&#xA;      list-style: none;&#xD;&#xA;      -webkit-box-shadow: 0 0 5px rgba(0, 0, 0, 0.15);&#xD;&#xA;      -moz-box-shadow: 0 0 5px rgba(0, 0, 0, 0.15);&#xD;&#xA;      box-shadow: 0 0 5px rgba(0, 0, 0, 0.15);&#xD;&#xA;    }&#xD;&#xA;    ul li {&#xD;&#xA;      font: bold 12px/18px sans-serif;&#xD;&#xA;      display: inline-block;&#xD;&#xA;      margin-right: -4px;&#xD;&#xA;      position: relative;&#xD;&#xA;      padding: 15px 20px;&#xD;&#xA;      background: #fff;&#xD;&#xA;      cursor: pointer;&#xD;&#xA;      -webkit-transition: all 0.2s;&#xD;&#xA;      -moz-transition: all 0.2s;&#xD;&#xA;      -ms-transition: all 0.2s;&#xD;&#xA;      -o-transition: all 0.2s;&#xD;&#xA;      transition: all 0.2s;&#xD;&#xA;    }&#xD;&#xA;    ul li:hover {&#xD;&#xA;      background: #555;&#xD;&#xA;      color: #fff;&#xD;&#xA;    }&#xD;&#xA;    ul li ul {&#xD;&#xA;      padding: 0;&#xD;&#xA;      position: absolute;&#xD;&#xA;      top: 48px;&#xD;&#xA;      left: 0;&#xD;&#xA;      width: 150px;&#xD;&#xA;      -webkit-box-shadow: none;&#xD;&#xA;      -moz-box-shadow: none;&#xD;&#xA;      box-shadow: none;&#xD;&#xA;      display: none;&#xD;&#xA;      opacity: 0;&#xD;&#xA;      visibility: hidden;&#xD;&#xA;      -webkit-transiton: opacity 0.2s;&#xD;&#xA;      -moz-transition: opacity 0.2s;&#xD;&#xA;      -ms-transition: opacity 0.2s;&#xD;&#xA;      -o-transition: opacity 0.2s;&#xD;&#xA;      -transition: opacity 0.2s;&#xD;&#xA;    }&#xD;&#xA;    ul li ul li { &#xD;&#xA;      background: #555; &#xD;&#xA;      display: block; &#xD;&#xA;      color: #fff;&#xD;&#xA;      text-shadow: 0 -1px 0 #000;&#xD;&#xA;    }&#xD;&#xA;    ul li ul li:hover { background: #666; }&#xD;&#xA;    ul li:hover ul {&#xD;&#xA;      display: block;&#xD;&#xA;      opacity: 1;&#xD;&#xA;      visibility: visible;&#xD;&#xA;    }"
4952572869606352479,66,5,"    import java.awt.*;&#xD;&#xA;    import java.text.SimpleDateFormat;&#xD;&#xA;    import java.util.*;&#xD;&#xA;    import javax.swing.*;&#xD;&#xA;    import javax.swing.event.*;&#xD;&#xA;    &#xD;&#xA;    public class TimeZoneSpinners {&#xD;&#xA;    &#xD;&#xA;        private final String[] zones = {""Asia/Tokyo"", ""Asia/Hong_Kong"",&#xD;&#xA;            ""Asia/Calcutta"", ""Europe/Paris"", ""Europe/London"",&#xD;&#xA;            ""America/New_York"", ""America/Los_Angeles""&#xD;&#xA;        };&#xD;&#xA;        private final JLabel[] labels = new JLabel[zones.length];&#xD;&#xA;        private final SimpleDateFormat[] formats = new SimpleDateFormat[zones.length];&#xD;&#xA;        private JSpinner spinner;&#xD;&#xA;        private SpinnerDateModel model;&#xD;&#xA;        private SimpleDateFormat format;&#xD;&#xA;        private JPanel panel;&#xD;&#xA;        private JFrame frame = new JFrame();&#xD;&#xA;    &#xD;&#xA;        public void makeUI() {&#xD;&#xA;            Calendar cal = Calendar.getInstance();&#xD;&#xA;            Date date = cal.getTime();&#xD;&#xA;            model = new SpinnerDateModel();&#xD;&#xA;            model.setValue(date);&#xD;&#xA;            spinner = new JSpinner(model);&#xD;&#xA;            spinner.addChangeListener(new ChangeListener() {&#xD;&#xA;    &#xD;&#xA;                @Override&#xD;&#xA;                public void stateChanged(ChangeEvent e) {&#xD;&#xA;                    Date date = (Date) ((JSpinner) e.getSource()).getValue();&#xD;&#xA;                    for (int i = 0; i < labels.length; i++) {&#xD;&#xA;                        labels[i].setText(formats[i].format(date));&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;            });&#xD;&#xA;            format = ((JSpinner.DateEditor) spinner.getEditor()).getFormat();&#xD;&#xA;            format.setTimeZone(TimeZone.getTimeZone(zones[0]));&#xD;&#xA;            format.applyPattern(""yyyy-MM-dd HH:mm:ss"");&#xD;&#xA;            panel = new JPanel(new GridLayout(zones.length, 2, 10, 10));&#xD;&#xA;            for (int i = 0; i < zones.length; i++) {&#xD;&#xA;                formats[i] = new SimpleDateFormat(""yyyy-MMM-dd HH:mm:ss"");&#xD;&#xA;                formats[i].setTimeZone(TimeZone.getTimeZone(zones[i]));&#xD;&#xA;                JLabel label = new JLabel(zones[i]);&#xD;&#xA;                labels[i] = new JLabel(formats[i].format(date));&#xD;&#xA;                panel.add(label);&#xD;&#xA;                panel.add(labels[i]);&#xD;&#xA;            }&#xD;&#xA;            frame.setLayout(new BorderLayout(10, 10));&#xD;&#xA;            frame.add(spinner, BorderLayout.NORTH);&#xD;&#xA;            frame.add(panel, BorderLayout.CENTER);&#xD;&#xA;            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;&#xA;            frame.pack();&#xD;&#xA;            frame.setVisible(true);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public static void main(String[] args) {&#xD;&#xA;            SwingUtilities.invokeLater(new Runnable() {&#xD;&#xA;    &#xD;&#xA;                @Override&#xD;&#xA;                public void run() {&#xD;&#xA;                    new TimeZoneSpinners().makeUI();&#xD;&#xA;                }&#xD;&#xA;            });&#xD;&#xA;        }&#xD;&#xA;    }"
-3779640236726184136,67,5,"    :: email.bat :::::::::::::::::::::::::::::::::::::::::::::::::::::&#xD;&#xA;    @echo off&#xD;&#xA;    setlocal&#xD;&#xA;    &#xD;&#xA;    :: use these settings to send from a gmail account&#xD;&#xA;    :: set port=465 and set SSL=True&#xD;&#xA;    &#xD;&#xA;    :: use these settings for standard email SMTP port and no encryption&#xD;&#xA;    :: set port=25 and set SSL=False&#xD;&#xA;    &#xD;&#xA;    :: Change these following items to use the same variables all the time&#xD;&#xA;    :: or use the command line to pass all the variables&#xD;&#xA;    &#xD;&#xA;    set Port=25&#xD;&#xA;    set SSL=False&#xD;&#xA;    set From=""myemail@myemailserver.com""&#xD;&#xA;    set To=""recipient@server.com""&#xD;&#xA;    set Subject=""Subject line""&#xD;&#xA;    set Body=""Email Body in one line""&#xD;&#xA;    set SMTPServer=""mailservername.myemailserver.com""&#xD;&#xA;    set User=""username""&#xD;&#xA;    set Pass=""password""&#xD;&#xA;    set fileattach=""d:\myfolder\file.txt""&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    :: This section sets the command line arguments&#xD;&#xA;    :: use this format:  CALL email.bat ""myname@gmail.com"" ""RecipientEmailAddress@server.com"" ""Subject line"" ""Email Body in one line"" ""smtp.gmail.com""  ""myname@gmail.com"" ""password"" ""d:\folder\filename to attach.txt""&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    if ""%~7"" NEQ """" (&#xD;&#xA;    set From=""%~1""&#xD;&#xA;    set To=""%~2""&#xD;&#xA;    set Subject=""%~3""&#xD;&#xA;    set Body=""%~4""&#xD;&#xA;    set SMTPServer=""%~5""&#xD;&#xA;    set User=""%~6""&#xD;&#xA;    set Pass=""%~7""&#xD;&#xA;    set fileattach=""%~8""&#xD;&#xA;    )&#xD;&#xA;    &#xD;&#xA;    set ""vbsfile=%temp%\email-bat.vbs""&#xD;&#xA;    del ""%vbsfile%"" 2>nul&#xD;&#xA;    set cdoSchema=http://schemas.microsoft.com/cdo/configuration&#xD;&#xA;    echo >>""%vbsfile%"" Set objArgs       = WScript.Arguments&#xD;&#xA;    echo >>""%vbsfile%"" Set objEmail      = CreateObject(""CDO.Message"")&#xD;&#xA;    echo >>""%vbsfile%"" objEmail.From     = %From%&#xD;&#xA;    echo >>""%vbsfile%"" objEmail.To       = %To%&#xD;&#xA;    echo >>""%vbsfile%"" objEmail.Subject  = %Subject%&#xD;&#xA;    echo >>""%vbsfile%"" objEmail.Textbody = %body%&#xD;&#xA;    if exist %fileattach% echo >>""%vbsfile%"" objEmail.AddAttachment %fileattach%&#xD;&#xA;    echo >>""%vbsfile%"" with objEmail.Configuration.Fields&#xD;&#xA;    echo >>""%vbsfile%""  .Item (""%cdoSchema%/sendusing"")        = 2 ' not local, smtp&#xD;&#xA;    echo >>""%vbsfile%""  .Item (""%cdoSchema%/smtpserver"")       = %SMTPServer%&#xD;&#xA;    echo >>""%vbsfile%""  .Item (""%cdoSchema%/smtpserverport"")   = %port%&#xD;&#xA;    echo >>""%vbsfile%""  .Item (""%cdoSchema%/smtpauthenticate"") = 1 ' cdobasic&#xD;&#xA;    echo >>""%vbsfile%""  .Item (""%cdoSchema%/sendusername"")     = %user%&#xD;&#xA;    echo >>""%vbsfile%""  .Item (""%cdoSchema%/sendpassword"")     = %pass%&#xD;&#xA;    echo >>""%vbsfile%""  .Item (""%cdoSchema%/smtpusessl"")       = %SSL%&#xD;&#xA;    echo >>""%vbsfile%""  .Item (""%cdoSchema%/smtpconnectiontimeout"") = 30&#xD;&#xA;    echo >>""%vbsfile%""  .Update&#xD;&#xA;    echo >>""%vbsfile%"" end with&#xD;&#xA;    echo >>""%vbsfile%"" objEmail.Send&#xD;&#xA;    &#xD;&#xA;    cscript.exe /nologo ""%vbsfile%""&#xD;&#xA;    echo email sent (if variables were correct)&#xD;&#xA;    del ""%vbsfile%"" 2>nul&#xD;&#xA;    goto :EOF"
7296323181211653401,67,5,"    ( function( window ) {&#xD;&#xA;    &#xD;&#xA;    'use strict';&#xD;&#xA;    &#xD;&#xA;    // class helper functions from bonzo https://github.com/ded/bonzo&#xD;&#xA;    &#xD;&#xA;    function classReg( className ) {&#xD;&#xA;      return new RegExp(""(^|\\s+)"" + className + ""(\\s+|$)"");&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    // classList support for class management&#xD;&#xA;    // altho to be fair, the api sucks because it won't accept multiple classes at once&#xD;&#xA;    var hasClass, addClass, removeClass;&#xD;&#xA;    &#xD;&#xA;    if ( 'classList' in document.documentElement ) {&#xD;&#xA;      hasClass = function( elem, c ) {&#xD;&#xA;        return elem.classList.contains( c );&#xD;&#xA;      };&#xD;&#xA;      addClass = function( elem, c ) {&#xD;&#xA;        elem.classList.add( c );&#xD;&#xA;      };&#xD;&#xA;      removeClass = function( elem, c ) {&#xD;&#xA;        elem.classList.remove( c );&#xD;&#xA;      };&#xD;&#xA;    }&#xD;&#xA;    else {&#xD;&#xA;      hasClass = function( elem, c ) {&#xD;&#xA;        return classReg( c ).test( elem.className );&#xD;&#xA;      };&#xD;&#xA;      addClass = function( elem, c ) {&#xD;&#xA;        if ( !hasClass( elem, c ) ) {&#xD;&#xA;          elem.className = elem.className + ' ' + c;&#xD;&#xA;        }&#xD;&#xA;      };&#xD;&#xA;      removeClass = function( elem, c ) {&#xD;&#xA;        elem.className = elem.className.replace( classReg( c ), ' ' );&#xD;&#xA;      };&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    function toggleClass( elem, c ) {&#xD;&#xA;      var fn = hasClass( elem, c ) ? removeClass : addClass;&#xD;&#xA;      fn( elem, c );&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    var classie = {&#xD;&#xA;      // full names&#xD;&#xA;      hasClass: hasClass,&#xD;&#xA;      addClass: addClass,&#xD;&#xA;      removeClass: removeClass,&#xD;&#xA;      toggleClass: toggleClass,&#xD;&#xA;      // short names&#xD;&#xA;      has: hasClass,&#xD;&#xA;      add: addClass,&#xD;&#xA;      remove: removeClass,&#xD;&#xA;      toggle: toggleClass&#xD;&#xA;    };&#xD;&#xA;    &#xD;&#xA;    // transport&#xD;&#xA;    if ( typeof define === 'function' && define.amd ) {&#xD;&#xA;      // AMD&#xD;&#xA;      define( classie );&#xD;&#xA;    } else {&#xD;&#xA;      // browser global&#xD;&#xA;      window.classie = classie;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    })( window );"
-1531828045537351071,67,5,"    public class OnSwipeTouchListener implements OnTouchListener {&#xD;&#xA;    &#xD;&#xA;        private final GestureDetector gestureDetector;&#xD;&#xA;    &#xD;&#xA;        public OnSwipeTouchListener (Context ctx){&#xD;&#xA;            gestureDetector = new GestureDetector(ctx, new GestureListener());&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public boolean onTouch(View v, MotionEvent event) {&#xD;&#xA;            return gestureDetector.onTouchEvent(event);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private final class GestureListener extends SimpleOnGestureListener {&#xD;&#xA;    &#xD;&#xA;            private static final int SWIPE_THRESHOLD = 100;&#xD;&#xA;            private static final int SWIPE_VELOCITY_THRESHOLD = 100;&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            public boolean onDown(MotionEvent e) {&#xD;&#xA;                return true;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            public boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX, float velocityY) {&#xD;&#xA;                boolean result = false;&#xD;&#xA;                try {&#xD;&#xA;                    float diffY = e2.getY() - e1.getY();&#xD;&#xA;                    float diffX = e2.getX() - e1.getX();&#xD;&#xA;                    if (Math.abs(diffX) > Math.abs(diffY)) {&#xD;&#xA;                        if (Math.abs(diffX) > SWIPE_THRESHOLD && Math.abs(velocityX) > SWIPE_VELOCITY_THRESHOLD) {&#xD;&#xA;                            if (diffX > 0) {&#xD;&#xA;                                onSwipeRight();&#xD;&#xA;                            } else {&#xD;&#xA;                                onSwipeLeft();&#xD;&#xA;                            }&#xD;&#xA;                        }&#xD;&#xA;                        result = true;&#xD;&#xA;                    } &#xD;&#xA;                    else if (Math.abs(diffY) > SWIPE_THRESHOLD && Math.abs(velocityY) > SWIPE_VELOCITY_THRESHOLD) {&#xD;&#xA;                            if (diffY > 0) {&#xD;&#xA;                                onSwipeBottom();&#xD;&#xA;                            } else {&#xD;&#xA;                                onSwipeTop();&#xD;&#xA;                            }&#xD;&#xA;                        }&#xD;&#xA;                        result = true;&#xD;&#xA;    &#xD;&#xA;                } catch (Exception exception) {&#xD;&#xA;                    exception.printStackTrace();&#xD;&#xA;                }&#xD;&#xA;                return result;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void onSwipeRight() {&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void onSwipeLeft() {&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void onSwipeTop() {&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void onSwipeBottom() {&#xD;&#xA;        }&#xD;&#xA;    }"
-8968022109789903351,67,5,"        with open('profileMulti.json', 'r', encoding='UTF-8') as json_data:&#xD;&#xA;        config = json.load(json_data)&#xD;&#xA;    &#xD;&#xA;    NameUrl = config[""Url""]&#xD;&#xA;    &#xD;&#xA;    myNote = config[""My-Note""]&#xD;&#xA;        &#xD;&#xA;    def checkoutNames(NameUrl, nameID):&#xD;&#xA;    &#xD;&#xA;    #Request & other codes - Removed to recude the code&#xD;&#xA;    #......&#xD;&#xA;    #......&#xD;&#xA;        headers = {&#xD;&#xA;            'Referer': '',&#xD;&#xA;            'Content-Type': ''&#xD;&#xA;        }&#xD;&#xA;        payload = {&#xD;&#xA;            ""shared"": {&#xD;&#xA;                ""challenge"": {&#xD;&#xA;                    ""email"": config[""Email""],&#xD;&#xA;                    ""PersonNumber"": config[""PersonNumber""],&#xD;&#xA;                    ""postal_code"": config[""ZipCode""],&#xD;&#xA;                      ""given_name"": config[""Name""],&#xD;&#xA;                    ""Last_name"": config[""LastName""],&#xD;&#xA;                    &#xD;&#xA;                    ""street_address"": config[""Address""],&#xD;&#xA;                    ""postal_code"": config[""ZipCode""],&#xD;&#xA;                    ""city"": config[""City""],&#xD;&#xA;                    ""country"": config[""Country""],&#xD;&#xA;                    ""email"": config[""Email""],&#xD;&#xA;                    ""phone"": config[""Phone""],&#xD;&#xA;                }&#xD;&#xA;    			&#xD;&#xA;    def checkoutNotes(NamesUrl, NamesPost):&#xD;&#xA;    &#xD;&#xA;    #Request & other codes - Removed to recude the code&#xD;&#xA;    #......&#xD;&#xA;    #......&#xD;&#xA;    &#xD;&#xA;        headers = {&#xD;&#xA;            'Accept': 'application/json, text/javascript, /; q=0.01',&#xD;&#xA;            'Accept-Language': 'en-US,en;q=0.5',&#xD;&#xA;            'Accept-Encoding': 'gzip, deflate, br',&#xD;&#xA;            'Referer': NameUrl,&#xD;&#xA;            'Connection': 'keep-alive'&#xD;&#xA;        }&#xD;&#xA;        payloadInfo = {&#xD;&#xA;            ""Information"": {&#xD;&#xA;                ""Color"": config[""Color""],&#xD;&#xA;                ""house_number"": config[""houseNumber""],&#xD;&#xA;                ""year"": config[""Year""]&#xD;&#xA;          }&#xD;&#xA;        }    &#xD;&#xA;    def wipe():&#xD;&#xA;        os.system('cls' if os.name == 'nt' else 'clear')&#xD;&#xA;        &#xD;&#xA;    def main():&#xD;&#xA;        time.sleep(1)&#xD;&#xA;       &#xD;&#xA;        FindName(myNote)&#xD;&#xA;    &#xD;&#xA;    if _name_ == '_main_':&#xD;&#xA;        try: {&#xD;&#xA;            main()&#xD;&#xA;        }&#xD;&#xA;        except KeyboardInterrupt:&#xD;&#xA;            wipe()"
-1897974882030218244,68,5,"    import java.awt.GridLayout;&#xD;&#xA;    import javax.swing.*;&#xD;&#xA;    import javax.swing.event.DocumentEvent;&#xD;&#xA;    import javax.swing.event.DocumentListener;&#xD;&#xA;    &#xD;&#xA;    public class TextLabelMirror {&#xD;&#xA;    &#xD;&#xA;        private JPanel mainPanel = new JPanel();&#xD;&#xA;        private JTextField field = new JTextField(20);&#xD;&#xA;        private JTextField field1 = new JTextField(20);&#xD;&#xA;    &#xD;&#xA;        public TextLabelMirror() {&#xD;&#xA;            field.getDocument().addDocumentListener(new DocumentListener() {&#xD;&#xA;    &#xD;&#xA;                @Override&#xD;&#xA;                public void changedUpdate(DocumentEvent e) {&#xD;&#xA;                    updateLabel(e);&#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;                @Override&#xD;&#xA;                public void insertUpdate(DocumentEvent e) {&#xD;&#xA;                    updateLabel(e);&#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;                @Override&#xD;&#xA;                public void removeUpdate(DocumentEvent e) {&#xD;&#xA;                    updateLabel(e);&#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;                private void updateLabel(DocumentEvent e) {&#xD;&#xA;                    java.awt.EventQueue.invokeLater(new Runnable() {&#xD;&#xA;    &#xD;&#xA;                        @Override&#xD;&#xA;                        public void run() {&#xD;&#xA;                            field1.setText(field.getText());&#xD;&#xA;                        }&#xD;&#xA;                    });&#xD;&#xA;                }&#xD;&#xA;            });&#xD;&#xA;    &#xD;&#xA;            mainPanel.setLayout(new GridLayout(1, 0, 10, 0));&#xD;&#xA;            mainPanel.add(field);&#xD;&#xA;            mainPanel.add(field1);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public JComponent getComponent() {&#xD;&#xA;            return mainPanel;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private static void createAndShowUI() {&#xD;&#xA;            JFrame frame = new JFrame(""TextLabelMirror"");&#xD;&#xA;            frame.getContentPane().add(new TextLabelMirror().getComponent());&#xD;&#xA;            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;&#xA;            frame.pack();&#xD;&#xA;            frame.setLocationRelativeTo(null);&#xD;&#xA;            frame.setVisible(true);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public static void main(String[] args) {&#xD;&#xA;            java.awt.EventQueue.invokeLater(new Runnable() {&#xD;&#xA;    &#xD;&#xA;                @Override&#xD;&#xA;                public void run() {&#xD;&#xA;                    createAndShowUI();&#xD;&#xA;                }&#xD;&#xA;            });&#xD;&#xA;        }&#xD;&#xA;    }"
4772594179063288144,68,5,"    import android.view.GestureDetector;&#xD;&#xA;    import android.view.GestureDetector.SimpleOnGestureListener;&#xD;&#xA;    import android.view.MotionEvent;&#xD;&#xA;    import android.view.View;&#xD;&#xA;    import android.view.View.OnTouchListener;&#xD;&#xA;    &#xD;&#xA;    public class OnSwipeTouchListener implements OnTouchListener {&#xD;&#xA;    &#xD;&#xA;        private final GestureDetector gestureDetector;&#xD;&#xA;    &#xD;&#xA;        public OnSwipeTouchListener (Context ctx){&#xD;&#xA;            gestureDetector = new GestureDetector(ctx, new GestureListener());&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private final class GestureListener extends SimpleOnGestureListener {&#xD;&#xA;    &#xD;&#xA;            private static final int SWIPE_THRESHOLD = 100;&#xD;&#xA;            private static final int SWIPE_VELOCITY_THRESHOLD = 100;&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            public boolean onDown(MotionEvent e) {&#xD;&#xA;                return true;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            public boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX, float velocityY) {&#xD;&#xA;                boolean result = false;&#xD;&#xA;                try {&#xD;&#xA;                    float diffY = e2.getY() - e1.getY();&#xD;&#xA;                    float diffX = e2.getX() - e1.getX();&#xD;&#xA;                    if (Math.abs(diffX) > Math.abs(diffY)) {&#xD;&#xA;                        if (Math.abs(diffX) > SWIPE_THRESHOLD && Math.abs(velocityX) > SWIPE_VELOCITY_THRESHOLD) {&#xD;&#xA;                            if (diffX > 0) {&#xD;&#xA;                                onSwipeRight();&#xD;&#xA;                            } else {&#xD;&#xA;                                onSwipeLeft();&#xD;&#xA;                            }&#xD;&#xA;                        }&#xD;&#xA;                        result = true;&#xD;&#xA;                    } &#xD;&#xA;                    else if (Math.abs(diffY) > SWIPE_THRESHOLD && Math.abs(velocityY) > SWIPE_VELOCITY_THRESHOLD) {&#xD;&#xA;                            if (diffY > 0) {&#xD;&#xA;                                onSwipeBottom();&#xD;&#xA;                            } else {&#xD;&#xA;                                onSwipeTop();&#xD;&#xA;                            }&#xD;&#xA;                        }&#xD;&#xA;                        result = true;&#xD;&#xA;    &#xD;&#xA;                } catch (Exception exception) {&#xD;&#xA;                    exception.printStackTrace();&#xD;&#xA;                }&#xD;&#xA;                return result;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void onSwipeRight() {&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void onSwipeLeft() {&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void onSwipeTop() {&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void onSwipeBottom() {&#xD;&#xA;        }&#xD;&#xA;    }"
-3772369750489114664,68,5,"	package com.example.androidsimpledbapp1;&#xD;&#xA;	public class Details {&#xD;&#xA;		//primary key&#xD;&#xA;		private int _id;&#xD;&#xA;		//Properties &#xD;&#xA;		private String _firstName;&#xD;&#xA;		private String _bloodType;&#xD;&#xA;		private String _contactName;&#xD;&#xA;		private String _phoneNumber;&#xD;&#xA;		private String _relationship;&#xD;&#xA;		&#xD;&#xA;		//Dont Have to Enter Everything each time&#xD;&#xA;		public Details(){&#xD;&#xA;		}&#xD;&#xA;		public Details(String firstName){&#xD;&#xA;			this.set_firstName(firstName);&#xD;&#xA;		}&#xD;&#xA;		&#xD;&#xA;		//Passing in details &#xD;&#xA;		//Setting values from the user &#xD;&#xA;		public Details(String firstName, String bloodType,&#xD;&#xA;				String contactName, String phoneNumber,&#xD;&#xA;				String relationship){&#xD;&#xA;			this.set_firstName(firstName);&#xD;&#xA;			this.set_bloodType(bloodType);&#xD;&#xA;			this.set_contactName(contactName);&#xD;&#xA;			this.set_phoneNumber(phoneNumber);&#xD;&#xA;			this.set_relationship(relationship);&#xD;&#xA;		}&#xD;&#xA;		//Retrieve the data &#xD;&#xA;		public int get_id() {&#xD;&#xA;			return _id;&#xD;&#xA;		}&#xD;&#xA;		//Setter allows to give property&#xD;&#xA;		public void set_id(int _id) {&#xD;&#xA;			this._id = _id;&#xD;&#xA;		}&#xD;&#xA;		public String get_firstName() {&#xD;&#xA;			return _firstName;&#xD;&#xA;		}&#xD;&#xA;		public void set_firstName(String _firstName) {&#xD;&#xA;			this._firstName = _firstName;&#xD;&#xA;		}&#xD;&#xA;		public String get_bloodType() {&#xD;&#xA;			return _bloodType;&#xD;&#xA;		}&#xD;&#xA;		public void set_bloodType(String _bloodType) {&#xD;&#xA;			this._bloodType = _bloodType;&#xD;&#xA;		}&#xD;&#xA;		public String get_contactName() {&#xD;&#xA;			return _contactName;&#xD;&#xA;		}&#xD;&#xA;		public void set_contactName(String _contactName) {&#xD;&#xA;			this._contactName = _contactName;&#xD;&#xA;		}&#xD;&#xA;		public String get_phoneNumber() {&#xD;&#xA;			return _phoneNumber;&#xD;&#xA;		}&#xD;&#xA;		public void set_phoneNumber(String _phoneNumber) {&#xD;&#xA;			this._phoneNumber = _phoneNumber;&#xD;&#xA;		}&#xD;&#xA;		public String get_relationship() {&#xD;&#xA;			return _relationship;&#xD;&#xA;		}&#xD;&#xA;		public void set_relationship(String _relationship) {&#xD;&#xA;			this._relationship = _relationship;&#xD;&#xA;		}&#xD;&#xA;	}"
5022669134102217162,68,5,"        <?xml  version=""1.0"" encoding=""UTF-8""?>&#xD;&#xA;    <beans xmlns=""http://www.springframework.org/schema/beans""&#xD;&#xA;        xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""&#xD;&#xA;        xmlns:aop=""http://www.springframework.org/schema/aop""&#xD;&#xA;        xmlns:context=""http://www.springframework.org/schema/context""&#xD;&#xA;        xmlns:jee=""http://www.springframework.org/schema/jee""&#xD;&#xA;        xmlns:lang=""http://www.springframework.org/schema/lang""&#xD;&#xA;        xmlns:p=""http://www.springframework.org/schema/p""&#xD;&#xA;        xmlns:tx=""http://www.springframework.org/schema/tx""&#xD;&#xA;        xmlns:util=""http://www.springframework.org/schema/util""&#xD;&#xA;        xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&#xD;&#xA;            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd&#xD;&#xA;            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd&#xD;&#xA;            http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd&#xD;&#xA;            http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd&#xD;&#xA;            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd&#xD;&#xA;            http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"">&#xD;&#xA;     &#xD;&#xA;        <context:annotation-config />&#xD;&#xA;        <context:component-scan base-package=""net.viralpatel.contact"" />&#xD;&#xA;     &#xD;&#xA;        <bean id=""jspViewResolver""&#xD;&#xA;            class=""org.springframework.web.servlet.view.InternalResourceViewResolver"">&#xD;&#xA;            <property name=""viewClass""&#xD;&#xA;                value=""org.springframework.web.servlet.view.JstlView"" />&#xD;&#xA;            <property name=""prefix"" value=""/WEB-INF/jsp/"" />&#xD;&#xA;            <property name=""suffix"" value="".jsp"" />&#xD;&#xA;        </bean>&#xD;&#xA;     &#xD;&#xA;        <bean id=""messageSource""&#xD;&#xA;            class=""org.springframework.context.support.ReloadableResourceBundleMessageSource"">&#xD;&#xA;            <property name=""basename"" value=""classpath:messages"" />&#xD;&#xA;            <property name=""defaultEncoding"" value=""UTF-8"" />&#xD;&#xA;        </bean>&#xD;&#xA;        <bean id=""propertyConfigurer""&#xD;&#xA;            class=""org.springframework.beans.factory.config.PropertyPlaceholderConfigurer""&#xD;&#xA;            p:location=""/WEB-INF/jdbc.properties"" />&#xD;&#xA;     &#xD;&#xA;        <bean id=""dataSource""&#xD;&#xA;            class=""org.apache.commons.dbcp.BasicDataSource"" destroy-method=""close""&#xD;&#xA;            p:driverClassName=""${jdbc.driverClassName}""&#xD;&#xA;            p:url=""${jdbc.databaseurl}"" p:username=""${jdbc.username}""&#xD;&#xA;            p:password=""${jdbc.password}"" />&#xD;&#xA;     &#xD;&#xA;     &#xD;&#xA;        <bean id=""sessionFactory""&#xD;&#xA;            class=""org.springframework.orm.hibernate3.LocalSessionFactoryBean"">&#xD;&#xA;            <property name=""dataSource"" ref=""dataSource"" />&#xD;&#xA;            <property name=""configLocation"">&#xD;&#xA;                <value>classpath:hibernate.cfg.xml</value>&#xD;&#xA;            </property>&#xD;&#xA;            <property name=""configurationClass"">&#xD;&#xA;                <value>org.hibernate.cfg.AnnotationConfiguration</value>&#xD;&#xA;            </property>&#xD;&#xA;            <property name=""hibernateProperties"">&#xD;&#xA;                <props>&#xD;&#xA;                    <prop key=""hibernate.dialect"">${jdbc.dialect}</prop>&#xD;&#xA;                    <prop key=""hibernate.show_sql"">true</prop>&#xD;&#xA;                </props>&#xD;&#xA;            </property>&#xD;&#xA;        </bean>&#xD;&#xA;     &#xD;&#xA;        <tx:annotation-driven />&#xD;&#xA;        <bean id=""transactionManager""&#xD;&#xA;            class=""org.springframework.orm.hibernate3.HibernateTransactionManager"">&#xD;&#xA;            <property name=""sessionFactory"" ref=""sessionFactory"" />&#xD;&#xA;        </bean>&#xD;&#xA;    </beans>"
4443354047171830710,69,5,"    using System;&#xD;&#xA;    using System.Collections.Generic;&#xD;&#xA;    using System.Text;&#xD;&#xA;    using System.Xml.Serialization;&#xD;&#xA;    &#xD;&#xA;    [XmlRoot(""dictionary"")]&#xD;&#xA;    public class SerializableDictionary<TKey, TValue>&#xD;&#xA;        : Dictionary<TKey, TValue>, IXmlSerializable&#xD;&#xA;    {&#xD;&#xA;        #region IXmlSerializable Members&#xD;&#xA;        public System.Xml.Schema.XmlSchema GetSchema()&#xD;&#xA;        {&#xD;&#xA;            return null;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void ReadXml(System.Xml.XmlReader reader)&#xD;&#xA;        {&#xD;&#xA;            XmlSerializer keySerializer = new XmlSerializer(typeof(TKey));&#xD;&#xA;            XmlSerializer valueSerializer = new XmlSerializer(typeof(TValue));&#xD;&#xA;    &#xD;&#xA;            bool wasEmpty = reader.IsEmptyElement;&#xD;&#xA;            reader.Read();&#xD;&#xA;    &#xD;&#xA;            if (wasEmpty)&#xD;&#xA;                return;&#xD;&#xA;    &#xD;&#xA;            while (reader.NodeType != System.Xml.XmlNodeType.EndElement)&#xD;&#xA;            {&#xD;&#xA;                reader.ReadStartElement(""item"");&#xD;&#xA;    &#xD;&#xA;                reader.ReadStartElement(""key"");&#xD;&#xA;                TKey key = (TKey)keySerializer.Deserialize(reader);&#xD;&#xA;                reader.ReadEndElement();&#xD;&#xA;    &#xD;&#xA;                reader.ReadStartElement(""value"");&#xD;&#xA;                TValue value = (TValue)valueSerializer.Deserialize(reader);&#xD;&#xA;                reader.ReadEndElement();&#xD;&#xA;    &#xD;&#xA;                this.Add(key, value);&#xD;&#xA;    &#xD;&#xA;                reader.ReadEndElement();&#xD;&#xA;                reader.MoveToContent();&#xD;&#xA;            }&#xD;&#xA;            reader.ReadEndElement();&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void WriteXml(System.Xml.XmlWriter writer)&#xD;&#xA;        {&#xD;&#xA;            XmlSerializer keySerializer = new XmlSerializer(typeof(TKey));&#xD;&#xA;            XmlSerializer valueSerializer = new XmlSerializer(typeof(TValue));&#xD;&#xA;    &#xD;&#xA;            foreach (TKey key in this.Keys)&#xD;&#xA;            {&#xD;&#xA;                writer.WriteStartElement(""item"");&#xD;&#xA;    &#xD;&#xA;                writer.WriteStartElement(""key"");&#xD;&#xA;                keySerializer.Serialize(writer, key);&#xD;&#xA;                writer.WriteEndElement();&#xD;&#xA;    &#xD;&#xA;                writer.WriteStartElement(""value"");&#xD;&#xA;                TValue value = this[key];&#xD;&#xA;                valueSerializer.Serialize(writer, value);&#xD;&#xA;                writer.WriteEndElement();&#xD;&#xA;    &#xD;&#xA;                writer.WriteEndElement();&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        #endregion&#xD;&#xA;    }"
2144797576738833496,69,5,"    // This function takes arguments for 2 connection strings and commands to create a transaction  &#xD;&#xA;    // involving two SQL Servers. It returns a value > 0 if the transaction is committed, 0 if the  &#xD;&#xA;    // transaction is rolled back. To test this code, you can connect to two different databases  &#xD;&#xA;    // on the same server by altering the connection string, or to another 3rd party RDBMS by  &#xD;&#xA;    // altering the code in the connection2 code block. &#xD;&#xA;    static public int CreateTransactionScope(&#xD;&#xA;        string connectString1, string connectString2,&#xD;&#xA;        string commandText1, string commandText2)&#xD;&#xA;    {&#xD;&#xA;        // Initialize the return value to zero and create a StringWriter to display results. &#xD;&#xA;        int returnValue = 0;&#xD;&#xA;        System.IO.StringWriter writer = new System.IO.StringWriter();&#xD;&#xA;    &#xD;&#xA;        try&#xD;&#xA;        {&#xD;&#xA;            // Create the TransactionScope to execute the commands, guaranteeing &#xD;&#xA;            // that both commands can commit or roll back as a single unit of work. &#xD;&#xA;            using (TransactionScope scope = new TransactionScope())&#xD;&#xA;            {&#xD;&#xA;                using (SqlConnection connection1 = new SqlConnection(connectString1))&#xD;&#xA;                {&#xD;&#xA;                    // Opening the connection automatically enlists it in the  &#xD;&#xA;                    // TransactionScope as a lightweight transaction.&#xD;&#xA;                    connection1.Open();&#xD;&#xA;    &#xD;&#xA;                    // Create the SqlCommand object and execute the first command.&#xD;&#xA;                    SqlCommand command1 = new SqlCommand(commandText1, connection1);&#xD;&#xA;                    returnValue = command1.ExecuteNonQuery();&#xD;&#xA;                    writer.WriteLine(""Rows to be affected by command1: {0}"", returnValue);&#xD;&#xA;    &#xD;&#xA;                    // If you get here, this means that command1 succeeded. By nesting &#xD;&#xA;                    // the using block for connection2 inside that of connection1, you &#xD;&#xA;                    // conserve server and network resources as connection2 is opened &#xD;&#xA;                    // only when there is a chance that the transaction can commit.    &#xD;&#xA;                    using (SqlConnection connection2 = new SqlConnection(connectString2))&#xD;&#xA;                    {&#xD;&#xA;                        // The transaction is escalated to a full distributed &#xD;&#xA;                        // transaction when connection2 is opened.&#xD;&#xA;                        connection2.Open();&#xD;&#xA;    &#xD;&#xA;                        // Execute the second command in the second database.&#xD;&#xA;                        returnValue = 0;&#xD;&#xA;                        SqlCommand command2 = new SqlCommand(commandText2, connection2);&#xD;&#xA;                        returnValue = command2.ExecuteNonQuery();&#xD;&#xA;                        writer.WriteLine(""Rows to be affected by command2: {0}"", returnValue);&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;                // The Complete method commits the transaction. If an exception has been thrown, &#xD;&#xA;                // Complete is not  called and the transaction is rolled back.&#xD;&#xA;                scope.Complete();&#xD;&#xA;    &#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;        catch (TransactionAbortedException ex)&#xD;&#xA;        {&#xD;&#xA;            writer.WriteLine(""TransactionAbortedException Message: {0}"", ex.Message);&#xD;&#xA;        }&#xD;&#xA;        catch (ApplicationException ex)&#xD;&#xA;        {&#xD;&#xA;            writer.WriteLine(""ApplicationException Message: {0}"", ex.Message);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // Display messages.&#xD;&#xA;        Console.WriteLine(writer.ToString());&#xD;&#xA;    &#xD;&#xA;        return returnValue;&#xD;&#xA;    }"
-3805473677603963296,70,5,"    @if (@X)==(@Y) @end /* JScript comment&#xD;&#xA;    	@echo off&#xD;&#xA;    	&#xD;&#xA;    	rem :: the first argument is the script name as it will be used for proper help message&#xD;&#xA;    	cscript //E:JScript //nologo ""%~f0"" %*&#xD;&#xA;    &#xD;&#xA;    	exit /b %errorlevel%&#xD;&#xA;    	&#xD;&#xA;    @if (@X)==(@Y) @end JScript comment */&#xD;&#xA;     &#xD;&#xA;    ////// &#xD;&#xA;    FSOObj = new ActiveXObject(""Scripting.FileSystemObject"");&#xD;&#xA;    var ARGS = WScript.Arguments;&#xD;&#xA;    if (ARGS.Length < 1 ) {&#xD;&#xA;     WScript.Echo(""No file passed"");&#xD;&#xA;     WScript.Quit(1);&#xD;&#xA;    }&#xD;&#xA;    var filename=ARGS.Item(0);&#xD;&#xA;    var objShell=new ActiveXObject(""Shell.Application"");&#xD;&#xA;    /////&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    //fso&#xD;&#xA;    ExistsItem = function (path) {&#xD;&#xA;    	return FSOObj.FolderExists(path)||FSOObj.FileExists(path);&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    getFullPath = function (path) {&#xD;&#xA;        return FSOObj.GetAbsolutePathName(path);&#xD;&#xA;    }&#xD;&#xA;    //&#xD;&#xA;    &#xD;&#xA;    //paths&#xD;&#xA;    getParent = function(path){&#xD;&#xA;    	var splitted=path.split(""\\"");&#xD;&#xA;    	var result="""";&#xD;&#xA;    	for (var s=0;s<splitted.length-1;s++){&#xD;&#xA;    		if (s==0) {&#xD;&#xA;    			result=splitted[s];&#xD;&#xA;    		} else {&#xD;&#xA;    			result=result+""\\""+splitted[s];&#xD;&#xA;    		}&#xD;&#xA;    	}&#xD;&#xA;    	return result;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    getName = function(path){&#xD;&#xA;    	var splitted=path.split(""\\"");&#xD;&#xA;    	return splitted[splitted.length-1];&#xD;&#xA;    }&#xD;&#xA;    //&#xD;&#xA;    &#xD;&#xA;    function main(){&#xD;&#xA;    	if (!ExistsItem(filename)) {&#xD;&#xA;    		WScript.Echo(filename + "" does not exist"");&#xD;&#xA;    		WScript.Quit(2);&#xD;&#xA;    	}&#xD;&#xA;    	var fullFilename=getFullPath(filename);&#xD;&#xA;    	var namespace=getParent(fullFilename);&#xD;&#xA;    	var name=getName(fullFilename);&#xD;&#xA;    	var objFolder=objShell.NameSpace(namespace);&#xD;&#xA;    	var objItem=objFolder.ParseName(name);&#xD;&#xA;    	//https://msdn.microsoft.com/en-us/library/windows/desktop/bb787870(v=vs.85).aspx&#xD;&#xA;    	WScript.Echo(fullFilename + "" : "");&#xD;&#xA;    	WScript.Echo(objFolder.GetDetailsOf(objItem,-1));&#xD;&#xA;    	&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    main();"
-2121559312720786127,71,5,"    class EDUser {&#xD;&#xA;        var firstName: String&#xD;&#xA;        var lastName: String?&#xD;&#xA;        var birthDate: NSDate?&#xD;&#xA;        &#xD;&#xA;        init(firstName: String, lastName: String?, birthDate: NSDate?) {&#xD;&#xA;            self.firstName = firstName&#xD;&#xA;            self.lastName = lastName&#xD;&#xA;            self.birthDate = birthDate&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    // MARK: - Accessor&#xD;&#xA;    extension EDUser {&#xD;&#xA;        class var currentUser: EDUser? {&#xD;&#xA;            get {&#xD;&#xA;                return loadCurrentUserFromDisk()&#xD;&#xA;            }&#xD;&#xA;            set {&#xD;&#xA;                saveCurrentUserToDiskWithUser(newValue)&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    // MARK: - Log in and out&#xD;&#xA;    extension EDUser {&#xD;&#xA;        class func loginWithUsername(username: String,&#xD;&#xA;                               andPassword password: String,&#xD;&#xA;                               callback: (EDUser?, NSError) -> Void) {&#xD;&#xA;            // Access the web API&#xD;&#xA;            var parameters = [&#xD;&#xA;                ""username"": username,&#xD;&#xA;                ""password"": password&#xD;&#xA;            ]&#xD;&#xA;            YourNetworkingLibrary.request(.POST,&#xD;&#xA;                              ""https://api.yourwebsite.com/login"",&#xD;&#xA;                              parameters: parameters).responseJSON { &#xD;&#xA;                response in&#xD;&#xA;                if response.statusCode == .Success {&#xD;&#xA;                    let user = EDUser(firstName: response[""firstName""],&#xD;&#xA;                           lastName: response[""lastName""],&#xD;&#xA;                           birthDate: NSDate.dateFromString(response[""birthDate""]))&#xD;&#xA;                    currentUser = user&#xD;&#xA;                    callback(currentUser, nil)&#xD;&#xA;                } else {&#xD;&#xA;                    callback(nil, yourError)&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        class func logout() {&#xD;&#xA;            deleteCurrentUserFromDisk()&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    // MARK: - Data&#xD;&#xA;    extension EDUser {&#xD;&#xA;        class private func saveCurrentUserToDiskWithUser(user: EDUser) {&#xD;&#xA;            // In this process, you encode the user to file and store it&#xD;&#xA;        }&#xD;&#xA;        class private func loadCurrentUserFromDisk() -> EDUser? {&#xD;&#xA;            // In this process, you get the file and decode that to EDUser object&#xD;&#xA;            // This function will return nil if the file is not exist&#xD;&#xA;        }&#xD;&#xA;        class private func deleteCurrentUserFromDisk() {&#xD;&#xA;            // This will delete the current user file from disk&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    // MARK: - Helper&#xD;&#xA;    extension NSDate {&#xD;&#xA;        class func dateFromString(string: String) -> NSDate {&#xD;&#xA;            // convert string into NSDate&#xD;&#xA;        }&#xD;&#xA;    }"
2427110648985008414,71,5,"    -(void)shareOnFaceBook&#xD;&#xA;    {&#xD;&#xA;        //sample_video.mov is the name of file&#xD;&#xA;        NSString *filePathOfVideo = [[NSBundle mainBundle] pathForResource:@""sample_video"" ofType:@""mov""];&#xD;&#xA;    &#xD;&#xA;        NSLog(@""Path  Of Video is %@"", filePathOfVideo);&#xD;&#xA;        NSData *videoData = [NSData dataWithContentsOfFile:filePathOfVideo];&#xD;&#xA;        //you can use dataWithContentsOfURL if you have a Url of video file&#xD;&#xA;        //NSData *videoData = [NSData dataWithContentsOfURL:shareURL];&#xD;&#xA;        //NSLog(@""data is :%@"",videoData);&#xD;&#xA;        NSMutableDictionary *params = [NSMutableDictionary dictionaryWithObjectsAndKeys:&#xD;&#xA;                                   videoData, @""video.mov"",&#xD;&#xA;                                   @""video/quicktime"", @""contentType"",&#xD;&#xA;                                   @""Video name "", @""name"",&#xD;&#xA;                                   @""description of Video"", @""description"",&#xD;&#xA;                                   nil];&#xD;&#xA;    &#xD;&#xA;       if (FBSession.activeSession.isOpen)&#xD;&#xA;       {&#xD;&#xA;            [FBRequestConnection startWithGraphPath:@""me/videos""&#xD;&#xA;                                     parameters:params&#xD;&#xA;                                     HTTPMethod:@""POST""&#xD;&#xA;                              completionHandler:^(FBRequestConnection *connection, id result, NSError *error) {&#xD;&#xA;                                  if(!error)&#xD;&#xA;                                  {&#xD;&#xA;                                      NSLog(@""RESULT: %@"", result);&#xD;&#xA;                                      [self throwAlertWithTitle:@""Success"" message:@""Video uploaded""];&#xD;&#xA;                                  }&#xD;&#xA;                                  else&#xD;&#xA;                                  {&#xD;&#xA;                                      NSLog(@""ERROR: %@"", error.localizedDescription);&#xD;&#xA;                                      [self throwAlertWithTitle:@""Denied"" message:@""Try Again""];&#xD;&#xA;                                  }&#xD;&#xA;                              }];&#xD;&#xA;        }&#xD;&#xA;        else&#xD;&#xA;        {&#xD;&#xA;            NSArray *permissions = [[NSArray alloc] initWithObjects:&#xD;&#xA;                                @""publish_actions"",&#xD;&#xA;                                nil];&#xD;&#xA;            // OPEN Session!&#xD;&#xA;            [FBSession openActiveSessionWithPublishPermissions:permissions defaultAudience:FBSessionDefaultAudienceEveryone  allowLoginUI:YES&#xD;&#xA;                                         completionHandler:^(FBSession *session,&#xD;&#xA;                                                             FBSessionState status,&#xD;&#xA;                                                             NSError *error) {&#xD;&#xA;                                             if (error)&#xD;&#xA;                                             {&#xD;&#xA;                                                 NSLog(@""Login fail :%@"",error);&#xD;&#xA;                                             }&#xD;&#xA;                                             else if (FB_ISSESSIONOPENWITHSTATE(status))&#xD;&#xA;                                             {&#xD;&#xA;                                                 [FBRequestConnection startWithGraphPath:@""me/videos""&#xD;&#xA;                                                                              parameters:params&#xD;&#xA;                                                                              HTTPMethod:@""POST""&#xD;&#xA;                                                                       completionHandler:^(FBRequestConnection *connection, id result, NSError *error) {&#xD;&#xA;                                                                           if(!error)&#xD;&#xA;                                                                           {&#xD;&#xA;                                                                               [self throwAlertWithTitle:@""Success"" message:@""Video uploaded""];&#xD;&#xA;                                                                               NSLog(@""RESULT: %@"", result);&#xD;&#xA;                                                                           }&#xD;&#xA;                                                                           else&#xD;&#xA;                                                                           {&#xD;&#xA;                                                                               [self throwAlertWithTitle:@""Denied"" message:@""Try Again""];&#xD;&#xA;                                                                               NSLog(@""ERROR: %@"", error.localizedDescription);&#xD;&#xA;                                                                           }&#xD;&#xA;                                                                           &#xD;&#xA;                                                                       }];&#xD;&#xA;                                             }&#xD;&#xA;                                         }];&#xD;&#xA;            }&#xD;&#xA;    }"
-4224576669183711181,71,5,"    <html>&#xD;&#xA;    <head><meta http-equiv=""Content-Type"" content=""text/html; charset=UTF-8"" />&#xD;&#xA;    <title>FW: NEFS 2 Available Quota 5/21</title>&#xD;&#xA;    <link rel=""important stylesheet"" href="""">&#xD;&#xA;    <style>div.headerdisplayname {font-weight:bold;}</style></head>&#xD;&#xA;    <body>&#xD;&#xA;    <table border=0 cellspacing=0 cellpadding=0 width=""100%"" class=""header-part1""><tr><td><b>Subject: </b>FW: NEFS 2 Available Quota 5/21</td></tr><tr><td><b>From: </b>Claire Fitz-Gerald <claire@capecodfishermen.org></td></tr><tr><td><b>Date: </b>5/21/2014 10:08 AM</td></tr></table><br>&#xD;&#xA;    <html xmlns:v=""urn:schemas-microsoft-com:vml"" xmlns:o=""urn:schemas-microsoft-com:office:office"" xmlns:w=""urn:schemas-microsoft-com:office:word"" xmlns:m=""http://schemas.microsoft.com/office/2004/12/omml"" xmlns=""http://www.w3.org/TR/REC-html40""><head><META HTTP-EQUIV=""Content-Type"" CONTENT=""text/html; ""><meta name=Generator content=""Microsoft Word 12 (filtered medium)""><!--[if !mso]><style>v\:* {behavior:url(#default#VML);}&#xD;&#xA;    o\:* {behavior:url(#default#VML);}&#xD;&#xA;    w\:* {behavior:url(#default#VML);}&#xD;&#xA;    .shape {behavior:url(#default#VML);}&#xD;&#xA;    </style><![endif]--><style><!--&#xD;&#xA;    /* Font Definitions */&#xD;&#xA;    @font-face&#xD;&#xA;    	{font-family:""Cambria Math"";&#xD;&#xA;    	panose-1:2 4 5 3 5 4 6 3 2 4;}&#xD;&#xA;    @font-face&#xD;&#xA;    	{font-family:Calibri;&#xD;&#xA;    	panose-1:2 15 5 2 2 2 4 3 2 4;}&#xD;&#xA;    @font-face&#xD;&#xA;    	{font-family:Tahoma;&#xD;&#xA;    	panose-1:2 11 6 4 3 5 4 4 2 4;}&#xD;&#xA;    @font-face&#xD;&#xA;    	{font-family:""Franklin Gothic Book"";&#xD;&#xA;    	panose-1:2 11 5 3 2 1 2 2 2 4;}&#xD;&#xA;    @font-face&#xD;&#xA;    	{font-family:""Franklin Gothic Demi"";&#xD;&#xA;    	panose-1:2 11 7 3 2 1 2 2 2 4;}&#xD;&#xA;    /* Style Definitions */&#xD;&#xA;    p.MsoNormal, li.MsoNormal, div.MsoNormal&#xD;&#xA;    	{margin:0in;&#xD;&#xA;    	margin-bottom:.0001pt;&#xD;&#xA;    	font-size:11.0pt;&#xD;&#xA;    	font-family:""Calibri"",""sans-serif"";}&#xD;&#xA;    a:link, span.MsoHyperlink&#xD;&#xA;    	{mso-style-priority:99;&#xD;&#xA;    	color:blue;&#xD;&#xA;    	text-decoration:underline;}&#xD;&#xA;    a:visited, span.MsoHyperlinkFollowed&#xD;&#xA;    	{mso-style-priority:99;&#xD;&#xA;    	color:purple;&#xD;&#xA;    	text-decoration:underline;}&#xD;&#xA;    span.EmailStyle17&#xD;&#xA;    	{mso-style-type:personal;&#xD;&#xA;    	font-family:""Calibri"",""sans-serif"";&#xD;&#xA;    	color:windowtext;}&#xD;&#xA;    span.title1&#xD;&#xA;    	{mso-style-name:title1;&#xD;&#xA;    	font-family:""Arial"",""sans-serif"";&#xD;&#xA;    	color:#1F487E;&#xD;&#xA;    	font-weight:normal;}&#xD;&#xA;    span.EmailStyle19&#xD;&#xA;    	{mso-style-type:personal-reply;&#xD;&#xA;    	font-family:""Calibri"",""sans-serif"";&#xD;&#xA;    	color:#1F497D;}&#xD;&#xA;    .MsoChpDefault&#xD;&#xA;    	{mso-style-type:export-only;&#xD;&#xA;    	font-size:10.0pt;}&#xD;&#xA;    @page WordSection1&#xD;&#xA;    	{size:8.5in 11.0in;&#xD;&#xA;    	margin:1.0in 1.0in 1.0in 1.0in;}&#xD;&#xA;    div.WordSection1&#xD;&#xA;    	{page:WordSection1;}&#xD;&#xA;    --></style><!--[if gte mso 9]><xml>&#xD;&#xA;    <o:shapedefaults v:ext=""edit"" spidmax=""1026"" />&#xD;&#xA;    </xml><![endif]--><!--[if gte mso 9]><xml>&#xD;&#xA;    <o:shapelayout v:ext=""edit"">&#xD;&#xA;    <o:idmap v:ext=""edit"" data=""1"" />&#xD;&#xA;    </o:shapelayout></xml><![endif]--></head><body lang=EN-US link=blue vlink=purple><div class=WordSection1><p class=MsoNormal><span style='color:#1F497D'>Please see the below quota listings.<o:p></o:p></span></p><p class=MsoNormal><span style='color:#1F497D'><o:p>&nbsp;</o:p></span></p><p class=MsoNormal><span style='color:#1F497D'>Thanks,<o:p></o:p></span></p><p class=MsoNormal><span style='color:#1F497D'><o:p>&nbsp;</o:p></span></p><div><p class=MsoNormal><span style='font-size:12.0pt;font-family:""Franklin Gothic Book"",""sans-serif"";color:#1F497D'>Claire Fitz-Gerald<o:p></o:p></span></p><p class=MsoNormal><i><span style='font-size:10.0pt;font-family:""Franklin Gothic Book"",""sans-serif"";color:#1F497D'><o:p>&nbsp;</o:p></span></i></p><p class=MsoNormal><b><span style='font-family:""Franklin Gothic Demi"",""sans-serif"";color:#002776'>Cape Cod Commercial Fishermen's Alliance<o:p></o:p></span></b></p><p class=MsoNormal><b><span style='font-family:""Franklin Gothic Book"",""sans-serif"";color:#DE3500'>~ Small Boats.&nbsp; Big Ideas. ~</span></b><b><span style='color:#DE3500'><o:p></o:p></span></b></p></div><p class=MsoNormal><span style='color:#1F497D'><o:p>&nbsp;</o:p></span></p><div><div style='border:none;border-top:solid #B5C4DF 1.0pt;padding:3.0pt 0in 0in 0in'><p class=MsoNormal><b><span style='font-size:10.0pt;font-family:""Tahoma"",""sans-serif""'>From:</span></b><span style='font-size:10.0pt;font-family:""Tahoma"",""sans-serif""'> David Leveille [mailto:nefs02@gmail.com] <br><b>Sent:</b> Wednesday, May 21, 2014 8:50 AM<br><b>To:</b> David Leveille<br><b>Subject:</b> NEFS 2 Available Quota 5/21<o:p></o:p></span></p></div></div><p class=MsoNormal><o:p>&nbsp;</o:p></p><p class=MsoNormal><span style='font-size:12.0pt;font-family:""Arial"",""sans-serif"";color:#1F487E'>AVAILABLE QUOTA FY 2014</span><span style='font-size:12.0pt;font-family:""Times New Roman"",""serif""'><o:p></o:p></span></p><table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0 width=""71%"" style='width:71.28%'><tr><td width=220 style='width:164.95pt;border:none;border-bottom:solid windowtext 1.0pt;background:#8BCDFF;padding:2.25pt 2.25pt 2.25pt 2.25pt'><p class=MsoNormal style='line-height:15.0pt'><b><span style='font-size:9.0pt;font-family:""Arial"",""sans-serif"";color:black'>ID <o:p></o:p></span></b></p></td><td width=161 style='width:120.75pt;border:none;border-bottom:solid windowtext 1.0pt;background:#8BCDFF;padding:2.25pt 2.25pt 2.25pt 2.25pt'><p class=MsoNormal style='mso-line-height-alt:15.0pt'><b><span style='font-size:18.0pt;font-family:""Arial"",""sans-serif"";color:black'>Available Quota <o:p></o:p></span></b></p></td><td width=189 style='width:141.75pt;border:none;border-bottom:solid windowtext 1.0pt;background:#8BCDFF;padding:2.25pt 2.25pt 2.25pt 2.25pt'><p class=MsoNormal style='mso-line-height-alt:15.0pt'><b><span style='font-size:18.0pt;font-family:""Arial"",""sans-serif"";color:black'>Live Weight Pounds <o:p></o:p></span></b></p></td><td width=126 style='width:94.55pt;border:none;border-bottom:solid windowtext 1.0pt;background:#8BCDFF;padding:2.25pt 2.25pt 2.25pt 2.25pt'><p class=MsoNormal style='mso-line-height-alt:15.0pt'><b><span style='font-size:18.0pt;font-family:""Arial"",""sans-serif"";color:black'>Price <o:p></o:p></span></b></p></td><td width=168 style='width:125.95pt;border:none;border-bottom:solid windowtext 1.0pt;background:#8BCDFF;padding:2.25pt 2.25pt 2.25pt 2.25pt'><p class=MsoNormal style='mso-line-height-alt:15.0pt'><b><span style='font-size:18.0pt;font-family:""Arial"",""sans-serif"";color:black'>Date Posted <o:p></o:p></span></b></p></td></tr><tr><td width=220 style='width:164.95pt;border:solid windowtext 1.0pt;background:white;padding:2.25pt 2.25pt 2.25pt 2.25pt'><p class=MsoNormal style='line-height:15.0pt'><span style='font-size:13.5pt;font-family:""Arial"",""sans-serif"";color:black'>1724<o:p></o:p></span></p></td><td width=161 style='width:120.75pt;border:solid windowtext 1.0pt;background:white;padding:2.25pt 2.25pt 2.25pt 2.25pt'><p class=MsoNormal style='line-height:15.0pt'><span style='font-size:13.5pt;font-family:""Arial"",""sans-serif"";color:black'>GOM COD<br>GOM HADD<br>GOM BB<br>GREYSOLE<br>DABS<br>GOM YT<o:p></o:p></span></p></td><td width=189 style='width:141.75pt;border:solid windowtext 1.0pt;background:white;padding:2.25pt 2.25pt 2.25pt 2.25pt'><p class=MsoNormal style='line-height:15.0pt'><span style='font-size:13.5pt;font-family:""Arial"",""sans-serif"";color:black'>2328<br>445<br>3007<br>850<br>3101<br>1995<o:p></o:p></span></p></td><td width=126 style='width:94.55pt;border:solid windowtext 1.0pt;background:white;padding:2.25pt 2.25pt 2.25pt 2.25pt'><p class=MsoNormal style='line-height:15.0pt'><span style='font-size:13.5pt;font-family:""Arial"",""sans-serif"";color:black'>Package<o:p></o:p></span></p><p class=MsoNormal style='line-height:15.0pt'><span style='font-size:13.5pt;font-family:""Arial"",""sans-serif"";color:black'><o:p>&nbsp;</o:p></span></p><p class=MsoNormal style='line-height:15.0pt'><span style='font-size:13.5pt;font-family:""Arial"",""sans-serif"";color:black'>$9,000<o:p></o:p></span></p></td><td width=168 style='width:125.95pt;border:solid windowtext 1.0pt;background:white;padding:2.25pt 2.25pt 2.25pt 2.25pt'><p class=MsoNormal style='line-height:15.0pt'><span style='font-size:13.5pt;font-family:""Arial"",""sans-serif"";color:black'>5/20<o:p></o:p></span></p></td></tr><tr><td width=220 style='width:164.95pt;border:solid windowtext 1.0pt;background:white;padding:2.25pt 2.25pt 2.25pt 2.25pt'><p class=MsoNormal style='line-height:15.0pt'><span style='font-size:13.5pt;font-family:""Arial"",""sans-serif"";color:black'>1578<o:p></o:p></span></p></td><td width=161 style='width:120.75pt;border:solid windowtext 1.0pt;background:white;padding:2.25pt 2.25pt 2.25pt 2.25pt'><p class=MsoNormal style='line-height:15.0pt'><span style='font-size:13.5pt;font-family:""Arial"",""sans-serif"";color:black'>GBE COD<br>GBW COD<br>GB BB<br>GB YT<br>SNE BB<br>SNE YT<br>GOM BB<br>Whake<br>POLL<br>RED<o:p></o:p></span></p></td><td width=189 style='width:141.75pt;border:solid windowtext 1.0pt;background:white;padding:2.25pt 2.25pt 2.25pt 2.25pt'><p class=MsoNormal style='line-height:15.0pt'><span style='font-size:13.5pt;font-family:""Arial"",""sans-serif"";color:black'>538<br>5894<br>1755<br>243<br>490<br>153<br>3965<br>2727<br>9227<br>15060<o:p></o:p></span></p></td><td width=126 style='width:94.55pt;border:solid windowtext 1.0pt;background:white;padding:2.25pt 2.25pt 2.25pt 2.25pt'><p class=MsoNormal style='line-height:15.0pt'><span style='font-size:13.5pt;font-family:""Arial"",""sans-serif"";color:black'>$1.00<br>$0.40<br>$0.20<br>$1.00<br>$0.45<br>$0.50<br>$0.15<br>$0.20<br>$0.01<br>$0.01<o:p></o:p></span></p></td><td width=168 style='width:125.95pt;border:solid windowtext 1.0pt;background:white;padding:2.25pt 2.25pt 2.25pt 2.25pt'><p class=MsoNormal style='line-height:15.0pt'><span style='font-size:13.5pt;font-family:""Arial"",""sans-serif"";color:black'>5/20<o:p></o:p></span></p></td></tr><tr><td width=220 style='width:164.95pt;border:solid windowtext 1.0pt;background:white;padding:2.25pt 2.25pt 2.25pt 2.25pt'><p class=MsoNormal style='line-height:15.0pt'><span style='font-size:13.5pt;font-family:""Arial"",""sans-serif"";color:black'>310<o:p></o:p></span></p></td><td width=161 style='width:120.75pt;border:solid windowtext 1.0pt;background:white;padding:2.25pt 2.25pt 2.25pt 2.25pt'><p class=MsoNormal style='line-height:15.0pt'><span style='font-size:13.5pt;font-family:""Arial"",""sans-serif"";color:black'>GBE COD<br>GBW COD<br>DABS<br>WHAKE<br>POLL<br>RED<br>SNE BB<br>GOM BB<o:p></o:p></span></p></td><td width=189 style='width:141.75pt;border:solid windowtext 1.0pt;background:white;padding:2.25pt 2.25pt 2.25pt 2.25pt'><p class=MsoNormal style='line-height:15.0pt'><span style='font-size:13.5pt;font-family:""Arial"",""sans-serif"";color:black'>825<br>9033<br>1241<br>3120<br>65234<br>76610<br>1688<br>1195<br>2121<br>7285<o:p></o:p></span></p></td><td width=126 style='width:94.55pt;border:solid windowtext 1.0pt;background:white;padding:2.25pt 2.25pt 2.25pt 2.25pt'><p class=MsoNormal style='line-height:15.0pt'><span style='font-size:13.5pt;font-family:""Arial"",""sans-serif"";color:black'>Package<o:p></o:p></span></p><p class=MsoNormal style='line-height:15.0pt'><span style='font-size:13.5pt;font-family:""Arial"",""sans-serif"";color:black'><o:p>&nbsp;</o:p></span></p><p class=MsoNormal style='line-height:15.0pt'><span style='font-size:13.5pt;font-family:""Arial"",""sans-serif"";color:black'>$15,000<o:p></o:p></span></p></td><td width=168 style='width:125.95pt;border:solid windowtext 1.0pt;background:white;padding:2.25pt 2.25pt 2.25pt 2.25pt'><p class=MsoNormal style='line-height:15.0pt'><span style='font-size:13.5pt;font-family:""Arial"",""sans-serif"";color:black'>5/20<o:p></o:p></span></p></td></tr><tr style='height:23.25pt'><td width=220 style='width:164.95pt;border:solid windowtext 1.0pt;background:white;padding:2.25pt 2.25pt 2.25pt 2.25pt;height:23.25pt'><p class=MsoNormal style='line-height:15.0pt'><span style='font-size:13.5pt;font-family:""Arial"",""sans-serif"";color:black'>347<o:p></o:p></span></p></td><td width=161 style='width:120.75pt;border:solid windowtext 1.0pt;background:white;padding:2.25pt 2.25pt 2.25pt 2.25pt;height:23.25pt'><p class=MsoNormal style='line-height:15.0pt'><span style='font-size:13.5pt;font-family:""Arial"",""sans-serif"";color:black'>SNE BB<o:p></o:p></span></p></td><td width=189 style='width:141.75pt;border:solid windowtext 1.0pt;background:white;padding:2.25pt 2.25pt 2.25pt 2.25pt;height:23.25pt'><p class=MsoNormal style='line-height:15.0pt'><span style='font-size:13.5pt;font-family:""Arial"",""sans-serif"";color:black'>8,000<o:p></o:p></span></p></td><td width=126 style='width:94.55pt;border:solid windowtext 1.0pt;background:white;padding:2.25pt 2.25pt 2.25pt 2.25pt;height:23.25pt'><p class=MsoNormal style='line-height:15.0pt'><span style='font-size:13.5pt;font-family:""Arial"",""sans-serif"";color:black'>$0.50<o:p></o:p></span></p></td><td width=168 style='width:125.95pt;border:solid windowtext 1.0pt;background:white;padding:2.25pt 2.25pt 2.25pt 2.25pt;height:23.25pt'><p class=MsoNormal style='line-height:15.0pt'><span style='font-size:13.5pt;font-family:""Arial"",""sans-serif"";color:black'>5/7<o:p></o:p></span></p></td></tr><tr><td width=220 style='width:164.95pt;border:solid windowtext 1.0pt;background:white;padding:2.25pt 2.25pt 2.25pt 2.25pt'><p class=MsoNormal style='line-height:15.0pt'><span style='font-size:13.5pt;font-family:""Arial"",""sans-serif"";color:black'>1878A<o:p></o:p></span></p></td><td width=161 style='width:120.75pt;border:solid windowtext 1.0pt;background:white;padding:2.25pt 2.25pt 2.25pt 2.25pt'><p class=MsoNormal style='line-height:15.0pt'><span style='font-size:13.5pt;font-family:""Arial"",""sans-serif"";color:black'>GOM COD<br>GOM HADD<br>SNE BB<br>GOM BB<br>GB BB<br>GREYSOLE<br>GOM YT<br>SNE YT<br>POLL<o:p></o:p></span></p></td><td width=189 style='width:141.75pt;border:solid windowtext 1.0pt;background:white;padding:2.25pt 2.25pt 2.25pt 2.25pt'><p class=MsoNormal style='line-height:15.0pt'><span style='font-size:13.5pt;font-family:""Arial"",""sans-serif"";color:black'>6188<br>635<br>3916<br>7873<br>6762<br>3358<br>9776<br>271<br>186550<o:p></o:p></span></p></td><td width=126 style='width:94.55pt;border:solid windowtext 1.0pt;background:white;padding:2.25pt 2.25pt 2.25pt 2.25pt'><p class=MsoNormal style='line-height:15.0pt'><span style='font-size:13.5pt;font-family:""Arial"",""sans-serif"";color:black'>$1.95<br>$1.35<br>$0.50<br>$0.50<br>$0.20<br>$1.40<br>$1.20<br>$0.50<br>$0.01<o:p></o:p></span></p></td><td width=168 style='width:125.95pt;border:solid windowtext 1.0pt;background:white;padding:2.25pt 2.25pt 2.25pt 2.25pt'><p class=MsoNormal style='line-height:15.0pt'><span style='font-size:13.5pt;font-family:""Arial"",""sans-serif"";color:black'>5/12<o:p></o:p></span></p></td></tr><tr><td width=220 style='width:164.95pt;border:solid windowtext 1.0pt;background:white;padding:2.25pt 2.25pt 2.25pt 2.25pt'><p class=MsoNormal style='line-height:15.0pt'><span style='font-size:13.5pt;font-family:""Arial"",""sans-serif"";color:black'>1878B<o:p></o:p></span></p></td><td width=161 style='width:120.75pt;border:solid windowtext 1.0pt;background:white;padding:2.25pt 2.25pt 2.25pt 2.25pt'><p class=MsoNormal style='line-height:15.0pt'><span style='font-size:13.5pt;font-family:""Arial"",""sans-serif"";color:black'>GBE COD<br>GBW COD<br>GB YT<o:p></o:p></span></p></td><td width=189 style='width:141.75pt;border:solid windowtext 1.0pt;background:white;padding:2.25pt 2.25pt 2.25pt 2.25pt'><p class=MsoNormal style='line-height:15.0pt'><span style='font-size:13.5pt;font-family:""Arial"",""sans-serif"";color:black'>1113<br>12186<br>850<o:p></o:p></span></p></td><td width=126 style='width:94.55pt;border:solid windowtext 1.0pt;background:white;padding:2.25pt 2.25pt 2.25pt 2.25pt'><p class=MsoNormal style='line-height:15.0pt'><span style='font-size:13.5pt;font-family:""Arial"",""sans-serif"";color:black'>Package<br>$10,000<o:p></o:p></span></p></td><td width=168 style='width:125.95pt;border:solid windowtext 1.0pt;background:white;padding:2.25pt 2.25pt 2.25pt 2.25pt'><p class=MsoNormal style='line-height:15.0pt'><span style='font-size:13.5pt;font-family:""Arial"",""sans-serif"";color:black'>5/12<o:p></o:p></span></p></td></tr></table><p class=MsoNormal><o:p>&nbsp;</o:p></p><p class=MsoNormal><o:p>&nbsp;</o:p></p><p class=MsoNormal>David Leveille<o:p></o:p></p><p class=MsoNormal>II Northeast Fishery Sector Inc.<o:p></o:p></p><p class=MsoNormal>10 Witham Street<o:p></o:p></p><p class=MsoNormal>Gloucester, MA. 01930<o:p></o:p></p><p class=MsoNormal>Cell 978 375 3509<o:p></o:p></p><p class=MsoNormal>Fax 978 281 1555<o:p></o:p></p><p class=MsoNormal>Web <a href=""http://nefs2.com/"">http://nefs2.com/</a><o:p></o:p></p><p class=MsoNormal><o:p>&nbsp;</o:p></p><div class=MsoNormal align=center style='text-align:center'><span style='font-size:12.0pt;font-family:""Times New Roman"",""serif""'></body></html>&#xD;&#xA;    </body>&#xD;&#xA;    </html>"
2983797230092716232,71,5,"    import java.awt.*;&#xD;&#xA;    import java.awt.event.*;&#xD;&#xA;    import javax.swing.*;&#xD;&#xA;    import javax.swing.border.*;&#xD;&#xA;    &#xD;&#xA;    public class CalculatorPanel extends JPanel&#xD;&#xA;    {&#xD;&#xA;    	private JTextField display;&#xD;&#xA;    &#xD;&#xA;    	public CalculatorPanel()&#xD;&#xA;    	{&#xD;&#xA;    		Action numberAction = new AbstractAction()&#xD;&#xA;    		{&#xD;&#xA;    			@Override&#xD;&#xA;    			public void actionPerformed(ActionEvent e)&#xD;&#xA;    			{&#xD;&#xA;	    			display.setCaretPosition( display.getDocument().getLength() );&#xD;&#xA;    				display.replaceSelection(e.getActionCommand());&#xD;&#xA;    			}&#xD;&#xA;    		};&#xD;&#xA;    &#xD;&#xA;    		setLayout( new BorderLayout() );&#xD;&#xA;    &#xD;&#xA;    		display = new JTextField();&#xD;&#xA;    		display.setEditable( false );&#xD;&#xA;    		display.setHorizontalAlignment(JTextField.RIGHT);&#xD;&#xA;    		add(display, BorderLayout.NORTH);&#xD;&#xA;    &#xD;&#xA;    		JPanel buttonPanel = new JPanel();&#xD;&#xA;    		buttonPanel.setLayout( new GridLayout(0, 5) );&#xD;&#xA;    		add(buttonPanel, BorderLayout.CENTER);&#xD;&#xA;    &#xD;&#xA;    		for (int i = 0; i < 10; i++)&#xD;&#xA;    		{&#xD;&#xA;    			String text = String.valueOf(i);&#xD;&#xA;    			JButton button = new JButton( text );&#xD;&#xA;    			button.addActionListener( numberAction );&#xD;&#xA;    			button.setBorder( new LineBorder(Color.BLACK) );&#xD;&#xA;    			button.setPreferredSize( new Dimension(50, 50) );&#xD;&#xA;    			buttonPanel.add( button );&#xD;&#xA;    &#xD;&#xA;    			KeyStroke pressed = KeyStroke.getKeyStroke(text);&#xD;&#xA;    			InputMap inputMap = button.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);&#xD;&#xA;    			inputMap.put(pressed, text);&#xD;&#xA;    			button.getActionMap().put(text, numberAction);&#xD;&#xA;    		}&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	private static void createAndShowUI()&#xD;&#xA;    	{&#xD;&#xA;    //		UIManager.put(""Button.margin"", new Insets(10, 10, 10, 10) );&#xD;&#xA;    &#xD;&#xA;    		JFrame frame = new JFrame(""Calculator Panel"");&#xD;&#xA;    		frame.setDefaultCloseOperation( JFrame.EXIT_ON_CLOSE );&#xD;&#xA;    		frame.add( new CalculatorPanel() );&#xD;&#xA;    		frame.pack();&#xD;&#xA;    		frame.setLocationRelativeTo( null );&#xD;&#xA;    		frame.setVisible(true);&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public static void main(String[] args)&#xD;&#xA;    	{&#xD;&#xA;    		EventQueue.invokeLater(new Runnable()&#xD;&#xA;    		{&#xD;&#xA;    			public void run()&#xD;&#xA;    			{&#xD;&#xA;    				createAndShowUI();&#xD;&#xA;    			}&#xD;&#xA;    		});&#xD;&#xA;    	}&#xD;&#xA;    }"
-9220481515933324771,72,5,"    {&#xD;&#xA;      ""html5-es"" : {&#xD;&#xA;        ""aliases"" : { },&#xD;&#xA;        ""mappings"" : {&#xD;&#xA;          ""document"" : {&#xD;&#xA;            ""properties"" : {&#xD;&#xA;              ""delete"" : {&#xD;&#xA;                ""type"" : ""boolean""&#xD;&#xA;              },&#xD;&#xA;              ""file"" : {&#xD;&#xA;                ""type"" : ""attachment"",&#xD;&#xA;                ""fields"" : {&#xD;&#xA;                  ""content"" : {&#xD;&#xA;                    ""type"" : ""string"",&#xD;&#xA;                    ""store"" : true,&#xD;&#xA;                    ""term_vector"" : ""with_positions_offsets"",&#xD;&#xA;                    ""analyzer"" : ""autocomplete""&#xD;&#xA;                  },&#xD;&#xA;                  ""author"" : {&#xD;&#xA;                    ""type"" : ""string"",&#xD;&#xA;                    ""store"" : true,&#xD;&#xA;                    ""term_vector"" : ""with_positions_offsets""&#xD;&#xA;                  },&#xD;&#xA;                  ""title"" : {&#xD;&#xA;                    ""type"" : ""string"",&#xD;&#xA;                    ""store"" : true,&#xD;&#xA;                    ""term_vector"" : ""with_positions_offsets"",&#xD;&#xA;                    ""analyzer"" : ""autocomplete""&#xD;&#xA;                  },&#xD;&#xA;                  ""name"" : {&#xD;&#xA;                    ""type"" : ""string""&#xD;&#xA;                  },&#xD;&#xA;                  ""date"" : {&#xD;&#xA;                    ""type"" : ""date"",&#xD;&#xA;                   ""format"" : ""strict_date_optional_time||epoch_millis""&#xD;&#xA;                  },&#xD;&#xA;                  ""keywords"" : {&#xD;&#xA;                    ""type"" : ""string""&#xD;&#xA;                  },&#xD;&#xA;                  ""content_type"" : {&#xD;&#xA;                    ""type"" : ""string""&#xD;&#xA;                  },&#xD;&#xA;              ""content_length"" : {&#xD;&#xA;                    ""type"" : ""integer""&#xD;&#xA;                  },&#xD;&#xA;                  ""language"" : {&#xD;&#xA;                    ""type"" : ""string""&#xD;&#xA;                  }&#xD;&#xA;                }&#xD;&#xA;              },&#xD;&#xA;              ""hash_id"" : {&#xD;&#xA;                ""type"" : ""string""&#xD;&#xA;              },&#xD;&#xA;              ""path"" : {&#xD;&#xA;                ""type"" : ""string""&#xD;&#xA;              },&#xD;&#xA;              ""raw_content"" : {&#xD;&#xA;                ""type"" : ""string"",&#xD;&#xA;                ""store"" : true,&#xD;&#xA;                ""term_vector"" : ""with_positions_offsets"",&#xD;&#xA;                ""analyzer"" : ""raw""&#xD;&#xA;              },&#xD;&#xA;              ""title"" : {&#xD;&#xA;                ""type"" : ""string""&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;          }&#xD;&#xA;        },&#xD;&#xA;        ""settings"" : { //insert your own settings here },&#xD;&#xA;        ""warmers"" : { }&#xD;&#xA;      }&#xD;&#xA;    }"
3814033865054873571,72,5,"    protected void convertToPdfButton_Click(object sender, EventArgs e)&#xD;&#xA;    {&#xD;&#xA;        // Get the server IP and port&#xD;&#xA;        String serverIP = textBoxServerIP.Text;&#xD;&#xA;        uint serverPort = uint.Parse(textBoxServerPort.Text);&#xD;&#xA;    &#xD;&#xA;        // Create a HTML to PDF converter object with default settings&#xD;&#xA;        HtmlToPdfConverter htmlToPdfConverter = new HtmlToPdfConverter(serverIP, serverPort);&#xD;&#xA;                &#xD;&#xA;        // Set optional service password&#xD;&#xA;        if (textBoxServicePassword.Text.Length > 0)&#xD;&#xA;            htmlToPdfConverter.ServicePassword = textBoxServicePassword.Text;&#xD;&#xA;        &#xD;&#xA;        // Set HTML Viewer width in pixels which is the equivalent in converter of the browser window width&#xD;&#xA;        htmlToPdfConverter.HtmlViewerWidth = int.Parse(htmlViewerWidthTextBox.Text);&#xD;&#xA;    &#xD;&#xA;        // Set HTML viewer height in pixels to convert the top part of a HTML page &#xD;&#xA;        // Leave it not set to convert the entire HTML&#xD;&#xA;        if (htmlViewerHeightTextBox.Text.Length > 0)&#xD;&#xA;            htmlToPdfConverter.HtmlViewerHeight = int.Parse(htmlViewerHeightTextBox.Text);&#xD;&#xA;    &#xD;&#xA;        // Set PDF page size which can be a predefined size like A4 or a custom size in points &#xD;&#xA;        // Leave it not set to have a default A4 PDF page&#xD;&#xA;        htmlToPdfConverter.PdfDocumentOptions.PdfPageSize = SelectedPdfPageSize();&#xD;&#xA;    &#xD;&#xA;        // Set PDF page orientation to Portrait or Landscape&#xD;&#xA;        // Leave it not set to have a default Portrait orientation for PDF page&#xD;&#xA;        htmlToPdfConverter.PdfDocumentOptions.PdfPageOrientation = SelectedPdfPageOrientation();&#xD;&#xA;    &#xD;&#xA;        // Set the maximum time in seconds to wait for HTML page to be loaded &#xD;&#xA;        // Leave it not set for a default 60 seconds maximum wait time&#xD;&#xA;        htmlToPdfConverter.NavigationTimeout = int.Parse(navigationTimeoutTextBox.Text);&#xD;&#xA;    &#xD;&#xA;        // Set an adddional delay in seconds to wait for JavaScript or AJAX calls after page load completed&#xD;&#xA;        // Set this property to 0 if you don't need to wait for such asynchcronous operations to finish&#xD;&#xA;        if (conversionDelayTextBox.Text.Length > 0)&#xD;&#xA;            htmlToPdfConverter.ConversionDelay = int.Parse(conversionDelayTextBox.Text);&#xD;&#xA;    &#xD;&#xA;        // The buffer to receive the generated PDF document&#xD;&#xA;        byte[] outPdfBuffer = null;&#xD;&#xA;    &#xD;&#xA;        if (convertUrlRadioButton.Checked)&#xD;&#xA;        {&#xD;&#xA;            string url = urlTextBox.Text;&#xD;&#xA;    &#xD;&#xA;            // Convert the HTML page given by an URL to a PDF document in a memory buffer&#xD;&#xA;            outPdfBuffer = htmlToPdfConverter.ConvertUrl(url);&#xD;&#xA;        }&#xD;&#xA;        else&#xD;&#xA;        {&#xD;&#xA;            string htmlString = htmlStringTextBox.Text;&#xD;&#xA;            string baseUrl = baseUrlTextBox.Text;&#xD;&#xA;    &#xD;&#xA;            // Convert a HTML string with a base URL to a PDF document in a memory buffer&#xD;&#xA;            outPdfBuffer = htmlToPdfConverter.ConvertHtml(htmlString, baseUrl);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // Send the PDF as response to browser&#xD;&#xA;    &#xD;&#xA;        // Set response content type&#xD;&#xA;        Response.AddHeader(""Content-Type"", ""application/pdf"");&#xD;&#xA;    &#xD;&#xA;        // Instruct the browser to open the PDF file as an attachment or inline&#xD;&#xA;        Response.AddHeader(""Content-Disposition"", String.Format(""{0}; filename=Getting_Started.pdf; size={1}"",&#xD;&#xA;            openInlineCheckBox.Checked ? ""inline"" : ""attachment"", outPdfBuffer.Length.ToString()));&#xD;&#xA;    &#xD;&#xA;        // Write the PDF document buffer to HTTP response&#xD;&#xA;        Response.BinaryWrite(outPdfBuffer);&#xD;&#xA;    &#xD;&#xA;        // End the HTTP response and stop the current page processing&#xD;&#xA;        Response.End();&#xD;&#xA;    }"
1027556597406440129,72,5,"        <?php&#xD;&#xA;    &#xD;&#xA;    namespace App\Http\Controllers\Auth;&#xD;&#xA;    &#xD;&#xA;    use App\User;&#xD;&#xA;    use Validator;&#xD;&#xA;    use App\Http\Controllers\Controller;&#xD;&#xA;    use Illuminate\Foundation\Auth\ThrottlesLogins;&#xD;&#xA;    use Illuminate\Foundation\Auth\AuthenticatesAndRegistersUsers;&#xD;&#xA;    &#xD;&#xA;    class AuthController extends Controller&#xD;&#xA;    {&#xD;&#xA;        /*&#xD;&#xA;        |--------------------------------------------------------------------------&#xD;&#xA;        | Registration & Login Controller&#xD;&#xA;        |--------------------------------------------------------------------------&#xD;&#xA;        |&#xD;&#xA;        | This controller handles the registration of new users, as well as the&#xD;&#xA;        | authentication of existing users. By default, this controller uses&#xD;&#xA;        | a simple trait to add these behaviors. Why don't you explore it?&#xD;&#xA;        |&#xD;&#xA;        */&#xD;&#xA;    &#xD;&#xA;        use AuthenticatesAndRegistersUsers, ThrottlesLogins;&#xD;&#xA;    &#xD;&#xA;        /**&#xD;&#xA;         * Where to redirect users after login / registration.&#xD;&#xA;         *&#xD;&#xA;         * @var string&#xD;&#xA;         */&#xD;&#xA;        protected $redirectTo = '/';&#xD;&#xA;    &#xD;&#xA;        /**&#xD;&#xA;         * Create a new authentication controller instance.&#xD;&#xA;         *&#xD;&#xA;         * @return void&#xD;&#xA;         */&#xD;&#xA;        public function __construct()&#xD;&#xA;        {&#xD;&#xA;            $this->middleware($this->guestMiddleware(), ['except' => 'logout']);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /**&#xD;&#xA;         * Get a validator for an incoming registration request.&#xD;&#xA;         *&#xD;&#xA;         * @param  array  $data&#xD;&#xA;         * @return \Illuminate\Contracts\Validation\Validator&#xD;&#xA;         */&#xD;&#xA;        protected function validator(array $data)&#xD;&#xA;        {&#xD;&#xA;            return Validator::make($data, [&#xD;&#xA;                'name' => 'required|max:255',&#xD;&#xA;                'email' => 'required|email|max:255|unique:users',&#xD;&#xA;                'password' => 'required|min:6|confirmed',&#xD;&#xA;            ]);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /**&#xD;&#xA;         * Create a new user instance after a valid registration.&#xD;&#xA;         *&#xD;&#xA;         * @param  array  $data&#xD;&#xA;         * @return User&#xD;&#xA;         */&#xD;&#xA;        protected function create(array $data)&#xD;&#xA;        {&#xD;&#xA;            return User::create([&#xD;&#xA;                'name' => $data['name'],&#xD;&#xA;                'email' => $data['email'],&#xD;&#xA;                'password' => bcrypt($data['password']),&#xD;&#xA;            ]);&#xD;&#xA;        }&#xD;&#xA;    }"
7924267293037309483,72,5,"    <html>&#xD;&#xA;      <head>&#xD;&#xA;        <script type=""text/javascript"" src=""https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js""></script>&#xD;&#xA;        <style type=""text/css"">&#xD;&#xA;          div#container_notlike, div#container_like {&#xD;&#xA;            display: none;&#xD;&#xA;          }&#xD;&#xA;        </style>&#xD;&#xA;      </head>&#xD;&#xA;      <body>&#xD;&#xA;        <div id=""fb-root""></div>&#xD;&#xA;        <script>&#xD;&#xA;            window.fbAsyncInit = function () {&#xD;&#xA;                FB.init({&#xD;&#xA;                    appId: 'YOUR_APP_ID', // App ID&#xD;&#xA;                    channelUrl: 'http(s)://YOUR_APP_DOMAIN/channel.html', // Channel File&#xD;&#xA;                    status: true, // check login status&#xD;&#xA;                    cookie: true, // enable cookies to allow the server to access the session&#xD;&#xA;                    xfbml: true  // parse XFBML&#xD;&#xA;                });&#xD;&#xA;                FB.getLoginStatus(function (response) {&#xD;&#xA;                    var page_id = ""YOUR_PAGE_ID"";&#xD;&#xA;                    if (response && response.authResponse) {&#xD;&#xA;                        var user_id = response.authResponse.userID;&#xD;&#xA;                        var fql_query = ""SELECT uid FROM page_fan WHERE page_id = "" + page_id + ""and uid="" + user_id;&#xD;&#xA;                        FB.Data.query(fql_query).wait(function (rows) {&#xD;&#xA;                            if (rows.length == 1 && rows[0].uid == user_id) {&#xD;&#xA;                                console.log(""LIKE"");&#xD;&#xA;                                $('#container_like').show();&#xD;&#xA;                            } else {&#xD;&#xA;                                console.log(""NO LIKEY"");&#xD;&#xA;                                $('#container_notlike').show();&#xD;&#xA;                            }&#xD;&#xA;                        });&#xD;&#xA;                    } else {&#xD;&#xA;                        FB.login(function (response) {&#xD;&#xA;                            if (response && response.authResponse) {&#xD;&#xA;                                var user_id = response.authResponse.userID;&#xD;&#xA;                                var fql_query = ""SELECT uid FROM page_fan WHERE page_id = "" + page_id + ""and uid="" + user_id;&#xD;&#xA;                                FB.Data.query(fql_query).wait(function (rows) {&#xD;&#xA;                                    if (rows.length == 1 && rows[0].uid == user_id) {&#xD;&#xA;                                        console.log(""LIKE"");&#xD;&#xA;                                        $('#container_like').show();&#xD;&#xA;                                    } else {&#xD;&#xA;                                        console.log(""NO LIKEY"");&#xD;&#xA;                                        $('#container_notlike').show();&#xD;&#xA;                                    }&#xD;&#xA;                                });&#xD;&#xA;                            } else {&#xD;&#xA;                                console.log(""NO LIKEY"");&#xD;&#xA;                                $('#container_notlike').show();&#xD;&#xA;                            }&#xD;&#xA;                        }, { scope: 'user_likes' });&#xD;&#xA;                    }&#xD;&#xA;                });&#xD;&#xA;            };&#xD;&#xA;            // Load the SDK Asynchronously&#xD;&#xA;            (function (d) {&#xD;&#xA;                var js, id = 'facebook-jssdk'; if (d.getElementById(id)) { return; }&#xD;&#xA;                js = d.createElement('script'); js.id = id; js.async = true;&#xD;&#xA;                js.src = ""//connect.facebook.net/en_US/all.js"";&#xD;&#xA;                d.getElementsByTagName('head')[0].appendChild(js);&#xD;&#xA;            }(document));&#xD;&#xA;        </script>&#xD;&#xA;        <div id=""container_notlike"">&#xD;&#xA;          YOU DON'T LIKE ME :(&#xD;&#xA;        </div>&#xD;&#xA;        <div id=""container_like"">&#xD;&#xA;          YOU LIKE ME :)&#xD;&#xA;        </div>&#xD;&#xA;      </body>&#xD;&#xA;    </html>"
-6575378853826798377,73,5,"        import android.view.GestureDetector;&#xD;&#xA;           import android.view.GestureDetector.SimpleOnGestureListener;&#xD;&#xA;           import android.view.MotionEvent;&#xD;&#xA;           import android.view.View;&#xD;&#xA;           import android.view.View.OnTouchListener;&#xD;&#xA;    &#xD;&#xA;       public class OnSwipeTouchListener implements OnTouchListener {&#xD;&#xA;    &#xD;&#xA;       private final GestureDetector gestureDetector;&#xD;&#xA;    &#xD;&#xA;        public OnSwipeTouchListener (Context ctx){&#xD;&#xA;            gestureDetector = new GestureDetector(ctx, new GestureListener());&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public boolean onTouch(View v, MotionEvent event) {&#xD;&#xA;            return gestureDetector.onTouchEvent(event);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private final class GestureListener extends SimpleOnGestureListener {&#xD;&#xA;    &#xD;&#xA;            private static final int SWIPE_THRESHOLD = 100;&#xD;&#xA;            private static final int SWIPE_VELOCITY_THRESHOLD = 100;&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            public boolean onDown(MotionEvent e) {&#xD;&#xA;                return true;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            public boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX, float velocityY) {&#xD;&#xA;                boolean result = false;&#xD;&#xA;                try {&#xD;&#xA;                    float diffY = e2.getY() - e1.getY();&#xD;&#xA;                    float diffX = e2.getX() - e1.getX();&#xD;&#xA;                    if (Math.abs(diffX) > Math.abs(diffY)) {&#xD;&#xA;                        if (Math.abs(diffX) > SWIPE_THRESHOLD && Math.abs(velocityX) > SWIPE_VELOCITY_THRESHOLD) {&#xD;&#xA;                            if (diffX > 0) {&#xD;&#xA;                                onSwipeRight();&#xD;&#xA;                            } else {&#xD;&#xA;                                onSwipeLeft();&#xD;&#xA;                            }&#xD;&#xA;                        }&#xD;&#xA;                        result = true;&#xD;&#xA;                    } &#xD;&#xA;                    else if (Math.abs(diffY) > SWIPE_THRESHOLD && Math.abs(velocityY) > SWIPE_VELOCITY_THRESHOLD) {&#xD;&#xA;                            if (diffY > 0) {&#xD;&#xA;                                onSwipeBottom();&#xD;&#xA;                            } else {&#xD;&#xA;                                onSwipeTop();&#xD;&#xA;                            }&#xD;&#xA;                        }&#xD;&#xA;                        result = true;&#xD;&#xA;    &#xD;&#xA;                } catch (Exception exception) {&#xD;&#xA;                    exception.printStackTrace();&#xD;&#xA;                }&#xD;&#xA;                return result;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void onSwipeRight() {&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void onSwipeLeft() {&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void onSwipeTop() {&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void onSwipeBottom() {&#xD;&#xA;        }&#xD;&#xA;    }"
3912357046976998076,73,5,"    body {&#xD;&#xA;      background-color: #fff;&#xD;&#xA;      color: #333;&#xD;&#xA;      font-family: verdana, arial, helvetica, sans-serif;&#xD;&#xA;      font-size: 13px;&#xD;&#xA;      line-height: 18px;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    p, ol, ul, td {&#xD;&#xA;      font-family: verdana, arial, helvetica, sans-serif;&#xD;&#xA;      font-size: 13px;&#xD;&#xA;      line-height: 18px;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    pre {&#xD;&#xA;      background-color: #eee;&#xD;&#xA;      padding: 10px;&#xD;&#xA;      font-size: 11px;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    a {&#xD;&#xA;      color: #000;&#xD;&#xA;    &#xD;&#xA;      &:visited {&#xD;&#xA;        color: #666;&#xD;&#xA;      }&#xD;&#xA;    &#xD;&#xA;      &:hover {&#xD;&#xA;        color: #fff;&#xD;&#xA;        background-color: #000;&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    div {&#xD;&#xA;      &.field, &.actions {&#xD;&#xA;        margin-bottom: 10px;&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    #notice {&#xD;&#xA;      color: green;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .field_with_errors {&#xD;&#xA;      padding: 2px;&#xD;&#xA;      background-color: red;&#xD;&#xA;      display: table;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    #error_explanation {&#xD;&#xA;      width: 450px;&#xD;&#xA;      border: 2px solid red;&#xD;&#xA;      padding: 7px;&#xD;&#xA;      padding-bottom: 0;&#xD;&#xA;      margin-bottom: 20px;&#xD;&#xA;      background-color: #f0f0f0;&#xD;&#xA;    &#xD;&#xA;      h2 {&#xD;&#xA;        text-align: left;&#xD;&#xA;        font-weight: bold;&#xD;&#xA;        padding: 5px 5px 5px 15px;&#xD;&#xA;        font-size: 12px;&#xD;&#xA;        margin: -7px;&#xD;&#xA;        margin-bottom: 0px;&#xD;&#xA;        background-color: #c00;&#xD;&#xA;        color: #fff;&#xD;&#xA;      }&#xD;&#xA;    &#xD;&#xA;      ul li {&#xD;&#xA;        font-size: 12px;&#xD;&#xA;        list-style: square;&#xD;&#xA;      }&#xD;&#xA;    }"
-3484848521948378006,74,5,"    import java.awt.*;&#xD;&#xA;    import java.util.List;&#xD;&#xA;    import java.util.ArrayList;&#xD;&#xA;    import javax.swing.*;&#xD;&#xA;    import javax.swing.border.*;&#xD;&#xA;    import javax.swing.table.*;&#xD;&#xA;    &#xD;&#xA;    public class TableComboBoxByRow extends JPanel&#xD;&#xA;    {&#xD;&#xA;    	List<String[]> editorData = new ArrayList<String[]>(3);&#xD;&#xA;    &#xD;&#xA;    	public TableComboBoxByRow()&#xD;&#xA;    	{&#xD;&#xA;    		setLayout( new BorderLayout() );&#xD;&#xA;    &#xD;&#xA;    		// Create the editorData to be used for each row&#xD;&#xA;    &#xD;&#xA;    		editorData.add( new String[]{ ""Red"", ""Blue"", ""Green"" } );&#xD;&#xA;    		editorData.add( new String[]{ ""Circle"", ""Square"", ""Triangle"" } );&#xD;&#xA;    		editorData.add( new String[]{ ""Apple"", ""Orange"", ""Banana"" } );&#xD;&#xA;    &#xD;&#xA;    		//  Create the table with default data&#xD;&#xA;    &#xD;&#xA;    		Object[][] data =&#xD;&#xA;    		{&#xD;&#xA;    			{""Color"", ""Red""},&#xD;&#xA;    			{""Shape"", ""Square""},&#xD;&#xA;    			{""Fruit"", ""Banana""},&#xD;&#xA;    			{""Plain"", ""Text""}&#xD;&#xA;    		};&#xD;&#xA;    		String[] columnNames = {""Type"",""Value""};&#xD;&#xA;    &#xD;&#xA;    		DefaultTableModel model = new DefaultTableModel(data, columnNames);&#xD;&#xA;    		JTable table = new JTable(model)&#xD;&#xA;    		{&#xD;&#xA;    			//  Determine editor to be used by row&#xD;&#xA;    			public TableCellEditor getCellEditor(int row, int column)&#xD;&#xA;    			{&#xD;&#xA;    				int modelColumn = convertColumnIndexToModel( column );&#xD;&#xA;    &#xD;&#xA;    				if (modelColumn == 1 && row < 3)&#xD;&#xA;    				{&#xD;&#xA;    					JComboBox<String> comboBox1 = new JComboBox<String>( editorData.get(row));&#xD;&#xA;    					return new DefaultCellEditor( comboBox1 );&#xD;&#xA;    				}&#xD;&#xA;    				else&#xD;&#xA;    					return super.getCellEditor(row, column);&#xD;&#xA;    			}&#xD;&#xA;    		};&#xD;&#xA;    &#xD;&#xA;    		JScrollPane scrollPane = new JScrollPane( table );&#xD;&#xA;    		add( scrollPane );&#xD;&#xA;    	}&#xD;&#xA;    	private static void createAndShowUI()&#xD;&#xA;    	{&#xD;&#xA;    		JFrame frame = new JFrame(""Table Combo Box by Row"");&#xD;&#xA;    		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;&#xA;    		frame.add( new TableComboBoxByRow() );&#xD;&#xA;    		frame.setSize(200, 200);&#xD;&#xA;    		frame.setLocationByPlatform( true );&#xD;&#xA;    		frame.setVisible( true );&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public static void main(String[] args)&#xD;&#xA;    	{&#xD;&#xA;    		EventQueue.invokeLater(new Runnable()&#xD;&#xA;    		{&#xD;&#xA;    			public void run()&#xD;&#xA;    			{&#xD;&#xA;    				createAndShowUI();&#xD;&#xA;    			}&#xD;&#xA;    		});&#xD;&#xA;    	}&#xD;&#xA;    }"
6776204375154982743,74,5,"    ID	time	info	log&#xD;&#xA;    121	12:26:35.318	new Auth	Auth successfull! dc= 2 mtproto.js:479:15&#xD;&#xA;    127	12:26:35.325	CALL	=>> API call help.getNearestDc Object {  } Object { dcID: 2, createNetworker: true } mtproto.js:749:4&#xD;&#xA;    128	12:26:35.327	enc-START	[invokeWithLayer] 45 mtproto.js:753:7&#xD;&#xA;    168	12:26:35.551	SEND	POST XHR http://149.154.167.51/apiw1 [HTTP/1.1 200 OK 708ms]&#xD;&#xA;    189	12:26:36.522	msg-r	<<=m [msg_container] Object { _: ""msg_container"", messages: Array[2] } mtproto.js:1452:5&#xD;&#xA;    190	12:26:36.523	msg-r	<<=m [message] Object { _: ""message"", msg_id: ""6242200678614200321"", seqno: 1, bytes: 28, body: Object } mtproto.js:1452:5&#xD;&#xA;    191	12:26:36.525	msg-r	<<=m [new_session_created] Object { _: ""new_session_created"", first_msg_id: ""6242200671500883244"", unique_id: ""645797764649391412"", server_salt: ""17212767594123551779"" } mtproto.js:1452:5&#xD;&#xA;    192	12:26:36.526	msg-r	<<=m [message] Object { _: ""message"", msg_id: ""6242200678630513665"", seqno: 3, bytes: 28, body: Object } mtproto.js:1452:5&#xD;&#xA;    193	12:26:36.528	msg-r	<<=m [rpc_result] Object { _: ""rpc_result"", req_msg_id: ""6242200671500883244"", result: Object } mtproto.js:1452:5&#xD;&#xA;    257	12:26:39.239	new Auth	Auth successfull! dc= 4 mtproto.js:479:15&#xD;&#xA;    270	12:26:59.606	CALL	=>> API call auth.sendCode Object { phone_number: ""2348022002298"", sms_type: 5, api_id: 38665, api_hash: ""880c7847a517fc455d7d54731e90ad4e"", lang_code: ""en-US"" } Object { dcID: 2, createNetworker: true } mtproto.js:749:4&#xD;&#xA;    321	12:27:00.048	SEND	POST XHR http://149.154.167.51/apiw1 [HTTP/1.1 200 OK 422ms]&#xD;&#xA;    328	12:27:00.981	msg-r	<<=m [rpc_result] Object { _: ""rpc_result"", req_msg_id: ""6242200779464550396"", result: Object } mtproto.js:1452:5&#xD;&#xA;    331	12:27:00.986	CALL	=>> API call auth.sendCode Object { phone_number: ""2348022002298"", sms_type: 5, api_id: 38665, api_hash: ""880c7847a517fc455d7d54731e90ad4e"", lang_code: ""en-US"" } Object { dcID: ""4"", createNetworker: true, resultType: ""auth.SentCode"", messageID: ""6242200779464550396"" } mtproto.js:749:4&#xD;&#xA;    332	12:27:00.987	enc-START	[invokeWithLayer] 45 mtproto.js:753:7&#xD;&#xA;    377	12:27:01.288	SEND	POST XHR http://149.154.167.91/apiw1 [HTTP/1.1 200 OK 321ms]&#xD;&#xA;    398	12:27:02.170	msg-r	<<=m [msg_container] Object { _: ""msg_container"", messages: Array[2] } mtproto.js:1452:5&#xD;&#xA;    399	12:27:02.171	msg-r	<<=m [message] Object { _: ""message"", msg_id: ""6242200787684582401"", seqno: 1, bytes: 28, body: Object } mtproto.js:1452:5&#xD;&#xA;    400	12:27:02.172	msg-r	<<=m [new_session_created] Object { _: ""new_session_created"", first_msg_id: ""6242200784556418516"", unique_id: ""13396961033572361155"", server_salt: ""7076519506215495914"" } mtproto.js:1452:5&#xD;&#xA;    401	12:27:02.173	msg-r	<<=m [message] Object { _: ""message"", msg_id: ""6242200787775901697"", seqno: 3, bytes: 48, body: Object } mtproto.js:1452:5&#xD;&#xA;    402	12:27:02.174	msg-r	<<=m [rpc_result] Object { _: ""rpc_result"", req_msg_id: ""6242200784556418516"", result: Object } mtproto.js:1452:5&#xD;&#xA;    407	12:27:02.344	SEND	POST XHR http://149.154.167.91/apiw1 [HTTP/1.1 200 OK 25154ms]&#xD;&#xA;    414	12:27:03.068	msg-r	<<=m [rpc_result] Object { _: ""rpc_result"", req_msg_id: ""6242200779464550396"" } mtproto.js:1452:5&#xD;&#xA;    420	12:27:15.639	CALL	=>> API call auth.sendSms Object { phone_number: ""2348022002298"", phone_code_hash: ""696b5befd8e809de81"" } Object { dcID: ""4"", createNetworker: true, resultType: ""auth.SentCode"", messageID: ""6242200784556418516"" } mtproto.js:749:4&#xD;&#xA;    468	12:27:15.924	SEND	POST XHR http://149.154.167.91/apiw1 [HTTP/1.1 200 OK 457ms]&#xD;&#xA;    475	12:27:17.154	msg-r	<<=m [rpc_result] Object { _: ""rpc_result"", req_msg_id: ""6242200848242727644"", result: true } mtproto.js:1452:5&#xD;&#xA;    482	12:27:27.511	msg-r	<<=m [rpc_result] Object { _: ""rpc_result"", req_msg_id: ""6242200848242727644"" } mtproto.js:1452:5&#xD;&#xA;    505	12:27:31.003	SEND	POST XHR http://149.154.167.51/apiw1 [HTTP/1.1 200 OK 25161ms]&#xD;&#xA;    511	12:27:40.133	CALL	=>> API call auth.signIn Object { phone_number: ""2348022002298"", phone_code_hash: ""696b5befd8e809de81"", phone_code: ""26914"" } Object { dcID: ""4"", createNetworker: true, resultType: ""Bool"", messageID: ""6242200848242727644"" } mtproto.js:749:4&#xD;&#xA;    560	12:27:40.454	SEND	POST XHR http://149.154.167.91/apiw1 [HTTP/1.1 200 OK 756ms]&#xD;&#xA;    567	12:27:41.223	msg-r	<<=m [msg_container] Object { _: ""msg_container"", messages: Array[2] } mtproto.js:1452:5&#xD;&#xA;    568	12:27:41.224	msg-r	<<=m [message] Object { _: ""message"", msg_id: ""6242200956100910081"", seqno: 7, bytes: 80, body: Object } mtproto.js:1452:5&#xD;&#xA;    569	12:27:41.225	msg-r	<<=m [rpc_result] Object { _: ""rpc_result"", req_msg_id: ""6242200954555850604"", result: Object } mtproto.js:1452:5&#xD;&#xA;    570	12:27:41.226	msg-r	<<=m [message] Object { _: ""message"", msg_id: ""6242200956751929345"", seqno: 9, bytes: 88, body: Object } mtproto.js:1452:5&#xD;&#xA;    571	12:27:41.227	msg-r	<<=m [updates] Object { _: ""updates"", updates: Array[1], users: Array[0], chats: Array[0], date: 1453375666, seq: 2 } mtproto.js:1452:5&#xD;&#xA;    579	12:27:41.758	CALL	=>> API call updates.getState Object {  } Object { noErrorBox: true } mtproto.js:749:4&#xD;&#xA;    586	12:27:41.842	CALL	=>> API call account.updateStatus Object { offline: false } Object { noErrorBox: true } mtproto.js:749:4&#xD;&#xA;    594	12:27:41.850	CALL	=>> API call messages.getDialogs Object { offset_date: 0, offset_id: 0, offset_peer: Object, limit: 20 } Object { timeout: 300 } mtproto.js:749:4&#xD;&#xA;    655	12:27:42.965	CALL	=>> API call messages.getAllStickers Object { hash: """" } Object {  } mtproto.js:749:4&#xD;&#xA;    696	12:27:43.920	SEND	POST XHR http://149.154.167.91/apiw1 [HTTP/1.1 200 OK 908ms]&#xD;&#xA;    712	12:27:44.613	SEND	POST XHR http://149.154.167.91/apiw1 [HTTP/1.1 200 OK 303ms]&#xD;&#xA;    727	12:27:46.488	msg-r	<<=m [msg_container] Object { _: ""msg_container"", messages: Array[3] } mtproto.js:1452:5&#xD;&#xA;    728	12:27:46.489	msg-r	<<=m [message] Object { _: ""message"", msg_id: ""6242200970862778369"", seqno: 11, bytes: 36, body: Object } mtproto.js:1452:5&#xD;&#xA;    729	12:27:46.489	msg-r	<<=m [rpc_result] Object { _: ""rpc_result"", req_msg_id: ""6242200960159395644"", result: Object } mtproto.js:1452:5&#xD;&#xA;    730	12:27:46.490	msg-r	<<=m [message] Object { _: ""message"", msg_id: ""6242200970891641857"", seqno: 13, bytes: 776, body: Object } mtproto.js:1452:5&#xD;&#xA;    731	12:27:46.492	msg-r	<<=m [rpc_result] Object { _: ""rpc_result"", req_msg_id: ""6242200960356118244"", result: Object } mtproto.js:1452:5&#xD;&#xA;    732	12:27:46.494	msg-r	<<=m [message] Object { _: ""message"", msg_id: ""6242200970897958913"", seqno: 15, bytes: 16, body: Object } mtproto.js:1452:5&#xD;&#xA;    733	12:27:46.495	msg-r	<<=m [rpc_result] Object { _: ""rpc_result"", req_msg_id: ""6242200960337591900"", result: true } mtproto.js:1452:5&#xD;&#xA;    740	12:27:46.567	msg-r	<<=m [msg_container] Object { _: ""msg_container"", messages: Array[4] } mtproto.js:1452:5&#xD;&#xA;    741	12:27:46.568	msg-r	<<=m [message] Object { _: ""message"", msg_id: ""6242200970862778369"", seqno: 11, bytes: 36, body: Object } mtproto.js:1452:5&#xD;&#xA;    742	12:27:46.569	msg-r	<<=m [rpc_result] Object { _: ""rpc_result"", req_msg_id: ""6242200960159395644"" } mtproto.js:1452:5&#xD;&#xA;    743	12:27:46.569	msg-r	<<=m [message] Object { _: ""message"", msg_id: ""6242200970891641857"", seqno: 13, bytes: 776, body: Object } mtproto.js:1452:5&#xD;&#xA;    744	12:27:46.570	msg-r	<<=m [rpc_result] Object { _: ""rpc_result"", req_msg_id: ""6242200960356118244"" } mtproto.js:1452:5&#xD;&#xA;    745	12:27:46.571	msg-r	<<=m [message] Object { _: ""message"", msg_id: ""6242200970897958913"", seqno: 15, bytes: 16, body: Object } mtproto.js:1452:5&#xD;&#xA;    746	12:27:46.572	msg-r	<<=m [rpc_result] Object { _: ""rpc_result"", req_msg_id: ""6242200960337591900"" } mtproto.js:1452:5&#xD;&#xA;    747	12:27:46.573	msg-r	<<=m [message] Object { _: ""message"", msg_id: ""6242200973791209473"", seqno: 17, bytes: 76, body: Object } mtproto.js:1452:5&#xD;&#xA;    748	12:27:46.574	msg-r	<<=m [rpc_result] Object { _: ""rpc_result"", req_msg_id: ""6242200964892679524"", result: Object } mtproto.js:1452:5&#xD;&#xA;    754	12:27:46.584	CALL	=>> API call messages.getStickerSet Object { stickerset: Object } Object {  } mtproto.js:749:4&#xD;&#xA;    811	12:27:47.346	SEND	POST XHR http://149.154.167.91/apiw1 [HTTP/1.1 200 OK 539ms]&#xD;&#xA;    818	12:27:48.175	msg-r	<<=m [rpc_result] Object { _: ""rpc_result"", req_msg_id: ""6242200981275507620"", result: Object } mtproto.js:1452:5&#xD;&#xA;    857	12:27:49.351	SEND	POST XHR http://149.154.167.91/apiw1 [HTTP/1.1 200 OK 25141ms]&#xD;&#xA;    864	12:27:57.219	msg-r	<<=m [msgs_ack] Object { _: ""msgs_ack"", msg_ids: Array[0] } mtproto.js:1452:5&#xD;&#xA;    870	12:28:04.673	CALL	=>> API call messages.readHistory Object { peer: Object, max_id: 0 } Object {  } mtproto.js:749:4&#xD;&#xA;    908	12:28:04.860	CALL	=>> API call messages.getHistory Object { peer: Object, offset_id: 16, add_offset: 0, limit: 20 } Object { timeout: 300, noErrorBox: true } mtproto.js:749:4&#xD;&#xA;    922	12:28:05.713	SEND	POST XHR http://149.154.167.91/apiw1 [HTTP/1.1 200 OK 367ms]&#xD;&#xA;    929	12:28:06.096	msg-r	<<=m [rpc_result] Object { _: ""rpc_result"", req_msg_id: ""6242201058769372356"", result: Object } mtproto.js:1452:5&#xD;&#xA;    936	12:28:15.702	msg-r	<<=m [rpc_result] Object { _: ""rpc_result"", req_msg_id: ""6242201058769372356"" } mtproto.js:1452:5&#xD;&#xA;    977	12:28:16.122	SEND	POST XHR http://149.154.167.91/apiw1 [HTTP/1.1 200 OK 25170ms]&#xD;&#xA;    983	12:28:26.637	CALL	=>> API call account.updateStatus Object { offline: true } Object { noErrorBox: true } mtproto.js:749:4&#xD;&#xA;    1016	12:28:26.660	SEND	POST XHR http://149.154.167.91/apiw1 [HTTP/1.1 200 OK 302ms]&#xD;&#xA;    1023	12:28:27.062	msg-r	<<=m [rpc_result] Object { _: ""rpc_result"", req_msg_id: ""6242201153183272948"", result: true } mtproto.js:1452:5&#xD;&#xA;    1030	12:28:41.985	msg-r	<<=m [rpc_result] Object { _: ""rpc_result"", req_msg_id: ""6242201153183272948"" } mtproto.js:1452:5&#xD;&#xA;    1071	12:28:42.421	SEND	POST XHR http://149.154.167.91/apiw1 [HTTP/1.1 200 OK 25165ms]"
1380020306243206706,74,5,"    jQuery.fn.table2CSV = function (options) {&#xD;&#xA;        var options = jQuery.extend({&#xD;&#xA;            separator: ',',&#xD;&#xA;            header: [],&#xD;&#xA;            delivery: 'popup' // popup, value&#xD;&#xA;        },&#xD;&#xA;        options);&#xD;&#xA;    &#xD;&#xA;        var csvData = [];&#xD;&#xA;        var headerArr = [];&#xD;&#xA;        var el = this;&#xD;&#xA;    &#xD;&#xA;        //header&#xD;&#xA;        var numCols = options.header.length;&#xD;&#xA;        var tmpRow = []; // construct header avalible array&#xD;&#xA;    &#xD;&#xA;        if (numCols > 0) {&#xD;&#xA;            for (var i = 0; i < numCols; i++) {&#xD;&#xA;                tmpRow[tmpRow.length] = formatData(options.header[i]);&#xD;&#xA;            }&#xD;&#xA;        } else {&#xD;&#xA;            $(el).filter(':visible').find('th').each(function () {&#xD;&#xA;                if ($(this).css('display') != 'none') tmpRow[tmpRow.length] = formatData($(this).html());&#xD;&#xA;            });&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        row2CSV(tmpRow);&#xD;&#xA;    &#xD;&#xA;        // actual data&#xD;&#xA;        $(el).find('tr').each(function () {&#xD;&#xA;            var tmpRow = [];&#xD;&#xA;            $(this).filter(':visible').find('td').each(function () {&#xD;&#xA;                if ($(this).css('display') != 'none') tmpRow[tmpRow.length] = formatData($(this).html());&#xD;&#xA;            });&#xD;&#xA;            row2CSV(tmpRow);&#xD;&#xA;        });&#xD;&#xA;        if (options.delivery == 'popup') {&#xD;&#xA;            var mydata = csvData.join('\n');&#xD;&#xA;            return popup(mydata);&#xD;&#xA;        } else {&#xD;&#xA;            var mydata = csvData.join('\n');&#xD;&#xA;            return mydata;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        function row2CSV(tmpRow) {&#xD;&#xA;            var tmp = tmpRow.join('') // to remove any blank rows&#xD;&#xA;            // alert(tmp);&#xD;&#xA;            if (tmpRow.length > 0 && tmp != '') {&#xD;&#xA;                var mystr = tmpRow.join(options.separator);&#xD;&#xA;                csvData[csvData.length] = mystr;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        function formatData(input) {&#xD;&#xA;            // replace "" with â€œ&#xD;&#xA;            var regexp = new RegExp(/[""]/g);&#xD;&#xA;            var output = input.replace(regexp, ""â€œ"");&#xD;&#xA;            //HTML&#xD;&#xA;            var regexp = new RegExp(/\<[^\<]+\>/g);&#xD;&#xA;            var output = output.replace(regexp, """");&#xD;&#xA;            if (output == """") return '';&#xD;&#xA;            return '""' + output + '""';&#xD;&#xA;        }&#xD;&#xA;        function popup(data) {&#xD;&#xA;            var generator = window.open('', 'csv', 'height=400,width=600');&#xD;&#xA;            generator.document.write('<html><head><title>CSV</title>');&#xD;&#xA;            generator.document.write('</head><body >');&#xD;&#xA;            generator.document.write('<textArea cols=70 rows=15 wrap=""off"" >');&#xD;&#xA;            generator.document.write(data);&#xD;&#xA;            generator.document.write('</textArea>');&#xD;&#xA;            generator.document.write('</body></html>');&#xD;&#xA;            generator.document.close();&#xD;&#xA;            return true;&#xD;&#xA;        }&#xD;&#xA;    };"
6860669719297625812,75,5,"    public class SimpleThreads {&#xD;&#xA;        // Display a message, preceded by&#xD;&#xA;        // the name of the current thread&#xD;&#xA;        static void threadMessage(String message) {&#xD;&#xA;            String threadName =&#xD;&#xA;                Thread.currentThread().getName();&#xD;&#xA;            System.out.format(""%s: %s%n"",&#xD;&#xA;                              threadName,&#xD;&#xA;                              message);&#xD;&#xA;        }&#xD;&#xA;        private static class MessageLoop&#xD;&#xA;            implements Runnable {&#xD;&#xA;            public void run() {&#xD;&#xA;                String importantInfo[] = {&#xD;&#xA;                    ""Mares eat oats"",&#xD;&#xA;                    ""Does eat oats"",&#xD;&#xA;                    ""Little lambs eat ivy"",&#xD;&#xA;                    ""A kid will eat ivy too""&#xD;&#xA;                };&#xD;&#xA;                try {&#xD;&#xA;                    for (int i = 0;&#xD;&#xA;                         i < importantInfo.length;&#xD;&#xA;                         i++) {&#xD;&#xA;                        // Pause for 4 seconds&#xD;&#xA;                        Thread.sleep(4000);&#xD;&#xA;                        // Print a message&#xD;&#xA;                        threadMessage(importantInfo[i]);&#xD;&#xA;                    }&#xD;&#xA;                } catch (InterruptedException e) {&#xD;&#xA;                    threadMessage(""I wasn't done!"");&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        public static void main(String args[])&#xD;&#xA;            throws InterruptedException {&#xD;&#xA;            // Delay, in milliseconds before&#xD;&#xA;            // we interrupt MessageLoop&#xD;&#xA;            // thread (default one hour).&#xD;&#xA;            long patience = 1000 * 60 * 60;&#xD;&#xA;            // If command line argument&#xD;&#xA;            // present, gives patience&#xD;&#xA;            // in seconds.&#xD;&#xA;            if (args.length > 0) {&#xD;&#xA;                try {&#xD;&#xA;                    patience = Long.parseLong(args[0]) * 1000;&#xD;&#xA;                } catch (NumberFormatException e) {&#xD;&#xA;                    System.err.println(""Argument must be an integer."");&#xD;&#xA;                    System.exit(1);&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;            threadMessage(""Starting MessageLoop thread"");&#xD;&#xA;            long startTime = System.currentTimeMillis();&#xD;&#xA;            Thread t = new Thread(new MessageLoop());&#xD;&#xA;            t.start();&#xD;&#xA;            threadMessage(""Waiting for MessageLoop thread to finish"");&#xD;&#xA;            // loop until MessageLoop&#xD;&#xA;            // thread exits&#xD;&#xA;            while (t.isAlive()) {&#xD;&#xA;                threadMessage(""Still waiting..."");&#xD;&#xA;                // Wait maximum of 1 second&#xD;&#xA;                // for MessageLoop thread&#xD;&#xA;                // to finish.&#xD;&#xA;                t.join(1000);&#xD;&#xA;                if (((System.currentTimeMillis() - startTime) > patience)&#xD;&#xA;                      && t.isAlive()) {&#xD;&#xA;                    threadMessage(""Tired of waiting!"");&#xD;&#xA;                    t.interrupt();&#xD;&#xA;                    // Shouldn't be long now&#xD;&#xA;                    // -- wait indefinitely&#xD;&#xA;                    t.join();&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;            threadMessage(""Finally!"");&#xD;&#xA;        }&#xD;&#xA;    }"
-5767330620164557894,76,5,"    <?php&#xD;&#xA;     //load and connect to MySQL database stuff&#xD;&#xA;     require(""config.inc.php"");&#xD;&#xA;    if (!empty($_POST)) {&#xD;&#xA;    //gets user's info based off of a username.&#xD;&#xA;    $query = "" &#xD;&#xA;            SELECT &#xD;&#xA;                id, &#xD;&#xA;                username, &#xD;&#xA;                password&#xD;&#xA;            FROM users &#xD;&#xA;            WHERE &#xD;&#xA;                username = :username &#xD;&#xA;        "";&#xD;&#xA;    &#xD;&#xA;    $query_params = array(&#xD;&#xA;        ':username' => $_POST['username']&#xD;&#xA;    );&#xD;&#xA;    &#xD;&#xA;    try {&#xD;&#xA;        $stmt   = $db->prepare($query);&#xD;&#xA;        $result = $stmt->execute($query_params);&#xD;&#xA;    }&#xD;&#xA;    catch (PDOException $ex) {&#xD;&#xA;        // For testing, you could use a die and message. &#xD;&#xA;        //die(""Failed to run query: "" . $ex->getMessage());&#xD;&#xA;        &#xD;&#xA;        //or just use this use this one to product JSON data:&#xD;&#xA;        $response[""success""] = 0;&#xD;&#xA;        $response[""message""] = ""Database Error1. Please Try Again!"";&#xD;&#xA;        die(json_encode($response));&#xD;&#xA;        &#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    //This will be the variable to determine whether or not the user's information is correct.&#xD;&#xA;    //we initialize it as false.&#xD;&#xA;    $validated_info = false;&#xD;&#xA;    &#xD;&#xA;    //fetching all the rows from the query&#xD;&#xA;    $row = $stmt->fetch();&#xD;&#xA;    if ($row) {&#xD;&#xA;        //if we encrypted the password, we would unencrypt it here, but in our          case we just&#xD;&#xA;        //compare the two passwords&#xD;&#xA;        if ($_POST['password'] === $row['password']) {&#xD;&#xA;            $login_ok = true;&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    // If the user logged in successfully, then we send them to the private members-only page &#xD;&#xA;    // Otherwise, we display a login failed message and show the login form again &#xD;&#xA;    if ($login_ok) {&#xD;&#xA;        $response[""success""] = 1;&#xD;&#xA;        $response[""message""] = ""Login successful!"";&#xD;&#xA;        die(json_encode($response));&#xD;&#xA;    } else {&#xD;&#xA;        $response[""success""] = 0;&#xD;&#xA;        $response[""message""] = ""Invalid Credentials!"";&#xD;&#xA;        die(json_encode($response));&#xD;&#xA;       }&#xD;&#xA;       } else {&#xD;&#xA;       ?>&#xD;&#xA;		<h1>Login</h1> &#xD;&#xA;		<form action=""login.php"" method=""post""> &#xD;&#xA;		    Username:<br /> &#xD;&#xA;		    <input type=""text"" name=""username"" placeholder=""username"" /> &#xD;&#xA;		    <br /><br /> &#xD;&#xA;		    Password:<br /> &#xD;&#xA;		    <input type=""password"" name=""password"" placeholder=""password"" value="""" /> &#xD;&#xA;		    <br /><br /> &#xD;&#xA;		    <input type=""submit"" value=""Login"" /> &#xD;&#xA;		</form> &#xD;&#xA;		<a href=""register.php"">Register</a>&#xD;&#xA;	<?php&#xD;&#xA;      }&#xD;&#xA;     ?> &#xD;&#xA; "
-466239049395721922,76,5,"    class PostsController < ApplicationController&#xD;&#xA;      # GET /posts&#xD;&#xA;      # GET /posts.json&#xD;&#xA;      def index&#xD;&#xA;        @posts = Post.all&#xD;&#xA;        respond_to do |format|&#xD;&#xA;          format.html # index.html.erb&#xD;&#xA;          format.json { render json: @posts }&#xD;&#xA;        end&#xD;&#xA;      end&#xD;&#xA;    &#xD;&#xA;      # GET /posts/1&#xD;&#xA;      # GET /posts/1.json&#xD;&#xA;      def show&#xD;&#xA;        @post = Post.find(params[:id])&#xD;&#xA;        respond_to do |format|&#xD;&#xA;          format.html # show.html.erb&#xD;&#xA;          format.json { render json: @post }&#xD;&#xA;        end&#xD;&#xA;      end&#xD;&#xA;      # GET /posts/new&#xD;&#xA;      # GET /posts/new.json&#xD;&#xA;      def new&#xD;&#xA;        @post = Post.new&#xD;&#xA;    &#xD;&#xA;        respond_to do |format|&#xD;&#xA;          format.html # new.html.erb&#xD;&#xA;          format.json { render json: @post }&#xD;&#xA;        end&#xD;&#xA;      end&#xD;&#xA;    &#xD;&#xA;      # GET /posts/1/edit&#xD;&#xA;      def edit&#xD;&#xA;        @post = Post.find(params[:id])&#xD;&#xA;      end&#xD;&#xA;      # POST /posts&#xD;&#xA;      # POST /posts.json&#xD;&#xA;      def create&#xD;&#xA;       @post = Post.new(params[:post])&#xD;&#xA;        respond_to do |format|&#xD;&#xA;          if @post.save&#xD;&#xA;            format.html { redirect_to @post, notice: 'Post was successfully created.' }&#xD;&#xA;            format.json { render json: @post, status: :created, location: @post }&#xD;&#xA;          else&#xD;&#xA;            format.html { render action: ""new"" }&#xD;&#xA;            format.json { render json: @post.errors, status: :unprocessable_entity }&#xD;&#xA;          end&#xD;&#xA;        end&#xD;&#xA;      end&#xD;&#xA;      # PUT /posts/1&#xD;&#xA;      # PUT /posts/1.json&#xD;&#xA;      def update&#xD;&#xA;        @post = Post.find(params[:id])&#xD;&#xA;    &#xD;&#xA;        respond_to do |format|&#xD;&#xA;          if @post.update_attributes(params[:post])&#xD;&#xA;            format.html { redirect_to @post, notice: 'Post was successfully updated.' }&#xD;&#xA;            format.json { head :no_content }&#xD;&#xA;          else&#xD;&#xA;            format.html { render action: ""edit"" }&#xD;&#xA;            format.json { render json: @post.errors, status: :unprocessable_entity }&#xD;&#xA;          end&#xD;&#xA;        end&#xD;&#xA;      end&#xD;&#xA;    &#xD;&#xA;      # DELETE /posts/1&#xD;&#xA;      # DELETE /posts/1.json&#xD;&#xA;      def destroy&#xD;&#xA;        @post = Post.find(params[:id])&#xD;&#xA;        @post.destroy&#xD;&#xA;        respond_to do |format|&#xD;&#xA;          format.html { redirect_to posts_url }&#xD;&#xA;          format.json { head :no_content }&#xD;&#xA;        end&#xD;&#xA;      end&#xD;&#xA;    end"
-165839923263184599,77,5,"    try {&#xD;&#xA;    &#xD;&#xA;    	// Find out how many items are in the table&#xD;&#xA;    	$total = $dbh->query('&#xD;&#xA;    		SELECT&#xD;&#xA;    			COUNT(*)&#xD;&#xA;    		FROM&#xD;&#xA;    			table&#xD;&#xA;    	')->fetchColumn();&#xD;&#xA;    &#xD;&#xA;    	// How many items to list per page&#xD;&#xA;    	$limit = 20;&#xD;&#xA;    &#xD;&#xA;    	// How many pages will there be&#xD;&#xA;    	$pages = ceil($total / $limit);&#xD;&#xA;    &#xD;&#xA;    	// What page are we currently on?&#xD;&#xA;    	$page = min($pages, filter_input(INPUT_GET, 'page', FILTER_VALIDATE_INT, array(&#xD;&#xA;    		'options' => array(&#xD;&#xA;    			'default'   => 1,&#xD;&#xA;    			'min_range' => 1,&#xD;&#xA;    		),&#xD;&#xA;    	)));&#xD;&#xA;    &#xD;&#xA;    	// Calculate the offset for the query&#xD;&#xA;    	$offset = ($page - 1)  * $limit;&#xD;&#xA;    &#xD;&#xA;    	// Some information to display to the user&#xD;&#xA;    	$start = $offset + 1;&#xD;&#xA;    	$end = min(($offset + $limit), $total);&#xD;&#xA;    &#xD;&#xA;    	// The ""back"" link&#xD;&#xA;    	$prevlink = ($page > 1) ? '<a href=""?page=1"" title=""First page"">&laquo;</a> <a href=""?page=' . ($page - 1) . '"" title=""Previous page"">&lsaquo;</a>' : '<span class=""disabled"">&laquo;</span> <span class=""disabled"">&lsaquo;</span>';&#xD;&#xA;    &#xD;&#xA;    	// The ""forward"" link&#xD;&#xA;    	$nextlink = ($page < $pages) ? '<a href=""?page=' . ($page + 1) . '"" title=""Next page"">&rsaquo;</a> <a href=""?page=' . $pages . '"" title=""Last page"">&raquo;</a>' : '<span class=""disabled"">&rsaquo;</span> <span class=""disabled"">&raquo;</span>';&#xD;&#xA;    &#xD;&#xA;    	// Display the paging information&#xD;&#xA;    	echo '<div id=""paging""><p>', $prevlink, ' Page ', $page, ' of ', $pages, ' pages, displaying ', $start, '-', $end, ' of ', $total, ' results ', $nextlink, ' </p></div>';&#xD;&#xA;    &#xD;&#xA;    	// Prepare the paged query&#xD;&#xA;    	$stmt = $dbh->prepare('&#xD;&#xA;    		SELECT&#xD;&#xA;    			*&#xD;&#xA;    		FROM&#xD;&#xA;    			table&#xD;&#xA;    		ORDER BY&#xD;&#xA;    			name&#xD;&#xA;    		LIMIT&#xD;&#xA;    			:limit&#xD;&#xA;    		OFFSET&#xD;&#xA;    			:offset&#xD;&#xA;    	');&#xD;&#xA;    &#xD;&#xA;    	// Bind the query params&#xD;&#xA;    	$stmt->bindParam(':limit', $limit, PDO::PARAM_INT);&#xD;&#xA;    	$stmt->bindParam(':offset', $offset, PDO::PARAM_INT);&#xD;&#xA;    	$stmt->execute();&#xD;&#xA;    &#xD;&#xA;    	// Do we have any results?&#xD;&#xA;    	if ($stmt->rowCount() > 0) {&#xD;&#xA;    		// Define how we want to fetch the results&#xD;&#xA;    		$stmt->setFetchMode(PDO::FETCH_ASSOC);&#xD;&#xA;    		$iterator = new IteratorIterator($stmt);&#xD;&#xA;    &#xD;&#xA;    		// Display the results&#xD;&#xA;    		foreach ($iterator as $row) {&#xD;&#xA;    			echo '<p>', $row['name'], '</p>';&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    	} else {&#xD;&#xA;    		echo '<p>No results could be displayed.</p>';&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    } catch (Exception $e) {&#xD;&#xA;    	echo '<p>', $e->getMessage(), '</p>';&#xD;&#xA;    }"
7159015309253547098,77,5,"    - (UIImage *) fixrotation:(UIImage *)image {&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    if (image.imageOrientation == UIImageOrientationUp) return image;&#xD;&#xA;    CGAffineTransform transform = CGAffineTransformIdentity;&#xD;&#xA;    &#xD;&#xA;    switch (image.imageOrientation) {&#xD;&#xA;        case UIImageOrientationDown:&#xD;&#xA;        case UIImageOrientationDownMirrored:&#xD;&#xA;            transform = CGAffineTransformTranslate(transform, image.size.width, image.size.height);&#xD;&#xA;            transform = CGAffineTransformRotate(transform, M_PI);&#xD;&#xA;            break;&#xD;&#xA;            &#xD;&#xA;        case UIImageOrientationLeft:&#xD;&#xA;        case UIImageOrientationLeftMirrored:&#xD;&#xA;            transform = CGAffineTransformTranslate(transform, image.size.width, 0);&#xD;&#xA;            transform = CGAffineTransformRotate(transform, M_PI_2);&#xD;&#xA;            break;&#xD;&#xA;            &#xD;&#xA;        case UIImageOrientationRight:&#xD;&#xA;        case UIImageOrientationRightMirrored:&#xD;&#xA;            transform = CGAffineTransformTranslate(transform, 0, image.size.height);&#xD;&#xA;            transform = CGAffineTransformRotate(transform, -M_PI_2);&#xD;&#xA;            break;&#xD;&#xA;        case UIImageOrientationUp:&#xD;&#xA;        case UIImageOrientationUpMirrored:&#xD;&#xA;            break;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    switch (image.imageOrientation) {&#xD;&#xA;        case UIImageOrientationUpMirrored:&#xD;&#xA;        case UIImageOrientationDownMirrored:&#xD;&#xA;            transform = CGAffineTransformTranslate(transform, image.size.width, 0);&#xD;&#xA;            transform = CGAffineTransformScale(transform, -1, 1);&#xD;&#xA;            break;&#xD;&#xA;            &#xD;&#xA;        case UIImageOrientationLeftMirrored:&#xD;&#xA;        case UIImageOrientationRightMirrored:&#xD;&#xA;            transform = CGAffineTransformTranslate(transform, image.size.height, 0);&#xD;&#xA;            transform = CGAffineTransformScale(transform, -1, 1);&#xD;&#xA;            break;&#xD;&#xA;        case UIImageOrientationUp:&#xD;&#xA;        case UIImageOrientationDown:&#xD;&#xA;        case UIImageOrientationLeft:&#xD;&#xA;        case UIImageOrientationRight:&#xD;&#xA;            break;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    // Now we draw the underlying CGImage into a new context, applying the transform&#xD;&#xA;    // calculated above.&#xD;&#xA;    CGContextRef ctx = CGBitmapContextCreate(NULL, image.size.width, image.size.height,&#xD;&#xA;                                             CGImageGetBitsPerComponent(image.CGImage), 0,&#xD;&#xA;                                             CGImageGetColorSpace(image.CGImage),&#xD;&#xA;                                             CGImageGetBitmapInfo(image.CGImage));&#xD;&#xA;    CGContextConcatCTM(ctx, transform);&#xD;&#xA;    switch (image.imageOrientation) {&#xD;&#xA;        case UIImageOrientationLeft:&#xD;&#xA;        case UIImageOrientationLeftMirrored:&#xD;&#xA;        case UIImageOrientationRight:&#xD;&#xA;        case UIImageOrientationRightMirrored:&#xD;&#xA;            // Grr...&#xD;&#xA;            CGContextDrawImage(ctx, CGRectMake(0,0,image.size.height,image.size.width), image.CGImage);&#xD;&#xA;            break;&#xD;&#xA;            &#xD;&#xA;        default:&#xD;&#xA;            CGContextDrawImage(ctx, CGRectMake(0,0,image.size.width,image.size.height), image.CGImage);&#xD;&#xA;            break;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    // And now we just create a new UIImage from the drawing context&#xD;&#xA;    CGImageRef cgimg = CGBitmapContextCreateImage(ctx);&#xD;&#xA;    UIImage *img = [UIImage imageWithCGImage:cgimg];&#xD;&#xA;    CGContextRelease(ctx);&#xD;&#xA;    CGImageRelease(cgimg);&#xD;&#xA;    return img;&#xD;&#xA;    &#xD;&#xA;     }"
1530286527606535273,78,5,"    private static final Pattern DIR_SEPORATOR = Pattern.compile(""/"");&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * Raturns all available SD-Cards in the system (include emulated)&#xD;&#xA;     *&#xD;&#xA;     * Warning: Hack! Based on Android source code of version 4.3 (API 18)&#xD;&#xA;     * Because there is no standart way to get it.&#xD;&#xA;     * TODO: Test on future Android versions 4.4+&#xD;&#xA;     *&#xD;&#xA;     * @return paths to all available SD-Cards in the system (include emulated)&#xD;&#xA;     */&#xD;&#xA;    public static String[] getStorageDirectories()&#xD;&#xA;    {&#xD;&#xA;        // Final set of paths&#xD;&#xA;        final Set<String> rv = new HashSet<String>();&#xD;&#xA;        // Primary physical SD-CARD (not emulated)&#xD;&#xA;        final String rawExternalStorage = System.getenv(""EXTERNAL_STORAGE"");&#xD;&#xA;        // All Secondary SD-CARDs (all exclude primary) separated by "":""&#xD;&#xA;        final String rawSecondaryStoragesStr = System.getenv(""SECONDARY_STORAGE"");&#xD;&#xA;        // Primary emulated SD-CARD&#xD;&#xA;        final String rawEmulatedStorageTarget = System.getenv(""EMULATED_STORAGE_TARGET"");&#xD;&#xA;        if(TextUtils.isEmpty(rawEmulatedStorageTarget))&#xD;&#xA;        {&#xD;&#xA;            // Device has physical external storage; use plain paths.&#xD;&#xA;            if(TextUtils.isEmpty(rawExternalStorage))&#xD;&#xA;            {&#xD;&#xA;                // EXTERNAL_STORAGE undefined; falling back to default.&#xD;&#xA;                rv.add(""/storage/sdcard0"");&#xD;&#xA;            }&#xD;&#xA;            else&#xD;&#xA;            {&#xD;&#xA;                rv.add(rawExternalStorage);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        else&#xD;&#xA;        {&#xD;&#xA;            // Device has emulated storage; external storage paths should have&#xD;&#xA;            // userId burned into them.&#xD;&#xA;            final String rawUserId;&#xD;&#xA;            if(Build.VERSION.SDK_INT < Build.VERSION_CODES.JELLY_BEAN_MR1)&#xD;&#xA;            {&#xD;&#xA;                rawUserId = """";&#xD;&#xA;            }&#xD;&#xA;            else&#xD;&#xA;            {&#xD;&#xA;                final String path = Environment.getExternalStorageDirectory().getAbsolutePath();&#xD;&#xA;                final String[] folders = DIR_SEPORATOR.split(path);&#xD;&#xA;                final String lastFolder = folders[folders.length - 1];&#xD;&#xA;                boolean isDigit = false;&#xD;&#xA;                try&#xD;&#xA;                {&#xD;&#xA;                    Integer.valueOf(lastFolder);&#xD;&#xA;                    isDigit = true;&#xD;&#xA;                }&#xD;&#xA;                catch(NumberFormatException ignored)&#xD;&#xA;                {&#xD;&#xA;                }&#xD;&#xA;                rawUserId = isDigit ? lastFolder : """";&#xD;&#xA;            }&#xD;&#xA;            // /storage/emulated/0[1,2,...]&#xD;&#xA;            if(TextUtils.isEmpty(rawUserId))&#xD;&#xA;            {&#xD;&#xA;                rv.add(rawEmulatedStorageTarget);&#xD;&#xA;            }&#xD;&#xA;            else&#xD;&#xA;            {&#xD;&#xA;                rv.add(rawEmulatedStorageTarget + File.separator + rawUserId);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        // Add all secondary storages&#xD;&#xA;        if(!TextUtils.isEmpty(rawSecondaryStoragesStr))&#xD;&#xA;        {&#xD;&#xA;            // All Secondary SD-CARDs splited into array&#xD;&#xA;            final String[] rawSecondaryStorages = rawSecondaryStoragesStr.split(File.pathSeparator);&#xD;&#xA;            Collections.addAll(rv, rawSecondaryStorages);&#xD;&#xA;        }&#xD;&#xA;        return rv.toArray(new String[rv.size()]);&#xD;&#xA;    }"
-6662009173646869369,78,5,"    /***&#xD;&#xA;     Copyright (c) 2008-2016 CommonsWare, LLC&#xD;&#xA;     Licensed under the Apache License, Version 2.0 (the ""License""); you may not&#xD;&#xA;     use this file except in compliance with the License. You may obtain a copy&#xD;&#xA;     of the License at http://www.apache.org/licenses/LICENSE-2.0. Unless required&#xD;&#xA;     by applicable law or agreed to in writing, software distributed under the&#xD;&#xA;     License is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS&#xD;&#xA;     OF ANY KIND, either express or implied. See the License for the specific&#xD;&#xA;     language governing permissions and limitations under the License.&#xD;&#xA;    &#xD;&#xA;     From _The Busy Coder's Guide to Android Development_&#xD;&#xA;     https://commonsware.com/Android&#xD;&#xA;     */&#xD;&#xA;    &#xD;&#xA;    package com.commonsware.android.camcon;&#xD;&#xA;    &#xD;&#xA;    import android.app.Activity;&#xD;&#xA;    import android.content.Intent;&#xD;&#xA;    import android.net.Uri;&#xD;&#xA;    import android.os.Bundle;&#xD;&#xA;    import android.os.Environment;&#xD;&#xA;    import android.provider.MediaStore;&#xD;&#xA;    import java.io.File;&#xD;&#xA;    &#xD;&#xA;    public class CameraContentDemoActivity extends Activity {&#xD;&#xA;      private static final String EXTRA_FILENAME=&#xD;&#xA;        ""com.commonsware.android.camcon.EXTRA_FILENAME"";&#xD;&#xA;      private static final String FILENAME=""CameraContentDemo.jpeg"";&#xD;&#xA;      private static final int CONTENT_REQUEST=1337;&#xD;&#xA;      private File output=null;&#xD;&#xA;    &#xD;&#xA;      @Override&#xD;&#xA;      public void onCreate(Bundle savedInstanceState) {&#xD;&#xA;        super.onCreate(savedInstanceState);&#xD;&#xA;    &#xD;&#xA;        Intent i=new Intent(MediaStore.ACTION_IMAGE_CAPTURE);&#xD;&#xA;    &#xD;&#xA;        if (savedInstanceState==null) {&#xD;&#xA;          File dir=&#xD;&#xA;            Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DCIM);&#xD;&#xA;    &#xD;&#xA;          dir.mkdirs();&#xD;&#xA;          output=new File(dir, FILENAME);&#xD;&#xA;        }&#xD;&#xA;        else {&#xD;&#xA;          output=(File)savedInstanceState.getSerializable(EXTRA_FILENAME);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        if (output.exists()) {&#xD;&#xA;          output.delete();&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        i.putExtra(MediaStore.EXTRA_OUTPUT, Uri.fromFile(output));&#xD;&#xA;    &#xD;&#xA;        startActivityForResult(i, CONTENT_REQUEST);&#xD;&#xA;      }&#xD;&#xA;    &#xD;&#xA;      @Override&#xD;&#xA;      protected void onSaveInstanceState(Bundle outState) {&#xD;&#xA;        super.onSaveInstanceState(outState);&#xD;&#xA;    &#xD;&#xA;        outState.putSerializable(EXTRA_FILENAME, output);&#xD;&#xA;      }&#xD;&#xA;    &#xD;&#xA;      @Override&#xD;&#xA;      protected void onActivityResult(int requestCode, int resultCode,&#xD;&#xA;                                      Intent data) {&#xD;&#xA;        if (requestCode == CONTENT_REQUEST) {&#xD;&#xA;          if (resultCode == RESULT_OK) {&#xD;&#xA;            Intent i=new Intent(Intent.ACTION_VIEW);&#xD;&#xA;            &#xD;&#xA;            i.setDataAndType(Uri.fromFile(output), ""image/jpeg"");&#xD;&#xA;            startActivity(i);&#xD;&#xA;            finish();&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;    }"
43178950987610100,80,5,"     * {box-sizing:border-box}&#xD;&#xA;    /* Slideshow container */&#xD;&#xA;    .slideshow-container {&#xD;&#xA;      max-width: 1000px;&#xD;&#xA;      position: relative;&#xD;&#xA;      margin: auto;&#xD;&#xA;    }&#xD;&#xA;    .mySlides {&#xD;&#xA;        display: none;&#xD;&#xA;    }&#xD;&#xA;    /* Next & previous buttons */&#xD;&#xA;    .prev, .next {&#xD;&#xA;      cursor: pointer;&#xD;&#xA;      position: absolute;&#xD;&#xA;      top: 50%;&#xD;&#xA;      width: auto;&#xD;&#xA;      margin-top: -22px;&#xD;&#xA;      padding: 16px;&#xD;&#xA;      color: white;&#xD;&#xA;      font-weight: bold;&#xD;&#xA;      font-size: 18px;&#xD;&#xA;      transition: 0.6s ease;&#xD;&#xA;      border-radius: 0 3px 3px 0;&#xD;&#xA;    }&#xD;&#xA;    /* Position the ""next button"" to the right */&#xD;&#xA;    .next {&#xD;&#xA;      right: 0;&#xD;&#xA;      border-radius: 3px 0 0 3px;&#xD;&#xA;    }&#xD;&#xA;    /* On hover, add a black background color with a little bit see-through */&#xD;&#xA;    .prev:hover, .next:hover {&#xD;&#xA;      background-color: rgba(0,0,0,0.8);&#xD;&#xA;    }&#xD;&#xA;    /* Caption text */&#xD;&#xA;    .text {&#xD;&#xA;      color: #f2f2f2;&#xD;&#xA;      font-size: 15px;&#xD;&#xA;      padding: 8px 12px;&#xD;&#xA;      position: absolute;&#xD;&#xA;      bottom: 8px;&#xD;&#xA;      width: 100%;&#xD;&#xA;      text-align: center;&#xD;&#xA;    }&#xD;&#xA;    /* Number text (1/3 etc) */&#xD;&#xA;    .numbertext {&#xD;&#xA;      color: #f2f2f2;&#xD;&#xA;      font-size: 12px;&#xD;&#xA;      padding: 8px 12px;&#xD;&#xA;      position: absolute;&#xD;&#xA;      top: 0;&#xD;&#xA;    }&#xD;&#xA;    /* The dots/bullets/indicators */&#xD;&#xA;    .dot {&#xD;&#xA;      cursor:pointer;&#xD;&#xA;      height: 13px;&#xD;&#xA;      width: 13px;&#xD;&#xA;      margin: 0 2px;&#xD;&#xA;      background-color: #bbb;&#xD;&#xA;      border-radius: 50%;&#xD;&#xA;      display: inline-block;&#xD;&#xA;      transition: background-color 0.6s ease;&#xD;&#xA;    }&#xD;&#xA;    .active, .dot:hover {&#xD;&#xA;      background-color: #717171;&#xD;&#xA;    }&#xD;&#xA;    /* Fading animation */&#xD;&#xA;    .fade {&#xD;&#xA;      -webkit-animation-name: fade;&#xD;&#xA;      -webkit-animation-duration: 1.5s;&#xD;&#xA;      animation-name: fade;&#xD;&#xA;      animation-duration: 1.5s;&#xD;&#xA;    }&#xD;&#xA;    @-webkit-keyframes fade {&#xD;&#xA;      from {opacity: .4}&#xD;&#xA;      to {opacity: 1}&#xD;&#xA;    }&#xD;&#xA;    @keyframes fade {&#xD;&#xA;      from {opacity: .4}&#xD;&#xA;      to {opacity: 1}&#xD;&#xA;    }"
-2252433397118110745,80,5,"    public class GridViewAdapter extends ArrayAdapter<Model_images> {&#xD;&#xA;    &#xD;&#xA;        Context context;&#xD;&#xA;        ViewHolder viewHolder;&#xD;&#xA;        ArrayList<Model_images> al_menu = new ArrayList<>();&#xD;&#xA;        int int_position;&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        public GridViewAdapter(Context context, ArrayList<Model_images> al_menu,int int_position) {&#xD;&#xA;            super(context, R.layout.activity_adapter__photos_folder, al_menu);&#xD;&#xA;            this.al_menu = al_menu;&#xD;&#xA;            this.context = context;&#xD;&#xA;            this.int_position = int_position;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public int getCount() {&#xD;&#xA;    &#xD;&#xA;            Log.e(""ADAPTER LIST SIZE"", al_menu.get(int_position).getAl_imagepath().size() + """");&#xD;&#xA;            return al_menu.get(int_position).getAl_imagepath().size();&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public int getItemViewType(int position) {&#xD;&#xA;            return position;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public int getViewTypeCount() {&#xD;&#xA;            if (al_menu.get(int_position).getAl_imagepath().size() > 0) {&#xD;&#xA;                return al_menu.get(int_position).getAl_imagepath().size();&#xD;&#xA;            } else {&#xD;&#xA;                return 1;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public long getItemId(int position) {&#xD;&#xA;            return position;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public View getView(final int position, View convertView, ViewGroup parent) {&#xD;&#xA;    &#xD;&#xA;            if (convertView == null) {&#xD;&#xA;    &#xD;&#xA;                viewHolder = new ViewHolder();&#xD;&#xA;                convertView = LayoutInflater.from(getContext()).inflate(R.layout.activity_adapter__photos_folder, parent, false);&#xD;&#xA;                viewHolder.tv_foldern = (TextView) convertView.findViewById(R.id.tv_folder);&#xD;&#xA;                viewHolder.tv_foldersize = (TextView) convertView.findViewById(R.id.tv_folder2);&#xD;&#xA;                viewHolder.iv_image = (ImageView) convertView.findViewById(R.id.iv_image);&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;                convertView.setTag(viewHolder);&#xD;&#xA;            } else {&#xD;&#xA;                viewHolder = (ViewHolder) convertView.getTag();&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            viewHolder.tv_foldern.setVisibility(View.GONE);&#xD;&#xA;            viewHolder.tv_foldersize.setVisibility(View.GONE);&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            Glide.with(context).load(""file://"" + al_menu.get(int_position).getAl_imagepath().get(position))&#xD;&#xA;                    .diskCacheStrategy(DiskCacheStrategy.NONE)&#xD;&#xA;                    .skipMemoryCache(true)&#xD;&#xA;                    .into(viewHolder.iv_image);&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            return convertView;&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private static class ViewHolder {&#xD;&#xA;            TextView tv_foldern, tv_foldersize;&#xD;&#xA;            ImageView iv_image;&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    }"
-2757842482450860645,80,5,"        public class SequenceEncoder {&#xD;&#xA;        private SeekableByteChannel ch;&#xD;&#xA;        private Picture toEncode;&#xD;&#xA;        private RgbToYuv420 transform;&#xD;&#xA;        private H264Encoder encoder;&#xD;&#xA;        private ArrayList<ByteBuffer> spsList;&#xD;&#xA;        private ArrayList<ByteBuffer> ppsList;&#xD;&#xA;        private CompressedTrack outTrack;&#xD;&#xA;        private ByteBuffer _out;&#xD;&#xA;        private int frameNo;&#xD;&#xA;        private MP4Muxer muxer;&#xD;&#xA;    &#xD;&#xA;        public SequenceEncoder(File out) throws IOException {&#xD;&#xA;            this.ch = NIOUtils.writableFileChannel(out);&#xD;&#xA;    &#xD;&#xA;            // Transform to convert between RGB and YUV&#xD;&#xA;            transform = new RgbToYuv420(0, 0);&#xD;&#xA;    &#xD;&#xA;            // Muxer that will store the encoded frames&#xD;&#xA;            muxer = new MP4Muxer(ch, Brand.MP4);&#xD;&#xA;    &#xD;&#xA;            // Add video track to muxer&#xD;&#xA;            outTrack = muxer.addTrackForCompressed(TrackType.VIDEO, 25);&#xD;&#xA;    &#xD;&#xA;            // Allocate a buffer big enough to hold output frames&#xD;&#xA;            _out = ByteBuffer.allocate(1920 * 1080 * 6);&#xD;&#xA;    &#xD;&#xA;            // Create an instance of encoder&#xD;&#xA;            encoder = new H264Encoder();&#xD;&#xA;    &#xD;&#xA;            // Encoder extra data ( SPS, PPS ) to be stored in a special place of&#xD;&#xA;            // MP4&#xD;&#xA;            spsList = new ArrayList<ByteBuffer>();&#xD;&#xA;            ppsList = new ArrayList<ByteBuffer>();&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void encodeImage(BufferedImage bi) throws IOException {&#xD;&#xA;            if (toEncode == null) {&#xD;&#xA;                toEncode = Picture.create(bi.getWidth(), bi.getHeight(), ColorSpace.YUV420);&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            // Perform conversion&#xD;&#xA;            for (int i = 0; i < 3; i++)&#xD;&#xA;                Arrays.fill(toEncode.getData()[i], 0);&#xD;&#xA;            transform.transform(AWTUtil.fromBufferedImage(bi), toEncode);&#xD;&#xA;    &#xD;&#xA;            // Encode image into H.264 frame, the result is stored in '_out' buffer&#xD;&#xA;            _out.clear();&#xD;&#xA;            ByteBuffer result = encoder.encodeFrame(_out, toEncode);&#xD;&#xA;    &#xD;&#xA;            // Based on the frame above form correct MP4 packet&#xD;&#xA;            spsList.clear();&#xD;&#xA;            ppsList.clear();&#xD;&#xA;            H264Utils.encodeMOVPacket(result, spsList, ppsList);&#xD;&#xA;    &#xD;&#xA;            // Add packet to video track&#xD;&#xA;            outTrack.addFrame(new MP4Packet(result, frameNo, 25, 1, frameNo, true, null, frameNo, 0));&#xD;&#xA;    &#xD;&#xA;            frameNo++;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void finish() throws IOException {&#xD;&#xA;            // Push saved SPS/PPS to a special storage in MP4&#xD;&#xA;            outTrack.addSampleEntry(H264Utils.createMOVSampleEntry(spsList, ppsList));&#xD;&#xA;    &#xD;&#xA;            // Write MP4 header and finalize recording&#xD;&#xA;            muxer.writeHeader();&#xD;&#xA;            NIOUtils.closeQuietly(ch);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public static void main(String[] args) throws IOException {&#xD;&#xA;            SequenceEncoder encoder = new SequenceEncoder(new File(""video.mp4""));&#xD;&#xA;            for (int i = 1; i < 100; i++) {&#xD;&#xA;                BufferedImage bi = ImageIO.read(new File(String.format(""folder/img%08d.png"", i)));&#xD;&#xA;                encoder.encodeImage(bi);&#xD;&#xA;            }&#xD;&#xA;            encoder.finish();&#xD;&#xA;        }&#xD;&#xA;    }"
-3775021492815914675,80,5,"    public class PlatformAdapter extends RecyclerView.Adapter<PlatformAdapter.ViewHolder> {&#xD;&#xA;    ArrayList<Batch> batches;&#xD;&#xA;    ArrayList<CourseSlug> courses;&#xD;&#xA;    boolean isInstituteStudent;&#xD;&#xA;    public void setBatches(ArrayList<Batch> batches) {&#xD;&#xA;        this.batches = batches;&#xD;&#xA;        notifyDataSetChanged();&#xD;&#xA;    }&#xD;&#xA;    public void setCourses(ArrayList<CourseSlug> courses) {&#xD;&#xA;        this.courses = courses;&#xD;&#xA;        notifyDataSetChanged();&#xD;&#xA;    }&#xD;&#xA;    public ArrayList<CourseSlug> getCourses() {&#xD;&#xA;        return courses;&#xD;&#xA;    }&#xD;&#xA;    public ArrayList<Batch> getBatches() {&#xD;&#xA;        return batches;&#xD;&#xA;    }&#xD;&#xA;    public void setInstituteStudent(boolean instituteStudent) {&#xD;&#xA;        isInstituteStudent = instituteStudent;&#xD;&#xA;    }&#xD;&#xA;    public boolean isInstituteStudent() {&#xD;&#xA;        return isInstituteStudent;&#xD;&#xA;    }&#xD;&#xA;    public PlatformAdapter() {&#xD;&#xA;        courses = new ArrayList<>();&#xD;&#xA;        batches = new ArrayList<>();&#xD;&#xA;    }&#xD;&#xA;    @Override&#xD;&#xA;    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {&#xD;&#xA;        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.list_cell_platform_item, parent, false);&#xD;&#xA;        return new ViewHolder(view);&#xD;&#xA;    }&#xD;&#xA;    @Override&#xD;&#xA;    public void onBindViewHolder(final ViewHolder holder, final int position) {&#xD;&#xA;        if (isInstituteStudent) {&#xD;&#xA;            Batch batch = batches.get(position);&#xD;&#xA;            holder.enrolment.setText(batch.getName());&#xD;&#xA;            holder.selectEnrollment.setChecked(batch.isPreselect());&#xD;&#xA;        } else {&#xD;&#xA;            final CourseSlug course = courses.get(position);&#xD;&#xA;            holder.enrolment.setText(course.getName());&#xD;&#xA;            holder.selectEnrollment.setChecked(course.isPreselect());&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    @Override&#xD;&#xA;    public int getItemCount() {&#xD;&#xA;        return isInstituteStudent ? batches.size() : courses.size();&#xD;&#xA;    }&#xD;&#xA;    class ViewHolder extends RecyclerView.ViewHolder {&#xD;&#xA;        TextView enrolment;&#xD;&#xA;        CheckBox selectEnrollment;&#xD;&#xA;        public ViewHolder(final View itemView) {&#xD;&#xA;            super(itemView);&#xD;&#xA;            enrolment = (TextView) itemView.findViewById(R.id.tv_entrollment);&#xD;&#xA;            selectEnrollment = (CheckBox) itemView.findViewById(R.id.cb_select_entrollment);&#xD;&#xA;            selectEnrollment.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {&#xD;&#xA;                @Override&#xD;&#xA;                public void onCheckedChanged(CompoundButton compoundButton, boolean b) {&#xD;&#xA;                    int index = getLayoutPosition();&#xD;&#xA;                    if(isInstituteStudent) {&#xD;&#xA;                        Batch batch = batches.get(index);&#xD;&#xA;                        batch.setPreselect(b);&#xD;&#xA;                    } else {&#xD;&#xA;                        CourseSlug course = courses.get(index);&#xD;&#xA;                        course.setPreselect(b);&#xD;&#xA;                      &#xD;&#xA;                                &#xD;&#xA;                            }&#xD;&#xA;                        }&#xD;&#xA;                   &#xD;&#xA;                &#xD;&#xA;            });&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    @Override&#xD;&#xA;    public long getItemId(int position) {&#xD;&#xA;        return super.getItemId(position);&#xD;&#xA;    }&#xD;&#xA;    }"
1520765279105896189,81,5,"    {&#xD;&#xA;        AdapterDetails =     {&#xD;&#xA;            Amperage = 1000;&#xD;&#xA;            Description = ""usb host"";&#xD;&#xA;            FamilyCode = ""-536854528"";&#xD;&#xA;            PMUConfiguration = 1000;&#xD;&#xA;            Watts = 5;&#xD;&#xA;        };&#xD;&#xA;        AdapterInfo = 16384;&#xD;&#xA;        Amperage = 1000;&#xD;&#xA;        AppleRawCurrentCapacity = 1279;&#xD;&#xA;        AppleRawMaxCapacity = 1275;&#xD;&#xA;        AtCriticalLevel = 0;&#xD;&#xA;        AtWarnLevel = 0;&#xD;&#xA;        BatteryData =     {&#xD;&#xA;            BatterySerialNumber = REDACTED;&#xD;&#xA;            ChemID = 355;&#xD;&#xA;            CycleCount = 524;&#xD;&#xA;            DesignCapacity = 1420;&#xD;&#xA;            Flags = 640;&#xD;&#xA;            FullAvailableCapacity = 1325;&#xD;&#xA;            ManufactureDate = REDACTED;&#xD;&#xA;            MaxCapacity = 1273;&#xD;&#xA;            MfgData = REDACTED;&#xD;&#xA;            QmaxCell0 = 1350;&#xD;&#xA;            StateOfCharge = 100;&#xD;&#xA;            Voltage = 4194;&#xD;&#xA;        };&#xD;&#xA;        BatteryInstalled = 1;&#xD;&#xA;        BatteryKey = ""0003-default"";&#xD;&#xA;        BootBBCapacity = 52;&#xD;&#xA;        BootCapacityEstimate = 2;&#xD;&#xA;        BootVoltage = 3518;&#xD;&#xA;        CFBundleIdentifier = ""com.apple.driver.AppleD1815PMU"";&#xD;&#xA;        ChargerConfiguration = 990;&#xD;&#xA;        CurrentCapacity = 1275;&#xD;&#xA;        CycleCount = 524;&#xD;&#xA;        DesignCapacity = 1420;&#xD;&#xA;        ExternalChargeCapable = 1;&#xD;&#xA;        ExternalConnected = 1;&#xD;&#xA;        FullyCharged = 1;&#xD;&#xA;        IOClass = AppleD1815PMUPowerSource;&#xD;&#xA;        IOFunctionParent64000000 = <>;&#xD;&#xA;        IOGeneralInterest = ""IOCommand is not serializable"";&#xD;&#xA;        IOInterruptControllers =     (&#xD;&#xA;            IOInterruptController34000000,&#xD;&#xA;            IOInterruptController34000000,&#xD;&#xA;            IOInterruptController34000000,&#xD;&#xA;            IOInterruptController34000000&#xD;&#xA;        );&#xD;&#xA;        IOInterruptSpecifiers =     (&#xD;&#xA;            <03000000>,&#xD;&#xA;            <26000000>,&#xD;&#xA;            <04000000>,&#xD;&#xA;            <24000000>&#xD;&#xA;        );&#xD;&#xA;        IOMatchCategory = AppleD1815PMUPowerSource;&#xD;&#xA;        IOPowerManagement =     {&#xD;&#xA;            CurrentPowerState = 2;&#xD;&#xA;            DevicePowerState = 2;&#xD;&#xA;            MaxPowerState = 2;&#xD;&#xA;        };&#xD;&#xA;        IOProbeScore = 0;&#xD;&#xA;        IOProviderClass = AppleD1815PMU;&#xD;&#xA;        InstantAmperage = 0;&#xD;&#xA;        IsCharging = 0;&#xD;&#xA;        Location = 0;&#xD;&#xA;        Manufacturer = A;&#xD;&#xA;        MaxCapacity = 1275;&#xD;&#xA;        Model = ""0003-A"";&#xD;&#xA;        Serial = REDACTED;&#xD;&#xA;        Temperature = 2590;&#xD;&#xA;        TimeRemaining = 0;&#xD;&#xA;        UpdateTime = 1461830702;&#xD;&#xA;        Voltage = 4182;&#xD;&#xA;        ""battery-data"" =     {&#xD;&#xA;            ""0003-default"" = <...>;&#xD;&#xA;            ""0004-default"" = <...>;&#xD;&#xA;            ""0005-default"" = <...};&#xD;&#xA;        ""built-in"" = 1;&#xD;&#xA;    }"
645706294631984879,81,5,"    function convertNumberToWords(amount) {&#xD;&#xA;            var words = new Array();&#xD;&#xA;            words[0] = '';&#xD;&#xA;            words[1] = 'One';&#xD;&#xA;            words[2] = 'Two';&#xD;&#xA;            words[3] = 'Three';&#xD;&#xA;            words[4] = 'Four';&#xD;&#xA;            words[5] = 'Five';&#xD;&#xA;            words[6] = 'Six';&#xD;&#xA;            words[7] = 'Seven';&#xD;&#xA;            words[8] = 'Eight';&#xD;&#xA;            words[9] = 'Nine';&#xD;&#xA;            words[10] = 'Ten';&#xD;&#xA;            words[11] = 'Eleven';&#xD;&#xA;            words[12] = 'Twelve';&#xD;&#xA;            words[13] = 'Thirteen';&#xD;&#xA;            words[14] = 'Fourteen';&#xD;&#xA;            words[15] = 'Fifteen';&#xD;&#xA;            words[16] = 'Sixteen';&#xD;&#xA;            words[17] = 'Seventeen';&#xD;&#xA;            words[18] = 'Eighteen';&#xD;&#xA;            words[19] = 'Nineteen';&#xD;&#xA;            words[20] = 'Twenty';&#xD;&#xA;            words[30] = 'Thirty';&#xD;&#xA;            words[40] = 'Forty';&#xD;&#xA;            words[50] = 'Fifty';&#xD;&#xA;            words[60] = 'Sixty';&#xD;&#xA;            words[70] = 'Seventy';&#xD;&#xA;            words[80] = 'Eighty';&#xD;&#xA;            words[90] = 'Ninety';&#xD;&#xA;            amount = amount.toString();&#xD;&#xA;            var atemp = amount.split(""."");&#xD;&#xA;            var number = atemp[0].split("","").join("""");&#xD;&#xA;            var n_length = number.length;&#xD;&#xA;            var words_string = """";&#xD;&#xA;            if (n_length <= 9) {&#xD;&#xA;                var n_array = new Array(0, 0, 0, 0, 0, 0, 0, 0, 0);&#xD;&#xA;                var received_n_array = new Array();&#xD;&#xA;                for (var i = 0; i < n_length; i++) {&#xD;&#xA;                    received_n_array[i] = number.substr(i, 1);&#xD;&#xA;                }&#xD;&#xA;                for (var i = 9 - n_length, j = 0; i < 9; i++, j++) {&#xD;&#xA;                    n_array[i] = received_n_array[j];&#xD;&#xA;                }&#xD;&#xA;                for (var i = 0, j = 1; i < 9; i++, j++) {&#xD;&#xA;                    if (i == 0 || i == 2 || i == 4 || i == 7) {&#xD;&#xA;                        if (n_array[i] == 1) {&#xD;&#xA;                            n_array[j] = 10 + parseInt(n_array[j]);&#xD;&#xA;                            n_array[i] = 0;&#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;                value = """";&#xD;&#xA;                for (var i = 0; i < 9; i++) {&#xD;&#xA;                    if (i == 0 || i == 2 || i == 4 || i == 7) {&#xD;&#xA;                        value = n_array[i] * 10;&#xD;&#xA;                    } else {&#xD;&#xA;                        value = n_array[i];&#xD;&#xA;                    }&#xD;&#xA;                    if (value != 0) {&#xD;&#xA;                        words_string += words[value] + "" "";&#xD;&#xA;                    }&#xD;&#xA;                    if ((i == 1 && value != 0) || (i == 0 && value != 0 && n_array[i + 1] == 0)) {&#xD;&#xA;                        words_string += ""Crores "";&#xD;&#xA;                    }&#xD;&#xA;                    if ((i == 3 && value != 0) || (i == 2 && value != 0 && n_array[i + 1] == 0)) {&#xD;&#xA;                        words_string += ""Lakhs "";&#xD;&#xA;                    }&#xD;&#xA;                    if ((i == 5 && value != 0) || (i == 4 && value != 0 && n_array[i + 1] == 0)) {&#xD;&#xA;                        words_string += ""Thousand "";&#xD;&#xA;                    }&#xD;&#xA;                    if (i == 6 && value != 0 && (n_array[i + 1] != 0 && n_array[i + 2] != 0)) {&#xD;&#xA;                        words_string += ""Hundred and "";&#xD;&#xA;                    } else if (i == 6 && value != 0) {&#xD;&#xA;                        words_string += ""Hundred "";&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;                words_string = words_string.split(""  "").join("" "");&#xD;&#xA;            }&#xD;&#xA;            return words_string;&#xD;&#xA;        }"
4995404664854118945,337,5,"    		{&#xD;&#xA;		  ""nodes"":[&#xD;&#xA;		    {""name"":""Myriel"",""group"":1},&#xD;&#xA;		    {""name"":""Napoleon"",""group"":1},&#xD;&#xA;		    {""name"":""Mlle.Baptistine"",""group"":1},&#xD;&#xA;		    {""name"":""Mme.Magloire"",""group"":1},&#xD;&#xA;		    {""name"":""CountessdeLo"",""group"":1},&#xD;&#xA;		    {""name"":""Geborand"",""group"":1},&#xD;&#xA;		    {""name"":""Champtercier"",""group"":1},&#xD;&#xA;		    {""name"":""Cravatte"",""group"":1},&#xD;&#xA;		    {""name"":""Count"",""group"":1},&#xD;&#xA;		    {""name"":""OldMan"",""group"":1},&#xD;&#xA;		    {""name"":""Labarre"",""group"":2},&#xD;&#xA;		    {""name"":""Valjean"",""group"":2},&#xD;&#xA;		    {""name"":""Marguerite"",""group"":3},&#xD;&#xA;		    {""name"":""Mme.deR"",""group"":2},&#xD;&#xA;		    {""name"":""Isabeau"",""group"":2},&#xD;&#xA;		    {""name"":""Gervais"",""group"":2},&#xD;&#xA;		    {""name"":""Tholomyes"",""group"":3},&#xD;&#xA;		    {""name"":""Listolier"",""group"":3},&#xD;&#xA;		    {""name"":""Fameuil"",""group"":3},&#xD;&#xA;		    {""name"":""Blacheville"",""group"":3},&#xD;&#xA;		    {""name"":""Favourite"",""group"":3},&#xD;&#xA;		    {""name"":""Dahlia"",""group"":3},&#xD;&#xA;		    {""name"":""Zephine"",""group"":3},&#xD;&#xA;		    {""name"":""Fantine"",""group"":3},&#xD;&#xA;		    {""name"":""Mme.Thenardier"",""group"":4},&#xD;&#xA;		    {""name"":""Thenardier"",""group"":4},&#xD;&#xA;		    {""name"":""Cosette"",""group"":5},&#xD;&#xA;		    {""name"":""Javert"",""group"":4},&#xD;&#xA;		    {""name"":""Fauchelevent"",""group"":0},&#xD;&#xA;		    {""name"":""Bamatabois"",""group"":2},&#xD;&#xA;		    {""name"":""Perpetue"",""group"":3},&#xD;&#xA;		    {""name"":""Simplice"",""group"":2},&#xD;&#xA;		    {""name"":""Scaufflaire"",""group"":2},&#xD;&#xA;		    {""name"":""Woman1"",""group"":2},&#xD;&#xA;		    {""name"":""Judge"",""group"":2},&#xD;&#xA;		    {""name"":""Champmathieu"",""group"":2},&#xD;&#xA;		    {""name"":""Brevet"",""group"":2},&#xD;&#xA;		    {""name"":""Chenildieu"",""group"":2},&#xD;&#xA;		    {""name"":""Cochepaille"",""group"":2},&#xD;&#xA;		    {""name"":""Pontmercy"",""group"":4},&#xD;&#xA;		    {""name"":""Boulatruelle"",""group"":6},&#xD;&#xA;		    {""name"":""Eponine"",""group"":4},&#xD;&#xA;		    {""name"":""Anzelma"",""group"":4},&#xD;&#xA;		    {""name"":""Woman2"",""group"":5},&#xD;&#xA;		    {""name"":""MotherInnocent"",""group"":0},&#xD;&#xA;		    {""name"":""Gribier"",""group"":0},&#xD;&#xA;		    {""name"":""Jondrette"",""group"":7},&#xD;&#xA;		    {""name"":""Mme.Burgon"",""group"":7},&#xD;&#xA;		    {""name"":""Gavroche"",""group"":8},&#xD;&#xA;		    {""name"":""Gillenormand"",""group"":5},&#xD;&#xA;		    {""name"":""Magnon"",""group"":5},&#xD;&#xA;		    {""name"":""Mlle.Gillenormand"",""group"":5},&#xD;&#xA;		    {""name"":""Mme.Pontmercy"",""group"":5},&#xD;&#xA;		    {""name"":""Mlle.Vaubois"",""group"":5},&#xD;&#xA;		    {""name"":""Lt.Gillenormand"",""group"":5},&#xD;&#xA;		    {""name"":""Marius"",""group"":8},&#xD;&#xA;		    {""name"":""BaronessT"",""group"":5},&#xD;&#xA;		    {""name"":""Mabeuf"",""group"":8},&#xD;&#xA;		    {""name"":""Enjolras"",""group"":8},&#xD;&#xA;		    {""name"":""Combeferre"",""group"":8},&#xD;&#xA;		    {""name"":""Prouvaire"",""group"":8},&#xD;&#xA;		    {""name"":""Feuilly"",""group"":8},&#xD;&#xA;		    {""name"":""Courfeyrac"",""group"":8},&#xD;&#xA;		    {""name"":""Bahorel"",""group"":8},&#xD;&#xA;		    {""name"":""Bossuet"",""group"":8},&#xD;&#xA;		    {""name"":""Joly"",""group"":8},&#xD;&#xA;		    {""name"":""Grantaire"",""group"":8},&#xD;&#xA;		    {""name"":""MotherPlutarch"",""group"":9},&#xD;&#xA;		    {""name"":""Gueulemer"",""group"":4},&#xD;&#xA;		    {""name"":""Babet"",""group"":4},&#xD;&#xA;		    {""name"":""Claquesous"",""group"":4},&#xD;&#xA;		    {""name"":""Montparnasse"",""group"":4},&#xD;&#xA;		    {""name"":""Toussaint"",""group"":5},&#xD;&#xA;		    {""name"":""Child1"",""group"":10},&#xD;&#xA;		    {""name"":""Child2"",""group"":10},&#xD;&#xA;		    {""name"":""Brujon"",""group"":4},&#xD;&#xA;		    {""name"":""Mme.Hucheloup"",""group"":8}&#xD;&#xA;		  ],&#xD;&#xA;		  ""links"":[&#xD;&#xA;		    {""source"":1,""target"":0,""value"":1},&#xD;&#xA;		    {""source"":2,""target"":0,""value"":8},&#xD;&#xA;		    {""source"":3,""target"":0,""value"":10},&#xD;&#xA;		    {""source"":3,""target"":2,""value"":6},&#xD;&#xA;		    {""source"":4,""target"":0,""value"":1},&#xD;&#xA;		    {""source"":5,""target"":0,""value"":1},&#xD;&#xA;		    {""source"":6,""target"":0,""value"":1},&#xD;&#xA;		    {""source"":7,""target"":0,""value"":1},&#xD;&#xA;		    {""source"":8,""target"":0,""value"":2},&#xD;&#xA;		    {""source"":9,""target"":0,""value"":1},&#xD;&#xA;		    {""source"":11,""target"":10,""value"":1},&#xD;&#xA;		    {""source"":11,""target"":3,""value"":3},&#xD;&#xA;		    {""source"":11,""target"":2,""value"":3},&#xD;&#xA;		    {""source"":11,""target"":0,""value"":5},&#xD;&#xA;		    {""source"":12,""target"":11,""value"":1},&#xD;&#xA;		    {""source"":13,""target"":11,""value"":1},&#xD;&#xA;		    {""source"":14,""target"":11,""value"":1},&#xD;&#xA;		    {""source"":15,""target"":11,""value"":1},&#xD;&#xA;		    {""source"":17,""target"":16,""value"":4},&#xD;&#xA;		    {""source"":18,""target"":16,""value"":4},&#xD;&#xA;		    {""source"":18,""target"":17,""value"":4},&#xD;&#xA;		    {""source"":19,""target"":16,""value"":4},&#xD;&#xA;		    {""source"":19,""target"":17,""value"":4},&#xD;&#xA;		    {""source"":19,""target"":18,""value"":4},&#xD;&#xA;		    {""source"":20,""target"":16,""value"":3},&#xD;&#xA;		    {""source"":20,""target"":17,""value"":3},&#xD;&#xA;		    {""source"":20,""target"":18,""value"":3},&#xD;&#xA;		    {""source"":20,""target"":19,""value"":4},&#xD;&#xA;		    {""source"":21,""target"":16,""value"":3},&#xD;&#xA;		    {""source"":21,""target"":17,""value"":3},&#xD;&#xA;		    {""source"":21,""target"":18,""value"":3},&#xD;&#xA;		    {""source"":21,""target"":19,""value"":3},&#xD;&#xA;		    {""source"":21,""target"":20,""value"":5},&#xD;&#xA;		    {""source"":22,""target"":16,""value"":3},&#xD;&#xA;		    {""source"":22,""target"":17,""value"":3},&#xD;&#xA;		    {""source"":22,""target"":18,""value"":3},&#xD;&#xA;		    {""source"":22,""target"":19,""value"":3},&#xD;&#xA;		    {""source"":22,""target"":20,""value"":4},&#xD;&#xA;		    {""source"":22,""target"":21,""value"":4},&#xD;&#xA;		    {""source"":23,""target"":16,""value"":3},&#xD;&#xA;		    {""source"":23,""target"":17,""value"":3},&#xD;&#xA;		    {""source"":23,""target"":18,""value"":3},&#xD;&#xA;		    {""source"":23,""target"":19,""value"":3},&#xD;&#xA;		    {""source"":23,""target"":20,""value"":4},&#xD;&#xA;		    {""source"":23,""target"":21,""value"":4},&#xD;&#xA;		    {""source"":23,""target"":22,""value"":4},&#xD;&#xA;		    {""source"":23,""target"":12,""value"":2},&#xD;&#xA;		    {""source"":23,""target"":11,""value"":9},&#xD;&#xA;		    {""source"":24,""target"":23,""value"":2},&#xD;&#xA;		    {""source"":24,""target"":11,""value"":7},&#xD;&#xA;		    {""source"":25,""target"":24,""value"":13},&#xD;&#xA;		    {""source"":25,""target"":23,""value"":1},&#xD;&#xA;		    {""source"":25,""target"":11,""value"":12},&#xD;&#xA;		    {""source"":26,""target"":24,""value"":4},&#xD;&#xA;		    {""source"":26,""target"":11,""value"":31},&#xD;&#xA;		    {""source"":26,""target"":16,""value"":1},&#xD;&#xA;		    {""source"":26,""target"":25,""value"":1},&#xD;&#xA;		    {""source"":27,""target"":11,""value"":17},&#xD;&#xA;		    {""source"":27,""target"":23,""value"":5},&#xD;&#xA;		    {""source"":27,""target"":25,""value"":5},&#xD;&#xA;		    {""source"":27,""target"":24,""value"":1},&#xD;&#xA;		    {""source"":27,""target"":26,""value"":1},&#xD;&#xA;		    {""source"":28,""target"":11,""value"":8},&#xD;&#xA;		    {""source"":28,""target"":27,""value"":1},&#xD;&#xA;		    {""source"":29,""target"":23,""value"":1},&#xD;&#xA;		    {""source"":29,""target"":27,""value"":1},&#xD;&#xA;		    {""source"":29,""target"":11,""value"":2},&#xD;&#xA;		    {""source"":30,""target"":23,""value"":1},&#xD;&#xA;		    {""source"":31,""target"":30,""value"":2},&#xD;&#xA;		    {""source"":31,""target"":11,""value"":3},&#xD;&#xA;		    {""source"":31,""target"":23,""value"":2},&#xD;&#xA;		    {""source"":31,""target"":27,""value"":1},&#xD;&#xA;		    {""source"":32,""target"":11,""value"":1},&#xD;&#xA;		    {""source"":33,""target"":11,""value"":2},&#xD;&#xA;		    {""source"":33,""target"":27,""value"":1},&#xD;&#xA;		    {""source"":34,""target"":11,""value"":3},&#xD;&#xA;		    {""source"":34,""target"":29,""value"":2},&#xD;&#xA;		    {""source"":35,""target"":11,""value"":3},&#xD;&#xA;		    {""source"":35,""target"":34,""value"":3},&#xD;&#xA;		    {""source"":35,""target"":29,""value"":2},&#xD;&#xA;		    {""source"":36,""target"":34,""value"":2},&#xD;&#xA;		    {""source"":36,""target"":35,""value"":2},&#xD;&#xA;		    {""source"":36,""target"":11,""value"":2},&#xD;&#xA;		    {""source"":36,""target"":29,""value"":1},&#xD;&#xA;		    {""source"":37,""target"":34,""value"":2},&#xD;&#xA;		    {""source"":37,""target"":35,""value"":2},&#xD;&#xA;		    {""source"":37,""target"":36,""value"":2},&#xD;&#xA;		    {""source"":37,""target"":11,""value"":2},&#xD;&#xA;		    {""source"":37,""target"":29,""value"":1},&#xD;&#xA;		    {""source"":38,""target"":34,""value"":2},&#xD;&#xA;		    {""source"":38,""target"":35,""value"":2},&#xD;&#xA;		    {""source"":38,""target"":36,""value"":2},&#xD;&#xA;		    {""source"":38,""target"":37,""value"":2},&#xD;&#xA;		    {""source"":38,""target"":11,""value"":2},&#xD;&#xA;		    {""source"":38,""target"":29,""value"":1},&#xD;&#xA;		    {""source"":39,""target"":25,""value"":1},&#xD;&#xA;		    {""source"":40,""target"":25,""value"":1},&#xD;&#xA;		    {""source"":41,""target"":24,""value"":2},&#xD;&#xA;		    {""source"":41,""target"":25,""value"":3},&#xD;&#xA;		    {""source"":42,""target"":41,""value"":2},&#xD;&#xA;		    {""source"":42,""target"":25,""value"":2},&#xD;&#xA;		    {""source"":42,""target"":24,""value"":1},&#xD;&#xA;		    {""source"":43,""target"":11,""value"":3},&#xD;&#xA;		    {""source"":43,""target"":26,""value"":1},&#xD;&#xA;		    {""source"":43,""target"":27,""value"":1},&#xD;&#xA;		    {""source"":44,""target"":28,""value"":3},&#xD;&#xA;		    {""source"":44,""target"":11,""value"":1},&#xD;&#xA;		    {""source"":45,""target"":28,""value"":2},&#xD;&#xA;		    {""source"":47,""target"":46,""value"":1},&#xD;&#xA;		    {""source"":48,""target"":47,""value"":2},&#xD;&#xA;		    {""source"":48,""target"":25,""value"":1},&#xD;&#xA;		    {""source"":48,""target"":27,""value"":1},&#xD;&#xA;		    {""source"":48,""target"":11,""value"":1},&#xD;&#xA;		    {""source"":49,""target"":26,""value"":3},&#xD;&#xA;		    {""source"":49,""target"":11,""value"":2},&#xD;&#xA;		    {""source"":50,""target"":49,""value"":1},&#xD;&#xA;		    {""source"":50,""target"":24,""value"":1},&#xD;&#xA;		    {""source"":51,""target"":49,""value"":9},&#xD;&#xA;		    {""source"":51,""target"":26,""value"":2},&#xD;&#xA;		    {""source"":51,""target"":11,""value"":2},&#xD;&#xA;		    {""source"":52,""target"":51,""value"":1},&#xD;&#xA;		    {""source"":52,""target"":39,""value"":1},&#xD;&#xA;		    {""source"":53,""target"":51,""value"":1},&#xD;&#xA;		    {""source"":54,""target"":51,""value"":2},&#xD;&#xA;		    {""source"":54,""target"":49,""value"":1},&#xD;&#xA;		    {""source"":54,""target"":26,""value"":1},&#xD;&#xA;		    {""source"":55,""target"":51,""value"":6},&#xD;&#xA;		    {""source"":55,""target"":49,""value"":12},&#xD;&#xA;		    {""source"":55,""target"":39,""value"":1},&#xD;&#xA;		    {""source"":55,""target"":54,""value"":1},&#xD;&#xA;		    {""source"":55,""target"":26,""value"":21},&#xD;&#xA;		    {""source"":55,""target"":11,""value"":19},&#xD;&#xA;		    {""source"":55,""target"":16,""value"":1},&#xD;&#xA;		    {""source"":55,""target"":25,""value"":2},&#xD;&#xA;		    {""source"":55,""target"":41,""value"":5},&#xD;&#xA;		    {""source"":55,""target"":48,""value"":4},&#xD;&#xA;		    {""source"":56,""target"":49,""value"":1},&#xD;&#xA;		    {""source"":56,""target"":55,""value"":1},&#xD;&#xA;		    {""source"":57,""target"":55,""value"":1},&#xD;&#xA;		    {""source"":57,""target"":41,""value"":1},&#xD;&#xA;		    {""source"":57,""target"":48,""value"":1},&#xD;&#xA;		    {""source"":58,""target"":55,""value"":7},&#xD;&#xA;		    {""source"":58,""target"":48,""value"":7},&#xD;&#xA;		    {""source"":58,""target"":27,""value"":6},&#xD;&#xA;		    {""source"":58,""target"":57,""value"":1},&#xD;&#xA;		    {""source"":58,""target"":11,""value"":4},&#xD;&#xA;		    {""source"":59,""target"":58,""value"":15},&#xD;&#xA;		    {""source"":59,""target"":55,""value"":5},&#xD;&#xA;		    {""source"":59,""target"":48,""value"":6},&#xD;&#xA;		    {""source"":59,""target"":57,""value"":2},&#xD;&#xA;		    {""source"":60,""target"":48,""value"":1},&#xD;&#xA;		    {""source"":60,""target"":58,""value"":4},&#xD;&#xA;		    {""source"":60,""target"":59,""value"":2},&#xD;&#xA;		    {""source"":61,""target"":48,""value"":2},&#xD;&#xA;		    {""source"":61,""target"":58,""value"":6},&#xD;&#xA;		    {""source"":61,""target"":60,""value"":2},&#xD;&#xA;		    {""source"":61,""target"":59,""value"":5},&#xD;&#xA;		    {""source"":61,""target"":57,""value"":1},&#xD;&#xA;		    {""source"":61,""target"":55,""value"":1},&#xD;&#xA;		    {""source"":62,""target"":55,""value"":9},&#xD;&#xA;		    {""source"":62,""target"":58,""value"":17},&#xD;&#xA;		    {""source"":62,""target"":59,""value"":13},&#xD;&#xA;		    {""source"":62,""target"":48,""value"":7},&#xD;&#xA;		    {""source"":62,""target"":57,""value"":2},&#xD;&#xA;		    {""source"":62,""target"":41,""value"":1},&#xD;&#xA;		    {""source"":62,""target"":61,""value"":6},&#xD;&#xA;		    {""source"":62,""target"":60,""value"":3},&#xD;&#xA;		    {""source"":63,""target"":59,""value"":5},&#xD;&#xA;		    {""source"":63,""target"":48,""value"":5},&#xD;&#xA;		    {""source"":63,""target"":62,""value"":6},&#xD;&#xA;		    {""source"":63,""target"":57,""value"":2},&#xD;&#xA;		    {""source"":63,""target"":58,""value"":4},&#xD;&#xA;		    {""source"":63,""target"":61,""value"":3},&#xD;&#xA;		    {""source"":63,""target"":60,""value"":2},&#xD;&#xA;		    {""source"":63,""target"":55,""value"":1},&#xD;&#xA;		    {""source"":64,""target"":55,""value"":5},&#xD;&#xA;		    {""source"":64,""target"":62,""value"":12},&#xD;&#xA;		    {""source"":64,""target"":48,""value"":5},&#xD;&#xA;		    {""source"":64,""target"":63,""value"":4},&#xD;&#xA;		    {""source"":64,""target"":58,""value"":10},&#xD;&#xA;		    {""source"":64,""target"":61,""value"":6},&#xD;&#xA;		    {""source"":64,""target"":60,""value"":2},&#xD;&#xA;		    {""source"":64,""target"":59,""value"":9},&#xD;&#xA;		    {""source"":64,""target"":57,""value"":1},&#xD;&#xA;		    {""source"":64,""target"":11,""value"":1},&#xD;&#xA;		    {""source"":65,""target"":63,""value"":5},&#xD;&#xA;		    {""source"":65,""target"":64,""value"":7},&#xD;&#xA;		    {""source"":65,""target"":48,""value"":3},&#xD;&#xA;		    {""source"":65,""target"":62,""value"":5},&#xD;&#xA;		    {""source"":65,""target"":58,""value"":5},&#xD;&#xA;		    {""source"":65,""target"":61,""value"":5},&#xD;&#xA;		    {""source"":65,""target"":60,""value"":2},&#xD;&#xA;		    {""source"":65,""target"":59,""value"":5},&#xD;&#xA;		    {""source"":65,""target"":57,""value"":1},&#xD;&#xA;		    {""source"":65,""target"":55,""value"":2},&#xD;&#xA;		    {""source"":66,""target"":64,""value"":3},&#xD;&#xA;		    {""source"":66,""target"":58,""value"":3},&#xD;&#xA;		    {""source"":66,""target"":59,""value"":1},&#xD;&#xA;		    {""source"":66,""target"":62,""value"":2},&#xD;&#xA;		    {""source"":66,""target"":65,""value"":2},&#xD;&#xA;		    {""source"":66,""target"":48,""value"":1},&#xD;&#xA;		    {""source"":66,""target"":63,""value"":1},&#xD;&#xA;		    {""source"":66,""target"":61,""value"":1},&#xD;&#xA;		    {""source"":66,""target"":60,""value"":1},&#xD;&#xA;		    {""source"":67,""target"":57,""value"":3},&#xD;&#xA;		    {""source"":68,""target"":25,""value"":5},&#xD;&#xA;		    {""source"":68,""target"":11,""value"":1},&#xD;&#xA;		    {""source"":68,""target"":24,""value"":1},&#xD;&#xA;		    {""source"":68,""target"":27,""value"":1},&#xD;&#xA;		    {""source"":68,""target"":48,""value"":1},&#xD;&#xA;		    {""source"":68,""target"":41,""value"":1},&#xD;&#xA;		    {""source"":69,""target"":25,""value"":6},&#xD;&#xA;		    {""source"":69,""target"":68,""value"":6},&#xD;&#xA;		    {""source"":69,""target"":11,""value"":1},&#xD;&#xA;		    {""source"":69,""target"":24,""value"":1},&#xD;&#xA;		    {""source"":69,""target"":27,""value"":2},&#xD;&#xA;		    {""source"":69,""target"":48,""value"":1},&#xD;&#xA;		    {""source"":69,""target"":41,""value"":1},&#xD;&#xA;		    {""source"":70,""target"":25,""value"":4},&#xD;&#xA;		    {""source"":70,""target"":69,""value"":4},&#xD;&#xA;		    {""source"":70,""target"":68,""value"":4},&#xD;&#xA;		    {""source"":70,""target"":11,""value"":1},&#xD;&#xA;		    {""source"":70,""target"":24,""value"":1},&#xD;&#xA;		    {""source"":70,""target"":27,""value"":1},&#xD;&#xA;		    {""source"":70,""target"":41,""value"":1},&#xD;&#xA;		    {""source"":70,""target"":58,""value"":1},&#xD;&#xA;		    {""source"":71,""target"":27,""value"":1},&#xD;&#xA;		    {""source"":71,""target"":69,""value"":2},&#xD;&#xA;		    {""source"":71,""target"":68,""value"":2},&#xD;&#xA;		    {""source"":71,""target"":70,""value"":2},&#xD;&#xA;		    {""source"":71,""target"":11,""value"":1},&#xD;&#xA;		    {""source"":71,""target"":48,""value"":1},&#xD;&#xA;		    {""source"":71,""target"":41,""value"":1},&#xD;&#xA;		    {""source"":71,""target"":25,""value"":1},&#xD;&#xA;		    {""source"":72,""target"":26,""value"":2},&#xD;&#xA;		    {""source"":72,""target"":27,""value"":1},&#xD;&#xA;		    {""source"":72,""target"":11,""value"":1},&#xD;&#xA;		    {""source"":73,""target"":48,""value"":2},&#xD;&#xA;		    {""source"":74,""target"":48,""value"":2},&#xD;&#xA;		    {""source"":74,""target"":73,""value"":3},&#xD;&#xA;		    {""source"":75,""target"":69,""value"":3},&#xD;&#xA;		    {""source"":75,""target"":68,""value"":3},&#xD;&#xA;		    {""source"":75,""target"":25,""value"":3},&#xD;&#xA;		    {""source"":75,""target"":48,""value"":1},&#xD;&#xA;		    {""source"":75,""target"":41,""value"":1},&#xD;&#xA;		    {""source"":75,""target"":70,""value"":1},&#xD;&#xA;		    {""source"":75,""target"":71,""value"":1},&#xD;&#xA;		    {""source"":76,""target"":64,""value"":1},&#xD;&#xA;		    {""source"":76,""target"":65,""value"":1},&#xD;&#xA;		    {""source"":76,""target"":66,""value"":1},&#xD;&#xA;		    {""source"":76,""target"":63,""value"":1},&#xD;&#xA;		    {""source"":76,""target"":62,""value"":1},&#xD;&#xA;		    {""source"":76,""target"":48,""value"":1},&#xD;&#xA;		    {""source"":76,""target"":58,""value"":1}&#xD;&#xA;		  ]&#xD;&#xA;		}"
-1031584601152447846,82,5,"    package de.mjpegsample.MjpegView;&#xD;&#xA;    &#xD;&#xA;    import java.io.BufferedInputStream;&#xD;&#xA;    import java.io.ByteArrayInputStream;&#xD;&#xA;    import java.io.DataInputStream;&#xD;&#xA;    import java.io.IOException;&#xD;&#xA;    import java.io.InputStream;&#xD;&#xA;    import java.net.URI;&#xD;&#xA;    import java.util.Properties;&#xD;&#xA;    &#xD;&#xA;    import org.apache.http.HttpResponse;&#xD;&#xA;    import org.apache.http.client.ClientProtocolException;&#xD;&#xA;    import org.apache.http.client.methods.HttpGet;&#xD;&#xA;    import org.apache.http.impl.client.DefaultHttpClient;&#xD;&#xA;    &#xD;&#xA;    import android.graphics.Bitmap;&#xD;&#xA;    import android.graphics.BitmapFactory;&#xD;&#xA;    &#xD;&#xA;    public class MjpegInputStream extends DataInputStream {&#xD;&#xA;        private final byte[] SOI_MARKER = { (byte) 0xFF, (byte) 0xD8 };&#xD;&#xA;        private final byte[] EOF_MARKER = { (byte) 0xFF, (byte) 0xD9 };&#xD;&#xA;        private final String CONTENT_LENGTH = ""Content-Length"";&#xD;&#xA;        private final static int HEADER_MAX_LENGTH = 100;&#xD;&#xA;        private final static int FRAME_MAX_LENGTH = 40000 + HEADER_MAX_LENGTH;&#xD;&#xA;        private int mContentLength = -1;&#xD;&#xA;    	&#xD;&#xA;        public static MjpegInputStream read(String url) {&#xD;&#xA;            HttpResponse res;&#xD;&#xA;            DefaultHttpClient httpclient = new DefaultHttpClient();		&#xD;&#xA;            try {&#xD;&#xA;                res = httpclient.execute(new HttpGet(URI.create(url)));&#xD;&#xA;                return new MjpegInputStream(res.getEntity().getContent());				&#xD;&#xA;            } catch (ClientProtocolException e) {&#xD;&#xA;            } catch (IOException e) {}&#xD;&#xA;            return null;&#xD;&#xA;        }&#xD;&#xA;    	&#xD;&#xA;        public MjpegInputStream(InputStream in) { super(new BufferedInputStream(in, FRAME_MAX_LENGTH)); }&#xD;&#xA;    	&#xD;&#xA;        private int getEndOfSeqeunce(DataInputStream in, byte[] sequence) throws IOException {&#xD;&#xA;            int seqIndex = 0;&#xD;&#xA;            byte c;&#xD;&#xA;            for(int i=0; i < FRAME_MAX_LENGTH; i++) {&#xD;&#xA;                c = (byte) in.readUnsignedByte();&#xD;&#xA;                if(c == sequence[seqIndex]) {&#xD;&#xA;                    seqIndex++;&#xD;&#xA;                    if(seqIndex == sequence.length) return i + 1;&#xD;&#xA;                } else seqIndex = 0;&#xD;&#xA;            }&#xD;&#xA;            return -1;&#xD;&#xA;        }&#xD;&#xA;    	&#xD;&#xA;        private int getStartOfSequence(DataInputStream in, byte[] sequence) throws IOException {&#xD;&#xA;            int end = getEndOfSeqeunce(in, sequence);&#xD;&#xA;            return (end < 0) ? (-1) : (end - sequence.length);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private int parseContentLength(byte[] headerBytes) throws IOException, NumberFormatException {&#xD;&#xA;            ByteArrayInputStream headerIn = new ByteArrayInputStream(headerBytes);&#xD;&#xA;            Properties props = new Properties();&#xD;&#xA;            props.load(headerIn);&#xD;&#xA;            return Integer.parseInt(props.getProperty(CONTENT_LENGTH));&#xD;&#xA;        }	&#xD;&#xA;    &#xD;&#xA;        public Bitmap readMjpegFrame() throws IOException {&#xD;&#xA;            mark(FRAME_MAX_LENGTH);&#xD;&#xA;            int headerLen = getStartOfSequence(this, SOI_MARKER);&#xD;&#xA;            reset();&#xD;&#xA;            byte[] header = new byte[headerLen];&#xD;&#xA;            readFully(header);&#xD;&#xA;            try {&#xD;&#xA;                mContentLength = parseContentLength(header);&#xD;&#xA;            } catch (NumberFormatException nfe) { &#xD;&#xA;                mContentLength = getEndOfSeqeunce(this, EOF_MARKER); &#xD;&#xA;            }&#xD;&#xA;            reset();&#xD;&#xA;            byte[] frameData = new byte[mContentLength];&#xD;&#xA;            skipBytes(headerLen);&#xD;&#xA;            readFully(frameData);&#xD;&#xA;            return BitmapFactory.decodeStream(new ByteArrayInputStream(frameData));&#xD;&#xA;        }&#xD;&#xA;    }"
186014685163879330,84,5,"    public class MyBluetoothService {&#xD;&#xA;        private static final String TAG = ""MY_APP_DEBUG_TAG"";&#xD;&#xA;        private Handler mHandler; // handler that gets info from Bluetooth service&#xD;&#xA;        // Defines several constants used when transmitting messages between the&#xD;&#xA;        // service and the UI.&#xD;&#xA;        private interface MessageConstants {&#xD;&#xA;            public static final int MESSAGE_READ = 0;&#xD;&#xA;            public static final int MESSAGE_WRITE = 1;&#xD;&#xA;            public static final int MESSAGE_TOAST = 2;&#xD;&#xA;            // ... (Add other message types here as needed.)&#xD;&#xA;        }&#xD;&#xA;        private class ConnectedThread extends Thread {&#xD;&#xA;            private final BluetoothSocket mmSocket;&#xD;&#xA;            private final InputStream mmInStream;&#xD;&#xA;            private final OutputStream mmOutStream;&#xD;&#xA;            private byte[] mmBuffer; // mmBuffer store for the stream&#xD;&#xA;            public ConnectedThread(BluetoothSocket socket) {&#xD;&#xA;                mmSocket = socket;&#xD;&#xA;                InputStream tmpIn = null;&#xD;&#xA;                OutputStream tmpOut = null;&#xD;&#xA;                // Get the input and output streams; using temp objects because&#xD;&#xA;                // member streams are final.&#xD;&#xA;                try {&#xD;&#xA;                    tmpIn = socket.getInputStream();&#xD;&#xA;                } catch (IOException e) {&#xD;&#xA;                    Log.e(TAG, ""Error occurred when creating input stream"", e);&#xD;&#xA;                }&#xD;&#xA;                try {&#xD;&#xA;                    tmpOut = socket.getOutputStream();&#xD;&#xA;                } catch (IOException e) {&#xD;&#xA;                    Log.e(TAG, ""Error occurred when creating output stream"", e);&#xD;&#xA;                }&#xD;&#xA;                mmInStream = tmpIn;&#xD;&#xA;                mmOutStream = tmpOut;&#xD;&#xA;            }&#xD;&#xA;            public void run() {&#xD;&#xA;                mmBuffer = new byte[1024];&#xD;&#xA;                int numBytes; // bytes returned from read()&#xD;&#xA;                // Keep listening to the InputStream until an exception occurs.&#xD;&#xA;                while (true) {&#xD;&#xA;                    try {&#xD;&#xA;                        // Read from the InputStream.&#xD;&#xA;                        numBytes = mmInStream.read(mmBuffer);&#xD;&#xA;                        // Send the obtained bytes to the UI activity.&#xD;&#xA;                        Message readMsg = mHandler.obtainMessage(&#xD;&#xA;                                MessageConstants.MESSAGE_READ, numBytes, -1,&#xD;&#xA;                                mmBuffer);&#xD;&#xA;                        readMsg.sendToTarget();&#xD;&#xA;                    } catch (IOException e) {&#xD;&#xA;                        Log.d(TAG, ""Input stream was disconnected"", e);&#xD;&#xA;                        break;&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;            // Call this from the main activity to send data to the remote device.&#xD;&#xA;            public void write(byte[] bytes) {&#xD;&#xA;                try {&#xD;&#xA;                    mmOutStream.write(bytes);&#xD;&#xA;                    // Share the sent message with the UI activity.&#xD;&#xA;                    Message writtenMsg = mHandler.obtainMessage(&#xD;&#xA;                            MessageConstants.MESSAGE_WRITE, -1, -1, mmBuffer);&#xD;&#xA;                    writtenMsg.sendToTarget();&#xD;&#xA;                } catch (IOException e) {&#xD;&#xA;                    Log.e(TAG, ""Error occurred when sending data"", e);&#xD;&#xA;                    // Send a failure message back to the activity.&#xD;&#xA;                    Message writeErrorMsg =&#xD;&#xA;                            mHandler.obtainMessage(MessageConstants.MESSAGE_TOAST);&#xD;&#xA;                    Bundle bundle = new Bundle();&#xD;&#xA;                    bundle.putString(""toast"",&#xD;&#xA;                            ""Couldn't send data to the other device"");&#xD;&#xA;                    writeErrorMsg.setData(bundle);&#xD;&#xA;                    mHandler.sendMessage(writeErrorMsg);&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;            // Call this method from the main activity to shut down the connection.&#xD;&#xA;            public void cancel() {&#xD;&#xA;                try {&#xD;&#xA;                    mmSocket.close();&#xD;&#xA;                } catch (IOException e) {&#xD;&#xA;                    Log.e(TAG, ""Could not close the connect socket"", e);&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }"
1458748944072067785,85,5,"    drop table if exists employees;&#xD;&#xA;    create table employees&#xD;&#xA;    (&#xD;&#xA;    emp_id smallint unsigned not null auto_increment primary key,&#xD;&#xA;    name varchar(255) not null,&#xD;&#xA;    boss_id smallint unsigned null,&#xD;&#xA;    key (boss_id)&#xD;&#xA;    )&#xD;&#xA;    engine = innodb;&#xD;&#xA;    &#xD;&#xA;    insert into employees (name, boss_id) values&#xD;&#xA;    ('f00',null), &#xD;&#xA;      ('ali later',1), &#xD;&#xA;      ('megan fox',1), &#xD;&#xA;    	  ('jessica alba',3), &#xD;&#xA;    	  ('eva longoria',3), &#xD;&#xA;    		 ('keira knightley',5), &#xD;&#xA;    		    ('liv tyler',6), &#xD;&#xA;      		    ('sophie marceau',6);&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    drop procedure if exists employees_hier;&#xD;&#xA;    &#xD;&#xA;    delimiter #&#xD;&#xA;    &#xD;&#xA;    create procedure employees_hier&#xD;&#xA;    (&#xD;&#xA;    in p_emp_id smallint unsigned&#xD;&#xA;    )&#xD;&#xA;    begin&#xD;&#xA;    &#xD;&#xA;    declare v_done tinyint unsigned default(0);&#xD;&#xA;    declare v_dpth smallint unsigned default(0);&#xD;&#xA;    &#xD;&#xA;    create temporary table hier(&#xD;&#xA;     boss_id smallint unsigned, &#xD;&#xA;     emp_id smallint unsigned, &#xD;&#xA;     depth smallint unsigned&#xD;&#xA;    )engine = memory;&#xD;&#xA;    &#xD;&#xA;    insert into hier select boss_id, emp_id, v_dpth from employees where emp_id = p_emp_id;&#xD;&#xA;    &#xD;&#xA;    /* http://dev.mysql.com/doc/refman/5.0/en/temporary-table-problems.html */&#xD;&#xA;    &#xD;&#xA;    create temporary table emps engine=memory select * from hier;&#xD;&#xA;    &#xD;&#xA;    while not v_done do&#xD;&#xA;     &#xD;&#xA;    	if exists( select 1 from employees e inner join hier on e.boss_id = hier.emp_id and hier.depth = v_dpth) then&#xD;&#xA;    		&#xD;&#xA;    		insert into hier select e.boss_id, e.emp_id, v_dpth + 1 &#xD;&#xA;    			from employees e inner join emps on e.boss_id = emps.emp_id and emps.depth = v_dpth;&#xD;&#xA;    &#xD;&#xA;    		set v_dpth = v_dpth + 1;			&#xD;&#xA;    		&#xD;&#xA;    		truncate table emps;&#xD;&#xA;    		insert into emps select * from hier where depth = v_dpth;&#xD;&#xA;    		&#xD;&#xA;    	else&#xD;&#xA;    		set v_done = 1;&#xD;&#xA;    	end if;&#xD;&#xA;    	&#xD;&#xA;    end while;&#xD;&#xA;    &#xD;&#xA;    select &#xD;&#xA;     e.emp_id,&#xD;&#xA;     e.name as emp_name,&#xD;&#xA;     p.emp_id as boss_emp_id,&#xD;&#xA;     p.name as boss_name,&#xD;&#xA;     hier.depth&#xD;&#xA;    from &#xD;&#xA;     hier&#xD;&#xA;    inner join employees e on hier.emp_id = e.emp_id&#xD;&#xA;    left outer join employees p on hier.boss_id = p.emp_id;&#xD;&#xA;    		&#xD;&#xA;    drop temporary table if exists hier;&#xD;&#xA;    drop temporary table if exists emps;&#xD;&#xA;    &#xD;&#xA;    end #&#xD;&#xA;    &#xD;&#xA;    delimiter ;&#xD;&#xA;    &#xD;&#xA;    -- call this sproc from your php&#xD;&#xA;    &#xD;&#xA;    call employees_hier(1);"
-5049830321457974137,85,5,"    <project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""&#xD;&#xA;        xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"">&#xD;&#xA;        <modelVersion>4.0.0</modelVersion>&#xD;&#xA;        <groupId>com.spark-scala</groupId>&#xD;&#xA;        <artifactId>spark-scala</artifactId>&#xD;&#xA;        <version>0.0.1-SNAPSHOT</version>&#xD;&#xA;        <name>${project.artifactId}</name>&#xD;&#xA;        <description>Spark in Scala</description>&#xD;&#xA;        <inceptionYear>2010</inceptionYear>&#xD;&#xA;    &#xD;&#xA;        <properties>&#xD;&#xA;            <maven.compiler.source>1.8</maven.compiler.source>&#xD;&#xA;            <maven.compiler.target>1.8</maven.compiler.target>&#xD;&#xA;            <encoding>UTF-8</encoding>&#xD;&#xA;            <scala.tools.version>2.10</scala.tools.version>&#xD;&#xA;            <!-- Put the Scala version of the cluster -->&#xD;&#xA;            <scala.version>2.10.4</scala.version>&#xD;&#xA;        </properties>&#xD;&#xA;    &#xD;&#xA;        <!-- repository to add org.apache.spark -->&#xD;&#xA;        <repositories>&#xD;&#xA;            <repository>&#xD;&#xA;                <id>cloudera-repo-releases</id>&#xD;&#xA;                <url>https://repository.cloudera.com/artifactory/repo/</url>&#xD;&#xA;            </repository>&#xD;&#xA;        </repositories>&#xD;&#xA;    &#xD;&#xA;        <build>&#xD;&#xA;            <sourceDirectory>src/main/scala</sourceDirectory>&#xD;&#xA;            <testSourceDirectory>src/test/scala</testSourceDirectory>&#xD;&#xA;            <plugins>&#xD;&#xA;                <plugin>&#xD;&#xA;                    <!-- see http://davidb.github.com/scala-maven-plugin -->&#xD;&#xA;                    <groupId>net.alchim31.maven</groupId>&#xD;&#xA;                    <artifactId>scala-maven-plugin</artifactId>&#xD;&#xA;                    <version>3.2.1</version>&#xD;&#xA;                </plugin>&#xD;&#xA;                <plugin>&#xD;&#xA;                    <groupId>org.apache.maven.plugins</groupId>&#xD;&#xA;                    <artifactId>maven-surefire-plugin</artifactId>&#xD;&#xA;                    <version>2.13</version>&#xD;&#xA;                    <configuration>&#xD;&#xA;                        <useFile>false</useFile>&#xD;&#xA;                        <disableXmlReport>true</disableXmlReport>&#xD;&#xA;                        <includes>&#xD;&#xA;                            <include>**/*Test.*</include>&#xD;&#xA;                            <include>**/*Suite.*</include>&#xD;&#xA;                        </includes>&#xD;&#xA;                    </configuration>&#xD;&#xA;                </plugin>&#xD;&#xA;    &#xD;&#xA;                <!-- ""package"" command plugin -->&#xD;&#xA;                <plugin>&#xD;&#xA;                    <artifactId>maven-assembly-plugin</artifactId>&#xD;&#xA;                    <version>2.4.1</version>&#xD;&#xA;                    <configuration>&#xD;&#xA;                        <descriptorRefs>&#xD;&#xA;                            <descriptorRef>jar-with-dependencies</descriptorRef>&#xD;&#xA;                        </descriptorRefs>&#xD;&#xA;                    </configuration>&#xD;&#xA;                    <executions>&#xD;&#xA;                        <execution>&#xD;&#xA;                            <id>make-assembly</id>&#xD;&#xA;                            <phase>package</phase>&#xD;&#xA;                            <goals>&#xD;&#xA;                                <goal>single</goal>&#xD;&#xA;                            </goals>&#xD;&#xA;                        </execution>&#xD;&#xA;                    </executions>&#xD;&#xA;                </plugin>&#xD;&#xA;                <plugin>&#xD;&#xA;                    <groupId>org.scala-tools</groupId>&#xD;&#xA;                    <artifactId>maven-scala-plugin</artifactId>&#xD;&#xA;                </plugin>&#xD;&#xA;            </plugins>&#xD;&#xA;        </build>&#xD;&#xA;    &#xD;&#xA;        <dependencies>&#xD;&#xA;    		<dependency>&#xD;&#xA;    		    <groupId>org.apache.spark</groupId>&#xD;&#xA;    		    <artifactId>spark-core_2.11</artifactId>&#xD;&#xA;    		    <version>1.2.1</version>&#xD;&#xA;    		</dependency>&#xD;&#xA;        </dependencies>&#xD;&#xA;    </project>"
-7456150304525682024,87,5,"    import javax.xml.parsers.SAXParser;&#xD;&#xA;    import javax.xml.parsers.SAXParserFactory;&#xD;&#xA;    import org.xml.sax.Attributes;&#xD;&#xA;    import org.xml.sax.SAXException;&#xD;&#xA;    import org.xml.sax.helpers.DefaultHandler;&#xD;&#xA;     &#xD;&#xA;    public class ReadXMLFile {&#xD;&#xA;     &#xD;&#xA;       public static void main(String argv[]) {&#xD;&#xA;     &#xD;&#xA;        try {&#xD;&#xA;     &#xD;&#xA;    	SAXParserFactory factory = SAXParserFactory.newInstance();&#xD;&#xA;    	SAXParser saxParser = factory.newSAXParser();&#xD;&#xA;     &#xD;&#xA;    	DefaultHandler handler = new DefaultHandler() {&#xD;&#xA;     &#xD;&#xA;    	boolean bfname = false;&#xD;&#xA;    	boolean blname = false;&#xD;&#xA;    	boolean bnname = false;&#xD;&#xA;    	boolean bsalary = false;&#xD;&#xA;     &#xD;&#xA;    	public void startElement(String uri, String localName,String qName, &#xD;&#xA;                    Attributes attributes) throws SAXException {&#xD;&#xA;     &#xD;&#xA;    		System.out.println(""Start Element :"" + qName);&#xD;&#xA;     &#xD;&#xA;    		if (qName.equalsIgnoreCase(""FIRSTNAME"")) {&#xD;&#xA;    			bfname = true;&#xD;&#xA;    		}&#xD;&#xA;     &#xD;&#xA;    		if (qName.equalsIgnoreCase(""LASTNAME"")) {&#xD;&#xA;    			blname = true;&#xD;&#xA;    		}&#xD;&#xA;     &#xD;&#xA;    		if (qName.equalsIgnoreCase(""NICKNAME"")) {&#xD;&#xA;    			bnname = true;&#xD;&#xA;    		}&#xD;&#xA;     &#xD;&#xA;    		if (qName.equalsIgnoreCase(""SALARY"")) {&#xD;&#xA;    			bsalary = true;&#xD;&#xA;    		}&#xD;&#xA;     &#xD;&#xA;    	}&#xD;&#xA;     &#xD;&#xA;    	public void endElement(String uri, String localName,&#xD;&#xA;    		String qName) throws SAXException {&#xD;&#xA;     &#xD;&#xA;    		System.out.println(""End Element :"" + qName);&#xD;&#xA;     &#xD;&#xA;    	}&#xD;&#xA;     &#xD;&#xA;    	public void characters(char ch[], int start, int length) throws SAXException {&#xD;&#xA;     &#xD;&#xA;    		if (bfname) {&#xD;&#xA;    			System.out.println(""First Name : "" + new String(ch, start, length));&#xD;&#xA;    			bfname = false;&#xD;&#xA;    		}&#xD;&#xA;     &#xD;&#xA;    		if (blname) {&#xD;&#xA;    			System.out.println(""Last Name : "" + new String(ch, start, length));&#xD;&#xA;    			blname = false;&#xD;&#xA;    		}&#xD;&#xA;     &#xD;&#xA;    		if (bnname) {&#xD;&#xA;    			System.out.println(""Nick Name : "" + new String(ch, start, length));&#xD;&#xA;    			bnname = false;&#xD;&#xA;    		}&#xD;&#xA;     &#xD;&#xA;    		if (bsalary) {&#xD;&#xA;    			System.out.println(""Salary : "" + new String(ch, start, length));&#xD;&#xA;    			bsalary = false;&#xD;&#xA;    		}&#xD;&#xA;     &#xD;&#xA;    	}&#xD;&#xA;     &#xD;&#xA;         };&#xD;&#xA;     &#xD;&#xA;           saxParser.parse(""c:\\file.xml"", handler);&#xD;&#xA;     &#xD;&#xA;         } catch (Exception e) {&#xD;&#xA;           e.printStackTrace();&#xD;&#xA;         }&#xD;&#xA;     &#xD;&#xA;       }&#xD;&#xA;     &#xD;&#xA;    }"
-8507762855062252813,88,5,"    package ie.example.artur.projectrepeat;&#xD;&#xA;    &#xD;&#xA;    import android.content.Context;&#xD;&#xA;    import android.view.LayoutInflater;&#xD;&#xA;    import android.view.View;&#xD;&#xA;    import android.view.ViewGroup;&#xD;&#xA;    import android.widget.AdapterView;&#xD;&#xA;    import android.widget.ArrayAdapter;&#xD;&#xA;    import android.widget.Button;&#xD;&#xA;    import android.widget.TextView;&#xD;&#xA;    &#xD;&#xA;    import java.util.ArrayList;&#xD;&#xA;    import java.util.List;&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * Created by family on 10/08/2016.&#xD;&#xA;     */&#xD;&#xA;    public class ListDataAdapter extends ArrayAdapter  {&#xD;&#xA;       List list = new ArrayList ();&#xD;&#xA;    &#xD;&#xA;        public ListDataAdapter(Context context, int resource) {&#xD;&#xA;            super(context, resource);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        static class LayoutHandler&#xD;&#xA;        {&#xD;&#xA;            TextView id,product_name,category;&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;        @Override&#xD;&#xA;        public void add(Object object) {&#xD;&#xA;            super.add(object);&#xD;&#xA;            list.add(object);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public int getCount() {&#xD;&#xA;            return list.size();&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public Object getItem(int position) {&#xD;&#xA;            return list.get(position);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public View getView(int position, View convertView, ViewGroup parent) {&#xD;&#xA;           LayoutHandler layoutHandler;&#xD;&#xA;            View row = convertView;&#xD;&#xA;            if(row == null)&#xD;&#xA;            {&#xD;&#xA;                LayoutInflater layoutInflater = (LayoutInflater) this.getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);&#xD;&#xA;                row = layoutInflater.inflate(R.layout.row_layout,parent,false);&#xD;&#xA;                layoutHandler = new LayoutHandler();&#xD;&#xA;                layoutHandler.id = (TextView) row.findViewById(R.id.product_id);&#xD;&#xA;                layoutHandler.product_name = (TextView) row.findViewById(R.id.product_name);&#xD;&#xA;                layoutHandler.category = (TextView) row.findViewById(R.id.product_category);&#xD;&#xA;                row.setTag(layoutHandler);&#xD;&#xA;            }&#xD;&#xA;            else {&#xD;&#xA;                layoutHandler = (LayoutHandler) row.getTag();&#xD;&#xA;    &#xD;&#xA;            }&#xD;&#xA;            DataProvider dataProvider = (DataProvider) this.getItem(position);&#xD;&#xA;            layoutHandler.id.setText(dataProvider.getId());&#xD;&#xA;            layoutHandler.product_name.setText(dataProvider.getProduct_name());&#xD;&#xA;            layoutHandler.category.setText(dataProvider.getCategory());&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            return row;&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        }"
6476838889549613891,89,5,"         String DisplayName = ""XYZ"";&#xD;&#xA;         String MobileNumber = ""123456"";&#xD;&#xA;         String HomeNumber = ""1111"";&#xD;&#xA;             String WorkNumber = ""2222"";&#xD;&#xA;          String emailID = ""email@nomail.com"";&#xD;&#xA;         String company = ""bad"";&#xD;&#xA;       String jobTitle = ""abcd"";&#xD;&#xA;    &#xD;&#xA;    ArrayList < ContentProviderOperation > ops = new ArrayList <     &#xD;&#xA;    ContentProviderOperation > ();&#xD;&#xA;      ops.add(ContentProviderOperation.newInsert(&#xD;&#xA;      ContactsContract.RawContacts.CONTENT_URI)&#xD;&#xA;     .withValue(ContactsContract.RawContacts.ACCOUNT_TYPE, null)&#xD;&#xA;     .withValue(ContactsContract.RawContacts.ACCOUNT_NAME, null)&#xD;&#xA;     .build());&#xD;&#xA;     //------------------------------------------------------ Names&#xD;&#xA;      if (DisplayName != null) {&#xD;&#xA;      ops.add(ContentProviderOperation.newInsert(&#xD;&#xA;      ContactsContract.Data.CONTENT_URI)&#xD;&#xA;         .withValueBackReference(ContactsContract.Data.RAW_CONTACT_ID, 0)&#xD;&#xA;         .withValue(ContactsContract.Data.MIMETYPE,&#xD;&#xA;     ContactsContract.CommonDataKinds.StructuredName.CONTENT_ITEM_TYPE)&#xD;&#xA;         .withValue(&#xD;&#xA;     ContactsContract.CommonDataKinds.StructuredName.DISPLAY_NAME,&#xD;&#xA;     DisplayName).build());&#xD;&#xA;     }&#xD;&#xA;     //------------------------------------------------------ Mobile Number                     &#xD;&#xA;     if (MobileNumber != null) {&#xD;&#xA;     ops.add(ContentProviderOperation.&#xD;&#xA;     newInsert(ContactsContract.Data.CONTENT_URI)&#xD;&#xA;         .withValueBackReference(ContactsContract.Data.RAW_CONTACT_ID, 0)&#xD;&#xA;         .withValue(ContactsContract.Data.MIMETYPE,&#xD;&#xA;     ContactsContract.CommonDataKinds.Phone.CONTENT_ITEM_TYPE)&#xD;&#xA;         .withValue(ContactsContract.CommonDataKinds.Phone.NUMBER, MobileNumber)&#xD;&#xA;         .withValue(ContactsContract.CommonDataKinds.Phone.TYPE,&#xD;&#xA;     ContactsContract.CommonDataKinds.Phone.TYPE_MOBILE)&#xD;&#xA;         .build());&#xD;&#xA;     }&#xD;&#xA;    //------------------------------------------------------ Home Numbers&#xD;&#xA;    if (HomeNumber != null) {    ops.add(ContentProviderOperation.newInsert(ContactsContract.Data.CONTENT_URI)&#xD;&#xA;         .withValueBackReference(ContactsContract.Data.RAW_CONTACT_ID, 0)&#xD;&#xA;         .withValue(ContactsContract.Data.MIMETYPE,&#xD;&#xA;     ContactsContract.CommonDataKinds.Phone.CONTENT_ITEM_TYPE)&#xD;&#xA;         .withValue(ContactsContract.CommonDataKinds.Phone.NUMBER, HomeNumber)&#xD;&#xA;         .withValue(ContactsContract.CommonDataKinds.Phone.TYPE,&#xD;&#xA;     ContactsContract.CommonDataKinds.Phone.TYPE_HOME)&#xD;&#xA;         .build());&#xD;&#xA;    }&#xD;&#xA;     //------------------------------------------------------ Work Numbers&#xD;&#xA;     if (WorkNumber != null) {     ops.add(ContentProviderOperation.newInsert(ContactsContract.Data.CONTENT_URI)&#xD;&#xA;         .withValueBackReference(ContactsContract.Data.RAW_CONTACT_ID, 0)&#xD;&#xA;         .withValue(ContactsContract.Data.MIMETYPE,&#xD;&#xA;     ContactsContract.CommonDataKinds.Phone.CONTENT_ITEM_TYPE)&#xD;&#xA;         .withValue(ContactsContract.CommonDataKinds.Phone.NUMBER, WorkNumber)&#xD;&#xA;         .withValue(ContactsContract.CommonDataKinds.Phone.TYPE,&#xD;&#xA;     ContactsContract.CommonDataKinds.Phone.TYPE_WORK)&#xD;&#xA;         .build());&#xD;&#xA;      }&#xD;&#xA;    //------------------------------------------------------ Email&#xD;&#xA;      if (emailID != null) {ops.add(ContentProviderOperation.newInsert(ContactsContract.Data.CONTENT_URI)&#xD;&#xA;         .withValueBackReference(ContactsContract.Data.RAW_CONTACT_ID, 0)&#xD;&#xA;         .withValue(ContactsContract.Data.MIMETYPE,&#xD;&#xA;     ContactsContract.CommonDataKinds.Email.CONTENT_ITEM_TYPE)&#xD;&#xA;         .withValue(ContactsContract.CommonDataKinds.Email.DATA, emailID)&#xD;&#xA;         .withValue(ContactsContract.CommonDataKinds.Email.TYPE,   &#xD;&#xA;    ContactsContract.CommonDataKinds.Email.TYPE_WORK)&#xD;&#xA;         .build());&#xD;&#xA;    }//------------------------------------------------------ Organization&#xD;&#xA;     if (!company.equals("""") && !jobTitle.equals("""")) { ops.add(ContentProviderOperation.newInsert(ContactsContract.Data.CONTENT_URI)&#xD;&#xA;         .withValueBackReference(ContactsContract.Data.RAW_CONTACT_ID, 0)&#xD;&#xA;         .withValue(ContactsContract.Data.MIMETYPE,&#xD;&#xA;     ContactsContract.CommonDataKinds.Organization.CONTENT_ITEM_TYPE)&#xD;&#xA;         .withValue(ContactsContract.CommonDataKinds.Organization.COMPANY,    &#xD;&#xA;     company) .withValue(ContactsContract.CommonDataKinds.Organization.TYPE,   &#xD;&#xA;      ContactsContract.CommonDataKinds.Organization.TYPE_WORK)&#xD;&#xA;         .withValue(ContactsContract.CommonDataKinds.Organization.TITLE,     &#xD;&#xA;     jobTitle)&#xD;&#xA;         .withValue(ContactsContract.CommonDataKinds.Organization.TYPE,  &#xD;&#xA;      ContactsContract.CommonDataKinds.Organization.TYPE_WORK)&#xD;&#xA;         .build());&#xD;&#xA;     }&#xD;&#xA;    // Asking the Contact provider to create a new contact                 &#xD;&#xA;      try {&#xD;&#xA;     getContentResolver().applyBatch(ContactsContract.AUTHORITY, ops);&#xD;&#xA;      } catch (Exception e) {&#xD;&#xA;     e.printStackTrace();&#xD;&#xA;     Toast.makeText(myContext, ""Exception: "" + e.getMessage(),    &#xD;&#xA;     Toast.LENGTH_SHORT).show();&#xD;&#xA;    } "
4527902532025964226,90,5,"    import java.io.IOException;&#xD;&#xA;    import java.io.OutputStream;&#xD;&#xA;    import java.util.concurrent.*;&#xD;&#xA;    &#xD;&#xA;    public class QueueOutputStream extends OutputStream&#xD;&#xA;    {&#xD;&#xA;      private static final int DEFAULT_BUFFER_SIZE=1024;&#xD;&#xA;      private static final byte[] END_SIGNAL=new byte[]{};&#xD;&#xA;    &#xD;&#xA;      private final BlockingQueue<byte[]> queue=new LinkedBlockingDeque<>();&#xD;&#xA;      private final byte[] buffer;&#xD;&#xA;    &#xD;&#xA;      private boolean closed=false;&#xD;&#xA;      private int count=0;&#xD;&#xA;    &#xD;&#xA;      public QueueOutputStream()&#xD;&#xA;      {&#xD;&#xA;        this(DEFAULT_BUFFER_SIZE);&#xD;&#xA;      }&#xD;&#xA;    &#xD;&#xA;      public QueueOutputStream(final int bufferSize)&#xD;&#xA;      {&#xD;&#xA;        if(bufferSize<=0){&#xD;&#xA;          throw new IllegalArgumentException(""Buffer size <= 0"");&#xD;&#xA;        }&#xD;&#xA;        this.buffer=new byte[bufferSize];&#xD;&#xA;      }&#xD;&#xA;    &#xD;&#xA;      private synchronized void flushBuffer()&#xD;&#xA;      {&#xD;&#xA;        if(count>0){&#xD;&#xA;          final byte[] copy=new byte[count];&#xD;&#xA;          System.arraycopy(buffer,0,copy,0,count);&#xD;&#xA;          queue.offer(copy);&#xD;&#xA;          count=0;&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;    &#xD;&#xA;      @Override&#xD;&#xA;      public synchronized void write(final int b) throws IOException&#xD;&#xA;      {&#xD;&#xA;        if(closed){&#xD;&#xA;          throw new IllegalStateException(""Stream is closed"");&#xD;&#xA;        }&#xD;&#xA;        if(count>=buffer.length){&#xD;&#xA;          flushBuffer();&#xD;&#xA;        }&#xD;&#xA;        buffer[count++]=(byte)b;&#xD;&#xA;      }&#xD;&#xA;    &#xD;&#xA;      @Override&#xD;&#xA;      public synchronized void write(final byte[] b, final int off, final int len) throws IOException&#xD;&#xA;      {&#xD;&#xA;        super.write(b,off,len);&#xD;&#xA;      }&#xD;&#xA;    &#xD;&#xA;      @Override&#xD;&#xA;      public synchronized void close() throws IOException&#xD;&#xA;      {&#xD;&#xA;        flushBuffer();&#xD;&#xA;        queue.offer(END_SIGNAL);&#xD;&#xA;        closed=true;&#xD;&#xA;      }&#xD;&#xA;    &#xD;&#xA;      public Future<Void> asyncSendToOutputStream(final ExecutorService executor, final OutputStream outputStream)&#xD;&#xA;      {&#xD;&#xA;        return executor.submit(&#xD;&#xA;                new Callable<Void>()&#xD;&#xA;                {&#xD;&#xA;                  @Override&#xD;&#xA;                  public Void call() throws Exception&#xD;&#xA;                  {&#xD;&#xA;                    try{&#xD;&#xA;                      byte[] buffer=queue.take();&#xD;&#xA;                      while(buffer!=END_SIGNAL){&#xD;&#xA;                        outputStream.write(buffer);&#xD;&#xA;                        buffer=queue.take();&#xD;&#xA;                      }&#xD;&#xA;                      outputStream.flush();&#xD;&#xA;                    } catch(Exception e){&#xD;&#xA;                      close();&#xD;&#xA;                      throw e;&#xD;&#xA;                    } finally{&#xD;&#xA;                      outputStream.close();&#xD;&#xA;                    }&#xD;&#xA;                    return null;&#xD;&#xA;                  }&#xD;&#xA;                }&#xD;&#xA;        );&#xD;&#xA;      }"
1471806529092789260,91,5,"     public class DataBaseHelper extends SQLiteOpenHelper {&#xD;&#xA;         private Context mycontext;&#xD;&#xA;    &#xD;&#xA;         //private String DB_PATH = mycontext.getApplicationContext().getPackageName()+""/databases/"";&#xD;&#xA;         private static String DB_NAME = ""(datbasename).sqlite""; //the extension may be .sqlite or .db&#xD;&#xA;         public SQLiteDatabase myDataBase;&#xD;&#xA;         /*private String DB_PATH = ""/data/data/""&#xD;&#xA;                                 + mycontext.getApplicationContext().getPackageName()&#xD;&#xA;                                 + ""/databases/"";*/&#xD;&#xA;    &#xD;&#xA;         public DataBaseHelper(Context context) throws IOException {&#xD;&#xA;             super(context, DB_NAME, null, 1);&#xD;&#xA;             this.mycontext = context;&#xD;&#xA;             boolean dbexist = checkdatabase();&#xD;&#xA;             if (dbexist) {&#xD;&#xA;                 //System.out.println(""Database exists"");&#xD;&#xA;                 opendatabase();&#xD;&#xA;             } else {&#xD;&#xA;                 System.out.println(""Database doesn't exist"");&#xD;&#xA;                 createdatabase();&#xD;&#xA;             }&#xD;&#xA;    &#xD;&#xA;         }&#xD;&#xA;    &#xD;&#xA;         public void createdatabase() throws IOException {&#xD;&#xA;             boolean dbexist = checkdatabase();&#xD;&#xA;             if (dbexist) {&#xD;&#xA;                 //System.out.println("" Database exists."");&#xD;&#xA;             } else {&#xD;&#xA;                 this.getReadableDatabase();&#xD;&#xA;                 try {&#xD;&#xA;                     copydatabase();&#xD;&#xA;                 } catch (IOException e) {&#xD;&#xA;                     throw new Error(""Error copying database"");&#xD;&#xA;                 }&#xD;&#xA;             }&#xD;&#xA;         }&#xD;&#xA;         private boolean checkdatabase() {&#xD;&#xA;             //SQLiteDatabase checkdb = null;&#xD;&#xA;             boolean checkdb = false;&#xD;&#xA;             try {&#xD;&#xA;                 String myPath = DB_PATH + DB_NAME;&#xD;&#xA;                 File dbfile = new File(myPath);&#xD;&#xA;                 //checkdb = SQLiteDatabase.openDatabase(myPath,null,SQLiteDatabase.OPEN_READWRITE);&#xD;&#xA;                 checkdb = dbfile.exists();&#xD;&#xA;             } catch (SQLiteException e) {&#xD;&#xA;                 System.out.println(""Database doesn't exist"");&#xD;&#xA;             }&#xD;&#xA;    &#xD;&#xA;             return checkdb;&#xD;&#xA;         }&#xD;&#xA;         private void copydatabase() throws IOException {&#xD;&#xA;    &#xD;&#xA;             //Open your local db as the input stream&#xD;&#xA;             InputStream myinput = mycontext.getAssets().open(DB_NAME);&#xD;&#xA;    &#xD;&#xA;             // Path to the just created empty db&#xD;&#xA;             String outfilename = DB_PATH + DB_NAME;&#xD;&#xA;    &#xD;&#xA;             //Open the empty db as the output stream&#xD;&#xA;             OutputStream myoutput = new FileOutputStream(""/data/data/(packagename)/databases/(datbasename).sqlite"");&#xD;&#xA;    &#xD;&#xA;             // transfer byte to inputfile to outputfile&#xD;&#xA;             byte[] buffer = new byte[1024];&#xD;&#xA;             int length;&#xD;&#xA;             while ((length = myinput.read(buffer)) > 0) {&#xD;&#xA;                 myoutput.write(buffer, 0, length);&#xD;&#xA;             }&#xD;&#xA;    &#xD;&#xA;             //Close the streams&#xD;&#xA;             myoutput.flush();&#xD;&#xA;             myoutput.close();&#xD;&#xA;             myinput.close();&#xD;&#xA;    &#xD;&#xA;         }&#xD;&#xA;    &#xD;&#xA;         public void opendatabase() throws SQLException {&#xD;&#xA;             //Open the database&#xD;&#xA;             String mypath = DB_PATH + DB_NAME;&#xD;&#xA;             myDataBase = SQLiteDatabase.openDatabase(mypath, null, SQLiteDatabase.OPEN_READWRITE);&#xD;&#xA;    &#xD;&#xA;         }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;         public synchronized void close() {&#xD;&#xA;             if (myDataBase != null) {&#xD;&#xA;                 myDataBase.close();&#xD;&#xA;             }&#xD;&#xA;             super.close();&#xD;&#xA;         }"
7482384650639612460,91,5,"    public class DisposeExample&#xD;&#xA;    {&#xD;&#xA;        // A base class that implements IDisposable. &#xD;&#xA;        // By implementing IDisposable, you are announcing that &#xD;&#xA;        // instances of this type allocate scarce resources. &#xD;&#xA;        public class MyResource: IDisposable&#xD;&#xA;        {&#xD;&#xA;            // Pointer to an external unmanaged resource. &#xD;&#xA;            private IntPtr handle;&#xD;&#xA;            // Other managed resource this class uses. &#xD;&#xA;            private Component component = new Component();&#xD;&#xA;            // Track whether Dispose has been called. &#xD;&#xA;            private bool disposed = false;&#xD;&#xA;    &#xD;&#xA;            // The class constructor. &#xD;&#xA;            public MyResource(IntPtr handle)&#xD;&#xA;            {&#xD;&#xA;                this.handle = handle;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            // Implement IDisposable. &#xD;&#xA;            // Do not make this method virtual. &#xD;&#xA;            // A derived class should not be able to override this method. &#xD;&#xA;            public void Dispose()&#xD;&#xA;            {&#xD;&#xA;                Dispose(true);&#xD;&#xA;                // This object will be cleaned up by the Dispose method. &#xD;&#xA;                // Therefore, you should call GC.SupressFinalize to &#xD;&#xA;                // take this object off the finalization queue &#xD;&#xA;                // and prevent finalization code for this object &#xD;&#xA;                // from executing a second time.&#xD;&#xA;                GC.SuppressFinalize(this);&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            // Dispose(bool disposing) executes in two distinct scenarios. &#xD;&#xA;            // If disposing equals true, the method has been called directly &#xD;&#xA;            // or indirectly by a user's code. Managed and unmanaged resources &#xD;&#xA;            // can be disposed. &#xD;&#xA;            // If disposing equals false, the method has been called by the &#xD;&#xA;            // runtime from inside the finalizer and you should not reference &#xD;&#xA;            // other objects. Only unmanaged resources can be disposed. &#xD;&#xA;            protected virtual void Dispose(bool disposing)&#xD;&#xA;            {&#xD;&#xA;                // Check to see if Dispose has already been called. &#xD;&#xA;                if(!this.disposed)&#xD;&#xA;                {&#xD;&#xA;                    // If disposing equals true, dispose all managed &#xD;&#xA;                    // and unmanaged resources. &#xD;&#xA;                    if(disposing)&#xD;&#xA;                    {&#xD;&#xA;                        // Dispose managed resources.&#xD;&#xA;                        component.Dispose();&#xD;&#xA;                    }&#xD;&#xA;    &#xD;&#xA;                    // Call the appropriate methods to clean up &#xD;&#xA;                    // unmanaged resources here. &#xD;&#xA;                    // If disposing is false, &#xD;&#xA;                    // only the following code is executed.&#xD;&#xA;                    CloseHandle(handle);&#xD;&#xA;                    handle = IntPtr.Zero;&#xD;&#xA;    &#xD;&#xA;                    // Note disposing has been done.&#xD;&#xA;                    disposed = true;&#xD;&#xA;    &#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            // Use interop to call the method necessary &#xD;&#xA;            // to clean up the unmanaged resource.&#xD;&#xA;            [System.Runtime.InteropServices.DllImport(""Kernel32"")]&#xD;&#xA;            private extern static Boolean CloseHandle(IntPtr handle);&#xD;&#xA;    &#xD;&#xA;            // Use C# destructor syntax for finalization code. &#xD;&#xA;            // This destructor will run only if the Dispose method &#xD;&#xA;            // does not get called. &#xD;&#xA;            // It gives your base class the opportunity to finalize. &#xD;&#xA;            // Do not provide destructors in types derived from this class.&#xD;&#xA;            ~MyResource()&#xD;&#xA;            {&#xD;&#xA;                // Do not re-create Dispose clean-up code here. &#xD;&#xA;                // Calling Dispose(false) is optimal in terms of &#xD;&#xA;                // readability and maintainability.&#xD;&#xA;                Dispose(false);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        public static void Main()&#xD;&#xA;        {&#xD;&#xA;            // Insert code here to create &#xD;&#xA;            // and use the MyResource object.&#xD;&#xA;        }&#xD;&#xA;    }"
-4570570704698349907,93,5,"    public class RecyclerAdapter extends RecyclerView.Adapter<RecyclerAdapter.ViewHolder> {&#xD;&#xA;            private ClipboardManager myClipboard;&#xD;&#xA;            private ClipData myClip;&#xD;&#xA;            private Context context;&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;            public List<CardItemModel> cardItems;&#xD;&#xA;        &#xD;&#xA;            public RecyclerAdapter(List<CardItemModel> cardItems){&#xD;&#xA;                this.cardItems = cardItems;&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            public static class ViewHolder extends RecyclerView.ViewHolder{&#xD;&#xA;                ImageView copyButton;&#xD;&#xA;                ImageView shareButton;&#xD;&#xA;                ToggleButton favButton;&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;                TextView title;&#xD;&#xA;                TextView content;&#xD;&#xA;                public ViewHolder(View itemView) {&#xD;&#xA;                    super(itemView);&#xD;&#xA;                    this.title = (TextView)itemView.findViewById(R.id.card_title);&#xD;&#xA;                    this.content = (TextView)itemView.findViewById(R.id.card_content);&#xD;&#xA;                    this.copyButton= (ImageView) itemView.findViewById(R.id.copyButton);&#xD;&#xA;                    this.shareButton=(ImageView) itemView.findViewById(R.id.shareButton);&#xD;&#xA;        &#xD;&#xA;                    this.favButton=(ToggleButton) itemView.findViewById(R.id.favButton);&#xD;&#xA;        &#xD;&#xA;                    favButton.setChecked(false);&#xD;&#xA;                    favButton.setBackgroundDrawable(ContextCompat.getDrawable(favButton.getContext(), R.mipmap.ic_launcher));&#xD;&#xA;                    &#xD;&#xA;        &#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;            @Override&#xD;&#xA;            public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {&#xD;&#xA;                View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.recycler_item,parent,false);&#xD;&#xA;                ViewHolder viewHolder = new ViewHolder(view);&#xD;&#xA;        &#xD;&#xA;                return viewHolder;&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            @Override&#xD;&#xA;            public void onBindViewHolder(final ViewHolder holder, int position) {&#xD;&#xA;                holder.title.setText(cardItems.get(position).title);&#xD;&#xA;                holder.content.setText(cardItems.get(position).content);&#xD;&#xA;                holder.copyButton.setOnClickListener(new View.OnClickListener(){&#xD;&#xA;                    public void onClick(View v){&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;                        myClipboard = (ClipboardManager) v.getContext().getSystemService(Context.CLIPBOARD_SERVICE);&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;                        myClip = ClipData.newPlainText(""label"", holder.content.getText().toString());&#xD;&#xA;                        myClipboard.setPrimaryClip(myClip);&#xD;&#xA;                        Toast.makeText(v.getContext(), ""Copied to clipboard"" , Toast.LENGTH_SHORT ).show();&#xD;&#xA;        &#xD;&#xA;                    }&#xD;&#xA;                });&#xD;&#xA;                holder.shareButton.setOnClickListener(new View.OnClickListener(){&#xD;&#xA;                    public void onClick(View v){&#xD;&#xA;                        Intent share = new Intent(Intent.ACTION_SEND);&#xD;&#xA;                        share.setType(""text/plain"");&#xD;&#xA;                        share.putExtra(Intent.EXTRA_TEXT, holder.content.getText().toString());&#xD;&#xA;                        v.getContext().startActivity(Intent.createChooser(share, ""Share Text""));&#xD;&#xA;                    }&#xD;&#xA;                });&#xD;&#xA;        &#xD;&#xA;                holder.favButton.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener(){&#xD;&#xA;                    @Override&#xD;&#xA;                    public void onCheckedChanged(CompoundButton favButton, boolean isChecked){&#xD;&#xA;                        if (isChecked)&#xD;&#xA;                            favButton.setBackgroundDrawable(ContextCompat.getDrawable(favButton.getContext(),R.mipmap.ic_launcher));&#xD;&#xA;        &#xD;&#xA;                        else&#xD;&#xA;                            favButton.setBackgroundDrawable(ContextCompat.getDrawable(favButton.getContext(), R.mipmap.ic_cart));&#xD;&#xA;                    }&#xD;&#xA;                });&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            @Override&#xD;&#xA;            public int getItemCount() {&#xD;&#xA;                return cardItems.size();&#xD;&#xA;            }&#xD;&#xA;        }"
1875898391105156794,95,5,"        (function($){  &#xD;&#xA;    &#xD;&#xA;        $.fn.s3Slider = function(vars) {       &#xD;&#xA;            &#xD;&#xA;            var element     = this;&#xD;&#xA;            var timeOut     = (vars.timeOut != undefined) ? vars.timeOut : 4000;&#xD;&#xA;            var current     = null;&#xD;&#xA;            var timeOutFn   = null;&#xD;&#xA;            var faderStat   = true;&#xD;&#xA;            var mOver       = false;&#xD;&#xA;            var items       = $(""#"" + element[0].id + ""Content ."" + element[0].id + ""Image"");&#xD;&#xA;            var itemsSpan   = $(""#"" + element[0].id + ""Content ."" + element[0].id + ""Image span"");&#xD;&#xA;                &#xD;&#xA;            items.each(function(i) {&#xD;&#xA;        &#xD;&#xA;                $(items[i]).mouseover(function() {&#xD;&#xA;                   mOver = true;&#xD;&#xA;                });&#xD;&#xA;                &#xD;&#xA;                $(items[i]).mouseout(function() {&#xD;&#xA;                    mOver   = false;&#xD;&#xA;                    fadeElement(true);&#xD;&#xA;                });&#xD;&#xA;                &#xD;&#xA;            });&#xD;&#xA;            &#xD;&#xA;            var fadeElement = function(isMouseOut) {&#xD;&#xA;                var thisTimeOut = (isMouseOut) ? (timeOut/2) : timeOut;&#xD;&#xA;                thisTimeOut = (faderStat) ? 10 : thisTimeOut;&#xD;&#xA;                if(items.length > 0) {&#xD;&#xA;                    timeOutFn = setTimeout(makeSlider, thisTimeOut);&#xD;&#xA;                } else {&#xD;&#xA;                    console.log(""Poof.."");&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;            &#xD;&#xA;            var makeSlider = function() {&#xD;&#xA;                current = (current != null) ? current : items[(items.length-1)];&#xD;&#xA;                var currNo      = jQuery.inArray(current, items) + 1&#xD;&#xA;                currNo = (currNo == items.length) ? 0 : (currNo - 1);&#xD;&#xA;                var newMargin   = $(element).width() * currNo;&#xD;&#xA;                if(faderStat == true) {&#xD;&#xA;                    if(!mOver) {&#xD;&#xA;                        $(items[currNo]).fadeIn((timeOut/6), function() {&#xD;&#xA;                            if($(itemsSpan[currNo]).css('bottom') == 0) {&#xD;&#xA;                                $(itemsSpan[currNo]).slideUp((timeOut/6), function() {&#xD;&#xA;                                    faderStat = false;&#xD;&#xA;                                    current = items[currNo];&#xD;&#xA;                                    if(!mOver) {&#xD;&#xA;                                        fadeElement(false);&#xD;&#xA;                                    }&#xD;&#xA;                                });&#xD;&#xA;                            } else {&#xD;&#xA;                                $(itemsSpan[currNo]).slideDown((timeOut/6), function() {&#xD;&#xA;                                    faderStat = false;&#xD;&#xA;                                    current = items[currNo];&#xD;&#xA;                                    if(!mOver) {&#xD;&#xA;                                        fadeElement(false);&#xD;&#xA;                                    }&#xD;&#xA;                                });&#xD;&#xA;                            }&#xD;&#xA;                        });&#xD;&#xA;                    }&#xD;&#xA;                } else {&#xD;&#xA;                    if(!mOver) {&#xD;&#xA;                        if($(itemsSpan[currNo]).css('bottom') == 0) {&#xD;&#xA;                            $(itemsSpan[currNo]).slideDown((timeOut/6), function() {&#xD;&#xA;                                $(items[currNo]).fadeOut((timeOut/6), function() {&#xD;&#xA;                                    faderStat = true;&#xD;&#xA;                                    current = items[(currNo+1)];&#xD;&#xA;                                    if(!mOver) {&#xD;&#xA;                                        fadeElement(false);&#xD;&#xA;                                    }&#xD;&#xA;                                });&#xD;&#xA;                            });&#xD;&#xA;                        } else {&#xD;&#xA;                            $(itemsSpan[currNo]).slideUp((timeOut/6), function() {&#xD;&#xA;                            $(items[currNo]).fadeOut((timeOut/6), function() {&#xD;&#xA;                                    faderStat = true;&#xD;&#xA;                                    current = items[(currNo+1)];&#xD;&#xA;                                    if(!mOver) {&#xD;&#xA;                                        fadeElement(false);&#xD;&#xA;                                    }&#xD;&#xA;                                });&#xD;&#xA;                            });&#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;            &#xD;&#xA;            makeSlider();&#xD;&#xA;    &#xD;&#xA;        };  &#xD;&#xA;    &#xD;&#xA;    })(jQuery);  "
8553742256145559791,95,5,"    (function($) {&#xD;&#xA;            $.fn.menumaker = function(options) {&#xD;&#xA;                var cssmenu = $(this),&#xD;&#xA;                    settings = $.extend({&#xD;&#xA;                        title: ""Menu"",&#xD;&#xA;                        format: ""dropdown"",&#xD;&#xA;                        breakpoint: 768,&#xD;&#xA;                        sticky: false&#xD;&#xA;                    }, options);&#xD;&#xA;                return this.each(function() {&#xD;&#xA;                    cssmenu.find('li ul').parent().addClass('has-sub');&#xD;&#xA;                    if (settings.format != 'select') {&#xD;&#xA;                        cssmenu.prepend('<div id=""menu-button"">' + settings.title + '</div>');&#xD;&#xA;                        $(this).find(""#menu-button"").on('click', function() {&#xD;&#xA;                            $(this).toggleClass('menu-opened');&#xD;&#xA;                            var mainmenu = $(this).next('ul');&#xD;&#xA;                            if (mainmenu.hasClass('open')) {&#xD;&#xA;                                mainmenu.hide().removeClass('open');&#xD;&#xA;                            } else {&#xD;&#xA;                                mainmenu.show().addClass('open');&#xD;&#xA;                                if (settings.format === ""dropdown"") {&#xD;&#xA;                                    mainmenu.find('ul').show();&#xD;&#xA;                                }&#xD;&#xA;                            }&#xD;&#xA;                        });&#xD;&#xA;                        multiTg = function() {&#xD;&#xA;                            cssmenu.find("".has-sub"").prepend('<span class=""submenu-button""></span>');&#xD;&#xA;                            cssmenu.find('.submenu-button').on('click', function() {&#xD;&#xA;                                $(this).toggleClass('submenu-opened');&#xD;&#xA;                                if ($(this).siblings('ul').hasClass('open')) {&#xD;&#xA;                                    $(this).siblings('ul').removeClass('open').hide();&#xD;&#xA;                                } else {&#xD;&#xA;                                    $(this).siblings('ul').addClass('open').show();&#xD;&#xA;                                }&#xD;&#xA;                            });&#xD;&#xA;                        };&#xD;&#xA;                        if (settings.format === 'multitoggle') multiTg();&#xD;&#xA;                        else cssmenu.addClass('dropdown');&#xD;&#xA;                    } else if (settings.format === 'select') {&#xD;&#xA;                        cssmenu.append('<select style=""width: 100%""/>').addClass('select-list');&#xD;&#xA;                        var selectList = cssmenu.find('select');&#xD;&#xA;                        selectList.append('<option>' + settings.title + '</option>', {&#xD;&#xA;                            ""selected"": ""selected"",&#xD;&#xA;                            ""value"": """"&#xD;&#xA;                        });&#xD;&#xA;                        cssmenu.find('a').each(function() {&#xD;&#xA;                            var element = $(this),&#xD;&#xA;                                indentation = """";&#xD;&#xA;                            for (i = 1; i < element.parents('ul').length; i++) {&#xD;&#xA;                                indentation += '-';&#xD;&#xA;                            }&#xD;&#xA;                            selectList.append('<option value=""' + $(this).attr('href') + '"">' + indentation + element.text() + '</option');&#xD;&#xA;                        });&#xD;&#xA;                        selectList.on('change', function() {&#xD;&#xA;                            window.location = $(this).find(""option:selected"").val();&#xD;&#xA;                        });&#xD;&#xA;                    }&#xD;&#xA;                    if (settings.sticky === true) cssmenu.css('position', 'fixed');&#xD;&#xA;                    resizeFix = function() {&#xD;&#xA;                        if ($(window).width() > settings.breakpoint) {&#xD;&#xA;                            cssmenu.find('ul').show();&#xD;&#xA;                            cssmenu.removeClass('small-screen');&#xD;&#xA;                            if (settings.format === 'select') {&#xD;&#xA;                                cssmenu.find('select').hide();&#xD;&#xA;                            } else {&#xD;&#xA;                                cssmenu.find(""#menu-button"").removeClass(""menu-opened"");&#xD;&#xA;                            }&#xD;&#xA;                        }&#xD;&#xA;                        if ($(window).width() <= settings.breakpoint && !cssmenu.hasClass(""small-screen"")) {&#xD;&#xA;                            cssmenu.find('ul').hide().removeClass('open');&#xD;&#xA;                            cssmenu.addClass('small-screen');&#xD;&#xA;                            if (settings.format === 'select') {&#xD;&#xA;                                cssmenu.find('select').show();&#xD;&#xA;                            }&#xD;&#xA;                        }&#xD;&#xA;                    };&#xD;&#xA;                    resizeFix();&#xD;&#xA;                    return $(window).on('resize', resizeFix);&#xD;&#xA;                });&#xD;&#xA;            };&#xD;&#xA;        })(jQuery);&#xD;&#xA;        (function($) {&#xD;&#xA;            $(document).ready(function() {&#xD;&#xA;                $(document).ready(function() {&#xD;&#xA;                    $(""#cssmenu"").menumaker({&#xD;&#xA;                        title: ""Menu"",&#xD;&#xA;                        format: ""dropdown""&#xD;&#xA;                    });&#xD;&#xA;                    $(""#cssmenu a"").each(function() {&#xD;&#xA;                        var linkTitle = $(this).text();&#xD;&#xA;                        $(this).attr('data-title', linkTitle);&#xD;&#xA;                    });&#xD;&#xA;                });&#xD;&#xA;            });&#xD;&#xA;        })(jQuery);"
4620259629292676845,97,5,"    <project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"">&#xD;&#xA;      <modelVersion>4.0.0</modelVersion>&#xD;&#xA;      <groupId>p01</groupId>&#xD;&#xA;      <artifactId>p01</artifactId>&#xD;&#xA;      <version>0.0.1-SNAPSHOT</version>&#xD;&#xA;      <packaging>war</packaging>&#xD;&#xA;      <build>&#xD;&#xA;        <sourceDirectory>src</sourceDirectory>&#xD;&#xA;        <plugins>&#xD;&#xA;          <plugin>&#xD;&#xA;            <artifactId>maven-compiler-plugin</artifactId>&#xD;&#xA;            <version>3.1</version>&#xD;&#xA;            <configuration>&#xD;&#xA;              <source>1.6</source>&#xD;&#xA;              <target>1.6</target>&#xD;&#xA;            </configuration>&#xD;&#xA;          </plugin>&#xD;&#xA;          <plugin>&#xD;&#xA;            <artifactId>maven-war-plugin</artifactId>&#xD;&#xA;            <version>2.4</version>&#xD;&#xA;            <configuration>&#xD;&#xA;              <warSourceDirectory>WebContent</warSourceDirectory>&#xD;&#xA;              <failOnMissingWebXml>false</failOnMissingWebXml>&#xD;&#xA;            </configuration>&#xD;&#xA;          </plugin>&#xD;&#xA;        </plugins>&#xD;&#xA;      </build>&#xD;&#xA;      <name>HibernateTest</name>&#xD;&#xA;      <url>http://maven.apache.org</url>&#xD;&#xA;      <dependencies>&#xD;&#xA;    		  <dependency>&#xD;&#xA;    		  <groupId>com.sun.faces</groupId>&#xD;&#xA;    		  <artifactId>jsf-api</artifactId>&#xD;&#xA;    		  <version>2.1.7</version>&#xD;&#xA;    		</dependency>&#xD;&#xA;    		<dependency>&#xD;&#xA;    		  <groupId>com.sun.faces</groupId>&#xD;&#xA;    		  <artifactId>jsf-impl</artifactId>&#xD;&#xA;    		  <version>2.1.7</version>&#xD;&#xA;    		</dependency>&#xD;&#xA;            <dependency>&#xD;&#xA;                <groupId>org.hibernate</groupId>&#xD;&#xA;                <artifactId>hibernate-core</artifactId>&#xD;&#xA;                <version>4.0.1.Final</version>&#xD;&#xA;            </dependency>&#xD;&#xA;            <dependency>&#xD;&#xA;                <groupId>org.hibernate</groupId>&#xD;&#xA;                <artifactId>hibernate-validator</artifactId>&#xD;&#xA;                <version>4.2.0.Final</version>&#xD;&#xA;            </dependency>&#xD;&#xA;            <dependency>&#xD;&#xA;                <groupId>org.hibernate.common</groupId>&#xD;&#xA;                <artifactId>hibernate-commons-annotations</artifactId>&#xD;&#xA;                <version>4.0.1.Final</version>&#xD;&#xA;                <classifier>tests</classifier>&#xD;&#xA;            </dependency>&#xD;&#xA;            <dependency>&#xD;&#xA;                <groupId>org.hibernate.javax.persistence</groupId>&#xD;&#xA;                <artifactId>hibernate-jpa-2.0-api</artifactId>&#xD;&#xA;                <version>1.0.1.Final</version>&#xD;&#xA;            </dependency>&#xD;&#xA;            <dependency>&#xD;&#xA;                <groupId>org.hibernate</groupId>&#xD;&#xA;                <artifactId>hibernate-entitymanager</artifactId>&#xD;&#xA;                <version>4.0.1.Final</version>&#xD;&#xA;            </dependency>&#xD;&#xA;            <dependency>&#xD;&#xA;                <groupId>javax.validation</groupId>&#xD;&#xA;                <artifactId>validation-api</artifactId>&#xD;&#xA;                <version>1.0.0.GA</version>&#xD;&#xA;                <scope>provided</scope>&#xD;&#xA;            </dependency>&#xD;&#xA;            <dependency>&#xD;&#xA;                <groupId>org.slf4j</groupId>&#xD;&#xA;                <artifactId>slf4j-api</artifactId>&#xD;&#xA;                <version>1.6.4</version>&#xD;&#xA;            </dependency>&#xD;&#xA;            <dependency>&#xD;&#xA;                <groupId>org.jboss.logging</groupId>&#xD;&#xA;                <artifactId>jboss-logging</artifactId>&#xD;&#xA;                <version>3.1.0.CR2</version>&#xD;&#xA;            </dependency>&#xD;&#xA;            <dependency>&#xD;&#xA;                <groupId>org.slf4j</groupId>&#xD;&#xA;                <artifactId>slf4j-log4j12</artifactId>&#xD;&#xA;                <version>1.6.4</version>&#xD;&#xA;            </dependency>&#xD;&#xA;     &#xD;&#xA;            <dependency>&#xD;&#xA;                <groupId>mysql</groupId>&#xD;&#xA;                <artifactId>mysql-connector-java</artifactId>&#xD;&#xA;                <version>5.1.10</version>&#xD;&#xA;            </dependency>&#xD;&#xA;     &#xD;&#xA;     &#xD;&#xA;        </dependencies>&#xD;&#xA;    </project>"
-2904074365666005080,97,5,"         body {&#xD;&#xA;        font: normal 14px/100% ""Andale Mono"", AndaleMono, monospace;&#xD;&#xA;        color: #fff;&#xD;&#xA;        padding: 50px;&#xD;&#xA;        width: 300px;&#xD;&#xA;        margin: 0 auto;&#xD;&#xA;        background-color: #374954;&#xD;&#xA;        }  &#xD;&#xA;    &#xD;&#xA;       .dropdown {&#xD;&#xA;        position: absolute;&#xD;&#xA;        top:50%;&#xD;&#xA;        transform: translateY(-50%);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    a {&#xD;&#xA;      color: #fff;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .dropdown dd,&#xD;&#xA;    .dropdown dt {&#xD;&#xA;      margin: 0px;&#xD;&#xA;      padding: 0px;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .dropdown ul {&#xD;&#xA;      margin: -1px 0 0 0;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .dropdown dd {&#xD;&#xA;      position: relative;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .dropdown a,&#xD;&#xA;    .dropdown a:visited {&#xD;&#xA;      color: #fff;&#xD;&#xA;      text-decoration: none;&#xD;&#xA;      outline: none;&#xD;&#xA;      font-size: 12px;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .dropdown dt a {&#xD;&#xA;      background-color: #4F6877;&#xD;&#xA;      display: block;&#xD;&#xA;      padding: 8px 20px 5px 10px;&#xD;&#xA;      min-height: 25px;&#xD;&#xA;      line-height: 24px;&#xD;&#xA;      overflow: hidden;&#xD;&#xA;      border: 0;&#xD;&#xA;      width: 272px;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .dropdown dt a span,&#xD;&#xA;    .multiSel span {&#xD;&#xA;      cursor: pointer;&#xD;&#xA;      display: inline-block;&#xD;&#xA;      padding: 0 3px 2px 0;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .dropdown dd ul {&#xD;&#xA;      background-color: #4F6877;&#xD;&#xA;      border: 0;&#xD;&#xA;      color: #fff;&#xD;&#xA;      display: none;&#xD;&#xA;      left: 0px;&#xD;&#xA;      padding: 2px 15px 2px 5px;&#xD;&#xA;      position: absolute;&#xD;&#xA;      top: 2px;&#xD;&#xA;      width: 280px;&#xD;&#xA;      list-style: none;&#xD;&#xA;      height: 100px;&#xD;&#xA;      overflow: auto;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .dropdown span.value {&#xD;&#xA;      display: none;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .dropdown dd ul li a {&#xD;&#xA;      padding: 5px;&#xD;&#xA;      display: block;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .dropdown dd ul li a:hover {&#xD;&#xA;      background-color: #fff;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    button {&#xD;&#xA;      background-color: #6BBE92;&#xD;&#xA;      width: 302px;&#xD;&#xA;      border: 0;&#xD;&#xA;      padding: 10px 0;&#xD;&#xA;      margin: 5px 0;&#xD;&#xA;      text-align: center;&#xD;&#xA;      color: #fff;&#xD;&#xA;      font-weight: bold;&#xD;&#xA;    }"
-2705356804419274619,97,5,"    import java.awt.*;&#xD;&#xA;    import java.awt.event.*;&#xD;&#xA;    import java.util.*;&#xD;&#xA;    import javax.swing.*;&#xD;&#xA;    &#xD;&#xA;    public class ComboBoxTwo extends JFrame implements ActionListener, ItemListener {&#xD;&#xA;    &#xD;&#xA;        private static final long serialVersionUID = 1L;&#xD;&#xA;        private JComboBox mainComboBox;&#xD;&#xA;        private JComboBox subComboBox;&#xD;&#xA;        private Hashtable<Object, Object> subItems = new Hashtable<Object, Object>();&#xD;&#xA;    &#xD;&#xA;        public ComboBoxTwo() {&#xD;&#xA;            String[] items = {""Select Item"", ""Color"", ""Shape"", ""Fruit""};&#xD;&#xA;            mainComboBox = new JComboBox(items);&#xD;&#xA;            mainComboBox.addActionListener(this);&#xD;&#xA;            mainComboBox.addItemListener(this);&#xD;&#xA;            //prevent action events from being fired when the up/down arrow keys are used&#xD;&#xA;            //mainComboBox.putClientProperty(""JComboBox.isTableCellEditor"", Boolean.TRUE);&#xD;&#xA;            getContentPane().add(mainComboBox, BorderLayout.WEST);&#xD;&#xA;            subComboBox = new JComboBox();//  Create sub combo box with multiple models&#xD;&#xA;            subComboBox.setPrototypeDisplayValue(""XXXXXXXXXX""); // JDK1.4&#xD;&#xA;            subComboBox.addItemListener(this);&#xD;&#xA;            getContentPane().add(subComboBox, BorderLayout.EAST);&#xD;&#xA;            String[] subItems1 = {""Select Color"", ""Red"", ""Blue"", ""Green""};&#xD;&#xA;            subItems.put(items[1], subItems1);&#xD;&#xA;            String[] subItems2 = {""Select Shape"", ""Circle"", ""Square"", ""Triangle""};&#xD;&#xA;            subItems.put(items[2], subItems2);&#xD;&#xA;            String[] subItems3 = {""Select Fruit"", ""Apple"", ""Orange"", ""Banana""};&#xD;&#xA;            subItems.put(items[3], subItems3);&#xD;&#xA;    //      mainComboBox.setSelectedIndex(1);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void actionPerformed(ActionEvent e) {&#xD;&#xA;            String item = (String) mainComboBox.getSelectedItem();&#xD;&#xA;            Object o = subItems.get(item);&#xD;&#xA;            if (o == null) {&#xD;&#xA;                subComboBox.setModel(new DefaultComboBoxModel());&#xD;&#xA;            } else {&#xD;&#xA;                subComboBox.setModel(new DefaultComboBoxModel((String[]) o));&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void itemStateChanged(ItemEvent e) {&#xD;&#xA;            if (e.getStateChange() == ItemEvent.SELECTED) {&#xD;&#xA;                if (e.getSource() == mainComboBox) {&#xD;&#xA;                    if (mainComboBox.getSelectedIndex() != 0) {&#xD;&#xA;                        FirstDialog firstDialog = new FirstDialog(ComboBoxTwo.this,&#xD;&#xA;                                mainComboBox.getSelectedItem().toString(), ""Please wait,  Searching for ..... "");&#xD;&#xA;                    }&#xD;&#xA;                } &#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private class FirstDialog extends JDialog {&#xD;&#xA;    &#xD;&#xA;            private static final long serialVersionUID = 1L;&#xD;&#xA;    &#xD;&#xA;            FirstDialog(final Frame parent, String winTitle, String msgString) {&#xD;&#xA;                super(parent, winTitle);&#xD;&#xA;                setModalityType(Dialog.ModalityType.APPLICATION_MODAL);&#xD;&#xA;                JLabel myLabel = new JLabel(msgString);&#xD;&#xA;                JButton bNext = new JButton(""Stop Processes"");&#xD;&#xA;                add(myLabel, BorderLayout.CENTER);&#xD;&#xA;                add(bNext, BorderLayout.SOUTH);&#xD;&#xA;                bNext.addActionListener(new ActionListener() {&#xD;&#xA;    &#xD;&#xA;                    @Override&#xD;&#xA;                    public void actionPerformed(ActionEvent evt) {&#xD;&#xA;                        setVisible(false);&#xD;&#xA;                    }&#xD;&#xA;                });&#xD;&#xA;                javax.swing.Timer t = new javax.swing.Timer(1000, new ActionListener() {&#xD;&#xA;    &#xD;&#xA;                    @Override&#xD;&#xA;                    public void actionPerformed(ActionEvent e) {&#xD;&#xA;                        setVisible(false);&#xD;&#xA;                    }&#xD;&#xA;                });&#xD;&#xA;                t.setRepeats(false);&#xD;&#xA;                t.start();&#xD;&#xA;                setLocationRelativeTo(parent);&#xD;&#xA;                setSize(new Dimension(400, 100));&#xD;&#xA;                setVisible(true);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public static void main(String[] args) {&#xD;&#xA;            JFrame frame = new ComboBoxTwo();&#xD;&#xA;            frame.setDefaultCloseOperation(EXIT_ON_CLOSE);&#xD;&#xA;            frame.pack();&#xD;&#xA;            frame.setLocationRelativeTo(null);&#xD;&#xA;            frame.setVisible(true);&#xD;&#xA;        }&#xD;&#xA;    }"
-8811949093399830323,98,5,"        .tabs {&#xD;&#xA;        max-width: 90%;&#xD;&#xA;        float: none;&#xD;&#xA;        list-style: none;&#xD;&#xA;        padding: 0;&#xD;&#xA;        margin: 75px auto;&#xD;&#xA;        border-bottom: 4px solid #ccc;&#xD;&#xA;    }&#xD;&#xA;    .tabs:after {&#xD;&#xA;        content: '';&#xD;&#xA;        display: table;&#xD;&#xA;        clear: both;&#xD;&#xA;    }&#xD;&#xA;    .tabs input[type=radio] {&#xD;&#xA;        display:none;&#xD;&#xA;    }&#xD;&#xA;    .tabs label {&#xD;&#xA;        display: block;&#xD;&#xA;        float: left;&#xD;&#xA;        width: 33.3333%;&#xD;&#xA;        color: #ccc;&#xD;&#xA;        font-size: 30px;&#xD;&#xA;        font-weight: normal;&#xD;&#xA;        text-decoration: none;&#xD;&#xA;        text-align: center;&#xD;&#xA;        line-height: 2;&#xD;&#xA;        cursor: pointer;&#xD;&#xA;        box-shadow: inset 0 4px #ccc;&#xD;&#xA;        border-bottom: 4px solid #ccc;&#xD;&#xA;        -webkit-transition: all 0.5s; /* Safari 3.1 to 6.0 */&#xD;&#xA;        transition: all 0.5s;&#xD;&#xA;    }&#xD;&#xA;    .tabs label span {&#xD;&#xA;        display: none;&#xD;&#xA;    }&#xD;&#xA;    .tabs label i {&#xD;&#xA;        padding: 5px;&#xD;&#xA;        margin-right: 0;&#xD;&#xA;    }&#xD;&#xA;    .tabs label:hover {&#xD;&#xA;        color: #3498db;&#xD;&#xA;        box-shadow: inset 0 4px #3498db;&#xD;&#xA;        border-bottom: 4px solid #3498db;&#xD;&#xA;    }&#xD;&#xA;    .tab-content {&#xD;&#xA;        display: none;&#xD;&#xA;        width: 100%;&#xD;&#xA;        float: left;&#xD;&#xA;        padding: 15px;&#xD;&#xA;        box-sizing: border-box;&#xD;&#xA;        background-color:#ffffff;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .tab-content * {&#xD;&#xA;        -webkit-animation: scale 0.7s ease-in-out;&#xD;&#xA;        -moz-animation: scale 0.7s ease-in-out;&#xD;&#xA;        animation: scale 0.7s ease-in-out;&#xD;&#xA;    }&#xD;&#xA;    @keyframes scale {&#xD;&#xA;      0% {&#xD;&#xA;        transform: scale(0.9);&#xD;&#xA;        opacity: 0;&#xD;&#xA;        }&#xD;&#xA;      50% {&#xD;&#xA;        transform: scale(1.01);&#xD;&#xA;        opacity: 0.5;&#xD;&#xA;        }&#xD;&#xA;      100% {&#xD;&#xA;        transform: scale(1);&#xD;&#xA;        opacity: 1;&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .tabs [id^=""tab""]:checked + label {&#xD;&#xA;        background: #FFF;&#xD;&#xA;        box-shadow: inset 0 4px #3498db;&#xD;&#xA;        border-bottom: 4px solid #3498db;&#xD;&#xA;        color: #3498db;&#xD;&#xA;    }&#xD;&#xA;    #tab1:checked ~ #tab-content1,&#xD;&#xA;    #tab2:checked ~ #tab-content2,&#xD;&#xA;    #tab3:checked ~ #tab-content3 {&#xD;&#xA;        display: block;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    @media (min-width: 768px) {&#xD;&#xA;        .tabs i {&#xD;&#xA;            padding: 5px;&#xD;&#xA;            margin-right: 10px;&#xD;&#xA;        }&#xD;&#xA;        .tabs label span {&#xD;&#xA;            display: inline-block;&#xD;&#xA;        }&#xD;&#xA;        .tabs {&#xD;&#xA;        max-width: 750px;&#xD;&#xA;        margin: 50px auto;&#xD;&#xA;        }&#xD;&#xA;    }"
-3213827792157603634,101,5,"            var dateFormat = function () {&#xD;&#xA;	        var	token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\1?|[LloSZ]|""[^""]*""|'[^']*'/g,&#xD;&#xA;		        timezone = /\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g,&#xD;&#xA;		        timezoneClip = /[^-+\dA-Z]/g,&#xD;&#xA;		        pad = function (val, len) {&#xD;&#xA;			        val = String(val);&#xD;&#xA;			        len = len || 2;&#xD;&#xA;			        while (val.length < len) val = ""0"" + val;&#xD;&#xA;			        return val;&#xD;&#xA;		        };&#xD;&#xA;	        // Regexes and supporting functions are cached through closure&#xD;&#xA;	        return function (date, mask, utc) {&#xD;&#xA;		        var dF = dateFormat;&#xD;&#xA;		        // You can't provide utc if you skip other args (use the ""UTC:"" mask prefix)&#xD;&#xA;		        if (arguments.length == 1 && Object.prototype.toString.call(date) == ""[object String]"" && !/\d/.test(date)) {&#xD;&#xA;			        mask = date;&#xD;&#xA;			        date = undefined;&#xD;&#xA;		        }&#xD;&#xA;		        // Passing date through Date applies Date.parse, if necessary&#xD;&#xA;		        date = date ? new Date(date) : new Date;&#xD;&#xA;		        if (isNaN(date)) throw SyntaxError(""invalid date"");&#xD;&#xA;		        mask = String(dF.masks[mask] || mask || dF.masks[""default""]);&#xD;&#xA;		        // Allow setting the utc argument via the mask&#xD;&#xA;		        if (mask.slice(0, 4) == ""UTC:"") {&#xD;&#xA;			        mask = mask.slice(4);&#xD;&#xA;			        utc = true;&#xD;&#xA;		        }&#xD;&#xA;		        var	_ = utc ? ""getUTC"" : ""get"",&#xD;&#xA;			        d = date[_ + ""Date""](),&#xD;&#xA;			        D = date[_ + ""Day""](),&#xD;&#xA;			        m = date[_ + ""Month""](),&#xD;&#xA;			        y = date[_ + ""FullYear""](),&#xD;&#xA;			        H = date[_ + ""Hours""](),&#xD;&#xA;			        M = date[_ + ""Minutes""](),&#xD;&#xA;			        s = date[_ + ""Seconds""](),&#xD;&#xA;			        L = date[_ + ""Milliseconds""](),&#xD;&#xA;			        o = utc ? 0 : date.getTimezoneOffset(),&#xD;&#xA;			        flags = {&#xD;&#xA;				        d:    d,&#xD;&#xA;				        dd:   pad(d),&#xD;&#xA;				        ddd:  dF.i18n.dayNames[D],&#xD;&#xA;				        dddd: dF.i18n.dayNames[D + 7],&#xD;&#xA;				        m:    m + 1,&#xD;&#xA;				        mm:   pad(m + 1),&#xD;&#xA;				        mmm:  dF.i18n.monthNames[m],&#xD;&#xA;				        mmmm: dF.i18n.monthNames[m + 12],&#xD;&#xA;				        yy:   String(y).slice(2),&#xD;&#xA;				        yyyy: y,&#xD;&#xA;				        h:    H % 12 || 12,&#xD;&#xA;				        hh:   pad(H % 12 || 12),&#xD;&#xA;				        H:    H,&#xD;&#xA;				        HH:   pad(H),&#xD;&#xA;				        M:    M,&#xD;&#xA;				        MM:   pad(M),&#xD;&#xA;				        s:    s,&#xD;&#xA;				        ss:   pad(s),&#xD;&#xA;				        l:    pad(L, 3),&#xD;&#xA;				        L:    pad(L > 99 ? Math.round(L / 10) : L),&#xD;&#xA;				        t:    H < 12 ? ""a""  : ""p"",&#xD;&#xA;				        tt:   H < 12 ? ""am"" : ""pm"",&#xD;&#xA;				        T:    H < 12 ? ""A""  : ""P"",&#xD;&#xA;				        TT:   H < 12 ? ""AM"" : ""PM"",&#xD;&#xA;				        Z:    utc ? ""UTC"" : (String(date).match(timezone) || [""""]).pop().replace(timezoneClip, """"),&#xD;&#xA;				        o:    (o > 0 ? ""-"" : ""+"") + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),&#xD;&#xA;				        S:    [""th"", ""st"", ""nd"", ""rd""][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10]&#xD;&#xA;			        };&#xD;&#xA;		        return mask.replace(token, function ($0) {&#xD;&#xA;			        return $0 in flags ? flags[$0] : $0.slice(1, $0.length - 1);&#xD;&#xA;		        });&#xD;&#xA;	        };&#xD;&#xA;        }();&#xD;&#xA;        // Some common format strings&#xD;&#xA;        dateFormat.masks = {&#xD;&#xA;	        ""default"":      ""ddd mmm dd yyyy HH:MM:ss"",&#xD;&#xA;	        shortDate:      ""m/d/yy"",&#xD;&#xA;	        mediumDate:     ""mmm d, yyyy"",&#xD;&#xA;	        longDate:       ""mmmm d, yyyy"",&#xD;&#xA;	        fullDate:       ""dddd, mmmm d, yyyy"",&#xD;&#xA;	        shortTime:      ""h:MM TT"",&#xD;&#xA;	        mediumTime:     ""h:MM:ss TT"",&#xD;&#xA;	        longTime:       ""h:MM:ss TT Z"",&#xD;&#xA;	        isoDate:        ""yyyy-mm-dd"",&#xD;&#xA;	        isoTime:        ""HH:MM:ss"",&#xD;&#xA;	        isoDateTime:    ""yyyy-mm-dd'T'HH:MM:ss"",&#xD;&#xA;	        isoUtcDateTime: ""UTC:yyyy-mm-dd'T'HH:MM:ss'Z'""&#xD;&#xA;        };&#xD;&#xA;        // Internationalization strings&#xD;&#xA;        dateFormat.i18n = {&#xD;&#xA;	        dayNames: [&#xD;&#xA;		        ""Sun"", ""Mon"", ""Tue"", ""Wed"", ""Thu"", ""Fri"", ""Sat"",&#xD;&#xA;		        ""Sunday"", ""Monday"", ""Tuesday"", ""Wednesday"", ""Thursday"", ""Friday"", ""Saturday""&#xD;&#xA;	        ],&#xD;&#xA;	        monthNames: [&#xD;&#xA;		        ""Jan"", ""Feb"", ""Mar"", ""Apr"", ""May"", ""Jun"", ""Jul"", ""Aug"", ""Sep"", ""Oct"", ""Nov"", ""Dec"",&#xD;&#xA;		        ""January"", ""February"", ""March"", ""April"", ""May"", ""June"", ""July"", ""August"", ""September"", ""October"", ""November"", ""December""&#xD;&#xA;	        ]&#xD;&#xA;        };&#xD;&#xA;        // For convenience...&#xD;&#xA;        Date.prototype.format = function (mask, utc) {&#xD;&#xA;	        return dateFormat(this, mask, utc);&#xD;&#xA;        };"
3548034332078653992,101,5,"    import java.awt.*;&#xD;&#xA;    import java.awt.event.ActionEvent;&#xD;&#xA;    import java.awt.event.ActionListener;&#xD;&#xA;    import javax.swing.*;&#xD;&#xA;    import javax.swing.table.*;&#xD;&#xA;    &#xD;&#xA;    public class RemoveAddRows extends JFrame {&#xD;&#xA;    &#xD;&#xA;        private static final long serialVersionUID = 1L;&#xD;&#xA;        private Object[] columnNames = {""Type"", ""Company"", ""Shares"", ""Price""};&#xD;&#xA;        private Object[][] data = {&#xD;&#xA;            {""Buy"", ""IBM"", new Integer(1000), new Double(80.50)},&#xD;&#xA;            {""Sell"", ""MicroSoft"", new Integer(2000), new Double(6.25)},&#xD;&#xA;            {""Sell"", ""Apple"", new Integer(3000), new Double(7.35)},&#xD;&#xA;            {""Buy"", ""Nortel"", new Integer(4000), new Double(20.00)}&#xD;&#xA;        };&#xD;&#xA;        private JTable table;&#xD;&#xA;        private DefaultTableModel model;&#xD;&#xA;    &#xD;&#xA;        public RemoveAddRows() {&#xD;&#xA;    &#xD;&#xA;            model = new DefaultTableModel(data, columnNames) {&#xD;&#xA;    &#xD;&#xA;                private static final long serialVersionUID = 1L;&#xD;&#xA;    &#xD;&#xA;                @Override&#xD;&#xA;                public Class getColumnClass(int column) {&#xD;&#xA;                    return getValueAt(0, column).getClass();&#xD;&#xA;                }&#xD;&#xA;            };&#xD;&#xA;            table = new JTable(model) {&#xD;&#xA;    &#xD;&#xA;                private static final long serialVersionUID = 1L;&#xD;&#xA;    &#xD;&#xA;                @Override&#xD;&#xA;                public Component prepareRenderer(TableCellRenderer renderer, int row, int column) {&#xD;&#xA;                    Component c = super.prepareRenderer(renderer, row, column);&#xD;&#xA;                    int firstRow = 0;&#xD;&#xA;                    int lastRow = table.getRowCount() - 1;&#xD;&#xA;                    int width = 0;&#xD;&#xA;                    if (row == lastRow) {&#xD;&#xA;                        ((JComponent) c).setBackground(Color.red);&#xD;&#xA;                    } else if (row == firstRow) {&#xD;&#xA;                        ((JComponent) c).setBackground(Color.blue);&#xD;&#xA;                    } else {&#xD;&#xA;                        ((JComponent) c).setBackground(table.getBackground());&#xD;&#xA;                    }&#xD;&#xA;                    /*if (!isRowSelected(row)) {&#xD;&#xA;                    String type = (String) getModel().getValueAt(row, 0);&#xD;&#xA;                    c.setBackground(""Buy"".equals(type) ? Color.GREEN : Color.YELLOW);&#xD;&#xA;                    }&#xD;&#xA;                    if (isRowSelected(row) && isColumnSelected(column)) {&#xD;&#xA;                    ((JComponent) c).setBorder(new LineBorder(Color.red));&#xD;&#xA;                    }*/&#xD;&#xA;                    return c;&#xD;&#xA;                }&#xD;&#xA;            };&#xD;&#xA;            table.setPreferredScrollableViewportSize(table.getPreferredSize());&#xD;&#xA;            JScrollPane scrollPane = new JScrollPane(table);&#xD;&#xA;            add(scrollPane);&#xD;&#xA;            JButton button1 = new JButton(""Remove all rows"");&#xD;&#xA;            button1.addActionListener(new ActionListener() {&#xD;&#xA;    &#xD;&#xA;                public void actionPerformed(ActionEvent arg0) {&#xD;&#xA;                    if (model.getRowCount() > 0) {&#xD;&#xA;                        for (int i = model.getRowCount() - 1; i > -1; i--) {&#xD;&#xA;                            model.removeRow(i);&#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;                    System.out.println(""model.getRowCount() --->"" + model.getRowCount());&#xD;&#xA;                }&#xD;&#xA;            });&#xD;&#xA;            JButton button2 = new JButton(""Add new rows"");&#xD;&#xA;            button2.addActionListener(new ActionListener() {&#xD;&#xA;    &#xD;&#xA;                public void actionPerformed(ActionEvent arg0) {&#xD;&#xA;                    Object[] data0 = {""Buy"", ""IBM"", new Integer(1000), new Double(80.50)};&#xD;&#xA;                    model.addRow(data0);&#xD;&#xA;                    Object[] data1 = {""Sell"", ""MicroSoft"", new Integer(2000), new Double(6.25)};&#xD;&#xA;                    model.addRow(data1);&#xD;&#xA;                    Object[] data2 = {""Sell"", ""Apple"", new Integer(3000), new Double(7.35)};&#xD;&#xA;                    model.addRow(data2);&#xD;&#xA;                    Object[] data3 = {""Buy"", ""Nortel"", new Integer(4000), new Double(20.00)};&#xD;&#xA;                    model.addRow(data3);&#xD;&#xA;                    System.out.println(""model.getRowCount() --->"" + model.getRowCount());&#xD;&#xA;                }&#xD;&#xA;            });&#xD;&#xA;            JPanel southPanel = new JPanel();&#xD;&#xA;            southPanel.add(button1);&#xD;&#xA;            southPanel.add(button2);&#xD;&#xA;            add(southPanel, BorderLayout.SOUTH);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public static void main(String[] args) {&#xD;&#xA;            RemoveAddRows frame = new RemoveAddRows();&#xD;&#xA;            frame.setDefaultCloseOperation(EXIT_ON_CLOSE);&#xD;&#xA;            frame.pack();&#xD;&#xA;            frame.setLocationRelativeTo(null);&#xD;&#xA;            frame.setVisible(true);&#xD;&#xA;        }&#xD;&#xA;    }"
-1162704615312877246,102,5,"    public class EasySSLSocketFactory implements SocketFactory, LayeredSocketFactory &#xD;&#xA;    {  &#xD;&#xA;    	private SSLContext sslcontext = null;  &#xD;&#xA;    &#xD;&#xA;    	private static SSLContext createEasySSLContext() throws IOException &#xD;&#xA;    	{  &#xD;&#xA;    		try&#xD;&#xA;    		{  &#xD;&#xA;    			SSLContext context = SSLContext.getInstance(""TLS"");  &#xD;&#xA;    			context.init(null, new TrustManager[] { new EasyX509TrustManager(null) }, null);  &#xD;&#xA;    			return context;  &#xD;&#xA;    		}&#xD;&#xA;    		catch (Exception e) &#xD;&#xA;    		{  &#xD;&#xA;    			throw new IOException(e.getMessage());  &#xD;&#xA;    		}  &#xD;&#xA;    	}  &#xD;&#xA;    &#xD;&#xA;    	private SSLContext getSSLContext() throws IOException &#xD;&#xA;    	{  &#xD;&#xA;    		if (this.sslcontext == null) &#xD;&#xA;    		{  &#xD;&#xA;    			this.sslcontext = createEasySSLContext();  &#xD;&#xA;    		}  &#xD;&#xA;    		return this.sslcontext;  &#xD;&#xA;    	}  &#xD;&#xA;    &#xD;&#xA;    	/** &#xD;&#xA;    	 * @see org.apache.http.conn.scheme.SocketFactory#connectSocket(java.net.Socket, java.lang.String, int, &#xD;&#xA;    	 *      java.net.InetAddress, int, org.apache.http.params.HttpParams) &#xD;&#xA;    	 */  &#xD;&#xA;    	public Socket connectSocket(Socket sock,&#xD;&#xA;    			String host,&#xD;&#xA;    			int port, &#xD;&#xA;    			InetAddress localAddress,&#xD;&#xA;    			int localPort,&#xD;&#xA;    			HttpParams params) &#xD;&#xA;    &#xD;&#xA;    					throws IOException, UnknownHostException, ConnectTimeoutException &#xD;&#xA;    					{  &#xD;&#xA;    		int connTimeout = HttpConnectionParams.getConnectionTimeout(params);  &#xD;&#xA;    		int soTimeout = HttpConnectionParams.getSoTimeout(params);  &#xD;&#xA;    		InetSocketAddress remoteAddress = new InetSocketAddress(host, port);  &#xD;&#xA;    		SSLSocket sslsock = (SSLSocket) ((sock != null) ? sock : createSocket());  &#xD;&#xA;    &#xD;&#xA;    		if ((localAddress != null) || (localPort > 0)) &#xD;&#xA;    		{  &#xD;&#xA;    			// we need to bind explicitly  &#xD;&#xA;    			if (localPort < 0) &#xD;&#xA;    			{  &#xD;&#xA;    				localPort = 0; // indicates ""any""  &#xD;&#xA;    			}  &#xD;&#xA;    			InetSocketAddress isa = new InetSocketAddress(localAddress, localPort);  &#xD;&#xA;    			sslsock.bind(isa);  &#xD;&#xA;    		}  &#xD;&#xA;    &#xD;&#xA;    		sslsock.connect(remoteAddress, connTimeout);  &#xD;&#xA;    		sslsock.setSoTimeout(soTimeout);  &#xD;&#xA;    		return sslsock;    &#xD;&#xA;    					}  &#xD;&#xA;    &#xD;&#xA;    	/** &#xD;&#xA;    	 * @see org.apache.http.conn.scheme.SocketFactory#createSocket() &#xD;&#xA;    	 */  &#xD;&#xA;    	public Socket createSocket() throws IOException {  &#xD;&#xA;    		return getSSLContext().getSocketFactory().createSocket();  &#xD;&#xA;    	}  &#xD;&#xA;    &#xD;&#xA;    	/** &#xD;&#xA;    	 * @see org.apache.http.conn.scheme.SocketFactory#isSecure(java.net.Socket) &#xD;&#xA;    	 */  &#xD;&#xA;    	public boolean isSecure(Socket socket) throws IllegalArgumentException {  &#xD;&#xA;    		return true;  &#xD;&#xA;    	}  &#xD;&#xA;    &#xD;&#xA;    	/** &#xD;&#xA;    	 * @see org.apache.http.conn.scheme.LayeredSocketFactory#createSocket(java.net.Socket, java.lang.String, int, &#xD;&#xA;    	 *      boolean) &#xD;&#xA;    	 */  &#xD;&#xA;    	public Socket createSocket(Socket socket,&#xD;&#xA;    			String host, &#xD;&#xA;    			int port,&#xD;&#xA;    			boolean autoClose) throws IOException,  &#xD;&#xA;    			UnknownHostException &#xD;&#xA;    			{  &#xD;&#xA;    		return getSSLContext().getSocketFactory().createSocket(socket, host, port, autoClose);  &#xD;&#xA;    			}  &#xD;&#xA;    &#xD;&#xA;    	// -------------------------------------------------------------------  &#xD;&#xA;    	// javadoc in org.apache.http.conn.scheme.SocketFactory says :  &#xD;&#xA;    	// Both Object.equals() and Object.hashCode() must be overridden  &#xD;&#xA;    	// for the correct operation of some connection managers  &#xD;&#xA;    	// -------------------------------------------------------------------  &#xD;&#xA;    &#xD;&#xA;    	public boolean equals(Object obj) {  &#xD;&#xA;    		return ((obj != null) && obj.getClass().equals(EasySSLSocketFactory.class));  &#xD;&#xA;    	}  &#xD;&#xA;    &#xD;&#xA;    	public int hashCode() {  &#xD;&#xA;    		return EasySSLSocketFactory.class.hashCode();  &#xD;&#xA;    	}  &#xD;&#xA;    }"
6914994741053385585,104,5,    {&#xD;&#xA;        [DataContract]&#xD;&#xA;        public class MoneyTransfer&#xD;&#xA;        {&#xD;&#xA;            string sender_account_no;&#xD;&#xA;            string sender_name;&#xD;&#xA;            string sender_sort_code;&#xD;&#xA;            string amount1;&#xD;&#xA;            string transcation_type;&#xD;&#xA;            string date;&#xD;&#xA;            string receiver_account_no;&#xD;&#xA;            string receiver_name;&#xD;&#xA;            string receiver_sort_code;&#xD;&#xA;            string amount2;&#xD;&#xA;            string transcation_type1;&#xD;&#xA;            string date1;&#xD;&#xA;    &#xD;&#xA;            [DataMember]&#xD;&#xA;            public string Sender_Account_No&#xD;&#xA;            {&#xD;&#xA;                get { return sender_account_no; }&#xD;&#xA;                set { sender_account_no = value; }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            }&#xD;&#xA;            [DataMember]&#xD;&#xA;            public string Sender_Name&#xD;&#xA;            {&#xD;&#xA;                get { return sender_name; }&#xD;&#xA;                set { sender_name = value; }&#xD;&#xA;    &#xD;&#xA;            }&#xD;&#xA;            [DataMember]&#xD;&#xA;            public string Sender_Sort_Code&#xD;&#xA;            {&#xD;&#xA;                get { return sender_sort_code; }&#xD;&#xA;                set { sender_sort_code = value; }&#xD;&#xA;            }&#xD;&#xA;            [DataMember]&#xD;&#xA;            public string Amount&#xD;&#xA;            {&#xD;&#xA;                get { return amount1; }&#xD;&#xA;                set { amount1 = value; }&#xD;&#xA;            }&#xD;&#xA;            [DataMember]&#xD;&#xA;            public string Transcation_Type&#xD;&#xA;            {&#xD;&#xA;                get { return transcation_type; }&#xD;&#xA;                set { transcation_type = value; }&#xD;&#xA;    &#xD;&#xA;            }&#xD;&#xA;            [DataMember]&#xD;&#xA;            public string Date&#xD;&#xA;            {&#xD;&#xA;                get { return date; }&#xD;&#xA;                set { date = value; }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            }&#xD;&#xA;            [DataMember]&#xD;&#xA;            public string Receiver_Account_No&#xD;&#xA;            {&#xD;&#xA;                get { return receiver_account_no; }&#xD;&#xA;                set { receiver_account_no = value; }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            }&#xD;&#xA;            [DataMember]&#xD;&#xA;            public string Receiver_Name&#xD;&#xA;            {&#xD;&#xA;                get { return receiver_name; }&#xD;&#xA;                set { receiver_name = value; }&#xD;&#xA;    &#xD;&#xA;            }&#xD;&#xA;            [DataMember]&#xD;&#xA;            public string Receiver_Sort_Code&#xD;&#xA;            {&#xD;&#xA;                get { return receiver_sort_code; }&#xD;&#xA;                set { receiver_sort_code = value; }&#xD;&#xA;            }&#xD;&#xA;            [DataMember]&#xD;&#xA;            public string Amount1&#xD;&#xA;            {&#xD;&#xA;                get { return amount2; }&#xD;&#xA;                set { amount2 = value; }&#xD;&#xA;            }&#xD;&#xA;            [DataMember]&#xD;&#xA;            public string Transcation_Type1&#xD;&#xA;            {&#xD;&#xA;                get { return transcation_type1; }&#xD;&#xA;                set { transcation_type1 = value; }&#xD;&#xA;    &#xD;&#xA;            }&#xD;&#xA;            [DataMember]&#xD;&#xA;            public string Date1&#xD;&#xA;            {&#xD;&#xA;                get { return date1; }&#xD;&#xA;                set { date1 = value; }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    }
4808235503744363167,105,5,"    * {&#xD;&#xA;      box-sizing: border-box&#xD;&#xA;    }&#xD;&#xA;    body {&#xD;&#xA;      font-family: Verdana, sans-serif;&#xD;&#xA;      margin: 0&#xD;&#xA;    }&#xD;&#xA;    .mySlides {&#xD;&#xA;      display: none&#xD;&#xA;    }&#xD;&#xA;    /* Slideshow container */&#xD;&#xA;    .slideshow-container {&#xD;&#xA;      max-width: 1000px;&#xD;&#xA;      position: relative;&#xD;&#xA;      margin: auto;&#xD;&#xA;    }&#xD;&#xA;    /* Next & previous buttons */&#xD;&#xA;    .prev,&#xD;&#xA;    .next {&#xD;&#xA;      cursor: pointer;&#xD;&#xA;      position: absolute;&#xD;&#xA;      top: 50%;&#xD;&#xA;      width: auto;&#xD;&#xA;      padding: 16px;&#xD;&#xA;      margin-top: -22px;&#xD;&#xA;      color: white;&#xD;&#xA;      font-weight: bold;&#xD;&#xA;      font-size: 18px;&#xD;&#xA;      transition: 0.6s ease;&#xD;&#xA;      border-radius: 0 3px 3px 0;&#xD;&#xA;    }&#xD;&#xA;    /* Position the ""next button"" to the right */&#xD;&#xA;    .next {&#xD;&#xA;      right: 0;&#xD;&#xA;      border-radius: 3px 0 0 3px;&#xD;&#xA;    }&#xD;&#xA;    /* On hover, add a black background color with a little bit see-through */&#xD;&#xA;    .prev:hover,&#xD;&#xA;    .next:hover {&#xD;&#xA;      background-color: rgba(0, 0, 0, 0.8);&#xD;&#xA;    }&#xD;&#xA;    /* Caption text */&#xD;&#xA;    .text {&#xD;&#xA;      color: #f2f2f2;&#xD;&#xA;      font-size: 15px;&#xD;&#xA;      padding: 8px 12px;&#xD;&#xA;      position: absolute;&#xD;&#xA;      bottom: 8px;&#xD;&#xA;      width: 100%;&#xD;&#xA;      text-align: center;&#xD;&#xA;    }&#xD;&#xA;    /* Number text (1/3 etc) */&#xD;&#xA;    .numbertext {&#xD;&#xA;      color: #f2f2f2;&#xD;&#xA;      font-size: 12px;&#xD;&#xA;      padding: 8px 12px;&#xD;&#xA;      position: absolute;&#xD;&#xA;      top: 0;&#xD;&#xA;    }&#xD;&#xA;    /* The dots/bullets/indicators */&#xD;&#xA;    .dot {&#xD;&#xA;      cursor: pointer;&#xD;&#xA;      height: 13px;&#xD;&#xA;      width: 13px;&#xD;&#xA;      margin: 0 2px;&#xD;&#xA;      background-color: #bbb;&#xD;&#xA;      border-radius: 50%;&#xD;&#xA;      display: inline-block;&#xD;&#xA;      transition: background-color 0.6s ease;&#xD;&#xA;    }&#xD;&#xA;    .active,&#xD;&#xA;    .dot:hover {&#xD;&#xA;      background-color: #717171;&#xD;&#xA;    }&#xD;&#xA;    /* Fading animation */&#xD;&#xA;    .fade {&#xD;&#xA;      -webkit-animation-name: fade;&#xD;&#xA;      -webkit-animation-duration: 1.5s;&#xD;&#xA;      animation-name: fade;&#xD;&#xA;      animation-duration: 1.5s;&#xD;&#xA;    }&#xD;&#xA;    @-webkit-keyframes fade {&#xD;&#xA;      from {&#xD;&#xA;        opacity: .4&#xD;&#xA;      }&#xD;&#xA;      to {&#xD;&#xA;        opacity: 1&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;    @keyframes fade {&#xD;&#xA;      from {&#xD;&#xA;        opacity: .4&#xD;&#xA;      }&#xD;&#xA;      to {&#xD;&#xA;        opacity: 1&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;    /* On smaller screens, decrease text size */&#xD;&#xA;    @media only screen and (max-width: 300px) {&#xD;&#xA;      .prev,&#xD;&#xA;      .next,&#xD;&#xA;      .text {&#xD;&#xA;        font-size: 11px&#xD;&#xA;      }&#xD;&#xA;    }"
-8230587640484649206,106,5,"    import java.awt.*;&#xD;&#xA;    import javax.swing.*;&#xD;&#xA;    import javax.swing.text.*;&#xD;&#xA;    &#xD;&#xA;    public class LabelImageText extends JPanel&#xD;&#xA;    {&#xD;&#xA;    	public LabelImageText()&#xD;&#xA;    	{&#xD;&#xA;    		JLabel label1 = new JLabel( new ColorIcon(Color.ORANGE, 100, 100) );&#xD;&#xA;    		label1.setText( ""Easy Way"" );&#xD;&#xA;    		label1.setHorizontalTextPosition(JLabel.CENTER);&#xD;&#xA;    		label1.setVerticalTextPosition(JLabel.CENTER);&#xD;&#xA;    		add( label1 );&#xD;&#xA;    &#xD;&#xA;    		//&#xD;&#xA;    &#xD;&#xA;    		JLabel label2 = new JLabel( new ColorIcon(Color.YELLOW, 200, 150) );&#xD;&#xA;    		label2.setLayout( new BoxLayout(label2, BoxLayout.Y_AXIS) );&#xD;&#xA;    		add( label2 );&#xD;&#xA;    &#xD;&#xA;    		JLabel text = new JLabel( ""More Control"" );&#xD;&#xA;    		text.setAlignmentX(JLabel.CENTER_ALIGNMENT);&#xD;&#xA;    		label2.add( Box.createVerticalGlue() );&#xD;&#xA;    		label2.add( text );&#xD;&#xA;    		label2.add( Box.createVerticalStrut(10) );&#xD;&#xA;    &#xD;&#xA;    		//&#xD;&#xA;    &#xD;&#xA;    		JLabel label3 = new JLabel( new ColorIcon(Color.GREEN, 200, 150) );&#xD;&#xA;    		label3.setLayout( new GridBagLayout() );&#xD;&#xA;    		add( label3 );&#xD;&#xA;    &#xD;&#xA;    		JLabel text3 = new JLabel();&#xD;&#xA;    		text3.setText(""<html><center>Text<br>over<br>Image<center></html>"");&#xD;&#xA;    		text3.setLocation(20, 20);&#xD;&#xA;    		text3.setSize(text3.getPreferredSize());&#xD;&#xA;    		label3.add( text3 );&#xD;&#xA;    &#xD;&#xA;    		//&#xD;&#xA;    &#xD;&#xA;    		JLabel label4 = new JLabel( new ColorIcon(Color.CYAN, 200, 150) );&#xD;&#xA;    		add( label4 );&#xD;&#xA;    &#xD;&#xA;    		JTextPane textPane = new JTextPane();&#xD;&#xA;    		textPane.setText(""Add some text that will wrap at your preferred width"");&#xD;&#xA;    		textPane.setEditable( false );&#xD;&#xA;    		textPane.setOpaque(false);&#xD;&#xA;    		SimpleAttributeSet center = new SimpleAttributeSet();&#xD;&#xA;    		StyleConstants.setAlignment(center, StyleConstants.ALIGN_CENTER);&#xD;&#xA;    		StyledDocument doc = textPane.getStyledDocument();&#xD;&#xA;    		doc.setParagraphAttributes(0, doc.getLength(), center, false);&#xD;&#xA;    		textPane.setBounds(20, 20, 75, 100);&#xD;&#xA;    		label4.add( textPane );&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public static class ColorIcon implements Icon&#xD;&#xA;    	{&#xD;&#xA;    		private Color color;&#xD;&#xA;    		private int width;&#xD;&#xA;    		private int height;&#xD;&#xA;    &#xD;&#xA;    		public ColorIcon(Color color, int width, int height)&#xD;&#xA;    		{&#xD;&#xA;    			this.color = color;&#xD;&#xA;    			this.width = width;&#xD;&#xA;    			this.height = height;&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		public int getIconWidth()&#xD;&#xA;    		{&#xD;&#xA;    			return width;&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		public int getIconHeight()&#xD;&#xA;    		{&#xD;&#xA;    			return height;&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		public void paintIcon(Component c, Graphics g, int x, int y)&#xD;&#xA;    		{&#xD;&#xA;    			g.setColor(color);&#xD;&#xA;    			g.fillRect(x, y, width, height);&#xD;&#xA;    		}&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	private static void createAndShowUI()&#xD;&#xA;    	{&#xD;&#xA;    		JFrame frame = new JFrame(""LabelImageText"");&#xD;&#xA;    		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;&#xA;    		frame.add( new LabelImageText() );&#xD;&#xA;    		frame.pack();&#xD;&#xA;    		frame.setLocationRelativeTo( null );&#xD;&#xA;    		frame.setVisible( true );&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public static void main(String[] args)&#xD;&#xA;    	{&#xD;&#xA;    		EventQueue.invokeLater(new Runnable()&#xD;&#xA;    		{&#xD;&#xA;    			public void run()&#xD;&#xA;    			{&#xD;&#xA;    				createAndShowUI();&#xD;&#xA;    			}&#xD;&#xA;    		});&#xD;&#xA;    	}&#xD;&#xA;    }"
-1458007427702880306,108,5,"    - (UIImage *)scaleAndRotateImage(UIImage *)image&#xD;&#xA;    {&#xD;&#xA;    	int kMaxResolution = 320; // Or whatever&#xD;&#xA;    	&#xD;&#xA;    	CGImageRef imgRef = image.CGImage;&#xD;&#xA;    	&#xD;&#xA;    	CGFloat width = CGImageGetWidth(imgRef);&#xD;&#xA;    	CGFloat height = CGImageGetHeight(imgRef);&#xD;&#xA;    	&#xD;&#xA;    	&#xD;&#xA;    	CGAffineTransform transform = CGAffineTransformIdentity;&#xD;&#xA;    	CGRect bounds = CGRectMake(0, 0, width, height);&#xD;&#xA;    	if (width > kMaxResolution || height > kMaxResolution) {&#xD;&#xA;    		CGFloat ratio = width/height;&#xD;&#xA;    		if (ratio > 1) {&#xD;&#xA;    			bounds.size.width = kMaxResolution;&#xD;&#xA;    			bounds.size.height = bounds.size.width / ratio;&#xD;&#xA;    		}&#xD;&#xA;    		else {&#xD;&#xA;    			bounds.size.height = kMaxResolution;&#xD;&#xA;    			bounds.size.width = bounds.size.height * ratio;&#xD;&#xA;    		}&#xD;&#xA;    	}&#xD;&#xA;    	&#xD;&#xA;    	CGFloat scaleRatio = bounds.size.width / width;&#xD;&#xA;    	CGSize imageSize = CGSizeMake(CGImageGetWidth(imgRef), CGImageGetHeight(imgRef));&#xD;&#xA;    	CGFloat boundHeight;&#xD;&#xA;    	UIImageOrientation orient = image.imageOrientation;&#xD;&#xA;    	switch(orient) {&#xD;&#xA;    			&#xD;&#xA;    		case UIImageOrientationUp: //EXIF = 1&#xD;&#xA;    			transform = CGAffineTransformIdentity;&#xD;&#xA;    			break;&#xD;&#xA;    			&#xD;&#xA;    		case UIImageOrientationUpMirrored: //EXIF = 2&#xD;&#xA;    			transform = CGAffineTransformMakeTranslation(imageSize.width, 0.0);&#xD;&#xA;    			transform = CGAffineTransformScale(transform, -1.0, 1.0);&#xD;&#xA;    			break;&#xD;&#xA;    			&#xD;&#xA;    		case UIImageOrientationDown: //EXIF = 3&#xD;&#xA;    			transform = CGAffineTransformMakeTranslation(imageSize.width, imageSize.height);&#xD;&#xA;    			transform = CGAffineTransformRotate(transform, M_PI);&#xD;&#xA;    			break;&#xD;&#xA;    			&#xD;&#xA;    		case UIImageOrientationDownMirrored: //EXIF = 4&#xD;&#xA;    			transform = CGAffineTransformMakeTranslation(0.0, imageSize.height);&#xD;&#xA;    			transform = CGAffineTransformScale(transform, 1.0, -1.0);&#xD;&#xA;    			break;&#xD;&#xA;    			&#xD;&#xA;    		case UIImageOrientationLeftMirrored: //EXIF = 5&#xD;&#xA;    			boundHeight = bounds.size.height;&#xD;&#xA;    			bounds.size.height = bounds.size.width;&#xD;&#xA;    			bounds.size.width = boundHeight;&#xD;&#xA;    			transform = CGAffineTransformMakeTranslation(imageSize.height, imageSize.width);&#xD;&#xA;    			transform = CGAffineTransformScale(transform, -1.0, 1.0);&#xD;&#xA;    			transform = CGAffineTransformRotate(transform, 3.0 * M_PI / 2.0);&#xD;&#xA;    			break;&#xD;&#xA;    			&#xD;&#xA;    		case UIImageOrientationLeft: //EXIF = 6&#xD;&#xA;    			boundHeight = bounds.size.height;&#xD;&#xA;    			bounds.size.height = bounds.size.width;&#xD;&#xA;    			bounds.size.width = boundHeight;&#xD;&#xA;    			transform = CGAffineTransformMakeTranslation(0.0, imageSize.width);&#xD;&#xA;    			transform = CGAffineTransformRotate(transform, 3.0 * M_PI / 2.0);&#xD;&#xA;    			break;&#xD;&#xA;    			&#xD;&#xA;    		case UIImageOrientationRightMirrored: //EXIF = 7&#xD;&#xA;    			boundHeight = bounds.size.height;&#xD;&#xA;    			bounds.size.height = bounds.size.width;&#xD;&#xA;    			bounds.size.width = boundHeight;&#xD;&#xA;    			transform = CGAffineTransformMakeScale(-1.0, 1.0);&#xD;&#xA;    			transform = CGAffineTransformRotate(transform, M_PI / 2.0);&#xD;&#xA;    			break;&#xD;&#xA;    			&#xD;&#xA;    		case UIImageOrientationRight: //EXIF = 8&#xD;&#xA;    			boundHeight = bounds.size.height;&#xD;&#xA;    			bounds.size.height = bounds.size.width;&#xD;&#xA;    			bounds.size.width = boundHeight;&#xD;&#xA;    			transform = CGAffineTransformMakeTranslation(imageSize.height, 0.0);&#xD;&#xA;    			transform = CGAffineTransformRotate(transform, M_PI / 2.0);&#xD;&#xA;    			break;&#xD;&#xA;    			&#xD;&#xA;    		default:&#xD;&#xA;    			[NSException raise:NSInternalInconsistencyException format:@""Invalid image orientation""];&#xD;&#xA;    			&#xD;&#xA;    	}&#xD;&#xA;    	&#xD;&#xA;    	UIGraphicsBeginImageContext(bounds.size);&#xD;&#xA;    	&#xD;&#xA;    	CGContextRef context = UIGraphicsGetCurrentContext();&#xD;&#xA;    	&#xD;&#xA;    	if (orient == UIImageOrientationRight || orient == UIImageOrientationLeft) {&#xD;&#xA;    		CGContextScaleCTM(context, -scaleRatio, scaleRatio);&#xD;&#xA;    		CGContextTranslateCTM(context, -height, 0);&#xD;&#xA;    	}&#xD;&#xA;    	else {&#xD;&#xA;    		CGContextScaleCTM(context, scaleRatio, -scaleRatio);&#xD;&#xA;    		CGContextTranslateCTM(context, 0, -height);&#xD;&#xA;    	}&#xD;&#xA;    	&#xD;&#xA;    	CGContextConcatCTM(context, transform);&#xD;&#xA;    	&#xD;&#xA;    	CGContextDrawImage(UIGraphicsGetCurrentContext(), CGRectMake(0, 0, width, height), imgRef);&#xD;&#xA;    	UIImage *imageCopy = UIGraphicsGetImageFromCurrentImageContext();&#xD;&#xA;    	UIGraphicsEndImageContext();&#xD;&#xA;    	&#xD;&#xA;    	return imageCopy;&#xD;&#xA;    }"
-4813517850796026848,108,5,"    /*Now the CSS*/&#xD;&#xA;    * {&#xD;&#xA;      margin: 0;&#xD;&#xA;      padding: 0;&#xD;&#xA;    }&#xD;&#xA;    .tree ul {&#xD;&#xA;      padding-top: 20px;&#xD;&#xA;      position: relative;&#xD;&#xA;      transition: all 0.5s;&#xD;&#xA;      -webkit-transition: all 0.5s;&#xD;&#xA;      -moz-transition: all 0.5s;&#xD;&#xA;    }&#xD;&#xA;    .tree li {&#xD;&#xA;      float: left;&#xD;&#xA;      text-align: center;&#xD;&#xA;      list-style-type: none;&#xD;&#xA;      position: relative;&#xD;&#xA;      padding: 20px 5px 0 5px;&#xD;&#xA;      transition: all 0.5s;&#xD;&#xA;      -webkit-transition: all 0.5s;&#xD;&#xA;      -moz-transition: all 0.5s;&#xD;&#xA;    }&#xD;&#xA;    /*We will use ::before and ::after to draw the connectors*/&#xD;&#xA;    .tree li::before,&#xD;&#xA;    .tree li::after {&#xD;&#xA;      content: '';&#xD;&#xA;      position: absolute;&#xD;&#xA;      top: 0;&#xD;&#xA;      right: 50%;&#xD;&#xA;      border-top: 1px solid #ccc;&#xD;&#xA;      width: 50%;&#xD;&#xA;      height: 20px;&#xD;&#xA;    }&#xD;&#xA;    .tree li::after {&#xD;&#xA;      right: auto;&#xD;&#xA;      left: 50%;&#xD;&#xA;      border-left: 1px solid #ccc;&#xD;&#xA;    }&#xD;&#xA;    /*We need to remove left-right connectors from elements without &#xD;&#xA;    any siblings*/&#xD;&#xA;    .tree li:only-child::after,&#xD;&#xA;    .tree li:only-child::before {&#xD;&#xA;      display: none;&#xD;&#xA;    }&#xD;&#xA;    /*Remove space from the top of single children*/&#xD;&#xA;    .tree li:only-child {&#xD;&#xA;      padding-top: 0;&#xD;&#xA;    }&#xD;&#xA;    /*Remove left connector from first child and &#xD;&#xA;    right connector from last child*/&#xD;&#xA;    .tree li:first-child::before,&#xD;&#xA;    .tree li:last-child::after {&#xD;&#xA;      border: 0 none;&#xD;&#xA;    }&#xD;&#xA;    /*Adding back the vertical connector to the last nodes*/&#xD;&#xA;    .tree li:last-child::before {&#xD;&#xA;      border-right: 1px solid #ccc;&#xD;&#xA;      border-radius: 0 5px 0 0;&#xD;&#xA;      -webkit-border-radius: 0 5px 0 0;&#xD;&#xA;      -moz-border-radius: 0 5px 0 0;&#xD;&#xA;    }&#xD;&#xA;    .tree li:first-child::after {&#xD;&#xA;      border-radius: 5px 0 0 0;&#xD;&#xA;      -webkit-border-radius: 5px 0 0 0;&#xD;&#xA;      -moz-border-radius: 5px 0 0 0;&#xD;&#xA;    }&#xD;&#xA;    /*Time to add downward connectors from parents*/&#xD;&#xA;    .tree ul ul::before {&#xD;&#xA;      content: '';&#xD;&#xA;      position: absolute;&#xD;&#xA;      top: 0;&#xD;&#xA;      left: 50%;&#xD;&#xA;      border-left: 1px solid #ccc;&#xD;&#xA;      width: 0;&#xD;&#xA;      height: 20px;&#xD;&#xA;    }&#xD;&#xA;    .tree li a {&#xD;&#xA;      border: 1px solid #ccc;&#xD;&#xA;      padding: 5px 10px;&#xD;&#xA;      text-decoration: none;&#xD;&#xA;      color: #666;&#xD;&#xA;      font-family: arial, verdana, tahoma;&#xD;&#xA;      font-size: 11px;&#xD;&#xA;      display: inline-block;&#xD;&#xA;      border-radius: 5px;&#xD;&#xA;      -webkit-border-radius: 5px;&#xD;&#xA;      -moz-border-radius: 5px;&#xD;&#xA;      transition: all 0.5s;&#xD;&#xA;      -webkit-transition: all 0.5s;&#xD;&#xA;      -moz-transition: all 0.5s;&#xD;&#xA;    }&#xD;&#xA;    /*Time for some hover effects*/&#xD;&#xA;    /*We will apply the hover effect the the lineage of the element also*/&#xD;&#xA;    .tree li a:hover,&#xD;&#xA;    .tree li a:hover+ul li a {&#xD;&#xA;      background: #c8e4f8;&#xD;&#xA;      color: #000;&#xD;&#xA;      border: 1px solid #94a0b4;&#xD;&#xA;    }&#xD;&#xA;    /*Connector styles on hover*/&#xD;&#xA;    .tree li a:hover+ul li::after,&#xD;&#xA;    .tree li a:hover+ul li::before,&#xD;&#xA;    .tree li a:hover+ul::before,&#xD;&#xA;    .tree li a:hover+ul ul::before {&#xD;&#xA;      border-color: #94a0b4;&#xD;&#xA;    }&#xD;&#xA;    /*Thats all. I hope you enjoyed it.&#xD;&#xA;    Thanks :)*/"
4378234844529697892,111,5,"    public static String getPath(final Context context, final Uri uri) {&#xD;&#xA;		final boolean isKitKat = Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT;&#xD;&#xA;		// DocumentProvider&#xD;&#xA;		if (isKitKat && DocumentsContract.isDocumentUri(context, uri)) {&#xD;&#xA;			// ExternalStorageProvider&#xD;&#xA;			if (isExternalStorageDocument(uri)) {&#xD;&#xA;				final String docId = DocumentsContract.getDocumentId(uri);&#xD;&#xA;				final String[] split = docId.split("":"");&#xD;&#xA;				final String type = split[0];&#xD;&#xA;				if (""primary"".equalsIgnoreCase(type)) {&#xD;&#xA;					return Environment.getExternalStorageDirectory() + ""/""&#xD;&#xA;							+ split[1];&#xD;&#xA;				}&#xD;&#xA;				// TODO handle non-primary volumes&#xD;&#xA;			}&#xD;&#xA;			// DownloadsProvider&#xD;&#xA;			else if (isDownloadsDocument(uri)) {&#xD;&#xA;				final String id = DocumentsContract.getDocumentId(uri);&#xD;&#xA;				final Uri contentUri = ContentUris.withAppendedId(&#xD;&#xA;						Uri.parse(""content://downloads/public_downloads""),&#xD;&#xA;						Long.valueOf(id));&#xD;&#xA;				return getDataColumn(context, contentUri, null, null);&#xD;&#xA;			}&#xD;&#xA;			// MediaProvider&#xD;&#xA;			else if (isMediaDocument(uri)) {&#xD;&#xA;				final String docId = DocumentsContract.getDocumentId(uri);&#xD;&#xA;				final String[] split = docId.split("":"");&#xD;&#xA;				final String type = split[0];&#xD;&#xA;				Uri contentUri = null;&#xD;&#xA;				if (""image"".equals(type)) {&#xD;&#xA;					contentUri = MediaStore.Images.Media.EXTERNAL_CONTENT_URI;&#xD;&#xA;				} else if (""video"".equals(type)) {&#xD;&#xA;					contentUri = MediaStore.Video.Media.EXTERNAL_CONTENT_URI;&#xD;&#xA;				} else if (""audio"".equals(type)) {&#xD;&#xA;					contentUri = MediaStore.Audio.Media.EXTERNAL_CONTENT_URI;&#xD;&#xA;				}&#xD;&#xA;				final String selection = ""_id=?"";&#xD;&#xA;				final String[] selectionArgs = new String[] { split[1] };&#xD;&#xA;				return getDataColumn(context, contentUri, selection,&#xD;&#xA;						selectionArgs);&#xD;&#xA;			}&#xD;&#xA;		}&#xD;&#xA;		// MediaStore (and general)&#xD;&#xA;		else if (""content"".equalsIgnoreCase(uri.getScheme())) {&#xD;&#xA;			return getDataColumn(context, uri, null, null);&#xD;&#xA;		}&#xD;&#xA;		// File&#xD;&#xA;		else if (""file"".equalsIgnoreCase(uri.getScheme())) {&#xD;&#xA;			return uri.getPath();&#xD;&#xA;		}&#xD;&#xA;		return null;&#xD;&#xA;	}&#xD;&#xA;	/**&#xD;&#xA;	 * Get the value of the data column for this Uri. This is useful for&#xD;&#xA;	 * MediaStore Uris, and other file-based ContentProviders.&#xD;&#xA;	 * &#xD;&#xA;	 * @param context&#xD;&#xA;	 *            The context.&#xD;&#xA;	 * @param uri&#xD;&#xA;	 *            The Uri to query.&#xD;&#xA;	 * @param selection&#xD;&#xA;	 *            (Optional) Filter used in the query.&#xD;&#xA;	 * @param selectionArgs&#xD;&#xA;	 *            (Optional) Selection arguments used in the query.&#xD;&#xA;	 * @return The value of the _data column, which is typically a file path.&#xD;&#xA;	 */&#xD;&#xA;	public static String getDataColumn(Context context, Uri uri,&#xD;&#xA;			String selection, String[] selectionArgs) {&#xD;&#xA;		Cursor cursor = null;&#xD;&#xA;		final String column = ""_data"";&#xD;&#xA;		final String[] projection = { column };&#xD;&#xA;		try {&#xD;&#xA;			cursor = context.getContentResolver().query(uri, projection,&#xD;&#xA;					selection, selectionArgs, null);&#xD;&#xA;			if (cursor != null && cursor.moveToFirst()) {&#xD;&#xA;				final int column_index = cursor.getColumnIndexOrThrow(column);&#xD;&#xA;				return cursor.getString(column_index);&#xD;&#xA;			}&#xD;&#xA;		} finally {&#xD;&#xA;			if (cursor != null)&#xD;&#xA;				cursor.close();&#xD;&#xA;		}&#xD;&#xA;		return null;&#xD;&#xA;	}&#xD;&#xA;	/**&#xD;&#xA;	 * @param uri&#xD;&#xA;	 *            The Uri to check.&#xD;&#xA;	 * @return Whether the Uri authority is ExternalStorageProvider.&#xD;&#xA;	 */&#xD;&#xA;	public static boolean isExternalStorageDocument(Uri uri) {&#xD;&#xA;		return ""com.android.externalstorage.documents"".equals(uri&#xD;&#xA;				.getAuthority());&#xD;&#xA;	}&#xD;&#xA;	/**&#xD;&#xA;	 * @param uri&#xD;&#xA;	 *            The Uri to check.&#xD;&#xA;	 * @return Whether the Uri authority is DownloadsProvider.&#xD;&#xA;	 */&#xD;&#xA;	public static boolean isDownloadsDocument(Uri uri) {&#xD;&#xA;		return ""com.android.providers.downloads.documents"".equals(uri&#xD;&#xA;				.getAuthority());&#xD;&#xA;	}&#xD;&#xA;	/**&#xD;&#xA;	 * @param uri&#xD;&#xA;	 *            The Uri to check.&#xD;&#xA;	 * @return Whether the Uri authority is MediaProvider.&#xD;&#xA;	 */&#xD;&#xA;	public static boolean isMediaDocument(Uri uri) {&#xD;&#xA;		return ""com.android.providers.media.documents"".equals(uri&#xD;&#xA;				.getAuthority());&#xD;&#xA;	}"
7119204518489074670,112,5,"    package com.facebook.android;&#xD;&#xA;    &#xD;&#xA;    import java.io.IOException;&#xD;&#xA;    import java.io.UnsupportedEncodingException;&#xD;&#xA;    import java.net.URLEncoder;&#xD;&#xA;    import java.security.MessageDigest;&#xD;&#xA;    import java.security.NoSuchAlgorithmException;&#xD;&#xA;    import java.util.GregorianCalendar;&#xD;&#xA;    import java.util.HashMap;&#xD;&#xA;    import java.util.Map;&#xD;&#xA;    &#xD;&#xA;    import org.apache.harmony.javax.security.auth.callback.CallbackHandler;&#xD;&#xA;    import org.apache.harmony.javax.security.sasl.Sasl;&#xD;&#xA;    import org.jivesoftware.smack.SASLAuthentication;&#xD;&#xA;    import org.jivesoftware.smack.XMPPException;&#xD;&#xA;    import org.jivesoftware.smack.sasl.SASLMechanism;&#xD;&#xA;    import org.jivesoftware.smack.util.Base64;&#xD;&#xA;    &#xD;&#xA;    import android.util.Log;&#xD;&#xA;    &#xD;&#xA;    public class SASLXFacebookPlatformMechanism extends SASLMechanism {&#xD;&#xA;    &#xD;&#xA;        private static final String NAME              = ""X-FACEBOOK-PLATFORM"";&#xD;&#xA;    &#xD;&#xA;        private String              apiKey            = """";&#xD;&#xA;        private String              accessToken        = """";&#xD;&#xA;    &#xD;&#xA;        /**&#xD;&#xA;         * Constructor.&#xD;&#xA;         */&#xD;&#xA;        public SASLXFacebookPlatformMechanism(SASLAuthentication saslAuthentication) {&#xD;&#xA;            super(saslAuthentication);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        protected void authenticate() throws IOException, XMPPException {&#xD;&#xA;            getSASLAuthentication().send(new AuthMechanism(NAME, """"));&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void authenticate(String apiKey, String host, String accessToken) throws IOException, XMPPException {&#xD;&#xA;            if (apiKey == null || accessToken == null) {&#xD;&#xA;                throw new IllegalArgumentException(""Invalid parameters"");&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            this.apiKey = apiKey;&#xD;&#xA;            this.accessToken = accessToken;&#xD;&#xA;            this.hostname = host;&#xD;&#xA;    &#xD;&#xA;            String[] mechanisms = { ""DIGEST-MD5"" };&#xD;&#xA;            Map<String, String> props = new HashMap<String, String>();&#xD;&#xA;            this.sc = Sasl.createSaslClient(mechanisms, null, ""xmpp"", host, props, this);&#xD;&#xA;            authenticate();&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void authenticate(String username, String host, CallbackHandler cbh) throws IOException, XMPPException {&#xD;&#xA;            String[] mechanisms = { ""DIGEST-MD5"" };&#xD;&#xA;            Map<String, String> props = new HashMap<String, String>();&#xD;&#xA;            this.sc = Sasl.createSaslClient(mechanisms, null, ""xmpp"", host, props, cbh);&#xD;&#xA;            authenticate();&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        protected String getName() {&#xD;&#xA;            return NAME;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void challengeReceived(String challenge) throws IOException {&#xD;&#xA;            byte[] response = null;&#xD;&#xA;    &#xD;&#xA;            if (challenge != null) {&#xD;&#xA;                String decodedChallenge = new String(Base64.decode(challenge));&#xD;&#xA;                Map<String, String> parameters = getQueryMap(decodedChallenge);&#xD;&#xA;    &#xD;&#xA;                String version = ""1.0"";&#xD;&#xA;                String nonce = parameters.get(""nonce"");&#xD;&#xA;                String method = parameters.get(""method"");&#xD;&#xA;    &#xD;&#xA;                String composedResponse =&#xD;&#xA;                    ""method="" + URLEncoder.encode(method, ""utf-8"") +&#xD;&#xA;                            ""&nonce="" + URLEncoder.encode(nonce, ""utf-8"") +&#xD;&#xA;                            ""&access_token="" + URLEncoder.encode(accessToken, ""utf-8"") +&#xD;&#xA;                            ""&api_key="" + URLEncoder.encode(apiKey, ""utf-8"") +&#xD;&#xA;                            ""&call_id=0"" +&#xD;&#xA;                            ""&v="" + URLEncoder.encode(version, ""utf-8"");&#xD;&#xA;                response = composedResponse.getBytes();&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            String authenticationText = """";&#xD;&#xA;    &#xD;&#xA;            if (response != null) {&#xD;&#xA;                authenticationText = Base64.encodeBytes(response);&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            // Send the authentication to the server&#xD;&#xA;            getSASLAuthentication().send(new Response(authenticationText));&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private Map<String, String> getQueryMap(String query) {&#xD;&#xA;            Map<String, String> map = new HashMap<String, String>();&#xD;&#xA;            String[] params = query.split(""\\&"");&#xD;&#xA;    &#xD;&#xA;            for (String param : params) {&#xD;&#xA;                String[] fields = param.split(""="", 2);&#xD;&#xA;                map.put(fields[0], (fields.length > 1 ? fields[1] : null));&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            return map;&#xD;&#xA;        }&#xD;&#xA;    }"
-5489188430571516545,113,5,"        public static CookieCollection GetAllCookiesFromHeader(string strHeader, string strHost)&#xD;&#xA;        {&#xD;&#xA;            ArrayList al = new ArrayList();&#xD;&#xA;            CookieCollection cc = new CookieCollection();&#xD;&#xA;            if (strHeader != string.Empty)&#xD;&#xA;            {&#xD;&#xA;                al = ConvertCookieHeaderToArrayList(strHeader);&#xD;&#xA;                cc = ConvertCookieArraysToCookieCollection(al, strHost);&#xD;&#xA;            }&#xD;&#xA;            return cc;&#xD;&#xA;        }&#xD;&#xA;        private static ArrayList ConvertCookieHeaderToArrayList(string strCookHeader)&#xD;&#xA;        {&#xD;&#xA;            strCookHeader = strCookHeader.Replace(""\r"", """");&#xD;&#xA;            strCookHeader = strCookHeader.Replace(""\n"", """");&#xD;&#xA;            string[] strCookTemp = strCookHeader.Split(',');&#xD;&#xA;            ArrayList al = new ArrayList();&#xD;&#xA;            int i = 0;&#xD;&#xA;            int n = strCookTemp.Length;&#xD;&#xA;            while (i < n)&#xD;&#xA;            {&#xD;&#xA;                if (strCookTemp[i].IndexOf(""expires="", StringComparison.OrdinalIgnoreCase) > 0)&#xD;&#xA;                {&#xD;&#xA;                    al.Add(strCookTemp[i] + "","" + strCookTemp[i + 1]);&#xD;&#xA;                    i = i + 1;&#xD;&#xA;                }&#xD;&#xA;                else&#xD;&#xA;                {&#xD;&#xA;                    al.Add(strCookTemp[i]);&#xD;&#xA;                }&#xD;&#xA;                i = i + 1;&#xD;&#xA;            }&#xD;&#xA;            return al;&#xD;&#xA;        }&#xD;&#xA;        private static CookieCollection ConvertCookieArraysToCookieCollection(ArrayList al, string strHost)&#xD;&#xA;        {&#xD;&#xA;            CookieCollection cc = new CookieCollection();&#xD;&#xA;            int alcount = al.Count;&#xD;&#xA;            string strEachCook;&#xD;&#xA;            string[] strEachCookParts;&#xD;&#xA;            for (int i = 0; i < alcount; i++)&#xD;&#xA;            {&#xD;&#xA;                strEachCook = al[i].ToString();&#xD;&#xA;                strEachCookParts = strEachCook.Split(';');&#xD;&#xA;                int intEachCookPartsCount = strEachCookParts.Length;&#xD;&#xA;                string strCNameAndCValue = string.Empty;&#xD;&#xA;                string strPNameAndPValue = string.Empty;&#xD;&#xA;                string strDNameAndDValue = string.Empty;&#xD;&#xA;                string[] NameValuePairTemp;&#xD;&#xA;                Cookie cookTemp = new Cookie();&#xD;&#xA;                for (int j = 0; j < intEachCookPartsCount; j++)&#xD;&#xA;                {&#xD;&#xA;                    if (j == 0)&#xD;&#xA;                    {&#xD;&#xA;                        strCNameAndCValue = strEachCookParts[j];&#xD;&#xA;                        if (strCNameAndCValue != string.Empty)&#xD;&#xA;                        {&#xD;&#xA;                            int firstEqual = strCNameAndCValue.IndexOf(""="");&#xD;&#xA;                            string firstName = strCNameAndCValue.Substring(0, firstEqual);&#xD;&#xA;                            string allValue = strCNameAndCValue.Substring(firstEqual + 1, strCNameAndCValue.Length - (firstEqual + 1));&#xD;&#xA;                            cookTemp.Name = firstName;&#xD;&#xA;                            cookTemp.Value = allValue;&#xD;&#xA;                        }&#xD;&#xA;                        continue;&#xD;&#xA;                    }&#xD;&#xA;                    if (strEachCookParts[j].IndexOf(""path"", StringComparison.OrdinalIgnoreCase) >= 0)&#xD;&#xA;                    {&#xD;&#xA;                        strPNameAndPValue = strEachCookParts[j];&#xD;&#xA;                        if (strPNameAndPValue != string.Empty)&#xD;&#xA;                        {&#xD;&#xA;                            NameValuePairTemp = strPNameAndPValue.Split('=');&#xD;&#xA;                            if (NameValuePairTemp[1] != string.Empty)&#xD;&#xA;                            {&#xD;&#xA;                                cookTemp.Path = NameValuePairTemp[1];&#xD;&#xA;                            }&#xD;&#xA;                            else&#xD;&#xA;                            {&#xD;&#xA;                                cookTemp.Path = ""/"";&#xD;&#xA;                            }&#xD;&#xA;                        }&#xD;&#xA;                        continue;&#xD;&#xA;                    }&#xD;&#xA;                   &#xD;&#xA;                    if (strEachCookParts[j].IndexOf(""domain"", StringComparison.OrdinalIgnoreCase) >= 0)&#xD;&#xA;                    {&#xD;&#xA;                        strPNameAndPValue = strEachCookParts[j];&#xD;&#xA;                        if (strPNameAndPValue != string.Empty)&#xD;&#xA;                        {&#xD;&#xA;                            NameValuePairTemp = strPNameAndPValue.Split('=');&#xD;&#xA;                            if (NameValuePairTemp[1] != string.Empty)&#xD;&#xA;                            {&#xD;&#xA;                                cookTemp.Domain = NameValuePairTemp[1];&#xD;&#xA;                            }&#xD;&#xA;                            else&#xD;&#xA;                            {&#xD;&#xA;                                cookTemp.Domain = strHost;&#xD;&#xA;                            }&#xD;&#xA;                        }&#xD;&#xA;                        continue;&#xD;&#xA;                    }                    &#xD;&#xA;                }&#xD;&#xA;                if (cookTemp.Path == string.Empty)&#xD;&#xA;                {&#xD;&#xA;                    cookTemp.Path = ""/"";&#xD;&#xA;                }&#xD;&#xA;                if (cookTemp.Domain == string.Empty)&#xD;&#xA;                {&#xD;&#xA;                    cookTemp.Domain = strHost;&#xD;&#xA;                }&#xD;&#xA;                cc.Add(cookTemp);&#xD;&#xA;            }&#xD;&#xA;            return cc;&#xD;&#xA;        }"
1821059283717053505,115,5,"    public class MyFirebaseMessagingService extends FirebaseMessagingService {&#xD;&#xA;    &#xD;&#xA;        private static final String TAG = MyFirebaseMessagingService.class.getSimpleName();&#xD;&#xA;    &#xD;&#xA;        private NotificationUtils notificationUtils;&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void onMessageReceived(RemoteMessage remoteMessage) {&#xD;&#xA;            Log.e(TAG, ""From: "" + remoteMessage.getFrom());&#xD;&#xA;    &#xD;&#xA;            if (remoteMessage == null)&#xD;&#xA;                return;&#xD;&#xA;    &#xD;&#xA;            // Check if message contains a notification payload.&#xD;&#xA;            if (remoteMessage.getNotification() != null) {&#xD;&#xA;                Log.e(TAG, ""Notification Body: "" + remoteMessage.getNotification().getBody());&#xD;&#xA;                handleNotification(remoteMessage.getNotification().getBody());&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            // Check if message contains a data payload.&#xD;&#xA;            if (remoteMessage.getData().size() > 0) {&#xD;&#xA;                Log.e(TAG, ""Data Payload: "" + remoteMessage.getData().toString());&#xD;&#xA;    &#xD;&#xA;                try {&#xD;&#xA;                    JSONObject json = new JSONObject(remoteMessage.getData().toString());&#xD;&#xA;                    handleDataMessage(json);&#xD;&#xA;                } catch (Exception e) {&#xD;&#xA;                    Log.e(TAG, ""Exception: "" + e.getMessage());&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private void handleNotification(String message) {&#xD;&#xA;            if (!NotificationUtils.isAppIsInBackground(getApplicationContext())) {&#xD;&#xA;                // app is in foreground, broadcast the push message&#xD;&#xA;                Intent pushNotification = new Intent(Config.PUSH_NOTIFICATION);&#xD;&#xA;                pushNotification.putExtra(""message"", message);&#xD;&#xA;                LocalBroadcastManager.getInstance(this).sendBroadcast(pushNotification);&#xD;&#xA;    &#xD;&#xA;                // play notification sound&#xD;&#xA;                NotificationUtils notificationUtils = new NotificationUtils(getApplicationContext());&#xD;&#xA;                notificationUtils.playNotificationSound();&#xD;&#xA;            }else{&#xD;&#xA;                // If the app is in background, firebase itself handles the notification&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private void handleDataMessage(JSONObject json) {&#xD;&#xA;            Log.e(TAG, ""push json: "" + json.toString());&#xD;&#xA;    &#xD;&#xA;            try {&#xD;&#xA;                JSONObject data = json.getJSONObject(""data"");&#xD;&#xA;    &#xD;&#xA;                String title = data.getString(""title"");&#xD;&#xA;                String message = data.getString(""message"");&#xD;&#xA;                boolean isBackground = data.getBoolean(""is_background"");&#xD;&#xA;                String imageUrl = data.getString(""image"");&#xD;&#xA;                String timestamp = data.getString(""timestamp"");&#xD;&#xA;                JSONObject payload = data.getJSONObject(""payload"");&#xD;&#xA;    &#xD;&#xA;                Log.e(TAG, ""title: "" + title);&#xD;&#xA;                Log.e(TAG, ""message: "" + message);&#xD;&#xA;                Log.e(TAG, ""isBackground: "" + isBackground);&#xD;&#xA;                Log.e(TAG, ""payload: "" + payload.toString());&#xD;&#xA;                Log.e(TAG, ""imageUrl: "" + imageUrl);&#xD;&#xA;                Log.e(TAG, ""timestamp: "" + timestamp);&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;                if (!NotificationUtils.isAppIsInBackground(getApplicationContext())) {&#xD;&#xA;                    // app is in foreground, broadcast the push message&#xD;&#xA;                    Intent pushNotification = new Intent(Config.PUSH_NOTIFICATION);&#xD;&#xA;                    pushNotification.putExtra(""message"", message);&#xD;&#xA;                    LocalBroadcastManager.getInstance(this).sendBroadcast(pushNotification);&#xD;&#xA;    &#xD;&#xA;                    // play notification sound&#xD;&#xA;                    NotificationUtils notificationUtils = new NotificationUtils(getApplicationContext());&#xD;&#xA;                    notificationUtils.playNotificationSound();&#xD;&#xA;                } else {&#xD;&#xA;                    // app is in background, show the notification in notification tray&#xD;&#xA;                    Intent resultIntent = new Intent(getApplicationContext(), MainActivity.class);&#xD;&#xA;                    resultIntent.putExtra(""message"", message);&#xD;&#xA;    &#xD;&#xA;                    // check for image attachment&#xD;&#xA;                    if (TextUtils.isEmpty(imageUrl)) {&#xD;&#xA;                        showNotificationMessage(getApplicationContext(), title, message, timestamp, resultIntent);&#xD;&#xA;                    } else {&#xD;&#xA;                        // image is present, show notification with image&#xD;&#xA;                        showNotificationMessageWithBigImage(getApplicationContext(), title, message, timestamp, resultIntent, imageUrl);&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;            } catch (JSONException e) {&#xD;&#xA;                Log.e(TAG, ""Json Exception: "" + e.getMessage());&#xD;&#xA;            } catch (Exception e) {&#xD;&#xA;                Log.e(TAG, ""Exception: "" + e.getMessage());&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /**&#xD;&#xA;         * Showing notification with text only&#xD;&#xA;         */&#xD;&#xA;        private void showNotificationMessage(Context context, String title, String message, String timeStamp, Intent intent) {&#xD;&#xA;            notificationUtils = new NotificationUtils(context);&#xD;&#xA;            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);&#xD;&#xA;            notificationUtils.showNotificationMessage(title, message, timeStamp, intent);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /**&#xD;&#xA;         * Showing notification with text and image&#xD;&#xA;         */&#xD;&#xA;        private void showNotificationMessageWithBigImage(Context context, String title, String message, String timeStamp, Intent intent, String imageUrl) {&#xD;&#xA;            notificationUtils = new NotificationUtils(context);&#xD;&#xA;            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);&#xD;&#xA;            notificationUtils.showNotificationMessage(title, message, timeStamp, intent, imageUrl);&#xD;&#xA;        }&#xD;&#xA;    }"
-3409418973436338563,116,5,"    - (BOOL)peoplePickerNavigationController:(ABPeoplePickerNavigationController *)peoplePicker shouldContinueAfterSelectingPerson:(ABRecordRef)person&#xD;&#xA;    {&#xD;&#xA;        ABAddressBookRef addressBook = ABAddressBookCreate();&#xD;&#xA;        &#xD;&#xA;        int i;&#xD;&#xA;        NSString *strName = @"""";&#xD;&#xA;        NSString* company = @"""";&#xD;&#xA;        NSString *address = @"""";&#xD;&#xA;        NSString *suburb = @"""";&#xD;&#xA;        NSString *postalcode = @"""";&#xD;&#xA;        NSString *state = @"""";&#xD;&#xA;        NSString *country = @"""";&#xD;&#xA;        NSString *mobile = @"""";&#xD;&#xA;        NSString *phone = @"""";&#xD;&#xA;        NSString *emailid = @"""";&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;    	strName = (NSString *)ABRecordCopyCompositeName((ABRecordRef) person);&#xD;&#xA;    	CFStringRef name = ABRecordCopyCompositeName((ABRecordRef) person);&#xD;&#xA;        company  = (NSString *)ABRecordCopyValue((ABRecordRef) person, kABPersonOrganizationProperty);&#xD;&#xA;        &#xD;&#xA;    	NSArray*  allPeople = (NSArray *)ABAddressBookCopyPeopleWithName(addressBook,name);&#xD;&#xA;        CFRelease(name);&#xD;&#xA;        &#xD;&#xA;    	for (i = 0; i < [allPeople count]; i++)&#xD;&#xA;        {&#xD;&#xA;    		ABRecordRef record = [allPeople objectAtIndex:i];&#xD;&#xA;    		&#xD;&#xA;    		ABMutableMultiValueRef multiValue = ABRecordCopyValue(record, kABPersonAddressProperty);&#xD;&#xA;    		for(CFIndex i=0; i<ABMultiValueGetCount(multiValue); i++)&#xD;&#xA;    		{&#xD;&#xA;    			NSString* HomeLabel = (NSString*)ABMultiValueCopyLabelAtIndex(multiValue, i);&#xD;&#xA;    			if([HomeLabel isEqualToString:@""_$!<Home>!$_""])&#xD;&#xA;    			{&#xD;&#xA;    				CFDictionaryRef dict = ABMultiValueCopyValueAtIndex(multiValue, i);&#xD;&#xA;    				address = [NSString stringWithFormat:@""%@"", CFDictionaryGetValue(dict, kABPersonAddressStreetKey)];&#xD;&#xA;                    suburb = [NSString stringWithFormat:@""%@"", CFDictionaryGetValue(dict, kABPersonAddressCityKey)];&#xD;&#xA;                    postalcode = [NSString stringWithFormat:@""%@"", CFDictionaryGetValue(dict, kABPersonAddressZIPKey)];&#xD;&#xA;                    state = [NSString stringWithFormat:@""%@"", CFDictionaryGetValue(dict, kABPersonAddressStateKey)];&#xD;&#xA;                    country = [NSString stringWithFormat:@""%@"", CFDictionaryGetValue(dict, kABPersonAddressCountryKey)];&#xD;&#xA;                    &#xD;&#xA;                    CFRelease(dict);&#xD;&#xA;    			}&#xD;&#xA;                CFRelease(HomeLabel);&#xD;&#xA;    		}&#xD;&#xA;            CFRelease(multiValue);&#xD;&#xA;    	}&#xD;&#xA;        CFRelease(allPeople);&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;    	ABMultiValueRef phones =(NSString*)ABRecordCopyValue(person, kABPersonPhoneProperty);&#xD;&#xA;    	NSString* mobileLabel = nil;&#xD;&#xA;    	for(CFIndex i = 0; i < ABMultiValueGetCount(phones); i++)&#xD;&#xA;        {&#xD;&#xA;    		mobileLabel = (NSString*)ABMultiValueCopyLabelAtIndex(phones, i);&#xD;&#xA;    		if([mobileLabel isEqualToString:(NSString *)kABPersonPhoneMobileLabel])&#xD;&#xA;    		{&#xD;&#xA;    			mobile = (NSString*)ABMultiValueCopyValueAtIndex(phones, i);&#xD;&#xA;    			NSLog(@""phone   %@"",mobile);&#xD;&#xA;    		}&#xD;&#xA;    		else if ([mobileLabel isEqualToString:(NSString*)kABPersonPhoneIPhoneLabel])&#xD;&#xA;    		{&#xD;&#xA;    			phone = (NSString*)ABMultiValueCopyValueAtIndex(phones, i);&#xD;&#xA;    			NSLog(@""phone   %@"",phone);&#xD;&#xA;    			&#xD;&#xA;                CFRelease(mobileLabel);&#xD;&#xA;    			break ;&#xD;&#xA;    		}&#xD;&#xA;            CFRelease(mobileLabel);&#xD;&#xA;            &#xD;&#xA;    	}&#xD;&#xA;    	CFStringRef value, label;&#xD;&#xA;        ABMutableMultiValueRef multi = ABRecordCopyValue(person, kABPersonEmailProperty);&#xD;&#xA;        CFIndex count = ABMultiValueGetCount(multi);&#xD;&#xA;        if (count == 1)&#xD;&#xA;        {&#xD;&#xA;            value = ABMultiValueCopyValueAtIndex(multi, 0);&#xD;&#xA;            emailid = (NSString*) value;&#xD;&#xA;            NSLog(@""self.emailID   %@"",emailid);&#xD;&#xA;            CFRelease(value);&#xD;&#xA;        }&#xD;&#xA;        else&#xD;&#xA;        {&#xD;&#xA;            for (CFIndex i = 0; i < count; i++)&#xD;&#xA;            {&#xD;&#xA;                label = ABMultiValueCopyLabelAtIndex(multi, i);&#xD;&#xA;                value = ABMultiValueCopyValueAtIndex(multi, i);&#xD;&#xA;                &#xD;&#xA;                // check for Work e-mail label&#xD;&#xA;                if (CFStringCompare(label, kABWorkLabel, 0) == 0)&#xD;&#xA;                {&#xD;&#xA;                    emailid = (NSString*) value;&#xD;&#xA;                    NSLog(@""self.emailID   %@"",emailid);&#xD;&#xA;                }&#xD;&#xA;                else if(CFStringCompare(label, kABHomeLabel, 0) == 0)&#xD;&#xA;                {&#xD;&#xA;                    emailid = (NSString*) value;&#xD;&#xA;                    NSLog(@""self.emailID   %@"",emailid);&#xD;&#xA;                }&#xD;&#xA;                &#xD;&#xA;                CFRelease(label);&#xD;&#xA;                CFRelease(value);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        CFRelease(multi);&#xD;&#xA;        &#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;    	CFRelease(phones);&#xD;&#xA;    	CFRelease(addressBook);&#xD;&#xA;    	[self dismissModalViewControllerAnimated:YES];&#xD;&#xA;    	&#xD;&#xA;    	return NO;&#xD;&#xA;        &#xD;&#xA;    }"
387558984317684084,116,5,"	{&#xD;&#xA;		""Session_test"": [{&#xD;&#xA;			""datas_lines"": [{&#xD;&#xA;					""datas_line"": [],&#xD;&#xA;					""log_time"": ""No data""&#xD;&#xA;				},&#xD;&#xA;				{&#xD;&#xA;					""datas_line"": [],&#xD;&#xA;					""log_time"": ""No data""&#xD;&#xA;				},&#xD;&#xA;				{&#xD;&#xA;					""datas_line"": [],&#xD;&#xA;					""log_time"": ""No data""&#xD;&#xA;				},&#xD;&#xA;				{&#xD;&#xA;					""datas_line"": [&#xD;&#xA;						""157"",&#xD;&#xA;						""158"",&#xD;&#xA;						""157"",&#xD;&#xA;						""157"",&#xD;&#xA;						""157"",&#xD;&#xA;						""158"",&#xD;&#xA;						""159"",&#xD;&#xA;						""161"",&#xD;&#xA;						""160"",&#xD;&#xA;						""160"",&#xD;&#xA;						""159"",&#xD;&#xA;						""158"",&#xD;&#xA;						""159"",&#xD;&#xA;						""160"",&#xD;&#xA;						""160"",&#xD;&#xA;						""160"",&#xD;&#xA;						""160"",&#xD;&#xA;						""161"",&#xD;&#xA;						""160"",&#xD;&#xA;						""161"",&#xD;&#xA;						""159"",&#xD;&#xA;						""161"",&#xD;&#xA;						""161"",&#xD;&#xA;						""158"",&#xD;&#xA;						""161"",&#xD;&#xA;						""159"",&#xD;&#xA;						""160"",&#xD;&#xA;						""157""&#xD;&#xA;					],&#xD;&#xA;					""log_time"": ""5/18/2017 4:32:14 PM""&#xD;&#xA;				},&#xD;&#xA;				{&#xD;&#xA;					""datas_line"": [&#xD;&#xA;						""154"",&#xD;&#xA;						""156"",&#xD;&#xA;						""155"",&#xD;&#xA;						""155"",&#xD;&#xA;						""155"",&#xD;&#xA;						""156"",&#xD;&#xA;						""158"",&#xD;&#xA;						""159"",&#xD;&#xA;						""158"",&#xD;&#xA;						""157"",&#xD;&#xA;						""157"",&#xD;&#xA;						""156"",&#xD;&#xA;						""157"",&#xD;&#xA;						""158"",&#xD;&#xA;						""159"",&#xD;&#xA;						""158"",&#xD;&#xA;						""158"",&#xD;&#xA;						""159"",&#xD;&#xA;						""159"",&#xD;&#xA;						""159"",&#xD;&#xA;						""158"",&#xD;&#xA;						""159"",&#xD;&#xA;						""159"",&#xD;&#xA;						""156"",&#xD;&#xA;						""159"",&#xD;&#xA;						""157"",&#xD;&#xA;						""158"",&#xD;&#xA;						""156""&#xD;&#xA;					],&#xD;&#xA;					""log_time"": ""5/18/2017 4:34:14 PM""&#xD;&#xA;				},&#xD;&#xA;				{&#xD;&#xA;					""datas_line"": [&#xD;&#xA;						""154"",&#xD;&#xA;						""156"",&#xD;&#xA;						""155"",&#xD;&#xA;						""155"",&#xD;&#xA;						""155"",&#xD;&#xA;						""156"",&#xD;&#xA;						""158"",&#xD;&#xA;						""159"",&#xD;&#xA;						""158"",&#xD;&#xA;						""157"",&#xD;&#xA;						""157"",&#xD;&#xA;						""156"",&#xD;&#xA;						""157"",&#xD;&#xA;						""158"",&#xD;&#xA;						""159"",&#xD;&#xA;						""158"",&#xD;&#xA;						""158"",&#xD;&#xA;						""159"",&#xD;&#xA;						""159"",&#xD;&#xA;						""159"",&#xD;&#xA;						""158"",&#xD;&#xA;						""159"",&#xD;&#xA;						""159"",&#xD;&#xA;						""156"",&#xD;&#xA;						""159"",&#xD;&#xA;						""157"",&#xD;&#xA;						""158"",&#xD;&#xA;						""156""&#xD;&#xA;					],&#xD;&#xA;					""log_time"": ""5/18/2017 4:34:14 PM""&#xD;&#xA;				}&#xD;&#xA;			]&#xD;&#xA;		}]&#xD;&#xA;	} "
-2733805713692523092,118,5,"    <?php&#xD;&#xA;     &#xD;&#xA;    class DB_Functions {&#xD;&#xA;     &#xD;&#xA;        private $conn;&#xD;&#xA;     &#xD;&#xA;        // constructor&#xD;&#xA;        function __construct() {&#xD;&#xA;            require_once 'DB_Connect.php';&#xD;&#xA;            // connecting to database&#xD;&#xA;            $db = new Db_Connect();&#xD;&#xA;            $this->conn = $db->connect();&#xD;&#xA;        }&#xD;&#xA;     &#xD;&#xA;        // destructor&#xD;&#xA;        function __destruct() {&#xD;&#xA;             &#xD;&#xA;        }&#xD;&#xA;     &#xD;&#xA;        /**&#xD;&#xA;         * Storing new user&#xD;&#xA;         * returns user details&#xD;&#xA;         */&#xD;&#xA;        public function storeUser($name, $email, $password) {&#xD;&#xA;            $uuid = uniqid('', true);&#xD;&#xA;            $hash = $this->hashSSHA($password);&#xD;&#xA;            $encrypted_password = $hash[""encrypted""]; // encrypted password&#xD;&#xA;            $salt = $hash[""salt""]; // salt&#xD;&#xA;     &#xD;&#xA;            $stmt = $this->conn->prepare(""INSERT INTO users(unique_id, name, email, encrypted_password, salt, created_at) VALUES(?, ?, ?, ?, ?, NOW())"");&#xD;&#xA;            $stmt->bind_param(""sssss"", $uuid, $name, $email, $encrypted_password, $salt);&#xD;&#xA;            $result = $stmt->execute();&#xD;&#xA;            $stmt->close();&#xD;&#xA;     &#xD;&#xA;            // check for successful store&#xD;&#xA;            if ($result) {&#xD;&#xA;                $stmt = $this->conn->prepare(""SELECT * FROM users WHERE email = ?"");&#xD;&#xA;                $stmt->bind_param(""s"", $email);&#xD;&#xA;                $stmt->execute();&#xD;&#xA;                $user = $stmt->get_result()->fetch_assoc();&#xD;&#xA;                $stmt->close();&#xD;&#xA;     &#xD;&#xA;                return $user;&#xD;&#xA;            } else {&#xD;&#xA;                return false;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;     &#xD;&#xA;        /**&#xD;&#xA;         * Get user by email and password&#xD;&#xA;         */&#xD;&#xA;        public function getUserByEmailAndPassword($email, $password) {&#xD;&#xA;     &#xD;&#xA;            $stmt = $this->conn->prepare(""SELECT * FROM users WHERE email = ?"");&#xD;&#xA;     &#xD;&#xA;            $stmt->bind_param(""s"", $email);&#xD;&#xA;     &#xD;&#xA;            if ($stmt->execute()) {&#xD;&#xA;                $user = $stmt->get_result()->fetch_assoc();&#xD;&#xA;                $stmt->close();&#xD;&#xA;                return $user;&#xD;&#xA;            } else {&#xD;&#xA;                return NULL;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;     &#xD;&#xA;        /**&#xD;&#xA;         * Check user is existed or not&#xD;&#xA;         */&#xD;&#xA;        public function isUserExisted($email) {&#xD;&#xA;            $stmt = $this->conn->prepare(""SELECT email from users WHERE email = ?"");&#xD;&#xA;     &#xD;&#xA;            $stmt->bind_param(""s"", $email);&#xD;&#xA;     &#xD;&#xA;            $stmt->execute();&#xD;&#xA;     &#xD;&#xA;            $stmt->store_result();&#xD;&#xA;     &#xD;&#xA;            if ($stmt->num_rows > 0) {&#xD;&#xA;                // user existed &#xD;&#xA;                $stmt->close();&#xD;&#xA;                return true;&#xD;&#xA;            } else {&#xD;&#xA;                // user not existed&#xD;&#xA;                $stmt->close();&#xD;&#xA;                return false;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;     &#xD;&#xA;        /**&#xD;&#xA;         * Encrypting password&#xD;&#xA;         * @param password&#xD;&#xA;         * returns salt and encrypted password&#xD;&#xA;         */&#xD;&#xA;        public function hashSSHA($password) {&#xD;&#xA;     &#xD;&#xA;            $salt = sha1(rand());&#xD;&#xA;            $salt = substr($salt, 0, 10);&#xD;&#xA;            $encrypted = base64_encode(sha1($password . $salt, true) . $salt);&#xD;&#xA;            $hash = array(""salt"" => $salt, ""encrypted"" => $encrypted);&#xD;&#xA;            return $hash;&#xD;&#xA;        }&#xD;&#xA;     &#xD;&#xA;        /**&#xD;&#xA;         * Decrypting password&#xD;&#xA;         * @param salt, password&#xD;&#xA;         * returns hash string&#xD;&#xA;         */&#xD;&#xA;        public function checkhashSSHA($salt, $password) {&#xD;&#xA;     &#xD;&#xA;            $hash = base64_encode(sha1($password . $salt, true) . $salt);&#xD;&#xA;     &#xD;&#xA;            return $hash;&#xD;&#xA;        }&#xD;&#xA;     &#xD;&#xA;    }&#xD;&#xA;     &#xD;&#xA;    ?>"
-3472801667625872321,121,5,"    #! /usr/bin/env python&#xD;&#xA;    # -*- coding: iso-8859-1 -*-&#xD;&#xA;    # vi:ts=4:et&#xD;&#xA;    # $Id: retriever-multi.py,v 1.29 2005/07/28 11:04:13 mfx Exp $&#xD;&#xA;    &#xD;&#xA;    #&#xD;&#xA;    # Usage: python retriever-multi.py <file with URLs to fetch> [<# of&#xD;&#xA;    #          concurrent connections>]&#xD;&#xA;    #&#xD;&#xA;    &#xD;&#xA;    import sys&#xD;&#xA;    import pycurl&#xD;&#xA;    &#xD;&#xA;    # We should ignore SIGPIPE when using pycurl.NOSIGNAL - see&#xD;&#xA;    # the libcurl tutorial for more info.&#xD;&#xA;    try:&#xD;&#xA;        import signal&#xD;&#xA;        from signal import SIGPIPE, SIG_IGN&#xD;&#xA;        signal.signal(signal.SIGPIPE, signal.SIG_IGN)&#xD;&#xA;    except ImportError:&#xD;&#xA;        pass&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    # Get args&#xD;&#xA;    num_conn = 10&#xD;&#xA;    try:&#xD;&#xA;        if sys.argv[1] == ""-"":&#xD;&#xA;            urls = sys.stdin.readlines()&#xD;&#xA;        else:&#xD;&#xA;            urls = open(sys.argv[1]).readlines()&#xD;&#xA;        if len(sys.argv) >= 3:&#xD;&#xA;            num_conn = int(sys.argv[2])&#xD;&#xA;    except:&#xD;&#xA;        print ""Usage: %s <file with URLs to fetch> [<# of concurrent connections>]"" % sys.argv[0]&#xD;&#xA;        raise SystemExit&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    # Make a queue with (url, filename) tuples&#xD;&#xA;    queue = []&#xD;&#xA;    for url in urls:&#xD;&#xA;        url = url.strip()&#xD;&#xA;        if not url or url[0] == ""#"":&#xD;&#xA;            continue&#xD;&#xA;        filename = ""doc_%03d.dat"" % (len(queue) + 1)&#xD;&#xA;        queue.append((url, filename))&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    # Check args&#xD;&#xA;    assert queue, ""no URLs given""&#xD;&#xA;    num_urls = len(queue)&#xD;&#xA;    num_conn = min(num_conn, num_urls)&#xD;&#xA;    assert 1 <= num_conn <= 10000, ""invalid number of concurrent connections""&#xD;&#xA;    print ""PycURL %s (compiled against 0x%x)"" % (pycurl.version, pycurl.COMPILE_LIBCURL_VERSION_NUM)&#xD;&#xA;    print ""----- Getting"", num_urls, ""URLs using"", num_conn, ""connections -----""&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    # Pre-allocate a list of curl objects&#xD;&#xA;    m = pycurl.CurlMulti()&#xD;&#xA;    m.handles = []&#xD;&#xA;    for i in range(num_conn):&#xD;&#xA;        c = pycurl.Curl()&#xD;&#xA;        c.fp = None&#xD;&#xA;        c.setopt(pycurl.FOLLOWLOCATION, 1)&#xD;&#xA;        c.setopt(pycurl.MAXREDIRS, 5)&#xD;&#xA;        c.setopt(pycurl.CONNECTTIMEOUT, 30)&#xD;&#xA;        c.setopt(pycurl.TIMEOUT, 300)&#xD;&#xA;        c.setopt(pycurl.NOSIGNAL, 1)&#xD;&#xA;        m.handles.append(c)&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    # Main loop&#xD;&#xA;    freelist = m.handles[:]&#xD;&#xA;    num_processed = 0&#xD;&#xA;    while num_processed < num_urls:&#xD;&#xA;        # If there is an url to process and a free curl object, add to multi stack&#xD;&#xA;        while queue and freelist:&#xD;&#xA;            url, filename = queue.pop(0)&#xD;&#xA;            c = freelist.pop()&#xD;&#xA;            c.fp = open(filename, ""wb"")&#xD;&#xA;            c.setopt(pycurl.URL, url)&#xD;&#xA;            c.setopt(pycurl.WRITEDATA, c.fp)&#xD;&#xA;            m.add_handle(c)&#xD;&#xA;            # store some info&#xD;&#xA;            c.filename = filename&#xD;&#xA;            c.url = url&#xD;&#xA;        # Run the internal curl state machine for the multi stack&#xD;&#xA;        while 1:&#xD;&#xA;            ret, num_handles = m.perform()&#xD;&#xA;            if ret != pycurl.E_CALL_MULTI_PERFORM:&#xD;&#xA;                break&#xD;&#xA;        # Check for curl objects which have terminated, and add them to the freelist&#xD;&#xA;        while 1:&#xD;&#xA;            num_q, ok_list, err_list = m.info_read()&#xD;&#xA;            for c in ok_list:&#xD;&#xA;                c.fp.close()&#xD;&#xA;                c.fp = None&#xD;&#xA;                m.remove_handle(c)&#xD;&#xA;                print ""Success:"", c.filename, c.url, c.getinfo(pycurl.EFFECTIVE_URL)&#xD;&#xA;                freelist.append(c)&#xD;&#xA;            for c, errno, errmsg in err_list:&#xD;&#xA;                c.fp.close()&#xD;&#xA;                c.fp = None&#xD;&#xA;                m.remove_handle(c)&#xD;&#xA;                print ""Failed: "", c.filename, c.url, errno, errmsg&#xD;&#xA;                freelist.append(c)&#xD;&#xA;            num_processed = num_processed + len(ok_list) + len(err_list)&#xD;&#xA;            if num_q == 0:&#xD;&#xA;                break&#xD;&#xA;        # Currently no more I/O is pending, could do something in the meantime&#xD;&#xA;        # (display a progress bar, etc.).&#xD;&#xA;        # We just call select() to sleep until some more data is available.&#xD;&#xA;        m.select(1.0)&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    # Cleanup&#xD;&#xA;    for c in m.handles:&#xD;&#xA;        if c.fp is not None:&#xD;&#xA;            c.fp.close()&#xD;&#xA;            c.fp = None&#xD;&#xA;        c.close()&#xD;&#xA;    m.close()"
-7482135589399341495,121,5,"    /**&#xD;&#xA;     * Get a file path from a Uri. This will get the the path for Storage Access&#xD;&#xA;     * Framework Documents, as well as the _data field for the MediaStore and&#xD;&#xA;     * other file-based ContentProviders.&#xD;&#xA;     *&#xD;&#xA;     * @param context The context.&#xD;&#xA;     * @param uri The Uri to query.&#xD;&#xA;     * @author paulburke&#xD;&#xA;     */&#xD;&#xA;    public static String getPath(final Context context, final Uri uri) {&#xD;&#xA;        final boolean isKitKat = Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT;&#xD;&#xA;        // DocumentProvider&#xD;&#xA;        if (isKitKat && DocumentsContract.isDocumentUri(context, uri)) {&#xD;&#xA;            // ExternalStorageProvider&#xD;&#xA;            if (isExternalStorageDocument(uri)) {&#xD;&#xA;                final String docId = DocumentsContract.getDocumentId(uri);&#xD;&#xA;                final String[] split = docId.split("":"");&#xD;&#xA;                final String type = split[0];&#xD;&#xA;                if (""primary"".equalsIgnoreCase(type)) {&#xD;&#xA;                    return Environment.getExternalStorageDirectory() + ""/"" + split[1];&#xD;&#xA;                }&#xD;&#xA;                // TODO handle non-primary volumes&#xD;&#xA;            }&#xD;&#xA;            // DownloadsProvider&#xD;&#xA;            else if (isDownloadsDocument(uri)) {&#xD;&#xA;                final String id = DocumentsContract.getDocumentId(uri);&#xD;&#xA;                final Uri contentUri = ContentUris.withAppendedId(&#xD;&#xA;                        Uri.parse(""content://downloads/public_downloads""), Long.valueOf(id));&#xD;&#xA;                return getDataColumn(context, contentUri, null, null);&#xD;&#xA;            }&#xD;&#xA;            // MediaProvider&#xD;&#xA;            else if (isMediaDocument(uri)) {&#xD;&#xA;                final String docId = DocumentsContract.getDocumentId(uri);&#xD;&#xA;                final String[] split = docId.split("":"");&#xD;&#xA;                final String type = split[0];&#xD;&#xA;                Uri contentUri = null;&#xD;&#xA;                if (""image"".equals(type)) {&#xD;&#xA;                    contentUri = MediaStore.Images.Media.EXTERNAL_CONTENT_URI;&#xD;&#xA;                } else if (""video"".equals(type)) {&#xD;&#xA;                    contentUri = MediaStore.Video.Media.EXTERNAL_CONTENT_URI;&#xD;&#xA;                } else if (""audio"".equals(type)) {&#xD;&#xA;                    contentUri = MediaStore.Audio.Media.EXTERNAL_CONTENT_URI;&#xD;&#xA;                }&#xD;&#xA;                final String selection = ""_id=?"";&#xD;&#xA;                final String[] selectionArgs = new String[] {&#xD;&#xA;                        split[1]&#xD;&#xA;                };&#xD;&#xA;                return getDataColumn(context, contentUri, selection, selectionArgs);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        // MediaStore (and general)&#xD;&#xA;        else if (""content"".equalsIgnoreCase(uri.getScheme())) {&#xD;&#xA;            // Return the remote address&#xD;&#xA;            if (isGooglePhotosUri(uri))&#xD;&#xA;                return uri.getLastPathSegment();&#xD;&#xA;            return getDataColumn(context, uri, null, null);&#xD;&#xA;        }&#xD;&#xA;        // File&#xD;&#xA;        else if (""file"".equalsIgnoreCase(uri.getScheme())) {&#xD;&#xA;            return uri.getPath();&#xD;&#xA;        }&#xD;&#xA;        return null;&#xD;&#xA;    }&#xD;&#xA;    /**&#xD;&#xA;     * Get the value of the data column for this Uri. This is useful for&#xD;&#xA;     * MediaStore Uris, and other file-based ContentProviders.&#xD;&#xA;     *&#xD;&#xA;     * @param context The context.&#xD;&#xA;     * @param uri The Uri to query.&#xD;&#xA;     * @param selection (Optional) Filter used in the query.&#xD;&#xA;     * @param selectionArgs (Optional) Selection arguments used in the query.&#xD;&#xA;     * @return The value of the _data column, which is typically a file path.&#xD;&#xA;     */&#xD;&#xA;    public static String getDataColumn(Context context, Uri uri, String selection,&#xD;&#xA;            String[] selectionArgs) {&#xD;&#xA;        Cursor cursor = null;&#xD;&#xA;        final String column = ""_data"";&#xD;&#xA;        final String[] projection = {&#xD;&#xA;                column&#xD;&#xA;        };&#xD;&#xA;        try {&#xD;&#xA;            cursor = context.getContentResolver().query(uri, projection, selection, selectionArgs,&#xD;&#xA;                    null);&#xD;&#xA;            if (cursor != null && cursor.moveToFirst()) {&#xD;&#xA;                final int index = cursor.getColumnIndexOrThrow(column);&#xD;&#xA;                return cursor.getString(index);&#xD;&#xA;            }&#xD;&#xA;        } finally {&#xD;&#xA;            if (cursor != null)&#xD;&#xA;                cursor.close();&#xD;&#xA;        }&#xD;&#xA;        return null;&#xD;&#xA;    }&#xD;&#xA;    /**&#xD;&#xA;     * @param uri The Uri to check.&#xD;&#xA;     * @return Whether the Uri authority is ExternalStorageProvider.&#xD;&#xA;     */&#xD;&#xA;    public static boolean isExternalStorageDocument(Uri uri) {&#xD;&#xA;        return ""com.android.externalstorage.documents"".equals(uri.getAuthority());&#xD;&#xA;    }&#xD;&#xA;    /**&#xD;&#xA;     * @param uri The Uri to check.&#xD;&#xA;     * @return Whether the Uri authority is DownloadsProvider.&#xD;&#xA;     */&#xD;&#xA;    public static boolean isDownloadsDocument(Uri uri) {&#xD;&#xA;        return ""com.android.providers.downloads.documents"".equals(uri.getAuthority());&#xD;&#xA;    }&#xD;&#xA;    /**&#xD;&#xA;     * @param uri The Uri to check.&#xD;&#xA;     * @return Whether the Uri authority is MediaProvider.&#xD;&#xA;     */&#xD;&#xA;    public static boolean isMediaDocument(Uri uri) {&#xD;&#xA;        return ""com.android.providers.media.documents"".equals(uri.getAuthority());&#xD;&#xA;    }&#xD;&#xA;    /**&#xD;&#xA;     * @param uri The Uri to check.&#xD;&#xA;     * @return Whether the Uri authority is Google Photos.&#xD;&#xA;     */&#xD;&#xA;    public static boolean isGooglePhotosUri(Uri uri) {&#xD;&#xA;        return ""com.google.android.apps.photos.content"".equals(uri.getAuthority());&#xD;&#xA;    }"
2233774913841160295,122,5,"    import java.awt.*;&#xD;&#xA;    import java.awt.event.*;							// #1&#xD;&#xA;    import javax.swing.*;   &#xD;&#xA;    &#xD;&#xA;    /******************************************************************************&#xD;&#xA;     * &#xD;&#xA;     * KeyListenerDemo.java&#xD;&#xA;     * Demonstrates getting keyboard input using the KeyListener interface.&#xD;&#xA;     * &#xD;&#xA;     * Program 18: Extend this program by adding a few more keystroke commands:&#xD;&#xA;     *		z     (VK_Z) 	- Cause the ball to jump to a random new location.&#xD;&#xA;     *		s     (VK_S) 	- Make the ball smaller - multiply its diameter 1/2.&#xD;&#xA;     *		b     (VK_B)	- Make the ball bigger - multiply its diameter by 2.&#xD;&#xA;     *		c     (VK_C) 	- Change the color (in any way you'd like).&#xD;&#xA;     *&#xD;&#xA;     *	In addition, modify the program to ensure the following:&#xD;&#xA;     *	- The ball goes all the way to the edge of the screen but stays&#xD;&#xA;     *			completely on the screen. &#xD;&#xA;     *	- If a doubled diameter doesn't fit, make it as large as possible.&#xD;&#xA;     *  - Be sure the ball never completely disappears.&#xD;&#xA;     * &#xD;&#xA;     *****************************************************************************/&#xD;&#xA;    public class KeyListenerDemo extends JFrame&#xD;&#xA;    						implements KeyListener		// #2&#xD;&#xA;    {&#xD;&#xA;    	// Class Scope Finals&#xD;&#xA;    	private static final int SCREEN_WIDTH = 1000;&#xD;&#xA;    	private static final int SCREEN_HEIGHT = 800;&#xD;&#xA;    	private static final int START_RADIUS = 25;&#xD;&#xA;    	private static final int START_X = 100;&#xD;&#xA;    	private static final int START_Y = 100;&#xD;&#xA;    	private static final int STEP_SIZE = 10;&#xD;&#xA;    	&#xD;&#xA;    	// Class Scope Variables&#xD;&#xA;    	private static int x = START_X;				// x at center of the ball&#xD;&#xA;    	private static int y = START_Y;				// y at center of the ball&#xD;&#xA;    	private static int radius = START_RADIUS;	// radius of the ball&#xD;&#xA;    	&#xD;&#xA;    	// Methods&#xD;&#xA;    	/**&#xD;&#xA;    	 * Create the window and register this as a KeyListener&#xD;&#xA;    	 * &#xD;&#xA;    	 * @param args&#xD;&#xA;    	 */&#xD;&#xA;    	public static void main (String[] args)&#xD;&#xA;    	{&#xD;&#xA;    		// Set up the JFrame window.&#xD;&#xA;    		KeyListenerDemo gp = new KeyListenerDemo();&#xD;&#xA;    		gp.setSize(SCREEN_WIDTH, SCREEN_HEIGHT);&#xD;&#xA;    		gp.setVisible(true);&#xD;&#xA;    		&#xD;&#xA;    		gp.addKeyListener(gp);							// #3&#xD;&#xA;    		// If this class had a constructor and you moved this line into&#xD;&#xA;    		//   that constructor it could not refer to gp since that variable&#xD;&#xA;    		//   is local to this method.  Instead you would write::&#xD;&#xA;    		// addKeyListener(this);&#xD;&#xA;    	}&#xD;&#xA;    	&#xD;&#xA;    	/**&#xD;&#xA;    	 * Called when a key is first pressed&#xD;&#xA;    	 * Required for any KeyListener&#xD;&#xA;    	 * &#xD;&#xA;    	 * @param e		Contains info about the key pressed&#xD;&#xA;    	 */&#xD;&#xA;    	public void keyPressed(KeyEvent e)					// #4A&#xD;&#xA;    	{&#xD;&#xA;    		int keyCode = e.getKeyCode();&#xD;&#xA;    		if (keyCode == KeyEvent.VK_LEFT)&#xD;&#xA;    		{&#xD;&#xA;    			x = x - STEP_SIZE;&#xD;&#xA;    		}&#xD;&#xA;    		else if (keyCode == KeyEvent.VK_RIGHT)&#xD;&#xA;    		{&#xD;&#xA;    			x = x + STEP_SIZE;&#xD;&#xA;    		}&#xD;&#xA;    		else if (keyCode == KeyEvent.VK_UP)&#xD;&#xA;    		{&#xD;&#xA;    			y = y - STEP_SIZE;&#xD;&#xA;    		}&#xD;&#xA;    		else if (keyCode == KeyEvent.VK_DOWN)&#xD;&#xA;    		{&#xD;&#xA;    			y = y + STEP_SIZE;&#xD;&#xA;    		}&#xD;&#xA;    		repaint();&#xD;&#xA;    	}&#xD;&#xA;    	&#xD;&#xA;    	/**&#xD;&#xA;    	 * Called when typing of a key is completed&#xD;&#xA;    	 * Required for any KeyListener&#xD;&#xA;    	 * &#xD;&#xA;    	 * @param e		Contains info about the key typed&#xD;&#xA;    	 */&#xD;&#xA;    	public void keyTyped(KeyEvent e)					// #4B&#xD;&#xA;    	{&#xD;&#xA;    	}&#xD;&#xA;    	&#xD;&#xA;    	/**&#xD;&#xA;    	 * Called when a key is released&#xD;&#xA;    	 * Required for any KeyListener&#xD;&#xA;    	 * &#xD;&#xA;    	 * @param e		Contains info about the key released&#xD;&#xA;    	 */&#xD;&#xA;    	public void keyReleased(KeyEvent e)					// #4C&#xD;&#xA;    	{&#xD;&#xA;    	}&#xD;&#xA;    	&#xD;&#xA;    	/**&#xD;&#xA;    	 * paint - draw the figure&#xD;&#xA;    	 * &#xD;&#xA;    	 * @param g		Graphics object to draw in&#xD;&#xA;    	 */&#xD;&#xA;    	public void paint(Graphics g)&#xD;&#xA;    	{&#xD;&#xA;    		g.setColor(Color.white);&#xD;&#xA;    		g.fillRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);&#xD;&#xA;    		&#xD;&#xA;    		g.setColor(Color.blue);&#xD;&#xA;    		g.fillOval(x - radius, y - radius, 2 * radius, 2 * radius);&#xD;&#xA;    	}&#xD;&#xA;    }&#xD;&#xA;	&#xD;&#xA;	"
2010810905777141504,127,5,"			#&#xD;&#xA;			# The MySQL database server configuration file.&#xD;&#xA;			#&#xD;&#xA;			# You can copy this to one of:&#xD;&#xA;			# - ""/etc/mysql/my.cnf"" to set global options,&#xD;&#xA;			# - ""~/.my.cnf"" to set user-specific options.&#xD;&#xA;			# &#xD;&#xA;			# One can use all long options that the program supports.&#xD;&#xA;			# Run program with --help to get a list of available options and with&#xD;&#xA;			# --print-defaults to see which it would actually understand and use.&#xD;&#xA;			#&#xD;&#xA;			# For explanations see&#xD;&#xA;			# http://dev.mysql.com/doc/mysql/en/server-system-variables.html&#xD;&#xA;			&#xD;&#xA;			# This will be passed to all mysql clients&#xD;&#xA;			# It has been reported that passwords should be enclosed with ticks/quotes&#xD;&#xA;			# escpecially if they contain ""#"" chars...&#xD;&#xA;			# Remember to edit /etc/mysql/debian.cnf when changing the socket location.&#xD;&#xA;			[client]&#xD;&#xA;			port		= 3306&#xD;&#xA;			socket		= /var/run/mysqld/mysqld.sock&#xD;&#xA;			&#xD;&#xA;			# Here is entries for some specific programs&#xD;&#xA;			# The following values assume you have at least 32M ram&#xD;&#xA;			&#xD;&#xA;			# This was formally known as [safe_mysqld]. Both versions are currently parsed.&#xD;&#xA;			[mysqld_safe]&#xD;&#xA;			socket		= /var/run/mysqld/mysqld.sock&#xD;&#xA;			nice		= 0&#xD;&#xA;			&#xD;&#xA;			[mysqld]&#xD;&#xA;			#&#xD;&#xA;			# * Basic Settings&#xD;&#xA;			#&#xD;&#xA;			user		= mysql&#xD;&#xA;			pid-file	= /var/run/mysqld/mysqld.pid&#xD;&#xA;			socket		= /var/run/mysqld/mysqld.sock&#xD;&#xA;			port		= 3306&#xD;&#xA;			basedir		= /usr&#xD;&#xA;			datadir		= /var/lib/mysql&#xD;&#xA;			tmpdir		= /tmp&#xD;&#xA;			lc-messages-dir	= /usr/share/mysql&#xD;&#xA;			skip-external-locking&#xD;&#xA;			#&#xD;&#xA;			# Instead of skip-networking the default is now to listen only on&#xD;&#xA;			# localhost which is more compatible and is not less secure.&#xD;&#xA;			bind-address		= 127.0.0.1&#xD;&#xA;			#&#xD;&#xA;			# * Fine Tuning&#xD;&#xA;			#&#xD;&#xA;			key_buffer		= 16M&#xD;&#xA;			max_allowed_packet	= 16M&#xD;&#xA;			thread_stack		= 192K&#xD;&#xA;			thread_cache_size       = 8&#xD;&#xA;			# This replaces the startup script and checks MyISAM tables if needed&#xD;&#xA;			# the first time they are touched&#xD;&#xA;			myisam-recover         = BACKUP&#xD;&#xA;			#max_connections        = 100&#xD;&#xA;			#table_cache            = 64&#xD;&#xA;			#thread_concurrency     = 10&#xD;&#xA;			#&#xD;&#xA;			# * Query Cache Configuration&#xD;&#xA;			#&#xD;&#xA;			query_cache_limit	= 1M&#xD;&#xA;			query_cache_size        = 16M&#xD;&#xA;			#&#xD;&#xA;			# * Logging and Replication&#xD;&#xA;			#&#xD;&#xA;			# Both location gets rotated by the cronjob.&#xD;&#xA;			# Be aware that this log type is a performance killer.&#xD;&#xA;			# As of 5.1 you can enable the log at runtime!&#xD;&#xA;			#general_log_file        = /var/log/mysql/mysql.log&#xD;&#xA;			#general_log             = 1&#xD;&#xA;			#&#xD;&#xA;			# Error log - should be very few entries.&#xD;&#xA;			#&#xD;&#xA;			log_error = /var/log/mysql/error.log&#xD;&#xA;			#&#xD;&#xA;			# Here you can see queries with especially long duration&#xD;&#xA;			#log_slow_queries	= /var/log/mysql/mysql-slow.log&#xD;&#xA;			#long_query_time = 2&#xD;&#xA;			#log-queries-not-using-indexes&#xD;&#xA;			#&#xD;&#xA;			# The following can be used as easy to replay backup logs or for replication.&#xD;&#xA;			# note: if you are setting up a replication slave, see README.Debian about&#xD;&#xA;			#       other settings you may need to change.&#xD;&#xA;			#server-id		= 1&#xD;&#xA;			#log_bin			= /var/log/mysql/mysql-bin.log&#xD;&#xA;			expire_logs_days	= 10&#xD;&#xA;			max_binlog_size         = 100M&#xD;&#xA;			#binlog_do_db		= include_database_name&#xD;&#xA;			#binlog_ignore_db	= include_database_name&#xD;&#xA;			#&#xD;&#xA;			# * InnoDB&#xD;&#xA;			#&#xD;&#xA;			# InnoDB is enabled by default with a 10MB datafile in /var/lib/mysql/.&#xD;&#xA;			# Read the manual for more InnoDB related options. There are many!&#xD;&#xA;			#&#xD;&#xA;			# * Security Features&#xD;&#xA;			#&#xD;&#xA;			# Read the manual, too, if you want chroot!&#xD;&#xA;			# chroot = /var/lib/mysql/&#xD;&#xA;			#&#xD;&#xA;			# For generating SSL certificates I recommend the OpenSSL GUI ""tinyca"".&#xD;&#xA;			#&#xD;&#xA;			# ssl-ca=/etc/mysql/cacert.pem&#xD;&#xA;			# ssl-cert=/etc/mysql/server-cert.pem&#xD;&#xA;			# ssl-key=/etc/mysql/server-key.pem&#xD;&#xA;			&#xD;&#xA;			&#xD;&#xA;			&#xD;&#xA;			[mysqldump]&#xD;&#xA;			quick&#xD;&#xA;			quote-names&#xD;&#xA;			max_allowed_packet	= 16M&#xD;&#xA;			&#xD;&#xA;			[mysql]&#xD;&#xA;			#no-auto-rehash	# faster start of mysql but no tab completition&#xD;&#xA;			&#xD;&#xA;			[isamchk]&#xD;&#xA;			key_buffer		= 16M&#xD;&#xA;			&#xD;&#xA;			#&#xD;&#xA;			# * IMPORTANT: Additional settings that can override those from this file!&#xD;&#xA;			#   The files must end with '.cnf', otherwise they'll be ignored.&#xD;&#xA;			#&#xD;&#xA;			!includedir /etc/mysql/conf.d/"
-3265155400985436101,130,5,"     <?php&#xD;&#xA;    &#xD;&#xA;     &#xD;&#xA;    &#xD;&#xA;               class DB_Functions {&#xD;&#xA;    &#xD;&#xA;        private $conn;&#xD;&#xA;    &#xD;&#xA;        // constructor&#xD;&#xA;        function __construct() {&#xD;&#xA;            require_once 'DB_Connect.php';&#xD;&#xA;            // connecting to database&#xD;&#xA;            $db = new Db_Connect();&#xD;&#xA;            $this->conn = $db->connect();&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // destructor&#xD;&#xA;        function __destruct() {&#xD;&#xA;            &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /**&#xD;&#xA;         * Storing new user&#xD;&#xA;         * returns user details&#xD;&#xA;         */&#xD;&#xA;        public function storeUser($name, $email, $password) {&#xD;&#xA;            $uuid = uniqid('', true);&#xD;&#xA;            $hash = $this->hashSSHA($password);&#xD;&#xA;            $encrypted_password = $hash[""encrypted""]; // encrypted password&#xD;&#xA;            $salt = $hash[""salt""]; // salt&#xD;&#xA;    &#xD;&#xA;            $stmt = $this->conn->prepare(""INSERT INTO users(unique_id, name, email, encrypted_password, salt, created_at) VALUES(?, ?, ?, ?, ?, NOW())"");&#xD;&#xA;            $stmt->bind_param(""sssss"", $uuid, $name, $email, $encrypted_password, $salt);&#xD;&#xA;            $result = $stmt->execute();&#xD;&#xA;            $stmt->close();&#xD;&#xA;    &#xD;&#xA;            // check for successful store&#xD;&#xA;            if ($result) {&#xD;&#xA;                $stmt = $this->conn->prepare(""SELECT * FROM users WHERE email = ?"");&#xD;&#xA;                $stmt->bind_param(""s"", $email);&#xD;&#xA;                $stmt->execute();&#xD;&#xA;                $user = $stmt->get_result()->fetch_assoc();&#xD;&#xA;                $stmt->close();&#xD;&#xA;    &#xD;&#xA;                return $user;&#xD;&#xA;            } else {&#xD;&#xA;                return false;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /**&#xD;&#xA;         * Get user by email and password&#xD;&#xA;         */&#xD;&#xA;        public function getUserByEmailAndPassword($email, $password) {&#xD;&#xA;    &#xD;&#xA;            $stmt = $this->conn->prepare(""SELECT * FROM users WHERE email = ?"");&#xD;&#xA;    &#xD;&#xA;            $stmt->bind_param(""s"", $email);&#xD;&#xA;    &#xD;&#xA;            if ($stmt->execute()) {&#xD;&#xA;                $user = $stmt->get_result()->fetch_assoc();&#xD;&#xA;                $stmt->close();&#xD;&#xA;    &#xD;&#xA;                // verifying user password&#xD;&#xA;                $salt = $user['salt'];&#xD;&#xA;                $encrypted_password = $user['encrypted_password'];&#xD;&#xA;                $hash = $this->checkhashSSHA($salt, $password);&#xD;&#xA;                // check for password equality&#xD;&#xA;                if ($encrypted_password == $hash) {&#xD;&#xA;                    // user authentication details are correct&#xD;&#xA;                    return $user;&#xD;&#xA;                }&#xD;&#xA;            } else {&#xD;&#xA;                return NULL;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /**&#xD;&#xA;         * Check user is existed or not&#xD;&#xA;         */&#xD;&#xA;        public function isUserExisted($email) {&#xD;&#xA;            $stmt = $this->conn->prepare(""SELECT email from users WHERE email = ?"");&#xD;&#xA;    &#xD;&#xA;            $stmt->bind_param(""s"", $email);&#xD;&#xA;    &#xD;&#xA;            $stmt->execute();&#xD;&#xA;    &#xD;&#xA;            $stmt->store_result();&#xD;&#xA;    &#xD;&#xA;            if ($stmt->num_rows > 0) {&#xD;&#xA;                // user existed &#xD;&#xA;                $stmt->close();&#xD;&#xA;                return true;&#xD;&#xA;            } else {&#xD;&#xA;                // user not existed&#xD;&#xA;                $stmt->close();&#xD;&#xA;                return false;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /**&#xD;&#xA;         * Encrypting password&#xD;&#xA;         * @param password&#xD;&#xA;         * returns salt and encrypted password&#xD;&#xA;         */&#xD;&#xA;        public function hashSSHA($password) {&#xD;&#xA;    &#xD;&#xA;            $salt = sha1(rand());&#xD;&#xA;            $salt = substr($salt, 0, 10);&#xD;&#xA;            $encrypted = base64_encode(sha1($password . $salt, true) . $salt);&#xD;&#xA;            $hash = array(""salt"" => $salt, ""encrypted"" => $encrypted);&#xD;&#xA;            return $hash;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /**&#xD;&#xA;         * Decrypting password&#xD;&#xA;         * @param salt, password&#xD;&#xA;         * returns hash string&#xD;&#xA;         */&#xD;&#xA;        public function checkhashSSHA($salt, $password) {&#xD;&#xA;    &#xD;&#xA;            $hash = base64_encode(sha1($password . $salt, true) . $salt);&#xD;&#xA;    &#xD;&#xA;            return $hash;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;         }&#xD;&#xA;    &#xD;&#xA;        ?>&#xD;&#xA; "
-4340911373998630966,130,5,"	import java.io.BufferedReader;&#xD;&#xA;	import java.io.IOException;&#xD;&#xA;	import java.io.InputStreamReader;&#xD;&#xA;	import java.net.URI;&#xD;&#xA;	import java.util.ArrayList;&#xD;&#xA;	import org.apache.http.HttpResponse;&#xD;&#xA;	import org.apache.http.NameValuePair;&#xD;&#xA;	import org.apache.http.client.HttpClient;&#xD;&#xA;	import org.apache.http.client.entity.UrlEncodedFormEntity;&#xD;&#xA;	import org.apache.http.client.methods.HttpGet;&#xD;&#xA;	import org.apache.http.client.methods.HttpPost;&#xD;&#xA;	import org.apache.http.conn.params.ConnManagerParams;&#xD;&#xA;	import org.apache.http.impl.client.DefaultHttpClient;&#xD;&#xA;	import org.apache.http.params.HttpConnectionParams;&#xD;&#xA;	import org.apache.http.params.HttpParams;&#xD;&#xA;	public class SimpleHttpClient {&#xD;&#xA;	 /** The time it takes for our client to timeout */&#xD;&#xA;	    public static final int HTTP_TIMEOUT = 30 * 1000; // milliseconds&#xD;&#xA;	    /** Single instance of our HttpClient */&#xD;&#xA;	    private static HttpClient mHttpClient;&#xD;&#xA;	    /**&#xD;&#xA;	     * Get our single instance of our HttpClient object.&#xD;&#xA;	     *&#xD;&#xA;	     * @return an HttpClient object with connection parameters set&#xD;&#xA;	     */&#xD;&#xA;	    private static HttpClient getHttpClient() {&#xD;&#xA;		if (mHttpClient == null) {&#xD;&#xA;		    mHttpClient = new DefaultHttpClient();&#xD;&#xA;		    final HttpParams params = mHttpClient.getParams();&#xD;&#xA;		    HttpConnectionParams.setConnectionTimeout(params, HTTP_TIMEOUT);&#xD;&#xA;		    HttpConnectionParams.setSoTimeout(params, HTTP_TIMEOUT);&#xD;&#xA;		    ConnManagerParams.setTimeout(params, HTTP_TIMEOUT);&#xD;&#xA;		}&#xD;&#xA;		return mHttpClient;&#xD;&#xA;	    }&#xD;&#xA;	    public static String executeHttpPost(String url, ArrayList<NameValuePair> postParameters) throws Exception {&#xD;&#xA;		BufferedReader in = null;&#xD;&#xA;		try {&#xD;&#xA;		    HttpClient client = getHttpClient();&#xD;&#xA;		    HttpPost request = new HttpPost(url);&#xD;&#xA;		    UrlEncodedFormEntity formEntity = new UrlEncodedFormEntity(postParameters);&#xD;&#xA;		    request.setEntity(formEntity);&#xD;&#xA;		    HttpResponse response = client.execute(request);&#xD;&#xA;		    in = new BufferedReader(new InputStreamReader(response.getEntity().getContent()));&#xD;&#xA;		    StringBuffer sb = new StringBuffer("""");&#xD;&#xA;		    String line = """";&#xD;&#xA;		    String NL = System.getProperty(""line.separator"");&#xD;&#xA;		    while ((line = in.readLine()) != null) {&#xD;&#xA;			sb.append(line + NL);&#xD;&#xA;		    }&#xD;&#xA;		    in.close();&#xD;&#xA;		    String result = sb.toString();&#xD;&#xA;		    return result;&#xD;&#xA;		}&#xD;&#xA;		finally {&#xD;&#xA;		    if (in != null) {&#xD;&#xA;			try {&#xD;&#xA;			    in.close();&#xD;&#xA;			} catch (IOException e) {&#xD;&#xA;			    e.printStackTrace();&#xD;&#xA;			}&#xD;&#xA;		    }&#xD;&#xA;		}&#xD;&#xA;	    }&#xD;&#xA;	    &#xD;&#xA;	    public static String executeHttpatch(String url, ArrayList<NameValuePair> postParameters) throws Exception {&#xD;&#xA;		BufferedReader in = null;&#xD;&#xA;		try {&#xD;&#xA;		    HttpClient client = getHttpClient();&#xD;&#xA;		    HttpPost request = new HttpPost(url);&#xD;&#xA;		    UrlEncodedFormEntity formEntity = new UrlEncodedFormEntity(postParameters);&#xD;&#xA;		    request.setEntity(formEntity);&#xD;&#xA;		    HttpResponse response = client.execute(request);&#xD;&#xA;		    in = new BufferedReader(new InputStreamReader(response.getEntity().getContent()));&#xD;&#xA;		    StringBuffer sb = new StringBuffer("""");&#xD;&#xA;		    String line = """";&#xD;&#xA;		    String NL = System.getProperty(""line.separator"");&#xD;&#xA;		    while ((line = in.readLine()) != null) {&#xD;&#xA;			sb.append(line + NL);&#xD;&#xA;		    }&#xD;&#xA;		    in.close();&#xD;&#xA;		    String result = sb.toString();&#xD;&#xA;		    return result;&#xD;&#xA;		}&#xD;&#xA;		finally {&#xD;&#xA;		    if (in != null) {&#xD;&#xA;			try {&#xD;&#xA;			    in.close();&#xD;&#xA;			} catch (IOException e) {&#xD;&#xA;			    e.printStackTrace();&#xD;&#xA;			}&#xD;&#xA;		    }&#xD;&#xA;		}&#xD;&#xA;	    }&#xD;&#xA;	    /**&#xD;&#xA;	     * Performs an HTTP GET request to the specified url.&#xD;&#xA;	     *&#xD;&#xA;	     * @param url The web address to post the request to&#xD;&#xA;	     * @return The result of the request&#xD;&#xA;	     * @throws Exception&#xD;&#xA;	     */&#xD;&#xA;	    public static String executeHttpGet(String url) throws Exception {&#xD;&#xA;		BufferedReader in = null;&#xD;&#xA;		try {&#xD;&#xA;		    HttpClient client = getHttpClient();&#xD;&#xA;		    HttpGet request = new HttpGet();&#xD;&#xA;		    request.setURI(new URI(url));&#xD;&#xA;		    HttpResponse response = client.execute(request);&#xD;&#xA;		    in = new BufferedReader(new InputStreamReader(response.getEntity().getContent()));&#xD;&#xA;		    StringBuffer sb = new StringBuffer("""");&#xD;&#xA;		    String line = """";&#xD;&#xA;		    String NL = System.getProperty(""line.separator"");&#xD;&#xA;		    while ((line = in.readLine()) != null) {&#xD;&#xA;			sb.append(line + NL);&#xD;&#xA;		    }&#xD;&#xA;		    in.close();&#xD;&#xA;		    String result = sb.toString();&#xD;&#xA;		    return result;&#xD;&#xA;		}&#xD;&#xA;		finally {&#xD;&#xA;		    if (in != null) {&#xD;&#xA;			try {&#xD;&#xA;			    in.close();&#xD;&#xA;			} catch (IOException e) {&#xD;&#xA;			    e.printStackTrace();&#xD;&#xA;			}&#xD;&#xA;		    }&#xD;&#xA;		}&#xD;&#xA;	    }&#xD;&#xA;	}"
-4372770906104678669,134,5,"        public class DatabaseHandler extends SQLiteOpenHelper {&#xD;&#xA;    &#xD;&#xA;    	// All Static variables&#xD;&#xA;    	// Database Version&#xD;&#xA;    	private static final int DATABASE_VERSION = 1;&#xD;&#xA;    &#xD;&#xA;    	// Database Name&#xD;&#xA;    	private static final String DATABASE_NAME = ""contactsManager"";&#xD;&#xA;    &#xD;&#xA;    	// Contacts table name&#xD;&#xA;    	private static final String TABLE_CONTACTS = ""contacts"";&#xD;&#xA;    &#xD;&#xA;    	// Contacts Table Columns names&#xD;&#xA;    	private static final String KEY_ID = ""id"";&#xD;&#xA;    	private static final String KEY_NAME = ""name"";&#xD;&#xA;    	private static final String KEY_PH_NO = ""phone_number"";&#xD;&#xA;    &#xD;&#xA;    	public DatabaseHandler(Context context) {&#xD;&#xA;    		super(context, DATABASE_NAME, null, DATABASE_VERSION);&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	// Creating Tables&#xD;&#xA;    	@Override&#xD;&#xA;    	public void onCreate(SQLiteDatabase db) {&#xD;&#xA;    		String CREATE_CONTACTS_TABLE = ""CREATE TABLE "" + TABLE_CONTACTS + ""(""&#xD;&#xA;    				+ KEY_ID + "" INTEGER PRIMARY KEY,"" + KEY_NAME + "" TEXT,""&#xD;&#xA;    				+ KEY_PH_NO + "" TEXT"" + "")"";&#xD;&#xA;    		db.execSQL(CREATE_CONTACTS_TABLE);&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	// Upgrading database&#xD;&#xA;    	@Override&#xD;&#xA;    	public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {&#xD;&#xA;    		// Drop older table if existed&#xD;&#xA;    		db.execSQL(""DROP TABLE IF EXISTS "" + TABLE_CONTACTS);&#xD;&#xA;    &#xD;&#xA;    		// Create tables again&#xD;&#xA;    		onCreate(db);&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	/**&#xD;&#xA;    	 * All CRUD(Create, Read, Update, Delete) Operations&#xD;&#xA;    	 */&#xD;&#xA;    &#xD;&#xA;    	// Adding new contact&#xD;&#xA;    	void addContact(Contact contact) {&#xD;&#xA;    		SQLiteDatabase db = this.getWritableDatabase();&#xD;&#xA;    &#xD;&#xA;    		ContentValues values = new ContentValues();&#xD;&#xA;    		values.put(KEY_NAME, contact.getName()); // Contact Name&#xD;&#xA;    		values.put(KEY_PH_NO, contact.getPhoneNumber()); // Contact Phone&#xD;&#xA;    &#xD;&#xA;    		// Inserting Row&#xD;&#xA;    		db.insert(TABLE_CONTACTS, null, values);&#xD;&#xA;    		db.close(); // Closing database connection&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	// Getting single contact&#xD;&#xA;    	Contact getContact(int id) {&#xD;&#xA;    		SQLiteDatabase db = this.getReadableDatabase();&#xD;&#xA;    &#xD;&#xA;    		Cursor cursor = db.query(TABLE_CONTACTS, new String[] { KEY_ID,&#xD;&#xA;    				KEY_NAME, KEY_PH_NO }, KEY_ID + ""=?"",&#xD;&#xA;    				new String[] { String.valueOf(id) }, null, null, null,        null);&#xD;&#xA;    		if (cursor != null)&#xD;&#xA;    			cursor.moveToFirst();&#xD;&#xA;    &#xD;&#xA;    		Contact contact = new Contact(Integer.parseInt(cursor.getString(0)),&#xD;&#xA;    				cursor.getString(1), cursor.getString(2));&#xD;&#xA;    		// return contact&#xD;&#xA;    		return contact;&#xD;&#xA;    	}&#xD;&#xA;    	&#xD;&#xA;    	// Getting All Contacts&#xD;&#xA;    	public List<Contact> getAllContacts() {&#xD;&#xA;    		List<Contact> contactList = new ArrayList<Contact>();&#xD;&#xA;    		// Select All Query&#xD;&#xA;    		String selectQuery = ""SELECT  * FROM "" + TABLE_CONTACTS;&#xD;&#xA;    &#xD;&#xA;    		SQLiteDatabase db = this.getWritableDatabase();&#xD;&#xA;    		Cursor cursor = db.rawQuery(selectQuery, null);&#xD;&#xA;    &#xD;&#xA;    		// looping through all rows and adding to list&#xD;&#xA;    		if (cursor.moveToFirst()) {&#xD;&#xA;    			do {&#xD;&#xA;    				Contact contact = new Contact();&#xD;&#xA;    				contact.setID(Integer.parseInt(cursor.getString(0)));&#xD;&#xA;    				contact.setName(cursor.getString(1));&#xD;&#xA;    				contact.setPhoneNumber(cursor.getString(2));&#xD;&#xA;    				// Adding contact to list&#xD;&#xA;    				contactList.add(contact);&#xD;&#xA;    			} while (cursor.moveToNext());&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		// return contact list&#xD;&#xA;    		return contactList;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	// Updating single contact&#xD;&#xA;    	public int updateContact(Contact contact) {&#xD;&#xA;    		SQLiteDatabase db = this.getWritableDatabase();&#xD;&#xA;    &#xD;&#xA;    		ContentValues values = new ContentValues();&#xD;&#xA;    		values.put(KEY_NAME, contact.getName());&#xD;&#xA;    		values.put(KEY_PH_NO, contact.getPhoneNumber());&#xD;&#xA;    &#xD;&#xA;    		// updating row&#xD;&#xA;    		return db.update(TABLE_CONTACTS, values, KEY_ID + "" = ?"",&#xD;&#xA;    				new String[] { String.valueOf(contact.getID()) });&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	// Deleting single contact&#xD;&#xA;    	public void deleteContact(Contact contact) {&#xD;&#xA;    		SQLiteDatabase db = this.getWritableDatabase();&#xD;&#xA;    		db.delete(TABLE_CONTACTS, KEY_ID + "" = ?"",&#xD;&#xA;    				new String[] { String.valueOf(contact.getID()) });&#xD;&#xA;    		db.close();&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    	// Getting contacts Count&#xD;&#xA;    	public int getContactsCount() {&#xD;&#xA;    		String countQuery = ""SELECT  * FROM "" + TABLE_CONTACTS;&#xD;&#xA;    		SQLiteDatabase db = this.getReadableDatabase();&#xD;&#xA;    		Cursor cursor = db.rawQuery(countQuery, null);&#xD;&#xA;    		cursor.close();&#xD;&#xA;    &#xD;&#xA;    		// return count&#xD;&#xA;    		return cursor.getCount();&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	&#xD;&#xA;    	&#xD;&#xA;       }"
3868174945026487646,135,5,"    /// <summary>&#xD;&#xA;    /// A converter that accepts <see cref=""SwitchConverterCase""/>s and converts them to the &#xD;&#xA;    /// Then property of the case.&#xD;&#xA;    /// </summary>&#xD;&#xA;    [ContentProperty(""Cases"")]&#xD;&#xA;    public class SwitchConverter : IValueConverter&#xD;&#xA;    {&#xD;&#xA;        // Converter instances.&#xD;&#xA;        List<SwitchConverterCase> _cases;&#xD;&#xA;    &#xD;&#xA;        #region Public Properties.&#xD;&#xA;        /// <summary>&#xD;&#xA;        /// Gets or sets an array of <see cref=""SwitchConverterCase""/>s that this converter can use to produde values from.&#xD;&#xA;        /// </summary>&#xD;&#xA;        public List<SwitchConverterCase> Cases { get { return _cases; } set { _cases = value; } }&#xD;&#xA;        #endregion&#xD;&#xA;        #region Construction.&#xD;&#xA;        /// <summary>&#xD;&#xA;        /// Initializes a new instance of the <see cref=""SwitchConverter""/> class.&#xD;&#xA;        /// </summary>&#xD;&#xA;        public SwitchConverter()&#xD;&#xA;        {&#xD;&#xA;            // Create the cases array.&#xD;&#xA;            _cases = new List<SwitchConverterCase>();&#xD;&#xA;        }&#xD;&#xA;        #endregion&#xD;&#xA;    &#xD;&#xA;        /// <summary>&#xD;&#xA;        /// Converts a value.&#xD;&#xA;        /// </summary>&#xD;&#xA;        /// <param name=""value"">The value produced by the binding source.</param>&#xD;&#xA;        /// <param name=""targetType"">The type of the binding target property.</param>&#xD;&#xA;        /// <param name=""parameter"">The converter parameter to use.</param>&#xD;&#xA;        /// <param name=""culture"">The culture to use in the converter.</param>&#xD;&#xA;        /// <returns>&#xD;&#xA;        /// A converted value. If the method returns null, the valid null value is used.&#xD;&#xA;        /// </returns>&#xD;&#xA;        public object Convert(object value, Type targetType, object parameter, System.Globalization.CultureInfo culture)&#xD;&#xA;        {&#xD;&#xA;            // This will be the results of the operation.&#xD;&#xA;            object results = null;&#xD;&#xA;    &#xD;&#xA;            // I'm only willing to convert SwitchConverterCases in this converter and no nulls!&#xD;&#xA;            if (value == null) throw new ArgumentNullException(""value"");&#xD;&#xA;    &#xD;&#xA;            // I need to find out if the case that matches this value actually exists in this converters cases collection.&#xD;&#xA;            if (_cases != null && _cases.Count > 0)&#xD;&#xA;                for (int i = 0; i < _cases.Count; i++)&#xD;&#xA;                {&#xD;&#xA;                    // Get a reference to this case.&#xD;&#xA;                    SwitchConverterCase targetCase = _cases[i];&#xD;&#xA;    &#xD;&#xA;                    // Check to see if the value is the cases When parameter.&#xD;&#xA;                    if (value == targetCase || value.ToString().ToUpper() == targetCase.When.ToString().ToUpper())&#xD;&#xA;                    {&#xD;&#xA;                        // We've got what we want, the results can now be set to the Then property&#xD;&#xA;                        // of the case we're on.&#xD;&#xA;                        results = targetCase.Then;&#xD;&#xA;    &#xD;&#xA;                        // All done, get out of the loop.&#xD;&#xA;                        break;&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;            // return the results.&#xD;&#xA;            return results;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /// <summary>&#xD;&#xA;        /// Converts a value.&#xD;&#xA;        /// </summary>&#xD;&#xA;        /// <param name=""value"">The value that is produced by the binding target.</param>&#xD;&#xA;        /// <param name=""targetType"">The type to convert to.</param>&#xD;&#xA;        /// <param name=""parameter"">The converter parameter to use.</param>&#xD;&#xA;        /// <param name=""culture"">The culture to use in the converter.</param>&#xD;&#xA;        /// <returns>&#xD;&#xA;        /// A converted value. If the method returns null, the valid null value is used.&#xD;&#xA;        /// </returns>&#xD;&#xA;        public object ConvertBack(object value, Type targetType, object parameter, System.Globalization.CultureInfo culture)&#xD;&#xA;        {&#xD;&#xA;            throw new NotImplementedException();&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    /// <summary>&#xD;&#xA;    /// Represents a case for a switch converter.&#xD;&#xA;    /// </summary>&#xD;&#xA;    [ContentProperty(""Then"")]&#xD;&#xA;    public class SwitchConverterCase&#xD;&#xA;    {&#xD;&#xA;        // case instances.&#xD;&#xA;        string _when;&#xD;&#xA;        object _then;&#xD;&#xA;    &#xD;&#xA;        #region Public Properties.&#xD;&#xA;        /// <summary>&#xD;&#xA;        /// Gets or sets the condition of the case.&#xD;&#xA;        /// </summary>&#xD;&#xA;        public string When { get { return _when; } set { _when = value; } }&#xD;&#xA;        /// <summary>&#xD;&#xA;        /// Gets or sets the results of this case when run through a <see cref=""SwitchConverter""/>&#xD;&#xA;        /// </summary>&#xD;&#xA;        public object Then { get { return _then; } set { _then = value; } }&#xD;&#xA;        #endregion&#xD;&#xA;        #region Construction.&#xD;&#xA;        /// <summary>&#xD;&#xA;        /// Switches the converter.&#xD;&#xA;        /// </summary>&#xD;&#xA;        public SwitchConverterCase()&#xD;&#xA;        {&#xD;&#xA;        }&#xD;&#xA;        /// <summary>&#xD;&#xA;        /// Initializes a new instance of the <see cref=""SwitchConverterCase""/> class.&#xD;&#xA;        /// </summary>&#xD;&#xA;        /// <param name=""when"">The condition of the case.</param>&#xD;&#xA;        /// <param name=""then"">The results of this case when run through a <see cref=""SwitchConverter""/>.</param>&#xD;&#xA;        public SwitchConverterCase(string when, object then)&#xD;&#xA;        {&#xD;&#xA;            // Hook up the instances.&#xD;&#xA;            this._then = then;&#xD;&#xA;            this._when = when;&#xD;&#xA;        }&#xD;&#xA;        #endregion&#xD;&#xA;    &#xD;&#xA;        /// <summary>&#xD;&#xA;        /// Returns a <see cref=""System.String""/> that represents this instance.&#xD;&#xA;        /// </summary>&#xD;&#xA;        /// <returns>&#xD;&#xA;        /// A <see cref=""System.String""/> that represents this instance.&#xD;&#xA;        /// </returns>&#xD;&#xA;        public override string ToString()&#xD;&#xA;        {&#xD;&#xA;            return string.Format(""When={0}; Then={1}"", When.ToString(), Then.ToString());&#xD;&#xA;        }&#xD;&#xA;    }"
-8266844919324230833,136,5,"     public class ReadContacts extends AsyncTask<Void, Void, Void>{&#xD;&#xA;            private ListView contactsList;&#xD;&#xA;        &#xD;&#xA;            private Context cntx;&#xD;&#xA;            private Constant constants;&#xD;&#xA;        &#xD;&#xA;            static final String[] CONTACTS_SUMMARY_PROJECTION = new String[] {&#xD;&#xA;                Contacts._ID, // 0&#xD;&#xA;                Contacts.DISPLAY_NAME, // 1&#xD;&#xA;                Contacts.STARRED, // 2&#xD;&#xA;                Contacts.TIMES_CONTACTED, // 3&#xD;&#xA;                Contacts.CONTACT_PRESENCE, // 4&#xD;&#xA;                Contacts.PHOTO_ID, // 5&#xD;&#xA;                Contacts.LOOKUP_KEY, // 6&#xD;&#xA;                Contacts.HAS_PHONE_NUMBER, // 7&#xD;&#xA;            };&#xD;&#xA;        &#xD;&#xA;            private long contactId;&#xD;&#xA;            private String display_name;&#xD;&#xA;            private String phoneNumber;&#xD;&#xA;        &#xD;&#xA;            private ArrayList<ContactsWrapper>contactWrap = new ArrayList<ContactsWrapper>();&#xD;&#xA;            private HashMap<Long, ArrayList<ContactsWrapper>>map = new HashMap<Long, ArrayList<ContactsWrapper>>();&#xD;&#xA;        &#xD;&#xA;            private ContactsAdapter adapter;&#xD;&#xA;        &#xD;&#xA;            private DataController controller;&#xD;&#xA;        &#xD;&#xA;            public ReadContacts(Context cntx, ListView contactList) {&#xD;&#xA;                // TODO Auto-generated constructor stub&#xD;&#xA;                this.cntx = cntx;&#xD;&#xA;                constants = new Constant();&#xD;&#xA;                this.contactsList = contactList;&#xD;&#xA;        &#xD;&#xA;                controller = DataController.getInstance(); &#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            @Override&#xD;&#xA;            protected void onPreExecute() {&#xD;&#xA;                // TODO Auto-generated method stub&#xD;&#xA;                super.onPreExecute();&#xD;&#xA;                if(!(controller.contactWrapper.size()>0))&#xD;&#xA;                     constants.displayProgressDialog(cntx, ""Loading Contacts..."", ""Please Wait"");&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            @Override&#xD;&#xA;            protected Void doInBackground(Void... params) {&#xD;&#xA;                // TODO Auto-generated method stub&#xD;&#xA;        &#xD;&#xA;                if(!(controller.contactWrapper.size()>0))&#xD;&#xA;                {&#xD;&#xA;                try {&#xD;&#xA;                    String select = ""(("" + Contacts.DISPLAY_NAME + "" NOTNULL) AND (""&#xD;&#xA;                            + Contacts.HAS_PHONE_NUMBER + ""=1) AND (""&#xD;&#xA;                            + Contacts.DISPLAY_NAME + "" != '' ))"";&#xD;&#xA;        &#xD;&#xA;                    Cursor c = cntx.getContentResolver().query(Contacts.CONTENT_URI, CONTACTS_SUMMARY_PROJECTION, select,&#xD;&#xA;                            null, Contacts.DISPLAY_NAME + "" COLLATE LOCALIZED ASC"");&#xD;&#xA;        &#xD;&#xA;                    int colorcounter = 0;&#xD;&#xA;                    String[] colorcounter_array = { ""#91A46B"", ""#8BB6B5"", ""#CAA973"", ""#8DA6C8"",""#D19B8D""};&#xD;&#xA;        &#xD;&#xA;                    int color_string;&#xD;&#xA;                    for(int i=0;i<c.getCount();i++)&#xD;&#xA;                    {&#xD;&#xA;        //              contactWrap.clear();&#xD;&#xA;                        try {&#xD;&#xA;                            contactId = 0;&#xD;&#xA;                            String hasPhone = """";&#xD;&#xA;                            display_name = """";&#xD;&#xA;                            phoneNumber = """";&#xD;&#xA;        &#xD;&#xA;                            c.moveToPosition(i);&#xD;&#xA;        &#xD;&#xA;                            contactId =  c.getLong(0);&#xD;&#xA;                            display_name = c.getString(1);&#xD;&#xA;                            hasPhone = c.getString(7);&#xD;&#xA;        &#xD;&#xA;                            if (hasPhone.equalsIgnoreCase(""1""))&#xD;&#xA;                                hasPhone = ""true"";&#xD;&#xA;                            else&#xD;&#xA;                                hasPhone = ""false"" ;&#xD;&#xA;        &#xD;&#xA;                            if (Boolean.parseBoolean(hasPhone)) &#xD;&#xA;                            {&#xD;&#xA;                                Cursor phones = cntx.getContentResolver().query(ContactsContract.CommonDataKinds.Phone.CONTENT_URI, null,ContactsContract.CommonDataKinds.Phone.CONTACT_ID +"" = ""+ contactId,null, null);&#xD;&#xA;                                while (phones.moveToNext()) &#xD;&#xA;                                {&#xD;&#xA;                                    int indexPhoneType = phones.getColumnIndexOrThrow(Phone.TYPE);&#xD;&#xA;                                    String phoneType =  phones.getString(indexPhoneType);&#xD;&#xA;        &#xD;&#xA;                                    phoneNumber = phones.getString(phones.getColumnIndex(ContactsContract.CommonDataKinds.Phone.NUMBER)); &#xD;&#xA;        &#xD;&#xA;                                    String lookupKey = phones.getString(phones.getColumnIndex(ContactsContract.Contacts.LOOKUP_KEY));&#xD;&#xA;        &#xD;&#xA;                                    if (colorcounter < 5) &#xD;&#xA;                                    {&#xD;&#xA;                                        color_string =Color.parseColor(colorcounter_array[colorcounter]);&#xD;&#xA;                                        colorcounter++;&#xD;&#xA;                                    } else {&#xD;&#xA;                                        colorcounter = 0;&#xD;&#xA;                                        color_string =Color.parseColor(colorcounter_array[colorcounter]);&#xD;&#xA;                                        colorcounter++;&#xD;&#xA;                                    }&#xD;&#xA;                                    contactWrap.add(new ContactsWrapper(contactId, display_name, phoneNumber,lookupKey,false,color_string));&#xD;&#xA;                                }&#xD;&#xA;        //                      map.put(contactId, new ArrayList<ContactsWrapper>(contactWrap));&#xD;&#xA;                                phones.close();&#xD;&#xA;                            }&#xD;&#xA;                        } catch (Exception e) {&#xD;&#xA;        &#xD;&#xA;                            e.printStackTrace();&#xD;&#xA;                        }  &#xD;&#xA;                    }&#xD;&#xA;                    controller.contactWrapper = contactWrap;&#xD;&#xA;                }&#xD;&#xA;                catch (Exception e) {&#xD;&#xA;                    // TODO: handle exception&#xD;&#xA;                    e.printStackTrace();&#xD;&#xA;                }&#xD;&#xA;                }&#xD;&#xA;        &#xD;&#xA;                return null;&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            @Override&#xD;&#xA;            protected void onPostExecute(Void result) {&#xD;&#xA;                // TODO Auto-generated method stub&#xD;&#xA;                super.onPostExecute(result);&#xD;&#xA;                constants.dismissDialog();&#xD;&#xA;        &#xD;&#xA;                adapter = new ContactsAdapter(cntx);&#xD;&#xA;                contactsList.setAdapter(adapter);&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;        }"
4224646969551491353,137,5,"    public boolean onLayoutChild(CoordinatorLayout parent, V child, int layoutDirection) {&#xD;&#xA;        // First let the parent lay it out&#xD;&#xA;        if (mState != STATE_DRAGGING && mState != STATE_SETTLING) {&#xD;&#xA;            if (ViewCompat.getFitsSystemWindows(parent) &&&#xD;&#xA;                    !ViewCompat.getFitsSystemWindows(child)) {&#xD;&#xA;                ViewCompat.setFitsSystemWindows(child, true);&#xD;&#xA;            }&#xD;&#xA;            parent.onLayoutChild(child, layoutDirection);&#xD;&#xA;        }&#xD;&#xA;        // Offset the bottom sheet&#xD;&#xA;        mParentHeight = parent.getHeight();&#xD;&#xA;        mMinOffset = Math.max(0, mParentHeight - child.getHeight());&#xD;&#xA;        mMaxOffset = Math.max(mParentHeight - mPeekHeight, mMinOffset);&#xD;&#xA;        //if (mState == STATE_EXPANDED) {&#xD;&#xA;        //    ViewCompat.offsetTopAndBottom(child, mMinOffset);&#xD;&#xA;        //} else if (mHideable && mState == STATE_HIDDEN...&#xD;&#xA;        if (mState == STATE_ANCHOR_POINT) {&#xD;&#xA;            ViewCompat.offsetTopAndBottom(child, mAnchorPoint);&#xD;&#xA;        } else if (mState == STATE_EXPANDED) {&#xD;&#xA;            ViewCompat.offsetTopAndBottom(child, mMinOffset);&#xD;&#xA;        } else if (mHideable && mState == STATE_HIDDEN) {&#xD;&#xA;            ViewCompat.offsetTopAndBottom(child, mParentHeight);&#xD;&#xA;        } else if (mState == STATE_COLLAPSED) {&#xD;&#xA;            ViewCompat.offsetTopAndBottom(child, mMaxOffset);&#xD;&#xA;        }&#xD;&#xA;        if (mViewDragHelper == null) {&#xD;&#xA;            mViewDragHelper = ViewDragHelper.create(parent, mDragCallback);&#xD;&#xA;        }&#xD;&#xA;        mViewRef = new WeakReference<>(child);&#xD;&#xA;        mNestedScrollingChildRef = new WeakReference<>(findScrollingChild(child));&#xD;&#xA;        return true;&#xD;&#xA;    }&#xD;&#xA;    public void onStopNestedScroll(CoordinatorLayout coordinatorLayout, V child, View target) {&#xD;&#xA;        if (child.getTop() == mMinOffset) {&#xD;&#xA;            setStateInternal(STATE_EXPANDED);&#xD;&#xA;            return;&#xD;&#xA;        }&#xD;&#xA;        if (target != mNestedScrollingChildRef.get() || !mNestedScrolled) {&#xD;&#xA;            return;&#xD;&#xA;        }&#xD;&#xA;        int top;&#xD;&#xA;        int targetState;&#xD;&#xA;        if (mLastNestedScrollDy > 0) {&#xD;&#xA;            //top = mMinOffset;&#xD;&#xA;            //targetState = STATE_EXPANDED;&#xD;&#xA;            int currentTop = child.getTop();&#xD;&#xA;            if (currentTop > mAnchorPoint) {&#xD;&#xA;                top = mAnchorPoint;&#xD;&#xA;                targetState = STATE_ANCHOR_POINT;&#xD;&#xA;            }&#xD;&#xA;            else {&#xD;&#xA;                top = mMinOffset;&#xD;&#xA;                targetState = STATE_EXPANDED;&#xD;&#xA;            }&#xD;&#xA;        } else if (mHideable && shouldHide(child, getYVelocity())) {&#xD;&#xA;            top = mParentHeight;&#xD;&#xA;            targetState = STATE_HIDDEN;&#xD;&#xA;        } else if (mLastNestedScrollDy == 0) {&#xD;&#xA;            int currentTop = child.getTop();&#xD;&#xA;            if (Math.abs(currentTop - mMinOffset) < Math.abs(currentTop - mMaxOffset)) {&#xD;&#xA;                top = mMinOffset;&#xD;&#xA;                targetState = STATE_EXPANDED;&#xD;&#xA;            } else {&#xD;&#xA;                top = mMaxOffset;&#xD;&#xA;                targetState = STATE_COLLAPSED;&#xD;&#xA;            }&#xD;&#xA;        } else {&#xD;&#xA;            //top = mMaxOffset;&#xD;&#xA;            //targetState = STATE_COLLAPSED;&#xD;&#xA;            int currentTop = child.getTop();&#xD;&#xA;            if (currentTop > mAnchorPoint) {&#xD;&#xA;                top = mMaxOffset;&#xD;&#xA;                targetState = STATE_COLLAPSED;&#xD;&#xA;            }&#xD;&#xA;            else {&#xD;&#xA;                top = mAnchorPoint;&#xD;&#xA;                targetState = STATE_ANCHOR_POINT;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        if (mViewDragHelper.smoothSlideViewTo(child, child.getLeft(), top)) {&#xD;&#xA;            setStateInternal(STATE_SETTLING);&#xD;&#xA;            ViewCompat.postOnAnimation(child, new SettleRunnable(child, targetState));&#xD;&#xA;        } else {&#xD;&#xA;            setStateInternal(targetState);&#xD;&#xA;        }&#xD;&#xA;        mNestedScrolled = false;&#xD;&#xA;    }&#xD;&#xA;    public final void setState(@State int state) {&#xD;&#xA;        if (state == mState) {&#xD;&#xA;            return;&#xD;&#xA;        }&#xD;&#xA;        if (mViewRef == null) {&#xD;&#xA;            // The view is not laid out yet; modify mState and let onLayoutChild handle it later&#xD;&#xA;            /**&#xD;&#xA;             * New behavior (added: state == STATE_ANCHOR_POINT ||)&#xD;&#xA;             */&#xD;&#xA;            if (state == STATE_COLLAPSED || state == STATE_EXPANDED ||&#xD;&#xA;                    state == STATE_ANCHOR_POINT ||&#xD;&#xA;                    (mHideable && state == STATE_HIDDEN)) {&#xD;&#xA;                mState = state;&#xD;&#xA;            }&#xD;&#xA;            return;&#xD;&#xA;        }&#xD;&#xA;        V child = mViewRef.get();&#xD;&#xA;        if (child == null) {&#xD;&#xA;            return;&#xD;&#xA;        }&#xD;&#xA;        int top;&#xD;&#xA;        if (state == STATE_COLLAPSED) {&#xD;&#xA;            top = mMaxOffset;&#xD;&#xA;        } else if (state == STATE_ANCHOR_POINT) {&#xD;&#xA;            top = mAnchorPoint;&#xD;&#xA;        } else if (state == STATE_EXPANDED) {&#xD;&#xA;            top = mMinOffset;&#xD;&#xA;        } else if (mHideable && state == STATE_HIDDEN) {&#xD;&#xA;            top = mParentHeight;&#xD;&#xA;        } else {&#xD;&#xA;            throw new IllegalArgumentException(""Illegal state argument: "" + state);&#xD;&#xA;        }&#xD;&#xA;        setStateInternal(STATE_SETTLING);&#xD;&#xA;        if (mViewDragHelper.smoothSlideViewTo(child, child.getLeft(), top)) {&#xD;&#xA;            ViewCompat.postOnAnimation(child, new SettleRunnable(child, state));&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    public static <V extends View> BottomSheetBehaviorGoogleMapsLike<V> from(V view) {&#xD;&#xA;        ViewGroup.LayoutParams params = view.getLayoutParams();&#xD;&#xA;        if (!(params instanceof CoordinatorLayout.LayoutParams)) {&#xD;&#xA;            throw new IllegalArgumentException(""The view is not a child of CoordinatorLayout"");&#xD;&#xA;        }&#xD;&#xA;        CoordinatorLayout.Behavior behavior = ((CoordinatorLayout.LayoutParams) params)&#xD;&#xA;                .getBehavior();&#xD;&#xA;        if (!(behavior instanceof BottomSheetBehaviorGoogleMapsLike)) {&#xD;&#xA;            throw new IllegalArgumentException(&#xD;&#xA;                    ""The view is not associated with BottomSheetBehaviorGoogleMapsLike"");&#xD;&#xA;        }&#xD;&#xA;        return (BottomSheetBehaviorGoogleMapsLike<V>) behavior;&#xD;&#xA;    }"
-5801396378476524403,139,5,"    public class GeofenceReceiver extends BroadcastReceiver {&#xD;&#xA;    	Context context;&#xD;&#xA;    &#xD;&#xA;    	Intent broadcastIntent = new Intent();&#xD;&#xA;    	&#xD;&#xA;    	@Override&#xD;&#xA;    	public void onReceive(Context context, Intent intent) {&#xD;&#xA;    		this.context = context;&#xD;&#xA;    		&#xD;&#xA;    		broadcastIntent.addCategory(GeofenceUtils.CATEGORY_LOCATION_SERVICES);&#xD;&#xA;    		&#xD;&#xA;    		if (LocationClient.hasError(intent)) {&#xD;&#xA;    			handleError(intent);&#xD;&#xA;    		} else {&#xD;&#xA;    			handleEnterExit(intent);&#xD;&#xA;    		}&#xD;&#xA;    	}&#xD;&#xA;    	&#xD;&#xA;    	private void handleError(Intent intent){&#xD;&#xA;    		// Get the error code&#xD;&#xA;    		int errorCode = LocationClient.getErrorCode(intent);&#xD;&#xA;    &#xD;&#xA;    		// Get the error message&#xD;&#xA;    		String errorMessage = LocationServiceErrorMessages.getErrorString(&#xD;&#xA;    				context, errorCode);&#xD;&#xA;    &#xD;&#xA;    		// Log the error&#xD;&#xA;    		Log.e(GeofenceUtils.APPTAG,&#xD;&#xA;    				context.getString(R.string.geofence_transition_error_detail,&#xD;&#xA;    						errorMessage));&#xD;&#xA;    &#xD;&#xA;    		// Set the action and error message for the broadcast intent&#xD;&#xA;    		broadcastIntent&#xD;&#xA;    				.setAction(GeofenceUtils.ACTION_GEOFENCE_ERROR)&#xD;&#xA;    				.putExtra(GeofenceUtils.EXTRA_GEOFENCE_STATUS, errorMessage);&#xD;&#xA;    &#xD;&#xA;    		// Broadcast the error *locally* to other components in this app&#xD;&#xA;    		LocalBroadcastManager.getInstance(context).sendBroadcast(&#xD;&#xA;    				broadcastIntent);&#xD;&#xA;    	}&#xD;&#xA;    	&#xD;&#xA;    &#xD;&#xA;    	private void handleEnterExit(Intent intent) {&#xD;&#xA;    		// Get the type of transition (entry or exit)&#xD;&#xA;    		int transition = LocationClient.getGeofenceTransition(intent);&#xD;&#xA;    &#xD;&#xA;    		// Test that a valid transition was reported&#xD;&#xA;    		if ((transition == Geofence.GEOFENCE_TRANSITION_ENTER)&#xD;&#xA;    				|| (transition == Geofence.GEOFENCE_TRANSITION_EXIT)) {&#xD;&#xA;    &#xD;&#xA;    			// Post a notification&#xD;&#xA;    			List<Geofence> geofences = LocationClient&#xD;&#xA;    					.getTriggeringGeofences(intent);&#xD;&#xA;    			String[] geofenceIds = new String[geofences.size()];&#xD;&#xA;    			String ids = TextUtils.join(GeofenceUtils.GEOFENCE_ID_DELIMITER,&#xD;&#xA;    					geofenceIds);&#xD;&#xA;    			String transitionType = GeofenceUtils&#xD;&#xA;    					.getTransitionString(transition);&#xD;&#xA;    &#xD;&#xA;    			for (int index = 0; index < geofences.size(); index++) {&#xD;&#xA;    				Geofence geofence = geofences.get(index);&#xD;&#xA;    				...do something with the geofence entry or exit. I'm saving them to a local sqlite db&#xD;&#xA;    &#xD;&#xA;    			}&#xD;&#xA;    			// Create an Intent to broadcast to the app&#xD;&#xA;    			broadcastIntent&#xD;&#xA;    					.setAction(GeofenceUtils.ACTION_GEOFENCE_TRANSITION)&#xD;&#xA;    					.addCategory(GeofenceUtils.CATEGORY_LOCATION_SERVICES)&#xD;&#xA;    					.putExtra(GeofenceUtils.EXTRA_GEOFENCE_ID, geofenceIds)&#xD;&#xA;    					.putExtra(GeofenceUtils.EXTRA_GEOFENCE_TRANSITION_TYPE,&#xD;&#xA;    							transitionType);&#xD;&#xA;    &#xD;&#xA;    			LocalBroadcastManager.getInstance(MyApplication.getContext())&#xD;&#xA;    					.sendBroadcast(broadcastIntent);&#xD;&#xA;    &#xD;&#xA;    			// Log the transition type and a message&#xD;&#xA;    			Log.d(GeofenceUtils.APPTAG, transitionType + "": "" + ids);&#xD;&#xA;    			Log.d(GeofenceUtils.APPTAG,&#xD;&#xA;    					context.getString(R.string.geofence_transition_notification_text));&#xD;&#xA;    &#xD;&#xA;    			// In debug mode, log the result&#xD;&#xA;    			Log.d(GeofenceUtils.APPTAG, ""transition"");&#xD;&#xA;    &#xD;&#xA;    			// An invalid transition was reported&#xD;&#xA;    		} else {&#xD;&#xA;    			// Always log as an error&#xD;&#xA;    			Log.e(GeofenceUtils.APPTAG,&#xD;&#xA;    					context.getString(R.string.geofence_transition_invalid_type,&#xD;&#xA;    							transition));&#xD;&#xA;    		}&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	/**&#xD;&#xA;    	 * Posts a notification in the notification bar when a transition is&#xD;&#xA;    	 * detected. If the user clicks the notification, control goes to the main&#xD;&#xA;    	 * Activity.&#xD;&#xA;    	 * &#xD;&#xA;    	 * @param transitionType&#xD;&#xA;    	 *            The type of transition that occurred.&#xD;&#xA;    	 * &#xD;&#xA;    	 */&#xD;&#xA;    	private void sendNotification(String transitionType, String locationName) {&#xD;&#xA;    &#xD;&#xA;    		// Create an explicit content Intent that starts the main Activity&#xD;&#xA;    		Intent notificationIntent = new Intent(context, MainActivity.class);&#xD;&#xA;    &#xD;&#xA;    		// Construct a task stack&#xD;&#xA;    		TaskStackBuilder stackBuilder = TaskStackBuilder.create(context);&#xD;&#xA;    &#xD;&#xA;    		// Adds the main Activity to the task stack as the parent&#xD;&#xA;    		stackBuilder.addParentStack(MainActivity.class);&#xD;&#xA;    &#xD;&#xA;    		// Push the content Intent onto the stack&#xD;&#xA;    		stackBuilder.addNextIntent(notificationIntent);&#xD;&#xA;    &#xD;&#xA;    		// Get a PendingIntent containing the entire back stack&#xD;&#xA;    		PendingIntent notificationPendingIntent = stackBuilder&#xD;&#xA;    				.getPendingIntent(0, PendingIntent.FLAG_UPDATE_CURRENT);&#xD;&#xA;    &#xD;&#xA;    		// Get a notification builder that's compatible with platform versions&#xD;&#xA;    		// >= 4&#xD;&#xA;    		NotificationCompat.Builder builder = new NotificationCompat.Builder(&#xD;&#xA;    				context);&#xD;&#xA;    &#xD;&#xA;    		// Set the notification contents&#xD;&#xA;    		builder.setSmallIcon(R.drawable.ic_notification)&#xD;&#xA;    				.setContentTitle(transitionType + "": "" + locationName)&#xD;&#xA;    				.setContentText(&#xD;&#xA;    						context.getString(R.string.geofence_transition_notification_text))&#xD;&#xA;    				.setContentIntent(notificationPendingIntent);&#xD;&#xA;    &#xD;&#xA;    		// Get an instance of the Notification manager&#xD;&#xA;    		NotificationManager mNotificationManager = (NotificationManager) context&#xD;&#xA;    				.getSystemService(Context.NOTIFICATION_SERVICE);&#xD;&#xA;    &#xD;&#xA;    		// Issue the notification&#xD;&#xA;    		mNotificationManager.notify(0, builder.build());&#xD;&#xA;    	}&#xD;&#xA;    }"
6955247669234077587,142,5,"         <?xml version=""1.0""?>&#xD;&#xA;    <referenced>&#xD;&#xA;      <name>PocTree/PocTree.services:getReferencesForServices</name>&#xD;&#xA;      <LOCK_STATUS>3</LOCK_STATUS>&#xD;&#xA;      <type>&#xD;&#xA;        <svc_type>flow</svc_type>&#xD;&#xA;        <svc_subtype>default</svc_subtype>&#xD;&#xA;      </type>&#xD;&#xA;      <path/>&#xD;&#xA;      <isPub>false</isPub>&#xD;&#xA;      <isNotification>false</isNotification>&#xD;&#xA;      <isFlowServiceDisabled>false</isFlowServiceDisabled>&#xD;&#xA;      <status>reference</status>&#xD;&#xA;      <reference>&#xD;&#xA;        <name>WmRoot/wm.server.ns.dependency:getReferenced</name>&#xD;&#xA;        <LOCK_STATUS>2</LOCK_STATUS>&#xD;&#xA;        <type>&#xD;&#xA;          <svc_type>java</svc_type>&#xD;&#xA;          <svc_subtype>unknown</svc_subtype>&#xD;&#xA;        </type>&#xD;&#xA;        <path>/Flow Path;1.0/INVOKE;0</path>&#xD;&#xA;        <isPub>false</isPub>&#xD;&#xA;        <isNotification>false</isNotification>&#xD;&#xA;        <isFlowServiceDisabled>false</isFlowServiceDisabled>&#xD;&#xA;        <status>resolved</status>&#xD;&#xA;      </reference>&#xD;&#xA;      <reference>&#xD;&#xA;        <name>WmPublic/pub.xml:documentToXMLString</name>&#xD;&#xA;        <LOCK_STATUS>2</LOCK_STATUS>&#xD;&#xA;        <type>&#xD;&#xA;          <svc_type>java</svc_type>&#xD;&#xA;          <svc_subtype>unknown</svc_subtype>&#xD;&#xA;        </type>&#xD;&#xA;        <path>/Flow Path;1.0/INVOKE;1</path>&#xD;&#xA;        <isPub>false</isPub>&#xD;&#xA;        <isNotification>false</isNotification>&#xD;&#xA;        <isFlowServiceDisabled>false</isFlowServiceDisabled>&#xD;&#xA;        <status>resolved</status>&#xD;&#xA;      </reference>&#xD;&#xA;      <reference>&#xD;&#xA;        <name>PocTree/PocTree.services:jkl</name>&#xD;&#xA;        <LOCK_STATUS>3</LOCK_STATUS>&#xD;&#xA;        <type>&#xD;&#xA;          <svc_type>xsltservice</svc_type>&#xD;&#xA;          <svc_subtype>unknown</svc_subtype>&#xD;&#xA;        </type>&#xD;&#xA;        <path>/Flow Path;1.0/INVOKE;2</path>&#xD;&#xA;        <isPub>false</isPub>&#xD;&#xA;        <isNotification>false</isNotification>&#xD;&#xA;        <isFlowServiceDisabled>false</isFlowServiceDisabled>&#xD;&#xA;        <status>resolved</status>&#xD;&#xA;      </reference>&#xD;&#xA;      <reference>&#xD;&#xA;        <name>WmPublic/pub.xml:xmlStringToXMLNode</name>&#xD;&#xA;        <LOCK_STATUS>2</LOCK_STATUS>&#xD;&#xA;        <type>&#xD;&#xA;          <svc_type>java</svc_type>&#xD;&#xA;          <svc_subtype>unknown</svc_subtype>&#xD;&#xA;        </type>&#xD;&#xA;        <path>/Flow Path;1.0/INVOKE;3</path>&#xD;&#xA;        <isPub>false</isPub>&#xD;&#xA;        <isNotification>false</isNotification>&#xD;&#xA;        <isFlowServiceDisabled>false</isFlowServiceDisabled>&#xD;&#xA;        <status>resolved</status>&#xD;&#xA;      </reference>&#xD;&#xA;      <reference>&#xD;&#xA;        <name>WmPublic/pub.xml:xmlNodeToDocument</name>&#xD;&#xA;        <LOCK_STATUS>2</LOCK_STATUS>&#xD;&#xA;        <type>&#xD;&#xA;          <svc_type>java</svc_type>&#xD;&#xA;          <svc_subtype>unknown</svc_subtype>&#xD;&#xA;        </type>&#xD;&#xA;        <path>/Flow Path;1.0/INVOKE;4</path>&#xD;&#xA;        <isPub>false</isPub>&#xD;&#xA;        <isNotification>false</isNotification>&#xD;&#xA;        <isFlowServiceDisabled>false</isFlowServiceDisabled>&#xD;&#xA;        <status>resolved</status>&#xD;&#xA;      </reference>&#xD;&#xA;      <reference>&#xD;&#xA;        <name>PocTree/PocTree.services:ghi</name>&#xD;&#xA;        <LOCK_STATUS>4</LOCK_STATUS>&#xD;&#xA;        <type>&#xD;&#xA;          <svc_type>xsltservice</svc_type>&#xD;&#xA;          <svc_subtype>unknown</svc_subtype>&#xD;&#xA;        </type>&#xD;&#xA;        <path>/Flow Path;1.0/INVOKE;5</path>&#xD;&#xA;        <isPub>false</isPub>&#xD;&#xA;        <isNotification>false</isNotification>&#xD;&#xA;        <isFlowServiceDisabled>false</isFlowServiceDisabled>&#xD;&#xA;        <status>resolved</status>&#xD;&#xA;      </reference>&#xD;&#xA;      <reference>&#xD;&#xA;        <name>WxPackageTree/WxPackageTree.doc:NodeInfo</name>&#xD;&#xA;        <LOCK_STATUS>2</LOCK_STATUS>&#xD;&#xA;        <type>&#xD;&#xA;          <type_name>record</type_name>&#xD;&#xA;        </type>&#xD;&#xA;        <path>/Service Path;1.0/signature;2;subPath;""/nodes;4;0;WxPackageTree.doc:NodeInfo""</path>&#xD;&#xA;        <isPub>false</isPub>&#xD;&#xA;        <isNotification>false</isNotification>&#xD;&#xA;        <isFlowServiceDisabled>false</isFlowServiceDisabled>&#xD;&#xA;        <status>reference</status>&#xD;&#xA;        <reference>&#xD;&#xA;          <name>WxPackageTree/WxPackageTree.doc:NodeInfo</name>&#xD;&#xA;          <LOCK_STATUS>2</LOCK_STATUS>&#xD;&#xA;          <type>&#xD;&#xA;            <type_name>record</type_name>&#xD;&#xA;          </type>&#xD;&#xA;          <path>/children;4;1;WxPackageTree.doc:NodeInfo</path>&#xD;&#xA;          <isPub>false</isPub>&#xD;&#xA;          <isNotification>false</isNotification>&#xD;&#xA;          <isFlowServiceDisabled>false</isFlowServiceDisabled>&#xD;&#xA;          <status>recursive</status>&#xD;&#xA;        </reference>&#xD;&#xA;        <reference>&#xD;&#xA;        <name>PocTree/PocTree.docs:nodeInfo</name>&#xD;&#xA;        <LOCK_STATUS>4</LOCK_STATUS>&#xD;&#xA;        <type>&#xD;&#xA;          <type_name>record</type_name>&#xD;&#xA;        </type>&#xD;&#xA;        <path>/Flow Path;1.0/MAP;6/MAPCOPY;1/to_field;-2;subPath;""/nodeInfo;4;0;PocTree.docs:nodeInfo""</path>&#xD;&#xA;        <path>/Flow Path;1.0/MAP;6/MAPCOPY;2/to_field;-2;subPath;""/nodeInfo;4;0;PocTree.docs:nodeInfo""</path>&#xD;&#xA;        <path>/Flow Path;1.0/MAP;6/MAPCOPY;3/to_field;-2;subPath;""/nodeInfo;4;0;PocTree.docs:nodeInfo""</path>&#xD;&#xA;        <isPub>false</isPub>&#xD;&#xA;        <isNotification>false</isNotification>&#xD;&#xA;        <isFlowServiceDisabled>false</isFlowServiceDisabled>&#xD;&#xA;        <status>reference</status>&#xD;&#xA;        <reference>&#xD;&#xA;          <name>PocTree/PocTree.docs:nodeInfo</name>&#xD;&#xA;          <LOCK_STATUS>4</LOCK_STATUS>&#xD;&#xA;          <type>&#xD;&#xA;            <type_name>record</type_name>&#xD;&#xA;          </type>&#xD;&#xA;          <path>/children;4;1;PocTree.docs:nodeInfo</path>&#xD;&#xA;          <isPub>false</isPub>&#xD;&#xA;          <isNotification>false</isNotification>&#xD;&#xA;          <isFlowServiceDisabled>false</isFlowServiceDisabled>&#xD;&#xA;          <status>recursive</status>&#xD;&#xA;        </reference>&#xD;&#xA;      </reference>&#xD;&#xA;      </reference>&#xD;&#xA;    </referenced> "
-3861846715682788471,143,5,"    package com.androidhive.androidsqlite;&#xD;&#xA;    &#xD;&#xA;    import java.util.ArrayList;&#xD;&#xA;    import java.util.List;&#xD;&#xA;    &#xD;&#xA;    import android.content.ContentValues;&#xD;&#xA;    import android.content.Context;&#xD;&#xA;    import android.database.Cursor;&#xD;&#xA;    import android.database.sqlite.SQLiteDatabase;&#xD;&#xA;    import android.database.sqlite.SQLiteOpenHelper;&#xD;&#xA;    &#xD;&#xA;    public class DatabaseHandler extends SQLiteOpenHelper {&#xD;&#xA;    &#xD;&#xA;    	// All Static variables&#xD;&#xA;    	// Database Version&#xD;&#xA;    	private static final int DATABASE_VERSION = 1;&#xD;&#xA;    &#xD;&#xA;    	// Database Name&#xD;&#xA;    	private static final String DATABASE_NAME = ""contactsManager"";&#xD;&#xA;    &#xD;&#xA;    	// Contacts table name&#xD;&#xA;    	private static final String TABLE_CONTACTS = ""contacts"";&#xD;&#xA;    &#xD;&#xA;    	// Contacts Table Columns names&#xD;&#xA;    	private static final String KEY_ID = ""id"";&#xD;&#xA;    	private static final String KEY_NAME = ""name"";&#xD;&#xA;    	private static final String KEY_PH_NO = ""phone_number"";&#xD;&#xA;    &#xD;&#xA;    	public DatabaseHandler(Context context) {&#xD;&#xA;    		super(context, DATABASE_NAME, null, DATABASE_VERSION);&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	// Creating Tables&#xD;&#xA;    	@Override&#xD;&#xA;    	public void onCreate(SQLiteDatabase db) {&#xD;&#xA;    		String CREATE_CONTACTS_TABLE = ""CREATE TABLE "" + TABLE_CONTACTS + ""(""&#xD;&#xA;    				+ KEY_ID + "" INTEGER PRIMARY KEY,"" + KEY_NAME + "" TEXT,""&#xD;&#xA;    				+ KEY_PH_NO + "" TEXT"" + "")"";&#xD;&#xA;    		db.execSQL(CREATE_CONTACTS_TABLE);&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	// Upgrading database&#xD;&#xA;    	@Override&#xD;&#xA;    	public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {&#xD;&#xA;    		// Drop older table if existed&#xD;&#xA;    		db.execSQL(""DROP TABLE IF EXISTS "" + TABLE_CONTACTS);&#xD;&#xA;    &#xD;&#xA;    		// Create tables again&#xD;&#xA;    		onCreate(db);&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	/**&#xD;&#xA;    	 * All CRUD(Create, Read, Update, Delete) Operations&#xD;&#xA;    	 */&#xD;&#xA;    &#xD;&#xA;    	// Adding new contact&#xD;&#xA;    	void addContact(Contact contact) {&#xD;&#xA;    		SQLiteDatabase db = this.getWritableDatabase();&#xD;&#xA;    &#xD;&#xA;    		ContentValues values = new ContentValues();&#xD;&#xA;    		values.put(KEY_NAME, contact.getName()); // Contact Name&#xD;&#xA;    		values.put(KEY_PH_NO, contact.getPhoneNumber()); // Contact Phone&#xD;&#xA;    &#xD;&#xA;    		// Inserting Row&#xD;&#xA;    		db.insert(TABLE_CONTACTS, null, values);&#xD;&#xA;    		db.close(); // Closing database connection&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	// Getting single contact&#xD;&#xA;    	Contact getContact(int id) {&#xD;&#xA;    		SQLiteDatabase db = this.getReadableDatabase();&#xD;&#xA;    &#xD;&#xA;    		Cursor cursor = db.query(TABLE_CONTACTS, new String[] { KEY_ID,&#xD;&#xA;    				KEY_NAME, KEY_PH_NO }, KEY_ID + ""=?"",&#xD;&#xA;    				new String[] { String.valueOf(id) }, null, null, null, null);&#xD;&#xA;    		if (cursor != null)&#xD;&#xA;    			cursor.moveToFirst();&#xD;&#xA;    &#xD;&#xA;    		Contact contact = new Contact(Integer.parseInt(cursor.getString(0)),&#xD;&#xA;    				cursor.getString(1), cursor.getString(2));&#xD;&#xA;    		// return contact&#xD;&#xA;    		return contact;&#xD;&#xA;    	}&#xD;&#xA;    	&#xD;&#xA;    	// Getting All Contacts&#xD;&#xA;    	public List<Contact> getAllContacts() {&#xD;&#xA;    		List<Contact> contactList = new ArrayList<Contact>();&#xD;&#xA;    		// Select All Query&#xD;&#xA;    		String selectQuery = ""SELECT  * FROM "" + TABLE_CONTACTS;&#xD;&#xA;    &#xD;&#xA;    		SQLiteDatabase db = this.getWritableDatabase();&#xD;&#xA;    		Cursor cursor = db.rawQuery(selectQuery, null);&#xD;&#xA;    &#xD;&#xA;    		// looping through all rows and adding to list&#xD;&#xA;    		if (cursor.moveToFirst()) {&#xD;&#xA;    			do {&#xD;&#xA;    				Contact contact = new Contact();&#xD;&#xA;    				contact.setID(Integer.parseInt(cursor.getString(0)));&#xD;&#xA;    				contact.setName(cursor.getString(1));&#xD;&#xA;    				contact.setPhoneNumber(cursor.getString(2));&#xD;&#xA;    				// Adding contact to list&#xD;&#xA;    				contactList.add(contact);&#xD;&#xA;    			} while (cursor.moveToNext());&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		// return contact list&#xD;&#xA;    		return contactList;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	// Updating single contact&#xD;&#xA;    	public int updateContact(Contact contact) {&#xD;&#xA;    		SQLiteDatabase db = this.getWritableDatabase();&#xD;&#xA;    &#xD;&#xA;    		ContentValues values = new ContentValues();&#xD;&#xA;    		values.put(KEY_NAME, contact.getName());&#xD;&#xA;    		values.put(KEY_PH_NO, contact.getPhoneNumber());&#xD;&#xA;    &#xD;&#xA;    		// updating row&#xD;&#xA;    		return db.update(TABLE_CONTACTS, values, KEY_ID + "" = ?"",&#xD;&#xA;    				new String[] { String.valueOf(contact.getID()) });&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	// Deleting single contact&#xD;&#xA;    	public void deleteContact(Contact contact) {&#xD;&#xA;    		SQLiteDatabase db = this.getWritableDatabase();&#xD;&#xA;    		db.delete(TABLE_CONTACTS, KEY_ID + "" = ?"",&#xD;&#xA;    				new String[] { String.valueOf(contact.getID()) });&#xD;&#xA;    		db.close();&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    	// Getting contacts Count&#xD;&#xA;    	public int getContactsCount() {&#xD;&#xA;    		String countQuery = ""SELECT  * FROM "" + TABLE_CONTACTS;&#xD;&#xA;    		SQLiteDatabase db = this.getReadableDatabase();&#xD;&#xA;    		Cursor cursor = db.rawQuery(countQuery, null);&#xD;&#xA;    		cursor.close();&#xD;&#xA;    &#xD;&#xA;    		// return count&#xD;&#xA;    		return cursor.getCount();&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    }"
-6558378006181429454,144,5,"        public int uploadFile(String sourceFileUri) {&#xD;&#xA;    	  &#xD;&#xA;    	  String fileName = sourceFileUri;&#xD;&#xA; &#xD;&#xA;          HttpURLConnection conn = null;&#xD;&#xA;          DataOutputStream dos = null;  &#xD;&#xA;          String lineEnd = ""\r\n"";&#xD;&#xA;          String twoHyphens = ""--"";&#xD;&#xA;          String boundary = ""*****"";&#xD;&#xA;          int bytesRead, bytesAvailable, bufferSize;&#xD;&#xA;          byte[] buffer;&#xD;&#xA;          int maxBufferSize = 1 * 1024 * 1024; &#xD;&#xA;          File sourceFile = new File(sourceFileUri); &#xD;&#xA;          &#xD;&#xA;          if (!sourceFile.isFile()) {&#xD;&#xA;        	  &#xD;&#xA;	           dialog.dismiss(); &#xD;&#xA;	           &#xD;&#xA;	           Log.e(""uploadFile"", ""Source File not exist :""&#xD;&#xA;	        		               +uploadFilePath + """" + uploadFileName);&#xD;&#xA;	           &#xD;&#xA;	           runOnUiThread(new Runnable() {&#xD;&#xA;	               public void run() {&#xD;&#xA;	            	   messageText.setText(""Source File not exist :""&#xD;&#xA;	            			   +uploadFilePath + """" + uploadFileName);&#xD;&#xA;	               }&#xD;&#xA;	           }); &#xD;&#xA;	           &#xD;&#xA;	           return 0;&#xD;&#xA;           &#xD;&#xA;          }&#xD;&#xA;          else&#xD;&#xA;          {&#xD;&#xA;	           try { &#xD;&#xA;	        	   &#xD;&#xA;	            	 // open a URL connection to the Servlet&#xD;&#xA;	               FileInputStream fileInputStream = new FileInputStream(sourceFile);&#xD;&#xA;	               URL url = new URL(upLoadServerUri);&#xD;&#xA;	               &#xD;&#xA;	               // Open a HTTP  connection to  the URL&#xD;&#xA;	               conn = (HttpURLConnection) url.openConnection(); &#xD;&#xA;	               conn.setDoInput(true); // Allow Inputs&#xD;&#xA;	               conn.setDoOutput(true); // Allow Outputs&#xD;&#xA;	               conn.setUseCaches(false); // Don't use a Cached Copy&#xD;&#xA;	               conn.setRequestMethod(""POST"");&#xD;&#xA;	               conn.setRequestProperty(""Connection"", ""Keep-Alive"");&#xD;&#xA;	               conn.setRequestProperty(""ENCTYPE"", ""multipart/form-data"");&#xD;&#xA;	               conn.setRequestProperty(""Content-Type"", ""multipart/form-data;boundary="" + boundary);&#xD;&#xA;	               conn.setRequestProperty(""uploaded_file"", fileName); &#xD;&#xA;	               &#xD;&#xA;	               dos = new DataOutputStream(conn.getOutputStream());&#xD;&#xA;	     &#xD;&#xA;	               dos.writeBytes(twoHyphens + boundary + lineEnd); &#xD;&#xA;	               dos.writeBytes(""Content-Disposition: form-data; name=\""uploaded_file\"";filename=\""""&#xD;&#xA;	            		                     + fileName + ""\"""" + lineEnd);&#xD;&#xA;	               &#xD;&#xA;	               dos.writeBytes(lineEnd);&#xD;&#xA;	     &#xD;&#xA;	               // create a buffer of  maximum size&#xD;&#xA;	               bytesAvailable = fileInputStream.available(); &#xD;&#xA;	     &#xD;&#xA;	               bufferSize = Math.min(bytesAvailable, maxBufferSize);&#xD;&#xA;	               buffer = new byte[bufferSize];&#xD;&#xA;	     &#xD;&#xA;	               // read file and write it into form...&#xD;&#xA;	               bytesRead = fileInputStream.read(buffer, 0, bufferSize);  &#xD;&#xA;	                 &#xD;&#xA;	               while (bytesRead > 0) {&#xD;&#xA;	            	   &#xD;&#xA;	                 dos.write(buffer, 0, bufferSize);&#xD;&#xA;	                 bytesAvailable = fileInputStream.available();&#xD;&#xA;	                 bufferSize = Math.min(bytesAvailable, maxBufferSize);&#xD;&#xA;	                 bytesRead = fileInputStream.read(buffer, 0, bufferSize);   &#xD;&#xA;	                 &#xD;&#xA;	                 &#xD;&#xA;	                }&#xD;&#xA;	     &#xD;&#xA;	               // send multipart form data necesssary after file data...&#xD;&#xA;	               dos.writeBytes(lineEnd);&#xD;&#xA;	               dos.writeBytes(twoHyphens + boundary + twoHyphens + lineEnd);&#xD;&#xA;	     &#xD;&#xA;	               // Responses from the server (code and message)&#xD;&#xA;	               &#xD;&#xA;	               serverResponseCode = conn.getResponseCode();&#xD;&#xA;	               String serverResponseMessage = conn.getResponseMessage();&#xD;&#xA;	                &#xD;&#xA;	               Log.i(""uploadFile"", ""HTTP Response is : "" &#xD;&#xA;	            		   + serverResponseMessage + "": "" + serverResponseCode);&#xD;&#xA;	               &#xD;&#xA;	               if(serverResponseCode == 200){&#xD;&#xA;	            	   &#xD;&#xA;	                   runOnUiThread(new Runnable() {&#xD;&#xA;    	                        public void run() {&#xD;&#xA;    //	                        	&#xD;&#xA;    //	                        	String msg = ""File Upload Completed.\n\n See uploaded file here : \n\n""&#xD;&#xA;    //	                        		          +"" http://www.androidexample.com/media/uploads/""&#xD;&#xA;    //	                        		          +uploadFileName;&#xD;&#xA;    	                        	&#xD;&#xA;    //	                        	messageText.setText(msg);&#xD;&#xA;    	                            Toast.makeText(UploadToServer.this, ""File Upload Complete."", &#xD;&#xA;    	         &#xD;&#xA;                   		     Toast.LENGTH_SHORT).show();&#xD;&#xA;	                        }&#xD;&#xA;	                    });                &#xD;&#xA;	               }    &#xD;&#xA;	               &#xD;&#xA;	               //close the streams //&#xD;&#xA;	               fileInputStream.close();&#xD;&#xA;	               dos.flush();&#xD;&#xA;	               dos.close();&#xD;&#xA;	                &#xD;&#xA;	          } catch (MalformedURLException ex) {&#xD;&#xA;	        	  &#xD;&#xA;	              dialog.dismiss();  &#xD;&#xA;	              ex.printStackTrace();&#xD;&#xA;	              &#xD;&#xA;	              runOnUiThread(new Runnable() {&#xD;&#xA;	                  public void run() {&#xD;&#xA;	                	  messageText.setText(""MalformedURLException Exception : check script url."");&#xD;&#xA;	                      Toast.makeText(UploadToServer.this, ""MalformedURLException"", Toast.LENGTH_SHORT).show();&#xD;&#xA;	                  }&#xD;&#xA;	              });&#xD;&#xA;	              &#xD;&#xA;	              Log.e(""Upload file to server"", ""error: "" + ex.getMessage(), ex);  &#xD;&#xA;	          } catch (Exception e) {&#xD;&#xA;	        	  &#xD;&#xA;	              dialog.dismiss();  &#xD;&#xA;	              e.printStackTrace();&#xD;&#xA;	              &#xD;&#xA;	              runOnUiThread(new Runnable() {&#xD;&#xA;	                  public void run() {&#xD;&#xA;	                	  messageText.setText(""Got Exception : see logcat "");&#xD;&#xA;	                      Toast.makeText(UploadToServer.this, ""Got Exception : see logcat "", &#xD;&#xA;	                    		  Toast.LENGTH_SHORT).show();&#xD;&#xA;	                  }&#xD;&#xA;	              });&#xD;&#xA;	              Log.e(""Upload file to server Exception"", ""Exception : "" &#xD;&#xA;	            		                           + e.getMessage(), e);  &#xD;&#xA;	          }&#xD;&#xA;	          dialog.dismiss();       &#xD;&#xA;	          return serverResponseCode; &#xD;&#xA;	          &#xD;&#xA;           } // End else block &#xD;&#xA;         } "
-6905843637389648043,147,5,"	import java.util.Collection;&#xD;&#xA;	import java.util.Collections;&#xD;&#xA;	import java.util.HashMap;&#xD;&#xA;	import java.util.List;&#xD;&#xA;	import java.util.Map;&#xD;&#xA;	import com.softmodeler.common.CommonPlugin;&#xD;&#xA;	import com.softmodeler.model.OutputNode;&#xD;&#xA;	import com.softmodeler.service.IViewService;&#xD;&#xA;	import com.vaadin.data.Container.Hierarchical;&#xD;&#xA;	import com.vaadin.data.Item;&#xD;&#xA;	import com.vaadin.data.Property;&#xD;&#xA;	import com.vaadin.data.util.BeanItem;&#xD;&#xA;	/**&#xD;&#xA;	 * @author Flavio Donzé&#xD;&#xA;	 * @version 1.0&#xD;&#xA;	 */&#xD;&#xA;	public class OutputNodeHierachical implements Hierarchical {&#xD;&#xA;		private static final long serialVersionUID = 8289589835030184018L;&#xD;&#xA;		/** the view service */&#xD;&#xA;		private IViewService service = CommonPlugin.getService(IViewService.class);&#xD;&#xA;		/** collection of all root nodes */&#xD;&#xA;		private List<OutputNode> rootNodes = null;&#xD;&#xA;		/** parent=>children mapping */&#xD;&#xA;		private Map<OutputNode, List<OutputNode>> hierarchy = new HashMap<>();&#xD;&#xA;		/**&#xD;&#xA;		 * constructor&#xD;&#xA;		 *&#xD;&#xA;		 * @param rootNodes collection of all root nodes&#xD;&#xA;		 */&#xD;&#xA;		public OutputNodeHierachical(List<OutputNode> rootNodes) {&#xD;&#xA;			this.rootNodes = Collections.unmodifiableList(rootNodes);&#xD;&#xA;			addToHierarchy(rootNodes);&#xD;&#xA;		}&#xD;&#xA;		@Override&#xD;&#xA;		public Collection<?> getChildren(Object itemId) {&#xD;&#xA;			try {&#xD;&#xA;				List<OutputNode> children = hierarchy.get(itemId);&#xD;&#xA;				if (children == null) {&#xD;&#xA;					OutputNode node = (OutputNode) itemId;&#xD;&#xA;					children = service.getChildren(node.getNodeId(), false);&#xD;&#xA;					hierarchy.put(node, children);&#xD;&#xA;					// add children to hierarchy, their children will be added on click&#xD;&#xA;					addToHierarchy(children);&#xD;&#xA;				}&#xD;&#xA;				return children;&#xD;&#xA;			} catch (Exception e) {&#xD;&#xA;				VaadinUtil.handleException(e);&#xD;&#xA;			}&#xD;&#xA;			return null;&#xD;&#xA;		}&#xD;&#xA;		/**&#xD;&#xA;		 * add each element to the hierarchy without their children hierarchy(child=>null)&#xD;&#xA;		 *&#xD;&#xA;		 * @param children elements to add&#xD;&#xA;		 */&#xD;&#xA;		private void addToHierarchy(List<OutputNode> children) {&#xD;&#xA;			for (OutputNode child : children) {&#xD;&#xA;				hierarchy.put(child, null);&#xD;&#xA;			}&#xD;&#xA;		}&#xD;&#xA;		@Override&#xD;&#xA;		public boolean areChildrenAllowed(Object itemId) {&#xD;&#xA;			return !((OutputNode) itemId).getChilds().isEmpty();&#xD;&#xA;		}&#xD;&#xA;		@Override&#xD;&#xA;		public boolean hasChildren(Object itemId) {&#xD;&#xA;			return !((OutputNode) itemId).getChilds().isEmpty();&#xD;&#xA;		}&#xD;&#xA;		@Override&#xD;&#xA;		public Object getParent(Object itemId) {&#xD;&#xA;			String parentId = ((OutputNode) itemId).getParentId();&#xD;&#xA;			for (OutputNode node : hierarchy.keySet()) {&#xD;&#xA;				if (node.getNodeId().equals(parentId)) {&#xD;&#xA;					return node;&#xD;&#xA;				}&#xD;&#xA;			}&#xD;&#xA;			return null;&#xD;&#xA;		}&#xD;&#xA;		@Override&#xD;&#xA;		public Collection<?> rootItemIds() {&#xD;&#xA;			return rootNodes;&#xD;&#xA;		}&#xD;&#xA;		@Override&#xD;&#xA;		public boolean isRoot(Object itemId) {&#xD;&#xA;			return rootNodes.contains(itemId);&#xD;&#xA;		}&#xD;&#xA;		@Override&#xD;&#xA;		public Item getItem(Object itemId) {&#xD;&#xA;			return new BeanItem<OutputNode>((OutputNode) itemId);&#xD;&#xA;		}&#xD;&#xA;		@Override&#xD;&#xA;		public boolean containsId(Object itemId) {&#xD;&#xA;			return hierarchy.containsKey(itemId);&#xD;&#xA;		}&#xD;&#xA;		@Override&#xD;&#xA;		public Collection<?> getItemIds() {&#xD;&#xA;			return hierarchy.keySet();&#xD;&#xA;		}&#xD;&#xA;		@Override&#xD;&#xA;		public int size() {&#xD;&#xA;			return hierarchy.size();&#xD;&#xA;		}&#xD;&#xA;		@Override&#xD;&#xA;		public boolean setParent(Object itemId, Object newParentId) throws UnsupportedOperationException {&#xD;&#xA;			throw new UnsupportedOperationException();&#xD;&#xA;		}&#xD;&#xA;		@Override&#xD;&#xA;		public boolean setChildrenAllowed(Object itemId, boolean areChildrenAllowed) throws UnsupportedOperationException {&#xD;&#xA;			throw new UnsupportedOperationException();&#xD;&#xA;		}&#xD;&#xA;		@Override&#xD;&#xA;		public Item addItem(Object itemId) throws UnsupportedOperationException {&#xD;&#xA;			throw new UnsupportedOperationException();&#xD;&#xA;		}&#xD;&#xA;		@Override&#xD;&#xA;		public Object addItem() throws UnsupportedOperationException {&#xD;&#xA;			throw new UnsupportedOperationException();&#xD;&#xA;		}&#xD;&#xA;		@Override&#xD;&#xA;		public boolean removeItem(Object itemId) throws UnsupportedOperationException {&#xD;&#xA;			throw new UnsupportedOperationException();&#xD;&#xA;		}&#xD;&#xA;		@Override&#xD;&#xA;		public boolean removeAllItems() throws UnsupportedOperationException {&#xD;&#xA;			throw new UnsupportedOperationException();&#xD;&#xA;		}&#xD;&#xA;		@Override&#xD;&#xA;		public Class<?> getType(Object propertyId) {&#xD;&#xA;			throw new UnsupportedOperationException();&#xD;&#xA;		}&#xD;&#xA;		@Override&#xD;&#xA;		public Collection<?> getContainerPropertyIds() {&#xD;&#xA;			throw new UnsupportedOperationException();&#xD;&#xA;		}&#xD;&#xA;		@Override&#xD;&#xA;		public Property<?> getContainerProperty(Object itemId, Object propertyId) {&#xD;&#xA;			throw new UnsupportedOperationException();&#xD;&#xA;		}&#xD;&#xA;		@Override&#xD;&#xA;		public boolean addContainerProperty(Object propertyId, Class<?> type, Object defaultValue) throws UnsupportedOperationException {&#xD;&#xA;			throw new UnsupportedOperationException();&#xD;&#xA;		}&#xD;&#xA;		@Override&#xD;&#xA;		public boolean removeContainerProperty(Object propertyId) throws UnsupportedOperationException {&#xD;&#xA;			throw new UnsupportedOperationException();&#xD;&#xA;		}&#xD;&#xA;	}"
4627781587929840327,147,5,"    [{&#xD;&#xA;                ""name"": ""mango"",&#xD;&#xA;                ""stargazerscount"": 526,&#xD;&#xA;                ""forkscount"": ""critical"",&#xD;&#xA;                ""description"": ""fruits""&#xD;&#xA;            },&#xD;&#xA;            {&#xD;&#xA;                ""name"": ""brinjal"",&#xD;&#xA;                ""stargazerscount"": 526,&#xD;&#xA;                ""forkscount"": ""critical"",&#xD;&#xA;                ""description"": ""vagetables""&#xD;&#xA;            },&#xD;&#xA;            {&#xD;&#xA;                ""name"": ""grapes"",&#xD;&#xA;                ""stargazerscount"": 526,&#xD;&#xA;                ""forkscount"": ""major"",&#xD;&#xA;                ""description"": ""fruits""&#xD;&#xA;            },&#xD;&#xA;            {&#xD;&#xA;                ""name"": ""soap"",&#xD;&#xA;                ""stargazerscount"": 526,&#xD;&#xA;                ""forkscount"": ""major"",&#xD;&#xA;                ""description"": ""groceries""&#xD;&#xA;            },&#xD;&#xA;            {&#xD;&#xA;                ""name"": ""dates"",&#xD;&#xA;                ""stargazerscount"": 526,&#xD;&#xA;                ""forkscount"": ""critical"",&#xD;&#xA;                ""description"": ""dryfruits""&#xD;&#xA;            },&#xD;&#xA;            {&#xD;&#xA;                ""name"": ""mobiles"",&#xD;&#xA;                ""stargazerscount"": 526,&#xD;&#xA;                ""forkscount"": ""major"",&#xD;&#xA;                ""description"": ""electronics""&#xD;&#xA;            },&#xD;&#xA;            {&#xD;&#xA;                ""name"": ""shirt"",&#xD;&#xA;                ""stargazerscount"": 526,&#xD;&#xA;                ""forkscount"": ""critical"",&#xD;&#xA;                ""description"": ""clothes""&#xD;&#xA;            },&#xD;&#xA;    		{&#xD;&#xA;                ""name"": ""dates"",&#xD;&#xA;                ""stargazerscount"": 526,&#xD;&#xA;                ""forkscount"": ""critical"",&#xD;&#xA;                ""description"": ""dryfruits""&#xD;&#xA;            },&#xD;&#xA;            {&#xD;&#xA;                ""name"": ""mobiles"",&#xD;&#xA;                ""stargazerscount"": 526,&#xD;&#xA;                ""forkscount"": ""major"",&#xD;&#xA;                ""description"": ""electronics""&#xD;&#xA;            },&#xD;&#xA;            {&#xD;&#xA;                ""name"": ""shirt"",&#xD;&#xA;                ""stargazerscount"": 526,&#xD;&#xA;                ""forkscount"": ""critical"",&#xD;&#xA;                ""description"": ""clothes""&#xD;&#xA;            },&#xD;&#xA;    		{&#xD;&#xA;                ""name"": ""shirt"",&#xD;&#xA;                ""stargazerscount"": 526,&#xD;&#xA;                ""forkscount"": ""critical"",&#xD;&#xA;                ""description"": ""clothes""&#xD;&#xA;            },&#xD;&#xA;    		{&#xD;&#xA;                ""name"": ""dates"",&#xD;&#xA;                ""stargazerscount"": 526,&#xD;&#xA;                ""forkscount"": ""critical"",&#xD;&#xA;                ""description"": ""dryfruits""&#xD;&#xA;            },&#xD;&#xA;            {&#xD;&#xA;                ""name"": ""mobiles"",&#xD;&#xA;                ""stargazerscount"": 526,&#xD;&#xA;                ""forkscount"": ""major"",&#xD;&#xA;                ""description"": ""electronics""&#xD;&#xA;            },&#xD;&#xA;            {&#xD;&#xA;                ""name"": ""shirt"",&#xD;&#xA;                ""stargazerscount"": 526,&#xD;&#xA;                ""forkscount"": ""critical"",&#xD;&#xA;                ""description"": ""clothes""&#xD;&#xA;            },&#xD;&#xA;    		{&#xD;&#xA;                ""name"": ""dates"",&#xD;&#xA;                ""stargazerscount"": 526,&#xD;&#xA;                ""forkscount"": ""critical"",&#xD;&#xA;                ""description"": ""dryfruits""&#xD;&#xA;            },&#xD;&#xA;            {&#xD;&#xA;                ""name"": ""mobiles"",&#xD;&#xA;                ""stargazerscount"": 526,&#xD;&#xA;                ""forkscount"": ""major"",&#xD;&#xA;                ""description"": ""electronics""&#xD;&#xA;            },&#xD;&#xA;    		 {&#xD;&#xA;                ""name"": ""mobiles"",&#xD;&#xA;                ""stargazerscount"": 526,&#xD;&#xA;                ""forkscount"": ""major"",&#xD;&#xA;                ""description"": ""electronics""&#xD;&#xA;            },&#xD;&#xA;    		 {&#xD;&#xA;                ""name"": ""mobiles"",&#xD;&#xA;                ""stargazerscount"": 526,&#xD;&#xA;                ""forkscount"": ""major"",&#xD;&#xA;                ""description"": ""electronics""&#xD;&#xA;            },&#xD;&#xA;    		 {&#xD;&#xA;                ""name"": ""mobiles"",&#xD;&#xA;                ""stargazerscount"": 526,&#xD;&#xA;                ""forkscount"": ""major"",&#xD;&#xA;                ""description"": ""electronics""&#xD;&#xA;            },&#xD;&#xA;    		 {&#xD;&#xA;                ""name"": ""mobiles"",&#xD;&#xA;                ""stargazerscount"": 526,&#xD;&#xA;                ""forkscount"": ""major"",&#xD;&#xA;                ""description"": ""electronics""&#xD;&#xA;            },&#xD;&#xA;    		 {&#xD;&#xA;                ""name"": ""mobiles"",&#xD;&#xA;                ""stargazerscount"": 526,&#xD;&#xA;                ""forkscount"": ""major"",&#xD;&#xA;                ""description"": ""electronics""&#xD;&#xA;            },&#xD;&#xA;    		 {&#xD;&#xA;                ""name"": ""mobiles"",&#xD;&#xA;                ""stargazerscount"": 526,&#xD;&#xA;                ""forkscount"": ""major"",&#xD;&#xA;                ""description"": ""electronics""&#xD;&#xA;            },&#xD;&#xA;    		 {&#xD;&#xA;                ""name"": ""mobiles"",&#xD;&#xA;                ""stargazerscount"": 526,&#xD;&#xA;                ""forkscount"": ""major"",&#xD;&#xA;                ""description"": ""electronics""&#xD;&#xA;            },&#xD;&#xA;            {&#xD;&#xA;                ""name"": ""shirt"",&#xD;&#xA;                ""stargazerscount"": 526,&#xD;&#xA;                ""forkscount"": ""critical"",&#xD;&#xA;                ""description"": ""clothes""&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        ]"
5046719397689471494,149,5,"    /// <summary> &#xD;&#xA;    /// Leverages the Windows API (advapi32.dll) to programmatically impersonate a user. &#xD;&#xA;    /// </summary> &#xD;&#xA;    public class ImpersonationContext : IDisposable &#xD;&#xA;    { &#xD;&#xA;        #region constants &#xD;&#xA;     &#xD;&#xA;        private const int LOGON32_LOGON_INTERACTIVE = 2; &#xD;&#xA;        private const int LOGON32_PROVIDER_DEFAULT = 0; &#xD;&#xA;     &#xD;&#xA;        #endregion &#xD;&#xA;     &#xD;&#xA;        #region global variables &#xD;&#xA;     &#xD;&#xA;        private WindowsImpersonationContext impersonationContext; &#xD;&#xA;        private bool impersonating; &#xD;&#xA;     &#xD;&#xA;        #endregion &#xD;&#xA;     &#xD;&#xA;        #region unmanaged code &#xD;&#xA;     &#xD;&#xA;        [DllImport(""advapi32.dll"")] &#xD;&#xA;        private static extern int LogonUserA(String lpszUserName, String lpszDomain, String lpszPassword, int dwLogonType, int dwLogonProvider, ref IntPtr phToken); &#xD;&#xA;     &#xD;&#xA;        [DllImport(""advapi32.dll"", CharSet = CharSet.Auto, SetLastError = true)] &#xD;&#xA;        private static extern int DuplicateToken(IntPtr hToken, int impersonationLevel, ref IntPtr hNewToken); &#xD;&#xA;     &#xD;&#xA;        [DllImport(""advapi32.dll"", CharSet = CharSet.Auto, SetLastError = true)] &#xD;&#xA;        private static extern bool RevertToSelf(); &#xD;&#xA;     &#xD;&#xA;        [DllImport(""kernel32.dll"", CharSet = CharSet.Auto)] &#xD;&#xA;        private static extern bool CloseHandle(IntPtr handle); &#xD;&#xA;     &#xD;&#xA;        #endregion &#xD;&#xA;     &#xD;&#xA;        #region constructors &#xD;&#xA;     &#xD;&#xA;        public ImpersonationContext() &#xD;&#xA;        { &#xD;&#xA;            impersonating = false; &#xD;&#xA;        } &#xD;&#xA;     &#xD;&#xA;        /// <summary> &#xD;&#xA;        /// Overloaded constructor and begins impersonating. &#xD;&#xA;        /// </summary> &#xD;&#xA;        public ImpersonationContext(string userName, string password, string domain) &#xD;&#xA;        { &#xD;&#xA;            this.BeginImpersonationContext(userName, password, domain); &#xD;&#xA;        } &#xD;&#xA;     &#xD;&#xA;        #endregion &#xD;&#xA;     &#xD;&#xA;        #region impersonation methods &#xD;&#xA;     &#xD;&#xA;        /// <summary> &#xD;&#xA;        /// Begins the impersonation context for the specified user. &#xD;&#xA;        /// </summary> &#xD;&#xA;        /// <remarks>Don't call this method if you used the overloaded constructor.</remarks> &#xD;&#xA;        public void BeginImpersonationContext(string userName, string password, string domain) &#xD;&#xA;        { &#xD;&#xA;            //initialize token and duplicate variables &#xD;&#xA;            IntPtr token = IntPtr.Zero; &#xD;&#xA;            IntPtr tokenDuplicate = IntPtr.Zero; &#xD;&#xA;     &#xD;&#xA;            if (RevertToSelf()) &#xD;&#xA;            { &#xD;&#xA;                if (LogonUserA(userName, domain, password, LOGON32_LOGON_INTERACTIVE, LOGON32_PROVIDER_DEFAULT, ref token) != 0) &#xD;&#xA;                { &#xD;&#xA;                    if (DuplicateToken(token, 2, ref tokenDuplicate) != 0) &#xD;&#xA;                    { &#xD;&#xA;                        using (WindowsIdentity tempWindowsIdentity = new WindowsIdentity(tokenDuplicate)) &#xD;&#xA;                        { &#xD;&#xA;                            //begin the impersonation context and mark impersonating true &#xD;&#xA;                            impersonationContext = tempWindowsIdentity.Impersonate(); &#xD;&#xA;                            impersonating = true; &#xD;&#xA;                        } &#xD;&#xA;                    } &#xD;&#xA;                } &#xD;&#xA;            } &#xD;&#xA;     &#xD;&#xA;            //close the handle to the account token &#xD;&#xA;            if (token != IntPtr.Zero) &#xD;&#xA;                CloseHandle(token); &#xD;&#xA;     &#xD;&#xA;            //close the handle to the duplicated account token &#xD;&#xA;            if (tokenDuplicate != IntPtr.Zero) &#xD;&#xA;                CloseHandle(tokenDuplicate); &#xD;&#xA;        } &#xD;&#xA;     &#xD;&#xA;        /// <summary> &#xD;&#xA;        /// Ends the current impersonation context. &#xD;&#xA;        /// </summary> &#xD;&#xA;        public void EndImpersonationContext() &#xD;&#xA;        { &#xD;&#xA;            //if the context exists undo it and dispose of the object &#xD;&#xA;            if (impersonationContext != null) &#xD;&#xA;            { &#xD;&#xA;                //end the impersonation context and dispose of the object &#xD;&#xA;                impersonationContext.Undo(); &#xD;&#xA;                impersonationContext.Dispose(); &#xD;&#xA;            } &#xD;&#xA;     &#xD;&#xA;            //mark the impersonation flag false &#xD;&#xA;            impersonating = false; &#xD;&#xA;        } &#xD;&#xA;     &#xD;&#xA;        #endregion &#xD;&#xA;     &#xD;&#xA;        #region properties &#xD;&#xA;     &#xD;&#xA;        /// <summary> &#xD;&#xA;        /// Gets a value indicating whether the impersonation is currently active. &#xD;&#xA;        /// </summary> &#xD;&#xA;        public bool Impersonating &#xD;&#xA;        { &#xD;&#xA;            get &#xD;&#xA;            { &#xD;&#xA;                return impersonating; &#xD;&#xA;            } &#xD;&#xA;        } &#xD;&#xA;     &#xD;&#xA;        #endregion &#xD;&#xA;     &#xD;&#xA;        #region IDisposable implementation &#xD;&#xA;     &#xD;&#xA;        ~ImpersonationContext() &#xD;&#xA;        { &#xD;&#xA;            Dispose(false); &#xD;&#xA;        } &#xD;&#xA;     &#xD;&#xA;        public void Dispose() &#xD;&#xA;        { &#xD;&#xA;            Dispose(true);                &#xD;&#xA;        } &#xD;&#xA;     &#xD;&#xA;        protected virtual void Dispose(bool disposing) &#xD;&#xA;        { &#xD;&#xA;            if (disposing) &#xD;&#xA;            { &#xD;&#xA;                if (impersonationContext != null) &#xD;&#xA;                { &#xD;&#xA;                    impersonationContext.Undo(); &#xD;&#xA;                    impersonationContext.Dispose(); &#xD;&#xA;                } &#xD;&#xA;            } &#xD;&#xA;        } &#xD;&#xA;     &#xD;&#xA;        #endregion     &#xD;&#xA;    } "
103240605998027427,151,5,"    (function($){&#xD;&#xA;    $.fn.autoComplete = function(options){&#xD;&#xA;        var o = $.extend({}, $.fn.autoComplete.defaults, options);&#xD;&#xA;        // public methods&#xD;&#xA;        if (typeof options == 'string') {&#xD;&#xA;            this.each(function(){&#xD;&#xA;                var that = $(this);&#xD;&#xA;                if (options == 'destroy') {&#xD;&#xA;                    $(window).off('resize.autocomplete', that.updateSC);&#xD;&#xA;                    that.off('blur.autocomplete focus.autocomplete keydown.autocomplete keyup.autocomplete');&#xD;&#xA;                    if (that.data('autocomplete'))&#xD;&#xA;                        that.attr('autocomplete', that.data('autocomplete'));&#xD;&#xA;                    else&#xD;&#xA;                        that.removeAttr('autocomplete');&#xD;&#xA;                    $(that.data('sc')).remove();&#xD;&#xA;                    that.removeData('sc').removeData('autocomplete');&#xD;&#xA;                }&#xD;&#xA;            });&#xD;&#xA;            return this;&#xD;&#xA;        }&#xD;&#xA;        return this.each(function(){&#xD;&#xA;            var that = $(this);&#xD;&#xA;            // sc = 'suggestions container'&#xD;&#xA;            that.sc = $('<div class=""autocomplete-suggestions '+o.menuClass+'""></div>');&#xD;&#xA;            that.data('sc', that.sc).data('autocomplete', that.attr('autocomplete'));&#xD;&#xA;            that.attr('autocomplete', 'off');&#xD;&#xA;            that.cache = {};&#xD;&#xA;            that.last_val = '';&#xD;&#xA;            that.updateSC = function(resize, next){&#xD;&#xA;                that.sc.css({&#xD;&#xA;                    top: that.offset().top + that.outerHeight(),&#xD;&#xA;                    left: that.offset().left,&#xD;&#xA;                    width: that.outerWidth()&#xD;&#xA;                });&#xD;&#xA;                if (!resize) {&#xD;&#xA;                    that.sc.show();&#xD;&#xA;                    if (!that.sc.maxHeight) that.sc.maxHeight = parseInt(that.sc.css('max-height'));&#xD;&#xA;                    if (!that.sc.suggestionHeight) that.sc.suggestionHeight = $('.autocomplete-suggestion', that.sc).first().outerHeight();&#xD;&#xA;                    if (that.sc.suggestionHeight)&#xD;&#xA;                        if (!next) that.sc.scrollTop(0);&#xD;&#xA;                        else {&#xD;&#xA;                            var scrTop = that.sc.scrollTop(), selTop = next.offset().top - that.sc.offset().top;&#xD;&#xA;                            if (selTop + that.sc.suggestionHeight - that.sc.maxHeight > 0)&#xD;&#xA;                                that.sc.scrollTop(selTop + that.sc.suggestionHeight + scrTop - that.sc.maxHeight);&#xD;&#xA;                            else if (selTop < 0)&#xD;&#xA;                                that.sc.scrollTop(selTop + scrTop);&#xD;&#xA;                        }&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;            $(window).on('resize.autocomplete', that.updateSC);&#xD;&#xA;            that.sc.appendTo('body');&#xD;&#xA;            that.sc.on('mouseleave', '.autocomplete-suggestion', function (){&#xD;&#xA;                $('.autocomplete-suggestion.selected').removeClass('selected');&#xD;&#xA;            });&#xD;&#xA;            that.sc.on('mouseenter', '.autocomplete-suggestion', function (){&#xD;&#xA;                $('.autocomplete-suggestion.selected').removeClass('selected');&#xD;&#xA;                $(this).addClass('selected');&#xD;&#xA;            });&#xD;&#xA;            that.sc.on('mousedown click', '.autocomplete-suggestion', function (e){&#xD;&#xA;                var item = $(this), v = item.data('val');&#xD;&#xA;                if (v || item.hasClass('autocomplete-suggestion')) { // else outside click&#xD;&#xA;                    that.val(v);&#xD;&#xA;                    o.onSelect(e, v, item);&#xD;&#xA;                    that.sc.hide();&#xD;&#xA;                }&#xD;&#xA;                return false;&#xD;&#xA;            });&#xD;&#xA;            that.on('blur.autocomplete', function(){&#xD;&#xA;                try { over_sb = $('.autocomplete-suggestions:hover').length; } catch(e){ over_sb = 0; } // IE7 fix :hover&#xD;&#xA;                if (!over_sb) {&#xD;&#xA;                    that.last_val = that.val();&#xD;&#xA;                    that.sc.hide();&#xD;&#xA;                    setTimeout(function(){ that.sc.hide(); }, 350); // hide suggestions on fast input&#xD;&#xA;                } else if (!that.is(':focus')) setTimeout(function(){ that.focus(); }, 20);&#xD;&#xA;            });&#xD;&#xA;            if (!o.minChars) that.on('focus.autocomplete', function(){ that.last_val = '\n'; that.trigger('keyup.autocomplete'); });&#xD;&#xA;            function suggest(data){&#xD;&#xA;                var val = that.val();&#xD;&#xA;                that.cache[val] = data;&#xD;&#xA;                if (data.length && val.length >= o.minChars) {&#xD;&#xA;                    var s = '';&#xD;&#xA;                    for (var i=0;i<data.length;i++) s += o.renderItem(data[i], val);&#xD;&#xA;                    that.sc.html(s);&#xD;&#xA;                    that.updateSC(0);&#xD;&#xA;                }&#xD;&#xA;                else&#xD;&#xA;                    that.sc.hide();&#xD;&#xA;            }&#xD;&#xA;            that.on('keydown.autocomplete', function(e){&#xD;&#xA;                // down (40), up (38)&#xD;&#xA;                if ((e.which == 40 || e.which == 38) && that.sc.html()) {&#xD;&#xA;                    var next, sel = $('.autocomplete-suggestion.selected', that.sc);&#xD;&#xA;                    if (!sel.length) {&#xD;&#xA;                        next = (e.which == 40) ? $('.autocomplete-suggestion', that.sc).first() : $('.autocomplete-suggestion', that.sc).last();&#xD;&#xA;                        that.val(next.addClass('selected').data('val'));&#xD;&#xA;                    } else {&#xD;&#xA;                        next = (e.which == 40) ? sel.next('.autocomplete-suggestion') : sel.prev('.autocomplete-suggestion');&#xD;&#xA;                        if (next.length) { sel.removeClass('selected'); that.val(next.addClass('selected').data('val')); }&#xD;&#xA;                        else { sel.removeClass('selected'); that.val(that.last_val); next = 0; }&#xD;&#xA;                    }&#xD;&#xA;                    that.updateSC(0, next);&#xD;&#xA;                    return false;&#xD;&#xA;                }&#xD;&#xA;                // esc&#xD;&#xA;                else if (e.which == 27) that.val(that.last_val).sc.hide();&#xD;&#xA;                // enter or tab&#xD;&#xA;                else if (e.which == 13 || e.which == 9) {&#xD;&#xA;                    var sel = $('.autocomplete-suggestion.selected', that.sc);&#xD;&#xA;                    if (sel.length && that.sc.is(':visible')) { o.onSelect(e, sel.data('val'), sel); setTimeout(function(){ that.sc.hide(); }, 20); }&#xD;&#xA;                }&#xD;&#xA;            });&#xD;&#xA;            that.on('keyup.autocomplete', function(e){&#xD;&#xA;                if (!~$.inArray(e.which, [13, 27, 35, 36, 37, 38, 39, 40])) {&#xD;&#xA;                    var val = that.val();&#xD;&#xA;                    if (val.length >= o.minChars) {&#xD;&#xA;                        if (val != that.last_val) {&#xD;&#xA;                            that.last_val = val;&#xD;&#xA;                            clearTimeout(that.timer);&#xD;&#xA;                            if (o.cache) {&#xD;&#xA;                                if (val in that.cache) { suggest(that.cache[val]); return; }&#xD;&#xA;                                // no requests if previous suggestions were empty&#xD;&#xA;                                for (var i=1; i<val.length-o.minChars; i++) {&#xD;&#xA;                                    var part = val.slice(0, val.length-i);&#xD;&#xA;                                    if (part in that.cache && !that.cache[part].length) { suggest([]); return; }&#xD;&#xA;                                }&#xD;&#xA;                            }&#xD;&#xA;                            that.timer = setTimeout(function(){ o.source(val, suggest) }, o.delay);&#xD;&#xA;                        }&#xD;&#xA;                    } else {&#xD;&#xA;                        that.last_val = val;&#xD;&#xA;                        that.sc.hide();&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;            });&#xD;&#xA;        });&#xD;&#xA;    }&#xD;&#xA;    $.fn.autoComplete.defaults = {&#xD;&#xA;        source: 0,&#xD;&#xA;        minChars: 3,&#xD;&#xA;        delay: 150,&#xD;&#xA;        cache: 1,&#xD;&#xA;        menuClass: '',&#xD;&#xA;        renderItem: function (item, search){&#xD;&#xA;            // escape special characters&#xD;&#xA;            search = search.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');&#xD;&#xA;            var re = new RegExp(""("" + search.split(' ').join('|') + "")"", ""gi"");&#xD;&#xA;            return '<div class=""autocomplete-suggestion"" data-val=""' + item + '"">' + item.replace(re, ""<b>$1</b>"") + '</div>';&#xD;&#xA;        },&#xD;&#xA;        onSelect: function(e, term, item){}&#xD;&#xA;    };&#xD;&#xA;    }(jQuery));"
-3758241340568249917,152,5,"        import java.awt.*;&#xD;&#xA;    import java.awt.event.*;&#xD;&#xA;    import java.awt.image.BufferedImage;&#xD;&#xA;    import java.io.IOException;&#xD;&#xA;    import java.net.*;&#xD;&#xA;    import java.util.HashMap;&#xD;&#xA;    import java.util.Map;&#xD;&#xA;    import javax.imageio.ImageIO;&#xD;&#xA;    import javax.swing.*;&#xD;&#xA;    &#xD;&#xA;    public class MoveIcon extends JPanel {&#xD;&#xA;    &#xD;&#xA;        private static final long serialVersionUID = 1L;&#xD;&#xA;        private static final String IMAGE_PATH = ""http://duke.kenai.com/misc/Bullfight.jpg"";&#xD;&#xA;        private static final String IMAGE_PATH_PLAYER = ""http://duke.kenai.com/iconSized/duke4.gif"";&#xD;&#xA;        public static final int STEP = 3;&#xD;&#xA;        private static final int TIMER_DELAY = STEP * 8;&#xD;&#xA;        private BufferedImage bkgrndImage = null;&#xD;&#xA;        private BufferedImage playerImage = null;&#xD;&#xA;        private Map<Direction, Boolean> directionMap = new HashMap<Direction, Boolean>();&#xD;&#xA;        private int playerX = 0;&#xD;&#xA;        private int playerY = 0;&#xD;&#xA;    &#xD;&#xA;        enum Direction {&#xD;&#xA;    &#xD;&#xA;            UP(KeyEvent.VK_UP, 0, -1), DOWN(KeyEvent.VK_DOWN, 0, 1),&#xD;&#xA;            LEFT(KeyEvent.VK_LEFT, -1, 0), RIGHT(KeyEvent.VK_RIGHT, 1, 0);&#xD;&#xA;            private int keyCode;&#xD;&#xA;            private int xDirection;&#xD;&#xA;            private int yDirection;&#xD;&#xA;    &#xD;&#xA;            private Direction(int keyCode, int xDirection, int yDirection) {&#xD;&#xA;                this.keyCode = keyCode;&#xD;&#xA;                this.xDirection = xDirection;&#xD;&#xA;                this.yDirection = yDirection;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            public int getKeyCode() {&#xD;&#xA;                return keyCode;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            public int getXDirection() {&#xD;&#xA;                return xDirection;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            public int getYDirection() {&#xD;&#xA;                return yDirection;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public MoveIcon() {&#xD;&#xA;            try {&#xD;&#xA;                URL bkgrdImageURL = new URL(IMAGE_PATH);&#xD;&#xA;                URL playerImageURL = new URL(IMAGE_PATH_PLAYER);&#xD;&#xA;                bkgrndImage = ImageIO.read(bkgrdImageURL);&#xD;&#xA;                playerImage = ImageIO.read(playerImageURL);&#xD;&#xA;                setPreferredSize(new Dimension(bkgrndImage.getWidth(), bkgrndImage.getHeight()));&#xD;&#xA;            } catch (MalformedURLException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            } catch (IOException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            }&#xD;&#xA;            for (Direction direction : Direction.values()) {&#xD;&#xA;                directionMap.put(direction, false);&#xD;&#xA;            }&#xD;&#xA;            setKeyBindings();&#xD;&#xA;            Timer timer = new Timer(TIMER_DELAY, new TimerListener());&#xD;&#xA;            timer.start();&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private void setKeyBindings() {&#xD;&#xA;            InputMap inMap = getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);&#xD;&#xA;            ActionMap actMap = getActionMap();&#xD;&#xA;            for (final Direction direction : Direction.values()) {&#xD;&#xA;                KeyStroke pressed = KeyStroke.getKeyStroke(direction.getKeyCode(), 0, false);&#xD;&#xA;                KeyStroke released = KeyStroke.getKeyStroke(direction.getKeyCode(), 0, true);&#xD;&#xA;                inMap.put(pressed, direction.toString() + ""pressed"");&#xD;&#xA;                inMap.put(released, direction.toString() + ""released"");&#xD;&#xA;                actMap.put(direction.toString() + ""pressed"", new AbstractAction() {&#xD;&#xA;    &#xD;&#xA;                    private static final long serialVersionUID = 1L;&#xD;&#xA;    &#xD;&#xA;                    @Override&#xD;&#xA;                    public void actionPerformed(ActionEvent e) {&#xD;&#xA;                        directionMap.put(direction, true);&#xD;&#xA;                    }&#xD;&#xA;                });&#xD;&#xA;                actMap.put(direction.toString() + ""released"", new AbstractAction() {&#xD;&#xA;    &#xD;&#xA;                    private static final long serialVersionUID = 1L;&#xD;&#xA;    &#xD;&#xA;                    @Override&#xD;&#xA;                    public void actionPerformed(ActionEvent e) {&#xD;&#xA;                        directionMap.put(direction, false);&#xD;&#xA;                    }&#xD;&#xA;                });&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        protected void paintComponent(Graphics g) {&#xD;&#xA;            super.paintComponent(g);&#xD;&#xA;            if (bkgrndImage != null) {&#xD;&#xA;                g.drawImage(bkgrndImage, 0, 0, null);&#xD;&#xA;            }&#xD;&#xA;            if (playerImage != null) {&#xD;&#xA;                g.drawImage(playerImage, playerX, playerY, null);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private class TimerListener implements ActionListener {&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            public void actionPerformed(ActionEvent e) {&#xD;&#xA;                boolean moved = false;&#xD;&#xA;                for (Direction direction : Direction.values()) {&#xD;&#xA;                    if (directionMap.get(direction)) {&#xD;&#xA;                        playerX += STEP * direction.getXDirection();&#xD;&#xA;                        playerY += STEP * direction.getYDirection();&#xD;&#xA;                        moved = true;&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;                if (moved) {&#xD;&#xA;                    int x = playerX - 2 * STEP;&#xD;&#xA;                    int y = playerY - 2 * STEP;&#xD;&#xA;                    int w = playerImage.getWidth() + 4 * STEP;&#xD;&#xA;                    int h = playerImage.getHeight() + 4 * STEP;&#xD;&#xA;                    MoveIcon.this.repaint(x, y, w, h); // !! repaint just the player&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private static void createAndShowUI() {&#xD;&#xA;            JFrame frame = new JFrame(""MoveIcon"");&#xD;&#xA;            frame.getContentPane().add(new MoveIcon());&#xD;&#xA;            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;&#xA;            frame.pack();&#xD;&#xA;            frame.setLocationRelativeTo(null);&#xD;&#xA;            frame.setVisible(true);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public static void main(String[] args) {&#xD;&#xA;            java.awt.EventQueue.invokeLater(new Runnable() {&#xD;&#xA;    &#xD;&#xA;                @Override&#xD;&#xA;                public void run() {&#xD;&#xA;                    createAndShowUI();&#xD;&#xA;                }&#xD;&#xA;            });&#xD;&#xA;        }&#xD;&#xA;    }"
-7677445004740838465,154,5,"        public class FragmentDrawer extends Fragment {&#xD;&#xA;    &#xD;&#xA;        private static String TAG = FragmentDrawer.class.getSimpleName();&#xD;&#xA;    &#xD;&#xA;        private RecyclerView recyclerView;&#xD;&#xA;        private ActionBarDrawerToggle mDrawerToggle;&#xD;&#xA;        private DrawerLayout mDrawerLayout;&#xD;&#xA;        private NavigationDrawerAdapter adapter;&#xD;&#xA;        private View containerView;&#xD;&#xA;        private static String[] titles = null;&#xD;&#xA;        private FragmentDrawerListener drawerListener;&#xD;&#xA;    &#xD;&#xA;        public FragmentDrawer() {&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void setDrawerListener(FragmentDrawerListener listener) {&#xD;&#xA;            this.drawerListener = listener;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public static List<NavDrawerItem> getData() {&#xD;&#xA;            List<NavDrawerItem> data = new ArrayList<>();&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            // preparing navigation drawer items&#xD;&#xA;            for (int i = 0; i < titles.length; i++) {&#xD;&#xA;                NavDrawerItem navItem = new NavDrawerItem();&#xD;&#xA;                navItem.setTitle(titles[i]);&#xD;&#xA;                data.add(navItem);&#xD;&#xA;            }&#xD;&#xA;            return data;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void onCreate(Bundle savedInstanceState) {&#xD;&#xA;            super.onCreate(savedInstanceState);&#xD;&#xA;    &#xD;&#xA;            // drawer labels&#xD;&#xA;            titles = getActivity().getResources().getStringArray(R.array.nav_drawer_labels);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public View onCreateView(LayoutInflater inflater, ViewGroup container,&#xD;&#xA;                                 Bundle savedInstanceState) {&#xD;&#xA;            // Inflating view layout&#xD;&#xA;            View layout = inflater.inflate(R.layout.fragment_navigation_drawer, container, false);&#xD;&#xA;            recyclerView = (RecyclerView) layout.findViewById(R.id.drawerList);&#xD;&#xA;    &#xD;&#xA;            adapter = new NavigationDrawerAdapter(getActivity(), getData());&#xD;&#xA;            recyclerView.setAdapter(adapter);&#xD;&#xA;            recyclerView.setLayoutManager(new LinearLayoutManager(getActivity()));&#xD;&#xA;            recyclerView.addOnItemTouchListener(new RecyclerTouchListener(getActivity(), recyclerView, new ClickListener() {&#xD;&#xA;                @Override&#xD;&#xA;                public void onClick(View view, int position) {&#xD;&#xA;                    drawerListener.onDrawerItemSelected(view, position);&#xD;&#xA;                    mDrawerLayout.closeDrawer(containerView);&#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;                @Override&#xD;&#xA;                public void onLongClick(View view, int position) {&#xD;&#xA;    &#xD;&#xA;                }&#xD;&#xA;            }));&#xD;&#xA;    &#xD;&#xA;            return layout;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        public void setUp(int fragmentId, DrawerLayout drawerLayout, final Toolbar toolbar) {&#xD;&#xA;            containerView = getActivity().findViewById(fragmentId);&#xD;&#xA;            mDrawerLayout = drawerLayout;&#xD;&#xA;            mDrawerToggle = new ActionBarDrawerToggle(getActivity(), drawerLayout, toolbar, R.string.drawer_open, R.string.drawer_close) {&#xD;&#xA;                @Override&#xD;&#xA;                public void onDrawerOpened(View drawerView) {&#xD;&#xA;                    super.onDrawerOpened(drawerView);&#xD;&#xA;                    getActivity().invalidateOptionsMenu();&#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;                @Override&#xD;&#xA;                public void onDrawerClosed(View drawerView) {&#xD;&#xA;                    super.onDrawerClosed(drawerView);&#xD;&#xA;                    getActivity().invalidateOptionsMenu();&#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;                @Override&#xD;&#xA;                public void onDrawerSlide(View drawerView, float slideOffset) {&#xD;&#xA;                    super.onDrawerSlide(drawerView, slideOffset);&#xD;&#xA;                    toolbar.setAlpha(1 - slideOffset / 2);&#xD;&#xA;                }&#xD;&#xA;            };&#xD;&#xA;    &#xD;&#xA;            mDrawerLayout.setDrawerListener(mDrawerToggle);&#xD;&#xA;            mDrawerLayout.post(new Runnable() {&#xD;&#xA;                @Override&#xD;&#xA;                public void run() {&#xD;&#xA;                    mDrawerToggle.syncState();&#xD;&#xA;                }&#xD;&#xA;            });&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public static interface ClickListener {&#xD;&#xA;            public void onClick(View view, int position);&#xD;&#xA;    &#xD;&#xA;            public void onLongClick(View view, int position);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        static class RecyclerTouchListener implements RecyclerView.OnItemTouchListener {&#xD;&#xA;    &#xD;&#xA;            private GestureDetector gestureDetector;&#xD;&#xA;            private ClickListener clickListener;&#xD;&#xA;    &#xD;&#xA;            public RecyclerTouchListener(Context context, final RecyclerView recyclerView, final ClickListener clickListener) {&#xD;&#xA;                this.clickListener = clickListener;&#xD;&#xA;                gestureDetector = new GestureDetector(context, new GestureDetector.SimpleOnGestureListener() {&#xD;&#xA;                    @Override&#xD;&#xA;                    public boolean onSingleTapUp(MotionEvent e) {&#xD;&#xA;                        return true;&#xD;&#xA;                    }&#xD;&#xA;    &#xD;&#xA;                    @Override&#xD;&#xA;                    public void onLongPress(MotionEvent e) {&#xD;&#xA;                        View child = recyclerView.findChildViewUnder(e.getX(), e.getY());&#xD;&#xA;                        if (child != null && clickListener != null) {&#xD;&#xA;                            clickListener.onLongClick(child, recyclerView.getChildPosition(child));&#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;                });&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            public boolean onInterceptTouchEvent(RecyclerView rv, MotionEvent e) {&#xD;&#xA;    &#xD;&#xA;                View child = rv.findChildViewUnder(e.getX(), e.getY());&#xD;&#xA;                if (child != null && clickListener != null && gestureDetector.onTouchEvent(e)) {&#xD;&#xA;                    clickListener.onClick(child, rv.getChildPosition(child));&#xD;&#xA;                }&#xD;&#xA;                return false;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            public void onTouchEvent(RecyclerView rv, MotionEvent e) {&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            public void onRequestDisallowInterceptTouchEvent(boolean disallowIntercept) {&#xD;&#xA;    &#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public interface FragmentDrawerListener {&#xD;&#xA;            public void onDrawerItemSelected(View view, int position);&#xD;&#xA;        }&#xD;&#xA;    }"
-6399184475508811232,158,5,"        public class CalendarAdapter extends BaseAdapter {&#xD;&#xA;	private Context mContext;&#xD;&#xA;	private java.util.Calendar month;&#xD;&#xA;	public GregorianCalendar pmonth; // calendar instance for previous month&#xD;&#xA;	/**&#xD;&#xA;	 * calendar instance for previous month for getting complete view&#xD;&#xA;	 */&#xD;&#xA;	public GregorianCalendar pmonthmaxset;&#xD;&#xA;	private GregorianCalendar selectedDate;&#xD;&#xA;	int firstDay;&#xD;&#xA;	int maxWeeknumber;&#xD;&#xA;	int maxP;&#xD;&#xA;	int calMaxP;&#xD;&#xA;	int lastWeekDay;&#xD;&#xA;	int leftDays;&#xD;&#xA;	int mnthlength;&#xD;&#xA;	String itemvalue, curentDateString;&#xD;&#xA;	DateFormat df;&#xD;&#xA;	private ArrayList<String> items;&#xD;&#xA;	public static List<String> dayString;&#xD;&#xA;	private View previousView;&#xD;&#xA;	public CalendarAdapter(Context c, GregorianCalendar monthCalendar) {&#xD;&#xA;		CalendarAdapter.dayString = new ArrayList<String>();&#xD;&#xA;		Locale.setDefault(Locale.US);&#xD;&#xA;		month = monthCalendar;&#xD;&#xA;		selectedDate = (GregorianCalendar) monthCalendar.clone();&#xD;&#xA;		mContext = c;&#xD;&#xA;		month.set(GregorianCalendar.DAY_OF_MONTH, 1);&#xD;&#xA;		this.items = new ArrayList<String>();&#xD;&#xA;		df = new SimpleDateFormat(""yyyy-MM-dd"", Locale.US);&#xD;&#xA;		curentDateString = df.format(selectedDate.getTime());&#xD;&#xA;		refreshDays();&#xD;&#xA;	}&#xD;&#xA;	public void setItems(ArrayList<String> items) {&#xD;&#xA;		for (int i = 0; i != items.size(); i++) {&#xD;&#xA;			if (items.get(i).length() == 1) {&#xD;&#xA;				items.set(i, ""0"" + items.get(i));&#xD;&#xA;			}&#xD;&#xA;		}&#xD;&#xA;		this.items = items;&#xD;&#xA;	}&#xD;&#xA;	public int getCount() {&#xD;&#xA;		return dayString.size();&#xD;&#xA;	}&#xD;&#xA;	public Object getItem(int position) {&#xD;&#xA;		return dayString.get(position);&#xD;&#xA;	}&#xD;&#xA;	public long getItemId(int position) {&#xD;&#xA;		return 0;&#xD;&#xA;	}&#xD;&#xA;	// create a new view for each item referenced by the Adapter&#xD;&#xA;	public View getView(int position, View convertView, ViewGroup parent) {&#xD;&#xA;		View v = convertView;&#xD;&#xA;		TextView dayView;&#xD;&#xA;		if (convertView == null) { // if it's not recycled, initialize some&#xD;&#xA;									// attributes&#xD;&#xA;			LayoutInflater vi = (LayoutInflater) mContext&#xD;&#xA;					.getSystemService(Context.LAYOUT_INFLATER_SERVICE);&#xD;&#xA;			v = vi.inflate(R.layout.calendar_item, null);&#xD;&#xA;		}&#xD;&#xA;		dayView = (TextView) v.findViewById(R.id.date);&#xD;&#xA;		// separates daystring into parts.&#xD;&#xA;		String[] separatedTime = dayString.get(position).split(""-"");&#xD;&#xA;		// taking last part of date. ie; 2 from 2012-12-02&#xD;&#xA;		String gridvalue = separatedTime[2].replaceFirst(""^0*"", """");&#xD;&#xA;		// checking whether the day is in current month or not.&#xD;&#xA;		if ((Integer.parseInt(gridvalue) > 1) && (position < firstDay)) {&#xD;&#xA;			// setting offdays to white color.&#xD;&#xA;			dayView.setTextColor(Color.WHITE);&#xD;&#xA;			dayView.setClickable(false);&#xD;&#xA;			dayView.setFocusable(false);&#xD;&#xA;		} else if ((Integer.parseInt(gridvalue) < 7) && (position > 28)) {&#xD;&#xA;			dayView.setTextColor(Color.WHITE);&#xD;&#xA;			dayView.setClickable(false);&#xD;&#xA;			dayView.setFocusable(false);&#xD;&#xA;		} else {&#xD;&#xA;			// setting curent month's days in blue color.&#xD;&#xA;			dayView.setTextColor(Color.BLUE);&#xD;&#xA;		}&#xD;&#xA;		if (dayString.get(position).equals(curentDateString)) {&#xD;&#xA;			setSelected(v);&#xD;&#xA;			previousView = v;&#xD;&#xA;		} else {&#xD;&#xA;			v.setBackgroundResource(R.drawable.list_item_background);&#xD;&#xA;		}&#xD;&#xA;		dayView.setText(gridvalue);&#xD;&#xA;		// create date string for comparison&#xD;&#xA;		String date = dayString.get(position);&#xD;&#xA;		if (date.length() == 1) {&#xD;&#xA;			date = ""0"" + date;&#xD;&#xA;		}&#xD;&#xA;		String monthStr = """" + (month.get(GregorianCalendar.MONTH) + 1);&#xD;&#xA;		if (monthStr.length() == 1) {&#xD;&#xA;			monthStr = ""0"" + monthStr;&#xD;&#xA;		}&#xD;&#xA;		// show icon if date is not empty and it exists in the items array&#xD;&#xA;		// &#xD;&#xA;		ImageView iw = (ImageView) v.findViewById(R.id.date_icon);&#xD;&#xA;		if (date.length() > 0 && items != null && items.contains(date)) {&#xD;&#xA;			iw.setVisibility(View.VISIBLE);&#xD;&#xA;		} else {&#xD;&#xA;			iw.setVisibility(View.INVISIBLE);&#xD;&#xA;		}&#xD;&#xA;		return v;&#xD;&#xA;	}&#xD;&#xA;	public View setSelected(View view) {&#xD;&#xA;		if (previousView != null) {&#xD;&#xA;			previousView.setBackgroundResource(R.drawable.list_item_background);&#xD;&#xA;		}&#xD;&#xA;		previousView = view;&#xD;&#xA;		view.setBackgroundResource(R.drawable.calendar_cel_selectl);&#xD;&#xA;		return view;&#xD;&#xA;	}&#xD;&#xA;	public void refreshDays() {&#xD;&#xA;		// clear items&#xD;&#xA;		items.clear();&#xD;&#xA;		dayString.clear();&#xD;&#xA;		Locale.setDefault(Locale.US);&#xD;&#xA;		pmonth = (GregorianCalendar) month.clone();&#xD;&#xA;		// month start day. ie; sun, mon, etc&#xD;&#xA;		firstDay = month.get(GregorianCalendar.DAY_OF_WEEK);&#xD;&#xA;		// finding number of weeks in current month.&#xD;&#xA;		maxWeeknumber = month.getActualMaximum(GregorianCalendar.WEEK_OF_MONTH);&#xD;&#xA;		// allocating maximum row number for the gridview.&#xD;&#xA;		mnthlength = maxWeeknumber * 7;&#xD;&#xA;		maxP = getMaxP(); // previous month maximum day 31,30....&#xD;&#xA;		calMaxP = maxP - (firstDay - 1);// calendar offday starting 24,25 ...&#xD;&#xA;		/**&#xD;&#xA;		 * Calendar instance for getting a complete gridview including the three&#xD;&#xA;		 * month's (previous,current,next) dates.&#xD;&#xA;		 */&#xD;&#xA;		pmonthmaxset = (GregorianCalendar) pmonth.clone();&#xD;&#xA;		/**&#xD;&#xA;		 * setting the start date as previous month's required date.&#xD;&#xA;		 */&#xD;&#xA;		pmonthmaxset.set(GregorianCalendar.DAY_OF_MONTH, calMaxP + 1);&#xD;&#xA;		/**&#xD;&#xA;		 * filling calendar gridview.&#xD;&#xA;		 */&#xD;&#xA;		for (int n = 0; n < mnthlength; n++) {&#xD;&#xA;			itemvalue = df.format(pmonthmaxset.getTime());&#xD;&#xA;			pmonthmaxset.add(GregorianCalendar.DATE, 1);&#xD;&#xA;			dayString.add(itemvalue);&#xD;&#xA;		}&#xD;&#xA;	}&#xD;&#xA;	private int getMaxP() {&#xD;&#xA;		int maxP;&#xD;&#xA;		if (month.get(GregorianCalendar.MONTH) == month&#xD;&#xA;				.getActualMinimum(GregorianCalendar.MONTH)) {&#xD;&#xA;			pmonth.set((month.get(GregorianCalendar.YEAR) - 1),&#xD;&#xA;					month.getActualMaximum(GregorianCalendar.MONTH), 1);&#xD;&#xA;		} else {&#xD;&#xA;			pmonth.set(GregorianCalendar.MONTH,&#xD;&#xA;					month.get(GregorianCalendar.MONTH) - 1);&#xD;&#xA;		}&#xD;&#xA;		maxP = pmonth.getActualMaximum(GregorianCalendar.DAY_OF_MONTH);&#xD;&#xA;		return maxP;&#xD;&#xA;	}}"
2417057025895069362,159,5,"        public String compressImage(String imageUri) {&#xD;&#xA;    &#xD;&#xA;            String filePath = getRealPathFromURI(imageUri);&#xD;&#xA;            Bitmap scaledBitmap = null;&#xD;&#xA;    &#xD;&#xA;            BitmapFactory.Options options = new BitmapFactory.Options();&#xD;&#xA;    &#xD;&#xA;    //      by setting this field as true, the actual bitmap pixels are not loaded in the memory. Just the bounds are loaded. If&#xD;&#xA;    //      you try the use the bitmap here, you will get null.&#xD;&#xA;            options.inJustDecodeBounds = true;&#xD;&#xA;            Bitmap bmp = BitmapFactory.decodeFile(filePath, options);&#xD;&#xA;    &#xD;&#xA;            int actualHeight = options.outHeight;&#xD;&#xA;            int actualWidth = options.outWidth;&#xD;&#xA;    &#xD;&#xA;    //      max Height and width values of the compressed image is taken as 816x612&#xD;&#xA;    &#xD;&#xA;            float maxHeight = 816.0f;&#xD;&#xA;            float maxWidth = 612.0f;&#xD;&#xA;            float imgRatio = actualWidth / actualHeight;&#xD;&#xA;            float maxRatio = maxWidth / maxHeight;&#xD;&#xA;    &#xD;&#xA;    //      width and height values are set maintaining the aspect ratio of the image&#xD;&#xA;    &#xD;&#xA;            if (actualHeight > maxHeight || actualWidth > maxWidth) {&#xD;&#xA;                if (imgRatio < maxRatio) {&#xD;&#xA;                    imgRatio = maxHeight / actualHeight;&#xD;&#xA;                    actualWidth = (int) (imgRatio * actualWidth);&#xD;&#xA;                    actualHeight = (int) maxHeight;&#xD;&#xA;                } else if (imgRatio > maxRatio) {&#xD;&#xA;                    imgRatio = maxWidth / actualWidth;&#xD;&#xA;                    actualHeight = (int) (imgRatio * actualHeight);&#xD;&#xA;                    actualWidth = (int) maxWidth;&#xD;&#xA;                } else {&#xD;&#xA;                    actualHeight = (int) maxHeight;&#xD;&#xA;                    actualWidth = (int) maxWidth;&#xD;&#xA;    &#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;    //      setting inSampleSize value allows to load a scaled down version of the original image&#xD;&#xA;    &#xD;&#xA;            options.inSampleSize = calculateInSampleSize(options, actualWidth, actualHeight);&#xD;&#xA;    &#xD;&#xA;    //      inJustDecodeBounds set to false to load the actual bitmap&#xD;&#xA;            options.inJustDecodeBounds = false;&#xD;&#xA;    &#xD;&#xA;    //      this options allow android to claim the bitmap memory if it runs low on memory&#xD;&#xA;            options.inPurgeable = true;&#xD;&#xA;            options.inInputShareable = true;&#xD;&#xA;            options.inTempStorage = new byte[16 * 1024];&#xD;&#xA;    &#xD;&#xA;            try {&#xD;&#xA;    //          load the bitmap from its path&#xD;&#xA;                bmp = BitmapFactory.decodeFile(filePath, options);&#xD;&#xA;            } catch (OutOfMemoryError exception) {&#xD;&#xA;                exception.printStackTrace();&#xD;&#xA;    &#xD;&#xA;            }&#xD;&#xA;            try {&#xD;&#xA;                scaledBitmap = Bitmap.createBitmap(actualWidth, actualHeight, Bitmap.Config.ARGB_8888);&#xD;&#xA;            } catch (OutOfMemoryError exception) {&#xD;&#xA;                exception.printStackTrace();&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            float ratioX = actualWidth / (float) options.outWidth;&#xD;&#xA;            float ratioY = actualHeight / (float) options.outHeight;&#xD;&#xA;            float middleX = actualWidth / 2.0f;&#xD;&#xA;            float middleY = actualHeight / 2.0f;&#xD;&#xA;    &#xD;&#xA;            Matrix scaleMatrix = new Matrix();&#xD;&#xA;            scaleMatrix.setScale(ratioX, ratioY, middleX, middleY);&#xD;&#xA;    &#xD;&#xA;            Canvas canvas = new Canvas(scaledBitmap);&#xD;&#xA;            canvas.setMatrix(scaleMatrix);&#xD;&#xA;            canvas.drawBitmap(bmp, middleX - bmp.getWidth() / 2, middleY - bmp.getHeight() / 2, new Paint(Paint.FILTER_BITMAP_FLAG));&#xD;&#xA;    &#xD;&#xA;    //      check the rotation of the image and display it properly&#xD;&#xA;            ExifInterface exif;&#xD;&#xA;            try {&#xD;&#xA;                exif = new ExifInterface(filePath);&#xD;&#xA;    &#xD;&#xA;                int orientation = exif.getAttributeInt(&#xD;&#xA;                        ExifInterface.TAG_ORIENTATION, 0);&#xD;&#xA;                Log.d(""EXIF"", ""Exif: "" + orientation);&#xD;&#xA;                Matrix matrix = new Matrix();&#xD;&#xA;                if (orientation == 6) {&#xD;&#xA;                    matrix.postRotate(90);&#xD;&#xA;                    Log.d(""EXIF"", ""Exif: "" + orientation);&#xD;&#xA;                } else if (orientation == 3) {&#xD;&#xA;                    matrix.postRotate(180);&#xD;&#xA;                    Log.d(""EXIF"", ""Exif: "" + orientation);&#xD;&#xA;                } else if (orientation == 8) {&#xD;&#xA;                    matrix.postRotate(270);&#xD;&#xA;                    Log.d(""EXIF"", ""Exif: "" + orientation);&#xD;&#xA;                }&#xD;&#xA;                scaledBitmap = Bitmap.createBitmap(scaledBitmap, 0, 0,&#xD;&#xA;                        scaledBitmap.getWidth(), scaledBitmap.getHeight(), matrix,&#xD;&#xA;                        true);&#xD;&#xA;            } catch (IOException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            FileOutputStream out = null;&#xD;&#xA;            String filename = getFilename();&#xD;&#xA;            try {&#xD;&#xA;                out = new FileOutputStream(filename);&#xD;&#xA;    &#xD;&#xA;    //          write the compressed bitmap at the destination specified by filename.&#xD;&#xA;                scaledBitmap.compress(Bitmap.CompressFormat.JPEG, 80, out);&#xD;&#xA;    &#xD;&#xA;            } catch (FileNotFoundException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            return filename;&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public String getFilename() {&#xD;&#xA;            File file = new File(Environment.getExternalStorageDirectory().getPath(), ""MyFolder/Images"");&#xD;&#xA;            if (!file.exists()) {&#xD;&#xA;                file.mkdirs();&#xD;&#xA;            }&#xD;&#xA;            String uriSting = (file.getAbsolutePath() + ""/"" + System.currentTimeMillis() + "".jpg"");&#xD;&#xA;            return uriSting;&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private String getRealPathFromURI(String contentURI) {&#xD;&#xA;            Uri contentUri = Uri.parse(contentURI);&#xD;&#xA;            Cursor cursor = getContentResolver().query(contentUri, null, null, null, null);&#xD;&#xA;            if (cursor == null) {&#xD;&#xA;                return contentUri.getPath();&#xD;&#xA;            } else {&#xD;&#xA;                cursor.moveToFirst();&#xD;&#xA;                int index = cursor.getColumnIndex(MediaStore.Images.ImageColumns.DATA);&#xD;&#xA;                return cursor.getString(index);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public int calculateInSampleSize(BitmapFactory.Options options, int reqWidth, int reqHeight) {&#xD;&#xA;            final int height = options.outHeight;&#xD;&#xA;            final int width = options.outWidth;&#xD;&#xA;            int inSampleSize = 1;&#xD;&#xA;    &#xD;&#xA;            if (height > reqHeight || width > reqWidth) {&#xD;&#xA;                final int heightRatio = Math.round((float) height / (float) reqHeight);&#xD;&#xA;                final int widthRatio = Math.round((float) width / (float) reqWidth);&#xD;&#xA;                inSampleSize = heightRatio < widthRatio ? heightRatio : widthRatio;&#xD;&#xA;            }&#xD;&#xA;            final float totalPixels = width * height;&#xD;&#xA;            final float totalReqPixelsCap = reqWidth * reqHeight * 2;&#xD;&#xA;            while (totalPixels / (inSampleSize * inSampleSize) > totalReqPixelsCap) {&#xD;&#xA;                inSampleSize++;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            return inSampleSize;&#xD;&#xA;        }"
-1215409948733236595,163,5,"    (function() {&#xD;&#xA;        var width, height, largeHeader, canvas, ctx, points, target, animateHeader = true;&#xD;&#xA;        // Main&#xD;&#xA;        initHeader();&#xD;&#xA;        initAnimation();&#xD;&#xA;        addListeners();&#xD;&#xA;        function initHeader() {&#xD;&#xA;            width = window.innerWidth;&#xD;&#xA;            height = window.innerHeight;&#xD;&#xA;            target = {x: width/2, y: height/2};&#xD;&#xA;            largeHeader = document.getElementById('large-header');&#xD;&#xA;            largeHeader.style.height = height+'px';&#xD;&#xA;            canvas = document.getElementById('demo-canvas');&#xD;&#xA;            canvas.width = width;&#xD;&#xA;            canvas.height = height;&#xD;&#xA;            ctx = canvas.getContext('2d');&#xD;&#xA;            // create points&#xD;&#xA;            points = [];&#xD;&#xA;            for(var x = 0; x < width; x = x + width/20) {&#xD;&#xA;                for(var y = 0; y < height; y = y + height/20) {&#xD;&#xA;                    var px = x + Math.random()*width/20;&#xD;&#xA;                    var py = y + Math.random()*height/20;&#xD;&#xA;                    var p = {x: px, originX: px, y: py, originY: py };&#xD;&#xA;                    points.push(p);&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;            // for each point find the 5 closest points&#xD;&#xA;            for(var i = 0; i < points.length; i++) {&#xD;&#xA;                var closest = [];&#xD;&#xA;                var p1 = points[i];&#xD;&#xA;                for(var j = 0; j < points.length; j++) {&#xD;&#xA;                    var p2 = points[j]&#xD;&#xA;                    if(!(p1 == p2)) {&#xD;&#xA;                        var placed = false;&#xD;&#xA;                        for(var k = 0; k < 5; k++) {&#xD;&#xA;                            if(!placed) {&#xD;&#xA;                                if(closest[k] == undefined) {&#xD;&#xA;                                    closest[k] = p2;&#xD;&#xA;                                    placed = true;&#xD;&#xA;                                }&#xD;&#xA;                            }&#xD;&#xA;                        }&#xD;&#xA;                        for(var k = 0; k < 5; k++) {&#xD;&#xA;                            if(!placed) {&#xD;&#xA;                                if(getDistance(p1, p2) < getDistance(p1, closest[k])) {&#xD;&#xA;                                    closest[k] = p2;&#xD;&#xA;                                    placed = true;&#xD;&#xA;                                }&#xD;&#xA;                            }&#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;                p1.closest = closest;&#xD;&#xA;            }&#xD;&#xA;            // assign a circle to each point&#xD;&#xA;            for(var i in points) {&#xD;&#xA;                var c = new Circle(points[i], 2+Math.random()*2, 'rgba(255,255,255,0.3)');&#xD;&#xA;                points[i].circle = c;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        // Event handling&#xD;&#xA;        function addListeners() {&#xD;&#xA;            if(!('ontouchstart' in window)) {&#xD;&#xA;                window.addEventListener('mousemove', mouseMove);&#xD;&#xA;            }&#xD;&#xA;            window.addEventListener('scroll', scrollCheck);&#xD;&#xA;            window.addEventListener('resize', resize);&#xD;&#xA;        }&#xD;&#xA;        function mouseMove(e) {&#xD;&#xA;            var posx = posy = 0;&#xD;&#xA;            if (e.pageX || e.pageY) {&#xD;&#xA;                posx = e.pageX;&#xD;&#xA;                posy = e.pageY;&#xD;&#xA;            }&#xD;&#xA;            else if (e.clientX || e.clientY)    {&#xD;&#xA;                posx = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;&#xD;&#xA;                posy = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;&#xD;&#xA;            }&#xD;&#xA;            target.x = posx;&#xD;&#xA;            target.y = posy;&#xD;&#xA;        }&#xD;&#xA;        function scrollCheck() {&#xD;&#xA;            if(document.body.scrollTop > height) animateHeader = false;&#xD;&#xA;            else animateHeader = true;&#xD;&#xA;        }&#xD;&#xA;        function resize() {&#xD;&#xA;            width = window.innerWidth;&#xD;&#xA;            height = window.innerHeight;&#xD;&#xA;            largeHeader.style.height = height+'px';&#xD;&#xA;            canvas.width = width;&#xD;&#xA;            canvas.height = height;&#xD;&#xA;        }&#xD;&#xA;        // animation&#xD;&#xA;        function initAnimation() {&#xD;&#xA;            animate();&#xD;&#xA;            for(var i in points) {&#xD;&#xA;                shiftPoint(points[i]);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        function animate() {&#xD;&#xA;            if(animateHeader) {&#xD;&#xA;                ctx.clearRect(0,0,width,height);&#xD;&#xA;                for(var i in points) {&#xD;&#xA;                    // detect points in range&#xD;&#xA;                    if(Math.abs(getDistance(target, points[i])) < 4000) {&#xD;&#xA;                        points[i].active = 0.3;&#xD;&#xA;                        points[i].circle.active = 0.6;&#xD;&#xA;                    } else if(Math.abs(getDistance(target, points[i])) < 20000) {&#xD;&#xA;                        points[i].active = 0.1;&#xD;&#xA;                        points[i].circle.active = 0.3;&#xD;&#xA;                    } else if(Math.abs(getDistance(target, points[i])) < 40000) {&#xD;&#xA;                        points[i].active = 0.02;&#xD;&#xA;                        points[i].circle.active = 0.1;&#xD;&#xA;                    } else {&#xD;&#xA;                        points[i].active = 0;&#xD;&#xA;                        points[i].circle.active = 0;&#xD;&#xA;                    }&#xD;&#xA;                    drawLines(points[i]);&#xD;&#xA;                    points[i].circle.draw();&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;            requestAnimationFrame(animate);&#xD;&#xA;        }&#xD;&#xA;        function shiftPoint(p) {&#xD;&#xA;            TweenLite.to(p, 1+1*Math.random(), {x:p.originX-50+Math.random()*100,&#xD;&#xA;                y: p.originY-50+Math.random()*100, ease:Circ.easeInOut,&#xD;&#xA;                onComplete: function() {&#xD;&#xA;                    shiftPoint(p);&#xD;&#xA;                }});&#xD;&#xA;        }&#xD;&#xA;        // Canvas manipulation&#xD;&#xA;        function drawLines(p) {&#xD;&#xA;            if(!p.active) return;&#xD;&#xA;            for(var i in p.closest) {&#xD;&#xA;                ctx.beginPath();&#xD;&#xA;                ctx.moveTo(p.x, p.y);&#xD;&#xA;                ctx.lineTo(p.closest[i].x, p.closest[i].y);&#xD;&#xA;                ctx.strokeStyle = 'rgba(156,217,249,'+ p.active+')';&#xD;&#xA;                ctx.stroke();&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        function Circle(pos,rad,color) {&#xD;&#xA;            var _this = this;&#xD;&#xA;            // constructor&#xD;&#xA;            (function() {&#xD;&#xA;                _this.pos = pos || null;&#xD;&#xA;                _this.radius = rad || null;&#xD;&#xA;                _this.color = color || null;&#xD;&#xA;            })();&#xD;&#xA;            this.draw = function() {&#xD;&#xA;                if(!_this.active) return;&#xD;&#xA;                ctx.beginPath();&#xD;&#xA;                ctx.arc(_this.pos.x, _this.pos.y, _this.radius, 0, 2 * Math.PI, false);&#xD;&#xA;                ctx.fillStyle = 'rgba(156,217,249,'+ _this.active+')';&#xD;&#xA;                ctx.fill();&#xD;&#xA;            };&#xD;&#xA;        }&#xD;&#xA;        // Util&#xD;&#xA;        function getDistance(p1, p2) {&#xD;&#xA;            return Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2);&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;    })();"
-3385713842963048302,163,5,"    public class SimpleGestureFilter extends SimpleOnGestureListener {&#xD;&#xA;    &#xD;&#xA;    	public final static int SWIPE_UP = 1;&#xD;&#xA;    	public final static int SWIPE_DOWN = 2;&#xD;&#xA;    	public final static int SWIPE_LEFT = 3;&#xD;&#xA;    	public final static int SWIPE_RIGHT = 4;&#xD;&#xA;    &#xD;&#xA;    	public final static int MODE_TRANSPARENT = 0;&#xD;&#xA;    	public final static int MODE_SOLID = 1;&#xD;&#xA;    	public final static int MODE_DYNAMIC = 2;&#xD;&#xA;    &#xD;&#xA;    	private final static int ACTION_FAKE = -13; // just an unlikely number&#xD;&#xA;    	private int swipe_Min_Distance = 100;&#xD;&#xA;    	private int swipe_Max_Distance = 350;&#xD;&#xA;    	private int swipe_Min_Velocity = 100;&#xD;&#xA;    &#xD;&#xA;    	private int mode = MODE_DYNAMIC;&#xD;&#xA;    	private boolean running = true;&#xD;&#xA;    	private boolean tapIndicator = false;&#xD;&#xA;    &#xD;&#xA;    	private Activity context;&#xD;&#xA;    	private GestureDetector detector;&#xD;&#xA;    	private SimpleGestureListener listener;&#xD;&#xA;    &#xD;&#xA;    	public SimpleGestureFilter(Activity context, SimpleGestureListener sgl) {&#xD;&#xA;    &#xD;&#xA;    		this.context = context;&#xD;&#xA;    		this.detector = new GestureDetector(context, this);&#xD;&#xA;    		this.listener = sgl;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public void onTouchEvent(MotionEvent event) {&#xD;&#xA;    &#xD;&#xA;    		if (!this.running)&#xD;&#xA;    			return;&#xD;&#xA;    &#xD;&#xA;    		boolean result = this.detector.onTouchEvent(event);&#xD;&#xA;    &#xD;&#xA;    		if (this.mode == MODE_SOLID)&#xD;&#xA;    			event.setAction(MotionEvent.ACTION_CANCEL);&#xD;&#xA;    		else if (this.mode == MODE_DYNAMIC) {&#xD;&#xA;    &#xD;&#xA;    			if (event.getAction() == ACTION_FAKE)&#xD;&#xA;    				event.setAction(MotionEvent.ACTION_UP);&#xD;&#xA;    			else if (result)&#xD;&#xA;    				event.setAction(MotionEvent.ACTION_CANCEL);&#xD;&#xA;    			else if (this.tapIndicator) {&#xD;&#xA;    				event.setAction(MotionEvent.ACTION_DOWN);&#xD;&#xA;    				this.tapIndicator = false;&#xD;&#xA;    			}&#xD;&#xA;    &#xD;&#xA;    		}&#xD;&#xA;    		// else just do nothing, it's Transparent&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public void setMode(int m) {&#xD;&#xA;    		this.mode = m;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public int getMode() {&#xD;&#xA;    		return this.mode;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public void setEnabled(boolean status) {&#xD;&#xA;    		this.running = status;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public void setSwipeMaxDistance(int distance) {&#xD;&#xA;    		this.swipe_Max_Distance = distance;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public void setSwipeMinDistance(int distance) {&#xD;&#xA;    		this.swipe_Min_Distance = distance;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public void setSwipeMinVelocity(int distance) {&#xD;&#xA;    		this.swipe_Min_Velocity = distance;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public int getSwipeMaxDistance() {&#xD;&#xA;    		return this.swipe_Max_Distance;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public int getSwipeMinDistance() {&#xD;&#xA;    		return this.swipe_Min_Distance;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public int getSwipeMinVelocity() {&#xD;&#xA;    		return this.swipe_Min_Velocity;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	@Override&#xD;&#xA;    	public boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX,&#xD;&#xA;    			float velocityY) {&#xD;&#xA;    &#xD;&#xA;    		final float xDistance = Math.abs(e1.getX() - e2.getX());&#xD;&#xA;    		final float yDistance = Math.abs(e1.getY() - e2.getY());&#xD;&#xA;    &#xD;&#xA;    		if (xDistance > this.swipe_Max_Distance&#xD;&#xA;    				|| yDistance > this.swipe_Max_Distance)&#xD;&#xA;    			return false;&#xD;&#xA;    &#xD;&#xA;    		velocityX = Math.abs(velocityX);&#xD;&#xA;    		velocityY = Math.abs(velocityY);&#xD;&#xA;    		boolean result = false;&#xD;&#xA;    &#xD;&#xA;    		if (velocityX > this.swipe_Min_Velocity&#xD;&#xA;    				&& xDistance > this.swipe_Min_Distance) {&#xD;&#xA;    			if (e1.getX() > e2.getX()) // right to left&#xD;&#xA;    				this.listener.onSwipe(SWIPE_LEFT);&#xD;&#xA;    			else&#xD;&#xA;    				this.listener.onSwipe(SWIPE_RIGHT);&#xD;&#xA;    &#xD;&#xA;    			result = true;&#xD;&#xA;    		} else if (velocityY > this.swipe_Min_Velocity&#xD;&#xA;    				&& yDistance > this.swipe_Min_Distance) {&#xD;&#xA;    			if (e1.getY() > e2.getY()) // bottom to up&#xD;&#xA;    				this.listener.onSwipe(SWIPE_UP);&#xD;&#xA;    			else&#xD;&#xA;    				this.listener.onSwipe(SWIPE_DOWN);&#xD;&#xA;    &#xD;&#xA;    			result = true;&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		return result;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	@Override&#xD;&#xA;    	public boolean onSingleTapUp(MotionEvent e) {&#xD;&#xA;    		this.tapIndicator = true;&#xD;&#xA;    		return false;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	@Override&#xD;&#xA;    	public boolean onDoubleTap(MotionEvent arg) {&#xD;&#xA;    		this.listener.onDoubleTap();&#xD;&#xA;    		;&#xD;&#xA;    		return true;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	@Override&#xD;&#xA;    	public boolean onDoubleTapEvent(MotionEvent arg) {&#xD;&#xA;    		return true;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	@Override&#xD;&#xA;    	public boolean onSingleTapConfirmed(MotionEvent arg) {&#xD;&#xA;    &#xD;&#xA;    		if (this.mode == MODE_DYNAMIC) { // we owe an ACTION_UP, so we fake an&#xD;&#xA;    			arg.setAction(ACTION_FAKE); // action which will be converted to an&#xD;&#xA;    										// ACTION_UP later.&#xD;&#xA;    			this.context.dispatchTouchEvent(arg);&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		return false;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	static interface SimpleGestureListener {&#xD;&#xA;    		void onSwipe(int direction);&#xD;&#xA;    &#xD;&#xA;    		void onDoubleTap();&#xD;&#xA;    	}&#xD;&#xA;    }"
8347177713365853519,164,5,"    public class ThreeFragment extends Fragment implements&#xD;&#xA;            android.widget.CompoundButton.OnCheckedChangeListener {&#xD;&#xA;    &#xD;&#xA;        ListView lv2;&#xD;&#xA;        ArrayList<Planet> planetList;&#xD;&#xA;        ListView lv;&#xD;&#xA;    &#xD;&#xA;        ArrayList<Birra> birraList;&#xD;&#xA;        BirraAdapter biAdapter;&#xD;&#xA;        PlanetAdapter plAdapter;&#xD;&#xA;        Planet p;&#xD;&#xA;        String myInt="""";&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        PlanetAdapter.PlanetHolder holder;&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        public ThreeFragment() {&#xD;&#xA;            // Required empty public constructor&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public View onCreateView(LayoutInflater inflater, ViewGroup container,&#xD;&#xA;                                 Bundle savedInstanceState) {&#xD;&#xA;            // Inflate the layout for this fragment&#xD;&#xA;    &#xD;&#xA;            final ViewGroup rootView = (ViewGroup) inflater.inflate(R.layout.fragment_three, container, false);&#xD;&#xA;    &#xD;&#xA;            Button mButton = (Button) rootView.findViewById(R.id.button2);&#xD;&#xA;            mButton.setOnClickListener(new View.OnClickListener() {&#xD;&#xA;                public void onClick(View v) {&#xD;&#xA;                    MyListFragment mlf=new MyListFragment();&#xD;&#xA;    &#xD;&#xA;                    mlf.showResult(v);&#xD;&#xA;                  // MyListFragment.showResult(v);&#xD;&#xA;                    showResult2(v);&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;                }&#xD;&#xA;            });&#xD;&#xA;            //return inflater.inflate(R.layout.fragment_list2, container, false);&#xD;&#xA;            return rootView;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {&#xD;&#xA;            super.onViewCreated(view, savedInstanceState);&#xD;&#xA;    &#xD;&#xA;            lv2 = (ListView) getView().findViewById(R.id.listview2);&#xD;&#xA;            displayBirraList();&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        private void displayBirraList() {&#xD;&#xA;    &#xD;&#xA;            birraList = new ArrayList<Birra>();&#xD;&#xA;            birraList.add(new Birra(""Paulaner"", 6, ""€""));&#xD;&#xA;            birraList.add(new Birra(""Forst"", 7, ""€""));&#xD;&#xA;            birraList.add(new Birra(""Peroni"", 5, ""€""));&#xD;&#xA;            birraList.add(new Birra(""Corona"", 5, ""€""));&#xD;&#xA;            birraList.add(new Birra(""Nastro Azzurro"", 4, ""€""));&#xD;&#xA;            biAdapter = new BirraAdapter(birraList, getContext()) {&#xD;&#xA;                @Override&#xD;&#xA;                public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {&#xD;&#xA;                    int pos = lv2.getPositionForView(buttonView);&#xD;&#xA;                    if (pos != ListView.INVALID_POSITION) {&#xD;&#xA;                        Birra b = birraList.get(pos);&#xD;&#xA;                        b.setSelected(isChecked);&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    			/*Toast.makeText(&#xD;&#xA;                    getActivity(),&#xD;&#xA;                    ""Clicked on Pizza: "" + p.getName() + "". State: is ""&#xD;&#xA;                            + isChecked, Toast.LENGTH_SHORT).show();*/&#xD;&#xA;                    }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            };&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            lv2.setAdapter(biAdapter);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    		/*int pos = lv.getPositionForView(buttonView);&#xD;&#xA;    		if (pos != ListView.INVALID_POSITION) {&#xD;&#xA;    			Planet p = planetList.get(pos);&#xD;&#xA;    			p.setSelected(isChecked);&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    			*//**//**//**//*Toast.makeText(&#xD;&#xA;                    getActivity(),&#xD;&#xA;                    ""Clicked on Planet: "" + p.getName() + "". State: is ""&#xD;&#xA;                            + isChecked, Toast.LENGTH_SHORT).show();*//**//**//**//*&#xD;&#xA;    		}&#xD;&#xA;    */&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        public void showResult2(View v) {&#xD;&#xA;            String result = ""Selected Product are :"";&#xD;&#xA;            int totalAmount = 0;&#xD;&#xA;           // String a = """";&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            for (Birra b : biAdapter.getBox()) {&#xD;&#xA;    &#xD;&#xA;                if (b.selected) {&#xD;&#xA;    &#xD;&#xA;                    result += ""\n"" + b.name + "" "" + b.distance + ""€"" + ""q.tà :"" + b.getQuantità();&#xD;&#xA;                    int quantitaInt = Integer.parseInt(b.getQuantità());&#xD;&#xA;                    totalAmount += b.distance * quantitaInt;&#xD;&#xA;                  //  a=String.valueOf(totalAmount);&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;          /*  for (Planet p : plAdapter.getBox()) {&#xD;&#xA;                if (p.isSelected()) {&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;                    result += ""\n"" + p.getName() + "" "" + p.getDistance() + ""€"" + ""q.tà :"" + p.getQuantità();&#xD;&#xA;                    int quantitaInt = Integer.parseInt(p.getQuantità());&#xD;&#xA;                    //totalAmount2+=p.distance * quantitaInt;&#xD;&#xA;                    //z=String.valueOf(totalAmount2);&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;                }&#xD;&#xA;            }*/&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            Toast.makeText(getActivity(), result + ""\n"" +myInt + ""\n"" + ""Total Amount:="" + totalAmount + ""€"", Toast.LENGTH_LONG).show();&#xD;&#xA;               Bundle bun2 = new Bundle();&#xD;&#xA;                bun2.putString(""scelta2"", result);&#xD;&#xA;                TwoFragment fgsearch2 = new TwoFragment();&#xD;&#xA;                fgsearch2.setArguments(bun2);&#xD;&#xA;                android.support.v4.app.FragmentTransaction transaction2 = getActivity().getSupportFragmentManager().beginTransaction();&#xD;&#xA;                transaction2.replace(R.id.content_main, fgsearch2);&#xD;&#xA;                transaction2.commit();&#xD;&#xA;    &#xD;&#xA;                Bundle bun = new Bundle();&#xD;&#xA;               // bun.putString(""totalebirre"", a);&#xD;&#xA;            bun.putInt(""totalebirre"", totalAmount);&#xD;&#xA;                TwoFragment fgsearch = new TwoFragment();&#xD;&#xA;                fgsearch.setArguments(bun);&#xD;&#xA;                android.support.v4.app.FragmentTransaction transaction = getActivity().getSupportFragmentManager().beginTransaction();&#xD;&#xA;                transaction.replace(R.id.content_main2, fgsearch);&#xD;&#xA;                transaction.commit();&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    }"
-6436567475961792568,165,5,"    //Function to run a process as active user from windows service&#xD;&#xA;    void ImpersonateActiveUserAndRun(WCHAR* path, WCHAR* args)&#xD;&#xA;    {&#xD;&#xA;    	DWORD session_id = -1;&#xD;&#xA;    	DWORD session_count = 0;&#xD;&#xA;    &#xD;&#xA;    	WTS_SESSION_INFOA *pSession = NULL;&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    	if (WTSEnumerateSessions(WTS_CURRENT_SERVER_HANDLE, 0, 1, &pSession, &session_count))&#xD;&#xA;    	{&#xD;&#xA;    		//log success&#xD;&#xA;    	}&#xD;&#xA;    	else&#xD;&#xA;    	{&#xD;&#xA;    		//log error&#xD;&#xA;    		return;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	for (int i = 0; i < session_count; i++)&#xD;&#xA;    	{&#xD;&#xA;    		session_id = pSession[i].SessionId;&#xD;&#xA;    &#xD;&#xA;    		WTS_CONNECTSTATE_CLASS wts_connect_state = WTSDisconnected;&#xD;&#xA;    		WTS_CONNECTSTATE_CLASS* ptr_wts_connect_state = NULL;&#xD;&#xA;    &#xD;&#xA;    		DWORD bytes_returned = 0;&#xD;&#xA;    		if (::WTSQuerySessionInformation(&#xD;&#xA;    			WTS_CURRENT_SERVER_HANDLE,&#xD;&#xA;    			session_id,&#xD;&#xA;    			WTSConnectState,&#xD;&#xA;    			reinterpret_cast<LPTSTR*>(&ptr_wts_connect_state),&#xD;&#xA;    			&bytes_returned))&#xD;&#xA;    		{&#xD;&#xA;    			wts_connect_state = *ptr_wts_connect_state;&#xD;&#xA;    			::WTSFreeMemory(ptr_wts_connect_state);&#xD;&#xA;    			if (wts_connect_state != WTSActive) continue;&#xD;&#xA;    		}&#xD;&#xA;    		else&#xD;&#xA;    		{&#xD;&#xA;    			//log error&#xD;&#xA;    			continue;&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		HANDLE hImpersonationToken;&#xD;&#xA;    &#xD;&#xA;    		if (!WTSQueryUserToken(session_id, &hImpersonationToken))&#xD;&#xA;    		{&#xD;&#xA;    			//log error&#xD;&#xA;    			continue;&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    		//Get real token from impersonation token&#xD;&#xA;    		DWORD neededSize1 = 0;&#xD;&#xA;    		HANDLE *realToken = new HANDLE;&#xD;&#xA;    		if (GetTokenInformation(hImpersonationToken, (::TOKEN_INFORMATION_CLASS) TokenLinkedToken, realToken, sizeof(HANDLE), &neededSize1))&#xD;&#xA;    		{&#xD;&#xA;    			CloseHandle(hImpersonationToken);&#xD;&#xA;    			hImpersonationToken = *realToken;&#xD;&#xA;    		}&#xD;&#xA;    		else&#xD;&#xA;    		{&#xD;&#xA;    			//log error&#xD;&#xA;    			continue;&#xD;&#xA;    		}&#xD;&#xA;    		&#xD;&#xA;    &#xD;&#xA;    		HANDLE hUserToken;&#xD;&#xA;    &#xD;&#xA;    		if (!DuplicateTokenEx(hImpersonationToken,&#xD;&#xA;    			//0,&#xD;&#xA;    			//MAXIMUM_ALLOWED,&#xD;&#xA;    			TOKEN_ASSIGN_PRIMARY | TOKEN_ALL_ACCESS | MAXIMUM_ALLOWED,&#xD;&#xA;    			NULL,&#xD;&#xA;    			SecurityImpersonation,&#xD;&#xA;    			TokenPrimary,&#xD;&#xA;    			&hUserToken))&#xD;&#xA;    		{&#xD;&#xA;    			//log error&#xD;&#xA;    			continue;&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		// Get user name of this process&#xD;&#xA;    		//LPTSTR pUserName = NULL;&#xD;&#xA;    		WCHAR* pUserName;&#xD;&#xA;    		DWORD user_name_len = 0;&#xD;&#xA;    &#xD;&#xA;    		if (WTSQuerySessionInformationW(WTS_CURRENT_SERVER_HANDLE, session_id, WTSUserName, &pUserName, &user_name_len))&#xD;&#xA;    		{&#xD;&#xA;    			//log username contained in pUserName WCHAR string&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		//Free memory                         &#xD;&#xA;    		if (pUserName) WTSFreeMemory(pUserName);&#xD;&#xA;    &#xD;&#xA;    		ImpersonateLoggedOnUser(hUserToken);&#xD;&#xA;    		&#xD;&#xA;    		STARTUPINFOW StartupInfo;&#xD;&#xA;    		GetStartupInfoW(&StartupInfo);&#xD;&#xA;    		StartupInfo.cb = sizeof(STARTUPINFOW);&#xD;&#xA;    		//StartupInfo.lpDesktop = ""winsta0\\default"";&#xD;&#xA;    		&#xD;&#xA;    		PROCESS_INFORMATION processInfo;&#xD;&#xA;    &#xD;&#xA;    		SECURITY_ATTRIBUTES Security1;&#xD;&#xA;    		Security1.nLength = sizeof SECURITY_ATTRIBUTES;&#xD;&#xA;    &#xD;&#xA;    		SECURITY_ATTRIBUTES Security2;&#xD;&#xA;    		Security2.nLength = sizeof SECURITY_ATTRIBUTES;&#xD;&#xA;    &#xD;&#xA;    		void* lpEnvironment = NULL;&#xD;&#xA;    &#xD;&#xA;    		// Get all necessary environment variables of logged in user&#xD;&#xA;    		// to pass them to the new process&#xD;&#xA;    		BOOL resultEnv = CreateEnvironmentBlock(&lpEnvironment, hUserToken, FALSE);&#xD;&#xA;    		if (!resultEnv)&#xD;&#xA;    		{&#xD;&#xA;    			//log error&#xD;&#xA;    			continue;&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		WCHAR PP[1024]; //path and parameters&#xD;&#xA;    		ZeroMemory(PP, 1024 * sizeof WCHAR);&#xD;&#xA;    		wcscpy(PP, path);&#xD;&#xA;    		wcscat(PP, L"" "");&#xD;&#xA;    		wcscat(PP, args);&#xD;&#xA;    &#xD;&#xA;    		// Start the process on behalf of the current user &#xD;&#xA;    		BOOL result = CreateProcessAsUserW(hUserToken, &#xD;&#xA;    			NULL,&#xD;&#xA;    			PP,&#xD;&#xA;    			//&Security1,&#xD;&#xA;    			//&Security2,&#xD;&#xA;    			NULL,&#xD;&#xA;    			NULL,&#xD;&#xA;    			FALSE, &#xD;&#xA;    			NORMAL_PRIORITY_CLASS | CREATE_NEW_CONSOLE,&#xD;&#xA;    			//lpEnvironment,&#xD;&#xA;    			NULL,&#xD;&#xA;    			//""C:\\ProgramData\\some_dir"",&#xD;&#xA;    			NULL,&#xD;&#xA;    			&StartupInfo,&#xD;&#xA;    			&processInfo);&#xD;&#xA;    &#xD;&#xA;    		if (!result)&#xD;&#xA;    		{&#xD;&#xA;    			//log error&#xD;&#xA;    		}&#xD;&#xA;    		else&#xD;&#xA;    		{&#xD;&#xA;    			//log success&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		DestroyEnvironmentBlock(lpEnvironment);&#xD;&#xA;    &#xD;&#xA;    		CloseHandle(hImpersonationToken);&#xD;&#xA;    		CloseHandle(hUserToken);&#xD;&#xA;    		CloseHandle(realToken);&#xD;&#xA;    &#xD;&#xA;    		RevertToSelf();&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	WTSFreeMemory(pSession);&#xD;&#xA;    }"
-3904919059309997257,167,5,"    public class LoginActivity extends Activity {&#xD;&#xA;        private static final String TAG = RegisterActivity.class.getSimpleName();&#xD;&#xA;        private Button btnLogin;&#xD;&#xA;        private Button btnLinkToRegister;&#xD;&#xA;        private EditText inputEmail;&#xD;&#xA;        private EditText inputPassword;&#xD;&#xA;        private ProgressDialog pDialog;&#xD;&#xA;        private SessionManager session;&#xD;&#xA;        private SQLiteHandler db;&#xD;&#xA;     &#xD;&#xA;        @Override&#xD;&#xA;        public void onCreate(Bundle savedInstanceState) {&#xD;&#xA;            super.onCreate(savedInstanceState);&#xD;&#xA;            setContentView(R.layout.activity_login);&#xD;&#xA;     &#xD;&#xA;            inputEmail = (EditText) findViewById(R.id.email);&#xD;&#xA;            inputPassword = (EditText) findViewById(R.id.password);&#xD;&#xA;            btnLogin = (Button) findViewById(R.id.btnLogin);&#xD;&#xA;            btnLinkToRegister = (Button) findViewById(R.id.btnLinkToRegisterScreen);&#xD;&#xA;     &#xD;&#xA;            // Progress dialog&#xD;&#xA;            pDialog = new ProgressDialog(this);&#xD;&#xA;            pDialog.setCancelable(false);&#xD;&#xA;     &#xD;&#xA;            // SQLite database handler&#xD;&#xA;            db = new SQLiteHandler(getApplicationContext());&#xD;&#xA;     &#xD;&#xA;            // Session manager&#xD;&#xA;            session = new SessionManager(getApplicationContext());&#xD;&#xA;     &#xD;&#xA;            // Check if user is already logged in or not&#xD;&#xA;            if (session.isLoggedIn()) {&#xD;&#xA;                // User is already logged in. Take him to main activity&#xD;&#xA;                Intent intent = new Intent(LoginActivity.this, MainActivity.class);&#xD;&#xA;                startActivity(intent);&#xD;&#xA;                finish();&#xD;&#xA;            }&#xD;&#xA;     &#xD;&#xA;            // Login button Click Event&#xD;&#xA;            btnLogin.setOnClickListener(new View.OnClickListener() {&#xD;&#xA;     &#xD;&#xA;                public void onClick(View view) {&#xD;&#xA;                    String email = inputEmail.getText().toString().trim();&#xD;&#xA;                    String password = inputPassword.getText().toString().trim();&#xD;&#xA;     &#xD;&#xA;                    // Check for empty data in the form&#xD;&#xA;                    if (!email.isEmpty() && !password.isEmpty()) {&#xD;&#xA;                        // login user&#xD;&#xA;                        checkLogin(email, password);&#xD;&#xA;                    } else {&#xD;&#xA;                        // Prompt user to enter credentials&#xD;&#xA;                        Toast.makeText(getApplicationContext(),&#xD;&#xA;                                ""Please enter the credentials!"", Toast.LENGTH_LONG)&#xD;&#xA;                                .show();&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;     &#xD;&#xA;            });&#xD;&#xA;     &#xD;&#xA;            // Link to Register Screen&#xD;&#xA;            btnLinkToRegister.setOnClickListener(new View.OnClickListener() {&#xD;&#xA;     &#xD;&#xA;                public void onClick(View view) {&#xD;&#xA;                    Intent i = new Intent(getApplicationContext(),&#xD;&#xA;                            RegisterActivity.class);&#xD;&#xA;                    startActivity(i);&#xD;&#xA;                    finish();&#xD;&#xA;                }&#xD;&#xA;            });&#xD;&#xA;     &#xD;&#xA;        }&#xD;&#xA;     &#xD;&#xA;        /**&#xD;&#xA;         * function to verify login details in mysql db&#xD;&#xA;         * */&#xD;&#xA;        private void checkLogin(final String email, final String password) {&#xD;&#xA;            // Tag used to cancel the request&#xD;&#xA;            String tag_string_req = ""req_login"";&#xD;&#xA;     &#xD;&#xA;            pDialog.setMessage(""Logging in ..."");&#xD;&#xA;            showDialog();&#xD;&#xA;     &#xD;&#xA;            StringRequest strReq = new StringRequest(Method.POST,&#xD;&#xA;                    AppConfig.URL_LOGIN, new Response.Listener<String>() {&#xD;&#xA;     &#xD;&#xA;                @Override&#xD;&#xA;                public void onResponse(String response) {&#xD;&#xA;                    Log.d(TAG, ""Login Response: "" + response.toString());&#xD;&#xA;                    hideDialog();&#xD;&#xA;     &#xD;&#xA;                    try {&#xD;&#xA;                        JSONObject jObj = new JSONObject(response);&#xD;&#xA;                        boolean error = jObj.getBoolean(""error"");&#xD;&#xA;     &#xD;&#xA;                        // Check for error node in json&#xD;&#xA;                        if (!error) {&#xD;&#xA;                            // user successfully logged in&#xD;&#xA;                            // Create login session&#xD;&#xA;                            session.setLogin(true);&#xD;&#xA;     &#xD;&#xA;                            // Now store the user in SQLite&#xD;&#xA;                            String uid = jObj.getString(""uid"");&#xD;&#xA;     &#xD;&#xA;                            JSONObject user = jObj.getJSONObject(""user"");&#xD;&#xA;                            String name = user.getString(""name"");&#xD;&#xA;                            String email = user.getString(""email"");&#xD;&#xA;                            String created_at = user&#xD;&#xA;                                    .getString(""created_at"");&#xD;&#xA;     &#xD;&#xA;                            // Inserting row in users table&#xD;&#xA;                            db.addUser(name, email, uid, created_at);&#xD;&#xA;     &#xD;&#xA;                            // Launch main activity&#xD;&#xA;                            Intent intent = new Intent(LoginActivity.this,&#xD;&#xA;                                    MainActivity.class);&#xD;&#xA;                            startActivity(intent);&#xD;&#xA;                            finish();&#xD;&#xA;                        } else {&#xD;&#xA;                            // Error in login. Get the error message&#xD;&#xA;                            String errorMsg = jObj.getString(""error_msg"");&#xD;&#xA;                            Toast.makeText(getApplicationContext(),&#xD;&#xA;                                    errorMsg, Toast.LENGTH_LONG).show();&#xD;&#xA;                        }&#xD;&#xA;                    } catch (JSONException e) {&#xD;&#xA;                        // JSON error&#xD;&#xA;                        e.printStackTrace();&#xD;&#xA;                        Toast.makeText(getApplicationContext(), ""Json error: "" + e.getMessage(), Toast.LENGTH_LONG).show();&#xD;&#xA;                    }&#xD;&#xA;     &#xD;&#xA;                }&#xD;&#xA;            }, new Response.ErrorListener() {&#xD;&#xA;     &#xD;&#xA;                @Override&#xD;&#xA;                public void onErrorResponse(VolleyError error) {&#xD;&#xA;                    Log.e(TAG, ""Login Error: "" + error.getMessage());&#xD;&#xA;                    Toast.makeText(getApplicationContext(),&#xD;&#xA;                            error.getMessage(), Toast.LENGTH_LONG).show();&#xD;&#xA;                    hideDialog();&#xD;&#xA;                }&#xD;&#xA;            }) {&#xD;&#xA;     &#xD;&#xA;                @Override&#xD;&#xA;                protected Map<String, String> getParams() {&#xD;&#xA;                    // Posting parameters to login url&#xD;&#xA;                    Map<String, String> params = new HashMap<String, String>();&#xD;&#xA;                    params.put(""email"", email);&#xD;&#xA;                    params.put(""password"", password);&#xD;&#xA;     &#xD;&#xA;                    return params;&#xD;&#xA;                }&#xD;&#xA;     &#xD;&#xA;            };&#xD;&#xA;     &#xD;&#xA;            // Adding request to request queue&#xD;&#xA;            AppController.getInstance().addToRequestQueue(strReq, tag_string_req);&#xD;&#xA;        }&#xD;&#xA;     &#xD;&#xA;        private void showDialog() {&#xD;&#xA;            if (!pDialog.isShowing())&#xD;&#xA;                pDialog.show();&#xD;&#xA;        }&#xD;&#xA;     &#xD;&#xA;        private void hideDialog() {&#xD;&#xA;            if (pDialog.isShowing())&#xD;&#xA;                pDialog.dismiss();&#xD;&#xA;        }&#xD;&#xA;    }"
-2694045080617003588,169,5,"    import android.app.Activity;&#xD;&#xA;    import android.graphics.Matrix;&#xD;&#xA;    import android.graphics.PointF;&#xD;&#xA;    import android.os.Bundle;&#xD;&#xA;    import android.util.FloatMath;&#xD;&#xA;    import android.util.Log;&#xD;&#xA;    import android.view.MotionEvent;&#xD;&#xA;    import android.view.View;&#xD;&#xA;    import android.view.View.OnTouchListener;&#xD;&#xA;    import android.widget.ImageView;&#xD;&#xA;    &#xD;&#xA;          public class ZoomInZoomOut extends Activity implements OnTouchListener &#xD;&#xA;        {&#xD;&#xA;            private static final String TAG = ""Touch"";&#xD;&#xA;            @SuppressWarnings(""unused"")&#xD;&#xA;            private static final float MIN_ZOOM = 1f,MAX_ZOOM = 1f;&#xD;&#xA;        &#xD;&#xA;            // These matrices will be used to scale points of the image&#xD;&#xA;            Matrix matrix = new Matrix();&#xD;&#xA;            Matrix savedMatrix = new Matrix();&#xD;&#xA;        &#xD;&#xA;            // The 3 states (events) which the user is trying to perform&#xD;&#xA;            static final int NONE = 0;&#xD;&#xA;            static final int DRAG = 1;&#xD;&#xA;            static final int ZOOM = 2;&#xD;&#xA;            int mode = NONE;&#xD;&#xA;        &#xD;&#xA;            // these PointF objects are used to record the point(s) the user is touching&#xD;&#xA;            PointF start = new PointF();&#xD;&#xA;            PointF mid = new PointF();&#xD;&#xA;            float oldDist = 1f;&#xD;&#xA;        &#xD;&#xA;            /** Called when the activity is first created. */&#xD;&#xA;            @Override&#xD;&#xA;            public void onCreate(Bundle savedInstanceState) &#xD;&#xA;            {&#xD;&#xA;                super.onCreate(savedInstanceState);&#xD;&#xA;                setContentView(R.layout.main);&#xD;&#xA;                ImageView view = (ImageView) findViewById(R.id.imageView);&#xD;&#xA;                view.setOnTouchListener(this);&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            @Override&#xD;&#xA;            public boolean onTouch(View v, MotionEvent event) &#xD;&#xA;            {&#xD;&#xA;                ImageView view = (ImageView) v;&#xD;&#xA;                view.setScaleType(ImageView.ScaleType.MATRIX);&#xD;&#xA;                float scale;&#xD;&#xA;        &#xD;&#xA;                dumpEvent(event);&#xD;&#xA;                // Handle touch events here...&#xD;&#xA;        &#xD;&#xA;                switch (event.getAction() & MotionEvent.ACTION_MASK) &#xD;&#xA;                {&#xD;&#xA;                    case MotionEvent.ACTION_DOWN:   // first finger down only&#xD;&#xA;                                                        savedMatrix.set(matrix);&#xD;&#xA;                                                        start.set(event.getX(), event.getY());&#xD;&#xA;                                                        Log.d(TAG, ""mode=DRAG""); // write to LogCat&#xD;&#xA;                                                        mode = DRAG;&#xD;&#xA;                                                        break;&#xD;&#xA;        &#xD;&#xA;                    case MotionEvent.ACTION_UP: // first finger lifted&#xD;&#xA;        &#xD;&#xA;                    case MotionEvent.ACTION_POINTER_UP: // second finger lifted&#xD;&#xA;        &#xD;&#xA;                                                        mode = NONE;&#xD;&#xA;                                                        Log.d(TAG, ""mode=NONE"");&#xD;&#xA;                                                        break;&#xD;&#xA;        &#xD;&#xA;                    case MotionEvent.ACTION_POINTER_DOWN: // first and second finger down&#xD;&#xA;        &#xD;&#xA;                                                        oldDist = spacing(event);&#xD;&#xA;                                                        Log.d(TAG, ""oldDist="" + oldDist);&#xD;&#xA;                                                        if (oldDist > 5f) {&#xD;&#xA;                                                            savedMatrix.set(matrix);&#xD;&#xA;                                                            midPoint(mid, event);&#xD;&#xA;                                                            mode = ZOOM;&#xD;&#xA;                                                            Log.d(TAG, ""mode=ZOOM"");&#xD;&#xA;                                                        }&#xD;&#xA;                                                        break;&#xD;&#xA;        &#xD;&#xA;                    case MotionEvent.ACTION_MOVE:&#xD;&#xA;        &#xD;&#xA;                                                        if (mode == DRAG) &#xD;&#xA;                                                        { &#xD;&#xA;                                                            matrix.set(savedMatrix);&#xD;&#xA;                                                            matrix.postTranslate(event.getX() - start.x, event.getY() - start.y); // create the transformation in the matrix  of points&#xD;&#xA;                                                        } &#xD;&#xA;                                                        else if (mode == ZOOM) &#xD;&#xA;                                                        { &#xD;&#xA;                                                            // pinch zooming&#xD;&#xA;                                                            float newDist = spacing(event);&#xD;&#xA;                                                            Log.d(TAG, ""newDist="" + newDist);&#xD;&#xA;                                                            if (newDist > 5f) &#xD;&#xA;                                                            {&#xD;&#xA;                                                                matrix.set(savedMatrix);&#xD;&#xA;                                                                scale = newDist / oldDist; // setting the scaling of the&#xD;&#xA;                                                                                            // matrix...if scale > 1 means&#xD;&#xA;                                                                                            // zoom in...if scale < 1 means&#xD;&#xA;                                                                                            // zoom out&#xD;&#xA;                                                                matrix.postScale(scale, scale, mid.x, mid.y);&#xD;&#xA;                                                            }&#xD;&#xA;                                                        }&#xD;&#xA;                                                        break;&#xD;&#xA;                }&#xD;&#xA;        &#xD;&#xA;                view.setImageMatrix(matrix); // display the transformation on screen&#xD;&#xA;        &#xD;&#xA;                return true; // indicate event was handled&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            /*&#xD;&#xA;             * --------------------------------------------------------------------------&#xD;&#xA;             * Method: spacing Parameters: MotionEvent Returns: float Description:&#xD;&#xA;             * checks the spacing between the two fingers on touch&#xD;&#xA;             * ----------------------------------------------------&#xD;&#xA;             */&#xD;&#xA;        &#xD;&#xA;            private float spacing(MotionEvent event) &#xD;&#xA;            {&#xD;&#xA;                float x = event.getX(0) - event.getX(1);&#xD;&#xA;                float y = event.getY(0) - event.getY(1);&#xD;&#xA;                return FloatMath.sqrt(x * x + y * y);&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            /*&#xD;&#xA;             * --------------------------------------------------------------------------&#xD;&#xA;             * Method: midPoint Parameters: PointF object, MotionEvent Returns: void&#xD;&#xA;             * Description: calculates the midpoint between the two fingers&#xD;&#xA;             * ------------------------------------------------------------&#xD;&#xA;             */&#xD;&#xA;        &#xD;&#xA;            private void midPoint(PointF point, MotionEvent event) &#xD;&#xA;            {&#xD;&#xA;                float x = event.getX(0) + event.getX(1);&#xD;&#xA;                float y = event.getY(0) + event.getY(1);&#xD;&#xA;                point.set(x / 2, y / 2);&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            /** Show an event in the LogCat view, for debugging */&#xD;&#xA;            private void dumpEvent(MotionEvent event) &#xD;&#xA;            {&#xD;&#xA;                String names[] = { ""DOWN"", ""UP"", ""MOVE"", ""CANCEL"", ""OUTSIDE"",""POINTER_DOWN"", ""POINTER_UP"", ""7?"", ""8?"", ""9?"" };&#xD;&#xA;                StringBuilder sb = new StringBuilder();&#xD;&#xA;                int action = event.getAction();&#xD;&#xA;                int actionCode = action & MotionEvent.ACTION_MASK;&#xD;&#xA;                sb.append(""event ACTION_"").append(names[actionCode]);&#xD;&#xA;        &#xD;&#xA;                if (actionCode == MotionEvent.ACTION_POINTER_DOWN || actionCode == MotionEvent.ACTION_POINTER_UP) &#xD;&#xA;                {&#xD;&#xA;                    sb.append(""(pid "").append(action >> MotionEvent.ACTION_POINTER_ID_SHIFT);&#xD;&#xA;                    sb.append("")"");&#xD;&#xA;                }&#xD;&#xA;        &#xD;&#xA;                sb.append(""["");&#xD;&#xA;                for (int i = 0; i < event.getPointerCount(); i++) &#xD;&#xA;                {&#xD;&#xA;                    sb.append(""#"").append(i);&#xD;&#xA;                    sb.append(""(pid "").append(event.getPointerId(i));&#xD;&#xA;                    sb.append("")="").append((int) event.getX(i));&#xD;&#xA;                    sb.append("","").append((int) event.getY(i));&#xD;&#xA;                    if (i + 1 < event.getPointerCount())&#xD;&#xA;                        sb.append("";"");&#xD;&#xA;                }&#xD;&#xA;        &#xD;&#xA;                sb.append(""]"");&#xD;&#xA;                Log.d(""Touch Events ---------"", sb.toString());&#xD;&#xA;            }&#xD;&#xA;        }"
2224160720556971315,171,5,"    <!doctype html>&#xD;&#xA;    <html>&#xD;&#xA;    <head>&#xD;&#xA;    <meta charset=""UTF-8"">&#xD;&#xA;    <meta name=""viewport"" content=""initial-scale=1.0, user-scalable=no"">&#xD;&#xA;    <meta name=""apple-mobile-web-app-status-bar-style"" content=""black-translucent"">&#xD;&#xA;    <title>Vivid Shop Display</title>&#xD;&#xA;    <link rel=""stylesheet"" href='css/vivid-style.css'>&#xD;&#xA;    <link rel='stylesheet' href='css/scroller.css'>&#xD;&#xA;    <link href=""https://fonts.googleapis.com/css?family=Montserrat"" rel=""stylesheet"">&#xD;&#xA;    </head>&#xD;&#xA;    &#xD;&#xA;    <body>&#xD;&#xA;    <header>&#xD;&#xA;    <div class=""vd-navigation-wrapper"">&#xD;&#xA;       	 <div class=""vd-settings-wrapper"">&#xD;&#xA;        	<div class=""vd-user-settings"">&#xD;&#xA;            </div>&#xD;&#xA;            <div class=""vd-currency-selector"">&#xD;&#xA;            </div>&#xD;&#xA;            <div class=""vd-language-selector"">&#xD;&#xA;            </div>&#xD;&#xA;         </div>&#xD;&#xA;         <div class=""vd-nav-wrapper"">&#xD;&#xA;    			<ul>&#xD;&#xA;    				<li>Shop</li>&#xD;&#xA;    				<li>About</li>&#xD;&#xA;    				<li class=""vd-logo-img""><img src=""img/vivid_logo.png""/></li>&#xD;&#xA;    				<li>Lookbook</li>&#xD;&#xA;    				<li>Contact</li>&#xD;&#xA;    			</ul>&#xD;&#xA;         </div>&#xD;&#xA;          <div class=""vd-cart-wrapper"">&#xD;&#xA;           <div class=""vd-cart-selector""></div>&#xD;&#xA;          </div>&#xD;&#xA;          &#xD;&#xA;    </div>&#xD;&#xA;    &#xD;&#xA;    <!--Mobile Navigation-->&#xD;&#xA;      <nav class=""vd-hide"">&#xD;&#xA;      <div class=""header-top clearfix"">&#xD;&#xA;       <a class=""nav toggle-menu"" href=""#"">&#xD;&#xA;          <i></i>&#xD;&#xA;          <i></i>&#xD;&#xA;          <i></i>&#xD;&#xA;        </a>&#xD;&#xA;        <h1 class=""logo""><a href=""#firstSection""><img src=""img/harva_logo.png""/></a></h1>&#xD;&#xA;      </div>&#xD;&#xA;        <ul id=""menu"">&#xD;&#xA;          <li data-menuanchor=""firstSection"">&#xD;&#xA;            <a href=""#firstSection"" title=""First Section"">First Section</a>&#xD;&#xA;          </li>&#xD;&#xA;          <li data-menuanchor=""secondSection"">&#xD;&#xA;            <a href=""#secondSection"" title=""Second Section"">Second Section</a>&#xD;&#xA;          </li>&#xD;&#xA;          <li data-menuanchor=""thirdSection"">&#xD;&#xA;            <a href=""#thirdSection"" title=""Second Section"">Third Section</a>&#xD;&#xA;          </li>&#xD;&#xA;          <li data-menuanchor=""fourthSection"">&#xD;&#xA;            <a href=""#fourthSection"" title=""Fourth Section"">Fourth Section</a>&#xD;&#xA;          </li>&#xD;&#xA;          <li data-menuanchor=""fifthSection"">&#xD;&#xA;            <a href=""#fifthSection"" title=""First Slide"">First Slide</a>&#xD;&#xA;          </li>&#xD;&#xA;          <li data-menuanchor=""fifthSection/1"">&#xD;&#xA;            <a href=""#fifthSection/1"" title=""Second Slide"">Second Slide</a>&#xD;&#xA;          </li>&#xD;&#xA;        </ul>&#xD;&#xA;      </nav>&#xD;&#xA;      </div>&#xD;&#xA;     </header>&#xD;&#xA;    <!--End Mobile Navigation-->&#xD;&#xA;    &#xD;&#xA;    <div class=""vd-page-container"">&#xD;&#xA;     <div class=""vd-grid"">&#xD;&#xA;      <div class=""vd-grid-left-col"">&#xD;&#xA;     	<div class=""vd-grid-main-box vd-margin-bottom"">&#xD;&#xA;         <div class=""vd-text-wrap"">&#xD;&#xA;        	<h1>Header Text</h1>&#xD;&#xA;            <h2>Secondary Title</h2>&#xD;&#xA;            <p>Featured Text Here over two lines&#xD;&#xA;    if needed place here.</p>&#xD;&#xA;    </div>&#xD;&#xA;        </div>&#xD;&#xA;        <div class=""vd-grid-sub-box"">&#xD;&#xA;        	<h3>Header Text</h3>&#xD;&#xA;            <p>Featured Text Here over two lines&#xD;&#xA;    if needed place here.</p>&#xD;&#xA;        </div>&#xD;&#xA;        <div class=""vd-grid-sub-box vd-margin-right vd-margin-left"">&#xD;&#xA;            <h3>Header Text</h3>&#xD;&#xA;            <p>Featured Text Here over two lines&#xD;&#xA;    if needed place here.</p>&#xD;&#xA;        </div>&#xD;&#xA;        <div class=""vd-grid-sub-box"">&#xD;&#xA;            <h3>Header Text</h3>&#xD;&#xA;            <p>Featured Text Here over two lines&#xD;&#xA;    if needed place here.</p>&#xD;&#xA;        </div>&#xD;&#xA;       </div>&#xD;&#xA;        <div class=""vd-grid-right-col vd-margin-left"">&#xD;&#xA;         <div class=""vd-grid-xtra-box"">&#xD;&#xA;          <h4>Header Text</h4>&#xD;&#xA;          <p>Featured Text Here over two lines&#xD;&#xA;    if needed place here.</p>&#xD;&#xA;         </div>&#xD;&#xA;          <div class=""vd-grid-xtra-box vd-margin-top vd-margin-bottom"">&#xD;&#xA;         <h4>Header Text</h4>&#xD;&#xA;          <p>Featured Text Here over two lines&#xD;&#xA;    if needed place here.</p>&#xD;&#xA;         </div>&#xD;&#xA;        </div>&#xD;&#xA;     </div>&#xD;&#xA;    </div>&#xD;&#xA;    <div class=""clear""></div>&#xD;&#xA;        <footer class=""vd-footer"">&#xD;&#xA;     	   <div class=""vd-widget-area"">&#xD;&#xA;            <div class=""vd-footer-text"">&#xD;&#xA;                <h4 class=""vd-footer-title"">V I V I D - SHOPIFY THEME</h4>&#xD;&#xA;              <div class=""rte"">V I V I D is a customisable theme that looks and feels fantastic. Showcase your products on the visually stunning V I V I D Grid and choose your structure then let V I V I D do the rest!</div>&#xD;&#xA;            </div>&#xD;&#xA;              <div class=""vd-footer-links"">&#xD;&#xA;                  <h4 class=""vd-footer-title"">HELP</h4>&#xD;&#xA;                <ul>&#xD;&#xA;                    <li><a class="""" href=""#"">HELP | FAQ'S</a></li>&#xD;&#xA;                    <li><a class="""" href=""#"">RETURNS</a></li>&#xD;&#xA;                    <li><a class="""" href=""#"">HOW TO SHOP</a></li>&#xD;&#xA;                    <li><a class="""" href=""#"">CONTACT US</a></li>&#xD;&#xA;                    <li><a class="""" href=""#"">STOCKISTS</a></li>&#xD;&#xA;                </ul>&#xD;&#xA;              </div>&#xD;&#xA;             <div class=""vd-footer-links"">&#xD;&#xA;              <h4 class=""vd-footer-title"">POLICIES</h4>&#xD;&#xA;                <ul>&#xD;&#xA;                    <li><a class="""" href=""#"">DELIVERY &amp; RETURNS POLICY</a></li>&#xD;&#xA;                    <li><a class="""" href=""#"">TERMS &amp; CONDITIONS</a></li>&#xD;&#xA;                    <li><a class="""" href=""#"">PRIVACY POLICY</a></li>&#xD;&#xA;                    <li><a class="""" href=""#"">SECURITY POLICY</a></li>&#xD;&#xA;                </ul>&#xD;&#xA;              </div>&#xD;&#xA;        <div class=""vd-footer-links"">&#xD;&#xA;             <h4 class=""vd-footer-title"">CONNECT</h4>&#xD;&#xA;                <ul>&#xD;&#xA;                    <li><a class=""vd-social-icon facebook"" href=""#"" target=""_blank"">FACEBOOK</a></li>&#xD;&#xA;                    <li><a class=""vd-social-icon twitter"" href=""#"" target=""_blank"">TWITTER</a></li>&#xD;&#xA;                    <li><a class=""vd-social-icon instagram"" href=""#"" target=""_blank"">INSTAGRAM</a></li>&#xD;&#xA;                    <li><a class=""vd-social-icon vimeo"" href=""#"" target=""_blank"">VIMEO</a></li>&#xD;&#xA;                </ul>&#xD;&#xA;              </div>&#xD;&#xA;            <div class=""vd-signup"">&#xD;&#xA;                <h4 class=""vd-footer-title"">SIGN UP TO OUR NEWSLETTER</h4>&#xD;&#xA;              <div class=""wht"">HTML Block to be added here for embedded email capture forms</div>&#xD;&#xA;            </div>&#xD;&#xA;        </div>&#xD;&#xA;      <div class=""vd-sub-footer"">&#xD;&#xA;          <ul class=""vd-payment-options"">&#xD;&#xA;              <li class=""vd-payment-icon american-express""></li>&#xD;&#xA;              <li class=""vd-payment-icon bitcoin""></li>&#xD;&#xA;              <li class=""vd-payment-icon jcb""></li> &#xD;&#xA;              <li class=""vd-payment-icon master""></li>&#xD;&#xA;              <li class=""vd-payment-icon paypal""></li>&#xD;&#xA;              <li class=""vd-payment-icon visa""></li> &#xD;&#xA;          </ul>&#xD;&#xA;        <div class=""vd-copyright-wrapper"">&#xD;&#xA;          <p class=""vd-copyright"">Copyright © 2017 V I V I D Themes.</p>&#xD;&#xA;          <p class=""vd-attribution"">""Virtual Visual Merchandising""</p>&#xD;&#xA;        </div>&#xD;&#xA;      </div>&#xD;&#xA;    </footer>&#xD;&#xA;    </body>&#xD;&#xA;    </html>"
-7828715727391298505,171,5,"    public class TwoFragment extends Fragment{&#xD;&#xA;                &#xD;&#xA;                    private View v;&#xD;&#xA;                    Intent chooser=null;&#xD;&#xA;                    String myInt="""";&#xD;&#xA;                &#xD;&#xA;                    public TwoFragment() {&#xD;&#xA;                        // Required empty public constructor&#xD;&#xA;                    }&#xD;&#xA;                &#xD;&#xA;                    @Override&#xD;&#xA;                    public void onCreate(Bundle savedInstanceState) {&#xD;&#xA;                        super.onCreate(savedInstanceState);&#xD;&#xA;                    }&#xD;&#xA;                &#xD;&#xA;                    @Override&#xD;&#xA;                    public View onCreateView(LayoutInflater inflater, ViewGroup container,&#xD;&#xA;                                             Bundle savedInstanceState) {&#xD;&#xA;                        // Inflate the layout for this fragment&#xD;&#xA;                        View rootView = inflater.inflate(R.layout.fragment_two, container, false);&#xD;&#xA;                        Button mButton = (Button) rootView.findViewById(R.id.newbutton);&#xD;&#xA;                        mButton.setOnClickListener(new View.OnClickListener() {&#xD;&#xA;                            public void onClick(View v) {&#xD;&#xA;                &#xD;&#xA;                                //sendemail();&#xD;&#xA;                                createPDF();&#xD;&#xA;                                viewPDF();&#xD;&#xA;                &#xD;&#xA;                &#xD;&#xA;                &#xD;&#xA;                            }&#xD;&#xA;                        });&#xD;&#xA;                        TextView titolo3 = (TextView)rootView.findViewById(R.id.result);&#xD;&#xA;                        TextView titolo2 = (TextView)rootView.findViewById(R.id.result2);&#xD;&#xA;                        TextView titolo4 = (TextView)rootView.findViewById(R.id.resultpizze);&#xD;&#xA;                &#xD;&#xA;                        //TextView titolo = (TextView)rootView.findViewById(R.id.quantità3);&#xD;&#xA;                &#xD;&#xA;                      /*  Bundle bundle2=getArguments();&#xD;&#xA;                        if(bundle2 != null){&#xD;&#xA;                            String string = bundle2.getString(""scelta2"", null);&#xD;&#xA;                            titolo3.setText(string);&#xD;&#xA;                        }*/&#xD;&#xA;                &#xD;&#xA;                        Bundle bundle2=getArguments();&#xD;&#xA;                        if(bundle2 != null){&#xD;&#xA;                            myInt = bundle2.getString(""scelta2"", null);&#xD;&#xA;                           titolo3.setText(myInt);&#xD;&#xA;                        }&#xD;&#xA;                &#xD;&#xA;                        Bundle bundle3=getArguments();&#xD;&#xA;                        if(bundle3 != null){&#xD;&#xA;                           // String myInt3 = bundle3.getString(""totalebirre"", null);&#xD;&#xA;                           //  cazzo2=Integer.parseInt(myInt3);&#xD;&#xA;                           int cazzo2=bundle3.getInt(""totalebirre"");&#xD;&#xA;                            titolo2.setText(String.valueOf(cazzo2));&#xD;&#xA;                &#xD;&#xA;                &#xD;&#xA;                &#xD;&#xA;                        }&#xD;&#xA;                        Bundle bundle=getArguments();&#xD;&#xA;                        if(bundle != null){&#xD;&#xA;                            // String myInt2 = bundle2.getString(""totalepizze"", null);&#xD;&#xA;                            //   cazzo=Integer.parseInt(myInt2);&#xD;&#xA;                            //titolo2.setText(myInt2);&#xD;&#xA;                            String string=bundle.getString(""scelta3"", null);&#xD;&#xA;                             titolo4.setText(string);&#xD;&#xA;                &#xD;&#xA;                        }&#xD;&#xA;                &#xD;&#xA;                &#xD;&#xA;                &#xD;&#xA;                        return rootView;&#xD;&#xA;                    }&#xD;&#xA;                   /* public void sendemail(){&#xD;&#xA;                &#xD;&#xA;                        Intent intent = new Intent(Intent.ACTION_SEND);&#xD;&#xA;                        intent.setData(Uri.parse(""mailto:""));&#xD;&#xA;                        String[] to={""marco_marcoletto@hotmail.it""};&#xD;&#xA;                        intent.putExtra(Intent.EXTRA_EMAIL,to);&#xD;&#xA;                        intent.putExtra(Intent.EXTRA_SUBJECT, ""ciao"");&#xD;&#xA;                        intent.putExtra(Intent.EXTRA_TEXT, ""zao"");&#xD;&#xA;                        intent.setType(""message/rfc822"");&#xD;&#xA;                        chooser=intent.createChooser(intent,""manda email"");&#xD;&#xA;                        startActivity(chooser);&#xD;&#xA;                    }*/&#xD;&#xA;                   public void createPDF() {&#xD;&#xA;                &#xD;&#xA;                       Document doc = new Document();&#xD;&#xA;                &#xD;&#xA;                       try {&#xD;&#xA;                           String path = Environment.getExternalStorageDirectory()&#xD;&#xA;                                   .getAbsolutePath() + ""/droidText"";&#xD;&#xA;                &#xD;&#xA;                           File dir = new File(path);&#xD;&#xA;                           if (!dir.exists())&#xD;&#xA;                               dir.mkdirs();&#xD;&#xA;                &#xD;&#xA;                           Log.d(""PDFCreator"", ""PDF Path: "" + path);&#xD;&#xA;                &#xD;&#xA;                           File file = new File(dir, ""sample.pdf"");&#xD;&#xA;                           FileOutputStream fOut = new FileOutputStream(file);&#xD;&#xA;                &#xD;&#xA;                           PdfWriter.getInstance(doc, fOut);&#xD;&#xA;                &#xD;&#xA;                           // open the document&#xD;&#xA;                           doc.open();&#xD;&#xA;                           ByteArrayOutputStream stream = new ByteArrayOutputStream();&#xD;&#xA;                           Bitmap bitmap = BitmapFactory.decodeResource(getContext()&#xD;&#xA;                                   .getResources(), R.drawable.androtuto);&#xD;&#xA;                           bitmap.compress(Bitmap.CompressFormat.JPEG, 100, stream);&#xD;&#xA;                           Image myImg = Image.getInstance(stream.toByteArray());&#xD;&#xA;                           myImg.setAlignment(Image.MIDDLE);&#xD;&#xA;                &#xD;&#xA;                           // add image to document&#xD;&#xA;                           doc.add(myImg);&#xD;&#xA;                &#xD;&#xA;                           Paragraph p1 = new Paragraph(myInt);&#xD;&#xA;                       Log.d(""ciao"",myInt);&#xD;&#xA;            &#xD;&#xA;                           Font paraFont = new Font(Font.COURIER);&#xD;&#xA;                           p1.setAlignment(Paragraph.ALIGN_CENTER);&#xD;&#xA;                           p1.setFont(paraFont);&#xD;&#xA;                &#xD;&#xA;                           // add paragraph to document&#xD;&#xA;                           doc.add(p1);&#xD;&#xA;                &#xD;&#xA;                           Paragraph p2 = new Paragraph(""Ciao"");&#xD;&#xA;                           Font paraFont2 = new Font(Font.COURIER, 14.0f, Color.GREEN);&#xD;&#xA;                           p2.setAlignment(Paragraph.ALIGN_CENTER);&#xD;&#xA;                           p2.setFont(paraFont2);&#xD;&#xA;                &#xD;&#xA;                           doc.add(p2);&#xD;&#xA;                &#xD;&#xA;                           stream = new ByteArrayOutputStream();&#xD;&#xA;                           bitmap = BitmapFactory.decodeResource(getContext()&#xD;&#xA;                                   .getResources(), R.drawable.android);&#xD;&#xA;                           bitmap.compress(Bitmap.CompressFormat.JPEG, 100, stream);&#xD;&#xA;                           myImg = Image.getInstance(stream.toByteArray());&#xD;&#xA;                           myImg.setAlignment(Image.MIDDLE);&#xD;&#xA;                &#xD;&#xA;                           // add image to document&#xD;&#xA;                           doc.add(myImg);&#xD;&#xA;                &#xD;&#xA;                           // set footer&#xD;&#xA;                           Phrase footerText = new Phrase(""Pied de page "");&#xD;&#xA;                           HeaderFooter pdfFooter = new HeaderFooter(footerText, false);&#xD;&#xA;                           doc.setFooter(pdfFooter);&#xD;&#xA;                &#xD;&#xA;                       } catch (DocumentException de) {&#xD;&#xA;                           Log.e(""PDFCreator"", ""DocumentException:"" + de);&#xD;&#xA;                       } catch (IOException e) {&#xD;&#xA;                           Log.e(""PDFCreator"", ""ioException:"" + e);&#xD;&#xA;                       } finally {&#xD;&#xA;                           doc.close();&#xD;&#xA;                       }&#xD;&#xA;                &#xD;&#xA;                   }&#xD;&#xA;                    public void viewPDF(){&#xD;&#xA;                        String path = ""/sdcard/droidText/sample.pdf"";&#xD;&#xA;                        File targetFile = new File(path);&#xD;&#xA;                        Uri targetUri = Uri.fromFile(targetFile);&#xD;&#xA;                &#xD;&#xA;                        Intent intent;&#xD;&#xA;                        intent = new Intent(Intent.ACTION_VIEW);&#xD;&#xA;                        intent.setDataAndType(targetUri, ""application/pdf"");&#xD;&#xA;                &#xD;&#xA;                        startActivity(intent);&#xD;&#xA;                    }&#xD;&#xA;                &#xD;&#xA;                }"
-371925691861619294,172,5,"        public class ImageLoader {&#xD;&#xA;        &#xD;&#xA;        	MemoryCache memoryCache = new MemoryCache();&#xD;&#xA;        	FileCache fileCache;&#xD;&#xA;        	private Map<ImageView, String> imageViews = Collections&#xD;&#xA;        			.synchronizedMap(new WeakHashMap<ImageView, String>());&#xD;&#xA;        	ExecutorService executorService;&#xD;&#xA;        	// Handler to display images in UI thread&#xD;&#xA;        	Handler handler = new Handler();&#xD;&#xA;        &#xD;&#xA;        	public ImageLoader(Context context) {&#xD;&#xA;        		fileCache = new FileCache(context);&#xD;&#xA;        		executorService = Executors.newFixedThreadPool(5);&#xD;&#xA;        	}&#xD;&#xA;        &#xD;&#xA;        	final int stub_id = R.drawable.temp_img;&#xD;&#xA;        &#xD;&#xA;        	public void DisplayImage(String url, ImageView imageView) {&#xD;&#xA;        		imageViews.put(imageView, url);&#xD;&#xA;        		Bitmap bitmap = memoryCache.get(url);&#xD;&#xA;        		if (bitmap != null)&#xD;&#xA;        			imageView.setImageBitmap(bitmap);&#xD;&#xA;        		else {&#xD;&#xA;        			queuePhoto(url, imageView);&#xD;&#xA;        			imageView.setImageResource(stub_id);&#xD;&#xA;        		}&#xD;&#xA;        	}&#xD;&#xA;        &#xD;&#xA;        	private void queuePhoto(String url, ImageView imageView) {&#xD;&#xA;        		PhotoToLoad p = new PhotoToLoad(url, imageView);&#xD;&#xA;        		executorService.submit(new PhotosLoader(p));&#xD;&#xA;        	}&#xD;&#xA;        &#xD;&#xA;        	private Bitmap getBitmap(String url) {&#xD;&#xA;        		File f = fileCache.getFile(url);&#xD;&#xA;        &#xD;&#xA;        		Bitmap b = decodeFile(f);&#xD;&#xA;        		if (b != null)&#xD;&#xA;        			return b;&#xD;&#xA;        &#xD;&#xA;        		// Download Images from the Internet&#xD;&#xA;        		try {&#xD;&#xA;        			Bitmap bitmap = null;&#xD;&#xA;        			URL imageUrl = new URL(url);&#xD;&#xA;        			HttpURLConnection conn = (HttpURLConnection) imageUrl&#xD;&#xA;        					.openConnection();&#xD;&#xA;        			conn.setConnectTimeout(30000);&#xD;&#xA;        			conn.setReadTimeout(30000);&#xD;&#xA;        			conn.setInstanceFollowRedirects(true);&#xD;&#xA;        			InputStream is = conn.getInputStream();&#xD;&#xA;        			OutputStream os = new FileOutputStream(f);&#xD;&#xA;        			Utils.CopyStream(is, os);&#xD;&#xA;        			os.close();&#xD;&#xA;        			conn.disconnect();&#xD;&#xA;        			bitmap = decodeFile(f);&#xD;&#xA;        			return bitmap;&#xD;&#xA;        		} catch (Throwable ex) {&#xD;&#xA;        			ex.printStackTrace();&#xD;&#xA;        			if (ex instanceof OutOfMemoryError)&#xD;&#xA;        				memoryCache.clear();&#xD;&#xA;        			return null;&#xD;&#xA;        		}&#xD;&#xA;        	}&#xD;&#xA;        &#xD;&#xA;        	// Decodes image and scales it to reduce memory consumption&#xD;&#xA;        	private Bitmap decodeFile(File f) {&#xD;&#xA;        		try {&#xD;&#xA;        			// Decode image size&#xD;&#xA;        			BitmapFactory.Options o = new BitmapFactory.Options();&#xD;&#xA;        			o.inJustDecodeBounds = true;&#xD;&#xA;        			FileInputStream stream1 = new FileInputStream(f);&#xD;&#xA;        			BitmapFactory.decodeStream(stream1, null, o);&#xD;&#xA;        			stream1.close();&#xD;&#xA;        &#xD;&#xA;        			// Find the correct scale value. It should be the power of 2.&#xD;&#xA;        			// Recommended Size 512&#xD;&#xA;        			final int REQUIRED_SIZE = 70;&#xD;&#xA;        			int width_tmp = o.outWidth, height_tmp = o.outHeight;&#xD;&#xA;        			int scale = 1;&#xD;&#xA;        			while (true) {&#xD;&#xA;        				if (width_tmp / 2 < REQUIRED_SIZE&#xD;&#xA;        						|| height_tmp / 2 < REQUIRED_SIZE)&#xD;&#xA;        					break;&#xD;&#xA;        				width_tmp /= 2;&#xD;&#xA;        				height_tmp /= 2;&#xD;&#xA;        				scale *= 2;&#xD;&#xA;        			}&#xD;&#xA;        &#xD;&#xA;        			// Decode with inSampleSize&#xD;&#xA;        			BitmapFactory.Options o2 = new BitmapFactory.Options();&#xD;&#xA;        			o2.inSampleSize = scale;&#xD;&#xA;        			FileInputStream stream2 = new FileInputStream(f);&#xD;&#xA;        			Bitmap bitmap = BitmapFactory.decodeStream(stream2, null, o2);&#xD;&#xA;        			stream2.close();&#xD;&#xA;        			return bitmap;&#xD;&#xA;        		} catch (FileNotFoundException e) {&#xD;&#xA;        		} catch (IOException e) {&#xD;&#xA;        			e.printStackTrace();&#xD;&#xA;        		}&#xD;&#xA;        		return null;&#xD;&#xA;        	}&#xD;&#xA;        &#xD;&#xA;        	// Task for the queue&#xD;&#xA;        	private class PhotoToLoad {&#xD;&#xA;        		public String url;&#xD;&#xA;        		public ImageView imageView;&#xD;&#xA;        &#xD;&#xA;        		public PhotoToLoad(String u, ImageView i) {&#xD;&#xA;        			url = u;&#xD;&#xA;        			imageView = i;&#xD;&#xA;        		}&#xD;&#xA;        	}&#xD;&#xA;        &#xD;&#xA;        	class PhotosLoader implements Runnable {&#xD;&#xA;        		PhotoToLoad photoToLoad;&#xD;&#xA;        &#xD;&#xA;        		PhotosLoader(PhotoToLoad photoToLoad) {&#xD;&#xA;        			this.photoToLoad = photoToLoad;&#xD;&#xA;        		}&#xD;&#xA;        &#xD;&#xA;        		@Override&#xD;&#xA;        		public void run() {&#xD;&#xA;        			try {&#xD;&#xA;        				if (imageViewReused(photoToLoad))&#xD;&#xA;        					return;&#xD;&#xA;        				Bitmap bmp = getBitmap(photoToLoad.url);&#xD;&#xA;        				memoryCache.put(photoToLoad.url, bmp);&#xD;&#xA;        				if (imageViewReused(photoToLoad))&#xD;&#xA;        					return;&#xD;&#xA;        				BitmapDisplayer bd = new BitmapDisplayer(bmp, photoToLoad);&#xD;&#xA;        				handler.post(bd);&#xD;&#xA;        			} catch (Throwable th) {&#xD;&#xA;        				th.printStackTrace();&#xD;&#xA;        			}&#xD;&#xA;        		}&#xD;&#xA;        	}&#xD;&#xA;        &#xD;&#xA;        	boolean imageViewReused(PhotoToLoad photoToLoad) {&#xD;&#xA;        		String tag = imageViews.get(photoToLoad.imageView);&#xD;&#xA;        		if (tag == null || !tag.equals(photoToLoad.url))&#xD;&#xA;        			return true;&#xD;&#xA;        		return false;&#xD;&#xA;        	}&#xD;&#xA;        &#xD;&#xA;        	// Used to display bitmap in the UI thread&#xD;&#xA;        	class BitmapDisplayer implements Runnable {&#xD;&#xA;        		Bitmap bitmap;&#xD;&#xA;        		PhotoToLoad photoToLoad;&#xD;&#xA;        &#xD;&#xA;        		public BitmapDisplayer(Bitmap b, PhotoToLoad p) {&#xD;&#xA;        			bitmap = b;&#xD;&#xA;        			photoToLoad = p;&#xD;&#xA;        		}&#xD;&#xA;        &#xD;&#xA;        		public void run() {&#xD;&#xA;        			if (imageViewReused(photoToLoad))&#xD;&#xA;        				return;&#xD;&#xA;        			if (bitmap != null)&#xD;&#xA;        				photoToLoad.imageView.setImageBitmap(bitmap);&#xD;&#xA;        			else&#xD;&#xA;        				photoToLoad.imageView.setImageResource(stub_id);&#xD;&#xA;        		}&#xD;&#xA;        	}&#xD;&#xA;        &#xD;&#xA;        	public void clearCache() {&#xD;&#xA;        		memoryCache.clear();&#xD;&#xA;        		fileCache.clear();&#xD;&#xA;        	}&#xD;&#xA;        &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    "
6871453944325266544,178,5,"    jQuery.extend({&#xD;&#xA;	&#xD;&#xA;    createUploadIframe: function(id, uri)&#xD;&#xA;	{&#xD;&#xA;			//create frame&#xD;&#xA;            var frameId = 'jUploadFrame' + id;&#xD;&#xA;            var iframeHtml = '<iframe id=""' + frameId + '"" name=""' + frameId + '"" style=""position:absolute; top:-9999px; left:-9999px""';&#xD;&#xA;			if(window.ActiveXObject)&#xD;&#xA;			{&#xD;&#xA;                if(typeof uri== 'boolean'){&#xD;&#xA;					iframeHtml += ' src=""' + 'javascript:false' + '""';&#xD;&#xA;                }&#xD;&#xA;                else if(typeof uri== 'string'){&#xD;&#xA;					iframeHtml += ' src=""' + uri + '""';&#xD;&#xA;                }	&#xD;&#xA;			}&#xD;&#xA;			iframeHtml += ' />';&#xD;&#xA;			jQuery(iframeHtml).appendTo(document.body);&#xD;&#xA;            return jQuery('#' + frameId).get(0);			&#xD;&#xA;    },&#xD;&#xA;    createUploadForm: function(id, fileElementId, data)&#xD;&#xA;	{&#xD;&#xA;		//create form	&#xD;&#xA;		var formId = 'jUploadForm' + id;&#xD;&#xA;		var fileId = 'jUploadFile' + id;&#xD;&#xA;		var form = jQuery('<form  action="""" method=""POST"" name=""' + formId + '"" id=""' + formId + '"" enctype=""multipart/form-data""></form>');	&#xD;&#xA;		if(data)&#xD;&#xA;		{&#xD;&#xA;			for(var i in data)&#xD;&#xA;			{&#xD;&#xA;				jQuery('<input type=""hidden"" name=""' + i + '"" value=""' + data[i] + '"" />').appendTo(form);&#xD;&#xA;			}			&#xD;&#xA;		}		&#xD;&#xA;		var oldElement = jQuery('#' + fileElementId);&#xD;&#xA;		var newElement = jQuery(oldElement).clone();&#xD;&#xA;		jQuery(oldElement).attr('id', fileId);&#xD;&#xA;		jQuery(oldElement).before(newElement);&#xD;&#xA;		jQuery(oldElement).appendTo(form);&#xD;&#xA;		&#xD;&#xA;		//set attributes&#xD;&#xA;		jQuery(form).css('position', 'absolute');&#xD;&#xA;		jQuery(form).css('top', '-1200px');&#xD;&#xA;		jQuery(form).css('left', '-1200px');&#xD;&#xA;		jQuery(form).appendTo('body');		&#xD;&#xA;		return form;&#xD;&#xA;    },&#xD;&#xA;    ajaxFileUpload: function(s) {&#xD;&#xA;        // TODO introduce global settings, allowing the client to modify them for all requests, not only timeout		&#xD;&#xA;        s = jQuery.extend({}, jQuery.ajaxSettings, s);&#xD;&#xA;        var id = new Date().getTime()        &#xD;&#xA;		var form = jQuery.createUploadForm(id, s.fileElementId, (typeof(s.data)=='undefined'?false:s.data));&#xD;&#xA;		var io = jQuery.createUploadIframe(id, s.secureuri);&#xD;&#xA;		var frameId = 'jUploadFrame' + id;&#xD;&#xA;		var formId = 'jUploadForm' + id;		&#xD;&#xA;        // Watch for a new set of requests&#xD;&#xA;        if ( s.global && ! jQuery.active++ )&#xD;&#xA;		{&#xD;&#xA;			jQuery.event.trigger( ""ajaxStart"" );&#xD;&#xA;		}            &#xD;&#xA;        var requestDone = false;&#xD;&#xA;        // Create the request object&#xD;&#xA;        var xml = {}   &#xD;&#xA;        if ( s.global )&#xD;&#xA;            jQuery.event.trigger(""ajaxSend"", [xml, s]);&#xD;&#xA;        // Wait for a response to come back&#xD;&#xA;        var uploadCallback = function(isTimeout)&#xD;&#xA;		{			&#xD;&#xA;			var io = document.getElementById(frameId);&#xD;&#xA;            try &#xD;&#xA;			{				&#xD;&#xA;				if(io.contentWindow)&#xD;&#xA;				{&#xD;&#xA;					 xml.responseText = io.contentWindow.document.body?io.contentWindow.document.body.innerHTML:null;&#xD;&#xA;                	 xml.responseXML = io.contentWindow.document.XMLDocument?io.contentWindow.document.XMLDocument:io.contentWindow.document;&#xD;&#xA;					 &#xD;&#xA;				}else if(io.contentDocument)&#xD;&#xA;				{&#xD;&#xA;					 xml.responseText = io.contentDocument.document.body?io.contentDocument.document.body.innerHTML:null;&#xD;&#xA;                	xml.responseXML = io.contentDocument.document.XMLDocument?io.contentDocument.document.XMLDocument:io.contentDocument.document;&#xD;&#xA;				}						&#xD;&#xA;            }catch(e)&#xD;&#xA;			{&#xD;&#xA;				jQuery.handleError(s, xml, null, e);&#xD;&#xA;			}&#xD;&#xA;            if ( xml || isTimeout == ""timeout"") &#xD;&#xA;			{				&#xD;&#xA;                requestDone = true;&#xD;&#xA;                var status;&#xD;&#xA;                try {&#xD;&#xA;                    status = isTimeout != ""timeout"" ? ""success"" : ""error"";&#xD;&#xA;                    // Make sure that the request was successful or notmodified&#xD;&#xA;                    if ( status != ""error"" )&#xD;&#xA;					{&#xD;&#xA;                        // process the data (runs the xml through httpData regardless of callback)&#xD;&#xA;                        var data = jQuery.uploadHttpData( xml, s.dataType );    &#xD;&#xA;                        // If a local callback was specified, fire it and pass it the data&#xD;&#xA;                        if ( s.success )&#xD;&#xA;                            s.success( data, status );&#xD;&#xA;    &#xD;&#xA;                        // Fire the global callback&#xD;&#xA;                        if( s.global )&#xD;&#xA;                            jQuery.event.trigger( ""ajaxSuccess"", [xml, s] );&#xD;&#xA;                    } else&#xD;&#xA;                        jQuery.handleError(s, xml, status);&#xD;&#xA;                } catch(e) &#xD;&#xA;				{&#xD;&#xA;                    status = ""error"";&#xD;&#xA;                    jQuery.handleError(s, xml, status, e);&#xD;&#xA;                }&#xD;&#xA;                // The request was completed&#xD;&#xA;                if( s.global )&#xD;&#xA;                    jQuery.event.trigger( ""ajaxComplete"", [xml, s] );&#xD;&#xA;                // Handle the global AJAX counter&#xD;&#xA;                if ( s.global && ! --jQuery.active )&#xD;&#xA;                    jQuery.event.trigger( ""ajaxStop"" );&#xD;&#xA;                // Process result&#xD;&#xA;                if ( s.complete )&#xD;&#xA;                    s.complete(xml, status);&#xD;&#xA;                jQuery(io).unbind()&#xD;&#xA;                setTimeout(function()&#xD;&#xA;									{	try &#xD;&#xA;										{&#xD;&#xA;											jQuery(io).remove();&#xD;&#xA;											jQuery(form).remove();	&#xD;&#xA;											&#xD;&#xA;										} catch(e) &#xD;&#xA;										{&#xD;&#xA;											jQuery.handleError(s, xml, null, e);&#xD;&#xA;										}									&#xD;&#xA;									}, 100)&#xD;&#xA;                xml = null&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        // Timeout checker&#xD;&#xA;        if ( s.timeout > 0 ) &#xD;&#xA;		{&#xD;&#xA;            setTimeout(function(){&#xD;&#xA;                // Check to see if the request is still happening&#xD;&#xA;                if( !requestDone ) uploadCallback( ""timeout"" );&#xD;&#xA;            }, s.timeout);&#xD;&#xA;        }&#xD;&#xA;        try &#xD;&#xA;		{&#xD;&#xA;			var form = jQuery('#' + formId);&#xD;&#xA;			jQuery(form).attr('action', s.url);&#xD;&#xA;			jQuery(form).attr('method', 'POST');&#xD;&#xA;			jQuery(form).attr('target', frameId);&#xD;&#xA;            if(form.encoding)&#xD;&#xA;			{&#xD;&#xA;				jQuery(form).attr('encoding', 'multipart/form-data');      			&#xD;&#xA;            }&#xD;&#xA;            else&#xD;&#xA;			{	&#xD;&#xA;				jQuery(form).attr('enctype', 'multipart/form-data');			&#xD;&#xA;            }			&#xD;&#xA;            jQuery(form).submit();&#xD;&#xA;        } catch(e) &#xD;&#xA;		{			&#xD;&#xA;            jQuery.handleError(s, xml, null, e);&#xD;&#xA;        }&#xD;&#xA;		&#xD;&#xA;		jQuery('#' + frameId).load(uploadCallback	);&#xD;&#xA;        return {abort: function () {}};	&#xD;&#xA;    },&#xD;&#xA;    uploadHttpData: function( r, type ) {&#xD;&#xA;        var data = !type;&#xD;&#xA;        data = type == ""xml"" || data ? r.responseXML : r.responseText;&#xD;&#xA;        // If the type is ""script"", eval it in global context&#xD;&#xA;        if ( type == ""script"" )&#xD;&#xA;            jQuery.globalEval( data );&#xD;&#xA;        // Get the JavaScript object, if JSON is used.&#xD;&#xA;        if ( type == ""json"" )&#xD;&#xA;            eval( ""data = "" + data );&#xD;&#xA;        // evaluate scripts within html&#xD;&#xA;        if ( type == ""html"" )&#xD;&#xA;            jQuery(""<div>"").html(data).evalScripts();&#xD;&#xA;        return data;&#xD;&#xA;    }"
-8693476503271385078,190,5,"    using System;&#xD;&#xA;    using System.Diagnostics;&#xD;&#xA;    using System.Text;&#xD;&#xA;    using System.Threading;&#xD;&#xA;    using System.Threading.Tasks;&#xD;&#xA;    &#xD;&#xA;    public class ConsoleAppManager&#xD;&#xA;    {&#xD;&#xA;        private readonly string appName;&#xD;&#xA;        private readonly Process process = new Process();&#xD;&#xA;        private readonly object theLock = new object();&#xD;&#xA;        private SynchronizationContext context;&#xD;&#xA;        private string pendingWriteData;&#xD;&#xA;    &#xD;&#xA;        public ConsoleAppManager(string appName)&#xD;&#xA;        {&#xD;&#xA;            this.appName = appName;&#xD;&#xA;    &#xD;&#xA;            this.process.StartInfo.FileName = this.appName;&#xD;&#xA;            this.process.StartInfo.RedirectStandardError = true;&#xD;&#xA;            this.process.StartInfo.StandardErrorEncoding = Encoding.UTF8;&#xD;&#xA;    &#xD;&#xA;            this.process.StartInfo.RedirectStandardInput = true;&#xD;&#xA;            this.process.StartInfo.RedirectStandardOutput = true;&#xD;&#xA;            this.process.EnableRaisingEvents = true;&#xD;&#xA;            this.process.StartInfo.CreateNoWindow = true;&#xD;&#xA;    &#xD;&#xA;            this.process.StartInfo.UseShellExecute = false;&#xD;&#xA;    &#xD;&#xA;            this.process.StartInfo.StandardOutputEncoding = Encoding.UTF8;&#xD;&#xA;    &#xD;&#xA;            this.process.Exited += this.ProcessOnExited;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public event EventHandler<string> ErrorTextReceived;&#xD;&#xA;        public event EventHandler ProcessExited;&#xD;&#xA;        public event EventHandler<string> StandartTextReceived;&#xD;&#xA;    &#xD;&#xA;        public int ExitCode&#xD;&#xA;        {&#xD;&#xA;            get { return this.process.ExitCode; }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public bool Running&#xD;&#xA;        {&#xD;&#xA;            get; private set;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void ExecuteAsync(params string[] args)&#xD;&#xA;        {&#xD;&#xA;            if (this.Running)&#xD;&#xA;            {&#xD;&#xA;                throw new InvalidOperationException(&#xD;&#xA;                    ""Process is still Running. Please wait for the process to complete."");&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            string arguments = string.Join("" "", args);&#xD;&#xA;    &#xD;&#xA;            this.process.StartInfo.Arguments = arguments;&#xD;&#xA;    &#xD;&#xA;            this.context = SynchronizationContext.Current;&#xD;&#xA;    &#xD;&#xA;            this.process.Start();&#xD;&#xA;            this.Running = true;&#xD;&#xA;    &#xD;&#xA;            new Task(this.ReadOutputAsync).Start();&#xD;&#xA;            new Task(this.WriteInputTask).Start();&#xD;&#xA;            new Task(this.ReadOutputErrorAsync).Start();&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void Write(string data)&#xD;&#xA;        {&#xD;&#xA;            if (data == null)&#xD;&#xA;            {&#xD;&#xA;                return;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            lock (this.theLock)&#xD;&#xA;            {&#xD;&#xA;                this.pendingWriteData = data;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void WriteLine(string data)&#xD;&#xA;        {&#xD;&#xA;            this.Write(data + Environment.NewLine);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        protected virtual void OnErrorTextReceived(string e)&#xD;&#xA;        {&#xD;&#xA;            EventHandler<string> handler = this.ErrorTextReceived;&#xD;&#xA;    &#xD;&#xA;            if (handler != null)&#xD;&#xA;            {&#xD;&#xA;                if (this.context != null)&#xD;&#xA;                {&#xD;&#xA;                    this.context.Post(delegate { handler(this, e); }, null);&#xD;&#xA;                }&#xD;&#xA;                else&#xD;&#xA;                {&#xD;&#xA;                    handler(this, e);&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        protected virtual void OnProcessExited()&#xD;&#xA;        {&#xD;&#xA;            EventHandler handler = this.ProcessExited;&#xD;&#xA;            if (handler != null)&#xD;&#xA;            {&#xD;&#xA;                handler(this, EventArgs.Empty);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        protected virtual void OnStandartTextReceived(string e)&#xD;&#xA;        {&#xD;&#xA;            EventHandler<string> handler = this.StandartTextReceived;&#xD;&#xA;    &#xD;&#xA;            if (handler != null)&#xD;&#xA;            {&#xD;&#xA;                if (this.context != null)&#xD;&#xA;                {&#xD;&#xA;                    this.context.Post(delegate { handler(this, e); }, null);&#xD;&#xA;                }&#xD;&#xA;                else&#xD;&#xA;                {&#xD;&#xA;                    handler(this, e);&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private void ProcessOnExited(object sender, EventArgs eventArgs)&#xD;&#xA;        {&#xD;&#xA;            this.OnProcessExited();&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private async void ReadOutputAsync()&#xD;&#xA;        {&#xD;&#xA;            var standart = new StringBuilder();&#xD;&#xA;            var buff = new char[1024];&#xD;&#xA;            int length;&#xD;&#xA;    &#xD;&#xA;            while (this.process.HasExited == false)&#xD;&#xA;            {&#xD;&#xA;                standart.Clear();&#xD;&#xA;    &#xD;&#xA;                length = await this.process.StandardOutput.ReadAsync(buff, 0, buff.Length);&#xD;&#xA;                standart.Append(buff.SubArray(0, length));&#xD;&#xA;                this.OnStandartTextReceived(standart.ToString());&#xD;&#xA;                Thread.Sleep(1);&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            this.Running = false;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private async void ReadOutputErrorAsync()&#xD;&#xA;        {&#xD;&#xA;            var sb = new StringBuilder();&#xD;&#xA;    &#xD;&#xA;            do&#xD;&#xA;            {&#xD;&#xA;                sb.Clear();&#xD;&#xA;                var buff = new char[1024];&#xD;&#xA;                int length = await this.process.StandardError.ReadAsync(buff, 0, buff.Length);&#xD;&#xA;                sb.Append(buff.SubArray(0, length));&#xD;&#xA;                this.OnErrorTextReceived(sb.ToString());&#xD;&#xA;                Thread.Sleep(1);&#xD;&#xA;            }&#xD;&#xA;            while (this.process.HasExited == false);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private async void WriteInputTask()&#xD;&#xA;        {&#xD;&#xA;            while (this.process.HasExited == false)&#xD;&#xA;            {&#xD;&#xA;                Thread.Sleep(1);&#xD;&#xA;    &#xD;&#xA;                if (this.pendingWriteData != null)&#xD;&#xA;                {&#xD;&#xA;                    await this.process.StandardInput.WriteLineAsync(this.pendingWriteData);&#xD;&#xA;                    await this.process.StandardInput.FlushAsync();&#xD;&#xA;    &#xD;&#xA;                    lock (this.theLock)&#xD;&#xA;                    {&#xD;&#xA;                        this.pendingWriteData = null;&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }"
-76726864403651272,194,5,"    import android.content.Context;&#xD;&#xA;    import android.graphics.Matrix;&#xD;&#xA;    import android.graphics.PointF;&#xD;&#xA;    import android.graphics.drawable.Drawable;&#xD;&#xA;    import android.util.AttributeSet;&#xD;&#xA;    import android.util.Log;&#xD;&#xA;    import android.view.MotionEvent;&#xD;&#xA;    import android.view.ScaleGestureDetector;&#xD;&#xA;    import android.view.View;&#xD;&#xA;    import android.widget.ImageView;&#xD;&#xA;    &#xD;&#xA;    public class TouchImageView extends ImageView {&#xD;&#xA;	Matrix matrix;&#xD;&#xA;	// We can be in one of these 3 states&#xD;&#xA;	static final int NONE = 0;&#xD;&#xA;	static final int DRAG = 1;&#xD;&#xA;	static final int ZOOM = 2;&#xD;&#xA;	int mode = NONE;&#xD;&#xA;	// Remember some things for zooming&#xD;&#xA;	PointF last = new PointF();&#xD;&#xA;	PointF start = new PointF();&#xD;&#xA;	float minScale = 1f;&#xD;&#xA;	float maxScale = 3f;&#xD;&#xA;	float[] m;&#xD;&#xA;	int viewWidth, viewHeight;&#xD;&#xA;	static final int CLICK = 3;&#xD;&#xA;	float saveScale = 1f;&#xD;&#xA;	protected float origWidth, origHeight;&#xD;&#xA;	int oldMeasuredWidth, oldMeasuredHeight;&#xD;&#xA;	ScaleGestureDetector mScaleDetector;&#xD;&#xA;	Context context;&#xD;&#xA;	public TouchImageView(Context context) {&#xD;&#xA;		super(context);&#xD;&#xA;		sharedConstructing(context);&#xD;&#xA;	}&#xD;&#xA;	public TouchImageView(Context context, AttributeSet attrs) {&#xD;&#xA;		super(context, attrs);&#xD;&#xA;		sharedConstructing(context);&#xD;&#xA;	}&#xD;&#xA;	private void sharedConstructing(Context context) {&#xD;&#xA;		super.setClickable(true);&#xD;&#xA;		this.context = context;&#xD;&#xA;		mScaleDetector = new ScaleGestureDetector(context, new ScaleListener());&#xD;&#xA;		matrix = new Matrix();&#xD;&#xA;		m = new float[9];&#xD;&#xA;		setImageMatrix(matrix);&#xD;&#xA;		setScaleType(ScaleType.MATRIX);&#xD;&#xA;		setOnTouchListener(new OnTouchListener() {&#xD;&#xA;			@Override&#xD;&#xA;			public boolean onTouch(View v, MotionEvent event) {&#xD;&#xA;				mScaleDetector.onTouchEvent(event);&#xD;&#xA;				PointF curr = new PointF(event.getX(), event.getY());&#xD;&#xA;				switch (event.getAction()) {&#xD;&#xA;				case MotionEvent.ACTION_DOWN:&#xD;&#xA;					last.set(curr);&#xD;&#xA;					start.set(last);&#xD;&#xA;					mode = DRAG;&#xD;&#xA;					break;&#xD;&#xA;				case MotionEvent.ACTION_MOVE:&#xD;&#xA;					if (mode == DRAG) {&#xD;&#xA;						float deltaX = curr.x - last.x;&#xD;&#xA;						float deltaY = curr.y - last.y;&#xD;&#xA;						float fixTransX = getFixDragTrans(deltaX, viewWidth,&#xD;&#xA;								origWidth * saveScale);&#xD;&#xA;						float fixTransY = getFixDragTrans(deltaY, viewHeight,&#xD;&#xA;								origHeight * saveScale);&#xD;&#xA;						matrix.postTranslate(fixTransX, fixTransY);&#xD;&#xA;						fixTrans();&#xD;&#xA;						last.set(curr.x, curr.y);&#xD;&#xA;					}&#xD;&#xA;					break;&#xD;&#xA;				case MotionEvent.ACTION_UP:&#xD;&#xA;					mode = NONE;&#xD;&#xA;					int xDiff = (int) Math.abs(curr.x - start.x);&#xD;&#xA;					int yDiff = (int) Math.abs(curr.y - start.y);&#xD;&#xA;					if (xDiff < CLICK && yDiff < CLICK)&#xD;&#xA;						performClick();&#xD;&#xA;					break;&#xD;&#xA;				case MotionEvent.ACTION_POINTER_UP:&#xD;&#xA;					mode = NONE;&#xD;&#xA;					break;&#xD;&#xA;				}&#xD;&#xA;				setImageMatrix(matrix);&#xD;&#xA;				invalidate();&#xD;&#xA;				return true; // indicate event was handled&#xD;&#xA;			}&#xD;&#xA;		});&#xD;&#xA;	}&#xD;&#xA;	public void setMaxZoom(float x) {&#xD;&#xA;		maxScale = x;&#xD;&#xA;	}&#xD;&#xA;	private class ScaleListener extends&#xD;&#xA;			ScaleGestureDetector.SimpleOnScaleGestureListener {&#xD;&#xA;		@Override&#xD;&#xA;		public boolean onScaleBegin(ScaleGestureDetector detector) {&#xD;&#xA;			mode = ZOOM;&#xD;&#xA;			return true;&#xD;&#xA;		}&#xD;&#xA;		@Override&#xD;&#xA;		public boolean onScale(ScaleGestureDetector detector) {&#xD;&#xA;			float mScaleFactor = detector.getScaleFactor();&#xD;&#xA;			float origScale = saveScale;&#xD;&#xA;			saveScale *= mScaleFactor;&#xD;&#xA;			if (saveScale > maxScale) {&#xD;&#xA;				saveScale = maxScale;&#xD;&#xA;				mScaleFactor = maxScale / origScale;&#xD;&#xA;			} else if (saveScale < minScale) {&#xD;&#xA;				saveScale = minScale;&#xD;&#xA;				mScaleFactor = minScale / origScale;&#xD;&#xA;			}&#xD;&#xA;			if (origWidth * saveScale <= viewWidth&#xD;&#xA;					|| origHeight * saveScale <= viewHeight)&#xD;&#xA;				matrix.postScale(mScaleFactor, mScaleFactor, viewWidth / 2,&#xD;&#xA;						viewHeight / 2);&#xD;&#xA;			else&#xD;&#xA;				matrix.postScale(mScaleFactor, mScaleFactor,&#xD;&#xA;						detector.getFocusX(), detector.getFocusY());&#xD;&#xA;			fixTrans();&#xD;&#xA;			return true;&#xD;&#xA;		}&#xD;&#xA;	}&#xD;&#xA;	void fixTrans() {&#xD;&#xA;		matrix.getValues(m);&#xD;&#xA;		float transX = m[Matrix.MTRANS_X];&#xD;&#xA;		float transY = m[Matrix.MTRANS_Y];&#xD;&#xA;		float fixTransX = getFixTrans(transX, viewWidth, origWidth * saveScale);&#xD;&#xA;		float fixTransY = getFixTrans(transY, viewHeight, origHeight&#xD;&#xA;				* saveScale);&#xD;&#xA;		if (fixTransX != 0 || fixTransY != 0)&#xD;&#xA;			matrix.postTranslate(fixTransX, fixTransY);&#xD;&#xA;	}&#xD;&#xA;	float getFixTrans(float trans, float viewSize, float contentSize) {&#xD;&#xA;		float minTrans, maxTrans;&#xD;&#xA;		if (contentSize <= viewSize) {&#xD;&#xA;			minTrans = 0;&#xD;&#xA;			maxTrans = viewSize - contentSize;&#xD;&#xA;		} else {&#xD;&#xA;			minTrans = viewSize - contentSize;&#xD;&#xA;			maxTrans = 0;&#xD;&#xA;		}&#xD;&#xA;		if (trans < minTrans)&#xD;&#xA;			return -trans + minTrans;&#xD;&#xA;		if (trans > maxTrans)&#xD;&#xA;			return -trans + maxTrans;&#xD;&#xA;		return 0;&#xD;&#xA;	}&#xD;&#xA;	float getFixDragTrans(float delta, float viewSize, float contentSize) {&#xD;&#xA;		if (contentSize <= viewSize) {&#xD;&#xA;			return 0;&#xD;&#xA;		}&#xD;&#xA;		return delta;&#xD;&#xA;	}&#xD;&#xA;	@Override&#xD;&#xA;	protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {&#xD;&#xA;		super.onMeasure(widthMeasureSpec, heightMeasureSpec);&#xD;&#xA;		viewWidth = MeasureSpec.getSize(widthMeasureSpec);&#xD;&#xA;		viewHeight = MeasureSpec.getSize(heightMeasureSpec);&#xD;&#xA;		//&#xD;&#xA;		// Rescales image on rotation&#xD;&#xA;		//&#xD;&#xA;		if (oldMeasuredHeight == viewWidth && oldMeasuredHeight == viewHeight&#xD;&#xA;				|| viewWidth == 0 || viewHeight == 0)&#xD;&#xA;			return;&#xD;&#xA;		oldMeasuredHeight = viewHeight;&#xD;&#xA;		oldMeasuredWidth = viewWidth;&#xD;&#xA;		if (saveScale == 1) {&#xD;&#xA;			// Fit to screen.&#xD;&#xA;			float scale;&#xD;&#xA;			Drawable drawable = getDrawable();&#xD;&#xA;			if (drawable == null || drawable.getIntrinsicWidth() == 0&#xD;&#xA;					|| drawable.getIntrinsicHeight() == 0)&#xD;&#xA;				return;&#xD;&#xA;			int bmWidth = drawable.getIntrinsicWidth();&#xD;&#xA;			int bmHeight = drawable.getIntrinsicHeight();&#xD;&#xA;			Log.d(""bmSize"", ""bmWidth: "" + bmWidth + "" bmHeight : "" + bmHeight);&#xD;&#xA;			float scaleX = (float) viewWidth / (float) bmWidth;&#xD;&#xA;			float scaleY = (float) viewHeight / (float) bmHeight;&#xD;&#xA;			scale = Math.min(scaleX, scaleY);&#xD;&#xA;			matrix.setScale(scale, scale);&#xD;&#xA;			// Center the image&#xD;&#xA;			float redundantYSpace = (float) viewHeight&#xD;&#xA;					- (scale * (float) bmHeight);&#xD;&#xA;			float redundantXSpace = (float) viewWidth&#xD;&#xA;					- (scale * (float) bmWidth);&#xD;&#xA;			redundantYSpace /= (float) 2;&#xD;&#xA;			redundantXSpace /= (float) 2;&#xD;&#xA;			matrix.postTranslate(redundantXSpace, redundantYSpace);&#xD;&#xA;			origWidth = viewWidth - 2 * redundantXSpace;&#xD;&#xA;			origHeight = viewHeight - 2 * redundantYSpace;&#xD;&#xA;			setImageMatrix(matrix);&#xD;&#xA;		}&#xD;&#xA;		fixTrans();&#xD;&#xA;	}&#xD;&#xA;    }"
-5666949083299967796,205,5,"     <?php&#xD;&#xA;    &#xD;&#xA;    /*&#xD;&#xA;     *---------------------------------------------------------------&#xD;&#xA;     * APPLICATION ENVIRONMENT&#xD;&#xA;     *---------------------------------------------------------------&#xD;&#xA;     *&#xD;&#xA;     * You can load different configurations depending on your&#xD;&#xA;     * current environment. Setting the environment also influences&#xD;&#xA;     * things like logging and error reporting.&#xD;&#xA;     *&#xD;&#xA;     * This can be set to anything, but default usage is:&#xD;&#xA;     *&#xD;&#xA;     *     development&#xD;&#xA;     *     testing&#xD;&#xA;     *     production&#xD;&#xA;     *&#xD;&#xA;     * NOTE: If you change these, also change the error_reporting() code below&#xD;&#xA;     *&#xD;&#xA;     */&#xD;&#xA;    	define('ENVIRONMENT', 'development');&#xD;&#xA;    /*&#xD;&#xA;     *---------------------------------------------------------------&#xD;&#xA;     * ERROR REPORTING&#xD;&#xA;     *---------------------------------------------------------------&#xD;&#xA;     *&#xD;&#xA;     * Different environments will require different levels of error reporting.&#xD;&#xA;     * By default development will show errors but testing and live will hide them.&#xD;&#xA;     */&#xD;&#xA;    &#xD;&#xA;    if (defined('ENVIRONMENT'))&#xD;&#xA;    {&#xD;&#xA;    	switch (ENVIRONMENT)&#xD;&#xA;    	{&#xD;&#xA;    		case 'development':&#xD;&#xA;    			error_reporting(E_ALL);&#xD;&#xA;    		break;&#xD;&#xA;    	&#xD;&#xA;    		case 'testing':&#xD;&#xA;    		case 'production':&#xD;&#xA;    			error_reporting(0);&#xD;&#xA;    		break;&#xD;&#xA;    &#xD;&#xA;    		default:&#xD;&#xA;    			exit('The application environment is not set correctly.');&#xD;&#xA;    	}&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    /*&#xD;&#xA;     *---------------------------------------------------------------&#xD;&#xA;     * SYSTEM FOLDER NAME&#xD;&#xA;     *---------------------------------------------------------------&#xD;&#xA;     *&#xD;&#xA;     * This variable must contain the name of your ""system"" folder.&#xD;&#xA;     * Include the path if the folder is not in the same  directory&#xD;&#xA;     * as this file.&#xD;&#xA;     *&#xD;&#xA;     */&#xD;&#xA;    	$system_path = 'system';&#xD;&#xA;    &#xD;&#xA;    /*&#xD;&#xA;     *---------------------------------------------------------------&#xD;&#xA;     * APPLICATION FOLDER NAME&#xD;&#xA;     *---------------------------------------------------------------&#xD;&#xA;     *&#xD;&#xA;     * If you want this front controller to use a different ""application""&#xD;&#xA;     * folder then the default one you can set its name here. The folder&#xD;&#xA;     * can also be renamed or relocated anywhere on your server.  If&#xD;&#xA;     * you do, use a full server path. For more info please see the user guide:&#xD;&#xA;     * http://codeigniter.com/user_guide/general/managing_apps.html&#xD;&#xA;     *&#xD;&#xA;     * NO TRAILING SLASH!&#xD;&#xA;     *&#xD;&#xA;     */&#xD;&#xA;    	$application_folder = 'application';&#xD;&#xA;    &#xD;&#xA;    /*&#xD;&#xA;     * --------------------------------------------------------------------&#xD;&#xA;     * DEFAULT CONTROLLER&#xD;&#xA;     * --------------------------------------------------------------------&#xD;&#xA;     *&#xD;&#xA;     * Normally you will set your default controller in the routes.php file.&#xD;&#xA;     * You can, however, force a custom routing by hard-coding a&#xD;&#xA;     * specific controller class/function here.  For most applications, you&#xD;&#xA;     * WILL NOT set your routing here, but it's an option for those&#xD;&#xA;     * special instances where you might want to override the standard&#xD;&#xA;     * routing in a specific front controller that shares a common CI installation.&#xD;&#xA;     *&#xD;&#xA;     * IMPORTANT:  If you set the routing here, NO OTHER controller will be&#xD;&#xA;     * callable. In essence, this preference limits your application to ONE&#xD;&#xA;     * specific controller.  Leave the function name blank if you need&#xD;&#xA;     * to call functions dynamically via the URI.&#xD;&#xA;     *&#xD;&#xA;     * Un-comment the $routing array below to use this feature&#xD;&#xA;     *&#xD;&#xA;     */&#xD;&#xA;    	// The directory name, relative to the ""controllers"" folder.  Leave blank&#xD;&#xA;    	// if your controller is not in a sub-folder within the ""controllers"" folder&#xD;&#xA;    	// $routing['directory'] = '';&#xD;&#xA;    &#xD;&#xA;    	// The controller class file name.  Example:  Mycontroller&#xD;&#xA;    	// $routing['controller'] = '';&#xD;&#xA;    &#xD;&#xA;    	// The controller function you wish to be called.&#xD;&#xA;    	// $routing['function']	= '';&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    /*&#xD;&#xA;     * -------------------------------------------------------------------&#xD;&#xA;     *  CUSTOM CONFIG VALUES&#xD;&#xA;     * -------------------------------------------------------------------&#xD;&#xA;     *&#xD;&#xA;     * The $assign_to_config array below will be passed dynamically to the&#xD;&#xA;     * config class when initialized. This allows you to set custom config&#xD;&#xA;     * items or override any default config values found in the config.php file.&#xD;&#xA;     * This can be handy as it permits you to share one application between&#xD;&#xA;     * multiple front controller files, with each file containing different&#xD;&#xA;     * config values.&#xD;&#xA;     *&#xD;&#xA;     * Un-comment the $assign_to_config array below to use this feature&#xD;&#xA;     *&#xD;&#xA;     */&#xD;&#xA;    	// $assign_to_config['name_of_config_item'] = 'value of config item';&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    // --------------------------------------------------------------------&#xD;&#xA;    // END OF USER CONFIGURABLE SETTINGS.  DO NOT EDIT BELOW THIS LINE&#xD;&#xA;    // --------------------------------------------------------------------&#xD;&#xA;    &#xD;&#xA;    /*&#xD;&#xA;     * ---------------------------------------------------------------&#xD;&#xA;     *  Resolve the system path for increased reliability&#xD;&#xA;     * ---------------------------------------------------------------&#xD;&#xA;     */&#xD;&#xA;    &#xD;&#xA;    	// Set the current directory correctly for CLI requests&#xD;&#xA;    	if (defined('STDIN'))&#xD;&#xA;    	{&#xD;&#xA;    		chdir(dirname(__FILE__));&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	if (realpath($system_path) !== FALSE)&#xD;&#xA;    	{&#xD;&#xA;    		$system_path = realpath($system_path).'/';&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	// ensure there's a trailing slash&#xD;&#xA;    	$system_path = rtrim($system_path, '/').'/';&#xD;&#xA;    &#xD;&#xA;    	// Is the system path correct?&#xD;&#xA;    	if ( ! is_dir($system_path))&#xD;&#xA;    	{&#xD;&#xA;    		exit(""Your system folder path does not appear to be set correctly. Please open the following file and correct this: "".pathinfo(__FILE__, PATHINFO_BASENAME));&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    /*&#xD;&#xA;     * -------------------------------------------------------------------&#xD;&#xA;     *  Now that we know the path, set the main path constants&#xD;&#xA;     * -------------------------------------------------------------------&#xD;&#xA;     */&#xD;&#xA;    	// The name of THIS file&#xD;&#xA;    	define('SELF', pathinfo(__FILE__, PATHINFO_BASENAME));&#xD;&#xA;    &#xD;&#xA;    	// The PHP file extension&#xD;&#xA;    	// this global constant is deprecated.&#xD;&#xA;    	define('EXT', '.php');&#xD;&#xA;    &#xD;&#xA;    	// Path to the system folder&#xD;&#xA;    	define('BASEPATH', str_replace(""\\"", ""/"", $system_path));&#xD;&#xA;    &#xD;&#xA;    	// Path to the front controller (this file)&#xD;&#xA;    	define('FCPATH', str_replace(SELF, '', __FILE__));&#xD;&#xA;    &#xD;&#xA;    	// Name of the ""system folder""&#xD;&#xA;    	define('SYSDIR', trim(strrchr(trim(BASEPATH, '/'), '/'), '/'));&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    	// The path to the ""application"" folder&#xD;&#xA;    	if (is_dir($application_folder))&#xD;&#xA;    	{&#xD;&#xA;    		define('APPPATH', $application_folder.'/');&#xD;&#xA;    	}&#xD;&#xA;    	else&#xD;&#xA;    	{&#xD;&#xA;    		if ( ! is_dir(BASEPATH.$application_folder.'/'))&#xD;&#xA;    		{&#xD;&#xA;    			exit(""Your application folder path does not appear to be set correctly. Please open the following file and correct this: "".SELF);&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		define('APPPATH', BASEPATH.$application_folder.'/');&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    /*&#xD;&#xA;     * --------------------------------------------------------------------&#xD;&#xA;     * LOAD THE BOOTSTRAP FILE&#xD;&#xA;     * --------------------------------------------------------------------&#xD;&#xA;     *&#xD;&#xA;     * And away we go...&#xD;&#xA;     *&#xD;&#xA;     */&#xD;&#xA;    require_once BASEPATH.'core/CodeIgniter.php';&#xD;&#xA;    &#xD;&#xA;    /* End of file index.php */&#xD;&#xA;    /* Location: ./index.php */"
-185425268673291297,211,5,"    package com.example.gpstracking;&#xD;&#xA;    &#xD;&#xA;    import android.app.AlertDialog;&#xD;&#xA;    import android.app.Service;&#xD;&#xA;    import android.content.Context;&#xD;&#xA;    import android.content.DialogInterface;&#xD;&#xA;    import android.content.Intent;&#xD;&#xA;    import android.location.Location;&#xD;&#xA;    import android.location.LocationListener;&#xD;&#xA;    import android.location.LocationManager;&#xD;&#xA;    import android.net.ConnectivityManager;&#xD;&#xA;    import android.net.NetworkInfo;&#xD;&#xA;    import android.net.wifi.WifiManager;&#xD;&#xA;    import android.os.Bundle;&#xD;&#xA;    import android.os.IBinder;&#xD;&#xA;    import android.provider.Settings;&#xD;&#xA;    import android.util.Log;&#xD;&#xA;    import android.widget.Toast;&#xD;&#xA;    &#xD;&#xA;    public class GPSTracker extends Service implements LocationListener {&#xD;&#xA;    &#xD;&#xA;    	private final Context mContext;&#xD;&#xA;    &#xD;&#xA;    	// flag for GPS status&#xD;&#xA;    	boolean isGPSEnabled = false;&#xD;&#xA;    &#xD;&#xA;    	// flag for GPS status&#xD;&#xA;    	boolean canGetLocation = false;&#xD;&#xA;    &#xD;&#xA;    	Location location; // location&#xD;&#xA;    	double latitude; // latitude&#xD;&#xA;    	double longitude; // longitude&#xD;&#xA;    &#xD;&#xA;    	// The minimum distance to change Updates in meters&#xD;&#xA;    	private static final long MIN_DISTANCE_CHANGE_FOR_UPDATES = 10; // 10 meters&#xD;&#xA;    &#xD;&#xA;    	// The minimum time between updates in milliseconds&#xD;&#xA;    	private static final long MIN_TIME_BW_UPDATES = 1000 * 60 * 1; // 1 minute&#xD;&#xA;    &#xD;&#xA;    	// Declaring a Location Manager&#xD;&#xA;    	protected LocationManager locationManager;&#xD;&#xA;    &#xD;&#xA;    	public GPSTracker(Context context) {&#xD;&#xA;    		this.mContext = context;&#xD;&#xA;    		getLocation();&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public Location getLocation() {&#xD;&#xA;    		try {&#xD;&#xA;    			locationManager = (LocationManager) mContext.getSystemService(LOCATION_SERVICE);&#xD;&#xA;    &#xD;&#xA;    			// getting GPS status&#xD;&#xA;    			isGPSEnabled = locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER);&#xD;&#xA;    &#xD;&#xA;    			// getting network status&#xD;&#xA;    			boolean wifiEnabled = AndroidGPSTrackingActivity.wifiManager.isWifiEnabled();&#xD;&#xA;    &#xD;&#xA;    			ConnectivityManager cm = (ConnectivityManager) mContext.getSystemService(Context.CONNECTIVITY_SERVICE);&#xD;&#xA;    			NetworkInfo activeNetwork = cm.getActiveNetworkInfo();&#xD;&#xA;    &#xD;&#xA;    			this.canGetLocation = true;&#xD;&#xA;    &#xD;&#xA;    			// if DATA Enabled get lat/long using WIFI Services&#xD;&#xA;    			if (activeNetwork.isConnected()) {&#xD;&#xA;    				locationManager.requestLocationUpdates(&#xD;&#xA;    						LocationManager.NETWORK_PROVIDER,&#xD;&#xA;    						MIN_TIME_BW_UPDATES,&#xD;&#xA;    						MIN_DISTANCE_CHANGE_FOR_UPDATES, this);&#xD;&#xA;    				Log.d(""Network"", ""Network"");&#xD;&#xA;    				if (locationManager != null) {&#xD;&#xA;    					location = locationManager&#xD;&#xA;    							.getLastKnownLocation(LocationManager.NETWORK_PROVIDER);&#xD;&#xA;    &#xD;&#xA;    				}&#xD;&#xA;    			}&#xD;&#xA;    			// if WIFI Enabled get lat/long using WIFI Services&#xD;&#xA;    			if (wifiEnabled) {&#xD;&#xA;    				locationManager.requestLocationUpdates(&#xD;&#xA;    						LocationManager.NETWORK_PROVIDER,&#xD;&#xA;    						MIN_TIME_BW_UPDATES,&#xD;&#xA;    						MIN_DISTANCE_CHANGE_FOR_UPDATES, this);&#xD;&#xA;    				Log.d(""Network"", ""Network"");&#xD;&#xA;    				if (locationManager != null) {&#xD;&#xA;    					location = locationManager&#xD;&#xA;    							.getLastKnownLocation(LocationManager.NETWORK_PROVIDER);&#xD;&#xA;    &#xD;&#xA;    				}&#xD;&#xA;    			}&#xD;&#xA;    			// if GPS Enabled get lat/long using GPS Services&#xD;&#xA;    			if (isGPSEnabled) {&#xD;&#xA;    				if (location == null) {&#xD;&#xA;    					locationManager.requestLocationUpdates(&#xD;&#xA;    							LocationManager.GPS_PROVIDER,&#xD;&#xA;    							MIN_TIME_BW_UPDATES,&#xD;&#xA;    							MIN_DISTANCE_CHANGE_FOR_UPDATES, this);&#xD;&#xA;    					Log.d(""GPS Enabled"", ""GPS Enabled"");&#xD;&#xA;    					if (locationManager != null) {&#xD;&#xA;    						location = locationManager&#xD;&#xA;    								.getLastKnownLocation(LocationManager.GPS_PROVIDER);&#xD;&#xA;    &#xD;&#xA;    					}&#xD;&#xA;    				}&#xD;&#xA;    			}&#xD;&#xA;    			if (location != null) {&#xD;&#xA;    				latitude = location.getLatitude();&#xD;&#xA;    				longitude = location.getLongitude();&#xD;&#xA;    			}&#xD;&#xA;    &#xD;&#xA;    		} catch (Exception e) {&#xD;&#xA;    			e.printStackTrace();&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		return location;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	/**&#xD;&#xA;    	 * Stop using GPS listener&#xD;&#xA;    	 * Calling this function will stop using GPS in your app&#xD;&#xA;    	 * */&#xD;&#xA;    	public void stopUsingGPS(){&#xD;&#xA;    		if(locationManager != null){&#xD;&#xA;    			locationManager.removeUpdates(GPSTracker.this);&#xD;&#xA;    		}		&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	/**&#xD;&#xA;    	 * Function to get latitude&#xD;&#xA;    	 * */&#xD;&#xA;    	public double getLatitude(){&#xD;&#xA;    		if(location != null){&#xD;&#xA;    			latitude = location.getLatitude();&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		// return latitude&#xD;&#xA;    		return latitude;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	/**&#xD;&#xA;    	 * Function to get longitude&#xD;&#xA;    	 * */&#xD;&#xA;    	public double getLongitude(){&#xD;&#xA;    		if(location != null){&#xD;&#xA;    			longitude = location.getLongitude();&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		// return longitude&#xD;&#xA;    		return longitude;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	/**&#xD;&#xA;    	 * Function to check GPS/wifi enabled&#xD;&#xA;    	 * @return boolean&#xD;&#xA;    	 * */&#xD;&#xA;    	public boolean canGetLocation() {&#xD;&#xA;    		return this.canGetLocation;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	/**&#xD;&#xA;    	 * Function to show settings alert dialog&#xD;&#xA;    	 * On pressing Settings button will lauch Settings Options&#xD;&#xA;    	 * */&#xD;&#xA;    	public void showSettingsAlert(){&#xD;&#xA;    		AlertDialog.Builder alertDialog = new AlertDialog.Builder(mContext);&#xD;&#xA;    &#xD;&#xA;    		// Setting Dialog Title&#xD;&#xA;    		alertDialog.setTitle(""GPS is settings"");&#xD;&#xA;    &#xD;&#xA;    		// Setting Dialog Message&#xD;&#xA;    		alertDialog.setMessage(""GPS is not enabled. Do you want to go to settings menu?"");&#xD;&#xA;    &#xD;&#xA;    		// On pressing Settings button&#xD;&#xA;    		alertDialog.setPositiveButton(""Settings"", new DialogInterface.OnClickListener() {&#xD;&#xA;    			public void onClick(DialogInterface dialog,int which) {&#xD;&#xA;    				Intent intent = new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS);&#xD;&#xA;    				mContext.startActivity(intent);&#xD;&#xA;    			}&#xD;&#xA;    		});&#xD;&#xA;    &#xD;&#xA;    		// on pressing cancel button&#xD;&#xA;    		alertDialog.setNegativeButton(""Cancel"", new DialogInterface.OnClickListener() {&#xD;&#xA;    			public void onClick(DialogInterface dialog, int which) {&#xD;&#xA;    				dialog.cancel();&#xD;&#xA;    			}&#xD;&#xA;    		});&#xD;&#xA;    &#xD;&#xA;    		// Showing Alert Message&#xD;&#xA;    		alertDialog.show();&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	@Override&#xD;&#xA;    	public void onLocationChanged(Location location) {&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	@Override&#xD;&#xA;    	public void onProviderDisabled(String provider) {&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	@Override&#xD;&#xA;    	public void onProviderEnabled(String provider) {&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	@Override&#xD;&#xA;    	public void onStatusChanged(String provider, int status, Bundle extras) {&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	@Override&#xD;&#xA;    	public IBinder onBind(Intent arg0) {&#xD;&#xA;    		return null;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    }"
-8527486550530475939,476,5,"    'Samir Khan&#xD;&#xA;    'simulationconsultant@gmail.com&#xD;&#xA;    'The latest version of this spreadsheet can be downloaded from http://investexcel.net/multiple-stock-quote-downloader-for-excel/&#xD;&#xA;    'Please link to http://investexcel.net if you like this spreadsheet&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    Sub DownloadStockQuotes(ByVal stockTicker As String, ByVal StartDate As Date, ByVal EndDate As Date, ByVal DestinationCell As String, ByVal freq As String)&#xD;&#xA;    &#xD;&#xA;    Dim qurl As String&#xD;&#xA;    Dim StartMonth, StartDay, StartYear, EndMonth, EndDay, EndYear As String&#xD;&#xA;    &#xD;&#xA;    qurl = ""http://finance.google.com/finance/historical?q="" & stockTicker&#xD;&#xA;    qurl = qurl & ""&startdate="" & MonthName(Month(StartDate), True) & _&#xD;&#xA;           ""+"" & Day(StartDate) & ""+"" & Year(StartDate) & _&#xD;&#xA;           ""&enddate="" & MonthName(Month(EndDate), True) & _&#xD;&#xA;           ""+"" & Day(EndDate) & ""+"" & Year(EndDate) & ""&output=csv""&#xD;&#xA;           &#xD;&#xA;    On Error GoTo ErrorHandler:&#xD;&#xA;    &#xD;&#xA;    QueryQuote:&#xD;&#xA;    With ActiveSheet.QueryTables.Add(Connection:=""URL;"" & qurl, Destination:=Range(DestinationCell))&#xD;&#xA;        .BackgroundQuery = True&#xD;&#xA;        .TablesOnlyFromHTML = False&#xD;&#xA;        .Refresh BackgroundQuery:=False&#xD;&#xA;        .SaveData = True&#xD;&#xA;    End With&#xD;&#xA;    &#xD;&#xA;    ErrorHandler:&#xD;&#xA;    &#xD;&#xA;    End Sub&#xD;&#xA;    &#xD;&#xA;    Sub DownloadData()&#xD;&#xA;    &#xD;&#xA;    Dim frequency As String&#xD;&#xA;    Dim numRows As Integer&#xD;&#xA;    Dim lastRow As Integer&#xD;&#xA;    Dim lastErrorRow As Integer&#xD;&#xA;    Dim lastSuccessRow As Integer&#xD;&#xA;    Dim stockTicker As String&#xD;&#xA;    Dim numStockErrors As Integer&#xD;&#xA;    Dim numStockSuccess As Integer&#xD;&#xA;    &#xD;&#xA;    numStockErrors = 0&#xD;&#xA;    numStockSuccess = 0&#xD;&#xA;    &#xD;&#xA;    Application.Calculation = xlCalculationManual&#xD;&#xA;    Application.ScreenUpdating = False&#xD;&#xA;    &#xD;&#xA;    lastErrorRow = ActiveSheet.Cells(Rows.Count, ""J"").End(xlUp).Row&#xD;&#xA;    lastSuccessRow = ActiveSheet.Cells(Rows.Count, ""L"").End(xlUp).Row&#xD;&#xA;    &#xD;&#xA;    ClearErrorList lastErrorRow&#xD;&#xA;    ClearSuccessList lastSuccessRow&#xD;&#xA;    &#xD;&#xA;    lastRow = ActiveSheet.Cells(Rows.Count, ""a"").End(xlUp).Row&#xD;&#xA;    frequency = Worksheets(""Parameters"").Range(""b7"")&#xD;&#xA;    &#xD;&#xA;    'Delete all sheets apart from Parameters sheet&#xD;&#xA;    Dim ws As Worksheet&#xD;&#xA;    Application.DisplayAlerts = False&#xD;&#xA;    For Each ws In Worksheets&#xD;&#xA;        If ws.Name <> ""Parameters"" And ws.Name <> ""About"" Then ws.Delete&#xD;&#xA;    Next&#xD;&#xA;    &#xD;&#xA;    Application.DisplayAlerts = True&#xD;&#xA;    &#xD;&#xA;    'Loop through all tickers&#xD;&#xA;    For ticker = 12 To lastRow&#xD;&#xA;    &#xD;&#xA;        stockTicker = Worksheets(""Parameters"").Range(""$a$"" & ticker)&#xD;&#xA;    &#xD;&#xA;        If stockTicker = """" Then&#xD;&#xA;            GoTo NextIteration&#xD;&#xA;        End If&#xD;&#xA;    &#xD;&#xA;        Sheets.Add After:=Sheets(Sheets.Count)&#xD;&#xA;        &#xD;&#xA;        If InStr(stockTicker, "":"") > 0 Then&#xD;&#xA;            ActiveSheet.Name = Replace(stockTicker, "":"", """")&#xD;&#xA;        Else&#xD;&#xA;            ActiveSheet.Name = stockTicker&#xD;&#xA;        End If&#xD;&#xA;        &#xD;&#xA;        Cells(1, 1) = ""Stock Quotes for "" & stockTicker&#xD;&#xA;        Call DownloadStockQuotes(stockTicker, Worksheets(""Parameters"").Range(""$b$5""), Worksheets(""Parameters"").Range(""$b$6""), ""$a$2"", frequency)&#xD;&#xA;        Columns(""a:a"").TextToColumns Destination:=Range(""a1""), DataType:=xlDelimited, _&#xD;&#xA;                                     TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=False, Tab:=True, _&#xD;&#xA;                                     Semicolon:=False, Comma:=True, Space:=False, Other:=False, FieldInfo:=Array(Array(1, 1), Array(2, 1), Array(3, 1), Array(4, 1), Array(5, 1), Array(6, 1), Array(7, 1))&#xD;&#xA;    &#xD;&#xA;        &#xD;&#xA;        If InStr(stockTicker, "":"") > 0 Then&#xD;&#xA;            stockTicker = Replace(stockTicker, "":"", """")&#xD;&#xA;        End If&#xD;&#xA;        &#xD;&#xA;        Sheets(stockTicker).Columns(""A:G"").ColumnWidth = 10&#xD;&#xA;    &#xD;&#xA;        lastRow = Sheets(stockTicker).UsedRange.Row - 2 + Sheets(stockTicker).UsedRange.Rows.Count&#xD;&#xA;    &#xD;&#xA;        If lastRow < 3 Then&#xD;&#xA;            Application.DisplayAlerts = False&#xD;&#xA;            Sheets(stockTicker).Delete&#xD;&#xA;            numStockErrors = numStockErrors + 1&#xD;&#xA;            ErrorList stockTicker, numStockErrors&#xD;&#xA;            GoTo NextIteration&#xD;&#xA;            Application.DisplayAlerts = True&#xD;&#xA;        Else&#xD;&#xA;            numStockSuccess = numStockSuccess + 1&#xD;&#xA;            If Left(stockTicker, 1) = ""^"" Then&#xD;&#xA;                SuccessList Replace(stockTicker, ""^"", """"), numStockSuccess&#xD;&#xA;            Else&#xD;&#xA;                SuccessList stockTicker, numStockSuccess&#xD;&#xA;            End If&#xD;&#xA;        End If&#xD;&#xA;    &#xD;&#xA;        Sheets(stockTicker).Sort.SortFields.Add Key:=Range(""A3:A"" & lastRow), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal&#xD;&#xA;        With Sheets(stockTicker).Sort&#xD;&#xA;            .SetRange Range(""A2:G"" & lastRow)&#xD;&#xA;            .Header = xlYes&#xD;&#xA;            .MatchCase = False&#xD;&#xA;            .Orientation = xlTopToBottom&#xD;&#xA;            .SortMethod = xlPinYin&#xD;&#xA;            .Apply&#xD;&#xA;        End With&#xD;&#xA;    &#xD;&#xA;        Range(""a3:a"" & lastRow).NumberFormat = ""yyyy-mm-dd;@""&#xD;&#xA;    &#xD;&#xA;        'Delete final blank row otherwise will get ,,,, at bottom of CSV&#xD;&#xA;        Sheets(stockTicker).Rows(lastRow + 1 & "":"" & Sheets(stockTicker).Rows.Count).Delete&#xD;&#xA;    &#xD;&#xA;        'Remove initial ^ in ticker names from Sheets&#xD;&#xA;        If Left(stockTicker, 1) = ""^"" Then&#xD;&#xA;            ActiveSheet.Name = Replace(stockTicker, ""^"", """")&#xD;&#xA;        Else&#xD;&#xA;            ActiveSheet.Name = stockTicker&#xD;&#xA;        End If&#xD;&#xA;    &#xD;&#xA;        'Remove hyphens in ticker names from Sheet names, otherwise error in collation&#xD;&#xA;        If InStr(stockTicker, ""-"") > 0 Then&#xD;&#xA;            ActiveSheet.Name = Replace(stockTicker, ""-"", """")&#xD;&#xA;        End If&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    NextIteration:&#xD;&#xA;    Next ticker&#xD;&#xA;    &#xD;&#xA;    Application.DisplayAlerts = False&#xD;&#xA;    &#xD;&#xA;    If Sheets(""Parameters"").Shapes(""WriteToCSVCheckBox"").ControlFormat.Value = xlOn Then&#xD;&#xA;        On Error GoTo ErrorHandler:&#xD;&#xA;        Call CopyToCSV&#xD;&#xA;    End If&#xD;&#xA;    &#xD;&#xA;    If Sheets(""Parameters"").Shapes(""CollateDataCheckBox"").ControlFormat.Value = xlOn Then&#xD;&#xA;        On Error GoTo ErrorHandler:&#xD;&#xA;        Call CollateData&#xD;&#xA;    End If&#xD;&#xA;    &#xD;&#xA;    ErrorHandler:&#xD;&#xA;    &#xD;&#xA;    Worksheets(""Parameters"").Select&#xD;&#xA;    &#xD;&#xA;    Application.ScreenUpdating = True&#xD;&#xA;    Application.Calculation = xlCalculationAutomatic&#xD;&#xA;    &#xD;&#xA;    Worksheets(""Parameters"").Select&#xD;&#xA;    For Each C In ThisWorkbook.Connections&#xD;&#xA;        C.Delete&#xD;&#xA;    Next&#xD;&#xA;    &#xD;&#xA;    End Sub&#xD;&#xA;    Sub CollateData()&#xD;&#xA;    &#xD;&#xA;    Dim ws As Worksheet&#xD;&#xA;    Dim i As Integer, first As Integer&#xD;&#xA;    Dim maxRow As Integer&#xD;&#xA;    Dim maxTickerWS As Worksheet&#xD;&#xA;    &#xD;&#xA;    maxRow = 0&#xD;&#xA;    For Each ws In Worksheets&#xD;&#xA;        If ws.Name <> ""Parameters"" Then&#xD;&#xA;            If ws.UsedRange.Rows.Count > maxRow Then&#xD;&#xA;                maxRow = ws.UsedRange.Rows.Count&#xD;&#xA;                Set maxTickerWS = ws&#xD;&#xA;            End If&#xD;&#xA;        End If&#xD;&#xA;    Next&#xD;&#xA;    &#xD;&#xA;    Sheets.Add After:=Sheets(Sheets.Count)&#xD;&#xA;    ActiveSheet.Name = ""Open""&#xD;&#xA;    &#xD;&#xA;    Sheets.Add After:=Sheets(Sheets.Count)&#xD;&#xA;    ActiveSheet.Name = ""High""&#xD;&#xA;    &#xD;&#xA;    Sheets.Add After:=Sheets(Sheets.Count)&#xD;&#xA;    ActiveSheet.Name = ""Low""&#xD;&#xA;    &#xD;&#xA;    Sheets.Add After:=Sheets(Sheets.Count)&#xD;&#xA;    ActiveSheet.Name = ""Close""&#xD;&#xA;    &#xD;&#xA;    Sheets.Add After:=Sheets(Sheets.Count)&#xD;&#xA;    ActiveSheet.Name = ""Volume""&#xD;&#xA;    &#xD;&#xA;    Sheets.Add After:=Sheets(Sheets.Count)&#xD;&#xA;    ActiveSheet.Name = ""Adjusted Close""&#xD;&#xA;    &#xD;&#xA;    i = 1&#xD;&#xA;    maxTickerWS.Range(""A2"", ""B"" & maxRow).Copy Destination:=Sheets(""Open"").Cells(1, i)&#xD;&#xA;    Sheets(""Open"").Cells(1, i + 1) = maxTickerWS.Name&#xD;&#xA;    &#xD;&#xA;    maxTickerWS.Range(""A2"", ""a"" & maxRow).Copy Destination:=Sheets(""High"").Cells(1, i)&#xD;&#xA;    maxTickerWS.Range(""c2"", ""c"" & maxRow).Copy Destination:=Sheets(""High"").Cells(1, i + 1)&#xD;&#xA;    Sheets(""High"").Cells(1, i + 1) = maxTickerWS.Name&#xD;&#xA;    &#xD;&#xA;    maxTickerWS.Range(""A2"", ""a"" & maxRow).Copy Destination:=Sheets(""Low"").Cells(1, i)&#xD;&#xA;    maxTickerWS.Range(""d2"", ""d"" & maxRow).Copy Destination:=Sheets(""Low"").Cells(1, i + 1)&#xD;&#xA;    Sheets(""Low"").Cells(1, i + 1) = maxTickerWS.Name&#xD;&#xA;    &#xD;&#xA;    maxTickerWS.Range(""A2"", ""a"" & maxRow).Copy Destination:=Sheets(""Close"").Cells(1, i)&#xD;&#xA;    maxTickerWS.Range(""e2"", ""e"" & maxRow).Copy Destination:=Sheets(""Close"").Cells(1, i + 1)&#xD;&#xA;    Sheets(""Close"").Cells(1, i + 1) = maxTickerWS.Name&#xD;&#xA;    &#xD;&#xA;    maxTickerWS.Range(""A2"", ""a"" & maxRow).Copy Destination:=Sheets(""Volume"").Cells(1, i)&#xD;&#xA;    maxTickerWS.Range(""f2"", ""f"" & maxRow).Copy Destination:=Sheets(""Volume"").Cells(1, i + 1)&#xD;&#xA;    Sheets(""Volume"").Cells(1, i + 1) = maxTickerWS.Name&#xD;&#xA;    &#xD;&#xA;    maxTickerWS.Range(""A2"", ""a"" & maxRow).Copy Destination:=Sheets(""Adjusted Close"").Cells(1, i)&#xD;&#xA;    maxTickerWS.Range(""g2"", ""g"" & maxRow).Copy Destination:=Sheets(""Adjusted Close"").Cells(1, i + 1)&#xD;&#xA;    Sheets(""Adjusted Close"").Cells(1, i + 1) = maxTickerWS.Name&#xD;&#xA;    &#xD;&#xA;    i = i + 2&#xD;&#xA;    &#xD;&#xA;    For Each ws In Worksheets&#xD;&#xA;    &#xD;&#xA;        If ws.Name <> ""Parameters"" And ws.Name <> ""About"" And ws.Name <> maxTickerWS.Name And ws.Name <> ""Open"" And ws.Name <> ""High"" And ws.Name <> ""Low"" And ws.Name <> ""Close"" And ws.Name <> ""Volume"" And ws.Name <> ""Adjusted Close"" Then&#xD;&#xA;    &#xD;&#xA;            Sheets(""Open"").Cells(1, i) = ws.Name&#xD;&#xA;            Sheets(""Open"").Range(Sheets(""Open"").Cells(2, i), Sheets(""Open"").Cells(maxRow - 1, i)).Formula = _&#xD;&#xA;            ""=vlookup(A2,"" & ws.Name & ""!A$2:G$"" & maxRow & "",2,0)""&#xD;&#xA;    &#xD;&#xA;            Sheets(""High"").Cells(1, i) = ws.Name&#xD;&#xA;            Sheets(""High"").Range(Sheets(""High"").Cells(2, i), Sheets(""High"").Cells(maxRow - 1, i)).Formula = _&#xD;&#xA;            ""=vlookup(A2,"" & ws.Name & ""!A$2:G$"" & maxRow & "",3,0)""&#xD;&#xA;    &#xD;&#xA;            Sheets(""Low"").Cells(1, i) = ws.Name&#xD;&#xA;            Sheets(""Low"").Range(Sheets(""Low"").Cells(2, i), Sheets(""Low"").Cells(maxRow - 1, i)).Formula = _&#xD;&#xA;            ""=vlookup(A2,"" & ws.Name & ""!A$2:G$"" & maxRow & "",4,0)""&#xD;&#xA;    &#xD;&#xA;            Sheets(""Close"").Cells(1, i) = ws.Name&#xD;&#xA;            Sheets(""Close"").Range(Sheets(""Close"").Cells(2, i), Sheets(""Close"").Cells(maxRow - 1, i)).Formula = _&#xD;&#xA;            ""=vlookup(A2,"" & ws.Name & ""!A$2:G$"" & maxRow & "",5,0)""&#xD;&#xA;    &#xD;&#xA;            Sheets(""Volume"").Cells(1, i) = ws.Name&#xD;&#xA;            Sheets(""Volume"").Range(Sheets(""Volume"").Cells(2, i), Sheets(""Volume"").Cells(maxRow - 1, i)).Formula = _&#xD;&#xA;            ""=vlookup(A2,"" & ws.Name & ""!A$2:G$"" & maxRow & "",6,0)""&#xD;&#xA;    &#xD;&#xA;            Sheets(""Adjusted Close"").Cells(1, i) = ws.Name&#xD;&#xA;            Sheets(""Adjusted Close"").Range(Sheets(""Adjusted Close"").Cells(2, i), Sheets(""Adjusted Close"").Cells(maxRow - 1, i)).Formula = _&#xD;&#xA;            ""=vlookup(A2,"" & ws.Name & ""!A$2:G$"" & maxRow & "",7,0)""&#xD;&#xA;    &#xD;&#xA;            i = i + 1&#xD;&#xA;    &#xD;&#xA;        End If&#xD;&#xA;    Next&#xD;&#xA;    &#xD;&#xA;    On Error Resume Next&#xD;&#xA;    &#xD;&#xA;    Sheets(""Open"").UsedRange.SpecialCells(xlFormulas, xlErrors).Clear&#xD;&#xA;    Sheets(""Close"").UsedRange.SpecialCells(xlFormulas, xlErrors).Clear&#xD;&#xA;    Sheets(""High"").UsedRange.SpecialCells(xlFormulas, xlErrors).Clear&#xD;&#xA;    Sheets(""Low"").UsedRange.SpecialCells(xlFormulas, xlErrors).Clear&#xD;&#xA;    Sheets(""Volume"").UsedRange.SpecialCells(xlFormulas, xlErrors).Clear&#xD;&#xA;    Sheets(""Adjusted Close"").UsedRange.SpecialCells(xlFormulas, xlErrors).Clear&#xD;&#xA;    &#xD;&#xA;    On Error GoTo 0&#xD;&#xA;    &#xD;&#xA;    Sheets(""Open"").Columns(""A:A"").EntireColumn.AutoFit&#xD;&#xA;    Sheets(""High"").Columns(""A:A"").EntireColumn.AutoFit&#xD;&#xA;    Sheets(""Low"").Columns(""A:A"").EntireColumn.AutoFit&#xD;&#xA;    Sheets(""Close"").Columns(""A:A"").EntireColumn.AutoFit&#xD;&#xA;    Sheets(""Volume"").Columns(""A:A"").EntireColumn.AutoFit&#xD;&#xA;    Sheets(""Adjusted Close"").Columns(""A:A"").EntireColumn.AutoFit&#xD;&#xA;    End Sub&#xD;&#xA;    &#xD;&#xA;    Sub SuccessList(ByVal stockTicker As String, ByVal numStockSuccess As Integer)&#xD;&#xA;    &#xD;&#xA;    Sheets(""Parameters"").Range(""L"" & 10 + numStockSuccess) = stockTicker&#xD;&#xA;    &#xD;&#xA;    Sheets(""Parameters"").Range(""L10:L"" & 10 + numStockSuccess).Borders(xlDiagonalDown).LineStyle = xlNone&#xD;&#xA;    Sheets(""Parameters"").Range(""L10:L"" & 10 + numStockSuccess).Borders(xlDiagonalUp).LineStyle = xlNone&#xD;&#xA;    Sheets(""Parameters"").Range(""L10:L"" & 10 + numStockSuccess).Borders(xlEdgeLeft).LineStyle = xlNone&#xD;&#xA;    Sheets(""Parameters"").Range(""L10:L"" & 10 + numStockSuccess).Borders(xlEdgeTop).LineStyle = xlNone&#xD;&#xA;    Sheets(""Parameters"").Range(""L10:L"" & 10 + numStockSuccess).Borders(xlEdgeBottom).LineStyle = xlNone&#xD;&#xA;    Sheets(""Parameters"").Range(""L10:L"" & 10 + numStockSuccess).Borders(xlEdgeRight).LineStyle = xlNone&#xD;&#xA;    Sheets(""Parameters"").Range(""L10:L"" & 10 + numStockSuccess).Borders(xlInsideVertical).LineStyle = xlNone&#xD;&#xA;    Sheets(""Parameters"").Range(""L10:L"" & 10 + numStockSuccess).Borders(xlInsideHorizontal).LineStyle = xlNone&#xD;&#xA;    Sheets(""Parameters"").Range(""L10:L"" & 10 + numStockSuccess).Borders(xlDiagonalDown).LineStyle = xlNone&#xD;&#xA;    Sheets(""Parameters"").Range(""L10:L"" & 10 + numStockSuccess).Borders(xlDiagonalUp).LineStyle = xlNone&#xD;&#xA;    &#xD;&#xA;    With Sheets(""Parameters"").Range(""L10:L"" & 10 + numStockSuccess).Borders(xlEdgeLeft)&#xD;&#xA;        .LineStyle = xlContinuous&#xD;&#xA;        .ColorIndex = 0&#xD;&#xA;        .TintAndShade = 0&#xD;&#xA;        .Weight = xlMedium&#xD;&#xA;    End With&#xD;&#xA;    With Sheets(""Parameters"").Range(""L10:L"" & 10 + numStockSuccess).Borders(xlEdgeTop)&#xD;&#xA;        .LineStyle = xlContinuous&#xD;&#xA;        .ColorIndex = 0&#xD;&#xA;        .TintAndShade = 0&#xD;&#xA;        .Weight = xlMedium&#xD;&#xA;    End With&#xD;&#xA;    With Sheets(""Parameters"").Range(""L10:L"" & 10 + numStockSuccess).Borders(xlEdgeBottom)&#xD;&#xA;        .LineStyle = xlContinuous&#xD;&#xA;        .ColorIndex = 0&#xD;&#xA;        .TintAndShade = 0&#xD;&#xA;        .Weight = xlMedium&#xD;&#xA;    End With&#xD;&#xA;    With Sheets(""Parameters"").Range(""L10:L"" & 10 + numStockSuccess).Borders(xlEdgeRight)&#xD;&#xA;        .LineStyle = xlContinuous&#xD;&#xA;        .ColorIndex = 0&#xD;&#xA;        .TintAndShade = 0&#xD;&#xA;        .Weight = xlMedium&#xD;&#xA;    End With&#xD;&#xA;    &#xD;&#xA;    Sheets(""Parameters"").Range(""L10:L"" & 10 + numStockSuccess).Borders(xlInsideVertical).LineStyle = xlNone&#xD;&#xA;    Sheets(""Parameters"").Range(""L10:L"" & 10 + numStockSuccess).Borders(xlInsideHorizontal).LineStyle = xlNone&#xD;&#xA;    &#xD;&#xA;    With Sheets(""Parameters"").Range(""L10:L"" & 10 + numStockSuccess).Interior&#xD;&#xA;        .PatternColorIndex = xlAutomatic&#xD;&#xA;        .ThemeColor = xlThemeColorAccent2&#xD;&#xA;        .TintAndShade = 0.799981688894314&#xD;&#xA;        .PatternTintAndShade = 0&#xD;&#xA;    End With&#xD;&#xA;    &#xD;&#xA;    End Sub&#xD;&#xA;    &#xD;&#xA;    Sub ErrorList(ByVal stockTicker As String, ByVal numStockErrors As Integer)&#xD;&#xA;    &#xD;&#xA;    Sheets(""Parameters"").Range(""J"" & 10 + numStockErrors) = stockTicker&#xD;&#xA;    &#xD;&#xA;    Sheets(""Parameters"").Range(""J10:J"" & 10 + numStockErrors).Borders(xlDiagonalDown).LineStyle = xlNone&#xD;&#xA;    Sheets(""Parameters"").Range(""J10:J"" & 10 + numStockErrors).Borders(xlDiagonalUp).LineStyle = xlNone&#xD;&#xA;    Sheets(""Parameters"").Range(""J10:J"" & 10 + numStockErrors).Borders(xlEdgeLeft).LineStyle = xlNone&#xD;&#xA;    Sheets(""Parameters"").Range(""J10:J"" & 10 + numStockErrors).Borders(xlEdgeTop).LineStyle = xlNone&#xD;&#xA;    Sheets(""Parameters"").Range(""J10:J"" & 10 + numStockErrors).Borders(xlEdgeBottom).LineStyle = xlNone&#xD;&#xA;    Sheets(""Parameters"").Range(""J10:J"" & 10 + numStockErrors).Borders(xlEdgeRight).LineStyle = xlNone&#xD;&#xA;    Sheets(""Parameters"").Range(""J10:J"" & 10 + numStockErrors).Borders(xlInsideVertical).LineStyle = xlNone&#xD;&#xA;    Sheets(""Parameters"").Range(""J10:J"" & 10 + numStockErrors).Borders(xlInsideHorizontal).LineStyle = xlNone&#xD;&#xA;    Sheets(""Parameters"").Range(""J10:J"" & 10 + numStockErrors).Borders(xlDiagonalDown).LineStyle = xlNone&#xD;&#xA;    Sheets(""Parameters"").Range(""J10:J"" & 10 + numStockErrors).Borders(xlDiagonalUp).LineStyle = xlNone&#xD;&#xA;    &#xD;&#xA;    With Sheets(""Parameters"").Range(""J10:J"" & 10 + numStockErrors).Borders(xlEdgeLeft)&#xD;&#xA;        .LineStyle = xlContinuous&#xD;&#xA;        .ColorIndex = 0&#xD;&#xA;        .TintAndShade = 0&#xD;&#xA;        .Weight = xlMedium&#xD;&#xA;    End With&#xD;&#xA;    With Sheets(""Parameters"").Range(""J10:J"" & 10 + numStockErrors).Borders(xlEdgeTop)&#xD;&#xA;        .LineStyle = xlContinuous&#xD;&#xA;        .ColorIndex = 0&#xD;&#xA;        .TintAndShade = 0&#xD;&#xA;        .Weight = xlMedium&#xD;&#xA;    End With&#xD;&#xA;    With Sheets(""Parameters"").Range(""J10:J"" & 10 + numStockErrors).Borders(xlEdgeBottom)&#xD;&#xA;        .LineStyle = xlContinuous&#xD;&#xA;        .ColorIndex = 0&#xD;&#xA;        .TintAndShade = 0&#xD;&#xA;        .Weight = xlMedium&#xD;&#xA;    End With&#xD;&#xA;    With Sheets(""Parameters"").Range(""J10:J"" & 10 + numStockErrors).Borders(xlEdgeRight)&#xD;&#xA;        .LineStyle = xlContinuous&#xD;&#xA;        .ColorIndex = 0&#xD;&#xA;        .TintAndShade = 0&#xD;&#xA;        .Weight = xlMedium&#xD;&#xA;    End With&#xD;&#xA;    &#xD;&#xA;    Sheets(""Parameters"").Range(""J10:J"" & 10 + numStockErrors).Borders(xlInsideVertical).LineStyle = xlNone&#xD;&#xA;    Sheets(""Parameters"").Range(""J10:J"" & 10 + numStockErrors).Borders(xlInsideHorizontal).LineStyle = xlNone&#xD;&#xA;    &#xD;&#xA;    With Sheets(""Parameters"").Range(""J10:J"" & 10 + numStockErrors).Interior&#xD;&#xA;        .PatternColorIndex = xlAutomatic&#xD;&#xA;        .ThemeColor = xlThemeColorAccent2&#xD;&#xA;        .TintAndShade = 0.799981688894314&#xD;&#xA;        .PatternTintAndShade = 0&#xD;&#xA;    End With&#xD;&#xA;    &#xD;&#xA;    End Sub&#xD;&#xA;    &#xD;&#xA;    Sub ClearErrorList(ByVal lastErrorRow As Integer)&#xD;&#xA;    If lastErrorRow > 10 Then&#xD;&#xA;        Worksheets(""Parameters"").Range(""J11:J"" & lastErrorRow).Clear&#xD;&#xA;        With Sheets(""Parameters"").Range(""J10"").Borders(xlEdgeLeft)&#xD;&#xA;            .LineStyle = xlContinuous&#xD;&#xA;            .ColorIndex = 0&#xD;&#xA;            .TintAndShade = 0&#xD;&#xA;            .Weight = xlMedium&#xD;&#xA;        End With&#xD;&#xA;        With Sheets(""Parameters"").Range(""J10"").Borders(xlEdgeTop)&#xD;&#xA;            .LineStyle = xlContinuous&#xD;&#xA;            .ColorIndex = 0&#xD;&#xA;            .TintAndShade = 0&#xD;&#xA;            .Weight = xlMedium&#xD;&#xA;        End With&#xD;&#xA;        With Sheets(""Parameters"").Range(""J10"").Borders(xlEdgeBottom)&#xD;&#xA;            .LineStyle = xlContinuous&#xD;&#xA;            .ColorIndex = 0&#xD;&#xA;            .TintAndShade = 0&#xD;&#xA;            .Weight = xlMedium&#xD;&#xA;        End With&#xD;&#xA;        With Sheets(""Parameters"").Range(""J10"").Borders(xlEdgeRight)&#xD;&#xA;            .LineStyle = xlContinuous&#xD;&#xA;            .ColorIndex = 0&#xD;&#xA;            .TintAndShade = 0&#xD;&#xA;            .Weight = xlMedium&#xD;&#xA;        End With&#xD;&#xA;    End If&#xD;&#xA;    End Sub&#xD;&#xA;    &#xD;&#xA;    Sub ClearSuccessList(ByVal lastSuccessRow As Integer)&#xD;&#xA;    If lastSuccessRow > 10 Then&#xD;&#xA;        Worksheets(""Parameters"").Range(""L11:L"" & lastSuccessRow).Clear&#xD;&#xA;        With Sheets(""Parameters"").Range(""L10"").Borders(xlEdgeLeft)&#xD;&#xA;            .LineStyle = xlContinuous&#xD;&#xA;            .ColorIndex = 0&#xD;&#xA;            .TintAndShade = 0&#xD;&#xA;            .Weight = xlMedium&#xD;&#xA;        End With&#xD;&#xA;        With Sheets(""Parameters"").Range(""L10"").Borders(xlEdgeTop)&#xD;&#xA;            .LineStyle = xlContinuous&#xD;&#xA;            .ColorIndex = 0&#xD;&#xA;            .TintAndShade = 0&#xD;&#xA;            .Weight = xlMedium&#xD;&#xA;        End With&#xD;&#xA;        With Sheets(""Parameters"").Range(""L10"").Borders(xlEdgeBottom)&#xD;&#xA;            .LineStyle = xlContinuous&#xD;&#xA;            .ColorIndex = 0&#xD;&#xA;            .TintAndShade = 0&#xD;&#xA;            .Weight = xlMedium&#xD;&#xA;        End With&#xD;&#xA;        With Sheets(""Parameters"").Range(""L10"").Borders(xlEdgeRight)&#xD;&#xA;            .LineStyle = xlContinuous&#xD;&#xA;            .ColorIndex = 0&#xD;&#xA;            .TintAndShade = 0&#xD;&#xA;            .Weight = xlMedium&#xD;&#xA;        End With&#xD;&#xA;    End If&#xD;&#xA;    End Sub&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    Sub CopyToCSV()&#xD;&#xA;    &#xD;&#xA;    Dim MyPath As String&#xD;&#xA;    Dim MyFileName As String&#xD;&#xA;    &#xD;&#xA;    dateFrom = Worksheets(""Parameters"").Range(""$b$5"")&#xD;&#xA;    dateTo = Worksheets(""Parameters"").Range(""$b$6"")&#xD;&#xA;    frequency = Worksheets(""Parameters"").Range(""$b$7"")&#xD;&#xA;    MyPath = Worksheets(""Parameters"").Range(""$b$8"")&#xD;&#xA;    &#xD;&#xA;    For Each ws In Worksheets&#xD;&#xA;        If ws.Name <> ""Parameters"" And ws.Name <> ""About"" Then&#xD;&#xA;            ticker = ws.Name&#xD;&#xA;            MyFileName = ticker & "" "" & Format(dateFrom, ""dd-mm-yyyy"") & "" - "" & Format(dateTo, ""dd-mm-yyyy"") & "" "" & frequency&#xD;&#xA;            If Not Right(MyPath, 1) = ""\"" Then MyPath = MyPath & ""\""&#xD;&#xA;            If Not Right(MyFileName, 4) = "".csv"" Then MyFileName = MyFileName & "".csv""&#xD;&#xA;            Sheets(ticker).Copy&#xD;&#xA;            With ActiveWorkbook&#xD;&#xA;                .SaveAs Filename:= _&#xD;&#xA;                        MyPath & MyFileName, _&#xD;&#xA;                        FileFormat:=xlCSV, _&#xD;&#xA;                        CreateBackup:=False&#xD;&#xA;                .Close False&#xD;&#xA;            End With&#xD;&#xA;        End If&#xD;&#xA;    Next&#xD;&#xA;    &#xD;&#xA;    End Sub"
-8119453640139065022,482,5,"    <table id=""example"" class=""display"" cellspacing=""0"" width=""100%"">&#xD;&#xA;            <thead>&#xD;&#xA;                <tr>&#xD;&#xA;                    <th>Name</th>&#xD;&#xA;                    <th>Position</th>&#xD;&#xA;                    <th>Office</th>&#xD;&#xA;                    <th>Age</th>&#xD;&#xA;                    <th>Start date</th>&#xD;&#xA;                    <th>Salary</th>&#xD;&#xA;                </tr>&#xD;&#xA;            </thead>&#xD;&#xA;     &#xD;&#xA;            <tfoot>&#xD;&#xA;                <tr>&#xD;&#xA;                    <th>Name</th>&#xD;&#xA;                    <th>Position</th>&#xD;&#xA;                    <th>Office</th>&#xD;&#xA;                    <th>Age</th>&#xD;&#xA;                    <th>Start date</th>&#xD;&#xA;                    <th>Salary</th>&#xD;&#xA;                </tr>&#xD;&#xA;            </tfoot>&#xD;&#xA;     &#xD;&#xA;            <tbody>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Tiger Nixon</td>&#xD;&#xA;                    <td>System Architect</td>&#xD;&#xA;                    <td>Edinburgh</td>&#xD;&#xA;                    <td>61</td>&#xD;&#xA;                    <td>2011/04/25</td>&#xD;&#xA;                    <td>$320,800</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Garrett Winters</td>&#xD;&#xA;                    <td>Accountant</td>&#xD;&#xA;                    <td>Tokyo</td>&#xD;&#xA;                    <td>63</td>&#xD;&#xA;                    <td>2011/07/25</td>&#xD;&#xA;                    <td>$170,750</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Ashton Cox</td>&#xD;&#xA;                    <td>Junior Technical Author</td>&#xD;&#xA;                    <td>San Francisco</td>&#xD;&#xA;                    <td>66</td>&#xD;&#xA;                    <td>2009/01/12</td>&#xD;&#xA;                    <td>$86,000</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Cedric Kelly</td>&#xD;&#xA;                    <td>Senior Javascript Developer</td>&#xD;&#xA;                    <td>Edinburgh</td>&#xD;&#xA;                    <td>22</td>&#xD;&#xA;                    <td>2012/03/29</td>&#xD;&#xA;                    <td>$433,060</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Airi Satou</td>&#xD;&#xA;                    <td>Accountant</td>&#xD;&#xA;                    <td>Tokyo</td>&#xD;&#xA;                    <td>33</td>&#xD;&#xA;                    <td>2008/11/28</td>&#xD;&#xA;                    <td>$162,700</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Brielle Williamson</td>&#xD;&#xA;                    <td>Integration Specialist</td>&#xD;&#xA;                    <td>New York</td>&#xD;&#xA;                    <td>61</td>&#xD;&#xA;                    <td>2012/12/02</td>&#xD;&#xA;                    <td>$372,000</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Herrod Chandler</td>&#xD;&#xA;                    <td>Sales Assistant</td>&#xD;&#xA;                    <td>San Francisco</td>&#xD;&#xA;                    <td>59</td>&#xD;&#xA;                    <td>2012/08/06</td>&#xD;&#xA;                    <td>$137,500</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Rhona Davidson</td>&#xD;&#xA;                    <td>Integration Specialist</td>&#xD;&#xA;                    <td>Tokyo</td>&#xD;&#xA;                    <td>55</td>&#xD;&#xA;                    <td>2010/10/14</td>&#xD;&#xA;                    <td>$327,900</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Colleen Hurst</td>&#xD;&#xA;                    <td>Javascript Developer</td>&#xD;&#xA;                    <td>San Francisco</td>&#xD;&#xA;                    <td>39</td>&#xD;&#xA;                    <td>2009/09/15</td>&#xD;&#xA;                    <td>$205,500</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Sonya Frost</td>&#xD;&#xA;                    <td>Software Engineer</td>&#xD;&#xA;                    <td>Edinburgh</td>&#xD;&#xA;                    <td>23</td>&#xD;&#xA;                    <td>2008/12/13</td>&#xD;&#xA;                    <td>$103,600</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Jena Gaines</td>&#xD;&#xA;                    <td>Office Manager</td>&#xD;&#xA;                    <td>London</td>&#xD;&#xA;                    <td>30</td>&#xD;&#xA;                    <td>2008/12/19</td>&#xD;&#xA;                    <td>$90,560</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Quinn Flynn</td>&#xD;&#xA;                    <td>Support Lead</td>&#xD;&#xA;                    <td>Edinburgh</td>&#xD;&#xA;                    <td>22</td>&#xD;&#xA;                    <td>2013/03/03</td>&#xD;&#xA;                    <td>$342,000</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Charde Marshall</td>&#xD;&#xA;                    <td>Regional Director</td>&#xD;&#xA;                    <td>San Francisco</td>&#xD;&#xA;                    <td>36</td>&#xD;&#xA;                    <td>2008/10/16</td>&#xD;&#xA;                    <td>$470,600</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Haley Kennedy</td>&#xD;&#xA;                    <td>Senior Marketing Designer</td>&#xD;&#xA;                    <td>London</td>&#xD;&#xA;                    <td>43</td>&#xD;&#xA;                    <td>2012/12/18</td>&#xD;&#xA;                    <td>$313,500</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Tatyana Fitzpatrick</td>&#xD;&#xA;                    <td>Regional Director</td>&#xD;&#xA;                    <td>London</td>&#xD;&#xA;                    <td>19</td>&#xD;&#xA;                    <td>2010/03/17</td>&#xD;&#xA;                    <td>$385,750</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Michael Silva</td>&#xD;&#xA;                    <td>Marketing Designer</td>&#xD;&#xA;                    <td>London</td>&#xD;&#xA;                    <td>66</td>&#xD;&#xA;                    <td>2012/11/27</td>&#xD;&#xA;                    <td>$198,500</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Paul Byrd</td>&#xD;&#xA;                    <td>Chief Financial Officer (CFO)</td>&#xD;&#xA;                    <td>New York</td>&#xD;&#xA;                    <td>64</td>&#xD;&#xA;                    <td>2010/06/09</td>&#xD;&#xA;                    <td>$725,000</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Gloria Little</td>&#xD;&#xA;                    <td>Systems Administrator</td>&#xD;&#xA;                    <td>New York</td>&#xD;&#xA;                    <td>59</td>&#xD;&#xA;                    <td>2009/04/10</td>&#xD;&#xA;                    <td>$237,500</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Bradley Greer</td>&#xD;&#xA;                    <td>Software Engineer</td>&#xD;&#xA;                    <td>London</td>&#xD;&#xA;                    <td>41</td>&#xD;&#xA;                    <td>2012/10/13</td>&#xD;&#xA;                    <td>$132,000</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Dai Rios</td>&#xD;&#xA;                    <td>Personnel Lead</td>&#xD;&#xA;                    <td>Edinburgh</td>&#xD;&#xA;                    <td>35</td>&#xD;&#xA;                    <td>2012/09/26</td>&#xD;&#xA;                    <td>$217,500</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Jenette Caldwell</td>&#xD;&#xA;                    <td>Development Lead</td>&#xD;&#xA;                    <td>New York</td>&#xD;&#xA;                    <td>30</td>&#xD;&#xA;                    <td>2011/09/03</td>&#xD;&#xA;                    <td>$345,000</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Yuri Berry</td>&#xD;&#xA;                    <td>Chief Marketing Officer (CMO)</td>&#xD;&#xA;                    <td>New York</td>&#xD;&#xA;                    <td>40</td>&#xD;&#xA;                    <td>2009/06/25</td>&#xD;&#xA;                    <td>$675,000</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Caesar Vance</td>&#xD;&#xA;                    <td>Pre-Sales Support</td>&#xD;&#xA;                    <td>New York</td>&#xD;&#xA;                    <td>21</td>&#xD;&#xA;                    <td>2011/12/12</td>&#xD;&#xA;                    <td>$106,450</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Doris Wilder</td>&#xD;&#xA;                    <td>Sales Assistant</td>&#xD;&#xA;                    <td>Sidney</td>&#xD;&#xA;                    <td>23</td>&#xD;&#xA;                    <td>2010/09/20</td>&#xD;&#xA;                    <td>$85,600</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Angelica Ramos</td>&#xD;&#xA;                    <td>Chief Executive Officer (CEO)</td>&#xD;&#xA;                    <td>London</td>&#xD;&#xA;                    <td>47</td>&#xD;&#xA;                    <td>2009/10/09</td>&#xD;&#xA;                    <td>$1,200,000</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Gavin Joyce</td>&#xD;&#xA;                    <td>Developer</td>&#xD;&#xA;                    <td>Edinburgh</td>&#xD;&#xA;                    <td>42</td>&#xD;&#xA;                    <td>2010/12/22</td>&#xD;&#xA;                    <td>$92,575</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Jennifer Chang</td>&#xD;&#xA;                    <td>Regional Director</td>&#xD;&#xA;                    <td>Singapore</td>&#xD;&#xA;                    <td>28</td>&#xD;&#xA;                    <td>2010/11/14</td>&#xD;&#xA;                    <td>$357,650</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Brenden Wagner</td>&#xD;&#xA;                    <td>Software Engineer</td>&#xD;&#xA;                    <td>San Francisco</td>&#xD;&#xA;                    <td>28</td>&#xD;&#xA;                    <td>2011/06/07</td>&#xD;&#xA;                    <td>$206,850</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Fiona Green</td>&#xD;&#xA;                    <td>Chief Operating Officer (COO)</td>&#xD;&#xA;                    <td>San Francisco</td>&#xD;&#xA;                    <td>48</td>&#xD;&#xA;                    <td>2010/03/11</td>&#xD;&#xA;                    <td>$850,000</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Shou Itou</td>&#xD;&#xA;                    <td>Regional Marketing</td>&#xD;&#xA;                    <td>Tokyo</td>&#xD;&#xA;                    <td>20</td>&#xD;&#xA;                    <td>2011/08/14</td>&#xD;&#xA;                    <td>$163,000</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Michelle House</td>&#xD;&#xA;                    <td>Integration Specialist</td>&#xD;&#xA;                    <td>Sidney</td>&#xD;&#xA;                    <td>37</td>&#xD;&#xA;                    <td>2011/06/02</td>&#xD;&#xA;                    <td>$95,400</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Suki Burks</td>&#xD;&#xA;                    <td>Developer</td>&#xD;&#xA;                    <td>London</td>&#xD;&#xA;                    <td>53</td>&#xD;&#xA;                    <td>2009/10/22</td>&#xD;&#xA;                    <td>$114,500</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Prescott Bartlett</td>&#xD;&#xA;                    <td>Technical Author</td>&#xD;&#xA;                    <td>London</td>&#xD;&#xA;                    <td>27</td>&#xD;&#xA;                    <td>2011/05/07</td>&#xD;&#xA;                    <td>$145,000</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Gavin Cortez</td>&#xD;&#xA;                    <td>Team Leader</td>&#xD;&#xA;                    <td>San Francisco</td>&#xD;&#xA;                    <td>22</td>&#xD;&#xA;                    <td>2008/10/26</td>&#xD;&#xA;                    <td>$235,500</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Martena Mccray</td>&#xD;&#xA;                    <td>Post-Sales support</td>&#xD;&#xA;                    <td>Edinburgh</td>&#xD;&#xA;                    <td>46</td>&#xD;&#xA;                    <td>2011/03/09</td>&#xD;&#xA;                    <td>$324,050</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Unity Butler</td>&#xD;&#xA;                    <td>Marketing Designer</td>&#xD;&#xA;                    <td>San Francisco</td>&#xD;&#xA;                    <td>47</td>&#xD;&#xA;                    <td>2009/12/09</td>&#xD;&#xA;                    <td>$85,675</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Howard Hatfield</td>&#xD;&#xA;                    <td>Office Manager</td>&#xD;&#xA;                    <td>San Francisco</td>&#xD;&#xA;                    <td>51</td>&#xD;&#xA;                    <td>2008/12/16</td>&#xD;&#xA;                    <td>$164,500</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Hope Fuentes</td>&#xD;&#xA;                    <td>Secretary</td>&#xD;&#xA;                    <td>San Francisco</td>&#xD;&#xA;                    <td>41</td>&#xD;&#xA;                    <td>2010/02/12</td>&#xD;&#xA;                    <td>$109,850</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Vivian Harrell</td>&#xD;&#xA;                    <td>Financial Controller</td>&#xD;&#xA;                    <td>San Francisco</td>&#xD;&#xA;                    <td>62</td>&#xD;&#xA;                    <td>2009/02/14</td>&#xD;&#xA;                    <td>$452,500</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Timothy Mooney</td>&#xD;&#xA;                    <td>Office Manager</td>&#xD;&#xA;                    <td>London</td>&#xD;&#xA;                    <td>37</td>&#xD;&#xA;                    <td>2008/12/11</td>&#xD;&#xA;                    <td>$136,200</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Jackson Bradshaw</td>&#xD;&#xA;                    <td>Director</td>&#xD;&#xA;                    <td>New York</td>&#xD;&#xA;                    <td>65</td>&#xD;&#xA;                    <td>2008/09/26</td>&#xD;&#xA;                    <td>$645,750</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Olivia Liang</td>&#xD;&#xA;                    <td>Support Engineer</td>&#xD;&#xA;                    <td>Singapore</td>&#xD;&#xA;                    <td>64</td>&#xD;&#xA;                    <td>2011/02/03</td>&#xD;&#xA;                    <td>$234,500</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Bruno Nash</td>&#xD;&#xA;                    <td>Software Engineer</td>&#xD;&#xA;                    <td>London</td>&#xD;&#xA;                    <td>38</td>&#xD;&#xA;                    <td>2011/05/03</td>&#xD;&#xA;                    <td>$163,500</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Sakura Yamamoto</td>&#xD;&#xA;                    <td>Support Engineer</td>&#xD;&#xA;                    <td>Tokyo</td>&#xD;&#xA;                    <td>37</td>&#xD;&#xA;                    <td>2009/08/19</td>&#xD;&#xA;                    <td>$139,575</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Thor Walton</td>&#xD;&#xA;                    <td>Developer</td>&#xD;&#xA;                    <td>New York</td>&#xD;&#xA;                    <td>61</td>&#xD;&#xA;                    <td>2013/08/11</td>&#xD;&#xA;                    <td>$98,540</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Finn Camacho</td>&#xD;&#xA;                    <td>Support Engineer</td>&#xD;&#xA;                    <td>San Francisco</td>&#xD;&#xA;                    <td>47</td>&#xD;&#xA;                    <td>2009/07/07</td>&#xD;&#xA;                    <td>$87,500</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Serge Baldwin</td>&#xD;&#xA;                    <td>Data Coordinator</td>&#xD;&#xA;                    <td>Singapore</td>&#xD;&#xA;                    <td>64</td>&#xD;&#xA;                    <td>2012/04/09</td>&#xD;&#xA;                    <td>$138,575</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Zenaida Frank</td>&#xD;&#xA;                    <td>Software Engineer</td>&#xD;&#xA;                    <td>New York</td>&#xD;&#xA;                    <td>63</td>&#xD;&#xA;                    <td>2010/01/04</td>&#xD;&#xA;                    <td>$125,250</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Zorita Serrano</td>&#xD;&#xA;                    <td>Software Engineer</td>&#xD;&#xA;                    <td>San Francisco</td>&#xD;&#xA;                    <td>56</td>&#xD;&#xA;                    <td>2012/06/01</td>&#xD;&#xA;                    <td>$115,000</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Jennifer Acosta</td>&#xD;&#xA;                    <td>Junior Javascript Developer</td>&#xD;&#xA;                    <td>Edinburgh</td>&#xD;&#xA;                    <td>43</td>&#xD;&#xA;                    <td>2013/02/01</td>&#xD;&#xA;                    <td>$75,650</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Cara Stevens</td>&#xD;&#xA;                    <td>Sales Assistant</td>&#xD;&#xA;                    <td>New York</td>&#xD;&#xA;                    <td>46</td>&#xD;&#xA;                    <td>2011/12/06</td>&#xD;&#xA;                    <td>$145,600</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Hermione Butler</td>&#xD;&#xA;                    <td>Regional Director</td>&#xD;&#xA;                    <td>London</td>&#xD;&#xA;                    <td>47</td>&#xD;&#xA;                    <td>2011/03/21</td>&#xD;&#xA;                    <td>$356,250</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Lael Greer</td>&#xD;&#xA;                    <td>Systems Administrator</td>&#xD;&#xA;                    <td>London</td>&#xD;&#xA;                    <td>21</td>&#xD;&#xA;                    <td>2009/02/27</td>&#xD;&#xA;                    <td>$103,500</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Jonas Alexander</td>&#xD;&#xA;                    <td>Developer</td>&#xD;&#xA;                    <td>San Francisco</td>&#xD;&#xA;                    <td>30</td>&#xD;&#xA;                    <td>2010/07/14</td>&#xD;&#xA;                    <td>$86,500</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Shad Decker</td>&#xD;&#xA;                    <td>Regional Director</td>&#xD;&#xA;                    <td>Edinburgh</td>&#xD;&#xA;                    <td>51</td>&#xD;&#xA;                    <td>2008/11/13</td>&#xD;&#xA;                    <td>$183,000</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Michael Bruce</td>&#xD;&#xA;                    <td>Javascript Developer</td>&#xD;&#xA;                    <td>Singapore</td>&#xD;&#xA;                    <td>29</td>&#xD;&#xA;                    <td>2011/06/27</td>&#xD;&#xA;                    <td>$183,000</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                    <td>Donna Snider</td>&#xD;&#xA;                    <td>Customer Support</td>&#xD;&#xA;                    <td>New York</td>&#xD;&#xA;                    <td>27</td>&#xD;&#xA;                    <td>2011/01/25</td>&#xD;&#xA;                    <td>$112,000</td>&#xD;&#xA;                </tr>&#xD;&#xA;            </tbody>&#xD;&#xA;        </table>"
-442327044831529568,486,5,"        import android.content.Context;&#xD;&#xA;    import android.graphics.Typeface;&#xD;&#xA;    &#xD;&#xA;    public final class Farsi {&#xD;&#xA;    &#xD;&#xA;        public static boolean isFarsiConversionNeeded = true;&#xD;&#xA;    &#xD;&#xA;        private final static String szLamAndAlef = Character&#xD;&#xA;                .toString((char) 0xfedf)&#xD;&#xA;                + Character.toString((char) 0xfe8e); // Lam + Alef&#xD;&#xA;    &#xD;&#xA;        private final static String szLamStickAndAlef = Character&#xD;&#xA;                .toString((char) 0xfee0)&#xD;&#xA;                + Character.toString((char) 0xfe8e); // Lam (Sticky !!!)+&#xD;&#xA;                                                        // Alef&#xD;&#xA;    &#xD;&#xA;        private final static String szLa = Character.toString((char) 0xfefb); // La&#xD;&#xA;        private final static String szLaStick = Character.toString((char) 0xfefc); // La&#xD;&#xA;                                                                                    // (Sticky!!!)&#xD;&#xA;    &#xD;&#xA;        private final static String szLamAndAlefWoosim = Character&#xD;&#xA;                .toString((char) 0xe1)&#xD;&#xA;                + Character.toString((char) 0xbb); // Lam + Alef&#xD;&#xA;    &#xD;&#xA;        private final static String szLamStickAndAlefWoosim = Character&#xD;&#xA;                .toString((char) 0x90)&#xD;&#xA;                + Character.toString((char) 0xbb); // Lam (Sticky !!!)+&#xD;&#xA;                                                    // Alef&#xD;&#xA;    &#xD;&#xA;        private final static String szLaWoosim = Character.toString((char) 0xd9); // La&#xD;&#xA;        private final static String szLaStickWoosim = Character&#xD;&#xA;                .toString((char) 0xd9); // La&#xD;&#xA;    &#xD;&#xA;        // (Sticky!!!)&#xD;&#xA;    &#xD;&#xA;        private static final class struc {&#xD;&#xA;            public char character;&#xD;&#xA;            public char endGlyph;&#xD;&#xA;            public char iniGlyph;&#xD;&#xA;            public char midGlyph;&#xD;&#xA;            public char isoGlyph;&#xD;&#xA;    &#xD;&#xA;            public struc(char Character, char EndGlyph, char IniGlyph,&#xD;&#xA;                    char MidGlyph, char IsoGlyph) {&#xD;&#xA;                character = Character;&#xD;&#xA;                endGlyph = EndGlyph;&#xD;&#xA;                iniGlyph = IniGlyph;&#xD;&#xA;                midGlyph = MidGlyph;&#xD;&#xA;                isoGlyph = IsoGlyph;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        static struc[] arrStruc = {&#xD;&#xA;                new struc((char) 0x630, (char) 0xfeac, (char) 0xfeab,&#xD;&#xA;                        (char) 0xfeac, (char) 0xfeab),&#xD;&#xA;                new struc((char) 0x62f, (char) 0xfeaa, (char) 0xfea9,&#xD;&#xA;                        (char) 0xfeaa, (char) 0xfea9),&#xD;&#xA;                new struc((char) 0x62c, (char) 0xfe9e, (char) 0xfe9f,&#xD;&#xA;                        (char) 0xfea0, (char) 0xfe9d),&#xD;&#xA;                new struc((char) 0x62d, (char) 0xfea2, (char) 0xfea3,&#xD;&#xA;                        (char) 0xfea4, (char) 0xfea1),&#xD;&#xA;                new struc((char) 0x62e, (char) 0xfea6, (char) 0xfea7,&#xD;&#xA;                        (char) 0xfea8, (char) 0xfea5),&#xD;&#xA;                new struc((char) 0x647, (char) 0xfeea, (char) 0xfeeb,&#xD;&#xA;                        (char) 0xfeec, (char) 0xfee9),&#xD;&#xA;                new struc((char) 0x639, (char) 0xfeca, (char) 0xfecb,&#xD;&#xA;                        (char) 0xfecc, (char) 0xfec9),&#xD;&#xA;                new struc((char) 0x63a, (char) 0xfece, (char) 0xfecf,&#xD;&#xA;                        (char) 0xfed0, (char) 0xfecd),&#xD;&#xA;                new struc((char) 0x641, (char) 0xfed2, (char) 0xfed3,&#xD;&#xA;                        (char) 0xfed4, (char) 0xfed1),&#xD;&#xA;                new struc((char) 0x642, (char) 0xfed6, (char) 0xfed7,&#xD;&#xA;                        (char) 0xfed8, (char) 0xfed5),&#xD;&#xA;                new struc((char) 0x62b, (char) 0xfe9a, (char) 0xfe9b,&#xD;&#xA;                        (char) 0xfe9c, (char) 0xfe99),&#xD;&#xA;                new struc((char) 0x635, (char) 0xfeba, (char) 0xfebb,&#xD;&#xA;                        (char) 0xfebc, (char) 0xfeb9),&#xD;&#xA;                new struc((char) 0x636, (char) 0xfebe, (char) 0xfebf,&#xD;&#xA;                        (char) 0xfec0, (char) 0xfebd),&#xD;&#xA;                new struc((char) 0x637, (char) 0xfec2, (char) 0xfec3,&#xD;&#xA;                        (char) 0xfec4, (char) 0xfec1),&#xD;&#xA;                new struc((char) 0x643, (char) 0xfeda, (char) 0xfedb,&#xD;&#xA;                        (char) 0xfedc, (char) 0xfed9),&#xD;&#xA;                new struc((char) 0x645, (char) 0xfee2, (char) 0xfee3,&#xD;&#xA;                        (char) 0xfee4, (char) 0xfee1),&#xD;&#xA;                new struc((char) 0x646, (char) 0xfee6, (char) 0xfee7,&#xD;&#xA;                        (char) 0xfee8, (char) 0xfee5),&#xD;&#xA;                new struc((char) 0x62a, (char) 0xfe96, (char) 0xfe97,&#xD;&#xA;                        (char) 0xfe98, (char) 0xfe95),&#xD;&#xA;                new struc((char) 0x627, (char) 0xfe8e, (char) 0xfe8d,&#xD;&#xA;                        (char) 0xfe8e, (char) 0xfe8d),&#xD;&#xA;                new struc((char) 0x644, (char) 0xfede, (char) 0xfedf,&#xD;&#xA;                        (char) 0xfee0, (char) 0xfedd),&#xD;&#xA;                new struc((char) 0x628, (char) 0xfe90, (char) 0xfe91,&#xD;&#xA;                        (char) 0xfe92, (char) 0xfe8f),&#xD;&#xA;                new struc((char) 0x64a, (char) 0xfef2, (char) 0xfef3,&#xD;&#xA;                        (char) 0xfef4, (char) 0xfef1),&#xD;&#xA;                new struc((char) 0x633, (char) 0xfeb2, (char) 0xfeb3,&#xD;&#xA;                        (char) 0xfeb4, (char) 0xfeb1),&#xD;&#xA;                new struc((char) 0x634, (char) 0xfeb6, (char) 0xfeb7,&#xD;&#xA;                        (char) 0xfeb8, (char) 0xfeb5),&#xD;&#xA;                new struc((char) 0x638, (char) 0xfec6, (char) 0xfec7,&#xD;&#xA;                        (char) 0xfec8, (char) 0xfec5),&#xD;&#xA;                new struc((char) 0x632, (char) 0xfeb0, (char) 0xfeaf,&#xD;&#xA;                        (char) 0xfeb0, (char) 0xfeaf),&#xD;&#xA;                new struc((char) 0x648, (char) 0xfeee, (char) 0xfeed,&#xD;&#xA;                        (char) 0xfeee, (char) 0xfeed),&#xD;&#xA;                new struc((char) 0x629, (char) 0xfe94, (char) 0xfe93,&#xD;&#xA;                        (char) 0xfe93, (char) 0xfe93),&#xD;&#xA;                new struc((char) 0x649, (char) 0xfef0, (char) 0xfeef,&#xD;&#xA;                        (char) 0xfef0, (char) 0xfeef),&#xD;&#xA;                new struc((char) 0x631, (char) 0xfeae, (char) 0xfead,&#xD;&#xA;                        (char) 0xfeae, (char) 0xfead),&#xD;&#xA;                new struc((char) 0x624, (char) 0xfe86, (char) 0xfe85,&#xD;&#xA;                        (char) 0xfe86, (char) 0xfe85),&#xD;&#xA;                new struc((char) 0x621, (char) 0xfe80, (char) 0xfe80,&#xD;&#xA;                        (char) 0xfe80, (char) 0xfe80),&#xD;&#xA;                new struc((char) 0x626, (char) 0xfe8a, (char) 0xfe8b,&#xD;&#xA;                        (char) 0xfe8c, (char) 0xfe89),&#xD;&#xA;                new struc((char) 0x623, (char) 0xfe84, (char) 0xfe83,&#xD;&#xA;                        (char) 0xfe84, (char) 0xfe83),&#xD;&#xA;                new struc((char) 0x622, (char) 0xfe82, (char) 0xfe81,&#xD;&#xA;                        (char) 0xfe82, (char) 0xfe81),&#xD;&#xA;                new struc((char) 0x625, (char) 0xfe88, (char) 0xfe87,&#xD;&#xA;                        (char) 0xfe88, (char) 0xfe87),&#xD;&#xA;                new struc((char) 0x67e, (char) 0xfb57, (char) 0xfb58,&#xD;&#xA;                        (char) 0xfb59, (char) 0xfb56), // peh&#xD;&#xA;                new struc((char) 0x686, (char) 0xfb7b, (char) 0xfb7c,&#xD;&#xA;                        (char) 0xfb7d, (char) 0xfb7a), // cheh&#xD;&#xA;                new struc((char) 0x698, (char) 0xfb8b, (char) 0xfb8a,&#xD;&#xA;                        (char) 0xfb8b, (char) 0xfb8a), // jeh&#xD;&#xA;                new struc((char) 0x6a9, (char) 0xfb8f, (char) 0xfb90,&#xD;&#xA;                        (char) 0xfb91, (char) 0xfb8e), // keheh&#xD;&#xA;                new struc((char) 0x6af, (char) 0xfb93, (char) 0xfb94,&#xD;&#xA;                        (char) 0xfb95, (char) 0xfb92), // gaf&#xD;&#xA;                // new struc((char) 0x6cc, (char) 0xfbfd, (char) 0xfbfe,&#xD;&#xA;                // (char) 0xfbff, (char) 0xfbfc), // Farsi yeh&#xD;&#xA;                new struc((char) 0x6cc, (char) 0xfbfd, (char) 0xfef3,&#xD;&#xA;                        (char) 0xfef4, (char) 0xfbfc), // Arabic yeh&#xD;&#xA;                new struc((char) 0x6c0, (char) 0xfba5, (char) 0xfba4,&#xD;&#xA;                        (char) 0xfba5, (char) 0xfba4) // heh with yeh&#xD;&#xA;        };&#xD;&#xA;    &#xD;&#xA;        static struc[] arrStrucWoosim = {&#xD;&#xA;                new struc((char) 0x630, (char) 0xb5, (char) 0x82, (char) 0xb5,&#xD;&#xA;                        (char) 0x82),&#xD;&#xA;                new struc((char) 0x62f, (char) 0xb4, (char) 0x81, (char) 0xb4,&#xD;&#xA;                        (char) 0x81),&#xD;&#xA;                new struc((char) 0x62c, (char) 0x9b, (char) 0xb1, (char) 0xf9,&#xD;&#xA;                        (char) 0xbf),&#xD;&#xA;                new struc((char) 0x62d, (char) 0x9c, (char) 0xb2, (char) 0xfa,&#xD;&#xA;                        (char) 0xc0),&#xD;&#xA;                new struc((char) 0x62e, (char) 0x9d, (char) 0xb3, (char) 0xfe,&#xD;&#xA;                        (char) 0xc1),&#xD;&#xA;                new struc((char) 0x647, (char) 0xac, (char) 0xe4, (char) 0x93,&#xD;&#xA;                        (char) 0xd5),&#xD;&#xA;                new struc((char) 0x639, (char) 0xc9, (char) 0xd3, (char) 0x8b,&#xD;&#xA;                        (char) 0xa4),&#xD;&#xA;                new struc((char) 0x63a, (char) 0xca, (char) 0xdd, (char) 0x8c,&#xD;&#xA;                        (char) 0xa5),&#xD;&#xA;                new struc((char) 0x641, (char) 0xa6, (char) 0xde, (char) 0x8d,&#xD;&#xA;                        (char) 0xcc),&#xD;&#xA;                new struc((char) 0x642, (char) 0xa7, (char) 0xdf, (char) 0x8e,&#xD;&#xA;                        (char) 0xce),&#xD;&#xA;                new struc((char) 0x62b, (char) 0xbd, (char) 0xaf, (char) 0xea,&#xD;&#xA;                        (char) 0x99),&#xD;&#xA;                new struc((char) 0x635, (char) 0xc4, (char) 0xc8, (char) 0x87,&#xD;&#xA;                        (char) 0xa0),&#xD;&#xA;                new struc((char) 0x636, (char) 0xc5, (char) 0xcb, (char) 0x88,&#xD;&#xA;                        (char) 0xa1),&#xD;&#xA;                new struc((char) 0x637, (char) 0xc6, (char) 0xcd, (char) 0xcd,&#xD;&#xA;                        (char) 0xa2),&#xD;&#xA;                new struc((char) 0x643, (char) 0xcf, (char) 0xe0, (char) 0x8f,&#xD;&#xA;                        (char) 0xa8),&#xD;&#xA;                new struc((char) 0x645, (char) 0xd2, (char) 0xe2, (char) 0x91,&#xD;&#xA;                        (char) 0xaa),&#xD;&#xA;                new struc((char) 0x646, (char) 0xd4, (char) 0xe3, (char) 0x92,&#xD;&#xA;                        (char) 0xab),&#xD;&#xA;                new struc((char) 0x62a, (char) 0xbd, (char) 0xaf, (char) 0xea,&#xD;&#xA;                        (char) 0x99),&#xD;&#xA;                new struc((char) 0x627, (char) 0xbb, (char) 0x80, (char) 0xbb,&#xD;&#xA;                        (char) 0x80),&#xD;&#xA;                new struc((char) 0x644, (char) 0xd1, (char) 0xe1, (char) 0x90,&#xD;&#xA;                        (char) 0xa9),&#xD;&#xA;                new struc((char) 0x628, (char) 0xbc, (char) 0xae, (char) 0xe9,&#xD;&#xA;                        (char) 0x98),&#xD;&#xA;                new struc((char) 0x64a, (char) 0xdc, (char) 0xe6, (char) 0x95,&#xD;&#xA;                        (char) 0xdc),&#xD;&#xA;                new struc((char) 0x633, (char) 0xc2, (char) 0xb8, (char) 0xb8,&#xD;&#xA;                        (char) 0x9e),&#xD;&#xA;                new struc((char) 0x634, (char) 0xc3, (char) 0xb9, (char) 0xb9,&#xD;&#xA;                        (char) 0x9f),&#xD;&#xA;                new struc((char) 0x638, (char) 0xc7, (char) 0xcd, (char) 0xcd,&#xD;&#xA;                        (char) 0xc7),&#xD;&#xA;                new struc((char) 0x632, (char) 0xb7, (char) 0xb7, (char) 0xb7,&#xD;&#xA;                        (char) 0xb7),&#xD;&#xA;                new struc((char) 0x648, (char) 0x94, (char) 0x94, (char) 0x94,&#xD;&#xA;                        (char) 0x94),&#xD;&#xA;                new struc((char) 0x629, (char) 0xda, (char) 0xda, (char) 0xda,&#xD;&#xA;                        (char) 0xda),&#xD;&#xA;                new struc((char) 0x649, (char) 0xdc, (char) 0xe6, (char) 0x95,&#xD;&#xA;                        (char) 0xdc),&#xD;&#xA;                new struc((char) 0x631, (char) 0xb6, (char) 0xb6, (char) 0xb6,&#xD;&#xA;                        (char) 0xb6),&#xD;&#xA;                new struc((char) 0x624, (char) 0xe7, (char) 0xe7, (char) 0xe7,&#xD;&#xA;                        (char) 0xe7),&#xD;&#xA;                new struc((char) 0x621, (char) 0xba, (char) 0xba, (char) 0xba,&#xD;&#xA;                        (char) 0xba),&#xD;&#xA;                new struc((char) 0x626, (char) 0xd7, (char) 0xe8, (char) 0x97,&#xD;&#xA;                        (char) 0xd7),&#xD;&#xA;                new struc((char) 0x623, (char) 0x80, (char) 0x80, (char) 0x80,&#xD;&#xA;                        (char) 0x80),&#xD;&#xA;                new struc((char) 0x622, (char) 0x80, (char) 0x80, (char) 0x80,&#xD;&#xA;                        (char) 0x80),&#xD;&#xA;                new struc((char) 0x625, (char) 0x80, (char) 0x80, (char) 0x80,&#xD;&#xA;                        (char) 0x80),&#xD;&#xA;                new struc((char) 0x67e, (char) 0xbc, (char) 0xae, (char) 0xe9,&#xD;&#xA;                        (char) 0x98), // peh&#xD;&#xA;                new struc((char) 0x686, (char) 0x9b, (char) 0xb1, (char) 0xf9,&#xD;&#xA;                        (char) 0xbf), // cheh&#xD;&#xA;                new struc((char) 0x698, (char) 0xb7, (char) 0xb7, (char) 0xb7,&#xD;&#xA;                        (char) 0xb7), // jeh&#xD;&#xA;                new struc((char) 0x6a9, (char) 0xcf, (char) 0xe0, (char) 0x8f,&#xD;&#xA;                        (char) 0xa8), // keheh&#xD;&#xA;                new struc((char) 0x6af, (char) 0xcf, (char) 0xe0, (char) 0x8f,&#xD;&#xA;                        (char) 0xa8), // gaf&#xD;&#xA;                new struc((char) 0x6cc, (char) 0xdc, (char) 0xe6, (char) 0x95,&#xD;&#xA;                        (char) 0xdc), // yeh&#xD;&#xA;                new struc((char) 0x6c0, (char) 0xac, (char) 0xe4, (char) 0x93,&#xD;&#xA;                        (char) 0xd5) // heh with yeh&#xD;&#xA;        };&#xD;&#xA;    &#xD;&#xA;        private static final int N_DISTINCT_CHARACTERS = 43;&#xD;&#xA;    &#xD;&#xA;        private static final String ArabicReverse(String s) {&#xD;&#xA;            try {&#xD;&#xA;                String Out = """", rev;&#xD;&#xA;                s = MakeReverse(s);&#xD;&#xA;                char[] chs = new char[s.length()];&#xD;&#xA;                chs = s.toCharArray();&#xD;&#xA;                int i = 0;&#xD;&#xA;                while (i < s.length()) {&#xD;&#xA;                    if ((chs[i] >= '0' && chs[i] <= '9')) // isDigit(s[i]) ?&#xD;&#xA;                    {&#xD;&#xA;                        rev = """";&#xD;&#xA;                        while (i < s.length()&#xD;&#xA;                                && ((chs[i] >= '0' && chs[i] <= '9') || chs[i] == '/')) // isDigit(s[i])&#xD;&#xA;                                                                                        // ?&#xD;&#xA;                        {&#xD;&#xA;                            rev = rev + chs[i];&#xD;&#xA;                            ++i;&#xD;&#xA;                        }&#xD;&#xA;                        rev = MakeReverse(rev);&#xD;&#xA;                        Out = Out + rev;&#xD;&#xA;                    } else {&#xD;&#xA;                        Out = Out + chs[i];&#xD;&#xA;                        ++i;&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;                s = Out;&#xD;&#xA;            } catch (Exception ex) {&#xD;&#xA;                // throw new Exception(&#xD;&#xA;                // ""An exception has occurred in ArabicReverse function.\\n""&#xD;&#xA;                // + ex.getMessage());&#xD;&#xA;            }&#xD;&#xA;            return s;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private static final boolean isFromTheSet1(/* WCHAR */char ch) {&#xD;&#xA;            char[] theSet1 = new char[] { (char) 0x62c, (char) 0x62d, (char) 0x62e,&#xD;&#xA;                    (char) 0x647, (char) 0x639, (char) 0x63a, (char) 0x641,&#xD;&#xA;                    (char) 0x642, (char) 0x62b, (char) 0x635, (char) 0x636,&#xD;&#xA;                    (char) 0x637, (char) 0x643, (char) 0x645, (char) 0x646,&#xD;&#xA;                    (char) 0x62a, (char) 0x644, (char) 0x628, (char) 0x64a,&#xD;&#xA;                    (char) 0x633, (char) 0x634, (char) 0x638, (char) 0x67e,&#xD;&#xA;                    (char) 0x686, (char) 0x6a9, (char) 0x6af, (char) 0x6cc,&#xD;&#xA;                    (char) 0x626 };&#xD;&#xA;            int i = 0;&#xD;&#xA;            while (i < 28) {&#xD;&#xA;                if (ch == theSet1[i])&#xD;&#xA;                    return true;&#xD;&#xA;                ++i;&#xD;&#xA;            }&#xD;&#xA;            return false;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private static final boolean isFromTheSet2(/* WCHAR */char ch) {&#xD;&#xA;            char[] theSet2 = new char[] { (char) 0x627, (char) 0x623, (char) 0x625,&#xD;&#xA;                    (char) 0x622, (char) 0x62f, (char) 0x630, (char) 0x631,&#xD;&#xA;                    (char) 0x632, (char) 0x648, (char) 0x624, (char) 0x629,&#xD;&#xA;                    (char) 0x649, (char) 0x698, (char) 0x6c0 };&#xD;&#xA;            int i = 0;&#xD;&#xA;            while (i < 14) {&#xD;&#xA;                if (ch == theSet2[i])&#xD;&#xA;                    return true;&#xD;&#xA;                ++i;&#xD;&#xA;            }&#xD;&#xA;            return false;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private static final String MakeReverse(String text) {&#xD;&#xA;            String Result = """";&#xD;&#xA;            char[] Ctext = new char[text.length()];&#xD;&#xA;            Ctext = text.toCharArray();&#xD;&#xA;            for (int i = (text.length()) - 1; i >= 0; i--) {&#xD;&#xA;                Result += Ctext[i];&#xD;&#xA;            }&#xD;&#xA;            return Result;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public static final String ConvertBackToRealFarsi(String In) {&#xD;&#xA;    &#xD;&#xA;            if (!isFarsiConversionNeeded) {&#xD;&#xA;                return In;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            String strOut = """";&#xD;&#xA;            StringBuilder strBuilder = new StringBuilder("""");&#xD;&#xA;            int i = 0;&#xD;&#xA;            int j = 0;&#xD;&#xA;            char[] chIn = new char[In.length()];&#xD;&#xA;            chIn = In.toCharArray();&#xD;&#xA;    &#xD;&#xA;            for (i = 0; i < In.length(); i++) {&#xD;&#xA;                boolean found = false;&#xD;&#xA;                for (j = 0; j < arrStruc.length; j++) {&#xD;&#xA;                    if (chIn[i] == arrStruc[j].midGlyph ||&#xD;&#xA;                            chIn[i] == arrStruc[j].iniGlyph ||&#xD;&#xA;                            chIn[i] == arrStruc[j].endGlyph ||&#xD;&#xA;                            chIn[i] == arrStruc[j].isoGlyph) {&#xD;&#xA;                        strBuilder.append(arrStruc[j].character);&#xD;&#xA;                        found = true;&#xD;&#xA;                        break;&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;                if (!found)&#xD;&#xA;                    strBuilder.append(chIn[i]);&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            strOut = strBuilder.toString();&#xD;&#xA;        strOut = strOut.replace(szLa, ""لا"");&#xD;&#xA;        strOut = strOut.replace(szLaStick, ""لا"");&#xD;&#xA;    &#xD;&#xA;            return strOut;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public static final String Convert(String In) {&#xD;&#xA;    &#xD;&#xA;            if (!isFarsiConversionNeeded) {&#xD;&#xA;                return In;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            if (In == null) {&#xD;&#xA;                return """";&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            boolean linkBefore, linkAfter;&#xD;&#xA;            String Out = In;&#xD;&#xA;            char[] chOut = new char[Out.length()];&#xD;&#xA;            chOut = Out.toCharArray();&#xD;&#xA;            char[] chIn = new char[In.length()];&#xD;&#xA;            chIn = In.toCharArray();&#xD;&#xA;    &#xD;&#xA;            for (int i = 0; i < In.length(); i++) {&#xD;&#xA;                /* WCHAR */&#xD;&#xA;                char ch = chIn[i];&#xD;&#xA;                if ((ch >= (char) 0x0621 && ch <= (char) 0x064a)&#xD;&#xA;                        || (ch == (char) 0x067e) || (ch == (char) 0x0686)&#xD;&#xA;                        || (ch == (char) 0x0698) || (ch == (char) 0x06a9)&#xD;&#xA;                        || (ch == (char) 0x06af) || (ch == (char) 0x06cc)&#xD;&#xA;                        || (ch == (char) 0x06c0)) // is a Farsi character?&#xD;&#xA;                {&#xD;&#xA;                    int idx = 0;&#xD;&#xA;                    while (idx < N_DISTINCT_CHARACTERS) {&#xD;&#xA;                        if (arrStruc[idx].character == chIn[i])&#xD;&#xA;                            break;&#xD;&#xA;                        ++idx;&#xD;&#xA;                    }&#xD;&#xA;    &#xD;&#xA;                    if (i == In.length() - 1)&#xD;&#xA;                        linkAfter = false;&#xD;&#xA;                    else&#xD;&#xA;                        linkAfter = (isFromTheSet1(chIn[i + 1]) || isFromTheSet2(chIn[i + 1]));&#xD;&#xA;                    if (i == 0)&#xD;&#xA;                        linkBefore = false;&#xD;&#xA;                    else&#xD;&#xA;                        linkBefore = isFromTheSet1(chIn[i - 1]);&#xD;&#xA;                    if (idx < N_DISTINCT_CHARACTERS) {&#xD;&#xA;                        if (linkBefore && linkAfter)&#xD;&#xA;                            chOut[i] = arrStruc[idx].midGlyph;&#xD;&#xA;                        if (linkBefore && !linkAfter)&#xD;&#xA;                            chOut[i] = arrStruc[idx].endGlyph;&#xD;&#xA;                        if (!linkBefore && linkAfter)&#xD;&#xA;                            chOut[i] = arrStruc[idx].iniGlyph;&#xD;&#xA;                        if (!linkBefore && !linkAfter)&#xD;&#xA;                            chOut[i] = arrStruc[idx].isoGlyph;&#xD;&#xA;                    } else {&#xD;&#xA;                        chOut[i] = chIn[i];&#xD;&#xA;                    }&#xD;&#xA;                } else {&#xD;&#xA;                    chOut[i] = chIn[i];&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;            Out = """";&#xD;&#xA;            for (int j = 0; j < chOut.length; j++)&#xD;&#xA;                Out += chOut[j];&#xD;&#xA;            // Out = ArabicReverse(Out);&#xD;&#xA;    &#xD;&#xA;            Out = Out.replace((char) 0x200c, ' '); // Change NO SPACE to SPACE&#xD;&#xA;    &#xD;&#xA;            Out = Out.replace(szLamAndAlef, szLa); // Join 'Lam' and 'Alef' and&#xD;&#xA;                                                    // make 'La'&#xD;&#xA;            Out = Out.replace(szLamStickAndAlef, szLaStick); // Join 'Lam Stick'&#xD;&#xA;                                                                // and 'Alef'&#xD;&#xA;                                                                // and make 'La&#xD;&#xA;                                                                // Stick'&#xD;&#xA;    &#xD;&#xA;            return reorderWords(Out);&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private final static String reorderWords(String strIn)&#xD;&#xA;        {&#xD;&#xA;    &#xD;&#xA;            final int ST_RTL = 0;&#xD;&#xA;            final int ST_LTR = 1;&#xD;&#xA;    &#xD;&#xA;            String strOut = """";&#xD;&#xA;            String prevWord = """";&#xD;&#xA;            int state = ST_RTL;&#xD;&#xA;            char[] arr = strIn.toCharArray();&#xD;&#xA;            int i = 0;&#xD;&#xA;            while (i < arr.length) {&#xD;&#xA;                if (charIsLTR(arr[i]) && state != ST_LTR)&#xD;&#xA;                {&#xD;&#xA;                    // state changed to LTR&#xD;&#xA;                    state = ST_LTR;&#xD;&#xA;                    strOut = prevWord + strOut;&#xD;&#xA;                    prevWord = """";&#xD;&#xA;                    prevWord += arr[i];&#xD;&#xA;                }&#xD;&#xA;                else if (charIsRTL(arr[i]) && state != ST_RTL)&#xD;&#xA;                {&#xD;&#xA;                    // state changed to RTL&#xD;&#xA;                    state = ST_RTL;&#xD;&#xA;                    strOut = prevWord + strOut;&#xD;&#xA;                    prevWord = """";&#xD;&#xA;                    prevWord += arr[i];&#xD;&#xA;                }&#xD;&#xA;                else&#xD;&#xA;                {&#xD;&#xA;                    // state is not changed&#xD;&#xA;                    prevWord += arr[i];&#xD;&#xA;                }&#xD;&#xA;                i++;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            strOut = prevWord + strOut;&#xD;&#xA;    &#xD;&#xA;            return strOut;&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private final static boolean charIsLTR(char ch)&#xD;&#xA;        {&#xD;&#xA;            return (ch >= (char) 65 & ch <= (char) 122)&#xD;&#xA;                    |&#xD;&#xA;                    Character.isDigit(ch);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private final static boolean charIsRTL(char ch)&#xD;&#xA;        {&#xD;&#xA;            return ch >= (char) 0x0621;&#xD;&#xA;        }   &#xD;&#xA;    &#xD;&#xA;        private static Typeface typeface;&#xD;&#xA;    &#xD;&#xA;        public static final Typeface GetFarsiFont(Context context) {&#xD;&#xA;            if (typeface == null) {&#xD;&#xA;                typeface = Typeface.createFromAsset(context.getAssets(),&#xD;&#xA;                        // ""DroidSansFallback.ttf"");&#xD;&#xA;                        ""TAHOMA.TTF"");&#xD;&#xA;            }&#xD;&#xA;            return typeface;&#xD;&#xA;        }&#xD;&#xA;    }"
-3740507415921173751,231,5,"    public class QueueLinearFloodFiller {&#xD;&#xA;		protected Bitmap image = null;&#xD;&#xA;		protected int[] tolerance = new int[] { 0, 0, 0 };&#xD;&#xA;		protected int width = 0;&#xD;&#xA;		protected int height = 0;&#xD;&#xA;		protected int[] pixels = null;&#xD;&#xA;		protected int fillColor = 0;&#xD;&#xA;		protected int[] startColor = new int[] { 0, 0, 0 };&#xD;&#xA;		protected boolean[] pixelsChecked;&#xD;&#xA;		protected Queue<FloodFillRange> ranges;&#xD;&#xA;	&#xD;&#xA;		// Construct using an image and a copy will be made to fill into,&#xD;&#xA;		// Construct with BufferedImage and flood fill will write directly to&#xD;&#xA;		// provided BufferedImage&#xD;&#xA;		public QueueLinearFloodFiller(Bitmap img) {&#xD;&#xA;			copyImage(img);&#xD;&#xA;		}&#xD;&#xA;	&#xD;&#xA;		public QueueLinearFloodFiller(Bitmap img, int targetColor, int newColor) {&#xD;&#xA;			useImage(img);&#xD;&#xA;	&#xD;&#xA;			setFillColor(newColor);&#xD;&#xA;			setTargetColor(targetColor);&#xD;&#xA;		}&#xD;&#xA;	&#xD;&#xA;		public void setTargetColor(int targetColor) {&#xD;&#xA;			startColor[0] = Color.red(targetColor);&#xD;&#xA;			startColor[1] = Color.green(targetColor);&#xD;&#xA;			startColor[2] = Color.blue(targetColor);&#xD;&#xA;		}&#xD;&#xA;	&#xD;&#xA;		public int getFillColor() {&#xD;&#xA;			return fillColor;&#xD;&#xA;		}&#xD;&#xA;	&#xD;&#xA;		public void setFillColor(int value) {&#xD;&#xA;			fillColor = value;&#xD;&#xA;		}&#xD;&#xA;	&#xD;&#xA;		public int[] getTolerance() {&#xD;&#xA;			return tolerance;&#xD;&#xA;		}&#xD;&#xA;	&#xD;&#xA;		public void setTolerance(int[] value) {&#xD;&#xA;			tolerance = value;&#xD;&#xA;		}&#xD;&#xA;	&#xD;&#xA;		public void setTolerance(int value) {&#xD;&#xA;			tolerance = new int[] { value, value, value };&#xD;&#xA;		}&#xD;&#xA;	&#xD;&#xA;		public Bitmap getImage() {&#xD;&#xA;			return image;&#xD;&#xA;		}&#xD;&#xA;	&#xD;&#xA;		public void copyImage(Bitmap img) {&#xD;&#xA;			// Copy data from provided Image to a BufferedImage to write flood fill&#xD;&#xA;			// to, use getImage to retrieve&#xD;&#xA;			// cache data in member variables to decrease overhead of property calls&#xD;&#xA;			width = img.getWidth();&#xD;&#xA;			height = img.getHeight();&#xD;&#xA;	&#xD;&#xA;			image = Bitmap.createBitmap(width, height, Bitmap.Config.RGB_565);&#xD;&#xA;			Canvas canvas = new Canvas(image);&#xD;&#xA;			canvas.drawBitmap(img, 0, 0, null);&#xD;&#xA;	&#xD;&#xA;			pixels = new int[width * height];&#xD;&#xA;	&#xD;&#xA;			image.getPixels(pixels, 0, width, 1, 1, width - 1, height - 1);&#xD;&#xA;		}&#xD;&#xA;	&#xD;&#xA;		public void useImage(Bitmap img) {&#xD;&#xA;			// Use a pre-existing provided BufferedImage and write directly to it&#xD;&#xA;			// cache data in member variables to decrease overhead of property calls&#xD;&#xA;			width = img.getWidth();&#xD;&#xA;			height = img.getHeight();&#xD;&#xA;			image = img;&#xD;&#xA;	&#xD;&#xA;			pixels = new int[width * height];&#xD;&#xA;	&#xD;&#xA;			image.getPixels(pixels, 0, width, 1, 1, width - 1, height - 1);&#xD;&#xA;		}&#xD;&#xA;	&#xD;&#xA;		protected void prepare() {&#xD;&#xA;			// Called before starting flood-fill&#xD;&#xA;			pixelsChecked = new boolean[pixels.length];&#xD;&#xA;			ranges = new LinkedList<FloodFillRange>();&#xD;&#xA;		}&#xD;&#xA;	&#xD;&#xA;		// Fills the specified point on the bitmap with the currently selected fill&#xD;&#xA;		// color.&#xD;&#xA;		// int x, int y: The starting coords for the fill&#xD;&#xA;		public void floodFill(int x, int y) {&#xD;&#xA;			// Setup&#xD;&#xA;			prepare();&#xD;&#xA;	&#xD;&#xA;			if (startColor[0] == 0) {&#xD;&#xA;				// ***Get starting color.&#xD;&#xA;				int startPixel = pixels[(width * y) + x];&#xD;&#xA;				startColor[0] = (startPixel >> 16) & 0xff;&#xD;&#xA;				startColor[1] = (startPixel >> 8) & 0xff;&#xD;&#xA;				startColor[2] = startPixel & 0xff;&#xD;&#xA;			}&#xD;&#xA;	&#xD;&#xA;			// ***Do first call to floodfill.&#xD;&#xA;			LinearFill(x, y);&#xD;&#xA;	&#xD;&#xA;			// ***Call floodfill routine while floodfill ranges still exist on the&#xD;&#xA;			// queue&#xD;&#xA;			FloodFillRange range;&#xD;&#xA;	&#xD;&#xA;			while (ranges.size() > 0) {&#xD;&#xA;				// **Get Next Range Off the Queue&#xD;&#xA;				range = ranges.remove();&#xD;&#xA;	&#xD;&#xA;				// **Check Above and Below Each Pixel in the Floodfill Range&#xD;&#xA;				int downPxIdx = (width * (range.Y + 1)) + range.startX;&#xD;&#xA;				int upPxIdx = (width * (range.Y - 1)) + range.startX;&#xD;&#xA;				int upY = range.Y - 1;// so we can pass the y coord by ref&#xD;&#xA;				int downY = range.Y + 1;&#xD;&#xA;	&#xD;&#xA;				for (int i = range.startX; i <= range.endX; i++) {&#xD;&#xA;					// *Start Fill Upwards&#xD;&#xA;					// if we're not above the top of the bitmap and the pixel above&#xD;&#xA;					// this one is within the color tolerance&#xD;&#xA;					if (range.Y > 0 && (!pixelsChecked[upPxIdx])&#xD;&#xA;							&& CheckPixel(upPxIdx))&#xD;&#xA;						LinearFill(i, upY);&#xD;&#xA;	&#xD;&#xA;					// *Start Fill Downwards&#xD;&#xA;					// if we're not below the bottom of the bitmap and the pixel&#xD;&#xA;					// below this one is within the color tolerance&#xD;&#xA;					if (range.Y < (height - 1) && (!pixelsChecked[downPxIdx])&#xD;&#xA;							&& CheckPixel(downPxIdx))&#xD;&#xA;						LinearFill(i, downY);&#xD;&#xA;	&#xD;&#xA;					downPxIdx++;&#xD;&#xA;					upPxIdx++;&#xD;&#xA;				}&#xD;&#xA;			}&#xD;&#xA;	&#xD;&#xA;			image.setPixels(pixels, 0, width, 1, 1, width - 1, height - 1);&#xD;&#xA;		}&#xD;&#xA;	&#xD;&#xA;		// Finds the furthermost left and right boundaries of the fill area&#xD;&#xA;		// on a given y coordinate, starting from a given x coordinate, filling as&#xD;&#xA;		// it goes.&#xD;&#xA;		// Adds the resulting horizontal range to the queue of floodfill ranges,&#xD;&#xA;		// to be processed in the main loop.&#xD;&#xA;	&#xD;&#xA;		// int x, int y: The starting coords&#xD;&#xA;		protected void LinearFill(int x, int y) {&#xD;&#xA;			// ***Find Left Edge of Color Area&#xD;&#xA;			int lFillLoc = x; // the location to check/fill on the left&#xD;&#xA;			int pxIdx = (width * y) + x;&#xD;&#xA;	&#xD;&#xA;			while (true) {&#xD;&#xA;				// **fill with the color&#xD;&#xA;				pixels[pxIdx] = fillColor;&#xD;&#xA;	&#xD;&#xA;				// **indicate that this pixel has already been checked and filled&#xD;&#xA;				pixelsChecked[pxIdx] = true;&#xD;&#xA;	&#xD;&#xA;				// **de-increment&#xD;&#xA;				lFillLoc--; // de-increment counter&#xD;&#xA;				pxIdx--; // de-increment pixel index&#xD;&#xA;	&#xD;&#xA;				// **exit loop if we're at edge of bitmap or color area&#xD;&#xA;				if (lFillLoc < 0 || (pixelsChecked[pxIdx]) || !CheckPixel(pxIdx)) {&#xD;&#xA;					break;&#xD;&#xA;				}&#xD;&#xA;			}&#xD;&#xA;	&#xD;&#xA;			lFillLoc++;&#xD;&#xA;	&#xD;&#xA;			// ***Find Right Edge of Color Area&#xD;&#xA;			int rFillLoc = x; // the location to check/fill on the left&#xD;&#xA;	&#xD;&#xA;			pxIdx = (width * y) + x;&#xD;&#xA;	&#xD;&#xA;			while (true) {&#xD;&#xA;				// **fill with the color&#xD;&#xA;				pixels[pxIdx] = fillColor;&#xD;&#xA;	&#xD;&#xA;				// **indicate that this pixel has already been checked and filled&#xD;&#xA;				pixelsChecked[pxIdx] = true;&#xD;&#xA;	&#xD;&#xA;				// **increment&#xD;&#xA;				rFillLoc++; // increment counter&#xD;&#xA;				pxIdx++; // increment pixel index&#xD;&#xA;	&#xD;&#xA;				// **exit loop if we're at edge of bitmap or color area&#xD;&#xA;				if (rFillLoc >= width || pixelsChecked[pxIdx] || !CheckPixel(pxIdx)) {&#xD;&#xA;					break;&#xD;&#xA;				}&#xD;&#xA;			}&#xD;&#xA;	&#xD;&#xA;			rFillLoc--;&#xD;&#xA;	&#xD;&#xA;			// add range to queue&#xD;&#xA;			FloodFillRange r = new FloodFillRange(lFillLoc, rFillLoc, y);&#xD;&#xA;	&#xD;&#xA;			ranges.offer(r);&#xD;&#xA;		}&#xD;&#xA;	&#xD;&#xA;		// Sees if a pixel is within the color tolerance range.&#xD;&#xA;		protected boolean CheckPixel(int px) {&#xD;&#xA;			int red = (pixels[px] >>> 16) & 0xff;&#xD;&#xA;			int green = (pixels[px] >>> 8) & 0xff;&#xD;&#xA;			int blue = pixels[px] & 0xff;&#xD;&#xA;	&#xD;&#xA;			return (red >= (startColor[0] - tolerance[0])&#xD;&#xA;					&& red <= (startColor[0] + tolerance[0])&#xD;&#xA;					&& green >= (startColor[1] - tolerance[1])&#xD;&#xA;					&& green <= (startColor[1] + tolerance[1])&#xD;&#xA;					&& blue >= (startColor[2] - tolerance[2]) && blue <= (startColor[2] + tolerance[2]));&#xD;&#xA;		}&#xD;&#xA;	&#xD;&#xA;		// Represents a linear range to be filled and branched from.&#xD;&#xA;		protected class FloodFillRange {&#xD;&#xA;			public int startX;&#xD;&#xA;			public int endX;&#xD;&#xA;			public int Y;&#xD;&#xA;	&#xD;&#xA;			public FloodFillRange(int startX, int endX, int y) {&#xD;&#xA;				this.startX = startX;&#xD;&#xA;				this.endX = endX;&#xD;&#xA;				this.Y = y;&#xD;&#xA;			}&#xD;&#xA;		}&#xD;&#xA;	}"
9009958692045172579,254,5,"    // Extended TabControl which saves the displayed item so you don't get the performance hit of &#xD;&#xA;    // unloading and reloading the VisualTree when switching tabs&#xD;&#xA;    &#xD;&#xA;    // Obtained from http://www.pluralsight-training.net/community/blogs/eburke/archive/2009/04/30/keeping-the-wpf-tab-control-from-destroying-its-children.aspx&#xD;&#xA;    // and made a some modifications so it reuses a TabItem's ContentPresenter when doing drag/drop operations&#xD;&#xA;    &#xD;&#xA;    [TemplatePart(Name = ""PART_ItemsHolder"", Type = typeof(Panel))]&#xD;&#xA;    public class TabControlEx : System.Windows.Controls.TabControl&#xD;&#xA;    {&#xD;&#xA;        // Holds all items, but only marks the current tab's item as visible&#xD;&#xA;        private Panel _itemsHolder = null;&#xD;&#xA;    &#xD;&#xA;        // Temporaily holds deleted item in case this was a drag/drop operation&#xD;&#xA;        private object _deletedObject = null;&#xD;&#xA;    &#xD;&#xA;        public TabControlEx()&#xD;&#xA;            : base()&#xD;&#xA;        {&#xD;&#xA;            // this is necessary so that we get the initial databound selected item&#xD;&#xA;            this.ItemContainerGenerator.StatusChanged += ItemContainerGenerator_StatusChanged;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /// <summary>&#xD;&#xA;        /// if containers are done, generate the selected item&#xD;&#xA;        /// </summary>&#xD;&#xA;        /// <param name=""sender""></param>&#xD;&#xA;        /// <param name=""e""></param>&#xD;&#xA;        void ItemContainerGenerator_StatusChanged(object sender, EventArgs e)&#xD;&#xA;        {&#xD;&#xA;            if (this.ItemContainerGenerator.Status == GeneratorStatus.ContainersGenerated)&#xD;&#xA;            {&#xD;&#xA;                this.ItemContainerGenerator.StatusChanged -= ItemContainerGenerator_StatusChanged;&#xD;&#xA;                UpdateSelectedItem();&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /// <summary>&#xD;&#xA;        /// get the ItemsHolder and generate any children&#xD;&#xA;        /// </summary>&#xD;&#xA;        public override void OnApplyTemplate()&#xD;&#xA;        {&#xD;&#xA;            base.OnApplyTemplate();&#xD;&#xA;            _itemsHolder = GetTemplateChild(""PART_ItemsHolder"") as Panel;&#xD;&#xA;            UpdateSelectedItem();&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /// <summary>&#xD;&#xA;        /// when the items change we remove any generated panel children and add any new ones as necessary&#xD;&#xA;        /// </summary>&#xD;&#xA;        /// <param name=""e""></param>&#xD;&#xA;        protected override void OnItemsChanged(NotifyCollectionChangedEventArgs e)&#xD;&#xA;        {&#xD;&#xA;            base.OnItemsChanged(e);&#xD;&#xA;    &#xD;&#xA;            if (_itemsHolder == null)&#xD;&#xA;            {&#xD;&#xA;                return;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            switch (e.Action)&#xD;&#xA;            {&#xD;&#xA;                case NotifyCollectionChangedAction.Reset:&#xD;&#xA;                    _itemsHolder.Children.Clear();&#xD;&#xA;    &#xD;&#xA;                    if (base.Items.Count > 0)&#xD;&#xA;                    {&#xD;&#xA;                        base.SelectedItem = base.Items[0];&#xD;&#xA;                        UpdateSelectedItem();&#xD;&#xA;                    }&#xD;&#xA;    &#xD;&#xA;                    break;&#xD;&#xA;    &#xD;&#xA;                case NotifyCollectionChangedAction.Add:&#xD;&#xA;                case NotifyCollectionChangedAction.Remove:&#xD;&#xA;    &#xD;&#xA;                    // Search for recently deleted items caused by a Drag/Drop operation&#xD;&#xA;                    if (e.NewItems != null && _deletedObject != null)&#xD;&#xA;                    {&#xD;&#xA;                        foreach (var item in e.NewItems)&#xD;&#xA;                        {&#xD;&#xA;                            if (_deletedObject == item)&#xD;&#xA;                            {&#xD;&#xA;                                // If the new item is the same as the recently deleted one (i.e. a drag/drop event)&#xD;&#xA;                                // then cancel the deletion and reuse the ContentPresenter so it doesn't have to be &#xD;&#xA;                                // redrawn. We do need to link the presenter to the new item though (using the Tag)&#xD;&#xA;                                ContentPresenter cp = FindChildContentPresenter(_deletedObject);&#xD;&#xA;                                if (cp != null)&#xD;&#xA;                                {&#xD;&#xA;                                    int index = _itemsHolder.Children.IndexOf(cp);&#xD;&#xA;    &#xD;&#xA;                                    (_itemsHolder.Children[index] as ContentPresenter).Tag =&#xD;&#xA;                                        (item is TabItem) ? item : (this.ItemContainerGenerator.ContainerFromItem(item));&#xD;&#xA;                                }&#xD;&#xA;                                _deletedObject = null;&#xD;&#xA;                            }&#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;    &#xD;&#xA;                    if (e.OldItems != null)&#xD;&#xA;                    {&#xD;&#xA;                        foreach (var item in e.OldItems)&#xD;&#xA;                        {&#xD;&#xA;    &#xD;&#xA;                            _deletedObject = item;&#xD;&#xA;    &#xD;&#xA;                            // We want to run this at a slightly later priority in case this&#xD;&#xA;                            // is a drag/drop operation so that we can reuse the template&#xD;&#xA;                            this.Dispatcher.BeginInvoke(DispatcherPriority.DataBind,&#xD;&#xA;                                new Action(delegate()&#xD;&#xA;                            {&#xD;&#xA;                                if (_deletedObject != null)&#xD;&#xA;                                {&#xD;&#xA;                                    ContentPresenter cp = FindChildContentPresenter(_deletedObject);&#xD;&#xA;                                    if (cp != null)&#xD;&#xA;                                    {&#xD;&#xA;                                        this._itemsHolder.Children.Remove(cp);&#xD;&#xA;                                    }&#xD;&#xA;                                }&#xD;&#xA;                            }&#xD;&#xA;                            ));&#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;    &#xD;&#xA;                    UpdateSelectedItem();&#xD;&#xA;                    break;&#xD;&#xA;    &#xD;&#xA;                case NotifyCollectionChangedAction.Replace:&#xD;&#xA;                    throw new NotImplementedException(""Replace not implemented yet"");&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /// <summary>&#xD;&#xA;        /// update the visible child in the ItemsHolder&#xD;&#xA;        /// </summary>&#xD;&#xA;        /// <param name=""e""></param>&#xD;&#xA;        protected override void OnSelectionChanged(SelectionChangedEventArgs e)&#xD;&#xA;        {&#xD;&#xA;            base.OnSelectionChanged(e);&#xD;&#xA;            UpdateSelectedItem();&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /// <summary>&#xD;&#xA;        /// generate a ContentPresenter for the selected item&#xD;&#xA;        /// </summary>&#xD;&#xA;        void UpdateSelectedItem()&#xD;&#xA;        {&#xD;&#xA;            if (_itemsHolder == null)&#xD;&#xA;            {&#xD;&#xA;                return;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            // generate a ContentPresenter if necessary&#xD;&#xA;            TabItem item = GetSelectedTabItem();&#xD;&#xA;            if (item != null)&#xD;&#xA;            {&#xD;&#xA;                CreateChildContentPresenter(item);&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            // show the right child&#xD;&#xA;            foreach (ContentPresenter child in _itemsHolder.Children)&#xD;&#xA;            {&#xD;&#xA;                child.Visibility = ((child.Tag as TabItem).IsSelected) ? Visibility.Visible : Visibility.Collapsed;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /// <summary>&#xD;&#xA;        /// create the child ContentPresenter for the given item (could be data or a TabItem)&#xD;&#xA;        /// </summary>&#xD;&#xA;        /// <param name=""item""></param>&#xD;&#xA;        /// <returns></returns>&#xD;&#xA;        ContentPresenter CreateChildContentPresenter(object item)&#xD;&#xA;        {&#xD;&#xA;            if (item == null)&#xD;&#xA;            {&#xD;&#xA;                return null;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            ContentPresenter cp = FindChildContentPresenter(item);&#xD;&#xA;    &#xD;&#xA;            if (cp != null)&#xD;&#xA;            {&#xD;&#xA;                return cp;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            // the actual child to be added.  cp.Tag is a reference to the TabItem&#xD;&#xA;            cp = new ContentPresenter();&#xD;&#xA;            cp.Content = (item is TabItem) ? (item as TabItem).Content : item;&#xD;&#xA;            cp.ContentTemplate = this.SelectedContentTemplate;&#xD;&#xA;            cp.ContentTemplateSelector = this.SelectedContentTemplateSelector;&#xD;&#xA;            cp.ContentStringFormat = this.SelectedContentStringFormat;&#xD;&#xA;            cp.Visibility = Visibility.Collapsed;&#xD;&#xA;            cp.Tag = (item is TabItem) ? item : (this.ItemContainerGenerator.ContainerFromItem(item));&#xD;&#xA;            _itemsHolder.Children.Add(cp);&#xD;&#xA;            return cp;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /// <summary>&#xD;&#xA;        /// Find the CP for the given object.  data could be a TabItem or a piece of data&#xD;&#xA;        /// </summary>&#xD;&#xA;        /// <param name=""data""></param>&#xD;&#xA;        /// <returns></returns>&#xD;&#xA;        ContentPresenter FindChildContentPresenter(object data)&#xD;&#xA;        {&#xD;&#xA;            if (data is TabItem)&#xD;&#xA;            {&#xD;&#xA;                data = (data as TabItem).Content;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            if (data == null)&#xD;&#xA;            {&#xD;&#xA;                return null;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            if (_itemsHolder == null)&#xD;&#xA;            {&#xD;&#xA;                return null;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            foreach (ContentPresenter cp in _itemsHolder.Children)&#xD;&#xA;            {&#xD;&#xA;                if (cp.Content == data)&#xD;&#xA;                {&#xD;&#xA;                    return cp;&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            return null;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /// <summary>&#xD;&#xA;        /// copied from TabControl; wish it were protected in that class instead of private&#xD;&#xA;        /// </summary>&#xD;&#xA;        /// <returns></returns>&#xD;&#xA;        protected TabItem GetSelectedTabItem()&#xD;&#xA;        {&#xD;&#xA;            object selectedItem = base.SelectedItem;&#xD;&#xA;            if (selectedItem == null)&#xD;&#xA;            {&#xD;&#xA;                return null;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            if (_deletedObject == selectedItem)&#xD;&#xA;            { &#xD;&#xA;    &#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            TabItem item = selectedItem as TabItem;&#xD;&#xA;            if (item == null)&#xD;&#xA;            {&#xD;&#xA;                item = base.ItemContainerGenerator.ContainerFromIndex(base.SelectedIndex) as TabItem;&#xD;&#xA;            }&#xD;&#xA;            return item;&#xD;&#xA;        }&#xD;&#xA;    }"
-8449044269742190178,257,6,"      <?php&#xD;&#xA;    class Node&#xD;&#xA;    {&#xD;&#xA;     public $data;&#xD;&#xA;     public $leftChild;&#xD;&#xA;     public $rightChild;&#xD;&#xA;     &#xD;&#xA;     public function __construct($data)&#xD;&#xA;      {&#xD;&#xA;       $this->data=$data;&#xD;&#xA;       $this->leftChild=null;&#xD;&#xA;       $this->rightChild=null;&#xD;&#xA;      }&#xD;&#xA;     public function disp_data()&#xD;&#xA;      {&#xD;&#xA;       echo $this->data;&#xD;&#xA;      }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    }//end class Node&#xD;&#xA;    class BinaryTree&#xD;&#xA;    {&#xD;&#xA;     public $root;&#xD;&#xA;     //public $s;&#xD;&#xA;     public function __construct()&#xD;&#xA;      {&#xD;&#xA;       $this->root=null;&#xD;&#xA;       //$this->s=file_get_contents('store');&#xD;&#xA;      &#xD;&#xA;      }&#xD;&#xA;    //function to display the tree&#xD;&#xA;      public function display()&#xD;&#xA;      {&#xD;&#xA;       $this->display_tree($this->root);&#xD;&#xA;       &#xD;&#xA;      }&#xD;&#xA;      public function display_tree($local_root)&#xD;&#xA;      {&#xD;&#xA;         &#xD;&#xA;       if($local_root==null) &#xD;&#xA;         return;&#xD;&#xA;        $this->display_tree($local_root->leftChild);&#xD;&#xA;        echo $local_root->data.""<br/>"";&#xD;&#xA;        $this->display_tree($local_root->rightChild);&#xD;&#xA;        &#xD;&#xA;      } &#xD;&#xA;    // function to insert a new node&#xD;&#xA;      public function insert($key)&#xD;&#xA;       {&#xD;&#xA;        $newnode=new Node($key);&#xD;&#xA;          if($this->root==null)&#xD;&#xA;            {&#xD;&#xA;             $this->root=$newnode;&#xD;&#xA;             return;&#xD;&#xA;            }&#xD;&#xA;          else&#xD;&#xA;            {&#xD;&#xA;             $parent=$this->root;&#xD;&#xA;             $current=$this->root;&#xD;&#xA;               while(true)&#xD;&#xA;                 {&#xD;&#xA;                   $parent=$current;&#xD;&#xA;                     //$this->find_order($key,$current->data);&#xD;&#xA;                    if($key==($this->find_order($key,$current->data)))&#xD;&#xA;                      {&#xD;&#xA;                          $current=$current->leftChild;&#xD;&#xA;                           if($current==null)&#xD;&#xA;                             {&#xD;&#xA;                              $parent->leftChild=$newnode;&#xD;&#xA;                              return;&#xD;&#xA;                             }//end if2&#xD;&#xA;                      }//end if1 &#xD;&#xA;                    else&#xD;&#xA;                      {&#xD;&#xA;                          $current=$current->rightChild;&#xD;&#xA;                           if($current==null)&#xD;&#xA;                             {&#xD;&#xA;                              $parent->rightChild=$newnode;&#xD;&#xA;                              return;  &#xD;&#xA;                             } //end if1                       &#xD;&#xA;                      } //end else&#xD;&#xA;                 }//end while loop &#xD;&#xA;            }//end else&#xD;&#xA;        &#xD;&#xA;       } //end insert function&#xD;&#xA;     &#xD;&#xA;    //function to search a particular Node&#xD;&#xA;     public function find($key)&#xD;&#xA;      {&#xD;&#xA;        $current=$this->root;&#xD;&#xA;         while($current->data!=$key)&#xD;&#xA;              {&#xD;&#xA;                if($key==$this->find_order($key,$current->data))&#xD;&#xA;                  {&#xD;&#xA;                    $current=$current->leftChild;&#xD;&#xA;                  }&#xD;&#xA;                else&#xD;&#xA;                  {&#xD;&#xA;                    $current=$current->rightChild;&#xD;&#xA;                  }&#xD;&#xA;                if($current==null)&#xD;&#xA;                  return(null);&#xD;&#xA;                &#xD;&#xA;              }&#xD;&#xA;             return($current->data); &#xD;&#xA;      }// end the function to search&#xD;&#xA;     public function delete1($key)&#xD;&#xA;      {&#xD;&#xA;        $current=$this->root;&#xD;&#xA;        $parent=$this->root;&#xD;&#xA;        &#xD;&#xA;        $isLeftChild=true;&#xD;&#xA;         while($current->data!=$key)&#xD;&#xA;              {&#xD;&#xA;               $parent=$current;&#xD;&#xA;               if($key==($this->find_order($key,$current->data)))&#xD;&#xA;                 {&#xD;&#xA;                  $current=$current->leftChild;&#xD;&#xA;                  $isLeftChild=true;&#xD;&#xA;                 }   &#xD;&#xA;               else&#xD;&#xA;                 {&#xD;&#xA;                  $current=$current->rightChild;&#xD;&#xA;                  $isLeftChild=false;   &#xD;&#xA;                 } &#xD;&#xA;                if($current==null)&#xD;&#xA;                  return(null);&#xD;&#xA;              }//end while loop &#xD;&#xA;    &#xD;&#xA;          echo ""<br/><br/>Node to delete:"".$current->data;&#xD;&#xA;         //to delete a leaf node &#xD;&#xA;         if($current->leftChild==null&&$current->rightChild==null)&#xD;&#xA;           {&#xD;&#xA;               if($current==$this->root)&#xD;&#xA;                  $this->root=null;  &#xD;&#xA;              else if($isLeftChild==true)&#xD;&#xA;               {&#xD;&#xA;                $parent->leftChild=null;&#xD;&#xA;               }  &#xD;&#xA;             else&#xD;&#xA;               {&#xD;&#xA;                $parent->rightChild=null;&#xD;&#xA;               }&#xD;&#xA;             return($current);       &#xD;&#xA;           }//end if1&#xD;&#xA;         //to delete a node having a leftChild &#xD;&#xA;       else if($current->rightChild==null)&#xD;&#xA;           {&#xD;&#xA;              if($current==$this->root)&#xD;&#xA;               $this->root=$current->leftChild;&#xD;&#xA;              else if($isLeftChild==true)&#xD;&#xA;               {&#xD;&#xA;                $parent->leftChild=$current->leftChild;&#xD;&#xA;               }&#xD;&#xA;              else&#xD;&#xA;               {&#xD;&#xA;                $parent->rightChild=$current->leftChild;&#xD;&#xA;               }   &#xD;&#xA;              return($current);&#xD;&#xA;           }//end else if1&#xD;&#xA;        //to delete a node having a rightChild&#xD;&#xA;       else if($current->leftChild==null)&#xD;&#xA;           {&#xD;&#xA;             if($current==$this->root)&#xD;&#xA;               $this->root=$current->rightChild;&#xD;&#xA;             else if($isLeftChild==true)&#xD;&#xA;               {&#xD;&#xA;                $parent->leftChild=$current->rightChild;&#xD;&#xA;               }  &#xD;&#xA;             else&#xD;&#xA;               {&#xD;&#xA;                $parent->rightChild=$current->rightChild; &#xD;&#xA;               }  &#xD;&#xA;               return($current);&#xD;&#xA;           }  &#xD;&#xA;       //to delete a node having both childs&#xD;&#xA;        else&#xD;&#xA;           {&#xD;&#xA;            $successor=$this->get_successor($current);&#xD;&#xA;            if($current==$this->root)&#xD;&#xA;              {&#xD;&#xA;                $this->root=$successor; &#xD;&#xA;                    &#xD;&#xA;              }&#xD;&#xA;            else if($isLeftChild==true)&#xD;&#xA;              {&#xD;&#xA;               $parent->leftChild=$successor;&#xD;&#xA;              }&#xD;&#xA;            else&#xD;&#xA;              {&#xD;&#xA;               $parent->rightChild=$successor;&#xD;&#xA;              }     &#xD;&#xA;             $successor->leftChild=$current->leftChild;&#xD;&#xA;            return($current);&#xD;&#xA;           }   &#xD;&#xA;         &#xD;&#xA;         &#xD;&#xA;      }//end the function to delete a node&#xD;&#xA;    //Function to find the successor node&#xD;&#xA;     public function get_successor($delNode)&#xD;&#xA;      {&#xD;&#xA;       $succParent=$delNode;&#xD;&#xA;       $successor=$delNode;&#xD;&#xA;       $temp=$delNode->rightChild;&#xD;&#xA;        while($temp!=null)&#xD;&#xA;             {&#xD;&#xA;              $succParent=$successor;&#xD;&#xA;              $successor=$temp;&#xD;&#xA;              $temp=$temp->leftChild;&#xD;&#xA;             }&#xD;&#xA;       if($successor!=$delNode->rightChild)&#xD;&#xA;         {&#xD;&#xA;          $succParent->leftChild=$successor->rightChild;&#xD;&#xA;          $successor->rightChild=$delNode->rightChild;&#xD;&#xA;         }&#xD;&#xA;      return($successor);&#xD;&#xA;      }&#xD;&#xA;    //function to find the order of two strings&#xD;&#xA;     public function find_order($str1,$str2)&#xD;&#xA;      {&#xD;&#xA;         $str1=strtolower($str1);&#xD;&#xA;         $str2=strtolower($str2);&#xD;&#xA;         $i=0;&#xD;&#xA;         $j=0;&#xD;&#xA;     &#xD;&#xA;         $p1=$str1[i];&#xD;&#xA;         $p2=$str2[j]; &#xD;&#xA;      while(true)&#xD;&#xA;       {  &#xD;&#xA;           if(ord($p1)<ord($p2)||($p1==''&&$p2==''))&#xD;&#xA;             {&#xD;&#xA;    &#xD;&#xA;               return($str1);&#xD;&#xA;             }&#xD;&#xA;          else&#xD;&#xA;             {&#xD;&#xA;               if(ord($p1)==ord($p2))&#xD;&#xA;                 {&#xD;&#xA;                  $p1=$str1[++$i];&#xD;&#xA;                  $p2=$str2[++$j];&#xD;&#xA;                  continue;&#xD;&#xA;                 }&#xD;&#xA;              return($str2); &#xD;&#xA;             }&#xD;&#xA;       }//end while&#xD;&#xA;    &#xD;&#xA;      } //end function find string order&#xD;&#xA;     &#xD;&#xA;     public function is_empty()&#xD;&#xA;      {&#xD;&#xA;        if($this->root==null)&#xD;&#xA;          return(true);&#xD;&#xA;        else&#xD;&#xA;          return(false);&#xD;&#xA;      }&#xD;&#xA;    }//end class BinaryTree&#xD;&#xA;    ?>"
-2764061479047435706,20,6,"    <?xml version=""1.0""?>&#xD;&#xA;    <configuration>&#xD;&#xA;      <system.web>&#xD;&#xA;        <compilation debug=""true"" targetFramework=""4.0"" />&#xD;&#xA;      </system.web>&#xD;&#xA;      <system.serviceModel>&#xD;&#xA;        <behaviors>&#xD;&#xA;          <serviceBehaviors>&#xD;&#xA;            <behavior>&#xD;&#xA;              <serviceMetadata httpGetEnabled=""true""/>&#xD;&#xA;              <serviceDebug includeExceptionDetailInFaults=""false""/>&#xD;&#xA;            </behavior>&#xD;&#xA;          </serviceBehaviors>&#xD;&#xA;        </behaviors>&#xD;&#xA;        <serviceHostingEnvironment multipleSiteBindingsEnabled=""true"" />&#xD;&#xA;      </system.serviceModel>&#xD;&#xA;     <system.webServer>&#xD;&#xA;        <modules runAllManagedModulesForAllRequests=""true""/>&#xD;&#xA;      </system.webServer>  &#xD;&#xA;    </configuration>"
6112468355014843181,20,6,"    <% form_for @message, :url => user_messages_path(@user) do |f| %>&#xD;&#xA;      <p>&#xD;&#xA;        To:<br />&#xD;&#xA;    		<%= f.text_field :to %>&#xD;&#xA;    		<%= error_message_on @message, :to %>&#xD;&#xA;      </p>&#xD;&#xA;      <p>&#xD;&#xA;        Subject:<br />&#xD;&#xA;        <%= f.text_field :subject %>&#xD;&#xA;        <%= error_message_on @message, :subject %>&#xD;&#xA;        </p>&#xD;&#xA;        <p>&#xD;&#xA;          Message<br />&#xD;&#xA;          <%= f.text_area :body %>&#xD;&#xA;    			<%= error_message_on @message, :body %>&#xD;&#xA;        </p>&#xD;&#xA;        <p>&#xD;&#xA;          <%= submit_tag ""Send"" %>&#xD;&#xA;        </p>&#xD;&#xA;    <% end %>"
6509993969430533865,21,6,"    # Copyright (c) 1993-2009 Microsoft Corp.&#xD;&#xA;    #&#xD;&#xA;    # This is a sample HOSTS file used by Microsoft TCP/IP for Windows.&#xD;&#xA;    #&#xD;&#xA;    # This file contains the mappings of IP addresses to host names. Each&#xD;&#xA;    # entry should be kept on an individual line. The IP address should&#xD;&#xA;    # be placed in the first column followed by the corresponding host name.&#xD;&#xA;    # The IP address and the host name should be separated by at least one&#xD;&#xA;    # space.&#xD;&#xA;    #&#xD;&#xA;    # Additionally, comments (such as these) may be inserted on individual&#xD;&#xA;    # lines or following the machine name denoted by a '#' symbol.&#xD;&#xA;    #&#xD;&#xA;    # For example:&#xD;&#xA;    #&#xD;&#xA;    #      102.54.94.97     rhino.acme.com          # source server&#xD;&#xA;    #       38.25.63.10     x.acme.com              # x client host&#xD;&#xA;    # localhost name resolution is handled within DNS itself.&#xD;&#xA;    #	127.0.0.1       localhost&#xD;&#xA;    #	::1             localhost&#xD;&#xA;    127.0.0.1    localhost"
-1887973469034586451,21,6,"        <html>&#xD;&#xA;        <head>&#xD;&#xA;        <script type=""text/javascript"" src=""ckeditor/ckeditor.js""></script>&#xD;&#xA;        <script type=""text/javascript"" src=""ckfinder/ckfinder.js""></script>&#xD;&#xA;        </head>&#xD;&#xA;        <body>&#xD;&#xA;            <h1>CKEditor CKFinder Integration using PHP</h1>&#xD;&#xA;            <textarea id=""editor1"" name=""editor1"" rows=""10"" cols=""80""></textarea>&#xD;&#xA;        <script type=""text/javascript"">&#xD;&#xA;        var editor = CKEDITOR.replace( 'editor1', {&#xD;&#xA;            filebrowserBrowseUrl : 'ckfinder/ckfinder.html',&#xD;&#xA;            filebrowserImageBrowseUrl : 'ckfinder/ckfinder.html?type=Images',&#xD;&#xA;            filebrowserFlashBrowseUrl : 'ckfinder/ckfinder.html?type=Flash',&#xD;&#xA;            filebrowserUploadUrl : 'ckfinder/core/connector/php/connector.php?command=QuickUpload&type=Files',&#xD;&#xA;            filebrowserImageUploadUrl : 'ckfinder/core/connector/php/connector.php?command=QuickUpload&type=Images',&#xD;&#xA;            filebrowserFlashUploadUrl : 'ckfinder/core/connector/php/connector.php?command=QuickUpload&type=Flash'&#xD;&#xA;        });&#xD;&#xA;        CKFinder.setupCKEditor( editor, '../' );&#xD;&#xA;        </script>&#xD;&#xA;        </body>&#xD;&#xA;        </html>"
9106322759522864506,22,6,"     <?xml version=""1.0"" encoding=""UTF-8""?>&#xD;&#xA;     <xsl:stylesheet version=""1.0"" xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"">&#xD;&#xA;     <xsl:template match=""/"">&#xD;&#xA;      <html>&#xD;&#xA;      <body>&#xD;&#xA;      <h2>My CD Collection</h2>&#xD;&#xA;        <table border=""1"">&#xD;&#xA;          <tr bgcolor=""#9acd32"">&#xD;&#xA;            <th style=""text-align:left"">Title</th>&#xD;&#xA;            <th style=""text-align:left"">Artist</th>&#xD;&#xA;          </tr>&#xD;&#xA;          <xsl:for-each select=""catalog/cd"">&#xD;&#xA;          <tr>&#xD;&#xA;            <td><xsl:value-of select=""title""/></td>&#xD;&#xA;            <td><xsl:value-of select=""artist""/></td>&#xD;&#xA;          </tr>&#xD;&#xA;          </xsl:for-each>&#xD;&#xA;        </table>&#xD;&#xA;      </body>&#xD;&#xA;      </html>&#xD;&#xA;     </xsl:template>&#xD;&#xA;    </xsl:stylesheet>"
2176712100122616322,22,6,    +--------+----------+-----------+------------+----------+-----------------+---------+--------------------+--------------------+&#xD;&#xA;    | emp_id | fname    | lname     | start_date | end_date | superior_emp_id | dept_id | title              | assigned_branch_id |&#xD;&#xA;    +--------+----------+-----------+------------+----------+-----------------+---------+--------------------+--------------------+&#xD;&#xA;    |      1 | Michael  | Smith     | 2005-06-22 | NULL     |            NULL |       3 | President          |                  1 |&#xD;&#xA;    |      2 | Susan    | Barker    | 2006-09-12 | NULL     |               1 |       3 | Vice President     |                  1 |&#xD;&#xA;    |      3 | Robert   | Tyler     | 2005-02-09 | NULL     |               1 |       3 | Treasurer          |                  1 |&#xD;&#xA;    |      4 | Susan    | Hawthorne | 2006-04-24 | NULL     |               3 |       1 | Operations Manager |                  1 |&#xD;&#xA;    |      5 | John     | Gooding   | 2007-11-14 | NULL     |               4 |       2 | Loan Manager       |                  1 |&#xD;&#xA;    |      6 | Helen    | Fleming   | 2008-03-17 | NULL     |               4 |       1 | Head Teller        |                  1 |&#xD;&#xA;    |      7 | Chris    | Tucker    | 2008-09-15 | NULL     |               6 |       1 | Teller             |                  1 |&#xD;&#xA;    |      8 | Sarah    | Parker    | 2006-12-02 | NULL     |               6 |       1 | Teller             |                  1 |&#xD;&#xA;    |      9 | Jane     | Grossman  | 2006-05-03 | NULL     |               6 |       1 | Teller             |                  1 |&#xD;&#xA;    |     10 | Paula    | Roberts   | 2006-07-27 | NULL     |               4 |       1 | Head Teller        |                  2 |&#xD;&#xA;    |     11 | Thomas   | Ziegler   | 2004-10-23 | NULL     |              10 |       1 | Teller             |                  2 |&#xD;&#xA;    |     12 | Samantha | Jameson   | 2007-01-08 | NULL     |              10 |       1 | Teller             |                  2 |&#xD;&#xA;    |     13 | John     | Blake     | 2004-05-11 | NULL     |               4 |       1 | Head Teller        |                  3 |&#xD;&#xA;    |     14 | Cindy    | Mason     | 2006-08-09 | NULL     |              13 |       1 | Teller             |                  3 |&#xD;&#xA;    |     15 | Frank    | Portman   | 2007-04-01 | NULL     |              13 |       1 | Teller             |                  3 |&#xD;&#xA;    |     16 | Theresa  | Markham   | 2005-03-15 | NULL     |               4 |       1 | Head Teller        |                  4 |&#xD;&#xA;    |     17 | Beth     | Fowler    | 2006-06-29 | NULL     |              16 |       1 | Teller             |                  4 |&#xD;&#xA;    |     18 | Rick     | Tulman    | 2006-12-12 | NULL     |              16 |       1 | Teller             |                  4 |&#xD;&#xA;    +--------+----------+-----------+------------+----------+-----------------+---------+--------------------+--------------------+
-3467747552777263715,22,6,"        <!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01//EN"">&#xD;&#xA;    <html>&#xD;&#xA;    <head>&#xD;&#xA;      <title>Universal vertical center with CSS</title>&#xD;&#xA;      <style>&#xD;&#xA;        .greenBorder {border: 1px solid green;} /* just borders to see it */&#xD;&#xA;      </style>&#xD;&#xA;    </head>&#xD;&#xA;    &#xD;&#xA;    <body>&#xD;&#xA;      <div class=""greenBorder"" style=""display: table; height: 400px; #position: relative; overflow: hidden;"">&#xD;&#xA;        <div style="" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;"">&#xD;&#xA;          <div class=""greenBorder"" style="" #position: relative; #top: -50%"">&#xD;&#xA;            any text<br>&#xD;&#xA;            any height<br>&#xD;&#xA;            any content, for example generated from DB<br>&#xD;&#xA;            everything is vertically centered&#xD;&#xA;          </div>&#xD;&#xA;        </div>&#xD;&#xA;      </div>&#xD;&#xA;    </body>&#xD;&#xA;    </html>"
-4083603927361664426,22,6,"    <?xml version=""1.0"" encoding=""utf-8""?>&#xD;&#xA;     <LinearLayout xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;    android:layout_width=""wrap_content""&#xD;&#xA;    android:layout_height=""wrap_content"" >&#xD;&#xA;     <ImageView&#xD;&#xA;        android:id=""@+id/icon""&#xD;&#xA;        android:layout_width=""22px""&#xD;&#xA;        android:layout_height=""22px""&#xD;&#xA;        android:layout_marginLeft=""4px""&#xD;&#xA;        android:layout_marginRight=""10px""&#xD;&#xA;        android:layout_marginTop=""4px""&#xD;&#xA;        android:src=""@drawable/ic_launcher"" >&#xD;&#xA;    </ImageView>&#xD;&#xA;    <TextView&#xD;&#xA;        android:id=""@+id/label""&#xD;&#xA;        android:layout_width=""wrap_content""&#xD;&#xA;        android:layout_height=""wrap_content""&#xD;&#xA;        android:text=""@+id/label""&#xD;&#xA;        android:textSize=""20px"" >&#xD;&#xA;     </TextView>&#xD;&#xA;     </LinearLayout>&#xD;&#xA;		"
6141336676874606640,22,6,"	<?php&#xD;&#xA;	// Set the content-type&#xD;&#xA;	header('Content-type: image/png');&#xD;&#xA;	// Create the image&#xD;&#xA;	$im = imagecreatetruecolor(400, 30);&#xD;&#xA;	// Create some colors&#xD;&#xA;	$white = imagecolorallocate($im, 255, 255, 255);&#xD;&#xA;	$grey = imagecolorallocate($im, 128, 128, 128);&#xD;&#xA;	$black = imagecolorallocate($im, 0, 0, 0);&#xD;&#xA;	imagefilledrectangle($im, 0, 0, 399, 29, $white);&#xD;&#xA;	// The text to draw&#xD;&#xA;	$text = 'Testing...';&#xD;&#xA;	// Replace path by your own font path&#xD;&#xA;	$font = 'arial.ttf';&#xD;&#xA;	// Add some shadow to the text&#xD;&#xA;	imagettftext($im, 20, 0, 11, 21, $grey, $font, $text);&#xD;&#xA;	// Add the text&#xD;&#xA;	imagettftext($im, 20, 0, 10, 20, $black, $font, $text);&#xD;&#xA;	// Using imagepng() results in clearer text compared with imagejpeg()&#xD;&#xA;	imagepng($im);&#xD;&#xA;	imagedestroy($im);&#xD;&#xA;	?> "
-4047753210835136889,23,6,"     *  Welcome to your gulpfile!&#xD;&#xA;     *  The gulp tasks are splitted in several files in the gulp directory&#xD;&#xA;     *  because putting all here was really too long&#xD;&#xA;     */&#xD;&#xA;    'use strict';&#xD;&#xA;    var gulp = require('gulp');&#xD;&#xA;    var wrench = require('wrench');&#xD;&#xA;    /**&#xD;&#xA;     *  This will load all js or coffee files in the gulp directory&#xD;&#xA;     *  in order to load all gulp tasks&#xD;&#xA;     */&#xD;&#xA;    wrench.readdirSyncRecursive('./gulp').filter(function(file) {&#xD;&#xA;      return (/\.(js|coffee)$/i).test(file);&#xD;&#xA;    }).map(function(file) {&#xD;&#xA;      require('./gulp/' + file);&#xD;&#xA;    });&#xD;&#xA;    /**&#xD;&#xA;     *  Default task clean temporaries directories and launch the&#xD;&#xA;     *  main optimization build task&#xD;&#xA;     */&#xD;&#xA;    gulp.task('default', ['clean'], function () {&#xD;&#xA;      gulp.start('build');&#xD;&#xA;    });"
7537228934732387888,23,6,"    <android.support.v4.app.FragmentTabHost xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;        android:id=""@android:id/tabhost""&#xD;&#xA;        android:layout_width=""match_parent""&#xD;&#xA;        android:layout_height=""match_parent"">&#xD;&#xA;    &#xD;&#xA;        <LinearLayout&#xD;&#xA;            android:layout_width=""match_parent""&#xD;&#xA;            android:layout_height=""match_parent""&#xD;&#xA;            android:orientation=""vertical"">&#xD;&#xA;    &#xD;&#xA;            <TabWidget&#xD;&#xA;                android:id=""@android:id/tabs""&#xD;&#xA;                android:layout_width=""fill_parent""&#xD;&#xA;                android:layout_height=""wrap_content""&#xD;&#xA;                android:layout_gravity=""bottom"" />&#xD;&#xA;    &#xD;&#xA;            <FrameLayout&#xD;&#xA;                android:id=""@android:id/tabcontent""&#xD;&#xA;                android:layout_width=""fill_parent""&#xD;&#xA;                android:layout_height=""0dp""&#xD;&#xA;                android:layout_weight=""1"" />&#xD;&#xA;        </LinearLayout>&#xD;&#xA;    </android.support.v4.app.FragmentTabHost>"
-2538101193556045117,23,6,"    <!-- Button trigger modal -->&#xD;&#xA;    <button type=""button"" class=""btn btn-primary btn-lg"" data-toggle=""modal"" data-target=""#myModal"">&#xD;&#xA;      Launch demo modal&#xD;&#xA;    </button>&#xD;&#xA;    &#xD;&#xA;    <!-- Modal -->&#xD;&#xA;    <div class=""modal fade"" id=""myModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"">&#xD;&#xA;      <div class=""modal-dialog"">&#xD;&#xA;        <div class=""modal-content"">&#xD;&#xA;          <div class=""modal-header"">&#xD;&#xA;            <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close""><span aria-hidden=""true"">&times;</span></button>&#xD;&#xA;            <h4 class=""modal-title"" id=""myModalLabel"">Modal title</h4>&#xD;&#xA;          </div>&#xD;&#xA;          <div class=""modal-body"">&#xD;&#xA;            ...&#xD;&#xA;          </div>&#xD;&#xA;          <div class=""modal-footer"">&#xD;&#xA;            <button type=""button"" class=""btn btn-default"" data-dismiss=""modal"">Close</button>&#xD;&#xA;            <button type=""button"" class=""btn btn-primary"">Save changes</button>&#xD;&#xA;          </div>&#xD;&#xA;        </div>&#xD;&#xA;      </div>&#xD;&#xA;    </div>"
-8169927991131544224,23,6,"	<!--&#xD;&#xA;	  Copyright 2013 The Android Open Source Project&#xD;&#xA;	  Licensed under the Apache License, Version 2.0 (the ""License"");&#xD;&#xA;	  you may not use this file except in compliance with the License.&#xD;&#xA;	  You may obtain a copy of the License at&#xD;&#xA;		  http://www.apache.org/licenses/LICENSE-2.0&#xD;&#xA;	  Unless required by applicable law or agreed to in writing, software&#xD;&#xA;	  distributed under the License is distributed on an ""AS IS"" BASIS,&#xD;&#xA;	  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xD;&#xA;	  See the License for the specific language governing permissions and&#xD;&#xA;	  limitations under the License.&#xD;&#xA;	  -->&#xD;&#xA;	<TextView xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;		android:id=""@android:id/text1""&#xD;&#xA;		android:layout_width=""match_parent""&#xD;&#xA;		android:layout_height=""wrap_content""&#xD;&#xA;		android:textAppearance=""?android:attr/textAppearanceListItemSmall""&#xD;&#xA;		android:gravity=""center_vertical""&#xD;&#xA;		android:paddingLeft=""16dp""&#xD;&#xA;		android:paddingRight=""16dp""&#xD;&#xA;		android:textColor=""#fff""&#xD;&#xA;		android:background=""?android:attr/activatedBackgroundIndicator""&#xD;&#xA;		android:minHeight=""?android:attr/listPreferredItemHeightSmall""/>"
4639911643671854137,24,6,"	<!doctype html>&#xD;&#xA;	<html lang=""en"">&#xD;&#xA;	<head>&#xD;&#xA;	  <meta charset=""utf-8"">&#xD;&#xA;	  <title>jQuery UI Dialog - Default functionality</title>&#xD;&#xA;	  <link rel=""stylesheet"" href=""//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css"">&#xD;&#xA;	  <script src=""//code.jquery.com/jquery-1.10.2.js""></script>&#xD;&#xA;	  <script src=""//code.jquery.com/ui/1.11.4/jquery-ui.js""></script>&#xD;&#xA;	  <link rel=""stylesheet"" href=""/resources/demos/style.css"">&#xD;&#xA;	  <script>&#xD;&#xA;	  $(function() {&#xD;&#xA;		$( ""#dialog"" ).dialog();&#xD;&#xA;	  });&#xD;&#xA;	  </script>&#xD;&#xA;	</head>&#xD;&#xA;	<body>&#xD;&#xA;	 &#xD;&#xA;	<div id=""dialog"" title=""Basic dialog"">&#xD;&#xA;	  <p>This is the default dialog which is useful for displaying information. The dialog window can be moved, resized and closed with the 'x' icon.</p>&#xD;&#xA;	</div>&#xD;&#xA;	 &#xD;&#xA;	 &#xD;&#xA;	</body>&#xD;&#xA;	</html>"
8914898676521542388,24,6,"    <?xml version=""1.0"" encoding=""utf-8""?>&#xD;&#xA;    &#xD;&#xA;    <layer-list xmlns:android=""http://schemas.android.com/apk/res/android"">&#xD;&#xA;    <item>&#xD;&#xA;        <shape android:shape=""rectangle""&#xD;&#xA;            android:dither=""true"">&#xD;&#xA;            <corners android:radius=""2dp""/>&#xD;&#xA;            <solid android:color=""#ccc""/>&#xD;&#xA;        </shape>&#xD;&#xA;    </item>&#xD;&#xA;    &#xD;&#xA;    <item android:bottom=""2dp"">&#xD;&#xA;        <shape android:shape=""rectangle""&#xD;&#xA;            android:dither=""true"">&#xD;&#xA;            <corners android:radius=""2dp""/>&#xD;&#xA;            <solid android:color=""@android:color/white""/>&#xD;&#xA;    &#xD;&#xA;            <padding android:bottom=""8dp""&#xD;&#xA;                android:left=""8dp""&#xD;&#xA;                android:right=""8dp""&#xD;&#xA;                android:top=""8dp""/>&#xD;&#xA;        </shape>&#xD;&#xA;    </item>&#xD;&#xA;    </layer-list>"
5082213845233831783,24,6,"	BEGIN TRY&#xD;&#xA;		-- RAISERROR with severity 11-19 will cause execution to &#xD;&#xA;		-- jump to the CATCH block.&#xD;&#xA;		RAISERROR ('Error raised in TRY block.', -- Message text.&#xD;&#xA;				   16, -- Severity.&#xD;&#xA;				   1 -- State.&#xD;&#xA;				   );&#xD;&#xA;	END TRY&#xD;&#xA;	BEGIN CATCH&#xD;&#xA;		DECLARE @ErrorMessage NVARCHAR(4000);&#xD;&#xA;		DECLARE @ErrorSeverity INT;&#xD;&#xA;		DECLARE @ErrorState INT;&#xD;&#xA;		SELECT &#xD;&#xA;			@ErrorMessage = ERROR_MESSAGE(),&#xD;&#xA;			@ErrorSeverity = ERROR_SEVERITY(),&#xD;&#xA;			@ErrorState = ERROR_STATE();&#xD;&#xA;		-- Use RAISERROR inside the CATCH block to return error&#xD;&#xA;		-- information about the original error that caused&#xD;&#xA;		-- execution to jump to the CATCH block.&#xD;&#xA;		RAISERROR (@ErrorMessage, -- Message text.&#xD;&#xA;				   @ErrorSeverity, -- Severity.&#xD;&#xA;				   @ErrorState -- State.&#xD;&#xA;				   );&#xD;&#xA;	END CATCH;"
2208405043291536306,24,6,"      <android.support.design.widget.CoordinatorLayout&#xD;&#xA;                xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;                xmlns:app=""http://schemas.android.com/apk/res-auto""&#xD;&#xA;                android:layout_width=""match_parent""&#xD;&#xA;                android:layout_height=""match_parent"">&#xD;&#xA;             &#xD;&#xA;             <! -- Your Scrollable View -->&#xD;&#xA;            <android.support.v7.widget.RecyclerView&#xD;&#xA;                    android:layout_width=""match_parent""&#xD;&#xA;                    android:layout_height=""match_parent""&#xD;&#xA;                    app:layout_behavior=""@string/appbar_scrolling_view_behavior"" />&#xD;&#xA;        &#xD;&#xA;            <android.support.design.widget.AppBarLayout&#xD;&#xA;                    android:layout_width=""match_parent""&#xD;&#xA;                    android:layout_height=""wrap_content"">&#xD;&#xA;           <android.support.v7.widget.Toolbar&#xD;&#xA;                          ...&#xD;&#xA;                          app:layout_scrollFlags=""scroll|enterAlways"">&#xD;&#xA;        &#xD;&#xA;                <android.support.design.widget.TabLayout&#xD;&#xA;                          ...&#xD;&#xA;                          app:layout_scrollFlags=""scroll|enterAlways"">&#xD;&#xA;             </android.support.design.widget.AppBarLayout>&#xD;&#xA;        </android.support.design.widget.CoordinatorLayout>"
-8614284014379512735,24,6,"      <LinearLayout&#xD;&#xA;            xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;            android:layout_width=""match_parent""&#xD;&#xA;            android:layout_height=""match_parent""&#xD;&#xA;            android:orientation=""vertical"" >&#xD;&#xA;    &#xD;&#xA;            <FrameLayout&#xD;&#xA;                android:id=""@+id/realtabcontent""&#xD;&#xA;                android:layout_width=""match_parent""&#xD;&#xA;                android:layout_height=""0dip""&#xD;&#xA;                android:layout_weight=""1"" />&#xD;&#xA;    &#xD;&#xA;            <android.support.v4.app.FragmentTabHost&#xD;&#xA;                android:id=""@android:id/tabhost""&#xD;&#xA;                android:layout_width=""match_parent""&#xD;&#xA;                android:layout_height=""wrap_content"" >&#xD;&#xA;    &#xD;&#xA;                <FrameLayout&#xD;&#xA;                    android:id=""@android:id/tabcontent""&#xD;&#xA;                    android:layout_width=""0dp""&#xD;&#xA;                    android:layout_height=""0dp""&#xD;&#xA;                    android:layout_weight=""0"" />&#xD;&#xA;            </android.support.v4.app.FragmentTabHost>&#xD;&#xA;        </LinearLayout>"
-2019655618643624810,24,6,"    <!--  Basic usage  -->&#xD;&#xA;    <Button Click=""{data:MethodBinding OpenFromFile}"" Content=""Open"" />&#xD;&#xA;    <!--  Pass in a binding as a method argument  -->&#xD;&#xA;    <Button Click=""{data:MethodBinding Save, {Binding CurrentItem}}"" Content=""Save"" />&#xD;&#xA;    <!--  Another example of a binding, but this time to a property on another element  -->&#xD;&#xA;    <ComboBox x:Name=""ExistingItems"" ItemsSource=""{Binding ExistingItems}"" />&#xD;&#xA;    <Button Click=""{data:MethodBinding Edit, {Binding SelectedItem, ElementName=ExistingItems}}"" />&#xD;&#xA;    <!--  Pass in a hard-coded method argument, XAML string automatically converted to the proper type  -->&#xD;&#xA;    <ToggleButton Checked=""{data:MethodBinding SetWebServiceState, True}""&#xD;&#xA;                    Content=""Web Service""&#xD;&#xA;                    Unchecked=""{data:MethodBinding SetWebServiceState, False}"" />&#xD;&#xA;                    &#xD;&#xA;    <!--  Pass in sender, and match method signature automatically -->&#xD;&#xA;    <Canvas PreviewMouseDown=""{data:MethodBinding SetCurrentElement, {data:EventSender}, ThrowOnMethodMissing=False}"">&#xD;&#xA;        <controls:DesignerElementTypeA />&#xD;&#xA;        <controls:DesignerElementTypeB />&#xD;&#xA;        <controls:DesignerElementTypeC />&#xD;&#xA;    </Canvas>&#xD;&#xA;        <!--  Pass in EventArgs  -->&#xD;&#xA;    <Canvas MouseDown=""{data:MethodBinding StartDrawing, {data:EventArgs}}""&#xD;&#xA;            MouseMove=""{data:MethodBinding AddDrawingPoint, {data:EventArgs}}""&#xD;&#xA;            MouseUp=""{data:MethodBinding EndDrawing, {data:EventArgs}}"" />&#xD;&#xA;    <!-- Support binding to methods further in a property path -->&#xD;&#xA;    <Button Content=""SaveDocument"" Click=""{data:MethodBinding CurrentDocument.DocumentService.Save, {Binding CurrentDocument}}"" />"
2121196622318997529,24,6,"    <!-- File: /app/View/Posts/index.ctp -->&#xD;&#xA;    &#xD;&#xA;    <h1>Blog posts</h1>&#xD;&#xA;    <table>&#xD;&#xA;        <tr>&#xD;&#xA;            <th>Id</th>&#xD;&#xA;            <th>Title</th>&#xD;&#xA;            <th>Created</th>&#xD;&#xA;        </tr>&#xD;&#xA;    &#xD;&#xA;        <!-- Here is where we loop through our $posts array, printing out post info -->&#xD;&#xA;    &#xD;&#xA;        <?php foreach ($posts as $post): ?>&#xD;&#xA;        <tr>&#xD;&#xA;            <td><?php echo $post['Post']['id']; ?></td>&#xD;&#xA;            <td>&#xD;&#xA;                <?php echo $this->Html->link($post['Post']['title'],&#xD;&#xA;    array('controller' => 'posts', 'action' => 'view', $post['Post']['id'])); ?>&#xD;&#xA;            </td>&#xD;&#xA;            <td><?php echo $post['Post']['created']; ?></td>&#xD;&#xA;        </tr>&#xD;&#xA;        <?php endforeach; ?>&#xD;&#xA;        <?php unset($post); ?>&#xD;&#xA;    </table>"
-5620897422975587745,25,6,"        <?xml version=""1.0"" encoding=""UTF-8""?>&#xD;&#xA;    <configuration>&#xD;&#xA;         <system.webServer>&#xD;&#xA;             <rewrite>&#xD;&#xA;                 <rules>&#xD;&#xA;                     <rule name=""Imported Rule 1"" stopProcessing=""true"">&#xD;&#xA;                         <match url=""^.*$"" />&#xD;&#xA;                         <conditions logicalGrouping=""MatchAny"">&#xD;&#xA;                             <add input=""{REQUEST_FILENAME}""&#xD;&#xA;                                 matchType=""IsFile"" pattern=""""&#xD;&#xA;                                 ignoreCase=""false"" />&#xD;&#xA;                             <add input=""{REQUEST_FILENAME}""&#xD;&#xA;                                 matchType=""IsDirectory""&#xD;&#xA;                                 pattern="""" ignoreCase=""false"" />&#xD;&#xA;                         </conditions>&#xD;&#xA;                         <action type=""None"" />&#xD;&#xA;                     </rule>&#xD;&#xA;                     <rule name=""Imported Rule 2"" stopProcessing=""true"">&#xD;&#xA;                         <match url=""^.*$"" />&#xD;&#xA;                         <action type=""Rewrite"" url=""index.php"" />&#xD;&#xA;                     </rule>&#xD;&#xA;                 </rules>&#xD;&#xA;             </rewrite>&#xD;&#xA;         </system.webServer>&#xD;&#xA;    </configuration>"
4101491992123198313,25,6,"    # SQLite version 3.x&#xD;&#xA;    #   gem install sqlite3&#xD;&#xA;    #&#xD;&#xA;    #   Ensure the SQLite 3 gem is defined in your Gemfile&#xD;&#xA;    #   gem 'sqlite3'&#xD;&#xA;    #&#xD;&#xA;    default: &default&#xD;&#xA;      adapter: sqlite3&#xD;&#xA;      pool: <%= ENV.fetch(""RAILS_MAX_THREADS"") { 5 } %>&#xD;&#xA;      timeout: 5000&#xD;&#xA;    &#xD;&#xA;    development:&#xD;&#xA;      <<: *default&#xD;&#xA;      database: db/development.sqlite3&#xD;&#xA;    &#xD;&#xA;    # Warning: The database defined as ""test"" will be erased and&#xD;&#xA;    # re-generated from your development database when you run ""rake"".&#xD;&#xA;    # Do not set this db to the same as development or production.&#xD;&#xA;    test:&#xD;&#xA;      <<: *default&#xD;&#xA;      database: db/test.sqlite3&#xD;&#xA;    &#xD;&#xA;    production:&#xD;&#xA;      <<: *default&#xD;&#xA;      database: db/production.sqlite3"
6700156139201303874,26,6,"     <html lang=""en"">&#xD;&#xA;      <head>&#xD;&#xA;        <meta name=""google-signin-scope"" content=""profile email"">&#xD;&#xA;        <meta name=""google-signin-client_id"" content=""YOUR_CLIENT_ID.apps.googleusercontent.com"">&#xD;&#xA;        <script src=""https://apis.google.com/js/platform.js"" async defer></script>&#xD;&#xA;      </head>&#xD;&#xA;      <body>&#xD;&#xA;        <div class=""g-signin2"" data-onsuccess=""onSignIn"" data-theme=""dark""></div>&#xD;&#xA;        <script>&#xD;&#xA;          function onSignIn(googleUser) {&#xD;&#xA;            // Useful data for your client-side scripts:&#xD;&#xA;            var profile = googleUser.getBasicProfile();&#xD;&#xA;            console.log(""ID: "" + profile.getId()); // Don't send this directly to your server!&#xD;&#xA;            console.log('Full Name: ' + profile.getName());&#xD;&#xA;            console.log('Given Name: ' + profile.getGivenName());&#xD;&#xA;            console.log('Family Name: ' + profile.getFamilyName());&#xD;&#xA;            console.log(""Image URL: "" + profile.getImageUrl());&#xD;&#xA;            console.log(""Email: "" + profile.getEmail());&#xD;&#xA;    &#xD;&#xA;            // The ID token you need to pass to your backend:&#xD;&#xA;            var id_token = googleUser.getAuthResponse().id_token;&#xD;&#xA;            console.log(""ID Token: "" + id_token);&#xD;&#xA;          };&#xD;&#xA;        </script>&#xD;&#xA;      </body>&#xD;&#xA;    </html>"
-327602582593729101,26,6,"                                                 xmlns:app=""http://schemas.android.com/apk/res-auto""&#xD;&#xA;                                                 android:layout_width=""match_parent""&#xD;&#xA;                                                 android:layout_height=""match_parent"">&#xD;&#xA;    <android.support.design.widget.AppBarLayout&#xD;&#xA;        android:layout_width=""match_parent""&#xD;&#xA;        android:layout_height=""wrap_content""&#xD;&#xA;        android:theme=""@style/ThemeOverlay.AppCompat.Dark.ActionBar"">&#xD;&#xA;        <android.support.v7.widget.Toolbar&#xD;&#xA;            android:id=""@+id/toolbar""&#xD;&#xA;            android:layout_width=""match_parent""&#xD;&#xA;            android:layout_height=""?attr/actionBarSize""&#xD;&#xA;            android:background=""?attr/colorPrimary""&#xD;&#xA;            app:layout_scrollFlags=""scroll|enterAlways""&#xD;&#xA;            app:popupTheme=""@style/ThemeOverlay.AppCompat.Light"" />&#xD;&#xA;        <android.support.design.widget.TabLayout&#xD;&#xA;            android:id=""@+id/tabs""&#xD;&#xA;            android:layout_width=""match_parent""&#xD;&#xA;            android:layout_height=""wrap_content""&#xD;&#xA;            app:tabMode=""fixed""&#xD;&#xA;            app:tabGravity=""fill""/>&#xD;&#xA;    </android.support.design.widget.AppBarLayout>&#xD;&#xA;    <android.support.v4.view.ViewPager&#xD;&#xA;        android:id=""@+id/viewpager""&#xD;&#xA;        android:layout_width=""match_parent""&#xD;&#xA;        android:layout_height=""match_parent""&#xD;&#xA;        app:layout_behavior=""@string/appbar_scrolling_view_behavior""/>"
4134500457216001118,26,6,"    <nav class=""top-bar"" data-topbar role=""navigation"">&#xD;&#xA;      <ul class=""title-area"">&#xD;&#xA;        <li class=""name"">&#xD;&#xA;          <h1><a href=""#"">My Site</a></h1>&#xD;&#xA;        </li>&#xD;&#xA;         <!-- Remove the class ""menu-icon"" to get rid of menu icon. Take out ""Menu"" to just have icon alone -->&#xD;&#xA;        <li class=""toggle-topbar menu-icon""><a href=""#""><span>Menu</span></a></li>&#xD;&#xA;      </ul>&#xD;&#xA;      <section class=""top-bar-section"">&#xD;&#xA;        <!-- Right Nav Section -->&#xD;&#xA;        <ul class=""right"">&#xD;&#xA;          <li class=""active""><a href=""#"">Right Button Active</a></li>&#xD;&#xA;          <li class=""has-dropdown"">&#xD;&#xA;            <a href=""#"">Right Button Dropdown</a>&#xD;&#xA;            <ul class=""dropdown"">&#xD;&#xA;              <li><a href=""#"">First link in dropdown</a></li>&#xD;&#xA;              <li class=""active""><a href=""#"">Active link in dropdown</a></li>&#xD;&#xA;            </ul>&#xD;&#xA;          </li>&#xD;&#xA;        </ul>&#xD;&#xA;        <!-- Left Nav Section -->&#xD;&#xA;        <ul class=""left"">&#xD;&#xA;          <li><a href=""#"">Left Nav Button</a></li>&#xD;&#xA;        </ul>&#xD;&#xA;      </section>&#xD;&#xA;    </nav>"
-6420570794861275689,26,6,           .black_overlay{&#xD;&#xA;        display: none;&#xD;&#xA;        position: absolute;&#xD;&#xA;        top: 0%;&#xD;&#xA;        left: 0%;&#xD;&#xA;        width: 100%;&#xD;&#xA;        height: 100%;&#xD;&#xA;        background-color: black;&#xD;&#xA;        z-index:1001;&#xD;&#xA;        -moz-opacity: 0.8;&#xD;&#xA;        opacity:.80;&#xD;&#xA;        filter: alpha(opacity=80);&#xD;&#xA;    }&#xD;&#xA;    .white_content {&#xD;&#xA;        display: none;&#xD;&#xA;        position: absolute;&#xD;&#xA;        top: 25%;&#xD;&#xA;        left: 25%;&#xD;&#xA;        width: 50%;&#xD;&#xA;        height: 50%;&#xD;&#xA;        padding: 16px;&#xD;&#xA;        border: 16px solid orange;&#xD;&#xA;        background-color: white;&#xD;&#xA;        z-index:1002;&#xD;&#xA;        overflow: auto;&#xD;&#xA;    }
1427251776819570189,27,6,"	<?xml version=""1.0"" encoding=""UTF-8"" standalone=""yes""?>&#xD;&#xA;	<assembly xmlns=""urn:schemas-microsoft-com:asm.v1"" manifestVersion=""1.0"" xmlns:asmv3=""urn:schemas-microsoft-com:asm.v3"">&#xD;&#xA;	<dependency>&#xD;&#xA;	  <dependentAssembly>&#xD;&#xA;		<assemblyIdentity type=""win32"" name=""Microsoft.Windows.Common-Controls"" version=""6.0.0.0"" processorArchitecture=""*"" publicKeyToken=""6595b64144ccf1df"" language=""*"">&#xD;&#xA;		</assemblyIdentity>&#xD;&#xA;	  </dependentAssembly>&#xD;&#xA;	</dependency>&#xD;&#xA;	<dependency>&#xD;&#xA;	  <dependentAssembly>&#xD;&#xA;		<assemblyIdentity type=""win32"" name=""Microsoft.VC90.CRT"" version=""9.0.21022.8"" processorArchitecture=""amd64"" publicKeyToken=""1fc8b3b9a1e18e3b"">&#xD;&#xA;		</assemblyIdentity>&#xD;&#xA;	  </dependentAssembly>&#xD;&#xA;	</dependency>&#xD;&#xA;	<trustInfo xmlns=""urn:schemas-microsoft-com:asm.v3"">&#xD;&#xA;	  <security>&#xD;&#xA;		<requestedPrivileges>&#xD;&#xA;		  <requestedExecutionLevel level=""asInvoker"" uiAccess=""false""/>&#xD;&#xA;		</requestedPrivileges>&#xD;&#xA;	  </security>&#xD;&#xA;	</trustInfo>&#xD;&#xA;	<asmv3:application>&#xD;&#xA;	  <asmv3:windowsSettings xmlns=""http://schemas.microsoft.com/SMI/2005/WindowsSettings"">&#xD;&#xA;		<ms_windowsSettings:dpiAware xmlns:ms_windowsSettings=""http://schemas.microsoft.com/SMI/2005/WindowsSettings"">false</ms_windowsSettings:dpiAware>&#xD;&#xA;	  </asmv3:windowsSettings>&#xD;&#xA;	</asmv3:application>&#xD;&#xA;	</assembly>"
8233748811501017858,27,6,"    CREATE OR REPLACE FUNCTION split_String(&#xD;&#xA;      i_str    IN  VARCHAR2,&#xD;&#xA;      i_delim  IN  VARCHAR2 DEFAULT ','&#xD;&#xA;    ) RETURN SYS.ODCIVARCHAR2LIST DETERMINISTIC&#xD;&#xA;    AS&#xD;&#xA;      p_result       SYS.ODCIVARCHAR2LIST := SYS.ODCIVARCHAR2LIST();&#xD;&#xA;      p_start        NUMBER(5) := 1;&#xD;&#xA;      p_end          NUMBER(5);&#xD;&#xA;      c_len CONSTANT NUMBER(5) := LENGTH( i_str );&#xD;&#xA;      c_ld  CONSTANT NUMBER(5) := LENGTH( i_delim );&#xD;&#xA;    BEGIN&#xD;&#xA;      IF c_len > 0 THEN&#xD;&#xA;        p_end := INSTR( i_str, i_delim, p_start );&#xD;&#xA;        WHILE p_end > 0 LOOP&#xD;&#xA;          p_result.EXTEND;&#xD;&#xA;          p_result( p_result.COUNT ) := SUBSTR( i_str, p_start, p_end - p_start );&#xD;&#xA;          p_start := p_end + c_ld;&#xD;&#xA;          p_end := INSTR( i_str, i_delim, p_start );&#xD;&#xA;        END LOOP;&#xD;&#xA;        IF p_start <= c_len + 1 THEN&#xD;&#xA;          p_result.EXTEND;&#xD;&#xA;          p_result( p_result.COUNT ) := SUBSTR( i_str, p_start, c_len - p_start + 1 );&#xD;&#xA;        END IF;&#xD;&#xA;      END IF;&#xD;&#xA;      RETURN p_result;&#xD;&#xA;    END;&#xD;&#xA;    /"
-829113233595852810,27,6,"	<?php namespace App;&#xD;&#xA;	use Illuminate\Auth\Authenticatable;&#xD;&#xA;	use Illuminate\Database\Eloquent\Model;&#xD;&#xA;	use Illuminate\Auth\Passwords\CanResetPassword;&#xD;&#xA;	use Illuminate\Contracts\Auth\Authenticatable as AuthenticatableContract;&#xD;&#xA;	use Illuminate\Contracts\Auth\CanResetPassword as CanResetPasswordContract;&#xD;&#xA;	class User extends Model implements AuthenticatableContract, CanResetPasswordContract {&#xD;&#xA;		use Authenticatable, CanResetPassword;&#xD;&#xA;		/**&#xD;&#xA;		 * The database table used by the model.&#xD;&#xA;		 *&#xD;&#xA;		 * @var string&#xD;&#xA;		 */&#xD;&#xA;		protected $table = 'users';&#xD;&#xA;		/**&#xD;&#xA;		 * The attributes that are mass assignable.&#xD;&#xA;		 *&#xD;&#xA;		 * @var array&#xD;&#xA;		 */&#xD;&#xA;		protected $fillable = ['name', 'email', 'password'];&#xD;&#xA;		/**&#xD;&#xA;		 * The attributes excluded from the model's JSON form.&#xD;&#xA;		 *&#xD;&#xA;		 * @var array&#xD;&#xA;		 */&#xD;&#xA;		protected $hidden = ['password', 'remember_token'];&#xD;&#xA;	}"
8191950772501091725,28,6,"    Sub DumpData()&#xD;&#xA;    &#xD;&#xA;    Set IE = CreateObject(""InternetExplorer.Application"")&#xD;&#xA;    IE.Visible = True&#xD;&#xA;    &#xD;&#xA;    URL = ""http://finance.yahoo.com/q?s=sbux&ql=1""&#xD;&#xA;    &#xD;&#xA;    'Wait for site to fully load&#xD;&#xA;    IE.Navigate2 URL&#xD;&#xA;    Do While IE.Busy = True&#xD;&#xA;       DoEvents&#xD;&#xA;    Loop&#xD;&#xA;    &#xD;&#xA;    RowCount = 1&#xD;&#xA;       &#xD;&#xA;    With Sheets(""Sheet1"")&#xD;&#xA;       .Cells.ClearContents&#xD;&#xA;       RowCount = 1&#xD;&#xA;       For Each itm In IE.document.all&#xD;&#xA;          .Range(""A"" & RowCount) = itm.tagname&#xD;&#xA;          .Range(""B"" & RowCount) = itm.ID&#xD;&#xA;          .Range(""C"" & RowCount) = itm.classname&#xD;&#xA;          .Range(""D"" & RowCount) = Left(itm.innertext, 1024)&#xD;&#xA;    &#xD;&#xA;          RowCount = RowCount + 1&#xD;&#xA;       Next itm&#xD;&#xA;    End With&#xD;&#xA;    End Sub"
-8905432928692542380,28,6,"        <RelativeLayout xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;        xmlns:tools=""http://schemas.android.com/tools""&#xD;&#xA;        android:layout_width=""match_parent""&#xD;&#xA;        android:layout_height=""match_parent""&#xD;&#xA;        tools:context="".MainActivity"" >&#xD;&#xA;     &#xD;&#xA;        <Spinner&#xD;&#xA;            android:id=""@+id/spr_place_type""&#xD;&#xA;            android:layout_width=""wrap_content""&#xD;&#xA;            android:layout_height=""60dp""&#xD;&#xA;            android:layout_alignParentTop=""true"" />&#xD;&#xA;     &#xD;&#xA;        <Button&#xD;&#xA;            android:id=""@+id/btn_find""&#xD;&#xA;            android:layout_width=""wrap_content""&#xD;&#xA;            android:layout_height=""60dp""&#xD;&#xA;            android:layout_alignParentTop=""true""&#xD;&#xA;            android:layout_toRightOf=""@id/spr_place_type""&#xD;&#xA;            android:text=""@string/str_btn_find"" />&#xD;&#xA;     &#xD;&#xA;        <fragment xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;            android:id=""@+id/map""&#xD;&#xA;            android:layout_width=""wrap_content""&#xD;&#xA;            android:layout_height=""wrap_content""&#xD;&#xA;            android:layout_below=""@id/spr_place_type""&#xD;&#xA;            class=""com.google.android.gms.maps.SupportMapFragment"" />&#xD;&#xA;     &#xD;&#xA;    </RelativeLayout>"
-2874741114768357648,28,6,"     public static class Printer implements Printable {&#xD;&#xA;    final Component comp;&#xD;&#xA;    public Printer(Component comp){&#xD;&#xA;        this.comp = comp;&#xD;&#xA;    }&#xD;&#xA;    @Override&#xD;&#xA;    public int print(Graphics g, PageFormat format, int page_index) &#xD;&#xA;            throws PrinterException {&#xD;&#xA;        if (page_index > 0) {&#xD;&#xA;            return Printable.NO_SUCH_PAGE;&#xD;&#xA;        }&#xD;&#xA;        // get the bounds of the component&#xD;&#xA;        Dimension dim = comp.getSize();&#xD;&#xA;        double cHeight = dim.getHeight();&#xD;&#xA;        double cWidth = dim.getWidth();&#xD;&#xA;        // get the bounds of the printable area&#xD;&#xA;        double pHeight = format.getImageableHeight();&#xD;&#xA;        double pWidth = format.getImageableWidth();&#xD;&#xA;        double pXStart = format.getImageableX();&#xD;&#xA;        double pYStart = format.getImageableY();&#xD;&#xA;        double xRatio = pWidth / cWidth;&#xD;&#xA;        double yRatio = pHeight / cHeight;&#xD;&#xA;        Graphics2D g2 = (Graphics2D) g;&#xD;&#xA;        g2.translate(pXStart, pYStart);&#xD;&#xA;        g2.scale(xRatio, yRatio);&#xD;&#xA;        comp.paint(g2);&#xD;&#xA;        return Printable.PAGE_EXISTS;&#xD;&#xA;    }"
-6965369180338499428,28,6,"    private void circularImageBar(ImageView iv2, int i) {&#xD;&#xA;		&#xD;&#xA;		&#xD;&#xA;		Bitmap b = Bitmap.createBitmap(300, 300,Bitmap.Config.ARGB_8888);&#xD;&#xA;		Canvas canvas = new Canvas(b); &#xD;&#xA;		Paint paint = new Paint();&#xD;&#xA;		&#xD;&#xA;			paint.setColor(Color.parseColor(""#c4c4c4""));&#xD;&#xA;			paint.setStrokeWidth(10);&#xD;&#xA;			paint.setStyle(Paint.Style.STROKE);&#xD;&#xA;			canvas.drawCircle(150, 150, 140, paint);&#xD;&#xA;			&#xD;&#xA;			paint.setColor(Color.parseColor(""#FFDB4C""));&#xD;&#xA;			paint.setStrokeWidth(10);	&#xD;&#xA;			paint.setStyle(Paint.Style.FILL);&#xD;&#xA;			final RectF oval = new RectF();&#xD;&#xA;			paint.setStyle(Paint.Style.STROKE);&#xD;&#xA;			oval.set(10,10,290,290);&#xD;&#xA;			&#xD;&#xA;			canvas.drawArc(oval, 270, ((i*360)/100), false, paint);&#xD;&#xA;			paint.setStrokeWidth(0);	&#xD;&#xA;			paint.setTextAlign(Align.CENTER);&#xD;&#xA;			paint.setColor(Color.parseColor(""#8E8E93"")); &#xD;&#xA;			paint.setTextSize(140);&#xD;&#xA;			&#xD;&#xA;			canvas.drawText(""""+i, 150, 150+(paint.getTextSize()/3), paint);	&#xD;&#xA;            iv2.setImageBitmap(b);&#xD;&#xA;    }"
1851257398938410938,28,6,"        var app = {&#xD;&#xA;    // Application Constructor&#xD;&#xA;    initialize: function() {&#xD;&#xA;        this.bindEvents();&#xD;&#xA;    },&#xD;&#xA;    // Bind Event Listeners&#xD;&#xA;    //&#xD;&#xA;    // Bind any events that are required on startup. Common events are:&#xD;&#xA;    // 'load', 'deviceready', 'offline', and 'online'.&#xD;&#xA;    bindEvents: function() {&#xD;&#xA;        document.addEventListener('deviceready', this.onDeviceReady, false);&#xD;&#xA;    },&#xD;&#xA;    // deviceready Event Handler&#xD;&#xA;    //&#xD;&#xA;    // The scope of 'this' is the event. In order to call the 'receivedEvent'&#xD;&#xA;    // function, we must explicity call 'app.receivedEvent(...);'&#xD;&#xA;    onDeviceReady: function() {&#xD;&#xA;        app.receivedEvent('deviceready');&#xD;&#xA;    },&#xD;&#xA;    // Update DOM on a Received Event&#xD;&#xA;    receivedEvent: function(id) {&#xD;&#xA;        var parentElement = document.getElementById(id);&#xD;&#xA;        var listeningElement = parentElement.querySelector('.listening');&#xD;&#xA;        var receivedElement = parentElement.querySelector('.received');&#xD;&#xA;        listeningElement.setAttribute('style', 'display:none;');&#xD;&#xA;        receivedElement.setAttribute('style', 'display:block;');&#xD;&#xA;        console.log('Received Event: ' + id);&#xD;&#xA;    }"
1350250307879608577,28,6,"    private void generateNotification(Context context, String message) {&#xD;&#xA;    int icon = R.drawable.ic_launcher;&#xD;&#xA;    long when = System.currentTimeMillis();&#xD;&#xA;    String appname = context.getResources().getString(R.string.app_name);&#xD;&#xA;    NotificationManager notificationManager = (NotificationManager) context&#xD;&#xA;        .getSystemService(Context.NOTIFICATION_SERVICE);&#xD;&#xA;    int currentapiVersion = android.os.Build.VERSION.SDK_INT;&#xD;&#xA;    Notification notification;&#xD;&#xA;    PendingIntent contentIntent = PendingIntent.getActivity(context, 0,&#xD;&#xA;        new Intent(context, myactivity.class), 0);&#xD;&#xA;    // To support 2.3 os, we use ""Notification"" class and 3.0+ os will use&#xD;&#xA;    // ""NotificationCompat.Builder"" class.&#xD;&#xA;    if (currentapiVersion < android.os.Build.VERSION_CODES.HONEYCOMB) {&#xD;&#xA;    notification = new Notification(icon, message, 0);&#xD;&#xA;    notification.setLatestEventInfo(context, appname, message,&#xD;&#xA;            contentIntent);&#xD;&#xA;    notification.flags = Notification.FLAG_AUTO_CANCEL;&#xD;&#xA;    notificationManager.notify(0, notification);&#xD;&#xA;    } else {&#xD;&#xA;    NotificationCompat.Builder builder = new NotificationCompat.Builder(&#xD;&#xA;            context);&#xD;&#xA;    notification = builder.setContentIntent(contentIntent)&#xD;&#xA;            .setSmallIcon(icon).setTicker(appname).setWhen(0)&#xD;&#xA;            .setAutoCancel(true).setContentTitle(appname)&#xD;&#xA;            .setContentText(message).build();&#xD;&#xA;    notificationManager.notify(0 , notification);&#xD;&#xA;    }&#xD;&#xA;    }"
3659541409241838865,28,6,"     <android.support.v4.app.FragmentTabHost&#xD;&#xA;    xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;    android:id=""@android:id/tabhost""&#xD;&#xA;    android:layout_width=""match_parent""&#xD;&#xA;    android:layout_height=""match_parent"">&#xD;&#xA;    <LinearLayout&#xD;&#xA;        android:orientation=""vertical""&#xD;&#xA;        android:layout_width=""match_parent""&#xD;&#xA;        android:layout_height=""match_parent"">&#xD;&#xA;        &#xD;&#xA;        <TabWidget&#xD;&#xA;            android:id=""@android:id/tabs""&#xD;&#xA;            android:orientation=""horizontal""&#xD;&#xA;            android:layout_width=""match_parent""&#xD;&#xA;            android:layout_height=""wrap_content""&#xD;&#xA;            android:layout_weight=""0""/>&#xD;&#xA;        <FrameLayout&#xD;&#xA;            android:id=""@android:id/tabcontent""&#xD;&#xA;            android:layout_width=""0dp""&#xD;&#xA;            android:layout_height=""0dp""&#xD;&#xA;            android:layout_weight=""0""/>&#xD;&#xA;        <FrameLayout&#xD;&#xA;            android:id=""@+id/realtabcontent""&#xD;&#xA;            android:layout_width=""match_parent""&#xD;&#xA;            android:layout_height=""0dp""&#xD;&#xA;            android:layout_weight=""1""/>&#xD;&#xA;        &#xD;&#xA;    </LinearLayout>"
-6372083550668317880,28,6,"    <html>&#xD;&#xA;    <head>&#xD;&#xA;	<title>Your Website Title</title>&#xD;&#xA;    <!-- You can use Open Graph tags to customize link previews.&#xD;&#xA;    Learn more: https://developers.facebook.com/docs/sharing/webmasters -->&#xD;&#xA;	<meta property=""og:url""           content=""http://www.your-domain.com/your-page.html"" />&#xD;&#xA;	<meta property=""og:type""          content=""website"" />&#xD;&#xA;	<meta property=""og:title""         content=""Your Website Title"" />&#xD;&#xA;	<meta property=""og:description""   content=""Your description"" />&#xD;&#xA;	<meta property=""og:image""         content=""http://www.your-domain.com/path/image.jpg"" />&#xD;&#xA;    </head>&#xD;&#xA;    <body>&#xD;&#xA;	<!-- Load Facebook SDK for JavaScript -->&#xD;&#xA;	<div id=""fb-root""></div>&#xD;&#xA;	<script>(function(d, s, id) {&#xD;&#xA;	  var js, fjs = d.getElementsByTagName(s)[0];&#xD;&#xA;	  if (d.getElementById(id)) return;&#xD;&#xA;	  js = d.createElement(s); js.id = id;&#xD;&#xA;	  js.src = ""//connect.facebook.net/en_US/sdk.js#xfbml=1"";&#xD;&#xA;	  fjs.parentNode.insertBefore(js, fjs);&#xD;&#xA;	}(document, 'script', 'facebook-jssdk'));</script>&#xD;&#xA;	<!-- Your share button code -->&#xD;&#xA;	<div class=""fb-share-button"" &#xD;&#xA;		data-href=""http://www.your-domain.com/your-page.html"" &#xD;&#xA;		data-layout=""button_count"">&#xD;&#xA;	</div>&#xD;&#xA;    </body>&#xD;&#xA;    </html>"
-3022291363943991175,28,6,    .rslides {&#xD;&#xA;        position: relative;&#xD;&#xA;        list-style: none;&#xD;&#xA;        overflow: hidden;&#xD;&#xA;        width: 100%;&#xD;&#xA;        padding: 0;&#xD;&#xA;        margin: 0;&#xD;&#xA;    }&#xD;&#xA;    .rslides li {&#xD;&#xA;        -webkit-backface-visibility: hidden;&#xD;&#xA;        position: absolute;&#xD;&#xA;        display: none;&#xD;&#xA;        width: 100%;&#xD;&#xA;        left: 0;&#xD;&#xA;        top: 0;&#xD;&#xA;    }&#xD;&#xA;    .rslides li:first-child {&#xD;&#xA;        position: relative;&#xD;&#xA;        display: block;&#xD;&#xA;        float: left;&#xD;&#xA;    }&#xD;&#xA;    .rslides img {&#xD;&#xA;        display: block;&#xD;&#xA;        height: auto;&#xD;&#xA;        float: left;&#xD;&#xA;        width: 100%;&#xD;&#xA;        border: 0;&#xD;&#xA;    }
5365575774746093938,29,6,"     <html>&#xD;&#xA;          <head>&#xD;&#xA;            <script type=""text/javascript"" src=""https://www.google.com/jsapi""></script>&#xD;&#xA;            <script type=""text/javascript"">&#xD;&#xA;              google.load(""visualization"", ""1"", {packages:[""corechart""]});&#xD;&#xA;              google.setOnLoadCallback(drawChart);&#xD;&#xA;              function drawChart() {&#xD;&#xA;                var data = google.visualization.arrayToDataTable([&#xD;&#xA;                  ['Task', 'Hours per Day'],&#xD;&#xA;                  ['Work',     11],&#xD;&#xA;                  ['Eat',      2],&#xD;&#xA;                  ['Commute',  2],&#xD;&#xA;                  ['Watch TV', 2],&#xD;&#xA;                  ['Sleep',    7]&#xD;&#xA;                ]);&#xD;&#xA;        &#xD;&#xA;                var options = {&#xD;&#xA;                  title: 'My Daily Activities'&#xD;&#xA;                };&#xD;&#xA;        &#xD;&#xA;                var chart = new google.visualization.PieChart(document.getElementById('chart_div'));&#xD;&#xA;                chart.draw(data, options);&#xD;&#xA;              }&#xD;&#xA;            </script>&#xD;&#xA;          </head>&#xD;&#xA;          <body>&#xD;&#xA;            <div id=""chart_div"" style=""width: 900px; height: 500px;""></div>&#xD;&#xA;          </body>&#xD;&#xA;        </html>"
8852175732964866462,29,6,"     $('ul.tabs').each(function () {&#xD;&#xA;            // For each set of tabs, we want to keep track of&#xD;&#xA;            // which tab is active and it's associated content&#xD;&#xA;            var $active, $content, $links = $(this).find('a');&#xD;&#xA;            // If the location.hash matches one of the links, use that as the active tab.&#xD;&#xA;            // If no match is found, use the first link as the initial active tab.&#xD;&#xA;            $active = $($links.filter('[href=""' + location.hash + '""]')[0] || $links[0]);&#xD;&#xA;            $active.addClass('active');&#xD;&#xA;            $content = $($active.attr('href'));&#xD;&#xA;            // Hide the remaining content&#xD;&#xA;            $links.not($active).each(function () {&#xD;&#xA;                $($(this).attr('href')).hide();&#xD;&#xA;            });&#xD;&#xA;            // Bind the click event handler&#xD;&#xA;            $(this).on('click', 'a', function (e) {&#xD;&#xA;                // Make the old tab inactive.&#xD;&#xA;                $active.removeClass('active');&#xD;&#xA;                $content.hide();&#xD;&#xA;                // Update the variables with the new link and content&#xD;&#xA;                $active = $(this);&#xD;&#xA;                $content = $($(this).attr('href'));&#xD;&#xA;                // Make the tab active.&#xD;&#xA;                $active.addClass('active');&#xD;&#xA;               &#xD;&#xA;                $content.show();&#xD;&#xA;                // Prevent the anchor's default click action&#xD;&#xA;                e.preventDefault();&#xD;&#xA;            });&#xD;&#xA;        });"
-6518812352261526122,29,6,"            <?xml version=""1.0"" encoding=""UTF-8""?>&#xD;&#xA;        <configuration>&#xD;&#xA;    &#xD;&#xA;        <system.webServer>&#xD;&#xA;    &#xD;&#xA;            <httpErrors errorMode=""Detailed"" />&#xD;&#xA;        <asp scriptErrorSentToBrowser=""true""/>&#xD;&#xA;    &#xD;&#xA;        <rewrite>&#xD;&#xA;        <rules>&#xD;&#xA;            <rule name=""RuleRemoveIndex"" stopProcessing=""true"">&#xD;&#xA;                <match url=""^(.*)$"" ignoreCase=""false"" />&#xD;&#xA;                <conditions>&#xD;&#xA;                         <add input=""{REQUEST_FILENAME}"" matchType=""IsFile"" ignoreCase=""false"" negate=""true"" />&#xD;&#xA;                    <add input=""{REQUEST_FILENAME}"" matchType=""IsDirectory"" ignoreCase=""false"" negate=""true"" />&#xD;&#xA;                </conditions>&#xD;&#xA;                <action type=""Rewrite"" url=""index.php/{R:1}"" appendQueryString=""true""/>&#xD;&#xA;            </rule>&#xD;&#xA;        </rules>&#xD;&#xA;        </rewrite>&#xD;&#xA;    &#xD;&#xA;    </system.webServer>&#xD;&#xA;    &#xD;&#xA;    <system.web>&#xD;&#xA;        <customErrors mode=""Off""/>&#xD;&#xA;        <compilation debug=""true""/>&#xD;&#xA;    </system.web>&#xD;&#xA;    &#xD;&#xA;    </configuration>"
-7459502751373155471,29,6,    Employee&#xD;&#xA;    1 John Smith&#xD;&#xA;    2 Alex Button&#xD;&#xA;    &#xD;&#xA;    Office&#xD;&#xA;    1 501&#xD;&#xA;    2 601&#xD;&#xA;    3 701&#xD;&#xA;    4 454&#xD;&#xA;    &#xD;&#xA;    JobTitle&#xD;&#xA;    1 Engineer&#xD;&#xA;    2 Senior Engineer&#xD;&#xA;    3 Manager&#xD;&#xA;    4 Senior Assistant&#xD;&#xA;    &#xD;&#xA;    Employee2Office&#xD;&#xA;    1 1&#xD;&#xA;    1 2&#xD;&#xA;    1 3&#xD;&#xA;    2 2&#xD;&#xA;    2 4&#xD;&#xA;    &#xD;&#xA;    Employee2JobTitle&#xD;&#xA;    1 1&#xD;&#xA;    1 2&#xD;&#xA;    1 3&#xD;&#xA;    2 4&#xD;&#xA;    2 3
-5743783628109005416,29,6,"    <nav class=""navbar navbar-toggleable-md navbar-light bg-faded"">&#xD;&#xA;        <button class=""navbar-toggler navbar-toggler-right"" type=""button"" data-toggle=""collapse"" data-target=""#navbarNavDropdown"" aria-controls=""navbarNavDropdown"" aria-expanded=""false"" aria-label=""Toggle navigation"">&#xD;&#xA;            <span class=""navbar-toggler-icon""></span>&#xD;&#xA;        </button>&#xD;&#xA;        <a class=""navbar-brand"" href=""#"">Navbar</a>&#xD;&#xA;        <div class=""collapse navbar-collapse"" id=""navbarNavDropdown"">&#xD;&#xA;            <ul class=""navbar-nav"">&#xD;&#xA;                <li class=""nav-item active"">&#xD;&#xA;                    <a class=""nav-link"" href=""#"">Home <span class=""sr-only"">(current)</span></a>&#xD;&#xA;                </li>&#xD;&#xA;                <li class=""nav-item"">&#xD;&#xA;                    <a class=""nav-link"" href=""#"">Features</a>&#xD;&#xA;                </li>&#xD;&#xA;                <li class=""nav-item"">&#xD;&#xA;                    <a class=""nav-link"" href=""#"">Pricing</a>&#xD;&#xA;                </li>&#xD;&#xA;                <li class=""nav-item dropdown"">&#xD;&#xA;                    <a class=""nav-link dropdown-toggle"" href=""http://example.com"" id=""navbarDropdownMenuLink"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">&#xD;&#xA;                        Dropdown link&#xD;&#xA;                    </a>&#xD;&#xA;                    <div class=""dropdown-menu"" aria-labelledby=""navbarDropdownMenuLink"">&#xD;&#xA;                        <a class=""dropdown-item"" href=""#"">Action</a>&#xD;&#xA;                        <a class=""dropdown-item"" href=""#"">Another action</a>&#xD;&#xA;                        <a class=""dropdown-item"" href=""#"">Something else here</a>&#xD;&#xA;                    </div>&#xD;&#xA;                </li>&#xD;&#xA;            </ul>&#xD;&#xA;        </div>&#xD;&#xA;    </nav>"
-487633953771802194,30,6,"            <intent-filter>&#xD;&#xA;                <action android:name=""android.intent.action.VIEW"" />&#xD;&#xA;                <category android:name=""android.intent.category.DEFAULT"" />&#xD;&#xA;                <data android:scheme=""file""/>&#xD;&#xA;                <data android:mimeType=""audio/*""/>&#xD;&#xA;                <data android:mimeType=""application/ogg""/>&#xD;&#xA;                <data android:mimeType=""application/x-ogg""/>&#xD;&#xA;                <data android:mimeType=""application/itunes""/>&#xD;&#xA;            </intent-filter>&#xD;&#xA;            <intent-filter>&#xD;&#xA;                <action android:name=""android.intent.action.VIEW"" />&#xD;&#xA;                <category android:name=""android.intent.category.DEFAULT"" />&#xD;&#xA;                <category android:name=""android.intent.category.BROWSABLE"" />&#xD;&#xA;                <data android:scheme=""http"" />&#xD;&#xA;                <data android:mimeType=""audio/*""/>&#xD;&#xA;                <data android:mimeType=""application/ogg""/>&#xD;&#xA;                <data android:mimeType=""application/x-ogg""/>&#xD;&#xA;                <data android:mimeType=""application/itunes""/>&#xD;&#xA;            </intent-filter>&#xD;&#xA;            <intent-filter&#xD;&#xA;                android:priority=""-1"">&#xD;&#xA;                <action android:name=""android.intent.action.VIEW"" />&#xD;&#xA;                <category android:name=""android.intent.category.DEFAULT"" />&#xD;&#xA;                <category android:name=""android.intent.category.BROWSABLE"" />&#xD;&#xA;                <data android:scheme=""content"" />&#xD;&#xA;                <data android:mimeType=""audio/*""/>&#xD;&#xA;                <data android:mimeType=""application/ogg""/>&#xD;&#xA;                <data android:mimeType=""application/x-ogg""/>&#xD;&#xA;                <data android:mimeType=""application/itunes""/>&#xD;&#xA;            </intent-filter>"
2039709304200908128,30,6,"        module.exports = function (config) {&#xD;&#xA;          config.set({&#xD;&#xA;            basePath: '',&#xD;&#xA;            frameworks: ['jasmine', '@angular/cli'],&#xD;&#xA;            plugins: [&#xD;&#xA;              require('karma-jasmine'),&#xD;&#xA;              require('karma-chrome-launcher'),&#xD;&#xA;              require('karma-jasmine-html-reporter'),&#xD;&#xA;              require('karma-coverage-istanbul-reporter'),&#xD;&#xA;              require('@angular/cli/plugins/karma')&#xD;&#xA;            ],&#xD;&#xA;            client:{&#xD;&#xA;              clearContext: false // leave Jasmine Spec Runner output visible in browser&#xD;&#xA;            },&#xD;&#xA;            coverageIstanbulReporter: {&#xD;&#xA;              reports: [ 'html', 'lcovonly' ],&#xD;&#xA;              fixWebpackSourcePaths: true&#xD;&#xA;            },&#xD;&#xA;            angularCli: {&#xD;&#xA;              environment: 'dev'&#xD;&#xA;            },&#xD;&#xA;            reporters: ['progress', 'kjhtml'],&#xD;&#xA;            port: 9876,&#xD;&#xA;            colors: true,&#xD;&#xA;            logLevel: config.LOG_INFO,&#xD;&#xA;            autoWatch: true,&#xD;&#xA;            browsers: ['Chrome'],&#xD;&#xA;            singleRun: false&#xD;&#xA;          });&#xD;&#xA;        };"
4593371915952167168,30,6,"    fieldset {&#xD;&#xA;      background: #FCFCFC;&#xD;&#xA;      padding: 16px;&#xD;&#xA;      border: 1px solid #D5D5D5;&#xD;&#xA;    }&#xD;&#xA;    .addfields {&#xD;&#xA;      margin: 10px 0;&#xD;&#xA;    }&#xD;&#xA;    #choicesDisplay {&#xD;&#xA;      padding: 10px;&#xD;&#xA;      background: rgb(227, 250, 227);&#xD;&#xA;      border: 1px solid rgb(171, 239, 171);&#xD;&#xA;      color: rgb(9, 56, 9);&#xD;&#xA;    }&#xD;&#xA;    .remove {&#xD;&#xA;      background: #C76868;&#xD;&#xA;      color: #FFF;&#xD;&#xA;      font-weight: bold;&#xD;&#xA;      font-size: 21px;&#xD;&#xA;      border: 0;&#xD;&#xA;      cursor: pointer;&#xD;&#xA;      display: inline-block;&#xD;&#xA;      padding: 4px 9px;&#xD;&#xA;      vertical-align: top;&#xD;&#xA;      line-height: 100%;   &#xD;&#xA;    }&#xD;&#xA;    input[type=""text""],&#xD;&#xA;    select {&#xD;&#xA;      padding: 5px;&#xD;&#xA;    }"
-1371849453416404263,30,6,"    /*&#xD;&#xA;     * Clearfix: contain floats&#xD;&#xA;     *&#xD;&#xA;     * For modern browsers&#xD;&#xA;     * 1. The space content is one way to avoid an Opera bug when the&#xD;&#xA;     *    `contenteditable` attribute is included anywhere else in the document.&#xD;&#xA;     *    Otherwise it causes space to appear at the top and bottom of elements&#xD;&#xA;     *    that receive the `clearfix` class.&#xD;&#xA;     * 2. The use of `table` rather than `block` is only necessary if using&#xD;&#xA;     *    `:before` to contain the top-margins of child elements.&#xD;&#xA;     */&#xD;&#xA;    &#xD;&#xA;    .clearfix:before,&#xD;&#xA;    .clearfix:after {&#xD;&#xA;        content: "" ""; /* 1 */&#xD;&#xA;        display: table; /* 2 */&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .clearfix:after {&#xD;&#xA;        clear: both;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    /*&#xD;&#xA;     * For IE 6/7 only&#xD;&#xA;     * Include this rule to trigger hasLayout and contain floats.&#xD;&#xA;     */&#xD;&#xA;    &#xD;&#xA;    .clearfix {&#xD;&#xA;        *zoom: 1;&#xD;&#xA;    }"
-5154293555401981576,30,6,"    <?php&#xD;&#xA;    $xmlstr = <<<XML&#xD;&#xA;    <?xml version='1.0' standalone='yes'?>&#xD;&#xA;    <movies>&#xD;&#xA;     <movie>&#xD;&#xA;      <title>PHP: Behind the Parser</title>&#xD;&#xA;      <characters>&#xD;&#xA;       <character>&#xD;&#xA;        <name>Ms. Coder</name>&#xD;&#xA;        <actor>Onlivia Actora</actor>&#xD;&#xA;       </character>&#xD;&#xA;       <character>&#xD;&#xA;        <name>Mr. Coder</name>&#xD;&#xA;        <actor>El Act&#211;r</actor>&#xD;&#xA;       </character>&#xD;&#xA;      </characters>&#xD;&#xA;      <plot>&#xD;&#xA;       So, this language. It's like, a programming language. Or is it a&#xD;&#xA;       scripting language? All is revealed in this thrilling horror spoof&#xD;&#xA;       of a documentary.&#xD;&#xA;      </plot>&#xD;&#xA;      <great-lines>&#xD;&#xA;       <line>PHP solves all my web problems</line>&#xD;&#xA;      </great-lines>&#xD;&#xA;      <rating type=""thumbs"">7</rating>&#xD;&#xA;      <rating type=""stars"">5</rating>&#xD;&#xA;     </movie>&#xD;&#xA;    </movies>&#xD;&#xA;    XML;&#xD;&#xA;    "
-1106593389650927535,30,6,               <plugin>&#xD;&#xA;    				<groupId>org.apache.maven.plugins</groupId>&#xD;&#xA;    				<artifactId>maven-shade-plugin</artifactId>&#xD;&#xA;    				<version>2.2</version>&#xD;&#xA;    				<executions>&#xD;&#xA;    					<execution>&#xD;&#xA;    						<phase>package</phase>&#xD;&#xA;    						<goals>&#xD;&#xA;    							<goal>shade</goal>&#xD;&#xA;    						</goals>&#xD;&#xA;    						<configuration>&#xD;&#xA;    							<createDependencyReducedPom>false</createDependencyReducedPom>&#xD;&#xA;    							<filters>&#xD;&#xA;    								<filter>&#xD;&#xA;    									<artifact>*:*</artifact>&#xD;&#xA;    									<excludes>&#xD;&#xA;    										<exclude>META-INF/*.SF</exclude>&#xD;&#xA;    										<exclude>META-INF/*.DSA</exclude>&#xD;&#xA;    										<exclude>META-INF/*.RSA</exclude>&#xD;&#xA;    										<exclude>.settings/**</exclude>&#xD;&#xA;    										<exclude>*.classpath</exclude>&#xD;&#xA;    										<exclude>*.project</exclude>&#xD;&#xA;    										<exclude>*.txt</exclude>&#xD;&#xA;    									</excludes>&#xD;&#xA;    								</filter>&#xD;&#xA;    							</filters>&#xD;&#xA;    						</configuration>&#xD;&#xA;    					</execution>&#xD;&#xA;    				</executions>&#xD;&#xA;    			</plugin>
2629021027277073628,31,6,"	<?php&#xD;&#xA;	 &#xD;&#xA;	// place this code inside a php file and call it f.e. ""download.php""&#xD;&#xA;	$path = $_SERVER['DOCUMENT_ROOT'].""/path2file/""; // change the path to fit your websites document structure&#xD;&#xA;	$fullPath = $path.$_GET['download_file'];&#xD;&#xA;	 &#xD;&#xA;	if ($fd = fopen ($fullPath, ""r"")) {&#xD;&#xA;		$fsize = filesize($fullPath);&#xD;&#xA;		$path_parts = pathinfo($fullPath);&#xD;&#xA;		$ext = strtolower($path_parts[""extension""]);&#xD;&#xA;		switch ($ext) {&#xD;&#xA;			case ""pdf"":&#xD;&#xA;			header(""Content-type: application/pdf""); // add here more headers for diff. extensions&#xD;&#xA;			header(""Content-Disposition: attachment; filename=\"""".$path_parts[""basename""].""\""""); // use 'attachment' to force a download&#xD;&#xA;			break;&#xD;&#xA;			default;&#xD;&#xA;			header(""Content-type: application/octet-stream"");&#xD;&#xA;			header(""Content-Disposition: filename=\"""".$path_parts[""basename""].""\"""");&#xD;&#xA;		}&#xD;&#xA;		header(""Content-length: $fsize"");&#xD;&#xA;		header(""Cache-control: private""); //use this to open files directly&#xD;&#xA;		while(!feof($fd)) {&#xD;&#xA;			$buffer = fread($fd, 2048);&#xD;&#xA;			echo $buffer;&#xD;&#xA;		}&#xD;&#xA;	}&#xD;&#xA;	fclose ($fd);&#xD;&#xA;	exit;&#xD;&#xA;	// example: place this kind of link into the document where the file download is offered:&#xD;&#xA;	// <a href=""download.php?download_file=some_file.pdf"">Download here</a>&#xD;&#xA;	?>"
1872428149451979175,31,6,"    <?php&#xD;&#xA;    $descriptorspec = array(&#xD;&#xA;       0 => array(""pipe"", ""r""),  // stdin is a pipe that the child will read from&#xD;&#xA;       1 => array(""pipe"", ""w""),  // stdout is a pipe that the child will write to&#xD;&#xA;       2 => array(""file"", ""/tmp/error-output.txt"", ""a"") // stderr is a file to write to&#xD;&#xA;    );&#xD;&#xA;    &#xD;&#xA;    $cwd = '/tmp';&#xD;&#xA;    $env = array('some_option' => 'aeiou');&#xD;&#xA;    &#xD;&#xA;    $process = proc_open('php', $descriptorspec, $pipes, $cwd, $env);&#xD;&#xA;    &#xD;&#xA;    if (is_resource($process)) {&#xD;&#xA;        // $pipes now looks like this:&#xD;&#xA;        // 0 => writeable handle connected to child stdin&#xD;&#xA;        // 1 => readable handle connected to child stdout&#xD;&#xA;        // Any error output will be appended to /tmp/error-output.txt&#xD;&#xA;    &#xD;&#xA;        fwrite($pipes[0], '<?php print_r($_ENV); ?>');&#xD;&#xA;        fclose($pipes[0]);&#xD;&#xA;    &#xD;&#xA;        echo stream_get_contents($pipes[1]);&#xD;&#xA;        fclose($pipes[1]);&#xD;&#xA;    &#xD;&#xA;        // It is important that you close any pipes before calling&#xD;&#xA;        // proc_close in order to avoid a deadlock&#xD;&#xA;        $return_value = proc_close($process);&#xD;&#xA;    &#xD;&#xA;        echo ""command returned $return_value\n"";&#xD;&#xA;    }&#xD;&#xA;    ?>"
4569389601242930879,31,6,"    <nav class=""navbar navbar-inverse"">&#xD;&#xA;        <div class=""container-fluid"">&#xD;&#xA;            <div class=""navbar-header"">&#xD;&#xA;                <button type=""button"" class=""navbar-toggle"" data-toggle=""collapse"" data-target=""#myNavbar"">&#xD;&#xA;                    <span class=""icon-bar""></span>&#xD;&#xA;                    <span class=""icon-bar""></span>&#xD;&#xA;                    <span class=""icon-bar""></span>&#xD;&#xA;                </button>&#xD;&#xA;                <a class=""navbar-brand"" href=""#"">WebSiteName</a>&#xD;&#xA;            </div>&#xD;&#xA;            <div class=""collapse navbar-collapse"" id=""myNavbar"">&#xD;&#xA;                <ul class=""nav navbar-nav"">&#xD;&#xA;                    <li class=""active""><a href=""#"">Home</a></li>&#xD;&#xA;                    <li class=""dropdown"">&#xD;&#xA;                        <a class=""dropdown-toggle"" data-toggle=""dropdown"" href=""#"">Page 1 <span class=""caret""></span></a>&#xD;&#xA;                        <ul class=""dropdown-menu"">&#xD;&#xA;                            <li><a href=""#"">Page 1-1</a></li>&#xD;&#xA;                            <li><a href=""#"">Page 1-2</a></li>&#xD;&#xA;                            <li><a href=""#"">Page 1-3</a></li>&#xD;&#xA;                        </ul>&#xD;&#xA;                    </li>&#xD;&#xA;                    <li><a href=""#"">Page 2</a></li>&#xD;&#xA;                    <li><a href=""#"">Page 3</a></li>&#xD;&#xA;                </ul>&#xD;&#xA;                <ul class=""nav navbar-nav navbar-right"">&#xD;&#xA;                    <li><a href=""#""><span class=""glyphicon glyphicon-user""></span> Sign Up</a></li>&#xD;&#xA;                    <li><a href=""#""><span class=""glyphicon glyphicon-log-in""></span> Login</a></li>&#xD;&#xA;                </ul>&#xD;&#xA;            </div>&#xD;&#xA;        </div>&#xD;&#xA;    </nav>"
1008521643157527875,31,6,"    CREATE  PROCEDURE [dbo].[usp_PageResults_NAI] &#xD;&#xA;    (&#xD;&#xA;        @startRowIndex int,&#xD;&#xA;        @maximumRows int&#xD;&#xA;    )&#xD;&#xA;    AS&#xD;&#xA;    &#xD;&#xA;    DECLARE @first_id int, @startRow int&#xD;&#xA;    	&#xD;&#xA;    -- A check can be added to make sure @startRowIndex isn't > count(1)&#xD;&#xA;    -- from employees before doing any actual work unless it is guaranteed&#xD;&#xA;    -- the caller won't do that&#xD;&#xA;    &#xD;&#xA;    -- Get the first employeeID for our page of records&#xD;&#xA;    SET ROWCOUNT @startRowIndex&#xD;&#xA;    SELECT @first_id = employeeID FROM employees ORDER BY employeeid&#xD;&#xA;    &#xD;&#xA;    -- Now, set the row count to MaximumRows and get&#xD;&#xA;    -- all records >= @first_id&#xD;&#xA;    SET ROWCOUNT @maximumRows&#xD;&#xA;    &#xD;&#xA;    SELECT e.*, d.name as DepartmentName &#xD;&#xA;    FROM employees e&#xD;&#xA;       INNER JOIN Departments D ON&#xD;&#xA;           e.DepartmentID = d.DepartmentID&#xD;&#xA;    WHERE employeeid >= @first_id&#xD;&#xA;    ORDER BY e.EmployeeID&#xD;&#xA;    &#xD;&#xA;    SET ROWCOUNT 0&#xD;&#xA;    &#xD;&#xA;    GO "
7927837087022961314,31,6,"        <?xml version=""1.0"" encoding=""UTF-8""?>&#xD;&#xA;        <bookstore>&#xD;&#xA;        <book category=""COOKING"">&#xD;&#xA;          <title lang=""en"">Everyday Italian</title>&#xD;&#xA;          <author>Giada De Laurentiis</author>&#xD;&#xA;          <year>2005</year>&#xD;&#xA;          <price>30.00</price>&#xD;&#xA;        </book>&#xD;&#xA;        <book category=""CHILDREN"">&#xD;&#xA;         <title lang=""en"">Harry Potter</title>&#xD;&#xA;         <author>J K. Rowling</author>&#xD;&#xA;         <year>2005</year>&#xD;&#xA;         <price>29.99</price>&#xD;&#xA;        </book>&#xD;&#xA;        <book category=""WEB"">&#xD;&#xA;          <title lang=""en"">XQuery Kick Start</title>&#xD;&#xA;          <author>James McGovern</author>&#xD;&#xA;          <author>Per Bothner</author>&#xD;&#xA;          <author>Kurt Cagle</author>&#xD;&#xA;          <author>James Linn</author>&#xD;&#xA;          <author>Vaidyanathan Nagarajan</author>&#xD;&#xA;          <year>2003</year>&#xD;&#xA;          <price>49.99</price>&#xD;&#xA;        </book>&#xD;&#xA;    <book category=""WEB"">&#xD;&#xA;       <title lang=""en"">Learning XML</title>&#xD;&#xA;       <author>Erik T. Ray</author>&#xD;&#xA;       <year>2003</year>&#xD;&#xA;       <price>39.95</price>&#xD;&#xA;    </book>&#xD;&#xA;    </bookstore> "
-4812687113871470868,31,6,"        private enum Strategy {&#xD;&#xA;        /**&#xD;&#xA;         * Bytecode generator, calling into {@link java.lang.StringBuilder}.&#xD;&#xA;         */&#xD;&#xA;        BC_SB,&#xD;&#xA;        /**&#xD;&#xA;         * Bytecode generator, calling into {@link java.lang.StringBuilder};&#xD;&#xA;         * but trying to estimate the required storage.&#xD;&#xA;         */&#xD;&#xA;        BC_SB_SIZED,&#xD;&#xA;        /**&#xD;&#xA;         * Bytecode generator, calling into {@link java.lang.StringBuilder};&#xD;&#xA;         * but computing the required storage exactly.&#xD;&#xA;         */&#xD;&#xA;        BC_SB_SIZED_EXACT,&#xD;&#xA;        /**&#xD;&#xA;         * MethodHandle-based generator, that in the end calls into {@link java.lang.StringBuilder}.&#xD;&#xA;         * This strategy also tries to estimate the required storage.&#xD;&#xA;         */&#xD;&#xA;        MH_SB_SIZED,&#xD;&#xA;        /**&#xD;&#xA;         * MethodHandle-based generator, that in the end calls into {@link java.lang.StringBuilder}.&#xD;&#xA;         * This strategy also estimate the required storage exactly.&#xD;&#xA;         */&#xD;&#xA;        MH_SB_SIZED_EXACT,&#xD;&#xA;        /**&#xD;&#xA;         * MethodHandle-based generator, that constructs its own byte[] array from&#xD;&#xA;         * the arguments. It computes the required storage exactly.&#xD;&#xA;         */&#xD;&#xA;        MH_INLINE_SIZED_EXACT&#xD;&#xA;    }"
1489435304297791714,31,6,"        public class SplashScreen extends Activity {&#xD;&#xA;     &#xD;&#xA;        // Splash screen timer&#xD;&#xA;        private static int SPLASH_TIME_OUT = 3000;&#xD;&#xA;     &#xD;&#xA;        @Override&#xD;&#xA;        protected void onCreate(Bundle savedInstanceState) {&#xD;&#xA;            super.onCreate(savedInstanceState);&#xD;&#xA;            setContentView(R.layout.activity_splash);&#xD;&#xA;     &#xD;&#xA;            new Handler().postDelayed(new Runnable() {&#xD;&#xA;     &#xD;&#xA;                /*&#xD;&#xA;                 * Showing splash screen with a timer. This will be useful when you&#xD;&#xA;                 * want to show case your app logo / company&#xD;&#xA;                 */&#xD;&#xA;     &#xD;&#xA;                @Override&#xD;&#xA;                public void run() {&#xD;&#xA;                    // This method will be executed once the timer is over&#xD;&#xA;                    // Start your app main activity&#xD;&#xA;                    Intent i = new Intent(SplashScreen.this, MainActivity.class);&#xD;&#xA;                    startActivity(i);&#xD;&#xA;     &#xD;&#xA;                    // close this activity&#xD;&#xA;                    finish();&#xD;&#xA;                }&#xD;&#xA;            }, SPLASH_TIME_OUT);&#xD;&#xA;        }&#xD;&#xA;     &#xD;&#xA;    }"
605755867590594438,31,6,"     <?xml version=""1.0"" encoding=""utf-8""?>&#xD;&#xA;        <LinearLayout &#xD;&#xA;            xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;            android:orientation=""horizontal"" &#xD;&#xA;            android:layout_width=""fill_parent""&#xD;&#xA;            android:layout_height=""fill_parent""&#xD;&#xA;            android:padding=""10dp"">&#xD;&#xA;            &#xD;&#xA;             <ImageView android:id=""@+id/imgIcon""&#xD;&#xA;                android:layout_width=""wrap_content""&#xD;&#xA;                android:layout_height=""fill_parent""&#xD;&#xA;                android:gravity=""center_vertical""&#xD;&#xA;                android:layout_alignParentTop=""true""&#xD;&#xA;                android:layout_alignParentBottom=""true""&#xD;&#xA;                android:layout_marginRight=""15dp""&#xD;&#xA;                android:layout_marginTop=""5dp""&#xD;&#xA;                android:layout_marginBottom=""5dp"" />&#xD;&#xA;                &#xD;&#xA;             <TextView android:id=""@+id/txtTitle""&#xD;&#xA;                android:layout_width=""fill_parent""&#xD;&#xA;                android:layout_height=""fill_parent""&#xD;&#xA;                android:gravity=""center_vertical""&#xD;&#xA;                android:layout_alignParentTop=""true""&#xD;&#xA;                android:layout_alignParentBottom=""true""&#xD;&#xA;                android:textStyle=""bold""&#xD;&#xA;                android:textSize=""22dp""&#xD;&#xA;                android:textColor=""#000000""&#xD;&#xA;                android:layout_marginTop=""5dp""&#xD;&#xA;                android:layout_marginBottom=""5dp"" />&#xD;&#xA;                &#xD;&#xA;        </LinearLayout>"
4046408556618258622,31,6,"    #include <beast/websocket.hpp>&#xD;&#xA;    #include <beast/buffers_debug.hpp>&#xD;&#xA;    #include <boost/asio.hpp>&#xD;&#xA;    #include <iostream>&#xD;&#xA;    #include <string>&#xD;&#xA;    &#xD;&#xA;    int main()&#xD;&#xA;    {&#xD;&#xA;        // Normal boost::asio setup&#xD;&#xA;        std::string const host = ""echo.websocket.org"";&#xD;&#xA;        boost::asio::io_service ios;&#xD;&#xA;        boost::asio::ip::tcp::resolver r(ios);&#xD;&#xA;        boost::asio::ip::tcp::socket sock(ios);&#xD;&#xA;        boost::asio::connect(sock,&#xD;&#xA;            r.resolve(boost::asio::ip::tcp::resolver::query{host, ""80""}));&#xD;&#xA;    &#xD;&#xA;        using namespace beast::websocket;&#xD;&#xA;    &#xD;&#xA;        // WebSocket connect and send message using beast&#xD;&#xA;        stream<boost::asio::ip::tcp::socket&> ws(sock);&#xD;&#xA;        ws.handshake(host, ""/"");&#xD;&#xA;        ws.write(boost::asio::buffer(""Hello, world!""));&#xD;&#xA;    &#xD;&#xA;        // Receive WebSocket message, print and close using beast&#xD;&#xA;        beast::streambuf sb;&#xD;&#xA;        opcode op;&#xD;&#xA;        ws.read(op, sb);&#xD;&#xA;        ws.close(close_code::normal);&#xD;&#xA;        std::cout <<&#xD;&#xA;            beast::debug::buffers_to_string(sb.data()) << ""\n"";&#xD;&#xA;    }"
2205885540475579327,31,6,"    $("".js-data-example-ajax"").select2({&#xD;&#xA;      ajax: {&#xD;&#xA;        url: ""https://api.github.com/search/repositories"",&#xD;&#xA;        dataType: 'json',&#xD;&#xA;        delay: 250,&#xD;&#xA;        data: function (params) {&#xD;&#xA;          return {&#xD;&#xA;            q: params.term, // search term&#xD;&#xA;            page: params.page&#xD;&#xA;          };&#xD;&#xA;        },&#xD;&#xA;        processResults: function (data, params) {&#xD;&#xA;          // parse the results into the format expected by Select2&#xD;&#xA;          // since we are using custom formatting functions we do not need to&#xD;&#xA;          // alter the remote JSON data, except to indicate that infinite&#xD;&#xA;          // scrolling can be used&#xD;&#xA;          params.page = params.page || 1;&#xD;&#xA;          return {&#xD;&#xA;            results: data.items,&#xD;&#xA;            pagination: {&#xD;&#xA;              more: (params.page * 30) < data.total_count&#xD;&#xA;            }&#xD;&#xA;          };&#xD;&#xA;        },&#xD;&#xA;        cache: true&#xD;&#xA;      },&#xD;&#xA;      escapeMarkup: function (markup) { return markup; }, // let our custom formatter work&#xD;&#xA;      minimumInputLength: 1,&#xD;&#xA;      templateResult: formatRepo, // omitted for brevity, see the source of this page&#xD;&#xA;      templateSelection: formatRepoSelection // omitted for brevity, see the source of this page&#xD;&#xA;    });"
-4966531389409993850,31,6,"        <?xml version=""1.0""?>&#xD;&#xA;    <!DOCTYPE facelet-taglib PUBLIC&#xD;&#xA;      ""-//Sun Microsystems, Inc.//DTD Facelet Taglib 1.0//EN""&#xD;&#xA;      ""http://java.sun.com/dtd/facelet-taglib_1_0.dtd"">&#xD;&#xA;    <facelet-taglib>&#xD;&#xA;    	<namespace>http://www.springframework.org/security/tags</namespace>&#xD;&#xA;    	<tag>&#xD;&#xA;    		<tag-name>authorize</tag-name>&#xD;&#xA;    		<handler-class>org.springframework.faces.security.FaceletsAuthorizeTagHandler</handler-class>&#xD;&#xA;    	</tag>&#xD;&#xA;    	<function>&#xD;&#xA;    		<function-name>areAllGranted</function-name>&#xD;&#xA;    		<function-class>org.springframework.faces.security.FaceletsAuthorizeTagUtils</function-class>&#xD;&#xA;    		<function-signature>boolean areAllGranted(java.lang.String)</function-signature>&#xD;&#xA;    	</function>&#xD;&#xA;    	<function>&#xD;&#xA;    		<function-name>areAnyGranted</function-name>&#xD;&#xA;    		<function-class>org.springframework.faces.security.FaceletsAuthorizeTagUtils</function-class>&#xD;&#xA;    		<function-signature>boolean areAnyGranted(java.lang.String)</function-signature>&#xD;&#xA;    	</function>&#xD;&#xA;    	<function>&#xD;&#xA;    		<function-name>areNotGranted</function-name>&#xD;&#xA;    		<function-class>org.springframework.faces.security.FaceletsAuthorizeTagUtils</function-class>&#xD;&#xA;    		<function-signature>boolean areNotGranted(java.lang.String)</function-signature>&#xD;&#xA;    	</function>&#xD;&#xA;    	<function>&#xD;&#xA;    		<function-name>isAllowed</function-name>&#xD;&#xA;    		<function-class>org.springframework.faces.security.FaceletsAuthorizeTagUtils</function-class>&#xD;&#xA;    		<function-signature>boolean isAllowed(java.lang.String, java.lang.String)</function-signature>&#xD;&#xA;    	</function>&#xD;&#xA;    </facelet-taglib>"
-3246318112009415799,32,6,"    {&#xD;&#xA;      ""main_object"": {&#xD;&#xA;        ""id"": ""5"",&#xD;&#xA;        ""getExerciseTitle"": ""TestFor"",&#xD;&#xA;        ""language"": ""nl_NL"",&#xD;&#xA;        ""application"": ""lettergrepen"",&#xD;&#xA;        ""main_object"": {&#xD;&#xA;          ""title"": ""TestFor"",&#xD;&#xA;          ""language"": ""nl_NL"",&#xD;&#xA;          ""exercises"": [{&#xD;&#xA;              ""word"": ""test"",&#xD;&#xA;              ""syllables"": [&#xD;&#xA;                ""test01"",&#xD;&#xA;                ""test02"",&#xD;&#xA;                ""test03"",&#xD;&#xA;                """"&#xD;&#xA;              ]&#xD;&#xA;            },&#xD;&#xA;            {&#xD;&#xA;              ""word"": ""tesst"",&#xD;&#xA;              ""syllables"": [&#xD;&#xA;                ""test11"",&#xD;&#xA;                ""test12"",&#xD;&#xA;                """",&#xD;&#xA;                """"&#xD;&#xA;              ]&#xD;&#xA;            }&#xD;&#xA;          ]&#xD;&#xA;        },&#xD;&#xA;        ""dataType"": ""json""&#xD;&#xA;      }&#xD;&#xA;    }"
5563126138473683008,32,6,"    <?php&#xD;&#xA;    function mail_attachment($filename, $path, $mailto, $from_mail, $from_name, $replyto, $subject, $message) {&#xD;&#xA;        $file = $path.$filename;&#xD;&#xA;        $file_size = filesize($file);&#xD;&#xA;        $handle = fopen($file, ""r"");&#xD;&#xA;        $content = fread($handle, $file_size);&#xD;&#xA;        fclose($handle);&#xD;&#xA;        $content = chunk_split(base64_encode($content));&#xD;&#xA;        $uid = md5(uniqid(time()));&#xD;&#xA;        $name = basename($file);&#xD;&#xA;        $header = ""From: "".$from_name."" <"".$from_mail."">\r\n"";&#xD;&#xA;        $header .= ""Reply-To: "".$replyto.""\r\n"";&#xD;&#xA;        $header .= ""MIME-Version: 1.0\r\n"";&#xD;&#xA;        $header .= ""Content-Type: multipart/mixed; boundary=\"""".$uid.""\""\r\n\r\n"";&#xD;&#xA;        $header .= ""This is a multi-part message in MIME format.\r\n"";&#xD;&#xA;        $header .= ""--"".$uid.""\r\n"";&#xD;&#xA;        $header .= ""Content-type:text/plain; charset=iso-8859-1\r\n"";&#xD;&#xA;        $header .= ""Content-Transfer-Encoding: 7bit\r\n\r\n"";&#xD;&#xA;        $header .= $message.""\r\n\r\n"";&#xD;&#xA;        $header .= ""--"".$uid.""\r\n"";&#xD;&#xA;        $header .= ""Content-Type: application/octet-stream; name=\"""".$filename.""\""\r\n""; // use different content types here&#xD;&#xA;        $header .= ""Content-Transfer-Encoding: base64\r\n"";&#xD;&#xA;        $header .= ""Content-Disposition: attachment; filename=\"""".$filename.""\""\r\n\r\n"";&#xD;&#xA;        $header .= $content.""\r\n\r\n"";&#xD;&#xA;        $header .= ""--"".$uid.""--"";&#xD;&#xA;        if (mail($mailto, $subject, """", $header)) {&#xD;&#xA;            echo ""mail send ... OK""; // or use booleans here&#xD;&#xA;        } else {&#xD;&#xA;            echo ""mail send ... ERROR!"";&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    ?>"
3850447979758014203,32,6,"       public class BundleConfig&#xD;&#xA;       {&#xD;&#xA;        // For more information on Bundling, visit http://go.microsoft.com/fwlink/?LinkId=254725&#xD;&#xA;        public static void RegisterBundles(BundleCollection bundles)&#xD;&#xA;        {&#xD;&#xA;            bundles.Add(new ScriptBundle(""~/bundles/jquery"").Include(&#xD;&#xA;                        ""~/Scripts/jquery-{version}.js""));&#xD;&#xA;            bundles.Add(new ScriptBundle(""~/bundles/jqueryui"").Include(&#xD;&#xA;                        ""~/Scripts/jquery-ui-{version}.js""));&#xD;&#xA;            bundles.Add(new ScriptBundle(""~/bundles/jqueryval"").Include(&#xD;&#xA;                        ""~/Scripts/jquery.unobtrusive*"",&#xD;&#xA;                        ""~/Scripts/jquery.validate*""));&#xD;&#xA;            // Use the development version of Modernizr to develop with and learn from. Then, when you're&#xD;&#xA;            // ready for production, use the build tool at http://modernizr.com to pick only the tests you need.&#xD;&#xA;            bundles.Add(new ScriptBundle(""~/bundles/modernizr"").Include(&#xD;&#xA;                        ""~/Scripts/modernizr-*""));&#xD;&#xA;            bundles.Add(new StyleBundle(""~/Content/css"").Include(""~/Content/site.css""));&#xD;&#xA;            bundles.Add(new StyleBundle(""~/Content/themes/base/css"").Include(&#xD;&#xA;                        ""~/Content/themes/base/jquery.ui.core.css"",&#xD;&#xA;                        ""~/Content/themes/base/jquery.ui.resizable.css"",&#xD;&#xA;                        ""~/Content/themes/base/jquery.ui.selectable.css"",&#xD;&#xA;                        ""~/Content/themes/base/jquery.ui.accordion.css"",&#xD;&#xA;                        ""~/Content/themes/base/jquery.ui.autocomplete.css"",&#xD;&#xA;                        ""~/Content/themes/base/jquery.ui.button.css"",&#xD;&#xA;                        ""~/Content/themes/base/jquery.ui.dialog.css"",&#xD;&#xA;                        ""~/Content/themes/base/jquery.ui.slider.css"",&#xD;&#xA;                        ""~/Content/themes/base/jquery.ui.tabs.css"",&#xD;&#xA;                        ""~/Content/themes/base/jquery.ui.datepicker.css"",&#xD;&#xA;                        ""~/Content/themes/base/jquery.ui.progressbar.css"",&#xD;&#xA;                        ""~/Content/themes/base/jquery.ui.theme.css""));&#xD;&#xA;        }&#xD;&#xA;    }"
-3183321918051084094,32,6,"    Sub Mail_small_Text_Outlook()&#xD;&#xA;    'For Tips see: http://www.rondebruin.nl/win/winmail/Outlook/tips.htm&#xD;&#xA;    'Working in Excel 2000-2016&#xD;&#xA;        Dim OutApp As Object&#xD;&#xA;        Dim OutMail As Object&#xD;&#xA;        Dim strbody As String&#xD;&#xA;    &#xD;&#xA;        Set OutApp = CreateObject(""Outlook.Application"")&#xD;&#xA;        Set OutMail = OutApp.CreateItem(0)&#xD;&#xA;    &#xD;&#xA;        strbody = ""Hi there"" & vbNewLine & vbNewLine & _&#xD;&#xA;                  ""Cell A1 is changed"" & vbNewLine & _&#xD;&#xA;                  ""This is line 2"" & vbNewLine & _&#xD;&#xA;                  ""This is line 3"" & vbNewLine & _&#xD;&#xA;                  ""This is line 4""&#xD;&#xA;    &#xD;&#xA;        On Error Resume Next&#xD;&#xA;        With OutMail&#xD;&#xA;            .To = ""ron@debruin.nl""&#xD;&#xA;            .CC = """"&#xD;&#xA;            .BCC = """"&#xD;&#xA;            .Subject = ""This is the Subject line""&#xD;&#xA;            .Body = strbody&#xD;&#xA;            'You can add a file like this&#xD;&#xA;            '.Attachments.Add (""C:\test.txt"")&#xD;&#xA;            .Display   'or use .Send&#xD;&#xA;        End With&#xD;&#xA;        On Error GoTo 0&#xD;&#xA;    &#xD;&#xA;        Set OutMail = Nothing&#xD;&#xA;        Set OutApp = Nothing&#xD;&#xA;    End Sub"
7045871458141450906,32,6,"        <?php&#xD;&#xA;     &#xD;&#xA;    // response json&#xD;&#xA;    $json = array();&#xD;&#xA;     &#xD;&#xA;    /**&#xD;&#xA;     * Registering a user device&#xD;&#xA;     * Store reg id in users table&#xD;&#xA;     */&#xD;&#xA;    if (isset($_POST[""name""]) && isset($_POST[""email""]) && isset($_POST[""regId""])) {&#xD;&#xA;        $name = $_POST[""name""];&#xD;&#xA;        $email = $_POST[""email""];&#xD;&#xA;        $gcm_regid = $_POST[""regId""]; // GCM Registration ID&#xD;&#xA;        // Store user details in db&#xD;&#xA;        include_once './db_functions.php';&#xD;&#xA;        include_once './GCM.php';&#xD;&#xA;     &#xD;&#xA;        $db = new DB_Functions();&#xD;&#xA;        $gcm = new GCM();&#xD;&#xA;     &#xD;&#xA;        $res = $db->storeUser($name, $email, $gcm_regid);&#xD;&#xA;     &#xD;&#xA;        $registatoin_ids = array($gcm_regid);&#xD;&#xA;        $message = array(""product"" => ""shirt"");&#xD;&#xA;     &#xD;&#xA;        $result = $gcm->send_notification($registatoin_ids, $message);&#xD;&#xA;     &#xD;&#xA;        echo $result;&#xD;&#xA;    } else {&#xD;&#xA;        // user details missing&#xD;&#xA;    }&#xD;&#xA;    ?>"
1175100714651007221,32,6,"    <!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">&#xD;&#xA;    <html xmlns=""http://www.w3.org/1999/xhtml"" xml:lang=""en"" lang=""en"">&#xD;&#xA;    <head>&#xD;&#xA;    	<script src=""http://ajax.googleapis.com/ajax/libs/jquery/1.4.1/jquery.js""></script>&#xD;&#xA;    	<script type=""text/javascript"" src=""http://ajax.googleapis.com/ajax/libs/jqueryui/1.7.2/jquery-ui.min.js""></script>&#xD;&#xA;    	<link rel=""stylesheet"" type=""text/css"" media=""screen"" href=""http://ajax.googleapis.com/ajax/libs/jqueryui/1.7.2/themes/base/jquery-ui.css"">&#xD;&#xA;    <script type=""text/javascript"">&#xD;&#xA;    $(function() {&#xD;&#xA;        $('.date-picker').datepicker( {&#xD;&#xA;    		changeMonth: true,&#xD;&#xA;    		changeYear: true,&#xD;&#xA;    		showButtonPanel: true,&#xD;&#xA;    		dateFormat: 'MM yy',&#xD;&#xA;    		onClose: function(dateText, inst) { &#xD;&#xA;    			var month = $(""#ui-datepicker-div .ui-datepicker-month :selected"").val();&#xD;&#xA;    			var year = $(""#ui-datepicker-div .ui-datepicker-year :selected"").val();&#xD;&#xA;    			$(this).datepicker('setDate', new Date(year, month, 1));&#xD;&#xA;    		}&#xD;&#xA;        });&#xD;&#xA;    });&#xD;&#xA;    </script>&#xD;&#xA;    <style>&#xD;&#xA;    .ui-datepicker-calendar {&#xD;&#xA;    	display: none;&#xD;&#xA;    	}&#xD;&#xA;    </style>&#xD;&#xA;    </head>&#xD;&#xA;    <body>&#xD;&#xA;    	<label for=""startDate"">Date :</label>&#xD;&#xA;    	<input name=""startDate"" id=""startDate"" class=""date-picker"" />&#xD;&#xA;    </body>&#xD;&#xA;    </html>"
4643999098128896890,33,6,"			<div id=""carousel-example-generic"" class=""carousel slide"" data-ride=""carousel"">&#xD;&#xA;			  <!-- Indicators -->&#xD;&#xA;			  <ol class=""carousel-indicators"">&#xD;&#xA;				<li data-target=""#carousel-example-generic"" data-slide-to=""0"" class=""active""></li>&#xD;&#xA;				<li data-target=""#carousel-example-generic"" data-slide-to=""1""></li>&#xD;&#xA;				<li data-target=""#carousel-example-generic"" data-slide-to=""2""></li>&#xD;&#xA;			  </ol>&#xD;&#xA;			  <!-- Wrapper for slides -->&#xD;&#xA;			  <div class=""carousel-inner"" role=""listbox"">&#xD;&#xA;				<div class=""item active"">&#xD;&#xA;				  <img src=""..."" alt=""..."">&#xD;&#xA;				  <div class=""carousel-caption"">&#xD;&#xA;					...&#xD;&#xA;				  </div>&#xD;&#xA;				</div>&#xD;&#xA;				<div class=""item"">&#xD;&#xA;				  <img src=""..."" alt=""..."">&#xD;&#xA;				  <div class=""carousel-caption"">&#xD;&#xA;					...&#xD;&#xA;				  </div>&#xD;&#xA;				</div>&#xD;&#xA;				...&#xD;&#xA;			  </div>&#xD;&#xA;			  <!-- Controls -->&#xD;&#xA;			  <a class=""left carousel-control"" href=""#carousel-example-generic"" role=""button"" data-slide=""prev"">&#xD;&#xA;				<span class=""glyphicon glyphicon-chevron-left"" aria-hidden=""true""></span>&#xD;&#xA;				<span class=""sr-only"">Previous</span>&#xD;&#xA;			  </a>&#xD;&#xA;			  <a class=""right carousel-control"" href=""#carousel-example-generic"" role=""button"" data-slide=""next"">&#xD;&#xA;				<span class=""glyphicon glyphicon-chevron-right"" aria-hidden=""true""></span>&#xD;&#xA;				<span class=""sr-only"">Next</span>&#xD;&#xA;			  </a>&#xD;&#xA;			</div>"
-7514942407135675973,33,6,"     function pasteHtmlAtCaret(html) {&#xD;&#xA;        var sel, range;&#xD;&#xA;        if (window.getSelection) {&#xD;&#xA;            // IE9 and non-IE&#xD;&#xA;            sel = window.getSelection();&#xD;&#xA;            if (sel.getRangeAt && sel.rangeCount) {&#xD;&#xA;                range = sel.getRangeAt(0);&#xD;&#xA;                range.deleteContents();&#xD;&#xA;    &#xD;&#xA;                // Range.createContextualFragment() would be useful here but is&#xD;&#xA;                // non-standard and not supported in all browsers (IE9, for one)&#xD;&#xA;                var el = document.createElement(""div"");&#xD;&#xA;                el.innerHTML = html;&#xD;&#xA;                var frag = document.createDocumentFragment(), node, lastNode;&#xD;&#xA;                while ( (node = el.firstChild) ) {&#xD;&#xA;                    lastNode = frag.appendChild(node);&#xD;&#xA;                }&#xD;&#xA;                range.insertNode(frag);&#xD;&#xA;                &#xD;&#xA;                // Preserve the selection&#xD;&#xA;                if (lastNode) {&#xD;&#xA;                    range = range.cloneRange();&#xD;&#xA;                    range.setStartAfter(lastNode);&#xD;&#xA;                    range.collapse(true);&#xD;&#xA;                    sel.removeAllRanges();&#xD;&#xA;                    sel.addRange(range);&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        } else if (document.selection && document.selection.type != ""Control"") {&#xD;&#xA;            // IE < 9&#xD;&#xA;            document.selection.createRange().pasteHTML(html);&#xD;&#xA;        }&#xD;&#xA;    }"
-924302019484094658,33,6,"    button.accordion {&#xD;&#xA;    	background-color: #eee;&#xD;&#xA;    	color: #444;&#xD;&#xA;    	cursor: pointer;&#xD;&#xA;    	padding: 18px;&#xD;&#xA;    	width: 100%;&#xD;&#xA;    	border: none;&#xD;&#xA;    	text-align: left;&#xD;&#xA;    	outline: none;&#xD;&#xA;    	font-size: 15px;&#xD;&#xA;    	transition: 0.4s;&#xD;&#xA;    }&#xD;&#xA;    button.accordion.active,&#xD;&#xA;    button.accordion:hover {&#xD;&#xA;    	background-color: #ddd;&#xD;&#xA;    }&#xD;&#xA;    button.accordion:after {&#xD;&#xA;    	content: '\002B';&#xD;&#xA;    	color: #777;&#xD;&#xA;    	font-weight: bold;&#xD;&#xA;    	float: right;&#xD;&#xA;    	margin-left: 5px;&#xD;&#xA;    }&#xD;&#xA;    button.accordion.active:after {&#xD;&#xA;    	content: ""\2212"";&#xD;&#xA;    }&#xD;&#xA;    div.panel {&#xD;&#xA;    	padding: 0 18px;&#xD;&#xA;    	background-color: white;&#xD;&#xA;    	max-height: 0;&#xD;&#xA;    	overflow: hidden;&#xD;&#xA;    	transition: max-height 0.2s ease-out;&#xD;&#xA;    }"
7342102130512535530,33,6,"    text.inner-circle {&#xD;&#xA;      font-weight: 400;&#xD;&#xA;      font-size: 12px;&#xD;&#xA;      text-transform: uppercase;&#xD;&#xA;    }&#xD;&#xA;    text.inner-text {&#xD;&#xA;      font-weight: 400;&#xD;&#xA;      font-size: 36px;&#xD;&#xA;      font-family: 'Metric Regular', 'Metric';&#xD;&#xA;      text-align: center;&#xD;&#xA;      font-style: normal;&#xD;&#xA;      text-transform: uppercase;&#xD;&#xA;    }&#xD;&#xA;    path {&#xD;&#xA;      stroke: steelblue;&#xD;&#xA;      stroke-width: 2;&#xD;&#xA;      fill: none;&#xD;&#xA;    }&#xD;&#xA;    .axis path,&#xD;&#xA;    .axis line {&#xD;&#xA;      fill: none;&#xD;&#xA;      stroke: grey;&#xD;&#xA;      stroke-width: 2;&#xD;&#xA;      shape-rendering: crispEdges;&#xD;&#xA;    }&#xD;&#xA;    .grid .tick {&#xD;&#xA;      stroke: lightgrey;&#xD;&#xA;      stroke-opacity: 0.7;&#xD;&#xA;      shape-rendering: crispEdges;&#xD;&#xA;    }&#xD;&#xA;    .grid path {&#xD;&#xA;      stroke-width: 0;&#xD;&#xA;    }"
-5346906713346630549,33,6,"     import android.os.Bundle;&#xD;&#xA;     import android.support.v4.app.FragmentActivity;&#xD;&#xA;     import com.google.android.gms.maps.CameraUpdateFactory;&#xD;&#xA;     import com.google.android.gms.maps.GoogleMap;&#xD;&#xA;     import com.google.android.gms.maps.OnMapReadyCallback;&#xD;&#xA;     import com.google.android.gms.maps.SupportMapFragment;&#xD;&#xA;     import com.google.android.gms.maps.model.LatLng;&#xD;&#xA;     import com.google.android.gms.maps.model.MarkerOptions;&#xD;&#xA;    &#xD;&#xA;     public class MapsActivity extends FragmentActivity implements OnMapReadyCallback {&#xD;&#xA;    &#xD;&#xA;        private GoogleMap mMap;&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        protected void onCreate(Bundle savedInstanceState) {&#xD;&#xA;            super.onCreate(savedInstanceState);&#xD;&#xA;            setContentView(R.layout.activity_maps);&#xD;&#xA;            SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager()&#xD;&#xA;                    .findFragmentById(R.id.map);&#xD;&#xA;            mapFragment.getMapAsync(this);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void onMapReady(GoogleMap googleMap) {&#xD;&#xA;            mMap = googleMap;&#xD;&#xA;    &#xD;&#xA;            // Add a marker in Sydney, Australia, and move the camera.&#xD;&#xA;            LatLng sydney = new LatLng(-34, 151);&#xD;&#xA;            mMap.addMarker(new MarkerOptions().position(sydney).title(""Marker in Sydney""));&#xD;&#xA;            mMap.moveCamera(CameraUpdateFactory.newLatLng(sydney));&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;        "
-4799520873217493861,33,6,"            // Create a request using a URL that can receive a post. &#xD;&#xA;            WebRequest request = WebRequest.Create (""http://www.contoso.com/PostAccepter.aspx "");&#xD;&#xA;            // Set the Method property of the request to POST.&#xD;&#xA;            request.Method = ""POST"";&#xD;&#xA;            // Create POST data and convert it to a byte array.&#xD;&#xA;            string postData = ""This is a test that posts this string to a Web server."";&#xD;&#xA;            byte[] byteArray = Encoding.UTF8.GetBytes (postData);&#xD;&#xA;            // Set the ContentType property of the WebRequest.&#xD;&#xA;            request.ContentType = ""application/x-www-form-urlencoded"";&#xD;&#xA;            // Set the ContentLength property of the WebRequest.&#xD;&#xA;            request.ContentLength = byteArray.Length;&#xD;&#xA;            // Get the request stream.&#xD;&#xA;            Stream dataStream = request.GetRequestStream ();&#xD;&#xA;            // Write the data to the request stream.&#xD;&#xA;            dataStream.Write (byteArray, 0, byteArray.Length);&#xD;&#xA;            // Close the Stream object.&#xD;&#xA;            dataStream.Close ();&#xD;&#xA;            // Get the response.&#xD;&#xA;            WebResponse response = request.GetResponse ();&#xD;&#xA;            // Display the status.&#xD;&#xA;            Console.WriteLine (((HttpWebResponse)response).StatusDescription);&#xD;&#xA;            // Get the stream containing content returned by the server.&#xD;&#xA;            dataStream = response.GetResponseStream ();&#xD;&#xA;            // Open the stream using a StreamReader for easy access.&#xD;&#xA;            StreamReader reader = new StreamReader (dataStream);&#xD;&#xA;            // Read the content.&#xD;&#xA;            string responseFromServer = reader.ReadToEnd ();&#xD;&#xA;            // Display the content.&#xD;&#xA;            Console.WriteLine (responseFromServer);&#xD;&#xA;            // Clean up the streams.&#xD;&#xA;            reader.Close ();&#xD;&#xA;            dataStream.Close ();&#xD;&#xA;            response.Close ();"
6264798679922552696,34,6,"     - (NSData *)AES256DecryptWithKey:(NSString *)key&#xD;&#xA;    {&#xD;&#xA;      // 'key' should be 32 bytes for AES256, will be null-padded otherwise&#xD;&#xA;      char keyPtr[kCCKeySizeAES256+1]; // room for terminator (unused)&#xD;&#xA;      bzero( keyPtr, sizeof( keyPtr ) ); // fill with zeroes (for padding)&#xD;&#xA;      &#xD;&#xA;      // fetch key data&#xD;&#xA;      [key getCString:keyPtr maxLength:sizeof( keyPtr ) encoding:NSUTF8StringEncoding];&#xD;&#xA;      &#xD;&#xA;      NSUInteger dataLength = [self length];&#xD;&#xA;      &#xD;&#xA;      //See the doc: For block ciphers, the output size will always be less than or &#xD;&#xA;      //equal to the input size plus the size of one block.&#xD;&#xA;      //That's why we need to add the size of one block here&#xD;&#xA;      size_t bufferSize = dataLength + kCCBlockSizeAES128;&#xD;&#xA;      void *buffer = malloc( bufferSize );&#xD;&#xA;      &#xD;&#xA;      size_t numBytesDecrypted = 0;&#xD;&#xA;      CCCryptorStatus cryptStatus = CCCrypt( kCCDecrypt, kCCAlgorithmAES128, kCCOptionPKCS7Padding,&#xD;&#xA;                                            keyPtr, kCCKeySizeAES256,&#xD;&#xA;                                            NULL /* initialization vector (optional) */,&#xD;&#xA;                                            [self bytes], dataLength, /* input */&#xD;&#xA;                                            buffer, bufferSize, /* output */&#xD;&#xA;                                            &numBytesDecrypted );&#xD;&#xA;      &#xD;&#xA;      if( cryptStatus == kCCSuccess )&#xD;&#xA;      {&#xD;&#xA;        //the returned NSData takes ownership of the buffer and will free it on deallocation&#xD;&#xA;        return [NSData dataWithBytesNoCopy:buffer length:numBytesDecrypted];&#xD;&#xA;      }&#xD;&#xA;      &#xD;&#xA;      free( buffer ); //free the buffer&#xD;&#xA;      return nil;&#xD;&#xA;    }"
-1588092735420815734,34,6,"    <?xml version=""1.0"" encoding=""utf-8""?>&#xD;&#xA;        <LinearLayout xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;        android:orientation=""vertical""&#xD;&#xA;        android:layout_width=""fill_parent""&#xD;&#xA;        android:layout_height=""fill_parent""&#xD;&#xA;        >&#xD;&#xA;        <TextView&#xD;&#xA;        android:layout_width=""fill_parent""&#xD;&#xA;        android:layout_height=""wrap_content""&#xD;&#xA;        android:text=""Enter the phone number of recipient""&#xD;&#xA;        />&#xD;&#xA;        <EditText&#xD;&#xA;        android:id=""@+id/txtPhoneNo""&#xD;&#xA;        android:layout_width=""fill_parent""&#xD;&#xA;        android:layout_height=""wrap_content""&#xD;&#xA;        />&#xD;&#xA;        <TextView&#xD;&#xA;        android:layout_width=""fill_parent""&#xD;&#xA;        android:layout_height=""wrap_content""&#xD;&#xA;        android:text=""Message""&#xD;&#xA;        />&#xD;&#xA;        <EditText&#xD;&#xA;        android:id=""@+id/txtMessage""&#xD;&#xA;        android:layout_width=""fill_parent""&#xD;&#xA;        android:layout_height=""150px""&#xD;&#xA;        android:gravity=""top""&#xD;&#xA;        />&#xD;&#xA;        <Button&#xD;&#xA;        android:id=""@+id/btnSendSMS""&#xD;&#xA;        android:layout_width=""fill_parent""&#xD;&#xA;        android:layout_height=""wrap_content""&#xD;&#xA;        android:text=""Send SMS""&#xD;&#xA;        />&#xD;&#xA;        </LinearLayout>"
2887542805028469825,34,6,"    create procedure [usp_my_procedure_name]&#xD;&#xA;    as&#xD;&#xA;    begin&#xD;&#xA;    	set nocount on;&#xD;&#xA;    	declare @trancount int;&#xD;&#xA;    	set @trancount = @@trancount;&#xD;&#xA;    	begin try&#xD;&#xA;    		if @trancount = 0&#xD;&#xA;    			begin transaction&#xD;&#xA;    		else&#xD;&#xA;    			save transaction usp_my_procedure_name;&#xD;&#xA;    &#xD;&#xA;    		-- Do the actual work here&#xD;&#xA;    	&#xD;&#xA;    lbexit:&#xD;&#xA;    		if @trancount = 0	&#xD;&#xA;    			commit;&#xD;&#xA;    	end try&#xD;&#xA;    	begin catch&#xD;&#xA;    		declare @error int, @message varchar(4000), @xstate int;&#xD;&#xA;    		select @error = ERROR_NUMBER()&#xD;&#xA;                       , @message = ERROR_MESSAGE()&#xD;&#xA;                       , @xstate = XACT_STATE();&#xD;&#xA;    		if @xstate = -1&#xD;&#xA;    			rollback;&#xD;&#xA;    		if @xstate = 1 and @trancount = 0&#xD;&#xA;    			rollback&#xD;&#xA;    		if @xstate = 1 and @trancount > 0&#xD;&#xA;    			rollback transaction usp_my_procedure_name;&#xD;&#xA;    &#xD;&#xA;    		raiserror ('usp_my_procedure_name: %d: %s', 16, 1, @error, @message) ;&#xD;&#xA;    		return;&#xD;&#xA;    	end catch	&#xD;&#xA;    end"
398207380556717603,34,6,"    class DeviseCreateUsers < ActiveRecord::Migration&#xD;&#xA;      def change&#xD;&#xA;        create_table(:users) do |t|&#xD;&#xA;          ## Database authenticatable&#xD;&#xA;          t.string :email,              null: false, default: """"&#xD;&#xA;          t.string :encrypted_password, null: false, default: """"&#xD;&#xA;          ## Recoverable&#xD;&#xA;          t.string   :reset_password_token&#xD;&#xA;          t.datetime :reset_password_sent_at&#xD;&#xA;          ## Rememberable&#xD;&#xA;          t.datetime :remember_created_at&#xD;&#xA;          ## Trackable&#xD;&#xA;          t.integer  :sign_in_count, default: 0, null: false&#xD;&#xA;          t.datetime :current_sign_in_at&#xD;&#xA;          t.datetime :last_sign_in_at&#xD;&#xA;          t.string   :current_sign_in_ip&#xD;&#xA;          t.string   :last_sign_in_ip&#xD;&#xA;          ## Confirmable&#xD;&#xA;          # t.string   :confirmation_token&#xD;&#xA;          # t.datetime :confirmed_at&#xD;&#xA;          # t.datetime :confirmation_sent_at&#xD;&#xA;          # t.string   :unconfirmed_email # Only if using reconfirmable&#xD;&#xA;          ## Lockable&#xD;&#xA;          # t.integer  :failed_attempts, default: 0, null: false # Only if lock strategy is :failed_attempts&#xD;&#xA;          # t.string   :unlock_token # Only if unlock strategy is :email or :both&#xD;&#xA;          # t.datetime :locked_at&#xD;&#xA;          t.timestamps&#xD;&#xA;        end&#xD;&#xA;        add_index :users, :email,                unique: true&#xD;&#xA;        add_index :users, :reset_password_token, unique: true&#xD;&#xA;        # add_index :users, :confirmation_token,   unique: true&#xD;&#xA;        # add_index :users, :unlock_token,         unique: true&#xD;&#xA;      end&#xD;&#xA;    end"
8548121773174631069,34,6,"       html, body {&#xD;&#xA;          position: relative;&#xD;&#xA;          height: 100%;&#xD;&#xA;        }&#xD;&#xA;        body {&#xD;&#xA;          background: #eee;&#xD;&#xA;          font-family: Helvetica Neue, Helvetica, Arial, sans-serif;&#xD;&#xA;          font-size: 14px;&#xD;&#xA;          color:#000;&#xD;&#xA;          margin: 0;&#xD;&#xA;          padding: 0;&#xD;&#xA;        }&#xD;&#xA;        .swiper-container {&#xD;&#xA;          width: 100%;&#xD;&#xA;          height: 100%;&#xD;&#xA;        }&#xD;&#xA;        .swiper-slide {&#xD;&#xA;          text-align: center;&#xD;&#xA;          font-size: 18px;&#xD;&#xA;          background: #fff;&#xD;&#xA;          /* Center slide text vertically */&#xD;&#xA;          display: -webkit-box;&#xD;&#xA;          display: -ms-flexbox;&#xD;&#xA;          display: -webkit-flex;&#xD;&#xA;          display: flex;&#xD;&#xA;          -webkit-box-pack: center;&#xD;&#xA;          -ms-flex-pack: center;&#xD;&#xA;          -webkit-justify-content: center;&#xD;&#xA;          justify-content: center;&#xD;&#xA;          -webkit-box-align: center;&#xD;&#xA;          -ms-flex-align: center;&#xD;&#xA;          -webkit-align-items: center;&#xD;&#xA;          align-items: center;&#xD;&#xA;        }"
456982527541997392,34,6,"     this.imagePreview = function(){	&#xD;&#xA;	/* CONFIG */&#xD;&#xA;		&#xD;&#xA;		xOffset = 10;&#xD;&#xA;		yOffset = 30;&#xD;&#xA;		&#xD;&#xA;		// these 2 variable determine popup's distance from the cursor&#xD;&#xA;		// you might want to adjust to get the right result&#xD;&#xA;		&#xD;&#xA;	/* END CONFIG */&#xD;&#xA;	$(""a.preview"").hover(function(e){&#xD;&#xA;		this.t = this.title;&#xD;&#xA;		this.title = """";	&#xD;&#xA;		var c = (this.t != """") ? ""<br/>"" + this.t : """";&#xD;&#xA;		$(""body"").append(""<p id='preview'><img src='""+ this.href +""' alt='Image preview' />""+ c +""</p>"");								 &#xD;&#xA;		$(""#preview"")&#xD;&#xA;			.css(""top"",(e.pageY - xOffset) + ""px"")&#xD;&#xA;			.css(""left"",(e.pageX + yOffset) + ""px"")&#xD;&#xA;			.fadeIn(""fast"");						&#xD;&#xA;    },&#xD;&#xA;	function(){&#xD;&#xA;		this.title = this.t;	&#xD;&#xA;		$(""#preview"").remove();&#xD;&#xA;    });	&#xD;&#xA;	$(""a.preview"").mousemove(function(e){&#xD;&#xA;		$(""#preview"")&#xD;&#xA;			.css(""top"",(e.pageY - xOffset) + ""px"")&#xD;&#xA;			.css(""left"",(e.pageX + yOffset) + ""px"");&#xD;&#xA;	});			&#xD;&#xA;        };&#xD;&#xA;      // starting the script on page load&#xD;&#xA;       $(document).ready(function(){&#xD;&#xA;	  imagePreview();&#xD;&#xA;      });"
-1851527442523412466,34,6,"    .modal {&#xD;&#xA;        display: none; /* Hidden by default */&#xD;&#xA;        position: fixed; /* Stay in place */&#xD;&#xA;        z-index: 1; /* Sit on top */&#xD;&#xA;        padding-top: 100px; /* Location of the box */&#xD;&#xA;        left: 0;&#xD;&#xA;        top: 0;&#xD;&#xA;        width: 100%; /* Full width */&#xD;&#xA;        height: 100%; /* Full height */&#xD;&#xA;        overflow: auto; /* Enable scroll if needed */&#xD;&#xA;        background-color: rgb(0,0,0); /* Fallback color */&#xD;&#xA;        background-color: rgba(0,0,0,0.4); /* Black w/ opacity */&#xD;&#xA;    }&#xD;&#xA;    /* Modal Content */&#xD;&#xA;    .modal-content {&#xD;&#xA;        background-color: #fefefe;&#xD;&#xA;        margin: auto;&#xD;&#xA;        padding: 20px;&#xD;&#xA;        border: 1px solid #888;&#xD;&#xA;        width: 80%;&#xD;&#xA;    }&#xD;&#xA;    /* The Close Button */&#xD;&#xA;    .close {&#xD;&#xA;        color: #aaaaaa;&#xD;&#xA;        float: right;&#xD;&#xA;        font-size: 28px;&#xD;&#xA;        font-weight: bold;&#xD;&#xA;    }&#xD;&#xA;    .close:hover,&#xD;&#xA;    .close:focus {&#xD;&#xA;        color: #000;&#xD;&#xA;        text-decoration: none;&#xD;&#xA;        cursor: pointer;&#xD;&#xA;    }"
-3613424083793176206,35,6,"    $('.responsive').slick({&#xD;&#xA;      dots: true,&#xD;&#xA;      infinite: false,&#xD;&#xA;      speed: 300,&#xD;&#xA;      slidesToShow: 4,&#xD;&#xA;      slidesToScroll: 4,&#xD;&#xA;      responsive: [&#xD;&#xA;        {&#xD;&#xA;          breakpoint: 1024,&#xD;&#xA;          settings: {&#xD;&#xA;            slidesToShow: 3,&#xD;&#xA;            slidesToScroll: 3,&#xD;&#xA;            infinite: true,&#xD;&#xA;            dots: true&#xD;&#xA;          }&#xD;&#xA;        },&#xD;&#xA;        {&#xD;&#xA;          breakpoint: 600,&#xD;&#xA;          settings: {&#xD;&#xA;            slidesToShow: 2,&#xD;&#xA;            slidesToScroll: 2&#xD;&#xA;          }&#xD;&#xA;        },&#xD;&#xA;        {&#xD;&#xA;          breakpoint: 480,&#xD;&#xA;          settings: {&#xD;&#xA;            slidesToShow: 1,&#xD;&#xA;            slidesToScroll: 1&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;        // You can unslick at a given breakpoint now by adding:&#xD;&#xA;        // settings: ""unslick""&#xD;&#xA;        // instead of a settings object&#xD;&#xA;      ]&#xD;&#xA;    });"
-8146749513586072024,35,6,"    function fnExcelReport()&#xD;&#xA;            {&#xD;&#xA;                  var tab_text=""<table border='2px'><tr bgcolor='#87AFC6'>"";&#xD;&#xA;                  var textRange; var j=0;&#xD;&#xA;                  tab = document.getElementById('headerTable'); // id of table&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;                  for(j = 0 ; j < tab.rows.length ; j++) &#xD;&#xA;                  {     &#xD;&#xA;                        tab_text=tab_text+tab.rows[j].innerHTML+""</tr>"";&#xD;&#xA;                        //tab_text=tab_text+""</tr>"";&#xD;&#xA;                  }&#xD;&#xA;        &#xD;&#xA;                  tab_text=tab_text+""</table>"";&#xD;&#xA;                  tab_text= tab_text.replace(/<A[^>]*>|<\/A>/g, """");//remove if u want links in your table&#xD;&#xA;                  tab_text= tab_text.replace(/<img[^>]*>/gi,""""); // remove if u want images in your table&#xD;&#xA;                              tab_text= tab_text.replace(/<input[^>]*>|<\/input>/gi, """"); // reomves input params&#xD;&#xA;        &#xD;&#xA;                       var ua = window.navigator.userAgent;&#xD;&#xA;                      var msie = ua.indexOf(""MSIE ""); &#xD;&#xA;        &#xD;&#xA;                         if (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\:11\./))      // If Internet Explorer&#xD;&#xA;                            {&#xD;&#xA;                                   txtArea1.document.open(""txt/html"",""replace"");&#xD;&#xA;                                   txtArea1.document.write(tab_text);&#xD;&#xA;                                   txtArea1.document.close();&#xD;&#xA;                                   txtArea1.focus(); &#xD;&#xA;                                    sa=txtArea1.document.execCommand(""SaveAs"",true,""Say Thanks to Sumit.xls"");&#xD;&#xA;                                  }  &#xD;&#xA;                          else                 //other browser not tested on IE 11&#xD;&#xA;                              sa = window.open('data:application/vnd.ms-excel,' + encodeURIComponent(tab_text));  &#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;                              return (sa);&#xD;&#xA;              }"
8329634266885311376,35,6,    * {&#xD;&#xA;      box-sizing: border-box;&#xD;&#xA;    }&#xD;&#xA;    #myInput {&#xD;&#xA;      background-image: url('/css/searchicon.png');&#xD;&#xA;      background-position: 10px 12px;&#xD;&#xA;      background-repeat: no-repeat;&#xD;&#xA;      width: 100%;&#xD;&#xA;      font-size: 16px;&#xD;&#xA;      padding: 12px 20px 12px 40px;&#xD;&#xA;      border: 1px solid #ddd;&#xD;&#xA;      margin-bottom: 12px;&#xD;&#xA;    }&#xD;&#xA;    #myUL {&#xD;&#xA;      list-style-type: none;&#xD;&#xA;      padding: 0;&#xD;&#xA;      margin: 0;&#xD;&#xA;    }&#xD;&#xA;    #myUL li a {&#xD;&#xA;      border: 1px solid #ddd;&#xD;&#xA;      margin-top: -1px; /* Prevent double borders */&#xD;&#xA;      background-color: #f6f6f6;&#xD;&#xA;      padding: 12px;&#xD;&#xA;      text-decoration: none;&#xD;&#xA;      font-size: 18px;&#xD;&#xA;      color: black;&#xD;&#xA;      display: block&#xD;&#xA;    }&#xD;&#xA;    #myUL li a.header {&#xD;&#xA;      background-color: #e2e2e2;&#xD;&#xA;      cursor: default;&#xD;&#xA;    }&#xD;&#xA;    #myUL li a:hover:not(.header) {&#xD;&#xA;      background-color: #eee;&#xD;&#xA;    }
2521909794167554385,35,6,"     var selected = null, // Object of the element to be moved&#xD;&#xA;        x_pos = 0, y_pos = 0, // Stores x & y coordinates of the mouse pointer&#xD;&#xA;        x_elem = 0, y_elem = 0; // Stores top, left values (edge) of the element&#xD;&#xA;    &#xD;&#xA;    // Will be called when user starts dragging an element&#xD;&#xA;    function _drag_init(elem) {&#xD;&#xA;        // Store the object of the element which needs to be moved&#xD;&#xA;        selected = elem;&#xD;&#xA;        x_elem = x_pos - selected.offsetLeft;&#xD;&#xA;        y_elem = y_pos - selected.offsetTop;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    // Will be called when user dragging an element&#xD;&#xA;    function _move_elem(e) {&#xD;&#xA;        x_pos = document.all ? window.event.clientX : e.pageX;&#xD;&#xA;        y_pos = document.all ? window.event.clientY : e.pageY;&#xD;&#xA;        if (selected !== null) {&#xD;&#xA;            selected.style.left = (x_pos - x_elem) + 'px';&#xD;&#xA;            selected.style.top = (y_pos - y_elem) + 'px';&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    // Destroy the object when we are done&#xD;&#xA;    function _destroy() {&#xD;&#xA;        selected = null;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    // Bind the functions...&#xD;&#xA;    document.getElementById('draggable-element').onmousedown = function () {&#xD;&#xA;        _drag_init(this);&#xD;&#xA;        return false;&#xD;&#xA;    };&#xD;&#xA;    &#xD;&#xA;    document.onmousemove = _move_elem;&#xD;&#xA;    document.onmouseup = _destroy;"
103991128712134025,36,6,"    (UIImage *)UIImageFromCVMat:(cv::Mat)cvMat&#xD;&#xA;    {&#xD;&#xA;      NSData *data = [NSData dataWithBytes:cvMat.data length:cvMat.elemSize()*cvMat.total()];&#xD;&#xA;      CGColorSpaceRef colorSpace;&#xD;&#xA;    &#xD;&#xA;      if (cvMat.elemSize() == 1) {&#xD;&#xA;          colorSpace = CGColorSpaceCreateDeviceGray();&#xD;&#xA;      } else {&#xD;&#xA;          colorSpace = CGColorSpaceCreateDeviceRGB();&#xD;&#xA;      }&#xD;&#xA;    &#xD;&#xA;      CGDataProviderRef provider = CGDataProviderCreateWithCFData((__bridge CFDataRef)data);&#xD;&#xA;    &#xD;&#xA;      // Creating CGImage from cv::Mat&#xD;&#xA;      CGImageRef imageRef = CGImageCreate(cvMat.cols,                                 //width&#xD;&#xA;                                         cvMat.rows,                                 //height&#xD;&#xA;                                         8,                                          //bits per component&#xD;&#xA;                                         8 * cvMat.elemSize(),                       //bits per pixel&#xD;&#xA;                                         cvMat.step[0],                            //bytesPerRow&#xD;&#xA;                                         colorSpace,                                 //colorspace&#xD;&#xA;                                         kCGImageAlphaNone|kCGBitmapByteOrderDefault,// bitmap info&#xD;&#xA;                                         provider,                                   //CGDataProviderRef&#xD;&#xA;                                         NULL,                                       //decode&#xD;&#xA;                                         false,                                      //should interpolate&#xD;&#xA;                                         kCGRenderingIntentDefault                   //intent&#xD;&#xA;                                         );&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;      // Getting UIImage from CGImage&#xD;&#xA;      UIImage *finalImage = [UIImage imageWithCGImage:imageRef];&#xD;&#xA;      CGImageRelease(imageRef);&#xD;&#xA;      CGDataProviderRelease(provider);&#xD;&#xA;      CGColorSpaceRelease(colorSpace);&#xD;&#xA;    &#xD;&#xA;      return finalImage;&#xD;&#xA;     }"
2002904310310237249,36,6,"    #include <stdio.h>&#xD;&#xA;        void fastRead( size_t *a );&#xD;&#xA;        void fastWrite( size_t a );&#xD;&#xA;        inline void fastRead(size_t *a)&#xD;&#xA;        {&#xD;&#xA;            int c=0;&#xD;&#xA;            // note: 32 is space character&#xD;&#xA;            while (c<33) c=getchar_unlocked();&#xD;&#xA;            // initialize result value&#xD;&#xA;            *a=0;&#xD;&#xA;            // punctuation parens, etc are show stoppers&#xD;&#xA;            while (c>47 && c<58)&#xD;&#xA;            {&#xD;&#xA;                *a = (*a)*10 + (size_t)(c-48);&#xD;&#xA;                c=getchar_unlocked();&#xD;&#xA;            }&#xD;&#xA;            //printf( ""%s, value: %lu\n"", __func__, *a );&#xD;&#xA;        } // end function: fastRead&#xD;&#xA;        inline void fastWrite(size_t a)&#xD;&#xA;        {&#xD;&#xA;            char snum[20];&#xD;&#xA;            //printf( ""%s, %lu\n"", __func__, a );&#xD;&#xA;            int i=0;&#xD;&#xA;            do&#xD;&#xA;            {&#xD;&#xA;                // 48 is numeric character 0&#xD;&#xA;                snum[i++] = (char)((a%10)+(size_t)48);&#xD;&#xA;                a=a/10;&#xD;&#xA;            }while(a>0);&#xD;&#xA;            i=i-1; // correction for overincrement from prior 'while' loop&#xD;&#xA;            while(i>=0)&#xD;&#xA;            {&#xD;&#xA;                putchar_unlocked(snum[i--]);&#xD;&#xA;            }&#xD;&#xA;            putchar_unlocked('\n');&#xD;&#xA;        } // end function: fastWrite"
-7622441167755753958,36,6,"    	public class DepthPageTransformer implements ViewPager.PageTransformer {&#xD;&#xA;    	    private static final float MIN_SCALE = 0.75f;&#xD;&#xA;    &#xD;&#xA;    	    public void transformPage(View view, float position) {&#xD;&#xA;    	        int pageWidth = view.getWidth();&#xD;&#xA;    &#xD;&#xA;    	        if (position < -1) { // [-Infinity,-1)&#xD;&#xA;    	            // This page is way off-screen to the left.&#xD;&#xA;    	            view.setAlpha(0);&#xD;&#xA;    &#xD;&#xA;    	        } else if (position <= 0) { // [-1,0]&#xD;&#xA;    	            // Use the default slide transition when moving to the left page&#xD;&#xA;    	            view.setAlpha(1);&#xD;&#xA;    	            view.setTranslationX(0);&#xD;&#xA;    	            view.setScaleX(1);&#xD;&#xA;    	            view.setScaleY(1);&#xD;&#xA;    &#xD;&#xA;    	        } else if (position <= 1) { // (0,1]&#xD;&#xA;    	            // Fade the page out.&#xD;&#xA;    	            view.setAlpha(1 - position);&#xD;&#xA;    &#xD;&#xA;    	            // Counteract the default slide transition&#xD;&#xA;    	            view.setTranslationX(pageWidth * -position);&#xD;&#xA;    &#xD;&#xA;    	            // Scale the page down (between MIN_SCALE and 1)&#xD;&#xA;    	            float scaleFactor = MIN_SCALE&#xD;&#xA;    	                    + (1 - MIN_SCALE) * (1 - Math.abs(position));&#xD;&#xA;    //	            view.setScaleX(scaleFactor);&#xD;&#xA;    //	            view.setScaleY(scaleFactor);&#xD;&#xA;    &#xD;&#xA;    	        } else { // (1,+Infinity]&#xD;&#xA;    	            // This page is way off-screen to the right.&#xD;&#xA;    	            view.setAlpha(0);&#xD;&#xA;    	        }&#xD;&#xA;    	    }&#xD;&#xA;    	}"
4771108977346129382,37,6,"    // From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys&#xD;&#xA;    if (!Object.keys) {&#xD;&#xA;      Object.keys = (function () {&#xD;&#xA;        'use strict';&#xD;&#xA;        var hasOwnProperty = Object.prototype.hasOwnProperty,&#xD;&#xA;            hasDontEnumBug = !({toString: null}).propertyIsEnumerable('toString'),&#xD;&#xA;            dontEnums = [&#xD;&#xA;              'toString',&#xD;&#xA;              'toLocaleString',&#xD;&#xA;              'valueOf',&#xD;&#xA;              'hasOwnProperty',&#xD;&#xA;              'isPrototypeOf',&#xD;&#xA;              'propertyIsEnumerable',&#xD;&#xA;              'constructor'&#xD;&#xA;            ],&#xD;&#xA;            dontEnumsLength = dontEnums.length;&#xD;&#xA;        return function (obj) {&#xD;&#xA;          if (typeof obj !== 'object' && (typeof obj !== 'function' || obj === null)) {&#xD;&#xA;            throw new TypeError('Object.keys called on non-object');&#xD;&#xA;          }&#xD;&#xA;          var result = [], prop, i;&#xD;&#xA;          for (prop in obj) {&#xD;&#xA;            if (hasOwnProperty.call(obj, prop)) {&#xD;&#xA;              result.push(prop);&#xD;&#xA;            }&#xD;&#xA;          }&#xD;&#xA;          if (hasDontEnumBug) {&#xD;&#xA;            for (i = 0; i < dontEnumsLength; i++) {&#xD;&#xA;              if (hasOwnProperty.call(obj, dontEnums[i])) {&#xD;&#xA;                result.push(dontEnums[i]);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;          }&#xD;&#xA;          return result;&#xD;&#xA;        };&#xD;&#xA;      }());&#xD;&#xA;    }"
-4640857824942039786,37,6,"    <header class=""header"">&#xD;&#xA;        <!-- LOGOS -->&#xD;&#xA;        <a href=""#"">&#xD;&#xA;            <img class=""standard logo"" src=""http://www.lucieaverillphotography.co.uk/wp-content/uploads/2015/12/Lucie_Averill_Photography_Logo-2.png"">&#xD;&#xA;            <img class=""white logo"" src=""http://www.lucieaverillphotography.co.uk/wp-content/uploads/2016/01/Lucie_Averill_Photography_Logo_White.png""></a>&#xD;&#xA;        <!-- LOGOS -->&#xD;&#xA;        <img class=""menu button"" src=""http://www.lucieaverillphotography.co.uk/wp-content/uploads/2016/01/Menu.png"">&#xD;&#xA;        <!-- HEADER NAVIGATION MENU -->&#xD;&#xA;        <nav class=""header-nav"">&#xD;&#xA;            <div class=""menu-header-menu-container"">&#xD;&#xA;                <ul id=""menu-header-menu"" class=""menu"">&#xD;&#xA;                    <li id=""menu-item-463"">&#xD;&#xA;                        <a href=""#"">WORK</a>&#xD;&#xA;                        <ul class=""sub-menu"">&#xD;&#xA;                            <li id=""menu-item-584""><a href=""#"">LANDSCAPES</a></li>&#xD;&#xA;                            <li id=""menu-item-473""><a href=""#"">SEASCAPES</a></li>&#xD;&#xA;                            <li id=""menu-item-478""><a href=""#"">MACRO</a></li>&#xD;&#xA;                            <li id=""menu-item-477""><a href=""#"">CITIES</a></li>&#xD;&#xA;                            <li id=""menu-item-475""><a href=""#"">LONG EXPOSURE</a></li>&#xD;&#xA;                            <li id=""menu-item-480""><a href=""#"">MISCELLANEOUS</a></li>&#xD;&#xA;                        </ul>&#xD;&#xA;                    </li>&#xD;&#xA;                    <li id=""menu-item-10""><a href=""#"">ABOUT</a></li>&#xD;&#xA;                    <li id=""menu-item-464""><a href=""#"">SHOP</a></li>&#xD;&#xA;                    <li id=""menu-item-923"">&#xD;&#xA;                        <a href=""#"">SOCIAL</a>&#xD;&#xA;                            <ul class=""sub-menu"">&#xD;&#xA;                            <li id=""menu-item-11""><a target=""_blank"" href=""#"">FACEBOOK</a></li>&#xD;&#xA;                            <li id=""menu-item-924""><a href=""#"">INSTAGRAM</a></li>&#xD;&#xA;                            <li id=""menu-item-15""><a target=""_blank"" href=""#"">FLICKR</a></li>&#xD;&#xA;                        </ul>&#xD;&#xA;                        </li>&#xD;&#xA;                    <li id=""menu-item-14""><a href=""#"">CONTACT</a></li>&#xD;&#xA;                </ul>&#xD;&#xA;            </div>&#xD;&#xA;        </nav>&#xD;&#xA;    </header>"
-1132729810140606682,38,6,"    function curl_download($Url){&#xD;&#xA;     &#xD;&#xA;        // is cURL installed yet?&#xD;&#xA;        if (!function_exists('curl_init')){&#xD;&#xA;            die('Sorry cURL is not installed!');&#xD;&#xA;        }&#xD;&#xA;     &#xD;&#xA;        // OK cool - then let's create a new cURL resource handle&#xD;&#xA;        $ch = curl_init();&#xD;&#xA;     &#xD;&#xA;        // Now set some options (most are optional)&#xD;&#xA;     &#xD;&#xA;        // Set URL to download&#xD;&#xA;        curl_setopt($ch, CURLOPT_URL, $Url);&#xD;&#xA;     &#xD;&#xA;        // Set a referer&#xD;&#xA;        curl_setopt($ch, CURLOPT_REFERER, ""http://www.example.org/yay.htm"");&#xD;&#xA;     &#xD;&#xA;        // User agent&#xD;&#xA;        curl_setopt($ch, CURLOPT_USERAGENT, ""MozillaXYZ/1.0"");&#xD;&#xA;     &#xD;&#xA;        // Include header in result? (0 = yes, 1 = no)&#xD;&#xA;        curl_setopt($ch, CURLOPT_HEADER, 0);&#xD;&#xA;     &#xD;&#xA;        // Should cURL return or print out the data? (true = return, false = print)&#xD;&#xA;        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);&#xD;&#xA;     &#xD;&#xA;        // Timeout in seconds&#xD;&#xA;        curl_setopt($ch, CURLOPT_TIMEOUT, 10);&#xD;&#xA;     &#xD;&#xA;        // Download the given URL, and return output&#xD;&#xA;        $output = curl_exec($ch);&#xD;&#xA;     &#xD;&#xA;        // Close the cURL resource, and free system resources&#xD;&#xA;        curl_close($ch);&#xD;&#xA;     &#xD;&#xA;        return $output;&#xD;&#xA;    }"
-2447376806998789302,38,6,"    function getInputSelection(el) {&#xD;&#xA;	    var start = 0, end = 0, normalizedValue, range,&#xD;&#xA;	        textInputRange, len, endRange;&#xD;&#xA;	    if (typeof el.selectionStart == ""number"" && typeof el.selectionEnd == ""number"") {&#xD;&#xA;	        start = el.selectionStart;&#xD;&#xA;	        end = el.selectionEnd;&#xD;&#xA;	    } else {&#xD;&#xA;	        range = document.selection.createRange();&#xD;&#xA;	        if (range && range.parentElement() == el) {&#xD;&#xA;	            len = el.value.length;&#xD;&#xA;	            normalizedValue = el.value.replace(/\r\n/g, ""\n"");&#xD;&#xA;	            // Create a working TextRange that lives only in the input&#xD;&#xA;	            textInputRange = el.createTextRange();&#xD;&#xA;	            textInputRange.moveToBookmark(range.getBookmark());&#xD;&#xA;	            // Check if the start and end of the selection are at the very end&#xD;&#xA;	            // of the input, since moveStart/moveEnd doesn't return what we want&#xD;&#xA;	            // in those cases&#xD;&#xA;	            endRange = el.createTextRange();&#xD;&#xA;	            endRange.collapse(false);&#xD;&#xA;	            if (textInputRange.compareEndPoints(""StartToEnd"", endRange) > -1) {&#xD;&#xA;	                start = end = len;&#xD;&#xA;	            } else {&#xD;&#xA;	                start = -textInputRange.moveStart(""character"", -len);&#xD;&#xA;	                start += normalizedValue.slice(0, start).split(""\n"").length - 1;&#xD;&#xA;	                if (textInputRange.compareEndPoints(""EndToEnd"", endRange) > -1) {&#xD;&#xA;	                    end = len;&#xD;&#xA;	                } else {&#xD;&#xA;	                    end = -textInputRange.moveEnd(""character"", -len);&#xD;&#xA;	                    end += normalizedValue.slice(0, end).split(""\n"").length - 1;&#xD;&#xA;	                }&#xD;&#xA;	            }&#xD;&#xA;	        }&#xD;&#xA;	    }&#xD;&#xA;	    return {&#xD;&#xA;	        start: start,&#xD;&#xA;	        end: end&#xD;&#xA;	    };&#xD;&#xA;	}"
2548478764527374063,38,6,"    var webpack = require('webpack');&#xD;&#xA;    var webpackMerge = require('webpack-merge');&#xD;&#xA;    var ExtractTextPlugin = require('extract-text-webpack-plugin');&#xD;&#xA;    var commonConfig = require('./webpack.common.js');&#xD;&#xA;    var helpers = require('./helpers');&#xD;&#xA;    &#xD;&#xA;    const ENV = process.env.NODE_ENV = process.env.ENV = 'production';&#xD;&#xA;    &#xD;&#xA;    module.exports = webpackMerge(commonConfig, {&#xD;&#xA;        devtool: 'source-map',&#xD;&#xA;    &#xD;&#xA;        output: {&#xD;&#xA;            path: helpers.root('dist'),&#xD;&#xA;            publicPath: '/',&#xD;&#xA;            filename: '[name].[hash].js',&#xD;&#xA;            chunkFilename: '[id].[hash].chunk.js'&#xD;&#xA;        },&#xD;&#xA;    &#xD;&#xA;        htmlLoader: {&#xD;&#xA;            minimize: false // workaround for ng2&#xD;&#xA;        },&#xD;&#xA;    &#xD;&#xA;        plugins: [&#xD;&#xA;            new webpack.NoErrorsPlugin(),&#xD;&#xA;            new webpack.optimize.DedupePlugin(),&#xD;&#xA;            new webpack.optimize.UglifyJsPlugin({ // https://github.com/angular/angular/issues/10618&#xD;&#xA;                mangle: {&#xD;&#xA;                    keep_fnames: true&#xD;&#xA;                }&#xD;&#xA;            }),&#xD;&#xA;            new ExtractTextPlugin('[name].[hash].css'),&#xD;&#xA;            new webpack.DefinePlugin({&#xD;&#xA;                'process.env': {&#xD;&#xA;                    'ENV': JSON.stringify(ENV)&#xD;&#xA;                }&#xD;&#xA;            })&#xD;&#xA;        ]&#xD;&#xA;    });"
5125731461532631724,39,6,"      (function (global) {&#xD;&#xA;      System.config({&#xD;&#xA;        paths: {&#xD;&#xA;           // paths serve as alias&#xD;&#xA;          'npm:': 'node_modules/'&#xD;&#xA;        },&#xD;&#xA;        // map tells the System loader where to look for things&#xD;&#xA;    map: {&#xD;&#xA;      // our app is within the app folder&#xD;&#xA;      'app': './app',&#xD;&#xA;      // angular bundles&#xD;&#xA;      '@angular/core': 'npm:@angular/core/bundles/core.umd.js',&#xD;&#xA;      '@angular/common': 'npm:@angular/common/bundles/common.umd.js',&#xD;&#xA;      '@angular/compiler': 'npm:@angular/compiler/bundles/compiler.umd.js',&#xD;&#xA;      '@angular/platform-browser': 'npm:@angular/platform-browser/bundles/platform-browser.umd.js',&#xD;&#xA;      '@angular/platform-browser-dynamic': 'npm:@angular/platform-browser-dynamic/bundles/platform-browser-dynamic.umd.js',&#xD;&#xA;      '@angular/http': 'npm:@angular/http/bundles/http.umd.js',&#xD;&#xA;      '@angular/router': 'npm:@angular/router/bundles/router.umd.js',&#xD;&#xA;      '@angular/forms': 'npm:@angular/forms/bundles/forms.umd.js',&#xD;&#xA;      // other libraries&#xD;&#xA;      'rxjs':                      'npm:rxjs',&#xD;&#xA;      'angular-in-memory-web-api': 'npm:angular-in-memory-web-api/bundles/in-memory-web-api.umd.js'&#xD;&#xA;    },&#xD;&#xA;    // packages tells the System loader how to load when no filename and/or no extension&#xD;&#xA;    packages: {&#xD;&#xA;      app: {&#xD;&#xA;        defaultExtension: 'js',&#xD;&#xA;        meta: {&#xD;&#xA;          './*.js': {&#xD;&#xA;            loader: ""systemjs-angular-loader.js""&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;      },&#xD;&#xA;      rxjs: {&#xD;&#xA;              defaultExtension: 'js'&#xD;&#xA;            }&#xD;&#xA;         }&#xD;&#xA;      });&#xD;&#xA;      })(this);"
355876351665870813,39,6,"    /*&#xD;&#xA;	 *  Licensed to the Apache Software Foundation (ASF) under one or more&#xD;&#xA;	 *  contributor license agreements.  See the NOTICE file distributed with&#xD;&#xA;	 *  this work for additional information regarding copyright ownership.&#xD;&#xA;	 *  The ASF licenses this file to You under the Apache License, Version 2.0&#xD;&#xA;	 *  (the ""License""); you may not use this file except in compliance with&#xD;&#xA;	 *  the License.  You may obtain a copy of the License at&#xD;&#xA;	 *&#xD;&#xA;	 *     http://www.apache.org/licenses/LICENSE-2.0&#xD;&#xA;	 *&#xD;&#xA;	 *  Unless required by applicable law or agreed to in writing, software&#xD;&#xA;	 *  distributed under the License is distributed on an ""AS IS"" BASIS,&#xD;&#xA;	 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xD;&#xA;	 *  See the License for the specific language governing permissions and&#xD;&#xA;	 *  limitations under the License.&#xD;&#xA;	 */&#xD;&#xA;	/**&#xD;&#xA;	 * @author Alexander Y. Kleymenov&#xD;&#xA;	 * @version $Revision$&#xD;&#xA;	 */&#xD;&#xA;	import java.security.AccessController;&#xD;&#xA;	import java.security.Provider;&#xD;&#xA;	public final class JSSEProvider extends Provider {&#xD;&#xA;	    public JSSEProvider() {&#xD;&#xA;		super(""HarmonyJSSE"", 1.0, ""Harmony JSSE Provider"");&#xD;&#xA;		AccessController.doPrivileged(new java.security.PrivilegedAction<Void>() {&#xD;&#xA;		    public Void run() {&#xD;&#xA;		        put(""SSLContext.TLS"",&#xD;&#xA;		                ""org.apache.harmony.xnet.provider.jsse.SSLContextImpl"");&#xD;&#xA;		        put(""Alg.Alias.SSLContext.TLSv1"", ""TLS"");&#xD;&#xA;		        put(""KeyManagerFactory.X509"",&#xD;&#xA;		                ""org.apache.harmony.xnet.provider.jsse.KeyManagerFactoryImpl"");&#xD;&#xA;		        put(""TrustManagerFactory.X509"",&#xD;&#xA;		                ""org.apache.harmony.xnet.provider.jsse.TrustManagerFactoryImpl"");&#xD;&#xA;		        return null;&#xD;&#xA;		    }&#xD;&#xA;		});&#xD;&#xA;	    }&#xD;&#xA;	}"
-5221657954033827981,39,6,"    (function (global) {&#xD;&#xA;        System.config({&#xD;&#xA;            paths: {&#xD;&#xA;                // paths serve as alias&#xD;&#xA;                'npm:': 'node_modules/'&#xD;&#xA;            },&#xD;&#xA;            // map tells the System loader where to look for things&#xD;&#xA;            map: {&#xD;&#xA;                // our app is within the app folder&#xD;&#xA;                app: 'app',&#xD;&#xA;                // angular bundles&#xD;&#xA;                '@angular/core': 'npm:@angular/core/bundles/core.umd.js',&#xD;&#xA;                '@angular/common': 'npm:@angular/common/bundles/common.umd.js',&#xD;&#xA;                '@angular/compiler': 'npm:@angular/compiler/bundles/compiler.umd.js',&#xD;&#xA;                '@angular/platform-browser': 'npm:@angular/platform-browser/bundles/platform-browser.umd.js',&#xD;&#xA;                '@angular/platform-browser-dynamic': 'npm:@angular/platform-browser-dynamic/bundles/platform-browser-dynamic.umd.js',&#xD;&#xA;                '@angular/http': 'npm:@angular/http/bundles/http.umd.js',&#xD;&#xA;                '@angular/router': 'npm:@angular/router/bundles/router.umd.js',&#xD;&#xA;                '@angular/forms': 'npm:@angular/forms/bundles/forms.umd.js',&#xD;&#xA;                // other libraries&#xD;&#xA;                'rxjs': 'npm:rxjs',&#xD;&#xA;                'angular2-in-memory-web-api': 'npm:angular2-in-memory-web-api',&#xD;&#xA;            },&#xD;&#xA;            // packages tells the System loader how to load when no filename and/or no extension&#xD;&#xA;            packages: {&#xD;&#xA;                app: {&#xD;&#xA;                    main: './main.js',&#xD;&#xA;                    defaultExtension: 'js'&#xD;&#xA;                },&#xD;&#xA;                rxjs: {&#xD;&#xA;                    defaultExtension: 'js'&#xD;&#xA;                },&#xD;&#xA;                'angular2-in-memory-web-api': {&#xD;&#xA;                    main: './index.js',&#xD;&#xA;                    defaultExtension: 'js'&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        });&#xD;&#xA;    })(this);"
6092579446099439129,40,6,"    import java.io.IOException;&#xD;&#xA;    import java.net.Socket;&#xD;&#xA;    import java.net.UnknownHostException;&#xD;&#xA;    import java.security.KeyManagementException;&#xD;&#xA;    import java.security.KeyStore;&#xD;&#xA;    import java.security.KeyStoreException;&#xD;&#xA;    import java.security.NoSuchAlgorithmException;&#xD;&#xA;    import java.security.UnrecoverableKeyException;&#xD;&#xA;    import java.security.cert.CertificateException;&#xD;&#xA;    import java.security.cert.X509Certificate;&#xD;&#xA;    &#xD;&#xA;    import javax.net.ssl.SSLContext;&#xD;&#xA;    import javax.net.ssl.TrustManager;&#xD;&#xA;    import javax.net.ssl.X509TrustManager;&#xD;&#xA;    &#xD;&#xA;    import org.apache.http.conn.ssl.SSLSocketFactory;&#xD;&#xA;    public class MySSLSocketFactory extends SSLSocketFactory {&#xD;&#xA;		SSLContext sslContext = SSLContext.getInstance(""TLS"");&#xD;&#xA;		public MySSLSocketFactory(KeyStore truststore) throws NoSuchAlgorithmException, KeyManagementException, KeyStoreException, UnrecoverableKeyException {&#xD;&#xA;			super(truststore);&#xD;&#xA;			TrustManager tm = new X509TrustManager() {&#xD;&#xA;				public void checkClientTrusted(X509Certificate[] chain, String authType) throws CertificateException {&#xD;&#xA;				}&#xD;&#xA;				public void checkServerTrusted(X509Certificate[] chain, String authType) throws CertificateException {&#xD;&#xA;				}&#xD;&#xA;				public X509Certificate[] getAcceptedIssuers() {&#xD;&#xA;					return null;&#xD;&#xA;				}&#xD;&#xA;			};&#xD;&#xA;			sslContext.init(null, new TrustManager[] { tm }, null);&#xD;&#xA;		}&#xD;&#xA;		@Override&#xD;&#xA;		public Socket createSocket(Socket socket, String host, int port, boolean autoClose) throws IOException, UnknownHostException {&#xD;&#xA;			return sslContext.getSocketFactory().createSocket(socket, host, port, autoClose);&#xD;&#xA;		}&#xD;&#xA;		@Override&#xD;&#xA;		public Socket createSocket() throws IOException {&#xD;&#xA;			return sslContext.getSocketFactory().createSocket();&#xD;&#xA;		}&#xD;&#xA;	}"
-2534620685889392869,40,6,"    $routeSegmentProvider.&#xD;&#xA;    &#xD;&#xA;    when('/section1',          's1.home').&#xD;&#xA;    when('/section1/prefs',    's1.prefs').&#xD;&#xA;    when('/section1/:id',      's1.itemInfo.overview').&#xD;&#xA;    when('/section1/:id/edit', 's1.itemInfo.edit').&#xD;&#xA;    when('/section2',          's2').&#xD;&#xA;    &#xD;&#xA;    segment('s1', {&#xD;&#xA;        templateUrl: 'templates/section1.html',&#xD;&#xA;        controller: MainCtrl}).&#xD;&#xA;    &#xD;&#xA;    within().&#xD;&#xA;    &#xD;&#xA;        segment('home', {&#xD;&#xA;            templateUrl: 'templates/section1/home.html'}).&#xD;&#xA;    &#xD;&#xA;        segment('itemInfo', {&#xD;&#xA;            templateUrl: 'templates/section1/item.html',&#xD;&#xA;            controller: Section1ItemCtrl,&#xD;&#xA;            dependencies: ['id']}).&#xD;&#xA;    &#xD;&#xA;        within().&#xD;&#xA;    &#xD;&#xA;            segment('overview', {&#xD;&#xA;                templateUrl: 'templates/section1/item/overview.html'}).&#xD;&#xA;    &#xD;&#xA;            segment('edit', {&#xD;&#xA;                 templateUrl: 'templates/section1/item/edit.html'}).&#xD;&#xA;    &#xD;&#xA;            up().&#xD;&#xA;    &#xD;&#xA;        segment('prefs', {&#xD;&#xA;            templateUrl: 'templates/section1/prefs.html'}).&#xD;&#xA;    &#xD;&#xA;        up().&#xD;&#xA;    &#xD;&#xA;    segment('s2', {&#xD;&#xA;        templateUrl: 'templates/section2.html',&#xD;&#xA;        controller: MainCtrl});"
-6888641362234756131,40,6,"        <android.support.v4.widget.DrawerLayout xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;            xmlns:tools=""http://schemas.android.com/tools""&#xD;&#xA;            xmlns:app=""http://schemas.android.com/apk/res-auto""&#xD;&#xA;            android:id=""@+id/drawer""&#xD;&#xA;            android:layout_width=""match_parent""&#xD;&#xA;            android:layout_height=""match_parent""&#xD;&#xA;            android:fitsSystemWindows=""true""&#xD;&#xA;            tools:context="".MainActivity"">&#xD;&#xA;        &#xD;&#xA;            <LinearLayout&#xD;&#xA;                android:layout_height=""match_parent""&#xD;&#xA;                android:layout_width=""match_parent""&#xD;&#xA;                android:orientation=""vertical""&#xD;&#xA;                >&#xD;&#xA;                <include&#xD;&#xA;                    android:id=""@+id/toolbar""&#xD;&#xA;                    layout=""@layout/tool_bar""&#xD;&#xA;                    />&#xD;&#xA;                <FrameLayout&#xD;&#xA;                    android:id=""@+id/frame""&#xD;&#xA;                    android:layout_width=""match_parent""&#xD;&#xA;                    android:layout_height=""match_parent"">&#xD;&#xA;        &#xD;&#xA;                </FrameLayout>&#xD;&#xA;        &#xD;&#xA;            </LinearLayout>&#xD;&#xA;        &#xD;&#xA;            <android.support.design.widget.NavigationView&#xD;&#xA;                android:id=""@+id/navigation_view""&#xD;&#xA;                android:layout_height=""match_parent""&#xD;&#xA;                android:layout_width=""wrap_content""&#xD;&#xA;                android:layout_gravity=""start""&#xD;&#xA;                app:headerLayout=""@layout/header""&#xD;&#xA;                app:menu=""@menu/drawer""&#xD;&#xA;                />&#xD;&#xA;        </android.support.v4.widget.DrawerLayout>&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        "
-5707093640054936383,41,6,"        /* creates a compressed zip file */&#xD;&#xA;    function create_zip($files = array(),$destination = '',$overwrite = false) {&#xD;&#xA;    	//if the zip file already exists and overwrite is false, return false&#xD;&#xA;    	if(file_exists($destination) && !$overwrite) { return false; }&#xD;&#xA;    	//vars&#xD;&#xA;    	$valid_files = array();&#xD;&#xA;    	//if files were passed in...&#xD;&#xA;    	if(is_array($files)) {&#xD;&#xA;    		//cycle through each file&#xD;&#xA;    		foreach($files as $file) {&#xD;&#xA;    			//make sure the file exists&#xD;&#xA;    			if(file_exists($file)) {&#xD;&#xA;    				$valid_files[] = $file;&#xD;&#xA;    			}&#xD;&#xA;    		}&#xD;&#xA;    	}&#xD;&#xA;    	//if we have good files...&#xD;&#xA;    	if(count($valid_files)) {&#xD;&#xA;    		//create the archive&#xD;&#xA;    		$zip = new ZipArchive();&#xD;&#xA;    		if($zip->open($destination,$overwrite ? ZIPARCHIVE::OVERWRITE : ZIPARCHIVE::CREATE) !== true) {&#xD;&#xA;    			return false;&#xD;&#xA;    		}&#xD;&#xA;    		//add the files&#xD;&#xA;    		foreach($valid_files as $file) {&#xD;&#xA;    			$zip->addFile($file,$file);&#xD;&#xA;    		}&#xD;&#xA;    		//debug&#xD;&#xA;    		//echo 'The zip archive contains ',$zip->numFiles,' files with a status of ',$zip->status;&#xD;&#xA;    		&#xD;&#xA;    		//close the zip -- done!&#xD;&#xA;    		$zip->close();&#xD;&#xA;    		&#xD;&#xA;    		//check to make sure the file exists&#xD;&#xA;    		return file_exists($destination);&#xD;&#xA;    	}&#xD;&#xA;    	else&#xD;&#xA;    	{&#xD;&#xA;    		return false;&#xD;&#xA;    	}&#xD;&#xA;    }"
-3973337732749738974,41,6,"	<!DOCTYPE html>&#xD;&#xA;	  <html>&#xD;&#xA;		<head>&#xD;&#xA;		<meta charset=""utf-8"" />&#xD;&#xA;		<meta name=""viewport"" content=""widdiv=device-widdiv, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"" />&#xD;&#xA;		<meta name=""apple-mobile-web-app-capable"" content=""yes"" />&#xD;&#xA;		<meta name=""apple-mobile-web-app-status-bar-style"" content=""black"" />&#xD;&#xA;		<title>&#xD;&#xA;		</title>&#xD;&#xA;		<link rel=""stylesheet"" href=""http://code.jquery.com/mobile/1.2.0/jquery.mobile-1.2.0.min.css"" />&#xD;&#xA;		<script src=""http://www.dragan-gaic.info/js/jquery-1.8.2.min.js"">&#xD;&#xA;		</script>&#xD;&#xA;		<script src=""http://code.jquery.com/mobile/1.2.0/jquery.mobile-1.2.0.min.js""></script>  &#xD;&#xA;		<script>&#xD;&#xA;			$(document).on('pagebeforeshow', ""#index"",function () {&#xD;&#xA;				$(document).on('click', ""#changePage"",function () {		&#xD;&#xA;					$.mobile.changePage('second.html', { dataUrl : ""second.html?paremeter=123"", data : { 'paremeter' : '123' }, reloadPage : false, changeHash : true });&#xD;&#xA;				});	&#xD;&#xA;			});	&#xD;&#xA;			&#xD;&#xA;			$(document).on('pagebeforeshow', ""#second"",function () {&#xD;&#xA;				var parameters = $(this).data(""url"").split(""?"")[1];;&#xD;&#xA;				parameter = parameters.replace(""parameter="","""");  &#xD;&#xA;				alert(parameter);&#xD;&#xA;			});			&#xD;&#xA;		</script>&#xD;&#xA;	   </head>&#xD;&#xA;	   <body>&#xD;&#xA;		<!-- Home -->&#xD;&#xA;		<div data-role=""page"" id=""index"">&#xD;&#xA;			<div data-role=""header"">&#xD;&#xA;				<h3>&#xD;&#xA;					First Page&#xD;&#xA;				</h3>&#xD;&#xA;			</div>&#xD;&#xA;			<div data-role=""content"">&#xD;&#xA;			  <a data-role=""button"" id=""changePage"">Test</a>&#xD;&#xA;			</div> <!--content-->&#xD;&#xA;		</div><!--page-->&#xD;&#xA;	  </body>&#xD;&#xA;	</html>"
6655500920933732912,41,6,"    var h1 = document.getElementsByTagName('h1')[0],&#xD;&#xA;        start = document.getElementById('start'),&#xD;&#xA;        stop = document.getElementById('stop'),&#xD;&#xA;        clear = document.getElementById('clear'),&#xD;&#xA;        seconds = 0, minutes = 0, hours = 0,&#xD;&#xA;        t;&#xD;&#xA;    &#xD;&#xA;    function add() {&#xD;&#xA;        seconds++;&#xD;&#xA;        if (seconds >= 60) {&#xD;&#xA;            seconds = 0;&#xD;&#xA;            minutes++;&#xD;&#xA;            if (minutes >= 60) {&#xD;&#xA;                minutes = 0;&#xD;&#xA;                hours++;&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        h1.textContent = (hours ? (hours > 9 ? hours : ""0"" + hours) : ""00"") + "":"" + (minutes ? (minutes > 9 ? minutes : ""0"" + minutes) : ""00"") + "":"" + (seconds > 9 ? seconds : ""0"" + seconds);&#xD;&#xA;    &#xD;&#xA;        timer();&#xD;&#xA;    }&#xD;&#xA;    function timer() {&#xD;&#xA;        t = setTimeout(add, 1000);&#xD;&#xA;    }&#xD;&#xA;    timer();&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    /* Start button */&#xD;&#xA;    start.onclick = timer;&#xD;&#xA;    &#xD;&#xA;    /* Stop button */&#xD;&#xA;    stop.onclick = function() {&#xD;&#xA;        clearTimeout(t);&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    /* Clear button */&#xD;&#xA;    clear.onclick = function() {&#xD;&#xA;        h1.textContent = ""00:00:00"";&#xD;&#xA;        seconds = 0; minutes = 0; hours = 0;&#xD;&#xA;    }"
828219184346715700,41,6,"    public class MainActivity extends Activity {&#xD;&#xA;    &#xD;&#xA;        private static LatLng goodLatLng = new LatLng(37, -120);&#xD;&#xA;        private GoogleMap googleMap;&#xD;&#xA;        private EditText et_address, et_finalAddress;&#xD;&#xA;        LatLng addressPos, finalAddressPos;&#xD;&#xA;        Marker addressMarker;&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        protected void onCreate(Bundle savedInstanceState) {&#xD;&#xA;            super.onCreate(savedInstanceState);&#xD;&#xA;            setContentView(R.layout.activity_main);&#xD;&#xA;    &#xD;&#xA;            et_address = (EditText) findViewById(R.id.addressEditText);&#xD;&#xA;            et_finalAddress = (EditText) findViewById(R.id.finalAddressEditText);&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            // Initial Map&#xD;&#xA;            try {&#xD;&#xA;    &#xD;&#xA;                if (googleMap == null) {&#xD;&#xA;                    googleMap = ((MapFragment) getFragmentManager().findFragmentById(R.id.map)).getMap();&#xD;&#xA;                }&#xD;&#xA;            } catch (Exception e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            googleMap.setMapType(GoogleMap.MAP_TYPE_HYBRID);&#xD;&#xA;            // Put a dot on my current location&#xD;&#xA;            googleMap.setMyLocationEnabled(true);&#xD;&#xA;            googleMap.setIndoorEnabled(true);&#xD;&#xA;            googleMap.setTrafficEnabled(true);&#xD;&#xA;            // 3D building&#xD;&#xA;            googleMap.setBuildingsEnabled(true);&#xD;&#xA;            // Get zoom button&#xD;&#xA;            googleMap.getUiSettings().setZoomControlsEnabled(true);&#xD;&#xA;    &#xD;&#xA;            Marker marker = googleMap.addMarker(new MarkerOptions()&#xD;&#xA;                    .position(goodLatLng)&#xD;&#xA;                    .title(""Hello""));&#xD;&#xA;        }"
-3176323533132816758,42,6,    struct _IO_FILE {&#xD;&#xA;      int _flags;		/* High-order word is _IO_MAGIC; rest is flags. */&#xD;&#xA;    #define _IO_file_flags _flags&#xD;&#xA;    &#xD;&#xA;      /* The following pointers correspond to the C++ streambuf protocol. */&#xD;&#xA;      /* Note:  Tk uses the _IO_read_ptr and _IO_read_end fields directly. */&#xD;&#xA;      char* _IO_read_ptr;	/* Current read pointer */&#xD;&#xA;      char* _IO_read_end;	/* End of get area. */&#xD;&#xA;      char* _IO_read_base;	/* Start of putback+get area. */&#xD;&#xA;      char* _IO_write_base;	/* Start of put area. */&#xD;&#xA;      char* _IO_write_ptr;	/* Current put pointer. */&#xD;&#xA;      char* _IO_write_end;	/* End of put area. */&#xD;&#xA;      char* _IO_buf_base;	/* Start of reserve area. */&#xD;&#xA;      char* _IO_buf_end;	/* End of reserve area. */&#xD;&#xA;      /* The following fields are used to support backing up and undo. */&#xD;&#xA;      char *_IO_save_base; /* Pointer to start of non-current get area. */&#xD;&#xA;      char *_IO_backup_base;  /* Pointer to first valid character of backup area */&#xD;&#xA;      char *_IO_save_end; /* Pointer to end of non-current get area. */&#xD;&#xA;    &#xD;&#xA;      struct _IO_marker *_markers;&#xD;&#xA;    &#xD;&#xA;      struct _IO_FILE *_chain;&#xD;&#xA;    &#xD;&#xA;      int _fileno;&#xD;&#xA;    #if 0&#xD;&#xA;      int _blksize;&#xD;&#xA;    #else&#xD;&#xA;      int _flags2;&#xD;&#xA;    #endif&#xD;&#xA;      _IO_off_t _old_offset; /* This used to be _offset but it's too small.  */&#xD;&#xA;    &#xD;&#xA;    #define __HAVE_COLUMN /* temporary */&#xD;&#xA;      /* 1+column number of pbase(); 0 is unknown. */&#xD;&#xA;      unsigned short _cur_column;&#xD;&#xA;      signed char _vtable_offset;&#xD;&#xA;      char _shortbuf[1];&#xD;&#xA;    &#xD;&#xA;      /*  char* _save_gptr;  char* _save_egptr; */&#xD;&#xA;    &#xD;&#xA;      _IO_lock_t *_lock;&#xD;&#xA;    #ifdef _IO_USE_OLD_IO_FILE&#xD;&#xA;    };
3245038168618351625,43,6,"    function calcage(secs, num1, num2) {&#xD;&#xA;        s = ((Math.floor(secs / num1)) % num2).toString();&#xD;&#xA;        if (LeadingZero && s.length < 2) s = ""0"" + s;&#xD;&#xA;        return ""<b>"" + s + ""</b>"";&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    function CountBack(secs) {&#xD;&#xA;        if (secs < 0) {&#xD;&#xA;            document.getElementById(""cntdwn"").innerHTML = FinishMessage;&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            return;&#xD;&#xA;        }&#xD;&#xA;        DisplayStr = DisplayFormat.replace(/%%D%%/g, calcage(secs, 86400, 100000));&#xD;&#xA;        DisplayStr = DisplayStr.replace(/%%H%%/g, calcage(secs, 3600, 24));&#xD;&#xA;        DisplayStr = DisplayStr.replace(/%%M%%/g, calcage(secs, 60, 60));&#xD;&#xA;        DisplayStr = DisplayStr.replace(/%%S%%/g, calcage(secs, 1, 60));&#xD;&#xA;        document.getElementById(""cntdwn"").innerHTML = DisplayStr;&#xD;&#xA;        if (CountActive) setTimeout(""CountBack("" + (secs + CountStepper) + "")"", SetTimeOutPeriod);&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    function putspan(backcolor, forecolor) {&#xD;&#xA;        document.write(""<span id='cntdwn' style='background-color:"" + backcolor + ""; color:"" + forecolor + ""'></span>"");&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    if (typeof(BackColor) == ""undefined"") BackColor = ""white"";&#xD;&#xA;    if (typeof(ForeColor) == ""undefined"") ForeColor = ""black"";&#xD;&#xA;    if (typeof(TargetDate) == ""undefined"") TargetDate = ""12/31/2020 5:00 AM"";&#xD;&#xA;    if (typeof(DisplayFormat) == ""undefined"") DisplayFormat = ""%%D%% Days, %%H%% Hours, %%M%% Minutes, %%S%% Seconds."";&#xD;&#xA;    if (typeof(CountActive) == ""undefined"") CountActive = true;&#xD;&#xA;    if (typeof(FinishMessage) == ""undefined"") FinishMessage = """";&#xD;&#xA;    if (typeof(CountStepper) != ""number"") CountStepper = -1;&#xD;&#xA;    if (typeof(LeadingZero) == ""undefined"") LeadingZero = true;&#xD;&#xA;    CountStepper = Math.ceil(CountStepper);&#xD;&#xA;    if (CountStepper == 0) CountActive = false;&#xD;&#xA;    var SetTimeOutPeriod = (Math.abs(CountStepper) - 1) * 1000 + 990;&#xD;&#xA;    putspan(BackColor, ForeColor);&#xD;&#xA;    var dthen = new Date(TargetDate);&#xD;&#xA;    var dnow = new Date();&#xD;&#xA;    if (CountStepper > 0) ddiff = new Date(dnow - dthen);&#xD;&#xA;    else ddiff = new Date(dthen - dnow);&#xD;&#xA;    gsecs = Math.floor(ddiff.valueOf() / 1000);&#xD;&#xA;    CountBack(gsecs);​"
-7285716177730457785,43,6,"    {&#xD;&#xA;      // Chats contains only meta info about each conversation&#xD;&#xA;      // stored under the chats's unique ID&#xD;&#xA;      ""chats"": {&#xD;&#xA;        ""one"": {&#xD;&#xA;          ""title"": ""Historical Tech Pioneers"",&#xD;&#xA;          ""lastMessage"": ""ghopper: Relay malfunction found. Cause: moth."",&#xD;&#xA;          ""timestamp"": 1459361875666&#xD;&#xA;        },&#xD;&#xA;        ""two"": { ... },&#xD;&#xA;        ""three"": { ... }&#xD;&#xA;      },&#xD;&#xA;    &#xD;&#xA;      // Conversation members are easily accessible&#xD;&#xA;      // and stored by chat conversation ID&#xD;&#xA;      ""members"": {&#xD;&#xA;        // we'll talk about indices like this below&#xD;&#xA;        ""one"": {&#xD;&#xA;          ""ghopper"": true,&#xD;&#xA;          ""alovelace"": true,&#xD;&#xA;          ""eclarke"": true&#xD;&#xA;        },&#xD;&#xA;        ""two"": { ... },&#xD;&#xA;        ""three"": { ... }&#xD;&#xA;      },&#xD;&#xA;    &#xD;&#xA;      // Messages are separate from data we may want to iterate quickly&#xD;&#xA;      // but still easily paginated and queried, and organized by chat&#xD;&#xA;      // conversation ID&#xD;&#xA;      ""messages"": {&#xD;&#xA;        ""one"": {&#xD;&#xA;          ""m1"": {&#xD;&#xA;            ""name"": ""eclarke"",&#xD;&#xA;            ""message"": ""The relay seems to be malfunctioning."",&#xD;&#xA;            ""timestamp"": 1459361875337&#xD;&#xA;          },&#xD;&#xA;          ""m2"": { ... },&#xD;&#xA;          ""m3"": { ... }&#xD;&#xA;        },&#xD;&#xA;        ""two"": { ... },&#xD;&#xA;        ""three"": { ... }&#xD;&#xA;      }&#xD;&#xA;    }"
5248273705232708188,43,6,"        $(document).ready(function(){&#xD;&#xA;        animateDiv();&#xD;&#xA;        &#xD;&#xA;    });&#xD;&#xA;    &#xD;&#xA;    function makeNewPosition(){&#xD;&#xA;        &#xD;&#xA;        // Get viewport dimensions (remove the dimension of the div)&#xD;&#xA;        var h = $(window).height() - 50;&#xD;&#xA;        var w = $(window).width() - 50;&#xD;&#xA;        &#xD;&#xA;        var nh = Math.floor(Math.random() * h);&#xD;&#xA;        var nw = Math.floor(Math.random() * w);&#xD;&#xA;        &#xD;&#xA;        return [nh,nw];    &#xD;&#xA;        &#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    function animateDiv(){&#xD;&#xA;        var newq = makeNewPosition();&#xD;&#xA;        var oldq = $('.a').offset();&#xD;&#xA;        var speed = calcSpeed([oldq.top, oldq.left], newq);&#xD;&#xA;        &#xD;&#xA;        $('.a').animate({ top: newq[0], left: newq[1] }, speed, function(){&#xD;&#xA;          animateDiv();        &#xD;&#xA;        });&#xD;&#xA;        &#xD;&#xA;    };&#xD;&#xA;    &#xD;&#xA;    function calcSpeed(prev, next) {&#xD;&#xA;        &#xD;&#xA;        var x = Math.abs(prev[1] - next[1]);&#xD;&#xA;        var y = Math.abs(prev[0] - next[0]);&#xD;&#xA;        &#xD;&#xA;        var greatest = x > y ? x : y;&#xD;&#xA;        &#xD;&#xA;        var speedModifier = 0.1;&#xD;&#xA;    &#xD;&#xA;        var speed = Math.ceil(greatest/speedModifier);&#xD;&#xA;    &#xD;&#xA;        return speed;&#xD;&#xA;    &#xD;&#xA;    }"
641271774608017570,43,6,"    #include <sys/socket.h>&#xD;&#xA;    #include <netinet/in.h>&#xD;&#xA;    #include <arpa/inet.h>&#xD;&#xA;    #include <stdio.h>&#xD;&#xA;    #include <stdlib.h>&#xD;&#xA;    #include <unistd.h>&#xD;&#xA;    #include <errno.h>&#xD;&#xA;    #include <string.h>&#xD;&#xA;    #include <sys/types.h>&#xD;&#xA;    #include <time.h> &#xD;&#xA;    &#xD;&#xA;    int main(int argc, char *argv[])&#xD;&#xA;    {&#xD;&#xA;        int listenfd = 0, connfd = 0;&#xD;&#xA;        struct sockaddr_in serv_addr; &#xD;&#xA;    &#xD;&#xA;        char sendBuff[1025];&#xD;&#xA;        time_t ticks; &#xD;&#xA;    &#xD;&#xA;        listenfd = socket(AF_INET, SOCK_STREAM, 0);&#xD;&#xA;        memset(&serv_addr, '0', sizeof(serv_addr));&#xD;&#xA;        memset(sendBuff, '0', sizeof(sendBuff)); &#xD;&#xA;    &#xD;&#xA;        serv_addr.sin_family = AF_INET;&#xD;&#xA;        serv_addr.sin_addr.s_addr = htonl(INADDR_ANY);&#xD;&#xA;        serv_addr.sin_port = htons(5000); &#xD;&#xA;    &#xD;&#xA;        bind(listenfd, (struct sockaddr*)&serv_addr, sizeof(serv_addr)); &#xD;&#xA;    &#xD;&#xA;        listen(listenfd, 10); &#xD;&#xA;    &#xD;&#xA;        while(1)&#xD;&#xA;        {&#xD;&#xA;            connfd = accept(listenfd, (struct sockaddr*)NULL, NULL); &#xD;&#xA;    &#xD;&#xA;            ticks = time(NULL);&#xD;&#xA;            snprintf(sendBuff, sizeof(sendBuff), ""%.24s\r\n"", ctime(&ticks));&#xD;&#xA;            write(connfd, sendBuff, strlen(sendBuff)); &#xD;&#xA;    &#xD;&#xA;            close(connfd);&#xD;&#xA;            sleep(1);&#xD;&#xA;         }&#xD;&#xA;    }"
8292775010905863343,44,6,"      ##  See http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-mapping-template-reference.html&#xD;&#xA;    ##  This template will pass through all parameters including path, querystring, header, stage variables, and context through to the integration endpoint via the body/payload&#xD;&#xA;    #set($allParams = $input.params())&#xD;&#xA;    {&#xD;&#xA;    ""body-json"" : $input.json('$'),&#xD;&#xA;    ""params"" : {&#xD;&#xA;    #foreach($type in $allParams.keySet())&#xD;&#xA;        #set($params = $allParams.get($type))&#xD;&#xA;    ""$type"" : {&#xD;&#xA;        #foreach($paramName in $params.keySet())&#xD;&#xA;        ""$paramName"" : ""$util.escapeJavaScript($params.get($paramName))""&#xD;&#xA;            #if($foreach.hasNext),#end&#xD;&#xA;        #end&#xD;&#xA;    }&#xD;&#xA;        #if($foreach.hasNext),#end&#xD;&#xA;    #end&#xD;&#xA;    },&#xD;&#xA;    ""stage-variables"" : {&#xD;&#xA;    #foreach($key in $stageVariables.keySet())&#xD;&#xA;    ""$key"" : ""$util.escapeJavaScript($stageVariables.get($key))""&#xD;&#xA;        #if($foreach.hasNext),#end&#xD;&#xA;    #end&#xD;&#xA;    },&#xD;&#xA;    ""context"" : {&#xD;&#xA;        ""account-id"" : ""$context.identity.accountId"",&#xD;&#xA;        ""api-id"" : ""$context.apiId"",&#xD;&#xA;        ""api-key"" : ""$context.identity.apiKey"",&#xD;&#xA;        ""authorizer-principal-id"" : ""$context.authorizer.principalId"",&#xD;&#xA;        ""caller"" : ""$context.identity.caller"",&#xD;&#xA;        ""cognito-authentication-provider"" : ""$context.identity.cognitoAuthenticationProvider"",&#xD;&#xA;        ""cognito-authentication-type"" : ""$context.identity.cognitoAuthenticationType"",&#xD;&#xA;        ""cognito-identity-id"" : ""$context.identity.cognitoIdentityId"",&#xD;&#xA;        ""cognito-identity-pool-id"" : ""$context.identity.cognitoIdentityPoolId"",&#xD;&#xA;        ""http-method"" : ""$context.httpMethod"",&#xD;&#xA;        ""stage"" : ""$context.stage"",&#xD;&#xA;        ""source-ip"" : ""$context.identity.sourceIp"",&#xD;&#xA;        ""user"" : ""$context.identity.user"",&#xD;&#xA;        ""user-agent"" : ""$context.identity.userAgent"",&#xD;&#xA;        ""user-arn"" : ""$context.identity.userArn"",&#xD;&#xA;        ""request-id"" : ""$context.requestId"",&#xD;&#xA;        ""resource-id"" : ""$context.resourceId"",&#xD;&#xA;        ""resource-path"" : ""$context.resourcePath""&#xD;&#xA;        }&#xD;&#xA;    }"
5773749143934276782,44,6,"    import android.graphics.Paint;&#xD;&#xA;    import android.graphics.Typeface;&#xD;&#xA;    import android.text.TextPaint;&#xD;&#xA;    import android.text.style.TypefaceSpan;&#xD;&#xA;    &#xD;&#xA;        public class CustomTypefaceSpan extends TypefaceSpan {&#xD;&#xA;            private final Typeface newType;&#xD;&#xA;    &#xD;&#xA;            public CustomTypefaceSpan(String family, Typeface type) {&#xD;&#xA;                super(family);&#xD;&#xA;                newType = type;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            public void updateDrawState(TextPaint ds) {&#xD;&#xA;                applyCustomTypeFace(ds, newType);&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            public void updateMeasureState(TextPaint paint) {&#xD;&#xA;                applyCustomTypeFace(paint, newType);&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            private static void applyCustomTypeFace(Paint paint, Typeface tf) {&#xD;&#xA;                int oldStyle;&#xD;&#xA;                Typeface old = paint.getTypeface();&#xD;&#xA;                if (old == null) {&#xD;&#xA;                    oldStyle = 0;&#xD;&#xA;                } else {&#xD;&#xA;                    oldStyle = old.getStyle();&#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;                int fake = oldStyle & ~tf.getStyle();&#xD;&#xA;                if ((fake & Typeface.BOLD) != 0) {&#xD;&#xA;                    paint.setFakeBoldText(true);&#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;                if ((fake & Typeface.ITALIC) != 0) {&#xD;&#xA;                    paint.setTextSkewX(-0.25f);&#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;                paint.setTypeface(tf);&#xD;&#xA;            }&#xD;&#xA;        }"
-4732399677531967699,45,6,"        public class MyAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder> {&#xD;&#xA;        class ViewHolder0 extends RecyclerView.ViewHolder {&#xD;&#xA;            ...&#xD;&#xA;            public ViewHolder0(View itemView){&#xD;&#xA;            ...&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        class ViewHolder2 extends RecyclerView.ViewHolder {&#xD;&#xA;            ...&#xD;&#xA;            public ViewHolder2(View itemView){&#xD;&#xA;            ...&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public int getItemViewType(int position) {&#xD;&#xA;            // Just as an example, return 0 or 2 depending on position&#xD;&#xA;            // Note that unlike in ListView adapters, types don't have to be contiguous&#xD;&#xA;            return position % 2 * 2;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {&#xD;&#xA;             switch (viewType) {&#xD;&#xA;                 case 0: return new ViewHolder0(...);&#xD;&#xA;                 case 2: return new ViewHolder2(...);&#xD;&#xA;                 ...&#xD;&#xA;             }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void onBindViewHolder(final RecyclerView.ViewHolder holder, final int position) {&#xD;&#xA;            switch (holder.getItemViewType()) {&#xD;&#xA;                case 0:&#xD;&#xA;                    ViewHolder0 viewHolder0 = (ViewHolder0)holder;&#xD;&#xA;                    ...&#xD;&#xA;                    break;&#xD;&#xA;    &#xD;&#xA;                case 2:&#xD;&#xA;                    ViewHolder2 viewHolder2 = (ViewHolder2)holder;&#xD;&#xA;                    ...&#xD;&#xA;                    break;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }"
8692048876370895199,45,6,"                    var grid = $(""#grid"").kendoGrid({&#xD;&#xA;            dataSource: {&#xD;&#xA;                type           : ""odata"",&#xD;&#xA;                transport      : {&#xD;&#xA;                    read: ""http://demos.kendoui.com/service/Northwind.svc/Orders""&#xD;&#xA;                },&#xD;&#xA;                schema         : {&#xD;&#xA;                    model: {&#xD;&#xA;                        fields: {&#xD;&#xA;                            OrderID  : { type: ""number"" },&#xD;&#xA;                            Freight  : { type: ""number"" },&#xD;&#xA;                            ShipName : { type: ""string"" },&#xD;&#xA;                            OrderDate: { type: ""date"" },&#xD;&#xA;                            ShipCity : { type: ""string"" }&#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;                },&#xD;&#xA;                pageSize       : 10&#xD;&#xA;            },&#xD;&#xA;            filterable: true,&#xD;&#xA;            sortable  : true,&#xD;&#xA;            pageable  : true,&#xD;&#xA;            columns   : [&#xD;&#xA;                {&#xD;&#xA;                    field     : ""OrderID"",&#xD;&#xA;                    filterable: false&#xD;&#xA;                },&#xD;&#xA;                ""Freight"",&#xD;&#xA;                {&#xD;&#xA;                    field : ""OrderDate"",&#xD;&#xA;                    title : ""Order Date"",&#xD;&#xA;                    width : 100,&#xD;&#xA;                    format: ""{0:MM/dd/yyyy}""&#xD;&#xA;                },&#xD;&#xA;                {&#xD;&#xA;                    field: ""ShipName"",&#xD;&#xA;                    title: ""Ship Name"",&#xD;&#xA;                    width: 200&#xD;&#xA;                },&#xD;&#xA;                {&#xD;&#xA;                    field: ""ShipCity"",&#xD;&#xA;                    title: ""Ship City""&#xD;&#xA;                }&#xD;&#xA;            ]&#xD;&#xA;        }).data(""kendoGrid"");"
-8912628690135773283,45,6,"        ListView listView = getListView();&#xD;&#xA;        listView.setChoiceMode(ListView.CHOICE_MODE_MULTIPLE_MODAL);&#xD;&#xA;        listView.setMultiChoiceModeListener(new MultiChoiceModeListener() {&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void onItemCheckedStateChanged(ActionMode mode, int position,&#xD;&#xA;                                              long id, boolean checked) {&#xD;&#xA;            // Here you can do something when items are selected/de-selected,&#xD;&#xA;            // such as update the title in the CAB&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public boolean onActionItemClicked(ActionMode mode, MenuItem item) {&#xD;&#xA;            // Respond to clicks on the actions in the CAB&#xD;&#xA;            switch (item.getItemId()) {&#xD;&#xA;                case R.id.menu_delete:&#xD;&#xA;                    deleteSelectedItems();&#xD;&#xA;                    mode.finish(); // Action picked, so close the CAB&#xD;&#xA;                    return true;&#xD;&#xA;                default:&#xD;&#xA;                    return false;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public boolean onCreateActionMode(ActionMode mode, Menu menu) {&#xD;&#xA;            // Inflate the menu for the CAB&#xD;&#xA;            MenuInflater inflater = mode.getMenuInflater();&#xD;&#xA;            inflater.inflate(R.menu.context, menu);&#xD;&#xA;            return true;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void onDestroyActionMode(ActionMode mode) {&#xD;&#xA;            // Here you can make any necessary updates to the activity when&#xD;&#xA;            // the CAB is removed. By default, selected items are deselected/unchecked.&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public boolean onPrepareActionMode(ActionMode mode, Menu menu) {&#xD;&#xA;            // Here you can perform updates to the CAB due to&#xD;&#xA;            // an invalidate() request&#xD;&#xA;            return false;&#xD;&#xA;        }&#xD;&#xA;        });"
7526823316434792931,45,6,"	<?php&#xD;&#xA;	use Illuminate\Auth\UserInterface;&#xD;&#xA;	use Illuminate\Auth\Reminders\RemindableInterface;&#xD;&#xA;	class User extends Eloquent implements UserInterface, RemindableInterface {&#xD;&#xA;		/**&#xD;&#xA;		 * The database table used by the model.&#xD;&#xA;		 *&#xD;&#xA;		 * @var string&#xD;&#xA;		 */&#xD;&#xA;		protected $table = 'users';&#xD;&#xA;		/**&#xD;&#xA;		 * The attributes excluded from the model's JSON form.&#xD;&#xA;		 *&#xD;&#xA;		 * @var array&#xD;&#xA;		 */&#xD;&#xA;		protected $hidden = array('password');&#xD;&#xA;		/**&#xD;&#xA;		 * Get the unique identifier for the user.&#xD;&#xA;		 *&#xD;&#xA;		 * @return mixed&#xD;&#xA;		 */&#xD;&#xA;		public function getAuthIdentifier()&#xD;&#xA;		{&#xD;&#xA;			return $this->getKey();&#xD;&#xA;		}&#xD;&#xA;		/**&#xD;&#xA;		 * Get the password for the user.&#xD;&#xA;		 *&#xD;&#xA;		 * @return string&#xD;&#xA;		 */&#xD;&#xA;		public function getAuthPassword()&#xD;&#xA;		{&#xD;&#xA;			return $this->password;&#xD;&#xA;		}&#xD;&#xA;		&#xD;&#xA;		/**&#xD;&#xA;		 * Get the e-mail address where password reminders are sent.&#xD;&#xA;		 *&#xD;&#xA;		 * @return string&#xD;&#xA;		 */&#xD;&#xA;		public function getReminderEmail()&#xD;&#xA;		{&#xD;&#xA;			return $this->email;&#xD;&#xA;		}&#xD;&#xA;	}"
-8036041495868358179,45,6,"	$(function() {&#xD;&#xA;		function split( val ) {&#xD;&#xA;			return val.split( /,\s*/ );&#xD;&#xA;		}&#xD;&#xA;		function extractLast( term ) {&#xD;&#xA;			return split( term ).pop();&#xD;&#xA;		}&#xD;&#xA;		$( ""#friends"" )&#xD;&#xA;			// don't navigate away from the field on tab when selecting an item&#xD;&#xA;			.bind( ""keydown"", function( event ) {&#xD;&#xA;				if ( event.keyCode === $.ui.keyCode.TAB &&&#xD;&#xA;						$( this ).data( ""autocomplete"" ).menu.active ) {&#xD;&#xA;					event.preventDefault();&#xD;&#xA;				}&#xD;&#xA;			})&#xD;&#xA;			.autocomplete({&#xD;&#xA;				source: function( request, response ) {&#xD;&#xA;					$.getJSON( ""search.php"", {&#xD;&#xA;						term: extractLast( request.term )&#xD;&#xA;					}, response );&#xD;&#xA;				},&#xD;&#xA;				search: function() {&#xD;&#xA;					// custom minLength&#xD;&#xA;					var term = extractLast( this.value );&#xD;&#xA;					if ( term.length < 2 ) {&#xD;&#xA;						return false;&#xD;&#xA;					}&#xD;&#xA;				},&#xD;&#xA;				focus: function() {&#xD;&#xA;					// prevent value inserted on focus&#xD;&#xA;					return false;&#xD;&#xA;				},&#xD;&#xA;				select: function( event, ui ) {&#xD;&#xA;					var terms = split( this.value );&#xD;&#xA;					// remove the current input&#xD;&#xA;					terms.pop();&#xD;&#xA;					// add the selected item&#xD;&#xA;					terms.push( ui.item.value );&#xD;&#xA;					// add placeholder to get the comma-and-space at the end&#xD;&#xA;					terms.push( """" );&#xD;&#xA;					this.value = terms.join( "", "" );&#xD;&#xA;					return false;&#xD;&#xA;				}&#xD;&#xA;			});&#xD;&#xA;	});"
3218127694042739761,45,6,"    Option Explicit&#xD;&#xA;    Dim MyScriptPath &#xD;&#xA;    MyScriptPath = WScript.ScriptFullName&#xD;&#xA;    Call Shortcut(MyScriptPath,""Shutdown the computer"")&#xD;&#xA;    Call AskQuestion()&#xD;&#xA;    '**********************************************************************************************&#xD;&#xA;    Sub Shortcut(PathApplication,Name)&#xD;&#xA;    	Dim objShell,DesktopPath,objShortCut,MyTab&#xD;&#xA;    	Set objShell = CreateObject(""WScript.Shell"")&#xD;&#xA;    	MyTab = Split(PathApplication,""\"")&#xD;&#xA;    	If Name = """" Then&#xD;&#xA;    		Name = MyTab(UBound(MyTab))&#xD;&#xA;    	End if&#xD;&#xA;    	DesktopPath = objShell.SpecialFolders(""Desktop"")&#xD;&#xA;    	Set objShortCut = objShell.CreateShortcut(DesktopPath & ""\"" & Name & "".lnk"")&#xD;&#xA;    	objShortCut.TargetPath = Dblquote(PathApplication)&#xD;&#xA;    	ObjShortCut.IconLocation = ""%SystemRoot%\system32\SHELL32.dll,-28""&#xD;&#xA;    	objShortCut.Save&#xD;&#xA;    End Sub&#xD;&#xA;    '**********************************************************************************************&#xD;&#xA;    Sub AskQuestion()&#xD;&#xA;    	Dim Question,Msg,Title&#xD;&#xA;    	Title = ""Shutdown the computer""&#xD;&#xA;    	Msg = ""Are you sure to shutdown the computer now ?""& Vbcr &_&#xD;&#xA;    	""If yes, then click [YES] button ""& Vbcr &_&#xD;&#xA;    	""If not, then click [NO] button""&#xD;&#xA;    	Question = MsgBox (Msg,VbYesNo+VbQuestion,Title)&#xD;&#xA;    	If Question = VbYes then&#xD;&#xA;    		Call Run_Shutdown(30)&#xD;&#xA;    	else&#xD;&#xA;    		WScript.Quit()&#xD;&#xA;    	End if&#xD;&#xA;    End Sub&#xD;&#xA;    '**********************************************************************************************&#xD;&#xA;    Function DblQuote(Str)&#xD;&#xA;    	DblQuote = Chr(34) & Str & Chr(34)&#xD;&#xA;    End Function&#xD;&#xA;    '**********************************************************************************************&#xD;&#xA;    Sub Run_Shutdown(N)&#xD;&#xA;    	Dim ws,Command,Execution&#xD;&#xA;    	Set ws = CreateObject(""wscript.Shell"")&#xD;&#xA;    	Command = ""Cmd /c Shutdown -s -t ""& N &"" -c ""& DblQuote(""Save your work because your PC will shut down in ""& N &"" seconds"")&#xD;&#xA;    	Execution = ws.run(Command,0,True)&#xD;&#xA;    End sub&#xD;&#xA;    '**********************************************************************************************"
3332126482560586514,45,6,"	private static void ExecuteSqlTransaction(string connectionString)&#xD;&#xA;	{&#xD;&#xA;		using (SqlConnection connection = new SqlConnection(connectionString))&#xD;&#xA;		{&#xD;&#xA;			connection.Open();&#xD;&#xA;			SqlCommand command = connection.CreateCommand();&#xD;&#xA;			SqlTransaction transaction;&#xD;&#xA;			// Start a local transaction.&#xD;&#xA;			transaction = connection.BeginTransaction(""SampleTransaction"");&#xD;&#xA;			// Must assign both transaction object and connection&#xD;&#xA;			// to Command object for a pending local transaction&#xD;&#xA;			command.Connection = connection;&#xD;&#xA;			command.Transaction = transaction;&#xD;&#xA;			try&#xD;&#xA;			{&#xD;&#xA;				command.CommandText =&#xD;&#xA;					""Insert into Region (RegionID, RegionDescription) VALUES (100, 'Description')"";&#xD;&#xA;				command.ExecuteNonQuery();&#xD;&#xA;				command.CommandText =&#xD;&#xA;					""Insert into Region (RegionID, RegionDescription) VALUES (101, 'Description')"";&#xD;&#xA;				command.ExecuteNonQuery();&#xD;&#xA;				// Attempt to commit the transaction.&#xD;&#xA;				transaction.Commit();&#xD;&#xA;				Console.WriteLine(""Both records are written to database."");&#xD;&#xA;			}&#xD;&#xA;			catch (Exception ex)&#xD;&#xA;			{&#xD;&#xA;				Console.WriteLine(""Commit Exception Type: {0}"", ex.GetType());&#xD;&#xA;				Console.WriteLine(""  Message: {0}"", ex.Message);&#xD;&#xA;				// Attempt to roll back the transaction.&#xD;&#xA;				try&#xD;&#xA;				{&#xD;&#xA;					transaction.Rollback();&#xD;&#xA;				}&#xD;&#xA;				catch (Exception ex2)&#xD;&#xA;				{&#xD;&#xA;					// This catch block will handle any errors that may have occurred&#xD;&#xA;					// on the server that would cause the rollback to fail, such as&#xD;&#xA;					// a closed connection.&#xD;&#xA;					Console.WriteLine(""Rollback Exception Type: {0}"", ex2.GetType());&#xD;&#xA;					Console.WriteLine(""  Message: {0}"", ex2.Message);&#xD;&#xA;				}&#xD;&#xA;			}&#xD;&#xA;		}&#xD;&#xA;	}"
2204159296135526730,46,6,"      <html>&#xD;&#xA;      <head>&#xD;&#xA;          <!--Load the AJAX API-->&#xD;&#xA;          <script type=""text/javascript"" src=""https://www.google.com/jsapi""></script>&#xD;&#xA;          <script type=""text/javascript"">&#xD;&#xA;        &#xD;&#xA;          // Load the Visualization API and the piechart package.&#xD;&#xA;          google.load('visualization', '1.0', {'packages':['corechart']});&#xD;&#xA;          &#xD;&#xA;          // Set a callback to run when the Google Visualization API is loaded.&#xD;&#xA;          google.setOnLoadCallback(drawChart);&#xD;&#xA;          &#xD;&#xA;          // Callback that creates and populates a data table, &#xD;&#xA;          // instantiates the pie chart, passes in the data and&#xD;&#xA;          // draws it.&#xD;&#xA;          function drawChart() {&#xD;&#xA;    &#xD;&#xA;          // Create the data table.&#xD;&#xA;          var data = new google.visualization.DataTable();&#xD;&#xA;          data.addColumn('string', 'Topping');&#xD;&#xA;          data.addColumn('number', 'Slices');&#xD;&#xA;          data.addRows([&#xD;&#xA;            ['Mushrooms', 3],&#xD;&#xA;            ['Onions', 1],&#xD;&#xA;            ['Olives', 1], &#xD;&#xA;            ['Zucchini', 1],&#xD;&#xA;            ['Pepperoni', 2]&#xD;&#xA;          ]);&#xD;&#xA;    &#xD;&#xA;          // Set chart options&#xD;&#xA;          var options = {'title':'How Much Pizza I Ate Last Night',&#xD;&#xA;                         'width':400,&#xD;&#xA;                         'height':300};&#xD;&#xA;    &#xD;&#xA;          // Instantiate and draw our chart, passing in some options.&#xD;&#xA;          var chart = new google.visualization.PieChart(document.getElementById('chart_div'));&#xD;&#xA;          chart.draw(data, options);&#xD;&#xA;        }&#xD;&#xA;        </script>&#xD;&#xA;      </head>&#xD;&#xA;    &#xD;&#xA;      <body>&#xD;&#xA;        <!--Div that will hold the pie chart-->&#xD;&#xA;        <div id=""chart_div""></div>&#xD;&#xA;      </body>&#xD;&#xA;    </html>"
1909019996700079846,46,6,"          private class PlacesAutoCompleteAdapter extends ArrayAdapter<String> implements Filterable {&#xD;&#xA;	    private ArrayList<String> resultList;&#xD;&#xA;	    &#xD;&#xA;	    public PlacesAutoCompleteAdapter(Context context, int textViewResourceId) {&#xD;&#xA;	        super(context, textViewResourceId);&#xD;&#xA;	    }&#xD;&#xA;	    &#xD;&#xA;	    @Override&#xD;&#xA;	    public int getCount() {&#xD;&#xA;	        return resultList.size();&#xD;&#xA;	    }&#xD;&#xA;	    @Override&#xD;&#xA;	    public String getItem(int index) {&#xD;&#xA;	        return resultList.get(index);&#xD;&#xA;	    }&#xD;&#xA;	    @Override&#xD;&#xA;	    public Filter getFilter() {&#xD;&#xA;	        Filter filter = new Filter() {&#xD;&#xA;	            @Override&#xD;&#xA;	            protected FilterResults performFiltering(CharSequence constraint) {&#xD;&#xA;	                FilterResults filterResults = new FilterResults();&#xD;&#xA;	                if (constraint != null) {&#xD;&#xA;	                    // Retrieve the autocomplete results.&#xD;&#xA;	                    resultList = autocomplete(constraint.toString());&#xD;&#xA;	                    &#xD;&#xA;	                    // Assign the data to the FilterResults&#xD;&#xA;	                    filterResults.values = resultList;&#xD;&#xA;	                    filterResults.count = resultList.size();&#xD;&#xA;	                }&#xD;&#xA;	                return filterResults;&#xD;&#xA;	            }&#xD;&#xA;	            @Override&#xD;&#xA;	            protected void publishResults(CharSequence constraint, FilterResults results) {&#xD;&#xA;	                if (results != null && results.count > 0) {&#xD;&#xA;	                    notifyDataSetChanged();&#xD;&#xA;	                }&#xD;&#xA;	                else {&#xD;&#xA;	                    notifyDataSetInvalidated();&#xD;&#xA;	                }&#xD;&#xA;	            }};&#xD;&#xA;	        return filter;&#xD;&#xA;	    }&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;        }&#xD;&#xA;    "
-534413657950845416,46,6,"    body {&#xD;&#xA;        padding-top: 60px;&#xD;&#xA;        padding-bottom: 40px;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .sidebar-nav {&#xD;&#xA;        padding: 9px 0;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .dropdown-menu .sub-menu {&#xD;&#xA;        left: 100%;&#xD;&#xA;        position: absolute;&#xD;&#xA;        top: 0;&#xD;&#xA;        visibility: hidden;&#xD;&#xA;        margin-top: -1px;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .dropdown-menu li:hover .sub-menu {&#xD;&#xA;        visibility: visible;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .dropdown:hover .dropdown-menu {&#xD;&#xA;        display: block;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .nav-tabs .dropdown-menu, .nav-pills .dropdown-menu, .navbar .dropdown-menu {&#xD;&#xA;        margin-top: 0;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .navbar .sub-menu:before {&#xD;&#xA;        border-bottom: 7px solid transparent;&#xD;&#xA;        border-left: none;&#xD;&#xA;        border-right: 7px solid rgba(0, 0, 0, 0.2);&#xD;&#xA;        border-top: 7px solid transparent;&#xD;&#xA;        left: -7px;&#xD;&#xA;        top: 10px;&#xD;&#xA;    }&#xD;&#xA;    .navbar .sub-menu:after {&#xD;&#xA;        border-top: 6px solid transparent;&#xD;&#xA;        border-left: none;&#xD;&#xA;        border-right: 6px solid #fff;&#xD;&#xA;        border-bottom: 6px solid transparent;&#xD;&#xA;        left: 10px;&#xD;&#xA;        top: 11px;&#xD;&#xA;        left: -6px;&#xD;&#xA;     }"
-5819583852953222940,46,6,"        <?php&#xD;&#xA;        require_once 'include/DB_Functions.php';&#xD;&#xA;    &#xD;&#xA;    $db = new DB_Functions();&#xD;&#xA;    // json response array&#xD;&#xA;    $response = array(""error"" => FALSE);&#xD;&#xA;    &#xD;&#xA;    if (isset($_POST['name']) && isset($_POST['email']) && isset($_POST['password'])) {&#xD;&#xA;    &#xD;&#xA;        // receiving the post params&#xD;&#xA;        $name = $_POST['name'];&#xD;&#xA;        $email = $_POST['email'];&#xD;&#xA;        $password = $_POST['password'];&#xD;&#xA;    &#xD;&#xA;        // check if user is already existed with the same email&#xD;&#xA;        if ($db->isUserExisted($email)) {&#xD;&#xA;            // user already existed&#xD;&#xA;            $response[""error""] = TRUE;&#xD;&#xA;            $response[""error_msg""] = ""User already existed with "" . $email;&#xD;&#xA;            echo json_encode($response);&#xD;&#xA;        } else {&#xD;&#xA;            // create a new user&#xD;&#xA;            $user = $db->storeUser($name, $email, $password);&#xD;&#xA;            if ($user) {&#xD;&#xA;                // user stored successfully&#xD;&#xA;                $response[""error""] = FALSE;&#xD;&#xA;                $response[""uid""] = $user[""unique_id""];&#xD;&#xA;                $response[""user""][""name""] = $user[""name""];&#xD;&#xA;                $response[""user""][""email""] = $user[""email""];&#xD;&#xA;                $response[""user""][""created_at""] = $user[""created_at""];&#xD;&#xA;                $response[""user""][""updated_at""] = $user[""updated_at""];&#xD;&#xA;                echo json_encode($response);&#xD;&#xA;            } else {&#xD;&#xA;                // user failed to store&#xD;&#xA;                $response[""error""] = TRUE;&#xD;&#xA;                $response[""error_msg""] = ""Unknown error occurred in registration!"";&#xD;&#xA;                echo json_encode($response);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    } else {&#xD;&#xA;        $response[""error""] = TRUE;&#xD;&#xA;    &#xD;&#xA;        $response[""error_msg""] = ""Required parameters (name, email or password) is missing!"";&#xD;&#xA;        echo json_encode($response);&#xD;&#xA;    }&#xD;&#xA;    ?>"
787873441593585890,46,6,"    <html>&#xD;&#xA;    <head>&#xD;&#xA;    <script>&#xD;&#xA;    function showUser(str)&#xD;&#xA;    {&#xD;&#xA;    if (str=="""")&#xD;&#xA;      {&#xD;&#xA;      document.getElementById(""txtHint"").innerHTML="""";&#xD;&#xA;      return;&#xD;&#xA;      } &#xD;&#xA;    if (window.XMLHttpRequest)&#xD;&#xA;      {// code for IE7+, Firefox, Chrome, Opera, Safari&#xD;&#xA;      xmlhttp=new XMLHttpRequest();&#xD;&#xA;      }&#xD;&#xA;    else&#xD;&#xA;      {// code for IE6, IE5&#xD;&#xA;      xmlhttp=new ActiveXObject(""Microsoft.XMLHTTP"");&#xD;&#xA;      }&#xD;&#xA;    xmlhttp.onreadystatechange=function()&#xD;&#xA;      {&#xD;&#xA;      if (xmlhttp.readyState==4 && xmlhttp.status==200)&#xD;&#xA;        {&#xD;&#xA;        document.getElementById(""txtHint"").innerHTML=xmlhttp.responseText;&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;    xmlhttp.open(""GET"",""getuser.php?q=""+str,true);&#xD;&#xA;    xmlhttp.send();&#xD;&#xA;    }&#xD;&#xA;    </script>&#xD;&#xA;    </head>&#xD;&#xA;    <body>&#xD;&#xA;    &#xD;&#xA;    <form>&#xD;&#xA;    <select name=""users"" onchange=""showUser(this.value)"">&#xD;&#xA;    <option value="""">Select a person:</option>&#xD;&#xA;    <option value=""1"">Peter Griffin</option>&#xD;&#xA;    <option value=""2"">Lois Griffin</option>&#xD;&#xA;    <option value=""3"">Glenn Quagmire</option>&#xD;&#xA;    <option value=""4"">Joseph Swanson</option>&#xD;&#xA;    </select>&#xD;&#xA;    </form>&#xD;&#xA;    <br>&#xD;&#xA;    <div id=""txtHint""><b>Person info will be listed here.</b></div>&#xD;&#xA;    &#xD;&#xA;    </body>&#xD;&#xA;    </html>"
3657537119151228995,47,6,"          #!/usr/bin/env python&#xD;&#xA;          import Queue&#xD;&#xA;          import threading&#xD;&#xA;          import urllib2&#xD;&#xA;          import time&#xD;&#xA;          &#xD;&#xA;          hosts = [""http://yahoo.com"", ""http://google.com"", ""http://amazon.com"",&#xD;&#xA;          ""http://ibm.com"", ""http://apple.com""]&#xD;&#xA;          &#xD;&#xA;          queue = Queue.Queue()&#xD;&#xA;          &#xD;&#xA;          class ThreadUrl(threading.Thread):&#xD;&#xA;          """"""Threaded Url Grab""""""&#xD;&#xA;            def __init__(self, queue):&#xD;&#xA;              threading.Thread.__init__(self)&#xD;&#xA;              self.queue = queue&#xD;&#xA;          &#xD;&#xA;            def run(self):&#xD;&#xA;              while True:&#xD;&#xA;                #grabs host from queue&#xD;&#xA;                host = self.queue.get()&#xD;&#xA;            &#xD;&#xA;                #grabs urls of hosts and prints first 1024 bytes of page&#xD;&#xA;                url = urllib2.urlopen(host)&#xD;&#xA;                print url.read(1024)&#xD;&#xA;            &#xD;&#xA;                #signals to queue job is done&#xD;&#xA;                self.queue.task_done()&#xD;&#xA;          &#xD;&#xA;          start = time.time()&#xD;&#xA;          def main():&#xD;&#xA;          &#xD;&#xA;            #spawn a pool of threads, and pass them queue instance &#xD;&#xA;            for i in range(5):&#xD;&#xA;              t = ThreadUrl(queue)&#xD;&#xA;              t.setDaemon(True)&#xD;&#xA;              t.start()&#xD;&#xA;              &#xD;&#xA;           #populate queue with data   &#xD;&#xA;              for host in hosts:&#xD;&#xA;                queue.put(host)&#xD;&#xA;           &#xD;&#xA;           #wait on the queue until everything has been processed     &#xD;&#xA;           queue.join()&#xD;&#xA;          &#xD;&#xA;          main()&#xD;&#xA;          print ""Elapsed Time: %s"" % (time.time() - start)"
-6411568677711881588,47,6,"    #!/usr/bin/env python&#xD;&#xA;    # -*- coding: utf-8 -*-&#xD;&#xA;    &#xD;&#xA;    import logging&#xD;&#xA;    import logging.handlers&#xD;&#xA;    from logging.config import dictConfig&#xD;&#xA;    &#xD;&#xA;    logger = logging.getLogger(__name__)&#xD;&#xA;    &#xD;&#xA;    DEFAULT_LOGGING = {&#xD;&#xA;        'version': 1,&#xD;&#xA;        'disable_existing_loggers': False,&#xD;&#xA;    }&#xD;&#xA;    def configure_logging(logfile_path):&#xD;&#xA;        """"""&#xD;&#xA;        Initialize logging defaults for Project.&#xD;&#xA;    &#xD;&#xA;        :param logfile_path: logfile used to the logfile&#xD;&#xA;        :type logfile_path: string&#xD;&#xA;    &#xD;&#xA;        This function does:&#xD;&#xA;    &#xD;&#xA;        - Assign INFO and DEBUG level to logger file handler and console handler&#xD;&#xA;    &#xD;&#xA;        """"""&#xD;&#xA;        dictConfig(DEFAULT_LOGGING)&#xD;&#xA;    &#xD;&#xA;        default_formatter = logging.Formatter(&#xD;&#xA;            ""[%(asctime)s] [%(levelname)s] [%(name)s] [%(funcName)s():%(lineno)s] [PID:%(process)d TID:%(thread)d] %(message)s"",&#xD;&#xA;            ""%d/%m/%Y %H:%M:%S"")&#xD;&#xA;    &#xD;&#xA;        file_handler = logging.handlers.RotatingFileHandler(logfile_path, maxBytes=10485760,backupCount=300, encoding='utf-8')&#xD;&#xA;        file_handler.setLevel(logging.INFO)&#xD;&#xA;    &#xD;&#xA;        console_handler = logging.StreamHandler()&#xD;&#xA;        console_handler.setLevel(logging.DEBUG)&#xD;&#xA;    &#xD;&#xA;        file_handler.setFormatter(default_formatter)&#xD;&#xA;        console_handler.setFormatter(default_formatter)&#xD;&#xA;    &#xD;&#xA;        logging.root.setLevel(logging.DEBUG)&#xD;&#xA;        logging.root.addHandler(file_handler)&#xD;&#xA;        logging.root.addHandler(console_handler)&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    [31/10/2015 22:00:33] [DEBUG] [yourmodulename] [yourfunction_name():9] [PID:61314 TID:140735248744448] this is logger infomation from hello module"
1033600139270598359,47,6,"    package org.openqa.selenium.example;&#xD;&#xA;    &#xD;&#xA;    import org.openqa.selenium.By;&#xD;&#xA;    import org.openqa.selenium.WebDriver;&#xD;&#xA;    import org.openqa.selenium.WebElement;&#xD;&#xA;    import org.openqa.selenium.firefox.FirefoxDriver;&#xD;&#xA;    import org.openqa.selenium.support.ui.ExpectedCondition;&#xD;&#xA;    import org.openqa.selenium.support.ui.WebDriverWait;&#xD;&#xA;    &#xD;&#xA;    public class Selenium2Example  {&#xD;&#xA;        public static void main(String[] args) {&#xD;&#xA;            // Create a new instance of the Firefox driver&#xD;&#xA;            // Notice that the remainder of the code relies on the interface, &#xD;&#xA;            // not the implementation.&#xD;&#xA;            WebDriver driver = new FirefoxDriver();&#xD;&#xA;    &#xD;&#xA;            // And now use this to visit Google&#xD;&#xA;            driver.get(""http://www.google.com"");&#xD;&#xA;            // Alternatively the same thing can be done like this&#xD;&#xA;            // driver.navigate().to(""http://www.google.com"");&#xD;&#xA;    &#xD;&#xA;            // Find the text input element by its name&#xD;&#xA;            WebElement element = driver.findElement(By.name(""q""));&#xD;&#xA;    &#xD;&#xA;            // Enter something to search for&#xD;&#xA;            element.sendKeys(""Cheese!"");&#xD;&#xA;    &#xD;&#xA;            // Now submit the form. WebDriver will find the form for us from the element&#xD;&#xA;            element.submit();&#xD;&#xA;    &#xD;&#xA;            // Check the title of the page&#xD;&#xA;            System.out.println(""Page title is: "" + driver.getTitle());&#xD;&#xA;            &#xD;&#xA;            // Google's search is rendered dynamically with JavaScript.&#xD;&#xA;            // Wait for the page to load, timeout after 10 seconds&#xD;&#xA;            (new WebDriverWait(driver, 10)).until(new ExpectedCondition<Boolean>() {&#xD;&#xA;                public Boolean apply(WebDriver d) {&#xD;&#xA;                    return d.getTitle().toLowerCase().startsWith(""cheese!"");&#xD;&#xA;                }&#xD;&#xA;            });&#xD;&#xA;            // Should see: ""cheese! - Google Search""&#xD;&#xA;            System.out.println(""Page title is: "" + driver.getTitle());&#xD;&#xA;        &#xD;&#xA;            //Close the browser&#xD;&#xA;            driver.quit();&#xD;&#xA;        }&#xD;&#xA;    }"
5252322701995684984,48,6,"    <?php&#xD;&#xA;     &#xD;&#xA;    class MY_Router extends CI_Router {&#xD;&#xA;        protected function _set_default_controller() {&#xD;&#xA;             &#xD;&#xA;            if (empty($this->default_controller)) {&#xD;&#xA;                &#xD;&#xA;                show_error('Unable to determine what should be displayed. A default route has not been specified in the routing file.');&#xD;&#xA;            }&#xD;&#xA;            // Is the method being specified?&#xD;&#xA;            if (sscanf($this->default_controller, '%[^/]/%s', $class, $method) !== 2) {&#xD;&#xA;                $method = 'index';&#xD;&#xA;            }&#xD;&#xA;             &#xD;&#xA;            // This is what I added, checks if the class is a directory&#xD;&#xA;            if( is_dir(APPPATH.'controllers/'.$class) ) {&#xD;&#xA;                 &#xD;&#xA;                // Set the class as the directory&#xD;&#xA;                &#xD;&#xA;                $this->set_directory($class);&#xD;&#xA;                &#xD;&#xA;                // $method is the class&#xD;&#xA;                &#xD;&#xA;                $class = $method;&#xD;&#xA;                &#xD;&#xA;                // Re check for slash if method has been set&#xD;&#xA;                &#xD;&#xA;                if (sscanf($method, '%[^/]/%s', $class, $method) !== 2) {&#xD;&#xA;                    $method = 'index';&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;             &#xD;&#xA;            if ( ! file_exists(APPPATH.'controllers/'.$this->directory.ucfirst($class).'.php')) {&#xD;&#xA;                &#xD;&#xA;                // This will trigger 404 later&#xD;&#xA;                &#xD;&#xA;                return;&#xD;&#xA;            }&#xD;&#xA;            $this->set_class($class);&#xD;&#xA;            $this->set_method($method);&#xD;&#xA;            // Assign routed segments, index starting from 1&#xD;&#xA;            $this->uri->rsegments = array(&#xD;&#xA;                1 => $class,&#xD;&#xA;                2 => $method&#xD;&#xA;            );&#xD;&#xA;            log_message('debug', 'No URI present. Default controller set.');&#xD;&#xA;        }&#xD;&#xA;    }"
-2004395698121080778,48,6,"    -injars      bin/classes&#xD;&#xA;    -injars      libs&#xD;&#xA;    -outjars     bin/classes-processed.jar&#xD;&#xA;    -libraryjars /usr/local/java/android-sdk/platforms/android-9/android.jar&#xD;&#xA;    &#xD;&#xA;    -dontpreverify&#xD;&#xA;    -repackageclasses ''&#xD;&#xA;    -allowaccessmodification&#xD;&#xA;    -optimizations !code/simplification/arithmetic&#xD;&#xA;    -keepattributes *Annotation*&#xD;&#xA;    &#xD;&#xA;    -keep public class * extends android.app.Activity&#xD;&#xA;    -keep public class * extends android.app.Application&#xD;&#xA;    -keep public class * extends android.app.Service&#xD;&#xA;    -keep public class * extends android.content.BroadcastReceiver&#xD;&#xA;    -keep public class * extends android.content.ContentProvider&#xD;&#xA;    &#xD;&#xA;    -keep public class * extends android.view.View {&#xD;&#xA;        public <init>(android.content.Context);&#xD;&#xA;        public <init>(android.content.Context, android.util.AttributeSet);&#xD;&#xA;        public <init>(android.content.Context, android.util.AttributeSet, int);&#xD;&#xA;        public void set*(...);&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    -keepclasseswithmembers class * {&#xD;&#xA;        public <init>(android.content.Context, android.util.AttributeSet);&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    -keepclasseswithmembers class * {&#xD;&#xA;        public <init>(android.content.Context, android.util.AttributeSet, int);&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    -keepclassmembers class * extends android.content.Context {&#xD;&#xA;       public void *(android.view.View);&#xD;&#xA;       public void *(android.view.MenuItem);&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    -keepclassmembers class * implements android.os.Parcelable {&#xD;&#xA;        static ** CREATOR;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    -keepclassmembers class **.R$* {&#xD;&#xA;        public static <fields>;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    -keepclassmembers class * {&#xD;&#xA;        @android.webkit.JavascriptInterface <methods>;&#xD;&#xA;    }"
4063651626510268247,48,6,"    /// <summary>&#xD;&#xA;    /// Writes the given object instance to an XML file.&#xD;&#xA;    /// <para>Only Public properties and variables will be written to the file. These can be any type though, even other classes.</para>&#xD;&#xA;    /// <para>If there are public properties/variables that you do not want written to the file, decorate them with the [XmlIgnore] attribute.</para>&#xD;&#xA;    /// <para>Object type must have a parameterless constructor.</para>&#xD;&#xA;    /// </summary>&#xD;&#xA;    /// <typeparam name=""T"">The type of object being written to the file.</typeparam>&#xD;&#xA;    /// <param name=""filePath"">The file path to write the object instance to.</param>&#xD;&#xA;    /// <param name=""objectToWrite"">The object instance to write to the file.</param>&#xD;&#xA;    /// <param name=""append"">If false the file will be overwritten if it already exists. If true the contents will be appended to the file.</param>&#xD;&#xA;    public static void WriteToXmlFile<T>(string filePath, T objectToWrite, bool append = false) where T : new()&#xD;&#xA;    {&#xD;&#xA;    	TextWriter writer = null;&#xD;&#xA;    	try&#xD;&#xA;    	{&#xD;&#xA;    		var serializer = new XmlSerializer(typeof(T));&#xD;&#xA;    		writer = new StreamWriter(filePath, append);&#xD;&#xA;    		serializer.Serialize(writer, objectToWrite);&#xD;&#xA;    	}&#xD;&#xA;    	finally&#xD;&#xA;    	{&#xD;&#xA;    		if (writer != null)&#xD;&#xA;    			writer.Close();&#xD;&#xA;    	}&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    /// <summary>&#xD;&#xA;    /// Reads an object instance from an XML file.&#xD;&#xA;    /// <para>Object type must have a parameterless constructor.</para>&#xD;&#xA;    /// </summary>&#xD;&#xA;    /// <typeparam name=""T"">The type of object to read from the file.</typeparam>&#xD;&#xA;    /// <param name=""filePath"">The file path to read the object instance from.</param>&#xD;&#xA;    /// <returns>Returns a new instance of the object read from the XML file.</returns>&#xD;&#xA;    public static T ReadFromXmlFile<T>(string filePath) where T : new()&#xD;&#xA;    {&#xD;&#xA;    	TextReader reader = null;&#xD;&#xA;    	try&#xD;&#xA;    	{&#xD;&#xA;    		var serializer = new XmlSerializer(typeof(T));&#xD;&#xA;    		reader = new StreamReader(filePath);&#xD;&#xA;    		return (T)serializer.Deserialize(reader);&#xD;&#xA;    	}&#xD;&#xA;    	finally&#xD;&#xA;    	{&#xD;&#xA;    		if (reader != null)&#xD;&#xA;    			reader.Close();&#xD;&#xA;    	}&#xD;&#xA;    }"
1487743900675740969,48,6,"    using System;&#xD;&#xA;    using System.Web.Mvc;&#xD;&#xA;    &#xD;&#xA;    using Google.Apis.Auth.OAuth2;&#xD;&#xA;    using Google.Apis.Auth.OAuth2.Flows;&#xD;&#xA;    using Google.Apis.Auth.OAuth2.Mvc;&#xD;&#xA;    using Google.Apis.Drive.v2;&#xD;&#xA;    using Google.Apis.Util.Store;&#xD;&#xA;    &#xD;&#xA;    namespace Google.Apis.Sample.MVC4&#xD;&#xA;    {&#xD;&#xA;        public class AppFlowMetadata : FlowMetadata&#xD;&#xA;        {&#xD;&#xA;            private static readonly IAuthorizationCodeFlow flow =&#xD;&#xA;                new GoogleAuthorizationCodeFlow(new GoogleAuthorizationCodeFlow.Initializer&#xD;&#xA;                    {&#xD;&#xA;                        ClientSecrets = new ClientSecrets&#xD;&#xA;                        {&#xD;&#xA;                            ClientId = ""PUT_CLIENT_ID_HERE"",&#xD;&#xA;                            ClientSecret = ""PUT_CLIENT_SECRET_HERE""&#xD;&#xA;                        },&#xD;&#xA;                        Scopes = new[] { DriveService.Scope.Drive },&#xD;&#xA;                        DataStore = new FileDataStore(""Drive.Api.Auth.Store"")&#xD;&#xA;                    });&#xD;&#xA;    &#xD;&#xA;            public override string GetUserId(Controller controller)&#xD;&#xA;            {&#xD;&#xA;                // In this sample we use the session to store the user identifiers.&#xD;&#xA;                // That's not the best practice, because you should have a logic to identify&#xD;&#xA;                // a user. You might want to use ""OpenID Connect"".&#xD;&#xA;                // You can read more about the protocol in the following link:&#xD;&#xA;                // https://developers.google.com/accounts/docs/OAuth2Login.&#xD;&#xA;                var user = controller.Session[""user""];&#xD;&#xA;                if (user == null)&#xD;&#xA;                {&#xD;&#xA;                    user = Guid.NewGuid();&#xD;&#xA;                    controller.Session[""user""] = user;&#xD;&#xA;                }&#xD;&#xA;                return user.ToString();&#xD;&#xA;    &#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            public override IAuthorizationCodeFlow Flow&#xD;&#xA;            {&#xD;&#xA;                get { return flow; }&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }"
3201909819369510811,48,6,"    using System;&#xD;&#xA;    using System.IO;&#xD;&#xA;    using System.Net;&#xD;&#xA;    using System.Text;&#xD;&#xA;    &#xD;&#xA;    namespace Examples.System.Net&#xD;&#xA;    {&#xD;&#xA;        public class WebRequestPostExample&#xD;&#xA;        {&#xD;&#xA;            public static void Main ()&#xD;&#xA;            {&#xD;&#xA;                // Create a request using a URL that can receive a post. &#xD;&#xA;                WebRequest request = WebRequest.Create (""http://www.contoso.com/PostAccepter.aspx "");&#xD;&#xA;                // Set the Method property of the request to POST.&#xD;&#xA;                request.Method = ""POST"";&#xD;&#xA;                &#xD;&#xA;                // Create POST data and convert it to a byte array.&#xD;&#xA;                string postData = ""This is a test that posts this string to a Web server."";&#xD;&#xA;                byte[] byteArray = Encoding.UTF8.GetBytes (postData);&#xD;&#xA;                // Set the ContentType property of the WebRequest.&#xD;&#xA;                request.ContentType = ""application/x-www-form-urlencoded"";&#xD;&#xA;                // Set the ContentLength property of the WebRequest.&#xD;&#xA;                request.ContentLength = byteArray.Length;&#xD;&#xA;                // Get the request stream.&#xD;&#xA;                Stream dataStream = request.GetRequestStream ();&#xD;&#xA;                // Write the data to the request stream.&#xD;&#xA;                dataStream.Write (byteArray, 0, byteArray.Length);&#xD;&#xA;                // Close the Stream object.&#xD;&#xA;                dataStream.Close ();&#xD;&#xA;                // Get the response.&#xD;&#xA;                WebResponse response = request.GetResponse ();&#xD;&#xA;                // Display the status.&#xD;&#xA;                Console.WriteLine (((HttpWebResponse)response).StatusDescription);&#xD;&#xA;                // Get the stream containing content returned by the server.&#xD;&#xA;                dataStream = response.GetResponseStream ();&#xD;&#xA;                // Open the stream using a StreamReader for easy access.&#xD;&#xA;                StreamReader reader = new StreamReader (dataStream);&#xD;&#xA;                // Read the content.&#xD;&#xA;                string responseFromServer = reader.ReadToEnd ();&#xD;&#xA;                // Display the content.&#xD;&#xA;                Console.WriteLine (responseFromServer);&#xD;&#xA;                // Clean up the streams.&#xD;&#xA;                reader.Close ();&#xD;&#xA;                dataStream.Close ();&#xD;&#xA;                response.Close ();&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }"
-19744997026447516,48,6,"                /// <summary>&#xD;&#xA;    /// Finds a Child of a given item in the visual tree. &#xD;&#xA;    /// </summary>&#xD;&#xA;    /// <param name=""parent"">A direct parent of the queried item.</param>&#xD;&#xA;    /// <typeparam name=""T"">The type of the queried item.</typeparam>&#xD;&#xA;    /// <param name=""childName"">x:Name or Name of child. </param>&#xD;&#xA;    /// <returns>The first parent item that matches the submitted type parameter. &#xD;&#xA;    /// If not matching item can be found, &#xD;&#xA;    /// a null parent is being returned.</returns>&#xD;&#xA;    public static T FindChild<T>(DependencyObject parent, string childName)&#xD;&#xA;       where T : DependencyObject&#xD;&#xA;    {    &#xD;&#xA;      // Confirm parent and childName are valid. &#xD;&#xA;      if (parent == null) return null;&#xD;&#xA;      T foundChild = null;&#xD;&#xA;      int childrenCount = VisualTreeHelper.GetChildrenCount(parent);&#xD;&#xA;      for (int i = 0; i < childrenCount; i++)&#xD;&#xA;      {&#xD;&#xA;        var child = VisualTreeHelper.GetChild(parent, i);&#xD;&#xA;        // If the child is not of the request child type child&#xD;&#xA;        T childType = child as T;&#xD;&#xA;        if (childType == null)&#xD;&#xA;        {&#xD;&#xA;          // recursively drill down the tree&#xD;&#xA;          foundChild = FindChild<T>(child, childName);&#xD;&#xA;          // If the child is found, break so we do not overwrite the found child. &#xD;&#xA;          if (foundChild != null) break;&#xD;&#xA;        }&#xD;&#xA;        else if (!string.IsNullOrEmpty(childName))&#xD;&#xA;        {&#xD;&#xA;          var frameworkElement = child as FrameworkElement;&#xD;&#xA;          // If the child's name is set for search&#xD;&#xA;          if (frameworkElement != null && frameworkElement.Name == childName)&#xD;&#xA;          {&#xD;&#xA;            // if the child's name is of the request name&#xD;&#xA;            foundChild = (T)child;&#xD;&#xA;            break;&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;        else&#xD;&#xA;        {&#xD;&#xA;          // child element found.&#xD;&#xA;          foundChild = (T)child;&#xD;&#xA;          break;&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;      return foundChild;&#xD;&#xA;    }"
-7820911667698631786,48,6,"    package drawFramePackage;&#xD;&#xA;        import java.awt.geom.AffineTransform;&#xD;&#xA;        import java.util.ArrayList;&#xD;&#xA;        import java.util.ListIterator;&#xD;&#xA;        import java.util.Random;&#xD;&#xA;        public class QuicksortAlgorithm {&#xD;&#xA;        	ArrayList<AffineTransform> affs;&#xD;&#xA;        	ListIterator<AffineTransform> li;&#xD;&#xA;        	Integer count, count2;&#xD;&#xA;        	/**&#xD;&#xA;        	 * @param args&#xD;&#xA;        	 */&#xD;&#xA;        	public static void main(String[] args) {&#xD;&#xA;        		new QuicksortAlgorithm();&#xD;&#xA;        	}&#xD;&#xA;        	public QuicksortAlgorithm(){&#xD;&#xA;        		count = new Integer(0);&#xD;&#xA;        		count2 = new Integer(1);&#xD;&#xA;        		affs = new ArrayList<AffineTransform>();&#xD;&#xA;        		for (int i = 0; i <= 128; i++){&#xD;&#xA;        			affs.add(new AffineTransform(1, 0, 0, 1, new Random().nextInt(1024), 0));&#xD;&#xA;        		}&#xD;&#xA;        		affs = arrangeNumbers(affs);&#xD;&#xA;        		printNumbers();&#xD;&#xA;        	}&#xD;&#xA;        	public ArrayList<AffineTransform> arrangeNumbers(ArrayList<AffineTransform> list){&#xD;&#xA;        		while (list.size() > 1 && count != list.size() - 1){&#xD;&#xA;        			if (list.get(count2).getTranslateX() > list.get(count).getTranslateX()){&#xD;&#xA;        				list.add(count, list.get(count2));&#xD;&#xA;        				list.remove(count2 + 1);&#xD;&#xA;        			}&#xD;&#xA;        			if (count2 == list.size() - 1){&#xD;&#xA;        				count++;&#xD;&#xA;        				count2 = count + 1;&#xD;&#xA;        			}&#xD;&#xA;        			else{&#xD;&#xA;        			count2++;&#xD;&#xA;        			}&#xD;&#xA;        		}&#xD;&#xA;        		return list;&#xD;&#xA;        	}&#xD;&#xA;        	public void printNumbers(){&#xD;&#xA;        		li = affs.listIterator();&#xD;&#xA;        		while (li.hasNext()){&#xD;&#xA;        			System.out.println(li.next());&#xD;&#xA;        		}&#xD;&#xA;        	}&#xD;&#xA;        }"
8796748913527410924,49,6,"        <form name=""contactform"" method=""post"" action=""send_form_email.php"">&#xD;&#xA;    <table width=""450px"">&#xD;&#xA;    <tr>&#xD;&#xA;     <td valign=""top"">&#xD;&#xA;      <label for=""first_name"">First Name *</label>&#xD;&#xA;     </td>&#xD;&#xA;     <td valign=""top"">&#xD;&#xA;      <input  type=""text"" name=""first_name"" maxlength=""50"" size=""30"">&#xD;&#xA;     </td>&#xD;&#xA;    </tr>&#xD;&#xA;    <tr>&#xD;&#xA;     <td valign=""top"""">&#xD;&#xA;      <label for=""last_name"">Last Name *</label>&#xD;&#xA;     </td>&#xD;&#xA;     <td valign=""top"">&#xD;&#xA;      <input  type=""text"" name=""last_name"" maxlength=""50"" size=""30"">&#xD;&#xA;     </td>&#xD;&#xA;    </tr>&#xD;&#xA;    <tr>&#xD;&#xA;     <td valign=""top"">&#xD;&#xA;      <label for=""email"">Email Address *</label>&#xD;&#xA;     </td>&#xD;&#xA;     <td valign=""top"">&#xD;&#xA;      <input  type=""text"" name=""email"" maxlength=""80"" size=""30"">&#xD;&#xA;     </td>&#xD;&#xA;    </tr>&#xD;&#xA;    <tr>&#xD;&#xA;     <td valign=""top"">&#xD;&#xA;      <label for=""telephone"">Telephone Number</label>&#xD;&#xA;     </td>&#xD;&#xA;     <td valign=""top"">&#xD;&#xA;      <input  type=""text"" name=""telephone"" maxlength=""30"" size=""30"">&#xD;&#xA;     </td>&#xD;&#xA;    </tr>&#xD;&#xA;    <tr>&#xD;&#xA;     <td valign=""top"">&#xD;&#xA;      <label for=""comments"">Comments *</label>&#xD;&#xA;     </td>&#xD;&#xA;     <td valign=""top"">&#xD;&#xA;      <textarea  name=""comments"" maxlength=""1000"" cols=""25"" rows=""6""></textarea>&#xD;&#xA;     </td>&#xD;&#xA;    </tr>&#xD;&#xA;    <tr>&#xD;&#xA;     <td colspan=""2"" style=""text-align:center"">&#xD;&#xA;      <input type=""submit"" value=""Submit"">   <a href=""http://www.freecontactform.com/email_form.php"">Email Form</a>&#xD;&#xA;     </td>&#xD;&#xA;    </tr>&#xD;&#xA;    </table>&#xD;&#xA;    </form>"
-5477259117408038176,49,6,"     #include <ctype.h>&#xD;&#xA;     #include <stdio.h>&#xD;&#xA;     #include <stdlib.h>&#xD;&#xA;     #include <unistd.h>&#xD;&#xA;     &#xD;&#xA;     int&#xD;&#xA;     main (int argc, char **argv)&#xD;&#xA;     {&#xD;&#xA;       int aflag = 0;&#xD;&#xA;       int bflag = 0;&#xD;&#xA;       char *cvalue = NULL;&#xD;&#xA;       int index;&#xD;&#xA;       int c;&#xD;&#xA;     &#xD;&#xA;       opterr = 0;&#xD;&#xA;     &#xD;&#xA;       while ((c = getopt (argc, argv, ""abc:"")) != -1)&#xD;&#xA;         switch (c)&#xD;&#xA;           {&#xD;&#xA;           case 'a':&#xD;&#xA;             aflag = 1;&#xD;&#xA;             break;&#xD;&#xA;           case 'b':&#xD;&#xA;             bflag = 1;&#xD;&#xA;             break;&#xD;&#xA;           case 'c':&#xD;&#xA;             cvalue = optarg;&#xD;&#xA;             break;&#xD;&#xA;           case '?':&#xD;&#xA;             if (optopt == 'c')&#xD;&#xA;               fprintf (stderr, ""Option -%c requires an argument.\n"", optopt);&#xD;&#xA;             else if (isprint (optopt))&#xD;&#xA;               fprintf (stderr, ""Unknown option `-%c'.\n"", optopt);&#xD;&#xA;             else&#xD;&#xA;               fprintf (stderr,&#xD;&#xA;                        ""Unknown option character `\\x%x'.\n"",&#xD;&#xA;                        optopt);&#xD;&#xA;             return 1;&#xD;&#xA;           default:&#xD;&#xA;             abort ();&#xD;&#xA;           }&#xD;&#xA;     &#xD;&#xA;       printf (""aflag = %d, bflag = %d, cvalue = %s\n"",&#xD;&#xA;               aflag, bflag, cvalue);&#xD;&#xA;     &#xD;&#xA;       for (index = optind; index < argc; index++)&#xD;&#xA;         printf (""Non-option argument %s\n"", argv[index]);&#xD;&#xA;       return 0;&#xD;&#xA;     }"
-5543967903149312769,49,6,"	var express = require('express');&#xD;&#xA;	var path = require('path');&#xD;&#xA;	var favicon = require('serve-favicon');&#xD;&#xA;	var logger = require('morgan');&#xD;&#xA;	var cookieParser = require('cookie-parser');&#xD;&#xA;	var bodyParser = require('body-parser');&#xD;&#xA;	var routes = require('./routes/index');&#xD;&#xA;	var users = require('./routes/users');&#xD;&#xA;	var app = express();&#xD;&#xA;	// view engine setup&#xD;&#xA;	app.set('views', path.join(__dirname, 'views'));&#xD;&#xA;	app.set('view engine', 'jade');&#xD;&#xA;	// uncomment after placing your favicon in /public&#xD;&#xA;	//app.use(favicon(__dirname + '/public/favicon.ico'));&#xD;&#xA;	app.use(logger('dev'));&#xD;&#xA;	app.use(bodyParser.json());&#xD;&#xA;	app.use(bodyParser.urlencoded({ extended: false }));&#xD;&#xA;	app.use(cookieParser());&#xD;&#xA;	app.use(express.static(path.join(__dirname, 'public')));&#xD;&#xA;	app.use('/', routes);&#xD;&#xA;	app.use('/users', users);&#xD;&#xA;	// catch 404 and forward to error handler&#xD;&#xA;	app.use(function(req, res, next) {&#xD;&#xA;		var err = new Error('Not Found');&#xD;&#xA;		err.status = 404;&#xD;&#xA;		next(err);&#xD;&#xA;	});&#xD;&#xA;	// error handlers&#xD;&#xA;	// development error handler&#xD;&#xA;	// will print stacktrace&#xD;&#xA;	if (app.get('env') === 'development') {&#xD;&#xA;		app.use(function(err, req, res, next) {&#xD;&#xA;			res.status(err.status || 500);&#xD;&#xA;			res.render('error', {&#xD;&#xA;				message: err.message,&#xD;&#xA;				error: err&#xD;&#xA;			});&#xD;&#xA;		});&#xD;&#xA;	}&#xD;&#xA;	// production error handler&#xD;&#xA;	// no stacktraces leaked to user&#xD;&#xA;	app.use(function(err, req, res, next) {&#xD;&#xA;		res.status(err.status || 500);&#xD;&#xA;		res.render('error', {&#xD;&#xA;			message: err.message,&#xD;&#xA;			error: {}&#xD;&#xA;		});&#xD;&#xA;	});&#xD;&#xA;	module.exports = app;"
225042623046082676,50,6,"         <definitions name=""HelloService""&#xD;&#xA;           targetNamespace=""http://www.examples.com/wsdl/HelloService.wsdl""&#xD;&#xA;           xmlns=""http://schemas.xmlsoap.org/wsdl/""&#xD;&#xA;           xmlns:soap=""http://schemas.xmlsoap.org/wsdl/soap/""&#xD;&#xA;           xmlns:tns=""http://www.examples.com/wsdl/HelloService.wsdl""&#xD;&#xA;           xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">&#xD;&#xA;         &#xD;&#xA;           <message name=""SayHelloRequest"">&#xD;&#xA;              <part name=""firstName"" type=""xsd:string""/>&#xD;&#xA;           </message>&#xD;&#xA;        	&#xD;&#xA;           <message name=""SayHelloResponse"">&#xD;&#xA;              <part name=""greeting"" type=""xsd:string""/>&#xD;&#xA;           </message>&#xD;&#xA;        &#xD;&#xA;           <portType name=""Hello_PortType"">&#xD;&#xA;              <operation name=""sayHello"">&#xD;&#xA;                 <input message=""tns:SayHelloRequest""/>&#xD;&#xA;                 <output message=""tns:SayHelloResponse""/>&#xD;&#xA;              </operation>&#xD;&#xA;           </portType>&#xD;&#xA;        &#xD;&#xA;           <binding name=""Hello_Binding"" type=""tns:Hello_PortType"">&#xD;&#xA;              <soap:binding style=""rpc""&#xD;&#xA;                 transport=""http://schemas.xmlsoap.org/soap/http""/>&#xD;&#xA;              <operation name=""sayHello"">&#xD;&#xA;                 <soap:operation soapAction=""sayHello""/>&#xD;&#xA;                 <input>&#xD;&#xA;                    <soap:body&#xD;&#xA;                       encodingStyle=""http://schemas.xmlsoap.org/soap/encoding/""&#xD;&#xA;                       namespace=""urn:examples:helloservice""&#xD;&#xA;                       use=""encoded""/>&#xD;&#xA;                 </input>&#xD;&#xA;        		&#xD;&#xA;                 <output>&#xD;&#xA;                    <soap:body&#xD;&#xA;                       encodingStyle=""http://schemas.xmlsoap.org/soap/encoding/""&#xD;&#xA;                       namespace=""urn:examples:helloservice""&#xD;&#xA;                       use=""encoded""/>&#xD;&#xA;                 </output>&#xD;&#xA;              </operation>&#xD;&#xA;           </binding>&#xD;&#xA;       <service name=""Hello_Service"">&#xD;&#xA;          <documentation>WSDL File for HelloService</documentation>&#xD;&#xA;          <port binding=""tns:Hello_Binding"" name=""Hello_Port"">&#xD;&#xA;             <soap:address&#xD;&#xA;                location=""http://www.examples.com/SayHello/"" />&#xD;&#xA;          </port>&#xD;&#xA;       </service>&#xD;&#xA;    </definitions>"
-4901044677709444679,51,6,"     import java.util.*;&#xD;&#xA;     import javax.mail.*;&#xD;&#xA;     import javax.mail.internet.*;&#xD;&#xA;     public class Email {&#xD;&#xA;     private static String USER_NAME = ""username"";  // GMail user name (just the part before ""@gmail.com"")&#xD;&#xA;     private static String PASSWORD = ""password""; // GMail password&#xD;&#xA;    private static String RECIPIENT = ""xxxxx@gmail.com"";&#xD;&#xA;    public static void main(String[] args) {&#xD;&#xA;    String from = USER_NAME;&#xD;&#xA;    String pass = PASSWORD;&#xD;&#xA;    String[] to = { RECIPIENT }; // list of recipient email addresses&#xD;&#xA;    String subject = ""Java send mail example"";&#xD;&#xA;    String body = ""hi ....,!"";&#xD;&#xA;    sendFromGMail(from, pass, to, subject, body);&#xD;&#xA;     }&#xD;&#xA;    private static void sendFromGMail(String from, String pass, String[] to, String subject, String body) {&#xD;&#xA;    Properties props = System.getProperties();&#xD;&#xA;    String host = ""smtp.gmail.com"";&#xD;&#xA;    props.put(""mail.smtp.starttls.enable"", ""true"");&#xD;&#xA;    props.put(""mail.smtp.ssl.trust"", host);&#xD;&#xA;    props.put(""mail.smtp.user"", from);&#xD;&#xA;    props.put(""mail.smtp.password"", pass);&#xD;&#xA;    props.put(""mail.smtp.port"", ""587"");&#xD;&#xA;    props.put(""mail.smtp.auth"", ""true"");&#xD;&#xA;    Session session = Session.getDefaultInstance(props);&#xD;&#xA;    MimeMessage message = new MimeMessage(session);&#xD;&#xA;    try {&#xD;&#xA;        message.setFrom(new InternetAddress(from));&#xD;&#xA;        InternetAddress[] toAddress = new InternetAddress[to.length];&#xD;&#xA;        // To get the array of addresses&#xD;&#xA;        for( int i = 0; i < to.length; i++ ) {&#xD;&#xA;            toAddress[i] = new InternetAddress(to[i]);&#xD;&#xA;        }&#xD;&#xA;        for( int i = 0; i < toAddress.length; i++) {&#xD;&#xA;            message.addRecipient(Message.RecipientType.TO, toAddress[i]);&#xD;&#xA;        }&#xD;&#xA;        message.setSubject(subject);&#xD;&#xA;        message.setText(body);&#xD;&#xA;        Transport transport = session.getTransport(""smtp"");&#xD;&#xA;        transport.connect(host, from, pass);&#xD;&#xA;        transport.sendMessage(message, message.getAllRecipients());&#xD;&#xA;        transport.close();&#xD;&#xA;     }&#xD;&#xA;     catch (AddressException ae) {&#xD;&#xA;        ae.printStackTrace();&#xD;&#xA;     }&#xD;&#xA;     catch (MessagingException me) {&#xD;&#xA;        me.printStackTrace();&#xD;&#xA;      }&#xD;&#xA;     }&#xD;&#xA;    } "
-3295157342906008741,51,6,"		#include <iostream>&#xD;&#xA;	&#xD;&#xA;	using namespace std;&#xD;&#xA;	&#xD;&#xA;	class Line {&#xD;&#xA;	   public:&#xD;&#xA;		  int getLength( void );&#xD;&#xA;		  Line( int len );             // simple constructor&#xD;&#xA;		  Line( const Line &obj);  // copy constructor&#xD;&#xA;		  ~Line();                     // destructor&#xD;&#xA;	&#xD;&#xA;	   private:&#xD;&#xA;		  int *ptr;&#xD;&#xA;	};&#xD;&#xA;	&#xD;&#xA;	// Member functions definitions including constructor&#xD;&#xA;	Line::Line(int len) {&#xD;&#xA;	   cout << ""Normal constructor allocating ptr"" << endl;&#xD;&#xA;		&#xD;&#xA;	   // allocate memory for the pointer;&#xD;&#xA;	   ptr = new int;&#xD;&#xA;	   *ptr = len;&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	Line::Line(const Line &obj) {&#xD;&#xA;	   cout << ""Copy constructor allocating ptr."" << endl;&#xD;&#xA;	   ptr = new int;&#xD;&#xA;	   *ptr = *obj.ptr; // copy the value&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	Line::~Line(void) {&#xD;&#xA;	   cout << ""Freeing memory!"" << endl;&#xD;&#xA;	   delete ptr;&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	int Line::getLength( void ) {&#xD;&#xA;	   return *ptr;&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	void display(Line obj) {&#xD;&#xA;	   cout << ""Length of line : "" << obj.getLength() <<endl;&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	// Main function for the program&#xD;&#xA;	int main( ) {&#xD;&#xA;	   Line line(10);&#xD;&#xA;	&#xD;&#xA;	   display(line);&#xD;&#xA;	&#xD;&#xA;	   return 0;&#xD;&#xA;	}"
-6314499617823646422,51,6,"		public class ImageGalleryDemoActivity extends Activity {&#xD;&#xA;			 &#xD;&#xA;			 &#xD;&#xA;			private static int RESULT_LOAD_IMAGE = 1;&#xD;&#xA;			 &#xD;&#xA;		 &#xD;&#xA;			@Override&#xD;&#xA;			public void onCreate(Bundle savedInstanceState) {&#xD;&#xA;				super.onCreate(savedInstanceState);&#xD;&#xA;				setContentView(R.layout.main);&#xD;&#xA;				 &#xD;&#xA;				Button buttonLoadImage = (Button) findViewById(R.id.buttonLoadPicture);&#xD;&#xA;				buttonLoadImage.setOnClickListener(new View.OnClickListener() {&#xD;&#xA;					 &#xD;&#xA;					@Override&#xD;&#xA;					public void onClick(View arg0) {&#xD;&#xA;						 &#xD;&#xA;						Intent i = new Intent(&#xD;&#xA;								Intent.ACTION_PICK,&#xD;&#xA;								android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);&#xD;&#xA;						 &#xD;&#xA;						startActivityForResult(i, RESULT_LOAD_IMAGE);&#xD;&#xA;					}&#xD;&#xA;				});&#xD;&#xA;			}&#xD;&#xA;			 &#xD;&#xA;			 &#xD;&#xA;			@Override&#xD;&#xA;			protected void onActivityResult(int requestCode, int resultCode, Intent data) {&#xD;&#xA;				super.onActivityResult(requestCode, resultCode, data);&#xD;&#xA;				 &#xD;&#xA;				if (requestCode == RESULT_LOAD_IMAGE && resultCode == RESULT_OK && null != data) {&#xD;&#xA;					Uri selectedImage = data.getData();&#xD;&#xA;					String[] filePathColumn = { MediaStore.Images.Media.DATA };&#xD;&#xA;		 &#xD;&#xA;					Cursor cursor = getContentResolver().query(selectedImage,&#xD;&#xA;							filePathColumn, null, null, null);&#xD;&#xA;					cursor.moveToFirst();&#xD;&#xA;		 &#xD;&#xA;					int columnIndex = cursor.getColumnIndex(filePathColumn[0]);&#xD;&#xA;					String picturePath = cursor.getString(columnIndex);&#xD;&#xA;					cursor.close();&#xD;&#xA;					 &#xD;&#xA;					ImageView imageView = (ImageView) findViewById(R.id.imgView);&#xD;&#xA;					imageView.setImageBitmap(BitmapFactory.decodeFile(picturePath));&#xD;&#xA;				 &#xD;&#xA;				}&#xD;&#xA;			 &#xD;&#xA;			 &#xD;&#xA;			}&#xD;&#xA;		}"
529257344586402162,51,6,"    // Iterate over each select element&#xD;&#xA;    $('select').each(function () {&#xD;&#xA;      // Cache the number of options&#xD;&#xA;      var $this = $(this),&#xD;&#xA;          numberOfOptions = $(this).children('option').length;&#xD;&#xA;      // Hides the select element&#xD;&#xA;      $this.addClass('s-hidden');&#xD;&#xA;      // Wrap the select element in a div&#xD;&#xA;      $this.wrap('<div class=""select""></div>');&#xD;&#xA;      // Insert a styled div to sit over the top of the hidden select element&#xD;&#xA;      $this.after('<div class=""styledSelect""></div>');&#xD;&#xA;      // Cache the styled div&#xD;&#xA;      var $styledSelect = $this.next('div.styledSelect');&#xD;&#xA;      // Show the first select option in the styled div&#xD;&#xA;      $styledSelect.text($this.children('option').eq(0).text());&#xD;&#xA;      // Insert an unordered list after the styled div and also cache the list&#xD;&#xA;      var $list = $('<ul />', {&#xD;&#xA;        'class': 'options'&#xD;&#xA;      }).insertAfter($styledSelect);&#xD;&#xA;      // Insert a list item into the unordered list for each select option&#xD;&#xA;      for (var i = 0; i < numberOfOptions; i++) {&#xD;&#xA;        $('<li />', {&#xD;&#xA;          text: $this.children('option').eq(i).text(),&#xD;&#xA;          rel: $this.children('option').eq(i).val()&#xD;&#xA;        }).appendTo($list);&#xD;&#xA;      }&#xD;&#xA;      // Cache the list items&#xD;&#xA;      var $listItems = $list.children('li');&#xD;&#xA;      // Show the unordered list when the styled div is clicked (also hides it if the div is clicked again)&#xD;&#xA;      $styledSelect.click(function (e) {&#xD;&#xA;        e.stopPropagation();&#xD;&#xA;        $('div.styledSelect.active').each(function () {&#xD;&#xA;          $(this).removeClass('active').next('ul.options').hide();&#xD;&#xA;        });&#xD;&#xA;        $(this).toggleClass('active').next('ul.options').toggle();&#xD;&#xA;      });&#xD;&#xA;      // Hides the unordered list when a list item is clicked and updates the styled div to show the selected list item&#xD;&#xA;      // Updates the select element to have the value of the equivalent option&#xD;&#xA;      $listItems.click(function (e) {&#xD;&#xA;        e.stopPropagation();&#xD;&#xA;        $styledSelect.text($(this).text()).removeClass('active');&#xD;&#xA;        $this.val($(this).attr('rel'));&#xD;&#xA;        $list.hide();&#xD;&#xA;        /* alert($this.val()); Uncomment this for demonstration! */&#xD;&#xA;      });&#xD;&#xA;      // Hides the unordered list when clicking outside of it&#xD;&#xA;      $(document).click(function () {&#xD;&#xA;        $styledSelect.removeClass('active');&#xD;&#xA;        $list.hide();&#xD;&#xA;      });&#xD;&#xA;    });"
4597183570807901777,52,6,"    Public Function ISO_WeekYearNumber( _&#xD;&#xA;        ByVal datDate As Date, _&#xD;&#xA;        Optional ByRef intYear As Integer, _&#xD;&#xA;        Optional ByRef bytWeek As Byte) _&#xD;&#xA;        As String&#xD;&#xA;    &#xD;&#xA;    ' Calculates and returns year and week number for date datDate according to the ISO 8601:1988 standard.&#xD;&#xA;    ' Optionally returns numeric year and week.&#xD;&#xA;    ' 1998-2007, Gustav Brock, Cactus Data ApS, CPH.&#xD;&#xA;    ' May be freely used and distributed.&#xD;&#xA;    &#xD;&#xA;        Const cbytFirstWeekOfAnyYear  As Byte = 1&#xD;&#xA;        Const cbytLastWeekOfLeapYear  As Byte = 53&#xD;&#xA;        Const cbytMonthJanuary        As Byte = 1&#xD;&#xA;        Const cbytMonthDecember       As Byte = 12&#xD;&#xA;        Const cstrSeparatorYearWeek   As String = ""W""&#xD;&#xA;        &#xD;&#xA;        Dim bytMonth                  As Byte&#xD;&#xA;        Dim bytISOThursday            As Byte&#xD;&#xA;        Dim datLastDayOfYear          As Date&#xD;&#xA;        &#xD;&#xA;        intYear = Year(datDate)&#xD;&#xA;        bytMonth = Month(datDate)&#xD;&#xA;        bytWeek = DatePart(""ww"", datDate, vbMonday, vbFirstFourDays)&#xD;&#xA;        &#xD;&#xA;        If bytWeek = cbytLastWeekOfLeapYear Then&#xD;&#xA;            bytISOThursday = Weekday(vbThursday, vbMonday)&#xD;&#xA;            datLastDayOfYear = DateSerial(intYear, cbytMonthDecember, 31)&#xD;&#xA;            If Weekday(datLastDayOfYear, vbMonday) >= bytISOThursday Then&#xD;&#xA;                ' OK, week count of 53 is caused by leap year.&#xD;&#xA;            Else&#xD;&#xA;                ' Correct for Access97/2000+ bug.&#xD;&#xA;                bytWeek = cbytFirstWeekOfAnyYear&#xD;&#xA;            End If&#xD;&#xA;        End If&#xD;&#xA;        &#xD;&#xA;        ' Adjust year where week number belongs to next or previous year.&#xD;&#xA;        If bytMonth = cbytMonthJanuary Then&#xD;&#xA;            If bytWeek >= cbytLastWeekOfLeapYear - 1 Then&#xD;&#xA;                ' This is an early date of January belonging to the last week of the previous year.&#xD;&#xA;                intYear = intYear - 1&#xD;&#xA;            End If&#xD;&#xA;        ElseIf bytMonth = cbytMonthDecember Then&#xD;&#xA;            If bytWeek = cbytFirstWeekOfAnyYear Then&#xD;&#xA;                ' This is a late date of December belonging to the first week of the next year.&#xD;&#xA;                intYear = intYear + 1&#xD;&#xA;            End If&#xD;&#xA;        End If&#xD;&#xA;        &#xD;&#xA;        ISO_WeekYearNumber = CStr(intYear) & cstrSeparatorYearWeek & Format(bytWeek, ""00"")&#xD;&#xA;    &#xD;&#xA;    End Function"
-8563684939759618715,53,6,"    private class ConnectedThread extends Thread {&#xD;&#xA;        private final BluetoothSocket mmSocket;&#xD;&#xA;        private final InputStream mmInStream;&#xD;&#xA;        private final OutputStream mmOutStream;&#xD;&#xA;    &#xD;&#xA;        public ConnectedThread(BluetoothSocket socket) {&#xD;&#xA;            mmSocket = socket;&#xD;&#xA;            InputStream tmpIn = null;&#xD;&#xA;            OutputStream tmpOut = null;&#xD;&#xA;    &#xD;&#xA;            // Get the input and output streams, using temp objects because&#xD;&#xA;            // member streams are final&#xD;&#xA;            try {&#xD;&#xA;                tmpIn = socket.getInputStream();&#xD;&#xA;                tmpOut = socket.getOutputStream();&#xD;&#xA;            } catch (IOException e) { }&#xD;&#xA;    &#xD;&#xA;            mmInStream = tmpIn;&#xD;&#xA;            mmOutStream = tmpOut;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void run() {&#xD;&#xA;            byte[] buffer = new byte[1024];  // buffer store for the stream&#xD;&#xA;            int bytes; // bytes returned from read()&#xD;&#xA;    &#xD;&#xA;            // Keep listening to the InputStream until an exception occurs&#xD;&#xA;            while (true) {&#xD;&#xA;                try {&#xD;&#xA;                    // Read from the InputStream&#xD;&#xA;                    bytes = mmInStream.read(buffer);&#xD;&#xA;                    // Send the obtained bytes to the UI activity&#xD;&#xA;                    mHandler.obtainMessage(MESSAGE_READ, bytes, -1, buffer)&#xD;&#xA;                            .sendToTarget();&#xD;&#xA;                } catch (IOException e) {&#xD;&#xA;                    break;&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /* Call this from the main activity to send data to the remote device */&#xD;&#xA;        public void write(byte[] bytes) {&#xD;&#xA;            try {&#xD;&#xA;                mmOutStream.write(bytes);&#xD;&#xA;            } catch (IOException e) { }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /* Call this from the main activity to shutdown the connection */&#xD;&#xA;        public void cancel() {&#xD;&#xA;            try {&#xD;&#xA;                mmSocket.close();&#xD;&#xA;            } catch (IOException e) { }&#xD;&#xA;        }&#xD;&#xA;    }"
-6384156285430877353,53,6,"	<?php&#xD;&#xA;	 &#xD;&#xA;	class VivasIndustries_SmsNotification_Block_Adminhtml_Sms_Status_Grid extends Mage_Adminhtml_Block_Widget_Grid&#xD;&#xA;	{&#xD;&#xA;		public function __construct()&#xD;&#xA;		{&#xD;&#xA;			parent::__construct();&#xD;&#xA;			$this->setId('smsnotification_grid');&#xD;&#xA;			$this->setDefaultSort('id');&#xD;&#xA;			$this->setDefaultDir('DESC');&#xD;&#xA;			$this->setSaveParametersInSession(true);&#xD;&#xA;			$this->setUseAjax(true);&#xD;&#xA;		}&#xD;&#xA;		 &#xD;&#xA;				&#xD;&#xA;		protected function _prepareCollection()&#xD;&#xA;		{&#xD;&#xA;			$collection = Mage::getResourceModel('smsnotification/smsnotification_collection');&#xD;&#xA;			$this->setCollection($collection);&#xD;&#xA;			return parent::_prepareCollection();&#xD;&#xA;		}&#xD;&#xA;		protected function _prepareColumns()&#xD;&#xA;		{&#xD;&#xA;			  $this->addColumn('id', array(&#xD;&#xA;				  'header'    => Mage::helper('smsnotification')->__('ID'),&#xD;&#xA;				  'align'     =>'right',&#xD;&#xA;				  'width'     => '50px',&#xD;&#xA;				  'index'     => 'id',&#xD;&#xA;			  ));&#xD;&#xA;			  $this->addColumn('Receiver', array(&#xD;&#xA;				  'header'    => Mage::helper('smsnotification')->__('Receiver'),&#xD;&#xA;				  'align'     =>'left',&#xD;&#xA;				  'index'     => 'Receiver',&#xD;&#xA;			  ));&#xD;&#xA;            $this->addColumn('Phone', array(&#xD;&#xA;                'header'    => Mage::helper('smsnotification')->__('Phone'),&#xD;&#xA;                'align'     =>'left',&#xD;&#xA;                'index'     => 'Phone',&#xD;&#xA;            ));&#xD;&#xA;            $this->addColumn('Date', array(&#xD;&#xA;                'header'    => Mage::helper('smsnotification')->__('Date'),&#xD;&#xA;                'align'     =>'left',&#xD;&#xA;                'index'     => 'Date',&#xD;&#xA;                &#xD;&#xA;            ));&#xD;&#xA;            return parent::_prepareColumns();&#xD;&#xA;		}&#xD;&#xA;			 &#xD;&#xA;		public function getRowUrl($row)&#xD;&#xA;		{&#xD;&#xA;			return $this->getUrl('*/*/edit', array('id'=>$row->getId()));&#xD;&#xA;		}&#xD;&#xA;	}"
3204323727550250259,53,6,"    <nav class=""navbar navbar-default"" role=""navigation"">&#xD;&#xA;      <div class=""container-fluid"">&#xD;&#xA;        <!-- Brand and toggle get grouped for better mobile display -->&#xD;&#xA;        <div class=""navbar-header"">&#xD;&#xA;          <button type=""button"" class=""navbar-toggle"" data-toggle=""collapse"" data-target=""#bs-example-navbar-collapse-1"">&#xD;&#xA;            <span class=""sr-only"">Toggle navigation</span>&#xD;&#xA;            <span class=""icon-bar""></span>&#xD;&#xA;            <span class=""icon-bar""></span>&#xD;&#xA;            <span class=""icon-bar""></span>&#xD;&#xA;          </button>&#xD;&#xA;          <a class=""navbar-brand"" href=""#"">Brand</a>&#xD;&#xA;        </div>&#xD;&#xA;    &#xD;&#xA;        <!-- Collect the nav links, forms, and other content for toggling -->&#xD;&#xA;        <div class=""collapse navbar-collapse"" id=""bs-example-navbar-collapse-1"">&#xD;&#xA;          <ul class=""nav navbar-nav"">&#xD;&#xA;            <li class=""active""><a href=""#"">Link</a></li>&#xD;&#xA;            <li><a href=""#"">Link</a></li>&#xD;&#xA;            <li class=""dropdown"">&#xD;&#xA;              <a href=""#"" class=""dropdown-toggle"" data-toggle=""dropdown"">Dropdown <b class=""caret""></b></a>&#xD;&#xA;              <ul class=""dropdown-menu"">&#xD;&#xA;                <li><a href=""#"">Action</a></li>&#xD;&#xA;                <li><a href=""#"">Another action</a></li>&#xD;&#xA;                <li><a href=""#"">Something else here</a></li>&#xD;&#xA;                <li class=""divider""></li>&#xD;&#xA;                <li><a href=""#"">Separated link</a></li>&#xD;&#xA;                <li class=""divider""></li>&#xD;&#xA;                <li><a href=""#"">One more separated link</a></li>&#xD;&#xA;              </ul>&#xD;&#xA;            </li>&#xD;&#xA;          </ul>&#xD;&#xA;          <form class=""navbar-form navbar-left"" role=""search"">&#xD;&#xA;            <div class=""form-group"">&#xD;&#xA;              <input type=""text"" class=""form-control"" placeholder=""Search"">&#xD;&#xA;            </div>&#xD;&#xA;            <button type=""submit"" class=""btn btn-default"">Submit</button>&#xD;&#xA;          </form>&#xD;&#xA;          <ul class=""nav navbar-nav navbar-right"">&#xD;&#xA;            <li><a href=""#"">Link</a></li>&#xD;&#xA;            <li class=""dropdown"">&#xD;&#xA;              <a href=""#"" class=""dropdown-toggle"" data-toggle=""dropdown"">Dropdown <b class=""caret""></b></a>&#xD;&#xA;              <ul class=""dropdown-menu"">&#xD;&#xA;                <li><a href=""#"">Action</a></li>&#xD;&#xA;                <li><a href=""#"">Another action</a></li>&#xD;&#xA;                <li><a href=""#"">Something else here</a></li>&#xD;&#xA;                <li class=""divider""></li>&#xD;&#xA;                <li><a href=""#"">Separated link</a></li>&#xD;&#xA;              </ul>&#xD;&#xA;            </li>&#xD;&#xA;          </ul>&#xD;&#xA;        </div><!-- /.navbar-collapse -->&#xD;&#xA;      </div><!-- /.container-fluid -->&#xD;&#xA;    </nav>"
-9156973036279591882,53,6,"    var colors = new Array(&#xD;&#xA;      [62,35,255],&#xD;&#xA;      [60,255,60],&#xD;&#xA;      [255,35,98],&#xD;&#xA;      [45,175,230],&#xD;&#xA;      [255,0,255],&#xD;&#xA;      [255,128,0]);&#xD;&#xA;    var step = 0;&#xD;&#xA;    //color table indices for: &#xD;&#xA;    // current color left&#xD;&#xA;    // next color left&#xD;&#xA;    // current color right&#xD;&#xA;    // next color right&#xD;&#xA;    var colorIndices = [0,1,2,3];&#xD;&#xA;    //transition speed&#xD;&#xA;    var gradientSpeed = 0.002;&#xD;&#xA;    function updateGradient()&#xD;&#xA;    {&#xD;&#xA;      &#xD;&#xA;      if ( $===undefined ) return;&#xD;&#xA;      &#xD;&#xA;    var c0_0 = colors[colorIndices[0]];&#xD;&#xA;    var c0_1 = colors[colorIndices[1]];&#xD;&#xA;    var c1_0 = colors[colorIndices[2]];&#xD;&#xA;    var c1_1 = colors[colorIndices[3]];&#xD;&#xA;    var istep = 1 - step;&#xD;&#xA;    var r1 = Math.round(istep * c0_0[0] + step * c0_1[0]);&#xD;&#xA;    var g1 = Math.round(istep * c0_0[1] + step * c0_1[1]);&#xD;&#xA;    var b1 = Math.round(istep * c0_0[2] + step * c0_1[2]);&#xD;&#xA;    var color1 = ""rgb(""+r1+"",""+g1+"",""+b1+"")"";&#xD;&#xA;    var r2 = Math.round(istep * c1_0[0] + step * c1_1[0]);&#xD;&#xA;    var g2 = Math.round(istep * c1_0[1] + step * c1_1[1]);&#xD;&#xA;    var b2 = Math.round(istep * c1_0[2] + step * c1_1[2]);&#xD;&#xA;    var color2 = ""rgb(""+r2+"",""+g2+"",""+b2+"")"";&#xD;&#xA;     $('#gradient').css({&#xD;&#xA;       background: ""-webkit-gradient(linear, left top, right top, from(""+color1+""), to(""+color2+""))""}).css({&#xD;&#xA;        background: ""-moz-linear-gradient(left, ""+color1+"" 0%, ""+color2+"" 100%)""});&#xD;&#xA;      &#xD;&#xA;      step += gradientSpeed;&#xD;&#xA;      if ( step >= 1 )&#xD;&#xA;      {&#xD;&#xA;        step %= 1;&#xD;&#xA;        colorIndices[0] = colorIndices[1];&#xD;&#xA;        colorIndices[2] = colorIndices[3];&#xD;&#xA;        &#xD;&#xA;        //pick two new target color indices&#xD;&#xA;        //do not pick the same as the current one&#xD;&#xA;        colorIndices[1] = ( colorIndices[1] + Math.floor( 1 + Math.random() * (colors.length - 1))) % colors.length;&#xD;&#xA;        colorIndices[3] = ( colorIndices[3] + Math.floor( 1 + Math.random() * (colors.length - 1))) % colors.length;&#xD;&#xA;        &#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;    setInterval(updateGradient,10);"
-2248520677388179669,54,6,"        var isDevBuild = process.argv.indexOf('--env.prod') < 0;&#xD;&#xA;    var path = require('path');&#xD;&#xA;    var webpack = require('webpack');&#xD;&#xA;    var nodeExternals = require('webpack-node-externals');&#xD;&#xA;    var merge = require('webpack-merge');&#xD;&#xA;    var allFilenamesExceptJavaScript = /\.(?!js(\?|$))([^.]+(\?|$))/;&#xD;&#xA;    &#xD;&#xA;    // Configuration in common to both client-side and server-side bundles&#xD;&#xA;    var sharedConfig = {&#xD;&#xA;        resolve: { extensions: [ '', '.js', '.ts' ] },&#xD;&#xA;        output: {&#xD;&#xA;            filename: '[name].js',&#xD;&#xA;            publicPath: '/dist/' // Webpack dev middleware, if enabled, handles requests for this URL prefix&#xD;&#xA;        },&#xD;&#xA;        module: {&#xD;&#xA;            loaders: [&#xD;&#xA;                { test: /\.ts$/, include: /ClientApp/, loader: 'ts', query: { silent: true } },&#xD;&#xA;                { test: /\.html$/, loader: 'raw' },&#xD;&#xA;                { test: /\.css$/, loader: 'to-string!css' },&#xD;&#xA;                { test: /\.(png|jpg|jpeg|gif|svg)$/, loader: 'url', query: { limit: 25000 } }&#xD;&#xA;            ]&#xD;&#xA;        }&#xD;&#xA;    };&#xD;&#xA;    &#xD;&#xA;    // Configuration for client-side bundle suitable for running in browsers&#xD;&#xA;    var clientBundleConfig = merge(sharedConfig, {&#xD;&#xA;        entry: { 'main-client': './ClientApp/boot-client.ts' },&#xD;&#xA;        output: { path: path.join(__dirname, './wwwroot/dist') },&#xD;&#xA;        devtool: isDevBuild ? 'inline-source-map' : null,&#xD;&#xA;        plugins: [&#xD;&#xA;            new webpack.DllReferencePlugin({&#xD;&#xA;                context: __dirname,&#xD;&#xA;                manifest: require('./wwwroot/dist/vendor-manifest.json')&#xD;&#xA;            })&#xD;&#xA;        ].concat(isDevBuild ? [] : [&#xD;&#xA;            // Plugins that apply in production builds only&#xD;&#xA;            new webpack.optimize.OccurenceOrderPlugin(),&#xD;&#xA;            new webpack.optimize.UglifyJsPlugin()&#xD;&#xA;        ])&#xD;&#xA;    });&#xD;&#xA;    &#xD;&#xA;    // Configuration for server-side (prerendering) bundle suitable for running in Node&#xD;&#xA;    var serverBundleConfig = merge(sharedConfig, {&#xD;&#xA;        entry: { 'main-server': './ClientApp/boot-server.ts' },&#xD;&#xA;        output: {&#xD;&#xA;            libraryTarget: 'commonjs',&#xD;&#xA;            path: path.join(__dirname, './ClientApp/dist')&#xD;&#xA;        },&#xD;&#xA;        target: 'node',&#xD;&#xA;        devtool: 'inline-source-map',&#xD;&#xA;        externals: [nodeExternals({ whitelist: [allFilenamesExceptJavaScript] })] // Don't bundle .js files from node_modules&#xD;&#xA;    });&#xD;&#xA;    &#xD;&#xA;    module.exports = [clientBundleConfig, serverBundleConfig];"
-1428495234864934456,55,6,"    #include <GLFW/glfw3.h>&#xD;&#xA;    #include <stdlib.h>&#xD;&#xA;    #include <stdio.h>&#xD;&#xA;    static void error_callback(int error, const char* description)&#xD;&#xA;    {&#xD;&#xA;    	fputs(description, stderr);&#xD;&#xA;    }&#xD;&#xA;    static void key_callback(GLFWwindow* window, int key, int scancode, int action, int mods)&#xD;&#xA;    {&#xD;&#xA;    	if (key == GLFW_KEY_ESCAPE && action == GLFW_PRESS)&#xD;&#xA;    		glfwSetWindowShouldClose(window, GL_TRUE);&#xD;&#xA;    }&#xD;&#xA;    int main(void)&#xD;&#xA;    {&#xD;&#xA;    	GLFWwindow* window;&#xD;&#xA;    	glfwSetErrorCallback(error_callback);&#xD;&#xA;    	if (!glfwInit())&#xD;&#xA;    		exit(EXIT_FAILURE);&#xD;&#xA;    	window = glfwCreateWindow(640, 480, ""Simple example"", NULL, NULL);&#xD;&#xA;    	if (!window)&#xD;&#xA;    	{&#xD;&#xA;    		glfwTerminate();&#xD;&#xA;    		exit(EXIT_FAILURE);&#xD;&#xA;    	}&#xD;&#xA;    	glfwMakeContextCurrent(window);&#xD;&#xA;    	glfwSetKeyCallback(window, key_callback);&#xD;&#xA;    	while (!glfwWindowShouldClose(window))&#xD;&#xA;    	{&#xD;&#xA;    		float ratio;&#xD;&#xA;    		int width, height;&#xD;&#xA;    		glfwGetFramebufferSize(window, &width, &height);&#xD;&#xA;    		ratio = width / (float) height;&#xD;&#xA;    		glViewport(0, 0, width, height);&#xD;&#xA;    		glClear(GL_COLOR_BUFFER_BIT);&#xD;&#xA;    		glMatrixMode(GL_PROJECTION);&#xD;&#xA;    		glLoadIdentity();&#xD;&#xA;    		glOrtho(-ratio, ratio, -1.f, 1.f, 1.f, -1.f);&#xD;&#xA;    		glMatrixMode(GL_MODELVIEW);&#xD;&#xA;    		glLoadIdentity();&#xD;&#xA;    		glRotatef((float) glfwGetTime() * 50.f, 0.f, 0.f, 1.f);&#xD;&#xA;    		glBegin(GL_TRIANGLES);&#xD;&#xA;    		glColor3f(1.f, 0.f, 0.f);&#xD;&#xA;    		glVertex3f(-0.6f, -0.4f, 0.f);&#xD;&#xA;    		glColor3f(0.f, 1.f, 0.f);&#xD;&#xA;    		glVertex3f(0.6f, -0.4f, 0.f);&#xD;&#xA;    		glColor3f(0.f, 0.f, 1.f);&#xD;&#xA;    		glVertex3f(0.f, 0.6f, 0.f);&#xD;&#xA;    		glEnd();&#xD;&#xA;    		glfwSwapBuffers(window);&#xD;&#xA;    		glfwPollEvents();&#xD;&#xA;    	}&#xD;&#xA;    	glfwDestroyWindow(window);&#xD;&#xA;    	glfwTerminate();&#xD;&#xA;    	exit(EXIT_SUCCESS);&#xD;&#xA;    }"
6611643319879415449,56,6,"     import java.io.IOException;&#xD;&#xA;        &#xD;&#xA;        import android.app.WallpaperManager;&#xD;&#xA;        import android.content.Context;&#xD;&#xA;        import android.support.v4.view.PagerAdapter;&#xD;&#xA;        import android.support.v4.view.ViewPager;&#xD;&#xA;        import android.view.View;&#xD;&#xA;        import android.view.ViewGroup;&#xD;&#xA;        import android.widget.ImageView;&#xD;&#xA;         &#xD;&#xA;        public class ImageAdapter extends PagerAdapter {&#xD;&#xA;            Context context;&#xD;&#xA;            private final int[] GalImages = new int[] {&#xD;&#xA;                R.drawable.one,&#xD;&#xA;                R.drawable.two,&#xD;&#xA;                R.drawable.three&#xD;&#xA;            };    &#xD;&#xA;            ImageAdapter(Context context){&#xD;&#xA;                this.context=context;&#xD;&#xA;            }&#xD;&#xA;            @Override&#xD;&#xA;            public int getCount() {&#xD;&#xA;              return GalImages.length;&#xD;&#xA;            }&#xD;&#xA;            @Override&#xD;&#xA;            public boolean isViewFromObject(View view, Object object) {&#xD;&#xA;              return view == ((ImageView) object);&#xD;&#xA;            }&#xD;&#xA;            @Override&#xD;&#xA;            public Object instantiateItem(ViewGroup container, final int position) {&#xD;&#xA;              ImageView imageView = new ImageView(context);&#xD;&#xA;              int padding = context.getResources().getDimensionPixelSize(R.dimen.padding_small);&#xD;&#xA;              imageView.setPadding(padding, padding, padding, padding);&#xD;&#xA;              imageView.setScaleType(ImageView.ScaleType.FIT_XY);&#xD;&#xA;              imageView.setImageResource(GalImages[position]);  &#xD;&#xA;              imageView.setOnClickListener(new View.OnClickListener() {&#xD;&#xA;         &#xD;&#xA;                   public void onClick(View view) {&#xD;&#xA;                       &#xD;&#xA;                            WallpaperManager myWallpaperManager  = WallpaperManager.getInstance(context);&#xD;&#xA;                            try {&#xD;&#xA;                                    myWallpaperManager.setResource(GalImages[position]);&#xD;&#xA;                            } catch (IOException e) {&#xD;&#xA;                                     // TODO Auto-generated catch block&#xD;&#xA;                                     e.printStackTrace();&#xD;&#xA;                            }      &#xD;&#xA;                   }&#xD;&#xA;                   });&#xD;&#xA;              ((ViewPager) container).addView(imageView, 0);&#xD;&#xA;              return imageView;&#xD;&#xA;            }&#xD;&#xA;            @Override&#xD;&#xA;            public void destroyItem(ViewGroup container, int position, Object object) {&#xD;&#xA;              ((ViewPager) container).removeView((ImageView) object);&#xD;&#xA;            }&#xD;&#xA;          }"
-3835755800027651598,56,6,"	var TxtType = function(el, toRotate, period) {&#xD;&#xA;	        this.toRotate = toRotate;&#xD;&#xA;	        this.el = el;&#xD;&#xA;	        this.loopNum = 0;&#xD;&#xA;	        this.period = parseInt(period, 10) || 2000;&#xD;&#xA;	        this.txt = '';&#xD;&#xA;	        this.tick();&#xD;&#xA;	        this.isDeleting = false;&#xD;&#xA;	    };&#xD;&#xA;	&#xD;&#xA;	    TxtType.prototype.tick = function() {&#xD;&#xA;	        var i = this.loopNum % this.toRotate.length;&#xD;&#xA;	        var fullTxt = this.toRotate[i];&#xD;&#xA;	&#xD;&#xA;	        if (this.isDeleting) {&#xD;&#xA;	        this.txt = fullTxt.substring(0, this.txt.length - 1);&#xD;&#xA;	        } else {&#xD;&#xA;	        this.txt = fullTxt.substring(0, this.txt.length + 1);&#xD;&#xA;	        }&#xD;&#xA;	&#xD;&#xA;	        this.el.innerHTML = '<span class=""wrap"">'+this.txt+'</span>';&#xD;&#xA;	&#xD;&#xA;	        var that = this;&#xD;&#xA;	        var delta = 200 - Math.random() * 100;&#xD;&#xA;	&#xD;&#xA;	        if (this.isDeleting) { delta /= 2; }&#xD;&#xA;	&#xD;&#xA;	        if (!this.isDeleting && this.txt === fullTxt) {&#xD;&#xA;	        delta = this.period;&#xD;&#xA;	        this.isDeleting = true;&#xD;&#xA;	        } else if (this.isDeleting && this.txt === '') {&#xD;&#xA;	        this.isDeleting = false;&#xD;&#xA;	        this.loopNum++;&#xD;&#xA;	        delta = 500;&#xD;&#xA;	        }&#xD;&#xA;	&#xD;&#xA;	        setTimeout(function() {&#xD;&#xA;	        that.tick();&#xD;&#xA;	        }, delta);&#xD;&#xA;	    };&#xD;&#xA;	&#xD;&#xA;	    window.onload = function() {&#xD;&#xA;	        var elements = document.getElementsByClassName('typewrite');&#xD;&#xA;	        for (var i=0; i<elements.length; i++) {&#xD;&#xA;	            var toRotate = elements[i].getAttribute('data-type');&#xD;&#xA;	            var period = elements[i].getAttribute('data-period');&#xD;&#xA;	            if (toRotate) {&#xD;&#xA;	              new TxtType(elements[i], JSON.parse(toRotate), period);&#xD;&#xA;	            }&#xD;&#xA;	        }&#xD;&#xA;	        // INJECT CSS&#xD;&#xA;	        var css = document.createElement(""style"");&#xD;&#xA;	        css.type = ""text/css"";&#xD;&#xA;	        css.innerHTML = "".typewrite > .wrap { border-right: 0.08em solid #fff}"";&#xD;&#xA;	        document.body.appendChild(css);&#xD;&#xA;	    };"
5212237244318813184,58,6,"    /* modal layout */&#xD;&#xA;    	.modalwrapper {&#xD;&#xA;    		top: 0;&#xD;&#xA;    		left: 0;&#xD;&#xA;    		opacity: 0;&#xD;&#xA;    		position: absolute;&#xD;&#xA;    		visibility: hidden;&#xD;&#xA;    		box-shadow: 0 3px 7px rgba(0,0,0,.25);&#xD;&#xA;    		box-sizing: border-box;&#xD;&#xA;    		transition: all .4s ease-in-out;&#xD;&#xA;    		-webkit-transition: all .4s ease-in-out;&#xD;&#xA;    		-moz-transition: all .4s ease-in-out;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	.modalwrapper:target {&#xD;&#xA;    		opacity: 1;&#xD;&#xA;    		visibility: visible&#xD;&#xA;    	}&#xD;&#xA;    	&#xD;&#xA;    	.overlay {&#xD;&#xA;    		background-color: #000;&#xD;&#xA;    		background: rgba(0,0,0,.8);&#xD;&#xA;    		height: 100%;&#xD;&#xA;    		left: 0;&#xD;&#xA;    		position: fixed;&#xD;&#xA;    		top: 0;&#xD;&#xA;    		width: 100%;&#xD;&#xA;    		z-index: 1;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	.modalcontainer {&#xD;&#xA;    		display: table;&#xD;&#xA;    		background-color: #777;&#xD;&#xA;    		position: relative;&#xD;&#xA;    		z-index: 100;&#xD;&#xA;    		color: #fff;&#xD;&#xA;    		padding: 5px;&#xD;&#xA;    	}&#xD;&#xA;    	&#xD;&#xA;    	.modalcol1 { display: table-cell; }&#xD;&#xA;    	&#xD;&#xA;    	.clear { clear: both; }&#xD;&#xA;    	&#xD;&#xA;    	.modalwrapper input[type=checkbox] {&#xD;&#xA;    		float: right;&#xD;&#xA;    		margin-right: 20px;&#xD;&#xA;    	}&#xD;&#xA;    	&#xD;&#xA;    	.savebutton input[type=submit] {&#xD;&#xA;    		float: right;&#xD;&#xA;    		background-color: maroon;&#xD;&#xA;    		color: #fff;&#xD;&#xA;    		border: none;&#xD;&#xA;    		padding: 5px 10px;&#xD;&#xA;    		margin-top: 5px;&#xD;&#xA;    		margin-right: 20px;&#xD;&#xA;    	}&#xD;&#xA;    	/* modal layout ends here */"
6408102173588813903,58,6,"     public class AndroidMultiPartEntity extends MultipartEntity&#xD;&#xA;    &#xD;&#xA;    {&#xD;&#xA;    &#xD;&#xA;    	private final ProgressListener listener;&#xD;&#xA;    &#xD;&#xA;    	public AndroidMultiPartEntity(final ProgressListener listener) {&#xD;&#xA;    		super();&#xD;&#xA;    		this.listener = listener;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public AndroidMultiPartEntity(final HttpMultipartMode mode,&#xD;&#xA;    			final ProgressListener listener) {&#xD;&#xA;    		super(mode);&#xD;&#xA;    		this.listener = listener;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public AndroidMultiPartEntity(HttpMultipartMode mode,&#xD;&#xA;    			final String boundary, final Charset charset,&#xD;&#xA;    			final ProgressListener listener) {&#xD;&#xA;    		super(mode, boundary, charset);&#xD;&#xA;    		this.listener = listener;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	@Override&#xD;&#xA;    	public void writeTo(final OutputStream outstream) throws IOException {&#xD;&#xA;    		super.writeTo(new CountingOutputStream(outstream, this.listener));&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public static interface ProgressListener {&#xD;&#xA;    		void transferred(long num);&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public static class CountingOutputStream extends FilterOutputStream {&#xD;&#xA;    &#xD;&#xA;    		private final ProgressListener listener;&#xD;&#xA;    		private long transferred;&#xD;&#xA;    &#xD;&#xA;    		public CountingOutputStream(final OutputStream out,&#xD;&#xA;    				final ProgressListener listener) {&#xD;&#xA;    			super(out);&#xD;&#xA;    			this.listener = listener;&#xD;&#xA;    			this.transferred = 0;&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		public void write(byte[] b, int off, int len) throws IOException {&#xD;&#xA;    			out.write(b, off, len);&#xD;&#xA;    			this.transferred += len;&#xD;&#xA;    			this.listener.transferred(this.transferred);&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		public void write(int b) throws IOException {&#xD;&#xA;    			out.write(b);&#xD;&#xA;    			this.transferred++;&#xD;&#xA;    			this.listener.transferred(this.transferred);&#xD;&#xA;    		}&#xD;&#xA;    	}&#xD;&#xA;    }"
-6279757433910193750,59,6,"    class CreateUsers < ActiveRecord::Migration&#xD;&#xA;      def change&#xD;&#xA;        create_table :users do |t|&#xD;&#xA;          t.string :first_name&#xD;&#xA;          t.string :last_name&#xD;&#xA;          t.string :email&#xD;&#xA;          t.integer :total_calendar_count&#xD;&#xA;          t.integer :owned_calendar_count&#xD;&#xA;    &#xD;&#xA;          t.timestamps null: false&#xD;&#xA;        end&#xD;&#xA;      end&#xD;&#xA;    end&#xD;&#xA;    &#xD;&#xA;    class CreateAdministrations < ActiveRecord::Migration&#xD;&#xA;      def change&#xD;&#xA;        create_table :administrations do |t|&#xD;&#xA;          t.references :user, index: true, foreign_key: true&#xD;&#xA;          t.references :calendar, index: true, foreign_key: true&#xD;&#xA;          t.string :role&#xD;&#xA;    &#xD;&#xA;          t.timestamps null: false&#xD;&#xA;        end&#xD;&#xA;      end&#xD;&#xA;    end&#xD;&#xA;    &#xD;&#xA;    class CreateCalendars < ActiveRecord::Migration&#xD;&#xA;      def change&#xD;&#xA;        create_table :calendars do |t|&#xD;&#xA;          t.string :name&#xD;&#xA;    &#xD;&#xA;          t.timestamps null: false&#xD;&#xA;        end&#xD;&#xA;      end&#xD;&#xA;    end&#xD;&#xA;    &#xD;&#xA;    class CreatePosts < ActiveRecord::Migration&#xD;&#xA;      def change&#xD;&#xA;        create_table :posts do |t|&#xD;&#xA;        	t.references :calendar, index: true, foreign_key: true&#xD;&#xA;            t.date :date&#xD;&#xA;        	t.time :time&#xD;&#xA;        	t.string :focus&#xD;&#xA;        	t.string :format&#xD;&#xA;        	t.string :blog_title&#xD;&#xA;        	t.text :long_copy&#xD;&#xA;        	t.text :short_copy&#xD;&#xA;        	t.string :link&#xD;&#xA;        	t.string :hashtag&#xD;&#xA;        	t.string :media&#xD;&#xA;        	t.float :promotion&#xD;&#xA;        	t.string :target&#xD;&#xA;        	t.integer :approval&#xD;&#xA;        	t.text :comment&#xD;&#xA;    &#xD;&#xA;          t.timestamps null: false&#xD;&#xA;        end&#xD;&#xA;      end&#xD;&#xA;    end"
-7134295609242431760,60,6,"    package org.myorg;&#xD;&#xA;	&#xD;&#xA;	import java.io.IOException;&#xD;&#xA;	import java.util.*;&#xD;&#xA;	&#xD;&#xA;	import org.apache.hadoop.fs.Path;&#xD;&#xA;	import org.apache.hadoop.conf.*;&#xD;&#xA;	import org.apache.hadoop.io.*;&#xD;&#xA;	import org.apache.hadoop.mapred.*;&#xD;&#xA;	import org.apache.hadoop.util.*;&#xD;&#xA;	&#xD;&#xA; 	public class WordCount {&#xD;&#xA; 	&#xD;&#xA;	   public static class Map extends MapReduceBase implements Mapper<LongWritable, Text, Text, IntWritable> {&#xD;&#xA;	     private final static IntWritable one = new IntWritable(1);&#xD;&#xA;	     private Text word = new Text();&#xD;&#xA;	&#xD;&#xA;	     public void map(LongWritable key, Text value, OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {&#xD;&#xA;	       String line = value.toString();&#xD;&#xA; 	       StringTokenizer tokenizer = new StringTokenizer(line);&#xD;&#xA;	       while (tokenizer.hasMoreTokens()) {&#xD;&#xA;	         word.set(tokenizer.nextToken());&#xD;&#xA; 	         output.collect(word, one);&#xD;&#xA; 	       }&#xD;&#xA;	     }&#xD;&#xA; 	   }&#xD;&#xA;	&#xD;&#xA;	   public static class Reduce extends MapReduceBase implements Reducer<Text, IntWritable, Text, IntWritable> {&#xD;&#xA; 	     public void reduce(Text key, Iterator<IntWritable> values, OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {&#xD;&#xA;	       int sum = 0;&#xD;&#xA;	       while (values.hasNext()) {&#xD;&#xA;	         sum += values.next().get();&#xD;&#xA; 	       }&#xD;&#xA; 	       output.collect(key, new IntWritable(sum));&#xD;&#xA; 	     }&#xD;&#xA; 	   }&#xD;&#xA;	&#xD;&#xA;	   public static void main(String[] args) throws Exception {&#xD;&#xA;	     JobConf conf = new JobConf(WordCount.class);&#xD;&#xA;	     conf.setJobName(""wordcount"");&#xD;&#xA;	&#xD;&#xA; 	     conf.setOutputKeyClass(Text.class);&#xD;&#xA;	     conf.setOutputValueClass(IntWritable.class);&#xD;&#xA; 	&#xD;&#xA;	     conf.setMapperClass(Map.class);&#xD;&#xA; 	     conf.setCombinerClass(Reduce.class);&#xD;&#xA; 	     conf.setReducerClass(Reduce.class);&#xD;&#xA;	&#xD;&#xA; 	     conf.setInputFormat(TextInputFormat.class);&#xD;&#xA; 	     conf.setOutputFormat(TextOutputFormat.class);&#xD;&#xA; 	&#xD;&#xA;	     FileInputFormat.setInputPaths(conf, new Path(args[0]));&#xD;&#xA; 	     FileOutputFormat.setOutputPath(conf, new Path(args[1]));&#xD;&#xA;	&#xD;&#xA;	     JobClient.runJob(conf);&#xD;&#xA;	   }&#xD;&#xA;	}&#xD;&#xA;	`&#xD;&#xA;	&#xD;&#xA;	"
-7475599296014908134,60,6,"    <?xml version=""1.0"" encoding=""utf-8""?>&#xD;&#xA;    &#xD;&#xA;    <manifest xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;        package=""com.android.tabsample""&#xD;&#xA;        android:versionCode=""1""&#xD;&#xA;        android:versionName=""1.0"" >&#xD;&#xA;    &#xD;&#xA;        <uses-sdk android:minSdkVersion=""8"" />&#xD;&#xA;    &#xD;&#xA;        <application&#xD;&#xA;            android:icon=""@drawable/ic_launcher""&#xD;&#xA;            android:label=""@string/app_name"" >&#xD;&#xA;            <activity&#xD;&#xA;                android:name="".FirstActivity""&#xD;&#xA;                android:label=""@string/app_name"" >&#xD;&#xA;                <intent-filter>&#xD;&#xA;                    <action android:name=""android.intent.action.MAIN"" />&#xD;&#xA;    &#xD;&#xA;                    <category android:name=""android.intent.category.DEFAULT"" />&#xD;&#xA;                </intent-filter>&#xD;&#xA;            </activity>&#xD;&#xA;            <activity&#xD;&#xA;                android:name="".TabActivity""&#xD;&#xA;                android:label=""@string/app_name"" >&#xD;&#xA;                <intent-filter>&#xD;&#xA;                    <action android:name=""android.intent.action.MAIN"" />&#xD;&#xA;    &#xD;&#xA;                    <category android:name=""android.intent.category.LAUNCHER"" />&#xD;&#xA;                </intent-filter>&#xD;&#xA;            </activity>&#xD;&#xA;            <activity&#xD;&#xA;                android:name="".ActivityStack""&#xD;&#xA;                android:label=""@string/app_name"" >&#xD;&#xA;                <intent-filter>&#xD;&#xA;                    <action android:name=""android.intent.action.MAIN"" />&#xD;&#xA;    &#xD;&#xA;                    <category android:name=""android.intent.category.DEFAULT"" />&#xD;&#xA;                </intent-filter>&#xD;&#xA;            </activity>&#xD;&#xA;            <activity&#xD;&#xA;                android:name="".SecondActivity""&#xD;&#xA;                android:label=""@string/app_name"" >&#xD;&#xA;                <intent-filter>&#xD;&#xA;                    <action android:name=""android.intent.action.MAIN"" />&#xD;&#xA;    &#xD;&#xA;                    <category android:name=""android.intent.category.DEFAULT"" />&#xD;&#xA;                </intent-filter>&#xD;&#xA;            </activity>&#xD;&#xA;            <activity&#xD;&#xA;                android:name="".ThirdActivity""&#xD;&#xA;                android:label=""@string/app_name"" >&#xD;&#xA;                <intent-filter>&#xD;&#xA;                    <action android:name=""android.intent.action.MAIN"" />&#xD;&#xA;    &#xD;&#xA;                    <category android:name=""android.intent.category.DEFAULT"" />&#xD;&#xA;                </intent-filter>&#xD;&#xA;            </activity>&#xD;&#xA;        </application>&#xD;&#xA;    &#xD;&#xA;    </manifest>"
3452272278388001665,60,6,"    function simulate(element, eventName)&#xD;&#xA;        {&#xD;&#xA;            var options = extend(defaultOptions, arguments[2] || {});&#xD;&#xA;            var oEvent, eventType = null;&#xD;&#xA;    &#xD;&#xA;            for (var name in eventMatchers)&#xD;&#xA;            {&#xD;&#xA;                if (eventMatchers[name].test(eventName)) { eventType = name; break; }&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            if (!eventType)&#xD;&#xA;                throw new SyntaxError('Only HTMLEvents and MouseEvents interfaces are supported');&#xD;&#xA;    &#xD;&#xA;            if (document.createEvent)&#xD;&#xA;            {&#xD;&#xA;                oEvent = document.createEvent(eventType);&#xD;&#xA;                if (eventType == 'HTMLEvents')&#xD;&#xA;                {&#xD;&#xA;                    oEvent.initEvent(eventName, options.bubbles, options.cancelable);&#xD;&#xA;                }&#xD;&#xA;                else&#xD;&#xA;                {&#xD;&#xA;                    oEvent.initMouseEvent(eventName, options.bubbles, options.cancelable, document.defaultView,&#xD;&#xA;              options.button, options.pointerX, options.pointerY, options.pointerX, options.pointerY,&#xD;&#xA;              options.ctrlKey, options.altKey, options.shiftKey, options.metaKey, options.button, element);&#xD;&#xA;                }&#xD;&#xA;                element.dispatchEvent(oEvent);&#xD;&#xA;            }&#xD;&#xA;            else&#xD;&#xA;            {&#xD;&#xA;                options.clientX = options.pointerX;&#xD;&#xA;                options.clientY = options.pointerY;&#xD;&#xA;                var evt = document.createEventObject();&#xD;&#xA;                oEvent = extend(evt, options);&#xD;&#xA;                element.fireEvent('on' + eventName, oEvent);&#xD;&#xA;            }&#xD;&#xA;            return element;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        function extend(destination, source) {&#xD;&#xA;            for (var property in source)&#xD;&#xA;              destination[property] = source[property];&#xD;&#xA;            return destination;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    var eventMatchers = {&#xD;&#xA;        'HTMLEvents': /^(?:load|unload|abort|error|select|change|submit|reset|focus|blur|resize|scroll)$/,&#xD;&#xA;        'MouseEvents': /^(?:click|dblclick|mouse(?:down|up|over|move|out))$/&#xD;&#xA;    }&#xD;&#xA;    var defaultOptions = {&#xD;&#xA;        pointerX: 0,&#xD;&#xA;        pointerY: 0,&#xD;&#xA;        button: 0,&#xD;&#xA;        ctrlKey: false,&#xD;&#xA;        altKey: false,&#xD;&#xA;        shiftKey: false,&#xD;&#xA;        metaKey: false,&#xD;&#xA;        bubbles: true,&#xD;&#xA;        cancelable: true&#xD;&#xA;    }"
7682773963757537100,60,6,"        (function($) {&#xD;&#xA;      $.fn.menumaker = function(options) {&#xD;&#xA;          &#xD;&#xA;          var cssmenu = $(this), settings = $.extend({&#xD;&#xA;            title: ""Menu"",&#xD;&#xA;            format: ""dropdown"",&#xD;&#xA;            sticky: false&#xD;&#xA;          }, options);&#xD;&#xA;          return this.each(function() {&#xD;&#xA;            cssmenu.prepend('<div id=""menu-button"">' + settings.title + '</div>');&#xD;&#xA;            $(this).find(""#menu-button"").on('click', function(){&#xD;&#xA;              $(this).toggleClass('menu-opened');&#xD;&#xA;              var mainmenu = $(this).next('ul');&#xD;&#xA;              if (mainmenu.hasClass('open')) { &#xD;&#xA;                mainmenu.hide().removeClass('open');&#xD;&#xA;              }&#xD;&#xA;              else {&#xD;&#xA;                mainmenu.show().addClass('open');&#xD;&#xA;                if (settings.format === ""dropdown"") {&#xD;&#xA;                  mainmenu.find('ul').show();&#xD;&#xA;                }&#xD;&#xA;              }&#xD;&#xA;            });&#xD;&#xA;            cssmenu.find('li ul').parent().addClass('has-sub');&#xD;&#xA;            multiTg = function() {&#xD;&#xA;              cssmenu.find("".has-sub"").prepend('<span class=""submenu-button""></span>');&#xD;&#xA;              cssmenu.find('.submenu-button').on('click', function() {&#xD;&#xA;                $(this).toggleClass('submenu-opened');&#xD;&#xA;                if ($(this).siblings('ul').hasClass('open')) {&#xD;&#xA;                  $(this).siblings('ul').removeClass('open').hide();&#xD;&#xA;                }&#xD;&#xA;                else {&#xD;&#xA;                  $(this).siblings('ul').addClass('open').show();&#xD;&#xA;                }&#xD;&#xA;              });&#xD;&#xA;            };&#xD;&#xA;            if (settings.format === 'multitoggle') multiTg();&#xD;&#xA;            else cssmenu.addClass('dropdown');&#xD;&#xA;            if (settings.sticky === true) cssmenu.css('position', 'fixed');&#xD;&#xA;            resizeFix = function() {&#xD;&#xA;              if ($( window ).width() > 768) {&#xD;&#xA;                cssmenu.find('ul').show();&#xD;&#xA;              }&#xD;&#xA;              if ($(window).width() <= 768) {&#xD;&#xA;                cssmenu.find('ul').hide().removeClass('open');&#xD;&#xA;              }&#xD;&#xA;            };&#xD;&#xA;            resizeFix();&#xD;&#xA;            return $(window).on('resize', resizeFix);&#xD;&#xA;          });&#xD;&#xA;      };&#xD;&#xA;    })(jQuery);&#xD;&#xA;    (function($){&#xD;&#xA;    $(document).ready(function(){&#xD;&#xA;    $(""#cssmenu"").menumaker({&#xD;&#xA;       title: ""Menu"",&#xD;&#xA;       format: ""multitoggle""&#xD;&#xA;    });&#xD;&#xA;    });&#xD;&#xA;    })(jQuery);"
3415662555019872762,61,6,"    <!doctype html>&#xD;&#xA;    <head>&#xD;&#xA;    <title>File Upload Progress Demo #1</title>&#xD;&#xA;    <style>&#xD;&#xA;    body { padding: 30px }&#xD;&#xA;    form { display: block; margin: 20px auto; background: #eee; border-radius: 10px; padding: 15px }&#xD;&#xA;    &#xD;&#xA;    .progress { position:relative; width:400px; border: 1px solid #ddd; padding: 1px; border-radius: 3px; }&#xD;&#xA;    .bar { background-color: #B4F5B4; width:0%; height:20px; border-radius: 3px; }&#xD;&#xA;    .percent { position:absolute; display:inline-block; top:3px; left:48%; }&#xD;&#xA;    </style>&#xD;&#xA;    </head>&#xD;&#xA;    <body>&#xD;&#xA;        <h1>File Upload Progress Demo #1</h1>&#xD;&#xA;    	<code>&lt;input type=""file"" name=""myfile""></code>&#xD;&#xA;    	    <form action=""upload.php"" method=""post"" enctype=""multipart/form-data"">&#xD;&#xA;            <input type=""file"" name=""uploadedfile""><br>&#xD;&#xA;            <input type=""submit"" value=""Upload File to Server"">&#xD;&#xA;        </form>&#xD;&#xA;        &#xD;&#xA;        <div class=""progress"">&#xD;&#xA;            <div class=""bar""></div >&#xD;&#xA;            <div class=""percent"">0%</div >&#xD;&#xA;        </div>&#xD;&#xA;        &#xD;&#xA;        <div id=""status""></div>&#xD;&#xA;        &#xD;&#xA;    <script src=""http://ajax.googleapis.com/ajax/libs/jquery/1.7/jquery.js""></script>&#xD;&#xA;    <script src=""http://malsup.github.com/jquery.form.js""></script>&#xD;&#xA;    <script>&#xD;&#xA;    (function() {&#xD;&#xA;        &#xD;&#xA;    var bar = $('.bar');&#xD;&#xA;    var percent = $('.percent');&#xD;&#xA;    var status = $('#status');&#xD;&#xA;       &#xD;&#xA;    $('form').ajaxForm({&#xD;&#xA;        beforeSend: function() {&#xD;&#xA;            status.empty();&#xD;&#xA;            var percentVal = '0%';&#xD;&#xA;            bar.width(percentVal)&#xD;&#xA;            percent.html(percentVal);&#xD;&#xA;        },&#xD;&#xA;        uploadProgress: function(event, position, total, percentComplete) {&#xD;&#xA;            var percentVal = percentComplete + '%';&#xD;&#xA;            bar.width(percentVal)&#xD;&#xA;            percent.html(percentVal);&#xD;&#xA;        },&#xD;&#xA;    	complete: function(xhr) {&#xD;&#xA;         bar.width(""100%"");&#xD;&#xA;		percent.html(""100%"");&#xD;&#xA;    		status.html(xhr.responseText);&#xD;&#xA;    	}&#xD;&#xA;    }); &#xD;&#xA;    &#xD;&#xA;    })();       &#xD;&#xA;    </script>&#xD;&#xA;    &#xD;&#xA;    </body>&#xD;&#xA;    </html>   &#xD;&#xA;   "
3333130594070333076,61,6,"    Sub ButtonClick()&#xD;&#xA;    'TRUSTED CONNECTION&#xD;&#xA;        On Error GoTo errH&#xD;&#xA;       &#xD;&#xA;        Dim con As New ADODB.Connection&#xD;&#xA;        Dim rs As New ADODB.Recordset&#xD;&#xA;        Dim strPath As String&#xD;&#xA;        Dim intImportRow As Integer&#xD;&#xA;        Dim strFirstName, strLastName As String&#xD;&#xA;       &#xD;&#xA;        Dim server, username, password, table, database As String&#xD;&#xA;       &#xD;&#xA;       &#xD;&#xA;        With Sheets(""Sheet1"")&#xD;&#xA;               &#xD;&#xA;                server = .TextBox1.Text&#xD;&#xA;                table = .TextBox4.Text&#xD;&#xA;                database = .TextBox5.Text&#xD;&#xA;               &#xD;&#xA;               &#xD;&#xA;                If con.State <> 1 Then&#xD;&#xA;           &#xD;&#xA;                    con.Open ""Provider=SQLOLEDB;Data Source="" & server & "";Initial Catalog="" & database & "";Integrated Security=SSPI;""&#xD;&#xA;                    'con.Open&#xD;&#xA;           &#xD;&#xA;                End If&#xD;&#xA;                'this is the TRUSTED connection string&#xD;&#xA;               &#xD;&#xA;                Set rs.ActiveConnection = con&#xD;&#xA;               &#xD;&#xA;                'delete all records first if checkbox checked&#xD;&#xA;                If .CheckBox1 Then&#xD;&#xA;                    con.Execute ""delete from tbl_demo""&#xD;&#xA;                End If&#xD;&#xA;           &#xD;&#xA;                'set first row with records to import&#xD;&#xA;                'you could also just loop thru a range if you want.&#xD;&#xA;                intImportRow = 10&#xD;&#xA;               &#xD;&#xA;                Do Until .Cells(intImportRow, 1) = """"&#xD;&#xA;                    strFirstName = .Cells(intImportRow, 1)&#xD;&#xA;                    strLastName = .Cells(intImportRow, 2)&#xD;&#xA;                   &#xD;&#xA;                    'insert row into database&#xD;&#xA;                    con.Execute ""insert into tbl_demo (firstname, lastname) values ('"" & strFirstName & ""', '"" & strLastName & ""')""&#xD;&#xA;                   &#xD;&#xA;                    intImportRow = intImportRow + 1&#xD;&#xA;                Loop&#xD;&#xA;               &#xD;&#xA;                MsgBox ""Done importing"", vbInformation&#xD;&#xA;               &#xD;&#xA;                con.Close&#xD;&#xA;                Set con = Nothing&#xD;&#xA;       &#xD;&#xA;        End With&#xD;&#xA;       &#xD;&#xA;    Exit Sub&#xD;&#xA;    &#xD;&#xA;    errH:&#xD;&#xA;        MsgBox Err.Description&#xD;&#xA;    End Sub"
5285642758916732510,62,6,"    date,col_1,col_2&#xD;&#xA;    11/1/2012,1977652,1802851&#xD;&#xA;    12/1/2012,1128739,948687&#xD;&#xA;    1/1/2013,1201944,1514667&#xD;&#xA;    2/1/2013,1863148,1834006&#xD;&#xA;    3/1/2013,1314851,1906060&#xD;&#xA;    4/1/2013,1283943,1978702&#xD;&#xA;    5/1/2013,1127964,1195606&#xD;&#xA;    6/1/2013,1773254,977214&#xD;&#xA;    7/1/2013,1929574,1127450&#xD;&#xA;    8/1/2013,1980411,1808161&#xD;&#xA;    9/1/2013,1405691,1182788&#xD;&#xA;    10/1/2013,1336790,937890&#xD;&#xA;    11/1/2013,1851053,1358400&#xD;&#xA;    12/1/2013,1472623,1214610&#xD;&#xA;    1/1/2014,1155116,1757052&#xD;&#xA;    2/1/2014,1571611,1935038&#xD;&#xA;    3/1/2014,1898348,1320348&#xD;&#xA;    4/1/2014,1444838,1934789&#xD;&#xA;    5/1/2014,1235087,950194&#xD;&#xA;    6/1/2014,1272040,1580656&#xD;&#xA;    7/1/2014,980781,1680164&#xD;&#xA;    8/1/2014,1391291,1115999&#xD;&#xA;    9/1/2014,1211125,1542148&#xD;&#xA;    10/1/2014,1020824,1782795&#xD;&#xA;    11/1/2014,1685081,926612&#xD;&#xA;    12/1/2014,1469254,1767071&#xD;&#xA;    1/1/2015,1168523,935897&#xD;&#xA;    2/1/2015,1602610,1450541&#xD;&#xA;    3/1/2015,1830278,1354876&#xD;&#xA;    4/1/2015,1275158,1412555&#xD;&#xA;    5/1/2015,1560961,1839718&#xD;&#xA;    6/1/2015,949948,1587130&#xD;&#xA;    7/1/2015,1413765,1494446&#xD;&#xA;    8/1/2015,1166141,1305105&#xD;&#xA;    9/1/2015,958975,1202219&#xD;&#xA;    10/1/2015,902696,1023987&#xD;&#xA;    11/1/2015,961441,1865628&#xD;&#xA;    12/1/2015,1363145,1954046&#xD;&#xA;    1/1/2016,1862878,1470741&#xD;&#xA;    2/1/2016,1723891,1042760&#xD;&#xA;    3/1/2016,1906747,1169012&#xD;&#xA;    4/1/2016,1963364,1927063&#xD;&#xA;    5/1/2016,1899735,1936915&#xD;&#xA;    6/1/2016,1300369,1430697&#xD;&#xA;    7/1/2016,1777108,1401210&#xD;&#xA;    8/1/2016,1597045,1566763&#xD;&#xA;    9/1/2016,1558287,1140057&#xD;&#xA;    10/1/2016,1965665,1953595&#xD;&#xA;    11/1/2016,1800438,937551&#xD;&#xA;    12/1/2016,1689152,1221895&#xD;&#xA;    1/1/2017,1607824,1963282&#xD;&#xA;    2/1/2017,1878431,1415658&#xD;&#xA;    3/1/2017,1730296,1947106&#xD;&#xA;    4/1/2017,1956756,1696780&#xD;&#xA;    5/1/2017,1746673,1662892&#xD;&#xA;    6/1/2017,989702,1537646&#xD;&#xA;    7/1/2017,1098812,1592064&#xD;&#xA;    8/1/2017,1861973,1892987&#xD;&#xA;    9/1/2017,1129596,1406514&#xD;&#xA;    10/1/2017,1528632,1725020&#xD;&#xA;    11/1/2017,925850,1795575"
8652448581385012453,62,6,"    public static class NetworkDrives&#xD;&#xA;    	{&#xD;&#xA;    		public static bool  MapDrive(string DriveLetter, string Path, string Username, string Password)&#xD;&#xA;    		{&#xD;&#xA;    &#xD;&#xA;    			bool ReturnValue = false;&#xD;&#xA;    &#xD;&#xA;    			if(System.IO.Directory.Exists(DriveLetter + "":\\""))&#xD;&#xA;    			{&#xD;&#xA;    				DisconnectDrive(DriveLetter);&#xD;&#xA;    			}&#xD;&#xA;    			System.Diagnostics.Process p = new System.Diagnostics.Process();&#xD;&#xA;    			p.StartInfo.UseShellExecute = false;&#xD;&#xA;    			p.StartInfo.CreateNoWindow = true;&#xD;&#xA;    			p.StartInfo.RedirectStandardError = true;&#xD;&#xA;    			p.StartInfo.RedirectStandardOutput = true;&#xD;&#xA;    &#xD;&#xA;    			p.StartInfo.FileName = ""net.exe"";&#xD;&#xA;    			p.StartInfo.Arguments = "" use "" + DriveLetter + "": "" + '""' + Path + '""' + "" "" + Password + "" /user:"" + Username;&#xD;&#xA;    			p.Start();&#xD;&#xA;    			p.WaitForExit();&#xD;&#xA;    &#xD;&#xA;    			string ErrorMessage = p.StandardError.ReadToEnd();&#xD;&#xA;    			string OuputMessage = p.StandardOutput.ReadToEnd();&#xD;&#xA;    			if (ErrorMessage.Length > 0)&#xD;&#xA;    			{&#xD;&#xA;    				throw new Exception(""Error:"" + ErrorMessage);&#xD;&#xA;    			}&#xD;&#xA;    			else&#xD;&#xA;    			{&#xD;&#xA;    				ReturnValue = true;&#xD;&#xA;    			}&#xD;&#xA;    			return ReturnValue;&#xD;&#xA;    		}&#xD;&#xA;    		public static bool DisconnectDrive(string DriveLetter)&#xD;&#xA;    		{&#xD;&#xA;    			bool ReturnValue = false;&#xD;&#xA;    			System.Diagnostics.Process p = new System.Diagnostics.Process();&#xD;&#xA;    			p.StartInfo.UseShellExecute = false;&#xD;&#xA;    			p.StartInfo.CreateNoWindow = true;&#xD;&#xA;    			p.StartInfo.RedirectStandardError = true;&#xD;&#xA;    			p.StartInfo.RedirectStandardOutput = true;&#xD;&#xA;    &#xD;&#xA;    			p.StartInfo.FileName = ""net.exe"";&#xD;&#xA;    			p.StartInfo.Arguments = "" use "" + DriveLetter + "": /DELETE"";&#xD;&#xA;    			p.Start();&#xD;&#xA;    			p.WaitForExit();&#xD;&#xA;    &#xD;&#xA;    			string ErrorMessage = p.StandardError.ReadToEnd();&#xD;&#xA;    			string OuputMessage = p.StandardOutput.ReadToEnd();&#xD;&#xA;    			if (ErrorMessage.Length > 0)&#xD;&#xA;    			{&#xD;&#xA;    				throw new Exception(""Error:"" + ErrorMessage);&#xD;&#xA;    			}&#xD;&#xA;    			else&#xD;&#xA;    			{&#xD;&#xA;    				ReturnValue = true;&#xD;&#xA;    			}&#xD;&#xA;    			return ReturnValue;&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    	}"
-2161526969604151963,63,6,"    Public Function Months( _&#xD;&#xA;      ByVal datDate1 As Date, _&#xD;&#xA;      ByVal datDate2 As Date, _&#xD;&#xA;      Optional ByVal booLinear As Boolean) _&#xD;&#xA;      As Integer&#xD;&#xA;    &#xD;&#xA;    ' Returns the difference in full months between datDate1 and datDate2.&#xD;&#xA;    '&#xD;&#xA;    ' Calculates correctly for:&#xD;&#xA;    '   negative differences&#xD;&#xA;    '   leap years&#xD;&#xA;    '   dates of 29. February&#xD;&#xA;    '   date/time values with embedded time values&#xD;&#xA;    '   negative date/time values (prior to 1899-12-29)&#xD;&#xA;    '&#xD;&#xA;    ' Optionally returns negative counts rounded down to provide a&#xD;&#xA;    ' linear sequence of month counts.&#xD;&#xA;    ' For a given datDate1, if datDate2 is decreased stepwise one month from&#xD;&#xA;    ' returning a positive count to returning a negative count, one or two&#xD;&#xA;    ' occurrences of count zero will be returned.&#xD;&#xA;    ' If booLinear is False, the sequence will be:&#xD;&#xA;    '   3, 2, 1, 0,  0, -1, -2&#xD;&#xA;    ' If booLinear is True, the sequence will be:&#xD;&#xA;    '   3, 2, 1, 0, -1, -2, -3&#xD;&#xA;    '&#xD;&#xA;    ' If booLinear is False, reversing datDate1 and datDate2 will return&#xD;&#xA;    ' results of same absolute Value, only the sign will change.&#xD;&#xA;    ' This behaviour mimics that of Fix().&#xD;&#xA;    ' If booLinear is True, reversing datDate1 and datDate2 will return&#xD;&#xA;    ' results where the negative count is offset by -1.&#xD;&#xA;    ' This behaviour mimics that of Int().&#xD;&#xA;    &#xD;&#xA;    ' DateAdd() is used for check for month end of February as it correctly&#xD;&#xA;    ' returns Feb. 28. when adding a count of months to dates of Feb. 29.&#xD;&#xA;    ' when the resulting year is a common year.&#xD;&#xA;    '&#xD;&#xA;    ' 2010-03-30. Cactus Data ApS, CPH.&#xD;&#xA;    &#xD;&#xA;      Dim intDiff   As Integer&#xD;&#xA;      Dim intSign   As Integer&#xD;&#xA;      Dim intMonths As Integer&#xD;&#xA;      &#xD;&#xA;      ' Find difference in calendar months.&#xD;&#xA;      intMonths = DateDiff(""m"", datDate1, datDate2)&#xD;&#xA;      ' For positive resp. negative intervals, check if the second date&#xD;&#xA;      ' falls before, on, or after the crossing date for a 1 month period&#xD;&#xA;      ' while at the same time correcting for February 29. of leap years.&#xD;&#xA;      If DateDiff(""d"", datDate1, datDate2) > 0 Then&#xD;&#xA;        intSign = Sgn(DateDiff(""d"", DateAdd(""m"", intMonths, datDate1), datDate2))&#xD;&#xA;        intDiff = Abs(intSign < 0)&#xD;&#xA;      Else&#xD;&#xA;        intSign = Sgn(DateDiff(""d"", DateAdd(""m"", -intMonths, datDate2), datDate1))&#xD;&#xA;        If intSign <> 0 Then&#xD;&#xA;          ' Offset negative count of months to continuous sequence if requested.&#xD;&#xA;          intDiff = Abs(booLinear)&#xD;&#xA;        End If&#xD;&#xA;        intDiff = intDiff - Abs(intSign < 0)&#xD;&#xA;      End If&#xD;&#xA;      &#xD;&#xA;      ' Return count of months as count of full 1 month periods.&#xD;&#xA;      Months = intMonths - intDiff&#xD;&#xA;      &#xD;&#xA;    End Function"
-4262539974279438276,63,6,"    public class Utility {&#xD;&#xA;    &#xD;&#xA;        public static Map<String, Object> jsonToMap(Object json) throws JSONException {&#xD;&#xA;    &#xD;&#xA;            if(json instanceof JSONObject)&#xD;&#xA;                return _jsonToMap_((JSONObject)json) ;&#xD;&#xA;    &#xD;&#xA;            else if (json instanceof String)&#xD;&#xA;            {&#xD;&#xA;                JSONObject jsonObject = new JSONObject((String)json) ;&#xD;&#xA;                return _jsonToMap_(jsonObject) ;&#xD;&#xA;            }&#xD;&#xA;            return null ;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;       private static Map<String, Object> _jsonToMap_(JSONObject json) throws JSONException {&#xD;&#xA;            Map<String, Object> retMap = new HashMap<String, Object>();&#xD;&#xA;    &#xD;&#xA;            if(json != JSONObject.NULL) {&#xD;&#xA;                retMap = toMap(json);&#xD;&#xA;            }&#xD;&#xA;            return retMap;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        private static Map<String, Object> toMap(JSONObject object) throws JSONException {&#xD;&#xA;            Map<String, Object> map = new HashMap<String, Object>();&#xD;&#xA;    &#xD;&#xA;            Iterator<String> keysItr = object.keys();&#xD;&#xA;            while(keysItr.hasNext()) {&#xD;&#xA;                String key = keysItr.next();&#xD;&#xA;                Object value = object.get(key);&#xD;&#xA;    &#xD;&#xA;                if(value instanceof JSONArray) {&#xD;&#xA;                    value = toList((JSONArray) value);&#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;                else if(value instanceof JSONObject) {&#xD;&#xA;                    value = toMap((JSONObject) value);&#xD;&#xA;                }&#xD;&#xA;                map.put(key, value);&#xD;&#xA;            }&#xD;&#xA;            return map;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        public static List<Object> toList(JSONArray array) throws JSONException {&#xD;&#xA;            List<Object> list = new ArrayList<Object>();&#xD;&#xA;            for(int i = 0; i < array.length(); i++) {&#xD;&#xA;                Object value = array.get(i);&#xD;&#xA;                if(value instanceof JSONArray) {&#xD;&#xA;                    value = toList((JSONArray) value);&#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;                else if(value instanceof JSONObject) {&#xD;&#xA;                    value = toMap((JSONObject) value);&#xD;&#xA;                }&#xD;&#xA;                list.add(value);&#xD;&#xA;            }&#xD;&#xA;            return list;&#xD;&#xA;        }&#xD;&#xA;    }"
-3676325380414689946,63,6,"           public JSONObject makeHttpRequest(String url, String method,&#xD;&#xA;            List<NameValuePair> params) {&#xD;&#xA; &#xD;&#xA;        // Making HTTP request&#xD;&#xA;        try {&#xD;&#xA; &#xD;&#xA;            // check for request method&#xD;&#xA;            if(method == ""POST""){&#xD;&#xA;                // request method is POST&#xD;&#xA;                // defaultHttpClient&#xD;&#xA;                DefaultHttpClient httpClient = new DefaultHttpClient();&#xD;&#xA;                HttpPost httpPost = new HttpPost(url);&#xD;&#xA;                httpPost.setEntity(new UrlEncodedFormEntity(params));&#xD;&#xA; &#xD;&#xA;                HttpResponse httpResponse = httpClient.execute(httpPost);&#xD;&#xA;                HttpEntity httpEntity = httpResponse.getEntity();&#xD;&#xA;                is = httpEntity.getContent();&#xD;&#xA; &#xD;&#xA;            }else if(method == ""GET""){&#xD;&#xA;                // request method is GET&#xD;&#xA;                DefaultHttpClient httpClient = new DefaultHttpClient();&#xD;&#xA;                String paramString = URLEncodedUtils.format(params, ""utf-8"");&#xD;&#xA;                url += ""?"" + paramString;&#xD;&#xA;                HttpGet httpGet = new HttpGet(url);&#xD;&#xA; &#xD;&#xA;                HttpResponse httpResponse = httpClient.execute(httpGet);&#xD;&#xA;                HttpEntity httpEntity = httpResponse.getEntity();&#xD;&#xA;                is = httpEntity.getContent();&#xD;&#xA;            }           &#xD;&#xA; &#xD;&#xA;        } catch (UnsupportedEncodingException e) {&#xD;&#xA;            e.printStackTrace();&#xD;&#xA;        } catch (ClientProtocolException e) {&#xD;&#xA;            e.printStackTrace();&#xD;&#xA;        } catch (IOException e) {&#xD;&#xA;            e.printStackTrace();&#xD;&#xA;        }&#xD;&#xA; &#xD;&#xA;        try {&#xD;&#xA;            BufferedReader reader = new BufferedReader(new InputStreamReader(&#xD;&#xA;                    is, ""iso-8859-1""), 8);&#xD;&#xA;            StringBuilder sb = new StringBuilder();&#xD;&#xA;            String line = null;&#xD;&#xA;            while ((line = reader.readLine()) != null) {&#xD;&#xA;                sb.append(line + ""\n"");&#xD;&#xA;            }&#xD;&#xA;            is.close();&#xD;&#xA;            json = sb.toString();&#xD;&#xA;        } catch (Exception e) {&#xD;&#xA;            Log.e(""Buffer Error"", ""Error converting result "" + e.toString());&#xD;&#xA;        }&#xD;&#xA; &#xD;&#xA;        // try parse the string to a JSON object&#xD;&#xA;        try {&#xD;&#xA;            jObj = new JSONObject(json);&#xD;&#xA;        } catch (JSONException e) {&#xD;&#xA;            Log.e(""JSON Parser"", ""Error parsing data "" + e.toString());&#xD;&#xA;        }&#xD;&#xA; &#xD;&#xA;        // return JSON String&#xD;&#xA;        return jObj;&#xD;&#xA; &#xD;&#xA;    }"
-4662617865398499301,65,6,"    public class CustomAdapter extends BaseAdapter {&#xD;&#xA;    &#xD;&#xA;        String [] result;&#xD;&#xA;        Context context;&#xD;&#xA;        int [] imageId;&#xD;&#xA;        private static LayoutInflater inflater=null;&#xD;&#xA;        public CustomAdapter(MainActivity mainActivity, String[] prgmNameList, int[] prgmImages) {&#xD;&#xA;            // TODO Auto-generated constructor stub&#xD;&#xA;            result=prgmNameList;&#xD;&#xA;            context=mainActivity;&#xD;&#xA;            imageId=prgmImages;&#xD;&#xA;            inflater = ( LayoutInflater )context.&#xD;&#xA;                    getSystemService(Context.LAYOUT_INFLATER_SERVICE);&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public int getCount() {&#xD;&#xA;            // TODO Auto-generated method stub&#xD;&#xA;            return result.length;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public Object getItem(int position) {&#xD;&#xA;            // TODO Auto-generated method stub&#xD;&#xA;            return position;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public long getItemId(int position) {&#xD;&#xA;            // TODO Auto-generated method stub&#xD;&#xA;            return position;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public class Holder&#xD;&#xA;        {&#xD;&#xA;            TextView tv;&#xD;&#xA;            ImageView img;&#xD;&#xA;        }&#xD;&#xA;        @Override&#xD;&#xA;        public View getView(final int position, View convertView, ViewGroup parent) {&#xD;&#xA;            // TODO Auto-generated method stub&#xD;&#xA;            Holder holder=new Holder();&#xD;&#xA;            View rowView;&#xD;&#xA;    &#xD;&#xA;            rowView = inflater.inflate(R.layout.programlist, null);&#xD;&#xA;            holder.tv=(TextView) rowView.findViewById(R.id.textView1);&#xD;&#xA;            holder.img=(ImageView) rowView.findViewById(R.id.imageView1);&#xD;&#xA;    &#xD;&#xA;            holder.tv.setText(result[position]);&#xD;&#xA;            holder.img.setImageResource(imageId[position]);&#xD;&#xA;            rowView.setOnClickListener(new OnClickListener() {&#xD;&#xA;    &#xD;&#xA;                @Override&#xD;&#xA;                public void onClick(View v) {&#xD;&#xA;                    // TODO Auto-generated method stub&#xD;&#xA;                    Toast.makeText(context, ""You Clicked "" + result[position], Toast.LENGTH_LONG).show();&#xD;&#xA;    &#xD;&#xA;                }&#xD;&#xA;            });&#xD;&#xA;    &#xD;&#xA;            return rowView;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    }"
6414864447294127531,66,6,"    [&#xD;&#xA;        {&#xD;&#xA;            ""subject_id"": ""1"",&#xD;&#xA;            ""name"": ""Bob"",&#xD;&#xA;            ""dob"": ""12/31/00"",&#xD;&#xA;            ""gender"": ""Male"",&#xD;&#xA;            ""visits"": {&#xD;&#xA;                ""12/31/15"": {&#xD;&#xA;                    ""age"": ""17"",&#xD;&#xA;                    ""visit_category"": ""Baseline Visit""&#xD;&#xA;                },&#xD;&#xA;                ""12/31/16"": {&#xD;&#xA;                    ""age"": ""18"",&#xD;&#xA;                    ""visit_category"": ""Follow Up Visit""&#xD;&#xA;                },&#xD;&#xA;                ""12/31/17"": {&#xD;&#xA;                    ""age"": ""18"",&#xD;&#xA;                    ""visit_category"": ""Follow Up Visit""&#xD;&#xA;                }&#xD;&#xA;            },&#xD;&#xA;            ""samples"": {&#xD;&#xA;                ""XXX123"": {&#xD;&#xA;                    ""completed_by"": ""Sally"",&#xD;&#xA;                    ""label_on_sample"": ""1""&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        },&#xD;&#xA;        {&#xD;&#xA;            ""subject_id"": ""2"",&#xD;&#xA;            ""name"": null,&#xD;&#xA;            ""dob"": ""1/1/01"",&#xD;&#xA;            ""gender"": ""Female"",&#xD;&#xA;            ""visits"": {&#xD;&#xA;                ""1/1/11"": {&#xD;&#xA;                    ""age"": ""10"",&#xD;&#xA;                    ""visit_category"": ""Baseline Visit""&#xD;&#xA;                },&#xD;&#xA;                ""1/1/12"": {&#xD;&#xA;                    ""age"": ""11"",&#xD;&#xA;                    ""visit_category"": ""Follow Up Visit""&#xD;&#xA;                },&#xD;&#xA;                ""1/1/13"": {&#xD;&#xA;                    ""age"": ""12"",&#xD;&#xA;                    ""visit_category"": ""Follow Up Visit""&#xD;&#xA;                },&#xD;&#xA;                ""1/1/14"": {&#xD;&#xA;                    ""age"": ""13"",&#xD;&#xA;                    ""visit_category"": ""Follow Up Visit""&#xD;&#xA;                },&#xD;&#xA;                ""1/1/15"": {&#xD;&#xA;                    ""age"": ""14"",&#xD;&#xA;                    ""visit_category"": ""Follow Up Visit""&#xD;&#xA;                }&#xD;&#xA;            },&#xD;&#xA;            ""samples"": {&#xD;&#xA;                ""YYY456"": {&#xD;&#xA;                    ""completed_by"": null,&#xD;&#xA;                    ""label_on_sample"": ""2""&#xD;&#xA;                },&#xD;&#xA;                ""ZZZ789"": {&#xD;&#xA;                    ""completed_by"": ""Sally"",&#xD;&#xA;                    ""label_on_sample"": ""2""&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    ]"
107182249319194004,66,6,"     var step = 1;&#xD;&#xA;     var current = 0;&#xD;&#xA;       var maximum = 0;&#xD;&#xA;      var visible = 2;&#xD;&#xA;      var speed = 500;&#xD;&#xA;     var liSize = 120;&#xD;&#xA;     var height = 60;    &#xD;&#xA;      var ulSize = liSize * maximum;&#xD;&#xA;      var divSize = liSize * visible;&#xD;&#xA;     $(document).unbind('pageinit').bind('pageinit', function () {    &#xD;&#xA;          callMenuConnection(); &#xD;&#xA;           $('.categories').css(""width"", ""auto"").css(""height"", height+""px"").css(""visibility"", ""visible"").css(""overflow"", ""hidden"").css(""position"", ""relative"");&#xD;&#xA;           $("".categories ul a"").css(""list-style"",""none"").css(""display"",""inline"");&#xD;&#xA;           $("".categories ul"").css(""width"", ulSize+""px"").css(""left"", -(current * liSize)).css(""position"", ""absolute"").css(""white-space"",""nowrap"").css(""margin"",""0px"").css(""padding"",""5px"");      &#xD;&#xA;      });&#xD;&#xA;     $(document).unbind('click').bind('click', function () {&#xD;&#xA;            scroll();&#xD;&#xA;     });&#xD;&#xA;       function callMenuConnection() {  &#xD;&#xA;           $.support.cors = true;&#xD;&#xA;           $.ajax({&#xD;&#xA;                type: ""GET"",&#xD;&#xA;                url: ""one.html"",&#xD;&#xA;                contentType: ""text/xml"",&#xD;&#xA;                dataType: ""xml"",&#xD;&#xA;                data: """",&#xD;&#xA;                cache:false,&#xD;&#xA;                processData:false,&#xD;&#xA;                crossDomain:true,&#xD;&#xA;                success: processSuccess,&#xD;&#xA;                error: processError&#xD;&#xA;            }); &#xD;&#xA;      }&#xD;&#xA;          var scripts ="""";     &#xD;&#xA;      function processSuccess(data) {&#xD;&#xA;             $(data).find(""category"").each(function () {     &#xD;&#xA;             var id = $(this).find('id').text();&#xD;&#xA;             var title = $(this).find('title').text();&#xD;&#xA;              scripts = scripts+'<a  class=""ids_cat"" data-role=""button"" data-transition=""slide""  data-inline=""true"" >' +title+ '</a>';&#xD;&#xA;            });&#xD;&#xA;            $('#cat_list').append(scripts);&#xD;&#xA;            $('#cat_list').trigger('create');&#xD;&#xA;             maximum = $("".categories ul a"").size();&#xD;&#xA;      }&#xD;&#xA;         function processError(data)&#xD;&#xA;           {&#xD;&#xA;               alert(""error"");&#xD;&#xA;           }&#xD;&#xA;     function scroll(){ &#xD;&#xA;     $("".categories"").swipeleft(function(event){&#xD;&#xA;      if(current + step < 0 || current + step > maximum - visible) {return; }&#xD;&#xA;    else {&#xD;&#xA;        current = current + step;&#xD;&#xA;        $('.categories ul').animate({left: -(liSize * current)}, speed, null);&#xD;&#xA;    }&#xD;&#xA;    return false;&#xD;&#xA;    });&#xD;&#xA;        $("".categories"").swiperight(function(event){&#xD;&#xA;          if(current - step < 0 || current - step > maximum - visible) {return; }&#xD;&#xA;            else {&#xD;&#xA;            current = current - step;&#xD;&#xA;             $('.categories ul').animate({left: -(liSize * current)}, speed, null);&#xD;&#xA;         }&#xD;&#xA;          return false;&#xD;&#xA;      });         &#xD;&#xA;      }"
-7722577257945935580,68,6,"    CREATE FUNCTION [dbo].[FN_ListToTable]&#xD;&#xA;    (&#xD;&#xA;         @SplitOn              char(1)              --REQUIRED, the character to split the @List string on&#xD;&#xA;        ,@List                 varchar(8000)        --REQUIRED, the list to split apart&#xD;&#xA;    )&#xD;&#xA;    RETURNS&#xD;&#xA;    @ParsedList table&#xD;&#xA;    (&#xD;&#xA;        ListValue varchar(500)&#xD;&#xA;    )&#xD;&#xA;    AS&#xD;&#xA;    BEGIN&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;    Takes the given @List string and splits it apart based on the given @SplitOn character.&#xD;&#xA;    A table is returned, one row per split item, with a column name ""ListValue"".&#xD;&#xA;    This function workes for fixed or variable lenght items.&#xD;&#xA;    Empty and null items will not be included in the results set.&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    Returns a table, one row per item in the list, with a column name ""ListValue""&#xD;&#xA;    &#xD;&#xA;    EXAMPLE:&#xD;&#xA;    ----------&#xD;&#xA;    SELECT * FROM dbo.FN_ListToTable(',','1,12,123,1234,54321,6,A,*,|||,,,,B')&#xD;&#xA;    &#xD;&#xA;        returns:&#xD;&#xA;            ListValue  &#xD;&#xA;            -----------&#xD;&#xA;            1&#xD;&#xA;            12&#xD;&#xA;            123&#xD;&#xA;            1234&#xD;&#xA;            54321&#xD;&#xA;            6&#xD;&#xA;            A&#xD;&#xA;            *&#xD;&#xA;            |||&#xD;&#xA;            B&#xD;&#xA;    &#xD;&#xA;            (10 row(s) affected)&#xD;&#xA;    &#xD;&#xA;    **/&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    ----------------&#xD;&#xA;    --SINGLE QUERY-- --this will not return empty rows&#xD;&#xA;    ----------------&#xD;&#xA;    INSERT INTO @ParsedList&#xD;&#xA;            (ListValue)&#xD;&#xA;        SELECT&#xD;&#xA;            ListValue&#xD;&#xA;            FROM (SELECT&#xD;&#xA;                      LTRIM(RTRIM(SUBSTRING(List2, number+1, CHARINDEX(@SplitOn, List2, number+1)-number - 1))) AS ListValue&#xD;&#xA;                      FROM (&#xD;&#xA;                               SELECT @SplitOn + @List + @SplitOn AS List2&#xD;&#xA;                           ) AS dt&#xD;&#xA;                          INNER JOIN Numbers n ON n.Number < LEN(dt.List2)&#xD;&#xA;                      WHERE SUBSTRING(List2, number, 1) = @SplitOn&#xD;&#xA;                 ) dt2&#xD;&#xA;            WHERE ListValue IS NOT NULL AND ListValue!=''&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    RETURN&#xD;&#xA;    &#xD;&#xA;    END --Function FN_ListToTable"
8715643768256872819,69,6,"     public class StringSwitchDemo {&#xD;&#xA;        &#xD;&#xA;            public static int getMonthNumber(String month) {&#xD;&#xA;        &#xD;&#xA;                int monthNumber = 0;&#xD;&#xA;        &#xD;&#xA;                if (month == null) {&#xD;&#xA;                    return monthNumber;&#xD;&#xA;                }&#xD;&#xA;        &#xD;&#xA;                switch (month.toLowerCase()) {&#xD;&#xA;                    case ""january"":&#xD;&#xA;                        monthNumber = 1;&#xD;&#xA;                        break;&#xD;&#xA;                    case ""february"":&#xD;&#xA;                        monthNumber = 2;&#xD;&#xA;                        break;&#xD;&#xA;                    case ""march"":&#xD;&#xA;                        monthNumber = 3;&#xD;&#xA;                        break;&#xD;&#xA;                    case ""april"":&#xD;&#xA;                        monthNumber = 4;&#xD;&#xA;                        break;&#xD;&#xA;                    case ""may"":&#xD;&#xA;                        monthNumber = 5;&#xD;&#xA;                        break;&#xD;&#xA;                    case ""june"":&#xD;&#xA;                        monthNumber = 6;&#xD;&#xA;                        break;&#xD;&#xA;                    case ""july"":&#xD;&#xA;                        monthNumber = 7;&#xD;&#xA;                        break;&#xD;&#xA;                    case ""august"":&#xD;&#xA;                        monthNumber = 8;&#xD;&#xA;                        break;&#xD;&#xA;                    case ""september"":&#xD;&#xA;                        monthNumber = 9;&#xD;&#xA;                        break;&#xD;&#xA;                    case ""october"":&#xD;&#xA;                        monthNumber = 10;&#xD;&#xA;                        break;&#xD;&#xA;                    case ""november"":&#xD;&#xA;                        monthNumber = 11;&#xD;&#xA;                        break;&#xD;&#xA;                    case ""december"":&#xD;&#xA;                        monthNumber = 12;&#xD;&#xA;                        break;&#xD;&#xA;                    default: &#xD;&#xA;                        monthNumber = 0;&#xD;&#xA;                        break;&#xD;&#xA;                }&#xD;&#xA;        &#xD;&#xA;                return monthNumber;&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            public static void main(String[] args) {&#xD;&#xA;        &#xD;&#xA;                String month = ""August"";&#xD;&#xA;        &#xD;&#xA;                int returnedMonthNumber =&#xD;&#xA;                    StringSwitchDemo.getMonthNumber(month);&#xD;&#xA;        &#xD;&#xA;                if (returnedMonthNumber == 0) {&#xD;&#xA;                    System.out.println(""Invalid month"");&#xD;&#xA;                } else {&#xD;&#xA;                    System.out.println(returnedMonthNumber);&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        }"
-6956868702792698741,69,6,"        public class HeaderAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder> {&#xD;&#xA;        private static final int TYPE_HEADER = 0;&#xD;&#xA;        private static final int TYPE_ITEM = 1;&#xD;&#xA;        String[] data;&#xD;&#xA;    &#xD;&#xA;        public HeaderAdapter(String[] data) {&#xD;&#xA;            this.data = data;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {&#xD;&#xA;            if (viewType == TYPE_ITEM) {&#xD;&#xA;                //inflate your layout and pass it to view holder&#xD;&#xA;                return new VHItem(null);&#xD;&#xA;            } else if (viewType == TYPE_HEADER) {&#xD;&#xA;                //inflate your layout and pass it to view holder&#xD;&#xA;                return new VHHeader(null);&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            throw new RuntimeException(""there is no type that matches the type "" + viewType + "" + make sure your using types correctly"");&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {&#xD;&#xA;            if (holder instanceof VHItem) {&#xD;&#xA;                String dataItem = getItem(position);&#xD;&#xA;                //cast holder to VHItem and set data&#xD;&#xA;            } else if (holder instanceof VHHeader) {&#xD;&#xA;                //cast holder to VHHeader and set data for header.&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public int getItemCount() {&#xD;&#xA;            return data.length + 1;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public int getItemViewType(int position) {&#xD;&#xA;            if (isPositionHeader(position))&#xD;&#xA;                return TYPE_HEADER;&#xD;&#xA;    &#xD;&#xA;            return TYPE_ITEM;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private boolean isPositionHeader(int position) {&#xD;&#xA;            return position == 0;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private String getItem(int position) {&#xD;&#xA;            return data[position - 1];&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        class VHItem extends RecyclerView.ViewHolder {&#xD;&#xA;            TextView title;&#xD;&#xA;    &#xD;&#xA;            public VHItem(View itemView) {&#xD;&#xA;                super(itemView);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        class VHHeader extends RecyclerView.ViewHolder {&#xD;&#xA;            Button button;&#xD;&#xA;    &#xD;&#xA;            public VHHeader(View itemView) {&#xD;&#xA;                super(itemView);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }"
7295402592833534594,71,6,"    @implementation UIImage (fixOrientation)&#xD;&#xA;     - (UIImage *)fixOrientation {&#xD;&#xA;    // No-op if the orientation is already correct&#xD;&#xA;    if (self.imageOrientation == UIImageOrientationUp) return self;&#xD;&#xA;    // We need to calculate the proper transformation to make the image upright.&#xD;&#xA;    // We do it in 2 steps: Rotate if Left/Right/Down, and then flip if Mirrored.&#xD;&#xA;    CGAffineTransform transform = CGAffineTransformIdentity;&#xD;&#xA;    switch (self.imageOrientation) {&#xD;&#xA;        case UIImageOrientationDown:&#xD;&#xA;        case UIImageOrientationDownMirrored:&#xD;&#xA;            transform = CGAffineTransformTranslate(transform, self.size.width, self.size.height);&#xD;&#xA;            transform = CGAffineTransformRotate(transform, M_PI);&#xD;&#xA;            break;&#xD;&#xA;        case UIImageOrientationLeft:&#xD;&#xA;        case UIImageOrientationLeftMirrored:&#xD;&#xA;            transform = CGAffineTransformTranslate(transform, self.size.width, 0);&#xD;&#xA;            transform = CGAffineTransformRotate(transform, M_PI_2);&#xD;&#xA;            break;&#xD;&#xA;        case UIImageOrientationRight:&#xD;&#xA;        case UIImageOrientationRightMirrored:&#xD;&#xA;            transform = CGAffineTransformTranslate(transform, 0, self.size.height);&#xD;&#xA;            transform = CGAffineTransformRotate(transform, -M_PI_2);&#xD;&#xA;            break;&#xD;&#xA;        case UIImageOrientationUp:&#xD;&#xA;        case UIImageOrientationUpMirrored:&#xD;&#xA;            break;&#xD;&#xA;    }&#xD;&#xA;    switch (self.imageOrientation) {&#xD;&#xA;        case UIImageOrientationUpMirrored:&#xD;&#xA;        case UIImageOrientationDownMirrored:&#xD;&#xA;            transform = CGAffineTransformTranslate(transform, self.size.width, 0);&#xD;&#xA;            transform = CGAffineTransformScale(transform, -1, 1);&#xD;&#xA;            break;&#xD;&#xA;        case UIImageOrientationLeftMirrored:&#xD;&#xA;        case UIImageOrientationRightMirrored:&#xD;&#xA;            transform = CGAffineTransformTranslate(transform, self.size.height, 0);&#xD;&#xA;            transform = CGAffineTransformScale(transform, -1, 1);&#xD;&#xA;            break;&#xD;&#xA;        case UIImageOrientationUp:&#xD;&#xA;        case UIImageOrientationDown:&#xD;&#xA;        case UIImageOrientationLeft:&#xD;&#xA;        case UIImageOrientationRight:&#xD;&#xA;            break;&#xD;&#xA;    }&#xD;&#xA;    // Now we draw the underlying CGImage into a new context, applying the transform&#xD;&#xA;    // calculated above.&#xD;&#xA;    CGContextRef ctx = CGBitmapContextCreate(NULL, self.size.width, self.size.height,&#xD;&#xA;                                             CGImageGetBitsPerComponent(self.CGImage), 0,&#xD;&#xA;                                             CGImageGetColorSpace(self.CGImage),&#xD;&#xA;                                             CGImageGetBitmapInfo(self.CGImage));&#xD;&#xA;    CGContextConcatCTM(ctx, transform);&#xD;&#xA;    switch (self.imageOrientation) {&#xD;&#xA;        case UIImageOrientationLeft:&#xD;&#xA;        case UIImageOrientationLeftMirrored:&#xD;&#xA;        case UIImageOrientationRight:&#xD;&#xA;        case UIImageOrientationRightMirrored:&#xD;&#xA;            // Grr...&#xD;&#xA;            CGContextDrawImage(ctx, CGRectMake(0,0,self.size.height,self.size.width), self.CGImage);&#xD;&#xA;            break;&#xD;&#xA;        default:&#xD;&#xA;            CGContextDrawImage(ctx, CGRectMake(0,0,self.size.width,self.size.height), self.CGImage);&#xD;&#xA;            break;&#xD;&#xA;    }&#xD;&#xA;    // And now we just create a new UIImage from the drawing context&#xD;&#xA;    CGImageRef cgimg = CGBitmapContextCreateImage(ctx);&#xD;&#xA;    UIImage *img = [UIImage imageWithCGImage:cgimg];&#xD;&#xA;    CGContextRelease(ctx);&#xD;&#xA;    CGImageRelease(cgimg);&#xD;&#xA;    return img;&#xD;&#xA;    }&#xD;&#xA;    @end"
-884883983177438740,72,6,"    <?php&#xD;&#xA;        //The function returns the no. of business days between two dates and it skips the holidays&#xD;&#xA;        function getWorkingDays($startDate,$endDate,$holidays){&#xD;&#xA;            // do strtotime calculations just once&#xD;&#xA;            $endDate = strtotime($endDate);&#xD;&#xA;            $startDate = strtotime($startDate);&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;            //The total number of days between the two dates. We compute the no. of seconds and divide it to 60*60*24&#xD;&#xA;            //We add one to inlude both dates in the interval.&#xD;&#xA;            $days = ($endDate - $startDate) / 86400 + 1;&#xD;&#xA;        &#xD;&#xA;            $no_full_weeks = floor($days / 7);&#xD;&#xA;            $no_remaining_days = fmod($days, 7);&#xD;&#xA;        &#xD;&#xA;            //It will return 1 if it's Monday,.. ,7 for Sunday&#xD;&#xA;            $the_first_day_of_week = date(""N"", $startDate);&#xD;&#xA;            $the_last_day_of_week = date(""N"", $endDate);&#xD;&#xA;        &#xD;&#xA;            //---->The two can be equal in leap years when february has 29 days, the equal sign is added here&#xD;&#xA;            //In the first case the whole interval is within a week, in the second case the interval falls in two weeks.&#xD;&#xA;            if ($the_first_day_of_week <= $the_last_day_of_week) {&#xD;&#xA;                if ($the_first_day_of_week <= 6 && 6 <= $the_last_day_of_week) $no_remaining_days--;&#xD;&#xA;                if ($the_first_day_of_week <= 7 && 7 <= $the_last_day_of_week) $no_remaining_days--;&#xD;&#xA;            }&#xD;&#xA;            else {&#xD;&#xA;                // (edit by Tokes to fix an edge case where the start day was a Sunday&#xD;&#xA;                // and the end day was NOT a Saturday)&#xD;&#xA;        &#xD;&#xA;                // the day of the week for start is later than the day of the week for end&#xD;&#xA;                if ($the_first_day_of_week == 7) {&#xD;&#xA;                    // if the start date is a Sunday, then we definitely subtract 1 day&#xD;&#xA;                    $no_remaining_days--;&#xD;&#xA;        &#xD;&#xA;                    if ($the_last_day_of_week == 6) {&#xD;&#xA;                        // if the end date is a Saturday, then we subtract another day&#xD;&#xA;                        $no_remaining_days--;&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;                else {&#xD;&#xA;                    // the start date was a Saturday (or earlier), and the end date was (Mon..Fri)&#xD;&#xA;                    // so we skip an entire weekend and subtract 2 days&#xD;&#xA;                    $no_remaining_days -= 2;&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            //The no. of business days is: (number of weeks between the two dates) * (5 working days) + the remainder&#xD;&#xA;        //---->february in none leap years gave a remainder of 0 but still calculated weekends between first and last day, this is one way to fix it&#xD;&#xA;           $workingDays = $no_full_weeks * 5;&#xD;&#xA;            if ($no_remaining_days > 0 )&#xD;&#xA;            {&#xD;&#xA;              $workingDays += $no_remaining_days;&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            //We subtract the holidays&#xD;&#xA;            foreach($holidays as $holiday){&#xD;&#xA;                $time_stamp=strtotime($holiday);&#xD;&#xA;                //If the holiday doesn't fall in weekend&#xD;&#xA;                if ($startDate <= $time_stamp && $time_stamp <= $endDate && date(""N"",$time_stamp) != 6 && date(""N"",$time_stamp) != 7)&#xD;&#xA;                    $workingDays--;&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            return $workingDays;&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        //Example:&#xD;&#xA;        &#xD;&#xA;        $holidays=array(""2008-12-25"",""2008-12-26"",""2009-01-01"");&#xD;&#xA;        &#xD;&#xA;        echo getWorkingDays(""2008-12-22"",""2009-01-02"",$holidays)&#xD;&#xA;        // => will return 7&#xD;&#xA;        ?>"
-8459042868714197209,73,6,"	user www-data;&#xD;&#xA;	worker_processes 4;&#xD;&#xA;	pid /run/nginx.pid;&#xD;&#xA;	&#xD;&#xA;	events {&#xD;&#xA;		worker_connections 768;&#xD;&#xA;		# multi_accept on;&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	http {&#xD;&#xA;	&#xD;&#xA;		##&#xD;&#xA;		# Basic Settings&#xD;&#xA;		##&#xD;&#xA;	&#xD;&#xA;		sendfile on;&#xD;&#xA;		tcp_nopush on;&#xD;&#xA;		tcp_nodelay on;&#xD;&#xA;		keepalive_timeout 65;&#xD;&#xA;		types_hash_max_size 2048;&#xD;&#xA;		# server_tokens off;&#xD;&#xA;	&#xD;&#xA;		# server_names_hash_bucket_size 64;&#xD;&#xA;		# server_name_in_redirect off;&#xD;&#xA;	&#xD;&#xA;		include /etc/nginx/mime.types;&#xD;&#xA;		default_type application/octet-stream;&#xD;&#xA;	&#xD;&#xA;		##&#xD;&#xA;		# Logging Settings&#xD;&#xA;		##&#xD;&#xA;	&#xD;&#xA;		access_log /var/log/nginx/access.log;&#xD;&#xA;		error_log /var/log/nginx/error.log;&#xD;&#xA;	&#xD;&#xA;		##&#xD;&#xA;		# Gzip Settings&#xD;&#xA;		##&#xD;&#xA;	&#xD;&#xA;		gzip on;&#xD;&#xA;		gzip_disable ""msie6"";&#xD;&#xA;	&#xD;&#xA;		# gzip_vary on;&#xD;&#xA;		# gzip_proxied any;&#xD;&#xA;		# gzip_comp_level 6;&#xD;&#xA;		# gzip_buffers 16 8k;&#xD;&#xA;		# gzip_http_version 1.1;&#xD;&#xA;		# gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;&#xD;&#xA;	&#xD;&#xA;		##&#xD;&#xA;		# nginx-naxsi config&#xD;&#xA;		##&#xD;&#xA;		# Uncomment it if you installed nginx-naxsi&#xD;&#xA;		##&#xD;&#xA;	&#xD;&#xA;		#include /etc/nginx/naxsi_core.rules;&#xD;&#xA;	&#xD;&#xA;		##&#xD;&#xA;		# nginx-passenger config&#xD;&#xA;		##&#xD;&#xA;		# Uncomment it if you installed nginx-passenger&#xD;&#xA;		##&#xD;&#xA;		&#xD;&#xA;		#passenger_root /usr;&#xD;&#xA;		#passenger_ruby /usr/bin/ruby;&#xD;&#xA;	&#xD;&#xA;		##&#xD;&#xA;		# Virtual Host Configs&#xD;&#xA;		##&#xD;&#xA;	&#xD;&#xA;		include /etc/nginx/conf.d/*.conf;&#xD;&#xA;		include /etc/nginx/sites-enabled/*;&#xD;&#xA;	}"
3677703920159972275,76,6,"    - (BOOL) combineVoices1&#xD;&#xA;    {&#xD;&#xA;        NSError *error = nil;&#xD;&#xA;        BOOL ok = NO;&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory,    NSUserDomainMask, YES);&#xD;&#xA;        NSString *documentsDirectory = [paths objectAtIndex:0];&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        CMTime nextClipStartTime = kCMTimeZero;&#xD;&#xA;        //Create AVMutableComposition Object.This object will hold our multiple AVMutableCompositionTrack.&#xD;&#xA;        AVMutableComposition *composition = [[AVMutableComposition alloc] init];&#xD;&#xA;        &#xD;&#xA;        AVMutableCompositionTrack *compositionAudioTrack = [composition addMutableTrackWithMediaType:AVMediaTypeAudio preferredTrackID:kCMPersistentTrackID_Invalid];&#xD;&#xA;        [compositionAudioTrack setPreferredVolume:0.8];&#xD;&#xA;        NSString *soundOne  =[[NSBundle mainBundle]pathForResource:@""test1"" ofType:@""caf""];&#xD;&#xA;        NSURL *url = [NSURL fileURLWithPath:soundOne];&#xD;&#xA;        AVAsset *avAsset = [AVURLAsset URLAssetWithURL:url options:nil];&#xD;&#xA;        NSArray *tracks = [avAsset tracksWithMediaType:AVMediaTypeAudio];&#xD;&#xA;        AVAssetTrack *clipAudioTrack = [[avAsset tracksWithMediaType:AVMediaTypeAudio] objectAtIndex:0];&#xD;&#xA;        [compositionAudioTrack insertTimeRange:CMTimeRangeMake(kCMTimeZero, avAsset.duration) ofTrack:clipAudioTrack atTime:kCMTimeZero error:nil];&#xD;&#xA;        &#xD;&#xA;        AVMutableCompositionTrack *compositionAudioTrack1 = [composition addMutableTrackWithMediaType:AVMediaTypeAudio preferredTrackID:kCMPersistentTrackID_Invalid];&#xD;&#xA;        [compositionAudioTrack setPreferredVolume:0.3];&#xD;&#xA;        NSString *soundOne1  =[[NSBundle mainBundle]pathForResource:@""test"" ofType:@""caf""];&#xD;&#xA;        NSURL *url1 = [NSURL fileURLWithPath:soundOne1];&#xD;&#xA;        AVAsset *avAsset1 = [AVURLAsset URLAssetWithURL:url1 options:nil];&#xD;&#xA;        NSArray *tracks1 = [avAsset1 tracksWithMediaType:AVMediaTypeAudio];&#xD;&#xA;        AVAssetTrack *clipAudioTrack1 = [[avAsset1 tracksWithMediaType:AVMediaTypeAudio] objectAtIndex:0];&#xD;&#xA;        [compositionAudioTrack1 insertTimeRange:CMTimeRangeMake(kCMTimeZero, avAsset.duration) ofTrack:clipAudioTrack1 atTime:kCMTimeZero error:nil];&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        AVMutableCompositionTrack *compositionAudioTrack2 = [composition addMutableTrackWithMediaType:AVMediaTypeAudio preferredTrackID:kCMPersistentTrackID_Invalid];&#xD;&#xA;        [compositionAudioTrack2 setPreferredVolume:1.0];&#xD;&#xA;        NSString *soundOne2  =[[NSBundle mainBundle]pathForResource:@""song"" ofType:@""caf""];&#xD;&#xA;        NSURL *url2 = [NSURL fileURLWithPath:soundOne2];&#xD;&#xA;        AVAsset *avAsset2 = [AVURLAsset URLAssetWithURL:url2 options:nil];&#xD;&#xA;        NSArray *tracks2 = [avAsset2 tracksWithMediaType:AVMediaTypeAudio];&#xD;&#xA;        AVAssetTrack *clipAudioTrack2 = [[avAsset2 tracksWithMediaType:AVMediaTypeAudio] objectAtIndex:0];&#xD;&#xA;        [compositionAudioTrack1 insertTimeRange:CMTimeRangeMake(kCMTimeZero, avAsset2.duration) ofTrack:clipAudioTrack2 atTime:kCMTimeZero error:nil];&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        AVAssetExportSession *exportSession = [AVAssetExportSession&#xD;&#xA;                                               exportSessionWithAsset:composition&#xD;&#xA;                                               presetName:AVAssetExportPresetAppleM4A];&#xD;&#xA;        if (nil == exportSession) return NO;&#xD;&#xA;        &#xD;&#xA;        NSString *soundOneNew = [documentsDirectory stringByAppendingPathComponent:@""combined10.m4a""];&#xD;&#xA;        //NSLog(@""Output file path - %@"",soundOneNew);&#xD;&#xA;        &#xD;&#xA;        // configure export session  output with all our parameters&#xD;&#xA;        exportSession.outputURL = [NSURL fileURLWithPath:soundOneNew]; // output path&#xD;&#xA;        exportSession.outputFileType = AVFileTypeAppleM4A; // output file type&#xD;&#xA;        &#xD;&#xA;        // perform the export&#xD;&#xA;        [exportSession exportAsynchronouslyWithCompletionHandler:^{&#xD;&#xA;            &#xD;&#xA;            if (AVAssetExportSessionStatusCompleted == exportSession.status) {&#xD;&#xA;                NSLog(@""AVAssetExportSessionStatusCompleted"");&#xD;&#xA;            } else if (AVAssetExportSessionStatusFailed == exportSession.status) {&#xD;&#xA;                // a failure may happen because of an event out of your control&#xD;&#xA;                // for example, an interruption like a phone call comming in&#xD;&#xA;                // make sure and handle this case appropriately&#xD;&#xA;                NSLog(@""AVAssetExportSessionStatusFailed"");&#xD;&#xA;            } else {&#xD;&#xA;                NSLog(@""Export Session Status: %d"", exportSession.status);&#xD;&#xA;            }&#xD;&#xA;        }];&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        return YES;&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;    }"
3769577677456633421,76,6,"                var path = require('path')&#xD;&#xA;                var webpack = require('webpack')&#xD;&#xA;                module.exports = {&#xD;&#xA;                  entry: './src/main.js',&#xD;&#xA;                  output: {&#xD;&#xA;                    path: path.resolve(__dirname, '/dist'),&#xD;&#xA;                    publicPath: '/dist/',&#xD;&#xA;                    filename: 'build.js'&#xD;&#xA;                  },&#xD;&#xA;                  module: {&#xD;&#xA;                    rules: [&#xD;&#xA;                      {&#xD;&#xA;                        test: /\.css$/,&#xD;&#xA;                        use: [&#xD;&#xA;                          'vue-style-loader',&#xD;&#xA;                          'css-loader'&#xD;&#xA;                        ],&#xD;&#xA;                      },      {&#xD;&#xA;                        test: /\.vue$/,&#xD;&#xA;                        loader: 'vue-loader',&#xD;&#xA;                        options: {&#xD;&#xA;                          loaders: {&#xD;&#xA;                          }&#xD;&#xA;                          // other vue-loader options go here&#xD;&#xA;                        }&#xD;&#xA;                      },&#xD;&#xA;                      {&#xD;&#xA;                        test: /\.js$/,&#xD;&#xA;                        loader: 'babel-loader',&#xD;&#xA;                        exclude: /node_modules/&#xD;&#xA;                      },&#xD;&#xA;                      {&#xD;&#xA;                        test: /\.(png|jpg|gif|svg)$/,&#xD;&#xA;                        loader: 'file-loader',&#xD;&#xA;                        options: {&#xD;&#xA;                          name: '[name].[ext]?[hash]'&#xD;&#xA;                        }&#xD;&#xA;                      }&#xD;&#xA;                    ]&#xD;&#xA;                  },&#xD;&#xA;                  resolve: {&#xD;&#xA;                    alias: {&#xD;&#xA;                      'vue$': 'vue/dist/vue.esm.js'&#xD;&#xA;                    },&#xD;&#xA;                    extensions: ['*', '.js', '.vue', '.json']&#xD;&#xA;                  },&#xD;&#xA;                  devServer: {&#xD;&#xA;                    historyApiFallback: true,&#xD;&#xA;                    noInfo: true,&#xD;&#xA;                    overlay: true&#xD;&#xA;                  },&#xD;&#xA;                  performance: {&#xD;&#xA;                    hints: false&#xD;&#xA;                  },&#xD;&#xA;                  devtool: '#eval-source-map'&#xD;&#xA;                }&#xD;&#xA;                if (process.env.NODE_ENV === 'production') {&#xD;&#xA;                  module.exports.devtool = '#source-map'&#xD;&#xA;                  // http://vue-loader.vuejs.org/en/workflow/production.html&#xD;&#xA;                  module.exports.plugins = (module.exports.plugins || []).concat([&#xD;&#xA;                    new webpack.DefinePlugin({&#xD;&#xA;                      'process.env': {&#xD;&#xA;                        NODE_ENV: '""production""'&#xD;&#xA;                      }&#xD;&#xA;                    }),&#xD;&#xA;                    new webpack.optimize.UglifyJsPlugin({&#xD;&#xA;                      sourceMap: true,&#xD;&#xA;                      compress: {&#xD;&#xA;                        warnings: false&#xD;&#xA;                      }&#xD;&#xA;                    }),&#xD;&#xA;                    new webpack.LoaderOptionsPlugin({&#xD;&#xA;                      minimize: true&#xD;&#xA;                    })&#xD;&#xA;                  ])&#xD;&#xA;                }"
7763152455261233074,77,6,"    body, html {&#xD;&#xA;        margin: 0;&#xD;&#xA;        padding: 0;&#xD;&#xA;        height: 100%;&#xD;&#xA;        width: 100%;&#xD;&#xA;    }&#xD;&#xA;    .menu {&#xD;&#xA;        width: 100%;&#xD;&#xA;        height: 75px;&#xD;&#xA;        background-color: rgba(0, 0, 0, 1);&#xD;&#xA;        position: fixed;&#xD;&#xA;        background-color:rgba(4, 180, 49, 0.6);&#xD;&#xA;        -webkit-transition: all 0.3s ease;&#xD;&#xA;        -moz-transition: all 0.3s ease;&#xD;&#xA;        -o-transition: all 0.3s ease;&#xD;&#xA;        transition: all 0.3s ease;&#xD;&#xA;    }&#xD;&#xA;    .light-menu {&#xD;&#xA;        width: 100%;&#xD;&#xA;        height: 75px;&#xD;&#xA;        background-color: rgba(255, 255, 255, 1);&#xD;&#xA;        position: fixed;&#xD;&#xA;        background-color:rgba(4, 180, 49, 0.6);&#xD;&#xA;        -webkit-transition: all 0.3s ease;&#xD;&#xA;        -moz-transition: all 0.3s ease;&#xD;&#xA;        -o-transition: all 0.3s ease;&#xD;&#xA;        transition: all 0.3s ease;&#xD;&#xA;    }&#xD;&#xA;    #menu-center {&#xD;&#xA;        width: 980px;&#xD;&#xA;        height: 75px;&#xD;&#xA;        margin: 0 auto;&#xD;&#xA;    }&#xD;&#xA;    #menu-center ul {&#xD;&#xA;        margin: 15px 0 0 0;&#xD;&#xA;    }&#xD;&#xA;    #menu-center ul li {&#xD;&#xA;        list-style: none;&#xD;&#xA;        margin: 0 30px 0 0;&#xD;&#xA;        display: inline;&#xD;&#xA;    }&#xD;&#xA;    .active {&#xD;&#xA;        font-family:'Droid Sans', serif;&#xD;&#xA;        font-size: 14px;&#xD;&#xA;        color: #fff;&#xD;&#xA;        text-decoration: none;&#xD;&#xA;        line-height: 50px;&#xD;&#xA;    }&#xD;&#xA;    a {&#xD;&#xA;        font-family:'Droid Sans', serif;&#xD;&#xA;        font-size: 14px;&#xD;&#xA;        color: black;&#xD;&#xA;        text-decoration: none;&#xD;&#xA;        line-height: 50px;&#xD;&#xA;    }&#xD;&#xA;    #home {&#xD;&#xA;        background-color: grey;&#xD;&#xA;        height: 100%;&#xD;&#xA;        width: 100%;&#xD;&#xA;        overflow: hidden;&#xD;&#xA;        background-image: url(images/home-bg2.png);&#xD;&#xA;    }&#xD;&#xA;    #portfolio {&#xD;&#xA;        background-image: url(images/portfolio-bg.png);&#xD;&#xA;        height: 100%;&#xD;&#xA;        width: 100%;&#xD;&#xA;    }&#xD;&#xA;    #about {&#xD;&#xA;        background-color: blue;&#xD;&#xA;        height: 100%;&#xD;&#xA;        width: 100%;&#xD;&#xA;    }&#xD;&#xA;    #contact {&#xD;&#xA;        background-color: red;&#xD;&#xA;        height: 100%;&#xD;&#xA;        width: 100%;&#xD;&#xA;    }"
-3199788123874064459,77,6,"    @-webkit-keyframes ellipsis {/*for test*/&#xD;&#xA;        0% { width: 622px }&#xD;&#xA;        50% { width: 311px }&#xD;&#xA;        100% { width: 622px }&#xD;&#xA;    }&#xD;&#xA;    .ellipsis {&#xD;&#xA;        max-height: 40px;/* h*n */&#xD;&#xA;        overflow: hidden;&#xD;&#xA;        background: #eee;&#xD;&#xA;        -webkit-animation: ellipsis ease 5s infinite;/*for test*/&#xD;&#xA;        /**&#xD;&#xA;        overflow: visible;&#xD;&#xA;        /**/&#xD;&#xA;    }&#xD;&#xA;    .ellipsis .content {&#xD;&#xA;        position: relative;&#xD;&#xA;        display: -webkit-box;&#xD;&#xA;        -webkit-box-orient: vertical;&#xD;&#xA;        -webkit-box-pack: center;&#xD;&#xA;        font-size: 50px;/* w */&#xD;&#xA;        line-height: 20px;/* line-height h */&#xD;&#xA;        color: transparent;&#xD;&#xA;        -webkit-line-clamp: 2;/* max row number n */&#xD;&#xA;        vertical-align: top;&#xD;&#xA;    }&#xD;&#xA;    .ellipsis .text {&#xD;&#xA;        display: inline;&#xD;&#xA;        vertical-align: top;&#xD;&#xA;        font-size: 14px;&#xD;&#xA;        color: #000;&#xD;&#xA;    }&#xD;&#xA;    .ellipsis .overlay {&#xD;&#xA;        position: absolute;&#xD;&#xA;        top: 0;&#xD;&#xA;        left: 50%;&#xD;&#xA;        width: 100%;&#xD;&#xA;        height: 100%;&#xD;&#xA;        overflow: hidden;&#xD;&#xA;        /**&#xD;&#xA;        overflow: visible;&#xD;&#xA;        left: 0;&#xD;&#xA;        background: rgba(0,0,0,.5);&#xD;&#xA;        /**/&#xD;&#xA;    }&#xD;&#xA;    .ellipsis .overlay:before {&#xD;&#xA;        content: """";&#xD;&#xA;        display: block;&#xD;&#xA;        float: left;&#xD;&#xA;        width: 50%;&#xD;&#xA;        height: 100%;&#xD;&#xA;        /**&#xD;&#xA;        background: lightgreen;&#xD;&#xA;        /**/&#xD;&#xA;    }&#xD;&#xA;    .ellipsis .placeholder {&#xD;&#xA;        float: left;&#xD;&#xA;        width: 50%;&#xD;&#xA;        height: 40px;/* h*n */&#xD;&#xA;        /**&#xD;&#xA;        background: lightblue;&#xD;&#xA;        /**/&#xD;&#xA;    }&#xD;&#xA;    .ellipsis .more {&#xD;&#xA;        position: relative;&#xD;&#xA;        top: -20px;/* -h */&#xD;&#xA;        left: -50px;/* -w */&#xD;&#xA;        float: left;&#xD;&#xA;        color: #000;&#xD;&#xA;        width: 50px;/* width of the .more w */&#xD;&#xA;        height: 20px;/* h */&#xD;&#xA;        font-size: 14px;&#xD;&#xA;        /**&#xD;&#xA;        top: 0;&#xD;&#xA;        left: 0;&#xD;&#xA;        background: orange;&#xD;&#xA;        /**/&#xD;&#xA;    }"
4275487974958711562,78,6,"     public class CustomAdapter extends BaseAdapter {&#xD;&#xA;        private final LayoutInflater inflater;&#xD;&#xA;        private final Context context;&#xD;&#xA;        private List<ModelPooja> listData;&#xD;&#xA;        public CustomAdapter(Context mainActivity, List<ModelPooja> listData) {&#xD;&#xA;            context = mainActivity;&#xD;&#xA;            this.listData = listData;&#xD;&#xA;            inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);&#xD;&#xA;        }&#xD;&#xA;        @Override&#xD;&#xA;        public int getCount() {&#xD;&#xA;            return listData.size();&#xD;&#xA;        }&#xD;&#xA;        @Override&#xD;&#xA;        public Object getItem(int position) {&#xD;&#xA;            return listData.get(position);&#xD;&#xA;        }&#xD;&#xA;        @Override&#xD;&#xA;        public long getItemId(int position) {&#xD;&#xA;            return 0;&#xD;&#xA;        }&#xD;&#xA;        @Override&#xD;&#xA;        public View getView(final int position, View convertView, ViewGroup parent) {&#xD;&#xA;            final ViewHolder holder;&#xD;&#xA;            if (convertView == null) {&#xD;&#xA;                holder = new ViewHolder();&#xD;&#xA;                convertView = inflater.inflate(R.layout.list_item_poojaselection, null);&#xD;&#xA;                holder.tv = (TextView) convertView.findViewById(R.id.list_item_poojaname);&#xD;&#xA;                holder.checks = (CheckBox) convertView.findViewById(R.id.list_item_poojacheck);&#xD;&#xA;                convertView.setTag(holder);&#xD;&#xA;            }else {&#xD;&#xA;                holder = (ViewHolder) convertView.getTag();&#xD;&#xA;            }&#xD;&#xA;            holder.checks.setOnCheckedChangeListener(null);&#xD;&#xA;            holder.checks.setFocusable(false);&#xD;&#xA;            if (listData.get(position).isselected) {&#xD;&#xA;                holder.checks.setChecked(true);&#xD;&#xA;            } else {&#xD;&#xA;                holder.checks.setChecked(false);&#xD;&#xA;            }&#xD;&#xA;            holder.checks.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {&#xD;&#xA;                @Override&#xD;&#xA;                public void onCheckedChanged(CompoundButton cb, boolean b) {&#xD;&#xA;                    if (checkMaxLimit()) {&#xD;&#xA;                        if (listData.get(position).isselected && b) {&#xD;&#xA;                            holder.checks.setChecked(false);&#xD;&#xA;                            listData.get(position).isselected = false;&#xD;&#xA;                        } else {&#xD;&#xA;                            holder.checks.setChecked(false);&#xD;&#xA;                            listData.get(position).isselected = false;&#xD;&#xA;                            Toast.makeText(context, ""Max limit reached"", Toast.LENGTH_SHORT).show();&#xD;&#xA;                        }&#xD;&#xA;                    } else {&#xD;&#xA;                        if (b) {&#xD;&#xA;                            listData.get(position).isselected = true;&#xD;&#xA;                        } else {&#xD;&#xA;                            listData.get(position).isselected = false;&#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;            });&#xD;&#xA;            holder.tv.setText(listData.get(position).getPOOJA_LISTING_NAME());&#xD;&#xA;            return convertView;&#xD;&#xA;        }&#xD;&#xA;        public boolean checkMaxLimit() {&#xD;&#xA;            int countermax = 0;&#xD;&#xA;            for(ModelPooja item : listData){&#xD;&#xA;                if(item.isselected){&#xD;&#xA;                    countermax++;&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;            return countermax >= 5;&#xD;&#xA;        }&#xD;&#xA;        public class ViewHolder {&#xD;&#xA;            TextView tv;&#xD;&#xA;            public CheckBox checks;&#xD;&#xA;        }&#xD;&#xA;    }"
-3100022243647380263,79,6,"    public class DividerItemDecoration extends RecyclerView.ItemDecoration {&#xD;&#xA;     &#xD;&#xA;    &#xD;&#xA;        private static final int[] ATTRS = new int[]{&#xD;&#xA;                android.R.attr.listDivider&#xD;&#xA;        };&#xD;&#xA;     &#xD;&#xA;        public static final int HORIZONTAL_LIST = LinearLayoutManager.HORIZONTAL;&#xD;&#xA;     &#xD;&#xA;        public static final int VERTICAL_LIST = LinearLayoutManager.VERTICAL;&#xD;&#xA;     &#xD;&#xA;        private Drawable mDivider;&#xD;&#xA;     &#xD;&#xA;        private int mOrientation;&#xD;&#xA;     &#xD;&#xA;        public DividerItemDecoration(Context context, int orientation) {&#xD;&#xA;            final TypedArray a = context.obtainStyledAttributes(ATTRS);&#xD;&#xA;            mDivider = a.getDrawable(0);&#xD;&#xA;            a.recycle();&#xD;&#xA;            setOrientation(orientation);&#xD;&#xA;        }&#xD;&#xA;     &#xD;&#xA;        public void setOrientation(int orientation) {&#xD;&#xA;            if (orientation != HORIZONTAL_LIST && orientation != VERTICAL_LIST) {&#xD;&#xA;                throw new IllegalArgumentException(""invalid orientation"");&#xD;&#xA;            }&#xD;&#xA;            mOrientation = orientation;&#xD;&#xA;        }&#xD;&#xA;     &#xD;&#xA;        @Override&#xD;&#xA;        public void onDraw(Canvas c, RecyclerView parent) {&#xD;&#xA;            if (mOrientation == VERTICAL_LIST) {&#xD;&#xA;                drawVertical(c, parent);&#xD;&#xA;            } else {&#xD;&#xA;                drawHorizontal(c, parent);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;     &#xD;&#xA;        public void drawVertical(Canvas c, RecyclerView parent) {&#xD;&#xA;            final int left = parent.getPaddingLeft();&#xD;&#xA;            final int right = parent.getWidth() - parent.getPaddingRight();&#xD;&#xA;     &#xD;&#xA;            final int childCount = parent.getChildCount();&#xD;&#xA;            for (int i = 0; i < childCount; i++) {&#xD;&#xA;                final View child = parent.getChildAt(i);&#xD;&#xA;                final RecyclerView.LayoutParams params = (RecyclerView.LayoutParams) child&#xD;&#xA;                        .getLayoutParams();&#xD;&#xA;                final int top = child.getBottom() + params.bottomMargin;&#xD;&#xA;                final int bottom = top + mDivider.getIntrinsicHeight();&#xD;&#xA;                mDivider.setBounds(left, top, right, bottom);&#xD;&#xA;                mDivider.draw(c);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;     &#xD;&#xA;        public void drawHorizontal(Canvas c, RecyclerView parent) {&#xD;&#xA;            final int top = parent.getPaddingTop();&#xD;&#xA;            final int bottom = parent.getHeight() - parent.getPaddingBottom();&#xD;&#xA;     &#xD;&#xA;            final int childCount = parent.getChildCount();&#xD;&#xA;            for (int i = 0; i < childCount; i++) {&#xD;&#xA;                final View child = parent.getChildAt(i);&#xD;&#xA;                final RecyclerView.LayoutParams params = (RecyclerView.LayoutParams) child&#xD;&#xA;                        .getLayoutParams();&#xD;&#xA;                final int left = child.getRight() + params.rightMargin;&#xD;&#xA;                final int right = left + mDivider.getIntrinsicHeight();&#xD;&#xA;                mDivider.setBounds(left, top, right, bottom);&#xD;&#xA;                mDivider.draw(c);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;     &#xD;&#xA;        @Override&#xD;&#xA;        public void getItemOffsets(Rect outRect, int itemPosition, RecyclerView parent) {&#xD;&#xA;            if (mOrientation == VERTICAL_LIST) {&#xD;&#xA;                outRect.set(0, 0, 0, mDivider.getIntrinsicHeight());&#xD;&#xA;            } else {&#xD;&#xA;                outRect.set(0, 0, mDivider.getIntrinsicWidth(), 0);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }"
694066561841022047,82,6,"     private void doFileUpload(){&#xD;&#xA;            HttpURLConnection conn = null;&#xD;&#xA;            DataOutputStream dos = null;&#xD;&#xA;            DataInputStream inStream = null; &#xD;&#xA;            String exsistingFileName = ""/sdcard/six.3gp"";&#xD;&#xA;            // Is this the place are you doing something wrong.&#xD;&#xA;            String lineEnd = ""\r\n"";&#xD;&#xA;            String twoHyphens = ""--"";&#xD;&#xA;            String boundary =  ""*****"";&#xD;&#xA;            int bytesRead, bytesAvailable, bufferSize;&#xD;&#xA;            byte[] buffer;&#xD;&#xA;            int maxBufferSize = 1*1024*1024;&#xD;&#xA;            String urlString = ""http://192.168.1.5/upload.php"";&#xD;&#xA;            try&#xD;&#xA;            {&#xD;&#xA;                Log.e(""MediaPlayer"",""Inside second Method"");&#xD;&#xA;                FileInputStream fileInputStream = new FileInputStream(new File(exsistingFileName) );&#xD;&#xA;                URL url = new URL(urlString);&#xD;&#xA;                conn = (HttpURLConnection) url.openConnection();&#xD;&#xA;                conn.setDoInput(true);&#xD;&#xA;                // Allow Outputs&#xD;&#xA;                conn.setDoOutput(true);&#xD;&#xA;                // Don't use a cached copy.&#xD;&#xA;                conn.setUseCaches(false);&#xD;&#xA;                // Use a post method.&#xD;&#xA;                conn.setRequestMethod(""POST"");&#xD;&#xA;                conn.setRequestProperty(""Connection"", ""Keep-Alive"");&#xD;&#xA;                conn.setRequestProperty(""Content-Type"", ""multipart/form-data;boundary=""+boundary);&#xD;&#xA;                dos = new DataOutputStream( conn.getOutputStream() );&#xD;&#xA;                dos.writeBytes(twoHyphens + boundary + lineEnd);&#xD;&#xA;                dos.writeBytes(""Content-Disposition: form-data; name=\""uploadedfile\"";filename=\"""" + exsistingFileName +""\"""" + lineEnd);&#xD;&#xA;                dos.writeBytes(lineEnd);&#xD;&#xA;                Log.e(""MediaPlayer"",""Headers are written"");&#xD;&#xA;                bytesAvailable = fileInputStream.available();&#xD;&#xA;                bufferSize = Math.min(bytesAvailable, maxBufferSize);&#xD;&#xA;                buffer = new byte[bufferSize];&#xD;&#xA;                bytesRead = fileInputStream.read(buffer, 0, bufferSize);&#xD;&#xA;                while (bytesRead > 0)&#xD;&#xA;                {&#xD;&#xA;                    dos.write(buffer, 0, bufferSize);&#xD;&#xA;                    bytesAvailable = fileInputStream.available();&#xD;&#xA;                    bufferSize = Math.min(bytesAvailable, maxBufferSize);&#xD;&#xA;                    bytesRead = fileInputStream.read(buffer, 0, bufferSize);&#xD;&#xA;                }&#xD;&#xA;                dos.writeBytes(lineEnd);&#xD;&#xA;                dos.writeBytes(twoHyphens + boundary + twoHyphens + lineEnd);&#xD;&#xA;                BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream()));&#xD;&#xA;                String inputLine;&#xD;&#xA;                while ((inputLine = in.readLine()) != null) &#xD;&#xA;                    tv.append(inputLine);&#xD;&#xA;                // close streams&#xD;&#xA;                Log.e(""MediaPlayer"",""File is written"");&#xD;&#xA;                fileInputStream.close();&#xD;&#xA;                dos.flush();&#xD;&#xA;                dos.close();&#xD;&#xA;            }&#xD;&#xA;            catch (MalformedURLException ex)&#xD;&#xA;            {&#xD;&#xA;                Log.e(""MediaPlayer"", ""error: "" + ex.getMessage(), ex);&#xD;&#xA;            }&#xD;&#xA;            catch (IOException ioe)&#xD;&#xA;            {&#xD;&#xA;                Log.e(""MediaPlayer"", ""error: "" + ioe.getMessage(), ioe);&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            //------------------ read the SERVER RESPONSE&#xD;&#xA;            try {&#xD;&#xA;                inStream = new DataInputStream ( conn.getInputStream() );&#xD;&#xA;                String str;            &#xD;&#xA;                while (( str = inStream.readLine()) != null)&#xD;&#xA;                {&#xD;&#xA;                    Log.e(""MediaPlayer"",""Server Response""+str);&#xD;&#xA;                }&#xD;&#xA;                /*while((str = inStream.readLine()) !=null ){&#xD;&#xA;        &#xD;&#xA;                }*/&#xD;&#xA;                inStream.close();&#xD;&#xA;            }&#xD;&#xA;            catch (IOException ioex){&#xD;&#xA;                Log.e(""MediaPlayer"", ""error: "" + ioex.getMessage(), ioex);&#xD;&#xA;            }&#xD;&#xA;        }"
-8927384015516687348,86,6,"    /*&#xD;&#xA;    **  Use the Collections API to sort a List for you.&#xD;&#xA;    **&#xD;&#xA;    **  When your class has a ""natural"" sort order you can implement&#xD;&#xA;    **  the Comparable interface.&#xD;&#xA;    **&#xD;&#xA;    **  You can use an alternate sort order when you implement&#xD;&#xA;    **  a Comparator for your class.&#xD;&#xA;    */&#xD;&#xA;    import java.util.*;&#xD;&#xA;    &#xD;&#xA;    public class Person implements Comparable<Person>&#xD;&#xA;    {&#xD;&#xA;    	String name;&#xD;&#xA;    	int age;&#xD;&#xA;    &#xD;&#xA;    	public Person(String name, int age)&#xD;&#xA;    	{&#xD;&#xA;    	   	this.name = name;&#xD;&#xA;    	   	this.age = age;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public String getName()&#xD;&#xA;    	{&#xD;&#xA;    		return name;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public int getAge()&#xD;&#xA;    	{&#xD;&#xA;    		return age;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public String toString()&#xD;&#xA;    	{&#xD;&#xA;    		return name + "" : "" + age;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	/*&#xD;&#xA;    	**  Implement the natural order for this class&#xD;&#xA;    	*/&#xD;&#xA;    	public int compareTo(Person p)&#xD;&#xA;    	{&#xD;&#xA;    		return getName().compareTo(p.getName());&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	static class AgeComparator implements Comparator<Person>&#xD;&#xA;    	{&#xD;&#xA;    		public int compare(Person p1, Person p2)&#xD;&#xA;    		{&#xD;&#xA;    			return p1.getAge() - p2.getAge();&#xD;&#xA;    		}&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public static void main(String[] args)&#xD;&#xA;    	{&#xD;&#xA;    		List<Person> people = new ArrayList<Person>();&#xD;&#xA;    		people.add( new Person(""Homer"", 38) );&#xD;&#xA;    		people.add( new Person(""Marge"", 35) );&#xD;&#xA;    		people.add( new Person(""Bart"", 15) );&#xD;&#xA;    		people.add( new Person(""Lisa"", 13) );&#xD;&#xA;    &#xD;&#xA;    		// Sort by natural order&#xD;&#xA;    &#xD;&#xA;    		Collections.sort(people);&#xD;&#xA;    		System.out.println(""Sort by Natural order"");&#xD;&#xA;    		System.out.println(""\t"" + people);&#xD;&#xA;    &#xD;&#xA;    		// Sort by reverse natural order&#xD;&#xA;    &#xD;&#xA;    		Collections.sort(people, Collections.reverseOrder());&#xD;&#xA;    		System.out.println(""Sort by reverse natural order"");&#xD;&#xA;    		System.out.println(""\t"" + people);&#xD;&#xA;    &#xD;&#xA;    		//  Use a Comparator to sort by age&#xD;&#xA;    &#xD;&#xA;    		Collections.sort(people, new Person.AgeComparator());&#xD;&#xA;    		System.out.println(""Sort using Age Comparator"");&#xD;&#xA;    		System.out.println(""\t"" + people);&#xD;&#xA;    &#xD;&#xA;    		//  Use a Comparator to sort by descending age&#xD;&#xA;    &#xD;&#xA;    		Collections.sort(people, Collections.reverseOrder(new Person.AgeComparator()));&#xD;&#xA;    		System.out.println(""Sort using Reverse Age Comparator"");&#xD;&#xA;    		System.out.println(""\t"" + people);&#xD;&#xA;    	}&#xD;&#xA;    }"
-7469941329984161277,90,6,"    /* Smartphones (portrait and landscape) ----------- */&#xD;&#xA;    @media only screen &#xD;&#xA;    and (min-device-width : 320px) &#xD;&#xA;    and (max-device-width : 480px) {&#xD;&#xA;    /* Styles */&#xD;&#xA;    }&#xD;&#xA;    /* Smartphones (landscape) ----------- */&#xD;&#xA;    @media only screen &#xD;&#xA;    and (min-width : 321px) {&#xD;&#xA;    /* Styles */&#xD;&#xA;    }&#xD;&#xA;    /* Smartphones (portrait) ----------- */&#xD;&#xA;    @media only screen &#xD;&#xA;    and (max-width : 320px) {&#xD;&#xA;    /* Styles */&#xD;&#xA;    }&#xD;&#xA;    /* iPads (portrait and landscape) ----------- */&#xD;&#xA;    @media only screen &#xD;&#xA;    and (min-device-width : 768px) &#xD;&#xA;    and (max-device-width : 1024px) {&#xD;&#xA;    /* Styles */&#xD;&#xA;    }&#xD;&#xA;    /* iPads (landscape) ----------- */&#xD;&#xA;    @media only screen &#xD;&#xA;    and (min-device-width : 768px) &#xD;&#xA;    and (max-device-width : 1024px) &#xD;&#xA;    and (orientation : landscape) {&#xD;&#xA;    /* Styles */&#xD;&#xA;    }&#xD;&#xA;    /* iPads (portrait) ----------- */&#xD;&#xA;    @media only screen &#xD;&#xA;    and (min-device-width : 768px) &#xD;&#xA;    and (max-device-width : 1024px) &#xD;&#xA;    and (orientation : portrait) {&#xD;&#xA;    /* Styles */&#xD;&#xA;    }&#xD;&#xA;    /* Desktops and laptops ----------- */&#xD;&#xA;    @media only screen &#xD;&#xA;    and (min-width : 1224px) {&#xD;&#xA;    /* Styles */&#xD;&#xA;    }&#xD;&#xA;    /* Large screens ----------- */&#xD;&#xA;    @media only screen &#xD;&#xA;    and (min-width : 1824px) {&#xD;&#xA;    /* Styles */&#xD;&#xA;    }&#xD;&#xA;    /* iPhone 4 ----------- */&#xD;&#xA;    @media&#xD;&#xA;    only screen and (-webkit-min-device-pixel-ratio : 1.5),&#xD;&#xA;    only screen and (min-device-pixel-ratio : 1.5) {&#xD;&#xA;    /* Styles */&#xD;&#xA;    }&#xD;&#xA;    /* iPhone 6 landscape */&#xD;&#xA;    @media only screen and (min-device-width: 375px)&#xD;&#xA;      and (max-device-width: 667px)&#xD;&#xA;      and (orientation: landscape)&#xD;&#xA;      and (-webkit-min-device-pixel-ratio: 2)&#xD;&#xA;    { }&#xD;&#xA;    /* iPhone 6 portrait */&#xD;&#xA;    @media only screen&#xD;&#xA;      and (min-device-width: 375px)&#xD;&#xA;      and (max-device-width: 667px)&#xD;&#xA;      and (orientation: portrait)&#xD;&#xA;      and (-webkit-min-device-pixel-ratio: 2)&#xD;&#xA;    { }&#xD;&#xA;    /* iPhone 6 Plus landscape */&#xD;&#xA;    @media only screen&#xD;&#xA;      and (min-device-width: 414px)&#xD;&#xA;      and (max-device-width: 736px)&#xD;&#xA;      and (orientation: landscape)&#xD;&#xA;      and (-webkit-min-device-pixel-ratio: 3)&#xD;&#xA;    { }&#xD;&#xA;    /* iPhone 6 Plus portrait */&#xD;&#xA;    @media only screen &#xD;&#xA;      and (min-device-width: 414px) &#xD;&#xA;      and (max-device-width: 736px) &#xD;&#xA;      and (orientation: portrait) &#xD;&#xA;      and (-webkit-min-device-pixel-ratio: 3)&#xD;&#xA;    { }&#xD;&#xA;    /* iPhone 6 and 6 Plus */&#xD;&#xA;    @media only screen&#xD;&#xA;      and (max-device-width: 640px),&#xD;&#xA;      only screen and (max-device-width: 667px),&#xD;&#xA;      only screen and (max-width: 480px)&#xD;&#xA;    { }&#xD;&#xA;    /* Apple Watch */&#xD;&#xA;    @media&#xD;&#xA;      (max-device-width: 42mm)&#xD;&#xA;      and (min-device-width: 38mm)&#xD;&#xA;    { }"
61857747595166744,90,6,"	<?php&#xD;&#xA;	function getBrowser() &#xD;&#xA;	{ &#xD;&#xA;		$u_agent = $_SERVER['HTTP_USER_AGENT']; &#xD;&#xA;		$bname = 'Unknown';&#xD;&#xA;		$platform = 'Unknown';&#xD;&#xA;		$version= """";&#xD;&#xA;		//First get the platform?&#xD;&#xA;		if (preg_match('/linux/i', $u_agent)) {&#xD;&#xA;			$platform = 'linux';&#xD;&#xA;		}&#xD;&#xA;		elseif (preg_match('/macintosh|mac os x/i', $u_agent)) {&#xD;&#xA;			$platform = 'mac';&#xD;&#xA;		}&#xD;&#xA;		elseif (preg_match('/windows|win32/i', $u_agent)) {&#xD;&#xA;			$platform = 'windows';&#xD;&#xA;		}&#xD;&#xA;		&#xD;&#xA;		// Next get the name of the useragent yes seperately and for good reason&#xD;&#xA;		if(preg_match('/MSIE/i',$u_agent) && !preg_match('/Opera/i',$u_agent)) &#xD;&#xA;		{ &#xD;&#xA;			$bname = 'Internet Explorer'; &#xD;&#xA;			$ub = ""MSIE""; &#xD;&#xA;		} &#xD;&#xA;		elseif(preg_match('/Firefox/i',$u_agent)) &#xD;&#xA;		{ &#xD;&#xA;			$bname = 'Mozilla Firefox'; &#xD;&#xA;			$ub = ""Firefox""; &#xD;&#xA;		} &#xD;&#xA;		elseif(preg_match('/Chrome/i',$u_agent)) &#xD;&#xA;		{ &#xD;&#xA;			$bname = 'Google Chrome'; &#xD;&#xA;			$ub = ""Chrome""; &#xD;&#xA;		} &#xD;&#xA;		elseif(preg_match('/Safari/i',$u_agent)) &#xD;&#xA;		{ &#xD;&#xA;			$bname = 'Apple Safari'; &#xD;&#xA;			$ub = ""Safari""; &#xD;&#xA;		} &#xD;&#xA;		elseif(preg_match('/Opera/i',$u_agent)) &#xD;&#xA;		{ &#xD;&#xA;			$bname = 'Opera'; &#xD;&#xA;			$ub = ""Opera""; &#xD;&#xA;		} &#xD;&#xA;		elseif(preg_match('/Netscape/i',$u_agent)) &#xD;&#xA;		{ &#xD;&#xA;			$bname = 'Netscape'; &#xD;&#xA;			$ub = ""Netscape""; &#xD;&#xA;		} &#xD;&#xA;		&#xD;&#xA;		// finally get the correct version number&#xD;&#xA;		$known = array('Version', $ub, 'other');&#xD;&#xA;		$pattern = '#(?<browser>' . join('|', $known) .&#xD;&#xA;		')[/ ]+(?<version>[0-9.|a-zA-Z.]*)#';&#xD;&#xA;		if (!preg_match_all($pattern, $u_agent, $matches)) {&#xD;&#xA;			// we have no matching number just continue&#xD;&#xA;		}&#xD;&#xA;		&#xD;&#xA;		// see how many we have&#xD;&#xA;		$i = count($matches['browser']);&#xD;&#xA;		if ($i != 1) {&#xD;&#xA;			//we will have two since we are not using 'other' argument yet&#xD;&#xA;			//see if version is before or after the name&#xD;&#xA;			if (strripos($u_agent,""Version"") < strripos($u_agent,$ub)){&#xD;&#xA;				$version= $matches['version'][0];&#xD;&#xA;			}&#xD;&#xA;			else {&#xD;&#xA;				$version= $matches['version'][1];&#xD;&#xA;			}&#xD;&#xA;		}&#xD;&#xA;		else {&#xD;&#xA;			$version= $matches['version'][0];&#xD;&#xA;		}&#xD;&#xA;		&#xD;&#xA;		// check if we have a number&#xD;&#xA;		if ($version==null || $version=="""") {$version=""?"";}&#xD;&#xA;		&#xD;&#xA;		return array(&#xD;&#xA;			'userAgent' => $u_agent,&#xD;&#xA;			'name'      => $bname,&#xD;&#xA;			'version'   => $version,&#xD;&#xA;			'platform'  => $platform,&#xD;&#xA;			'pattern'    => $pattern&#xD;&#xA;		);&#xD;&#xA;	} &#xD;&#xA;	// now try it&#xD;&#xA;	$ua=getBrowser();&#xD;&#xA;	$yourbrowser= ""Your browser: "" . $ua['name'] . "" "" . $ua['version'] . "" on "" .$ua['platform'] . "" reports: <br >"" . $ua['userAgent'];&#xD;&#xA;	print_r($yourbrowser);&#xD;&#xA;	?>"
1898107673695799220,96,6,"    var defaultDiacriticsRemovalMap = [&#xD;&#xA;        {'base':'A', 'letters':/[\u0041\u24B6\uFF21\u00C0\u00C1\u00C2\u1EA6\u1EA4\u1EAA\u1EA8\u00C3\u0100\u0102\u1EB0\u1EAE\u1EB4\u1EB2\u0226\u01E0\u00C4\u01DE\u1EA2\u00C5\u01FA\u01CD\u0200\u0202\u1EA0\u1EAC\u1EB6\u1E00\u0104\u023A\u2C6F]/g},&#xD;&#xA;        {'base':'AA','letters':/[\uA732]/g},&#xD;&#xA;        {'base':'AE','letters':/[\u00C6\u01FC\u01E2]/g},&#xD;&#xA;        {'base':'AO','letters':/[\uA734]/g},&#xD;&#xA;        {'base':'AU','letters':/[\uA736]/g},&#xD;&#xA;        {'base':'AV','letters':/[\uA738\uA73A]/g},&#xD;&#xA;        {'base':'AY','letters':/[\uA73C]/g},&#xD;&#xA;        {'base':'B', 'letters':/[\u0042\u24B7\uFF22\u1E02\u1E04\u1E06\u0243\u0182\u0181]/g},&#xD;&#xA;        {'base':'C', 'letters':/[\u0043\u24B8\uFF23\u0106\u0108\u010A\u010C\u00C7\u1E08\u0187\u023B\uA73E]/g},&#xD;&#xA;        {'base':'D', 'letters':/[\u0044\u24B9\uFF24\u1E0A\u010E\u1E0C\u1E10\u1E12\u1E0E\u0110\u018B\u018A\u0189\uA779]/g},&#xD;&#xA;        {'base':'DZ','letters':/[\u01F1\u01C4]/g},&#xD;&#xA;        {'base':'Dz','letters':/[\u01F2\u01C5]/g},&#xD;&#xA;        {'base':'E', 'letters':/[\u0045\u24BA\uFF25\u00C8\u00C9\u00CA\u1EC0\u1EBE\u1EC4\u1EC2\u1EBC\u0112\u1E14\u1E16\u0114\u0116\u00CB\u1EBA\u011A\u0204\u0206\u1EB8\u1EC6\u0228\u1E1C\u0118\u1E18\u1E1A\u0190\u018E]/g},&#xD;&#xA;        {'base':'F', 'letters':/[\u0046\u24BB\uFF26\u1E1E\u0191\uA77B]/g},&#xD;&#xA;        {'base':'G', 'letters':/[\u0047\u24BC\uFF27\u01F4\u011C\u1E20\u011E\u0120\u01E6\u0122\u01E4\u0193\uA7A0\uA77D\uA77E]/g},&#xD;&#xA;        {'base':'H', 'letters':/[\u0048\u24BD\uFF28\u0124\u1E22\u1E26\u021E\u1E24\u1E28\u1E2A\u0126\u2C67\u2C75\uA78D]/g},&#xD;&#xA;        {'base':'I', 'letters':/[\u0049\u24BE\uFF29\u00CC\u00CD\u00CE\u0128\u012A\u012C\u0130\u00CF\u1E2E\u1EC8\u01CF\u0208\u020A\u1ECA\u012E\u1E2C\u0197]/g},&#xD;&#xA;        {'base':'J', 'letters':/[\u004A\u24BF\uFF2A\u0134\u0248]/g},&#xD;&#xA;        {'base':'K', 'letters':/[\u004B\u24C0\uFF2B\u1E30\u01E8\u1E32\u0136\u1E34\u0198\u2C69\uA740\uA742\uA744\uA7A2]/g},&#xD;&#xA;        {'base':'L', 'letters':/[\u004C\u24C1\uFF2C\u013F\u0139\u013D\u1E36\u1E38\u013B\u1E3C\u1E3A\u0141\u023D\u2C62\u2C60\uA748\uA746\uA780]/g},&#xD;&#xA;        {'base':'LJ','letters':/[\u01C7]/g},&#xD;&#xA;        {'base':'Lj','letters':/[\u01C8]/g},&#xD;&#xA;        {'base':'M', 'letters':/[\u004D\u24C2\uFF2D\u1E3E\u1E40\u1E42\u2C6E\u019C]/g},&#xD;&#xA;        {'base':'N', 'letters':/[\u004E\u24C3\uFF2E\u01F8\u0143\u00D1\u1E44\u0147\u1E46\u0145\u1E4A\u1E48\u0220\u019D\uA790\uA7A4]/g},&#xD;&#xA;        {'base':'NJ','letters':/[\u01CA]/g},&#xD;&#xA;        {'base':'Nj','letters':/[\u01CB]/g},&#xD;&#xA;        {'base':'O', 'letters':/[\u004F\u24C4\uFF2F\u00D2\u00D3\u00D4\u1ED2\u1ED0\u1ED6\u1ED4\u00D5\u1E4C\u022C\u1E4E\u014C\u1E50\u1E52\u014E\u022E\u0230\u00D6\u022A\u1ECE\u0150\u01D1\u020C\u020E\u01A0\u1EDC\u1EDA\u1EE0\u1EDE\u1EE2\u1ECC\u1ED8\u01EA\u01EC\u00D8\u01FE\u0186\u019F\uA74A\uA74C]/g},&#xD;&#xA;        {'base':'OI','letters':/[\u01A2]/g},&#xD;&#xA;        {'base':'OO','letters':/[\uA74E]/g},&#xD;&#xA;        {'base':'OU','letters':/[\u0222]/g},&#xD;&#xA;        {'base':'P', 'letters':/[\u0050\u24C5\uFF30\u1E54\u1E56\u01A4\u2C63\uA750\uA752\uA754]/g},&#xD;&#xA;        {'base':'Q', 'letters':/[\u0051\u24C6\uFF31\uA756\uA758\u024A]/g},&#xD;&#xA;        {'base':'R', 'letters':/[\u0052\u24C7\uFF32\u0154\u1E58\u0158\u0210\u0212\u1E5A\u1E5C\u0156\u1E5E\u024C\u2C64\uA75A\uA7A6\uA782]/g},&#xD;&#xA;        {'base':'S', 'letters':/[\u0053\u24C8\uFF33\u1E9E\u015A\u1E64\u015C\u1E60\u0160\u1E66\u1E62\u1E68\u0218\u015E\u2C7E\uA7A8\uA784]/g},&#xD;&#xA;        {'base':'T', 'letters':/[\u0054\u24C9\uFF34\u1E6A\u0164\u1E6C\u021A\u0162\u1E70\u1E6E\u0166\u01AC\u01AE\u023E\uA786]/g},&#xD;&#xA;        {'base':'TZ','letters':/[\uA728]/g},&#xD;&#xA;        {'base':'U', 'letters':/[\u0055\u24CA\uFF35\u00D9\u00DA\u00DB\u0168\u1E78\u016A\u1E7A\u016C\u00DC\u01DB\u01D7\u01D5\u01D9\u1EE6\u016E\u0170\u01D3\u0214\u0216\u01AF\u1EEA\u1EE8\u1EEE\u1EEC\u1EF0\u1EE4\u1E72\u0172\u1E76\u1E74\u0244]/g},&#xD;&#xA;        {'base':'V', 'letters':/[\u0056\u24CB\uFF36\u1E7C\u1E7E\u01B2\uA75E\u0245]/g},&#xD;&#xA;        {'base':'VY','letters':/[\uA760]/g},&#xD;&#xA;        {'base':'W', 'letters':/[\u0057\u24CC\uFF37\u1E80\u1E82\u0174\u1E86\u1E84\u1E88\u2C72]/g},&#xD;&#xA;        {'base':'X', 'letters':/[\u0058\u24CD\uFF38\u1E8A\u1E8C]/g},&#xD;&#xA;        {'base':'Y', 'letters':/[\u0059\u24CE\uFF39\u1EF2\u00DD\u0176\u1EF8\u0232\u1E8E\u0178\u1EF6\u1EF4\u01B3\u024E\u1EFE]/g},&#xD;&#xA;        {'base':'Z', 'letters':/[\u005A\u24CF\uFF3A\u0179\u1E90\u017B\u017D\u1E92\u1E94\u01B5\u0224\u2C7F\u2C6B\uA762]/g},&#xD;&#xA;        {'base':'a', 'letters':/[\u0061\u24D0\uFF41\u1E9A\u00E0\u00E1\u00E2\u1EA7\u1EA5\u1EAB\u1EA9\u00E3\u0101\u0103\u1EB1\u1EAF\u1EB5\u1EB3\u0227\u01E1\u00E4\u01DF\u1EA3\u00E5\u01FB\u01CE\u0201\u0203\u1EA1\u1EAD\u1EB7\u1E01\u0105\u2C65\u0250]/g},&#xD;&#xA;        {'base':'aa','letters':/[\uA733]/g},&#xD;&#xA;        {'base':'ae','letters':/[\u00E6\u01FD\u01E3]/g},&#xD;&#xA;        {'base':'ao','letters':/[\uA735]/g},&#xD;&#xA;        {'base':'au','letters':/[\uA737]/g},&#xD;&#xA;        {'base':'av','letters':/[\uA739\uA73B]/g},&#xD;&#xA;        {'base':'ay','letters':/[\uA73D]/g},&#xD;&#xA;        {'base':'b', 'letters':/[\u0062\u24D1\uFF42\u1E03\u1E05\u1E07\u0180\u0183\u0253]/g},&#xD;&#xA;        {'base':'c', 'letters':/[\u0063\u24D2\uFF43\u0107\u0109\u010B\u010D\u00E7\u1E09\u0188\u023C\uA73F\u2184]/g},&#xD;&#xA;        {'base':'d', 'letters':/[\u0064\u24D3\uFF44\u1E0B\u010F\u1E0D\u1E11\u1E13\u1E0F\u0111\u018C\u0256\u0257\uA77A]/g},&#xD;&#xA;        {'base':'dz','letters':/[\u01F3\u01C6]/g},&#xD;&#xA;        {'base':'e', 'letters':/[\u0065\u24D4\uFF45\u00E8\u00E9\u00EA\u1EC1\u1EBF\u1EC5\u1EC3\u1EBD\u0113\u1E15\u1E17\u0115\u0117\u00EB\u1EBB\u011B\u0205\u0207\u1EB9\u1EC7\u0229\u1E1D\u0119\u1E19\u1E1B\u0247\u025B\u01DD]/g},&#xD;&#xA;        {'base':'f', 'letters':/[\u0066\u24D5\uFF46\u1E1F\u0192\uA77C]/g},&#xD;&#xA;        {'base':'g', 'letters':/[\u0067\u24D6\uFF47\u01F5\u011D\u1E21\u011F\u0121\u01E7\u0123\u01E5\u0260\uA7A1\u1D79\uA77F]/g},&#xD;&#xA;        {'base':'h', 'letters':/[\u0068\u24D7\uFF48\u0125\u1E23\u1E27\u021F\u1E25\u1E29\u1E2B\u1E96\u0127\u2C68\u2C76\u0265]/g},&#xD;&#xA;        {'base':'hv','letters':/[\u0195]/g},&#xD;&#xA;        {'base':'i', 'letters':/[\u0069\u24D8\uFF49\u00EC\u00ED\u00EE\u0129\u012B\u012D\u00EF\u1E2F\u1EC9\u01D0\u0209\u020B\u1ECB\u012F\u1E2D\u0268\u0131]/g},&#xD;&#xA;        {'base':'j', 'letters':/[\u006A\u24D9\uFF4A\u0135\u01F0\u0249]/g},&#xD;&#xA;        {'base':'k', 'letters':/[\u006B\u24DA\uFF4B\u1E31\u01E9\u1E33\u0137\u1E35\u0199\u2C6A\uA741\uA743\uA745\uA7A3]/g},&#xD;&#xA;        {'base':'l', 'letters':/[\u006C\u24DB\uFF4C\u0140\u013A\u013E\u1E37\u1E39\u013C\u1E3D\u1E3B\u017F\u0142\u019A\u026B\u2C61\uA749\uA781\uA747]/g},&#xD;&#xA;        {'base':'lj','letters':/[\u01C9]/g},&#xD;&#xA;        {'base':'m', 'letters':/[\u006D\u24DC\uFF4D\u1E3F\u1E41\u1E43\u0271\u026F]/g},&#xD;&#xA;        {'base':'n', 'letters':/[\u006E\u24DD\uFF4E\u01F9\u0144\u00F1\u1E45\u0148\u1E47\u0146\u1E4B\u1E49\u019E\u0272\u0149\uA791\uA7A5]/g},&#xD;&#xA;        {'base':'nj','letters':/[\u01CC]/g},&#xD;&#xA;        {'base':'o', 'letters':/[\u006F\u24DE\uFF4F\u00F2\u00F3\u00F4\u1ED3\u1ED1\u1ED7\u1ED5\u00F5\u1E4D\u022D\u1E4F\u014D\u1E51\u1E53\u014F\u022F\u0231\u00F6\u022B\u1ECF\u0151\u01D2\u020D\u020F\u01A1\u1EDD\u1EDB\u1EE1\u1EDF\u1EE3\u1ECD\u1ED9\u01EB\u01ED\u00F8\u01FF\u0254\uA74B\uA74D\u0275]/g},&#xD;&#xA;        {'base':'oi','letters':/[\u01A3]/g},&#xD;&#xA;        {'base':'ou','letters':/[\u0223]/g},&#xD;&#xA;        {'base':'oo','letters':/[\uA74F]/g},&#xD;&#xA;        {'base':'p','letters':/[\u0070\u24DF\uFF50\u1E55\u1E57\u01A5\u1D7D\uA751\uA753\uA755]/g},&#xD;&#xA;        {'base':'q','letters':/[\u0071\u24E0\uFF51\u024B\uA757\uA759]/g},&#xD;&#xA;        {'base':'r','letters':/[\u0072\u24E1\uFF52\u0155\u1E59\u0159\u0211\u0213\u1E5B\u1E5D\u0157\u1E5F\u024D\u027D\uA75B\uA7A7\uA783]/g},&#xD;&#xA;        {'base':'s','letters':/[\u0073\u24E2\uFF53\u00DF\u015B\u1E65\u015D\u1E61\u0161\u1E67\u1E63\u1E69\u0219\u015F\u023F\uA7A9\uA785\u1E9B]/g},&#xD;&#xA;        {'base':'t','letters':/[\u0074\u24E3\uFF54\u1E6B\u1E97\u0165\u1E6D\u021B\u0163\u1E71\u1E6F\u0167\u01AD\u0288\u2C66\uA787]/g},&#xD;&#xA;        {'base':'tz','letters':/[\uA729]/g},&#xD;&#xA;        {'base':'u','letters':/[\u0075\u24E4\uFF55\u00F9\u00FA\u00FB\u0169\u1E79\u016B\u1E7B\u016D\u00FC\u01DC\u01D8\u01D6\u01DA\u1EE7\u016F\u0171\u01D4\u0215\u0217\u01B0\u1EEB\u1EE9\u1EEF\u1EED\u1EF1\u1EE5\u1E73\u0173\u1E77\u1E75\u0289]/g},&#xD;&#xA;        {'base':'v','letters':/[\u0076\u24E5\uFF56\u1E7D\u1E7F\u028B\uA75F\u028C]/g},&#xD;&#xA;        {'base':'vy','letters':/[\uA761]/g},&#xD;&#xA;        {'base':'w','letters':/[\u0077\u24E6\uFF57\u1E81\u1E83\u0175\u1E87\u1E85\u1E98\u1E89\u2C73]/g},&#xD;&#xA;        {'base':'x','letters':/[\u0078\u24E7\uFF58\u1E8B\u1E8D]/g},&#xD;&#xA;        {'base':'y','letters':/[\u0079\u24E8\uFF59\u1EF3\u00FD\u0177\u1EF9\u0233\u1E8F\u00FF\u1EF7\u1E99\u1EF5\u01B4\u024F\u1EFF]/g},&#xD;&#xA;        {'base':'z','letters':/[\u007A\u24E9\uFF5A\u017A\u1E91\u017C\u017E\u1E93\u1E95\u01B6\u0225\u0240\u2C6C\uA763]/g}&#xD;&#xA;    ];&#xD;&#xA;    var changes;&#xD;&#xA;    function removeDiacritics (str) {&#xD;&#xA;        if(!changes) {&#xD;&#xA;            changes = defaultDiacriticsRemovalMap;&#xD;&#xA;        }&#xD;&#xA;        for(var i=0; i<changes.length; i++) {&#xD;&#xA;            str = str.replace(changes[i].letters, changes[i].base);&#xD;&#xA;        }&#xD;&#xA;        return str;&#xD;&#xA;    }"
-7938393519378727411,97,6,"    (function ($) {&#xD;&#xA;	$.fn.countTo = function (options) {&#xD;&#xA;		options = options || {};&#xD;&#xA;		&#xD;&#xA;		return $(this).each(function () {&#xD;&#xA;			// set options for current element&#xD;&#xA;			var settings = $.extend({}, $.fn.countTo.defaults, {&#xD;&#xA;				from:            $(this).data('from'),&#xD;&#xA;				to:              $(this).data('to'),&#xD;&#xA;				speed:           $(this).data('speed'),&#xD;&#xA;				refreshInterval: $(this).data('refresh-interval'),&#xD;&#xA;				decimals:        $(this).data('decimals')&#xD;&#xA;			}, options);&#xD;&#xA;			&#xD;&#xA;			// how many times to update the value, and how much to increment the value on each update&#xD;&#xA;			var loops = Math.ceil(settings.speed / settings.refreshInterval),&#xD;&#xA;				increment = (settings.to - settings.from) / loops;&#xD;&#xA;			&#xD;&#xA;			// references & variables that will change with each update&#xD;&#xA;			var self = this,&#xD;&#xA;				$self = $(this),&#xD;&#xA;				loopCount = 0,&#xD;&#xA;				value = settings.from,&#xD;&#xA;				data = $self.data('countTo') || {};&#xD;&#xA;			&#xD;&#xA;			$self.data('countTo', data);&#xD;&#xA;			&#xD;&#xA;			// if an existing interval can be found, clear it first&#xD;&#xA;			if (data.interval) {&#xD;&#xA;				clearInterval(data.interval);&#xD;&#xA;			}&#xD;&#xA;			data.interval = setInterval(updateTimer, settings.refreshInterval);&#xD;&#xA;			&#xD;&#xA;			// initialize the element with the starting value&#xD;&#xA;			render(value);&#xD;&#xA;			&#xD;&#xA;			function updateTimer() {&#xD;&#xA;				value += increment;&#xD;&#xA;				loopCount++;&#xD;&#xA;				&#xD;&#xA;				render(value);&#xD;&#xA;				&#xD;&#xA;				if (typeof(settings.onUpdate) == 'function') {&#xD;&#xA;					settings.onUpdate.call(self, value);&#xD;&#xA;				}&#xD;&#xA;				&#xD;&#xA;				if (loopCount >= loops) {&#xD;&#xA;					// remove the interval&#xD;&#xA;					$self.removeData('countTo');&#xD;&#xA;					clearInterval(data.interval);&#xD;&#xA;					value = settings.to;&#xD;&#xA;					&#xD;&#xA;					if (typeof(settings.onComplete) == 'function') {&#xD;&#xA;						settings.onComplete.call(self, value);&#xD;&#xA;					}&#xD;&#xA;				}&#xD;&#xA;			}&#xD;&#xA;			&#xD;&#xA;			function render(value) {&#xD;&#xA;				var formattedValue = settings.formatter.call(self, value, settings);&#xD;&#xA;				$self.html(formattedValue);&#xD;&#xA;			}&#xD;&#xA;		});&#xD;&#xA;	};&#xD;&#xA;	&#xD;&#xA;	$.fn.countTo.defaults = {&#xD;&#xA;		from: 0,               // the number the element should start at&#xD;&#xA;		to: 0,                 // the number the element should end at&#xD;&#xA;		speed: 1000,           // how long it should take to count between the target numbers&#xD;&#xA;		refreshInterval: 100,  // how often the element should be updated&#xD;&#xA;		decimals: 0,           // the number of decimal places to show&#xD;&#xA;		formatter: formatter,  // handler for formatting the value before rendering&#xD;&#xA;		onUpdate: null,        // callback method for every time the element is updated&#xD;&#xA;		onComplete: null       // callback method for when the element finishes updating&#xD;&#xA;	};&#xD;&#xA;	&#xD;&#xA;	function formatter(value, settings) {&#xD;&#xA;		return value.toFixed(settings.decimals);&#xD;&#xA;	}&#xD;&#xA;    }(jQuery));&#xD;&#xA;    jQuery(function ($) {&#xD;&#xA;      // custom formatting example&#xD;&#xA;      $('#count-number').data('countToOptions', {&#xD;&#xA;    	formatter: function (value, options) {&#xD;&#xA;    	  return value.toFixed(options.decimals).replace(/\B(?=(?:\d{3})+(?!\d))/g, ',');&#xD;&#xA;    	}&#xD;&#xA;      });&#xD;&#xA;      &#xD;&#xA;      // start all the timers&#xD;&#xA;      $('.timer').each(count);  &#xD;&#xA;      &#xD;&#xA;      function count(options) {&#xD;&#xA;    	var $this = $(this);&#xD;&#xA;    	options = $.extend({}, options || {}, $this.data('countToOptions') || {});&#xD;&#xA;    	$this.countTo(options);&#xD;&#xA;      }&#xD;&#xA;    });"
-6998442387411209503,99,6,"    /*Now the CSS*/&#xD;&#xA;     * {&#xD;&#xA;        margin: 0;&#xD;&#xA;        padding: 0;&#xD;&#xA;    }&#xD;&#xA;    .tree ul {&#xD;&#xA;        padding-top: 20px;&#xD;&#xA;        position: relative;&#xD;&#xA;        transition: all 0.5s;&#xD;&#xA;        -webkit-transition: all 0.5s;&#xD;&#xA;        -moz-transition: all 0.5s;&#xD;&#xA;    }&#xD;&#xA;    .tree li {&#xD;&#xA;        float: left;&#xD;&#xA;        text-align: center;&#xD;&#xA;        list-style-type: none;&#xD;&#xA;        position: relative;&#xD;&#xA;        padding: 20px 5px 0 5px;&#xD;&#xA;        transition: all 0.5s;&#xD;&#xA;        -webkit-transition: all 0.5s;&#xD;&#xA;        -moz-transition: all 0.5s;&#xD;&#xA;    }&#xD;&#xA;    /*We will use ::before and ::after to draw the connectors*/&#xD;&#xA;     .tree li:before, .tree li:after {&#xD;&#xA;        content:'';&#xD;&#xA;        position: absolute;&#xD;&#xA;        top: 0;&#xD;&#xA;        right: 50%;&#xD;&#xA;        border-top: 1px solid #ccc;&#xD;&#xA;        width: 50%;&#xD;&#xA;        height: 20px;&#xD;&#xA;    }&#xD;&#xA;    .tree li:after {&#xD;&#xA;        right: auto;&#xD;&#xA;        left: 50%;&#xD;&#xA;        border-left: 1px solid #ccc;&#xD;&#xA;    }&#xD;&#xA;    /*We need to remove left-right connectors from elements without &#xD;&#xA;    any siblings*/&#xD;&#xA;     .tree li.only-child:after, .tree li.only-child:before {&#xD;&#xA;        display: none;&#xD;&#xA;    }&#xD;&#xA;    /*Remove space from the top of single children*/&#xD;&#xA;     .tree li.only-child {&#xD;&#xA;        padding-top: 0;&#xD;&#xA;    }&#xD;&#xA;    /*Remove left connector from first child and &#xD;&#xA;    right connector from last child*/&#xD;&#xA;     .tree li:first-child:before, .tree li:last-child:after {&#xD;&#xA;        border: 0 none;&#xD;&#xA;    }&#xD;&#xA;    /*Adding back the vertical connector to the last nodes*/&#xD;&#xA;     .tree li:last-child:before {&#xD;&#xA;        border-right: 1px solid #ccc;&#xD;&#xA;        border-radius: 0 5px 0 0;&#xD;&#xA;        -webkit-border-radius: 0 5px 0 0;&#xD;&#xA;        -moz-border-radius: 0 5px 0 0;&#xD;&#xA;    }&#xD;&#xA;    .tree li:first-child:after {&#xD;&#xA;        border-radius: 5px 0 0 0;&#xD;&#xA;        -webkit-border-radius: 5px 0 0 0;&#xD;&#xA;        -moz-border-radius: 5px 0 0 0;&#xD;&#xA;    }&#xD;&#xA;    /*Time to add downward connectors from parents*/&#xD;&#xA;     .tree ul ul:before {&#xD;&#xA;        content:'';&#xD;&#xA;        position: absolute;&#xD;&#xA;        top: 0;&#xD;&#xA;        left: 50%;&#xD;&#xA;        border-left: 1px solid #ccc;&#xD;&#xA;        width: 0;&#xD;&#xA;        height: 20px;&#xD;&#xA;    }&#xD;&#xA;    .tree li a {&#xD;&#xA;        border: 1px solid #ccc;&#xD;&#xA;        padding: 5px 10px;&#xD;&#xA;        text-decoration: none;&#xD;&#xA;        color: #666;&#xD;&#xA;        font-family: arial, verdana, tahoma;&#xD;&#xA;        font-size: 11px;&#xD;&#xA;        display: inline-block;&#xD;&#xA;        border-radius: 5px;&#xD;&#xA;        -webkit-border-radius: 5px;&#xD;&#xA;        -moz-border-radius: 5px;&#xD;&#xA;        transition: all 0.5s;&#xD;&#xA;        -webkit-transition: all 0.5s;&#xD;&#xA;        -moz-transition: all 0.5s;&#xD;&#xA;    }&#xD;&#xA;    /*Time for some hover effects*/&#xD;&#xA;    /*We will apply the hover effect the the lineage of the element also*/&#xD;&#xA;     .tree li a:hover, .tree li a:hover+ul li a {&#xD;&#xA;        background: #c8e4f8;&#xD;&#xA;        color: #000;&#xD;&#xA;        border: 1px solid #94a0b4;&#xD;&#xA;    }&#xD;&#xA;    /*Connector styles on hover*/&#xD;&#xA;     .tree li a:hover+ul li::after, .tree li a:hover+ul li::before, .tree li a:hover+ul::before, .tree li a:hover+ul ul::before {&#xD;&#xA;        border-color: #94a0b4;&#xD;&#xA;    }"
-6959645127231362279,100,6,"    package com.example.androidhive;&#xD;&#xA;     &#xD;&#xA;    import java.io.BufferedReader;&#xD;&#xA;    import java.io.IOException;&#xD;&#xA;    import java.io.InputStream;&#xD;&#xA;    import java.io.InputStreamReader;&#xD;&#xA;    import java.io.UnsupportedEncodingException;&#xD;&#xA;    import java.util.List;&#xD;&#xA;     &#xD;&#xA;    import org.apache.http.HttpEntity;&#xD;&#xA;    import org.apache.http.HttpResponse;&#xD;&#xA;    import org.apache.http.NameValuePair;&#xD;&#xA;    import org.apache.http.client.ClientProtocolException;&#xD;&#xA;    import org.apache.http.client.entity.UrlEncodedFormEntity;&#xD;&#xA;    import org.apache.http.client.methods.HttpGet;&#xD;&#xA;    import org.apache.http.client.methods.HttpPost;&#xD;&#xA;    import org.apache.http.client.utils.URLEncodedUtils;&#xD;&#xA;    import org.apache.http.impl.client.DefaultHttpClient;&#xD;&#xA;    import org.json.JSONException;&#xD;&#xA;    import org.json.JSONObject;&#xD;&#xA;     &#xD;&#xA;    import android.util.Log;&#xD;&#xA;     &#xD;&#xA;    public class JSONParser {&#xD;&#xA;     &#xD;&#xA;        static InputStream is = null;&#xD;&#xA;        static JSONObject jObj = null;&#xD;&#xA;        static String json = """";&#xD;&#xA;     &#xD;&#xA;        // constructor&#xD;&#xA;        public JSONParser() {&#xD;&#xA;     &#xD;&#xA;        }&#xD;&#xA;     &#xD;&#xA;        // function get json from url&#xD;&#xA;        // by making HTTP POST or GET mehtod&#xD;&#xA;        public JSONObject makeHttpRequest(String url, String method,&#xD;&#xA;                List<NameValuePair> params) {&#xD;&#xA;     &#xD;&#xA;            // Making HTTP request&#xD;&#xA;            try {&#xD;&#xA;     &#xD;&#xA;                // check for request method&#xD;&#xA;                if(method == ""POST""){&#xD;&#xA;                    // request method is POST&#xD;&#xA;                    // defaultHttpClient&#xD;&#xA;                    DefaultHttpClient httpClient = new DefaultHttpClient();&#xD;&#xA;                    HttpPost httpPost = new HttpPost(url);&#xD;&#xA;                    httpPost.setEntity(new UrlEncodedFormEntity(params));&#xD;&#xA;     &#xD;&#xA;                    HttpResponse httpResponse = httpClient.execute(httpPost);&#xD;&#xA;                    HttpEntity httpEntity = httpResponse.getEntity();&#xD;&#xA;                    is = httpEntity.getContent();&#xD;&#xA;     &#xD;&#xA;                }else if(method == ""GET""){&#xD;&#xA;                    // request method is GET&#xD;&#xA;                    DefaultHttpClient httpClient = new DefaultHttpClient();&#xD;&#xA;                    String paramString = URLEncodedUtils.format(params, ""utf-8"");&#xD;&#xA;                    url += ""?"" + paramString;&#xD;&#xA;                    HttpGet httpGet = new HttpGet(url);&#xD;&#xA;     &#xD;&#xA;                    HttpResponse httpResponse = httpClient.execute(httpGet);&#xD;&#xA;                    HttpEntity httpEntity = httpResponse.getEntity();&#xD;&#xA;                    is = httpEntity.getContent();&#xD;&#xA;                }           &#xD;&#xA;     &#xD;&#xA;            } catch (UnsupportedEncodingException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            } catch (ClientProtocolException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            } catch (IOException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            }&#xD;&#xA;     &#xD;&#xA;            try {&#xD;&#xA;                BufferedReader reader = new BufferedReader(new InputStreamReader(&#xD;&#xA;                        is, ""iso-8859-1""), 8);&#xD;&#xA;                StringBuilder sb = new StringBuilder();&#xD;&#xA;                String line = null;&#xD;&#xA;                while ((line = reader.readLine()) != null) {&#xD;&#xA;                    sb.append(line + ""\n"");&#xD;&#xA;                }&#xD;&#xA;                is.close();&#xD;&#xA;                json = sb.toString();&#xD;&#xA;            } catch (Exception e) {&#xD;&#xA;                Log.e(""Buffer Error"", ""Error converting result "" + e.toString());&#xD;&#xA;            }&#xD;&#xA;     &#xD;&#xA;            // try parse the string to a JSON object&#xD;&#xA;            try {&#xD;&#xA;                jObj = new JSONObject(json);&#xD;&#xA;            } catch (JSONException e) {&#xD;&#xA;                Log.e(""JSON Parser"", ""Error parsing data "" + e.toString());&#xD;&#xA;            }&#xD;&#xA;     &#xD;&#xA;            // return JSON String&#xD;&#xA;            return jObj;&#xD;&#xA;     &#xD;&#xA;        }&#xD;&#xA;    }"
3661036621455180183,104,6,"        <!DOCTYPE html>&#xD;&#xA;    <html>&#xD;&#xA;      <head>&#xD;&#xA;        <title>Capture Photo</title>&#xD;&#xA;    &#xD;&#xA;        <script type=""text/javascript"" charset=""utf-8"" src=""cordova.js""></script>&#xD;&#xA;        <script type=""text/javascript"" charset=""utf-8"">&#xD;&#xA;    &#xD;&#xA;        var pictureSource;   // picture source&#xD;&#xA;        var destinationType; // sets the format of returned value&#xD;&#xA;    &#xD;&#xA;        // Wait for device API libraries to load&#xD;&#xA;        //&#xD;&#xA;        document.addEventListener(""deviceready"",onDeviceReady,false);&#xD;&#xA;    &#xD;&#xA;        // device APIs are available&#xD;&#xA;        //&#xD;&#xA;        function onDeviceReady() {&#xD;&#xA;            pictureSource=navigator.camera.PictureSourceType;&#xD;&#xA;            destinationType=navigator.camera.DestinationType;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // Called when a photo is successfully retrieved&#xD;&#xA;        //&#xD;&#xA;        function onPhotoDataSuccess(imageData) {&#xD;&#xA;          // Uncomment to view the base64-encoded image data&#xD;&#xA;          // console.log(imageData);&#xD;&#xA;    &#xD;&#xA;          // Get image handle&#xD;&#xA;          //&#xD;&#xA;          var smallImage = document.getElementById('smallImage');&#xD;&#xA;    &#xD;&#xA;          // Unhide image elements&#xD;&#xA;          //&#xD;&#xA;          smallImage.style.display = 'block';&#xD;&#xA;    &#xD;&#xA;          // Show the captured photo&#xD;&#xA;          // The inline CSS rules are used to resize the image&#xD;&#xA;          //&#xD;&#xA;          smallImage.src = ""data:image/jpeg;base64,"" + imageData;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // Called when a photo is successfully retrieved&#xD;&#xA;        //&#xD;&#xA;        function onPhotoURISuccess(imageURI) {&#xD;&#xA;          // Uncomment to view the image file URI&#xD;&#xA;          // console.log(imageURI);&#xD;&#xA;    &#xD;&#xA;          // Get image handle&#xD;&#xA;          //&#xD;&#xA;          var largeImage = document.getElementById('largeImage');&#xD;&#xA;    &#xD;&#xA;          // Unhide image elements&#xD;&#xA;          //&#xD;&#xA;          largeImage.style.display = 'block';&#xD;&#xA;    &#xD;&#xA;          // Show the captured photo&#xD;&#xA;          // The inline CSS rules are used to resize the image&#xD;&#xA;          //&#xD;&#xA;          largeImage.src = imageURI;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // A button will call this function&#xD;&#xA;        //&#xD;&#xA;        function capturePhoto() {&#xD;&#xA;          // Take picture using device camera and retrieve image as base64-encoded string&#xD;&#xA;          navigator.camera.getPicture(onPhotoDataSuccess, onFail, { quality: 50,&#xD;&#xA;            destinationType: destinationType.DATA_URL });&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // A button will call this function&#xD;&#xA;        //&#xD;&#xA;        function capturePhotoEdit() {&#xD;&#xA;          // Take picture using device camera, allow edit, and retrieve image as base64-encoded string&#xD;&#xA;          navigator.camera.getPicture(onPhotoDataSuccess, onFail, { quality: 20, allowEdit: true,&#xD;&#xA;            destinationType: destinationType.DATA_URL });&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // A button will call this function&#xD;&#xA;        //&#xD;&#xA;        function getPhoto(source) {&#xD;&#xA;          // Retrieve image file location from specified source&#xD;&#xA;          navigator.camera.getPicture(onPhotoURISuccess, onFail, { quality: 50,&#xD;&#xA;            destinationType: destinationType.FILE_URI,&#xD;&#xA;            sourceType: source });&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // Called if something bad happens.&#xD;&#xA;        //&#xD;&#xA;        function onFail(message) {&#xD;&#xA;          alert('Failed because: ' + message);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        </script>&#xD;&#xA;      </head>&#xD;&#xA;      <body>&#xD;&#xA;        <button onclick=""capturePhoto();"">Capture Photo</button> <br>&#xD;&#xA;        <button onclick=""capturePhotoEdit();"">Capture Editable Photo</button> <br>&#xD;&#xA;        <button onclick=""getPhoto(pictureSource.PHOTOLIBRARY);"">From Photo Library</button><br>&#xD;&#xA;        <button onclick=""getPhoto(pictureSource.SAVEDPHOTOALBUM);"">From Photo Album</button><br>&#xD;&#xA;        <img style=""display:none;width:60px;height:60px;"" id=""smallImage"" src="""" />&#xD;&#xA;        <img style=""display:none;"" id=""largeImage"" src="""" />&#xD;&#xA;      </body>&#xD;&#xA;    </html>"
3315999684358408914,105,6,"     public class FeedListAdapter extends BaseAdapter {	&#xD;&#xA;    	private Activity activity;&#xD;&#xA;    	private LayoutInflater inflater;&#xD;&#xA;    	private List<FeedItem> feedItems;&#xD;&#xA;    	ImageLoader imageLoader = AppController.getInstance().getImageLoader();&#xD;&#xA;    &#xD;&#xA;    	public FeedListAdapter(Activity activity, List<FeedItem> feedItems) {&#xD;&#xA;    		this.activity = activity;&#xD;&#xA;    		this.feedItems = feedItems;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	@Override&#xD;&#xA;    	public int getCount() {&#xD;&#xA;    		return feedItems.size();&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	@Override&#xD;&#xA;    	public Object getItem(int location) {&#xD;&#xA;    		return feedItems.get(location);&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	@Override&#xD;&#xA;    	public long getItemId(int position) {&#xD;&#xA;    		return position;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	@Override&#xD;&#xA;    	public View getView(int position, View convertView, ViewGroup parent) {&#xD;&#xA;    &#xD;&#xA;    		if (inflater == null)&#xD;&#xA;    			inflater = (LayoutInflater) activity&#xD;&#xA;    					.getSystemService(Context.LAYOUT_INFLATER_SERVICE);&#xD;&#xA;    		if (convertView == null)&#xD;&#xA;    			convertView = inflater.inflate(R.layout.feed_item, null);&#xD;&#xA;    &#xD;&#xA;    		if (imageLoader == null)&#xD;&#xA;    			imageLoader = AppController.getInstance().getImageLoader();&#xD;&#xA;    &#xD;&#xA;    		TextView name = (TextView) convertView.findViewById(R.id.name);&#xD;&#xA;    		TextView timestamp = (TextView) convertView&#xD;&#xA;    				.findViewById(R.id.timestamp);&#xD;&#xA;    		TextView statusMsg = (TextView) convertView&#xD;&#xA;    				.findViewById(R.id.txtStatusMsg);&#xD;&#xA;    		TextView url = (TextView) convertView.findViewById(R.id.txtUrl);&#xD;&#xA;    		NetworkImageView profilePic = (NetworkImageView) convertView&#xD;&#xA;    				.findViewById(R.id.profilePic);&#xD;&#xA;    		FeedImageView feedImageView = (FeedImageView) convertView&#xD;&#xA;    				.findViewById(R.id.feedImage1);&#xD;&#xA;    &#xD;&#xA;    		FeedItem item = feedItems.get(position);&#xD;&#xA;    &#xD;&#xA;    		name.setText(item.getName());&#xD;&#xA;    &#xD;&#xA;    		// Converting timestamp into x ago format&#xD;&#xA;    		CharSequence timeAgo = DateUtils.getRelativeTimeSpanString(&#xD;&#xA;    				Long.parseLong(item.getTimeStamp()),&#xD;&#xA;    				System.currentTimeMillis(), DateUtils.SECOND_IN_MILLIS);&#xD;&#xA;    		timestamp.setText(timeAgo);&#xD;&#xA;    &#xD;&#xA;    		// Chcek for empty status message&#xD;&#xA;    		if (!TextUtils.isEmpty(item.getStatus())) {&#xD;&#xA;    			statusMsg.setText(item.getStatus());&#xD;&#xA;    			statusMsg.setVisibility(View.VISIBLE);&#xD;&#xA;    		} else {&#xD;&#xA;    			// status is empty, remove from view&#xD;&#xA;    			statusMsg.setVisibility(View.GONE);&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		// Checking for null feed url&#xD;&#xA;    		if (item.getUrl() != null) {&#xD;&#xA;    			url.setText(Html.fromHtml(""<a href=\"""" + item.getUrl() + ""\"">""&#xD;&#xA;    					+ item.getUrl() + ""</a> ""));&#xD;&#xA;    &#xD;&#xA;    			// Making url clickable&#xD;&#xA;    			url.setMovementMethod(LinkMovementMethod.getInstance());&#xD;&#xA;    			url.setVisibility(View.VISIBLE);&#xD;&#xA;    		} else {&#xD;&#xA;    			// url is null, remove from the view&#xD;&#xA;    			url.setVisibility(View.GONE);&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		// user profile pic&#xD;&#xA;    		profilePic.setImageUrl(item.getProfilePic(), imageLoader);&#xD;&#xA;    &#xD;&#xA;    		// Feed image&#xD;&#xA;    		if (item.getImge() != null) {&#xD;&#xA;    			feedImageView.setImageUrl(item.getImge(), imageLoader);&#xD;&#xA;    			feedImageView.setVisibility(View.VISIBLE);&#xD;&#xA;    			feedImageView&#xD;&#xA;    					.setResponseObserver(new FeedImageView.ResponseObserver() {&#xD;&#xA;    						@Override&#xD;&#xA;    						public void onError() {&#xD;&#xA;    						}&#xD;&#xA;    &#xD;&#xA;    						@Override&#xD;&#xA;    						public void onSuccess() {&#xD;&#xA;    						}&#xD;&#xA;    					});&#xD;&#xA;    		} else {&#xD;&#xA;    			feedImageView.setVisibility(View.GONE);&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		return convertView;&#xD;&#xA;    	}&#xD;&#xA;    }"
147441993102384875,105,6,"    <?php&#xD;&#xA;     &#xD;&#xA;    /*&#xD;&#xA;    * File: SimpleImage.php&#xD;&#xA;    * Author: Simon Jarvis&#xD;&#xA;    * Copyright: 2006 Simon Jarvis&#xD;&#xA;    * Date: 08/11/06&#xD;&#xA;    * Link: http://www.white-hat-web-design.co.uk/articles/php-image-resizing.php&#xD;&#xA;    *&#xD;&#xA;    * This program is free software; you can redistribute it and/or&#xD;&#xA;    * modify it under the terms of the GNU General Public License&#xD;&#xA;    * as published by the Free Software Foundation; either version 2&#xD;&#xA;    * of the License, or (at your option) any later version.&#xD;&#xA;    *&#xD;&#xA;    * This program is distributed in the hope that it will be useful,&#xD;&#xA;    * but WITHOUT ANY WARRANTY; without even the implied warranty of&#xD;&#xA;    * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the&#xD;&#xA;    * GNU General Public License for more details:&#xD;&#xA;    * http://www.gnu.org/licenses/gpl.html&#xD;&#xA;    *&#xD;&#xA;    */&#xD;&#xA;     &#xD;&#xA;    class SimpleImage {&#xD;&#xA;     &#xD;&#xA;       var $image;&#xD;&#xA;       var $image_type;&#xD;&#xA;     &#xD;&#xA;       function load($filename) {&#xD;&#xA;     &#xD;&#xA;          $image_info = getimagesize($filename);&#xD;&#xA;          $this->image_type = $image_info[2];&#xD;&#xA;          if( $this->image_type == IMAGETYPE_JPEG ) {&#xD;&#xA;     &#xD;&#xA;             $this->image = imagecreatefromjpeg($filename);&#xD;&#xA;          } elseif( $this->image_type == IMAGETYPE_GIF ) {&#xD;&#xA;     &#xD;&#xA;             $this->image = imagecreatefromgif($filename);&#xD;&#xA;          } elseif( $this->image_type == IMAGETYPE_PNG ) {&#xD;&#xA;     &#xD;&#xA;             $this->image = imagecreatefrompng($filename);&#xD;&#xA;          }&#xD;&#xA;       }&#xD;&#xA;       function save($filename, $image_type=IMAGETYPE_JPEG, $compression=75, $permissions=null) {&#xD;&#xA;     &#xD;&#xA;          if( $image_type == IMAGETYPE_JPEG ) {&#xD;&#xA;             imagejpeg($this->image,$filename,$compression);&#xD;&#xA;          } elseif( $image_type == IMAGETYPE_GIF ) {&#xD;&#xA;     &#xD;&#xA;             imagegif($this->image,$filename);&#xD;&#xA;          } elseif( $image_type == IMAGETYPE_PNG ) {&#xD;&#xA;     &#xD;&#xA;             imagepng($this->image,$filename);&#xD;&#xA;          }&#xD;&#xA;          if( $permissions != null) {&#xD;&#xA;     &#xD;&#xA;             chmod($filename,$permissions);&#xD;&#xA;          }&#xD;&#xA;       }&#xD;&#xA;       function output($image_type=IMAGETYPE_JPEG) {&#xD;&#xA;     &#xD;&#xA;          if( $image_type == IMAGETYPE_JPEG ) {&#xD;&#xA;             imagejpeg($this->image);&#xD;&#xA;          } elseif( $image_type == IMAGETYPE_GIF ) {&#xD;&#xA;     &#xD;&#xA;             imagegif($this->image);&#xD;&#xA;          } elseif( $image_type == IMAGETYPE_PNG ) {&#xD;&#xA;     &#xD;&#xA;             imagepng($this->image);&#xD;&#xA;          }&#xD;&#xA;       }&#xD;&#xA;       function getWidth() {&#xD;&#xA;     &#xD;&#xA;          return imagesx($this->image);&#xD;&#xA;       }&#xD;&#xA;       function getHeight() {&#xD;&#xA;     &#xD;&#xA;          return imagesy($this->image);&#xD;&#xA;       }&#xD;&#xA;       function resizeToHeight($height) {&#xD;&#xA;     &#xD;&#xA;          $ratio = $height / $this->getHeight();&#xD;&#xA;          $width = $this->getWidth() * $ratio;&#xD;&#xA;          $this->resize($width,$height);&#xD;&#xA;       }&#xD;&#xA;     &#xD;&#xA;       function resizeToWidth($width) {&#xD;&#xA;          $ratio = $width / $this->getWidth();&#xD;&#xA;          $height = $this->getheight() * $ratio;&#xD;&#xA;          $this->resize($width,$height);&#xD;&#xA;       }&#xD;&#xA;     &#xD;&#xA;       function scale($scale) {&#xD;&#xA;          $width = $this->getWidth() * $scale/100;&#xD;&#xA;          $height = $this->getheight() * $scale/100;&#xD;&#xA;          $this->resize($width,$height);&#xD;&#xA;       }&#xD;&#xA;     &#xD;&#xA;       function resize($width,$height) {&#xD;&#xA;          $new_image = imagecreatetruecolor($width, $height);&#xD;&#xA;          imagecopyresampled($new_image, $this->image, 0, 0, 0, 0, $width, $height, $this->getWidth(), $this->getHeight());&#xD;&#xA;          $this->image = $new_image;&#xD;&#xA;       }      &#xD;&#xA;     &#xD;&#xA;    }&#xD;&#xA;    ?>"
6052419038994772376,106,6,"	<?xml version=""1.0""?>&#xD;&#xA;	<config>&#xD;&#xA;	  <modules>&#xD;&#xA;		<VivasIndustries_SmsNotification>&#xD;&#xA;		  <version>0.1.0</version>&#xD;&#xA;		</VivasIndustries_SmsNotification>&#xD;&#xA;	  </modules>&#xD;&#xA;	  <global>&#xD;&#xA;		<models>&#xD;&#xA;			<smsnotification>&#xD;&#xA;				<class>VivasIndustries_SmsNotification_Model</class>&#xD;&#xA;				<resourceModel>vivasindustries_smsnotification_resource</resourceModel>&#xD;&#xA;			</smsnotification>&#xD;&#xA;			<vivasindustries_smsnotification_resource>&#xD;&#xA;			<class>VivasIndustries_SmsNotification_Model_Resource</class>&#xD;&#xA;			<entities>&#xD;&#xA;				<smsnotification>&#xD;&#xA;				<table>VivasIndustries_SmsNotification</table>&#xD;&#xA;				</smsnotification>&#xD;&#xA;			</entities>&#xD;&#xA;			</vivasindustries_smsnotification_resource>&#xD;&#xA;		</models>&#xD;&#xA;		<resources>&#xD;&#xA;			<smsnotification_setup>&#xD;&#xA;				<setup>&#xD;&#xA;					<module>VivasIndustries_SmsNotification</module>&#xD;&#xA;				</setup>&#xD;&#xA;				<connection>&#xD;&#xA;					 <use>core_setup</use>&#xD;&#xA;				 </connection>&#xD;&#xA;			</smsnotification_setup>&#xD;&#xA;			<smsnotification_read>&#xD;&#xA;				<connection>&#xD;&#xA;					<use>core_read</use>&#xD;&#xA;				</connection>&#xD;&#xA;			</smsnotification_read>&#xD;&#xA;			<smsnotification_write>&#xD;&#xA;				<connection>&#xD;&#xA;					<use>core_write</use>&#xD;&#xA;				</connection>&#xD;&#xA;			</smsnotification_write>&#xD;&#xA;		</resources>	&#xD;&#xA;		<events>&#xD;&#xA;			<sales_order_save_after>&#xD;&#xA;				<observers>&#xD;&#xA;					<vivasindustries_smsnotification>&#xD;&#xA;						<class>smsnotification/observer</class>&#xD;&#xA;						<method>orderSaved</method>&#xD;&#xA;					</vivasindustries_smsnotification>&#xD;&#xA;				</observers>&#xD;&#xA;			</sales_order_save_after>&#xD;&#xA;		</events>&#xD;&#xA;		<helpers>&#xD;&#xA;			<smsnotification>&#xD;&#xA;				<class>VivasIndustries_SmsNotification_Helper</class>&#xD;&#xA;			</smsnotification>&#xD;&#xA;		</helpers>&#xD;&#xA;		<blocks>&#xD;&#xA;			<smsnotification>&#xD;&#xA;				 <class>VivasIndustries_SmsNotification_Block</class>&#xD;&#xA;			</smsnotification>&#xD;&#xA;		</blocks>&#xD;&#xA;	  </global>&#xD;&#xA;	  <adminhtml>&#xD;&#xA;		<acl>&#xD;&#xA;			<resources>&#xD;&#xA;				<all>&#xD;&#xA;					<title>Allow Everything</title>&#xD;&#xA;				</all>&#xD;&#xA;				<admin>&#xD;&#xA;					<children>&#xD;&#xA;						<system>&#xD;&#xA;							<children>&#xD;&#xA;								<config>&#xD;&#xA;									<children>&#xD;&#xA;										<vivas>&#xD;&#xA;											<title>Vivas - All</title>&#xD;&#xA;										</vivas>&#xD;&#xA;									</children>&#xD;&#xA;								</config>&#xD;&#xA;							</children>&#xD;&#xA;						</system>&#xD;&#xA;					</children>&#xD;&#xA;				</admin>&#xD;&#xA;			</resources>&#xD;&#xA;		</acl>&#xD;&#xA;		<layout>&#xD;&#xA;			<updates>&#xD;&#xA;				<smsnotification>&#xD;&#xA;					<file>smsnotification.xml</file>&#xD;&#xA;				</smsnotification>&#xD;&#xA;			</updates>&#xD;&#xA;		</layout>	&#xD;&#xA;		</adminhtml>&#xD;&#xA;		<admin>&#xD;&#xA;			<routers>&#xD;&#xA;				<adminhtml>&#xD;&#xA;					<args>&#xD;&#xA;						<modules>&#xD;&#xA;							<VivasIndustries_SmsNotification before=""Mage_Adminhtml"">VivasIndustries_SmsNotification_Adminhtml</VivasIndustries_SmsNotification>&#xD;&#xA;						</modules>&#xD;&#xA;					</args>&#xD;&#xA;				</adminhtml>&#xD;&#xA;			</routers>&#xD;&#xA;		</admin>&#xD;&#xA;	</config>  "
2369040016613881548,106,6,"    import android.content.Context;&#xD;&#xA;    import android.graphics.Canvas;&#xD;&#xA;    import android.graphics.drawable.BitmapDrawable;&#xD;&#xA;    import android.util.AttributeSet;&#xD;&#xA;    import android.util.Log;&#xD;&#xA;    import android.view.MotionEvent;&#xD;&#xA;    import android.view.ScaleGestureDetector;&#xD;&#xA;     import android.view.View;&#xD;&#xA;    public class MyImageView extends View {&#xD;&#xA;    private static final int INVALID_POINTER_ID = -1;&#xD;&#xA;    private Drawable mImage;&#xD;&#xA;    private float mPosX;&#xD;&#xA;    private float mPosY;&#xD;&#xA;    private float mLastTouchX;&#xD;&#xA;    private float mLastTouchY;&#xD;&#xA;    private int mActivePointerId = INVALID_POINTER_ID;&#xD;&#xA;    private ScaleGestureDetector mScaleDetector;&#xD;&#xA;    private float mScaleFactor = 1.f;&#xD;&#xA;    public MyImageView(Context context) {&#xD;&#xA;        this(context, null, 0);&#xD;&#xA;    mImage=act.getResources().getDrawable(context.getResources().getIdentifier(""imag­ename"", ""drawable"", ""packagename""));&#xD;&#xA;        mImage.setBounds(0, 0, mImage.getIntrinsicWidth(), mImage.getIntrinsicHeight());&#xD;&#xA;    }&#xD;&#xA;    public MyImageView(Context context, AttributeSet attrs) {&#xD;&#xA;        this(context, attrs, 0);&#xD;&#xA;    }&#xD;&#xA;    public MyImageView(Context context, AttributeSet attrs, int defStyle) {&#xD;&#xA;        super(context, attrs, defStyle);&#xD;&#xA;        mScaleDetector = new ScaleGestureDetector(context, new ScaleListener());&#xD;&#xA;    }&#xD;&#xA;    @Override&#xD;&#xA;    public boolean onTouchEvent(MotionEvent ev) {&#xD;&#xA;        // Let the ScaleGestureDetector inspect all events.&#xD;&#xA;        mScaleDetector.onTouchEvent(ev);&#xD;&#xA;        final int action = ev.getAction();&#xD;&#xA;        switch (action & MotionEvent.ACTION_MASK) {&#xD;&#xA;        case MotionEvent.ACTION_DOWN: {&#xD;&#xA;            final float x = ev.getX();&#xD;&#xA;            final float y = ev.getY();&#xD;&#xA;            mLastTouchX = x;&#xD;&#xA;            mLastTouchY = y;&#xD;&#xA;            mActivePointerId = ev.getPointerId(0);&#xD;&#xA;            break;&#xD;&#xA;        }&#xD;&#xA;        case MotionEvent.ACTION_MOVE: {&#xD;&#xA;            final int pointerIndex = ev.findPointerIndex(mActivePointerId);&#xD;&#xA;            final float x = ev.getX(pointerIndex);&#xD;&#xA;            final float y = ev.getY(pointerIndex);&#xD;&#xA;            // Only move if the ScaleGestureDetector isn't processing a gesture.&#xD;&#xA;            if (!mScaleDetector.isInProgress()) {&#xD;&#xA;                final float dx = x - mLastTouchX;&#xD;&#xA;                final float dy = y - mLastTouchY;&#xD;&#xA;                mPosX += dx;&#xD;&#xA;                mPosY += dy;&#xD;&#xA;                invalidate();&#xD;&#xA;            }&#xD;&#xA;            mLastTouchX = x;&#xD;&#xA;            mLastTouchY = y;&#xD;&#xA;            break;&#xD;&#xA;        }&#xD;&#xA;        case MotionEvent.ACTION_UP: {&#xD;&#xA;            mActivePointerId = INVALID_POINTER_ID;&#xD;&#xA;            break;&#xD;&#xA;        }&#xD;&#xA;        case MotionEvent.ACTION_CANCEL: {&#xD;&#xA;            mActivePointerId = INVALID_POINTER_ID;&#xD;&#xA;            break;&#xD;&#xA;        }&#xD;&#xA;        case MotionEvent.ACTION_POINTER_UP: {&#xD;&#xA;            final int pointerIndex = (ev.getAction() & MotionEvent.ACTION_POINTER_INDEX_MASK) &#xD;&#xA;                    >> MotionEvent.ACTION_POINTER_INDEX_SHIFT;&#xD;&#xA;            final int pointerId = ev.getPointerId(pointerIndex);&#xD;&#xA;            if (pointerId == mActivePointerId) {&#xD;&#xA;                // This was our active pointer going up. Choose a new&#xD;&#xA;                // active pointer and adjust accordingly.&#xD;&#xA;                final int newPointerIndex = pointerIndex == 0 ? 1 : 0;&#xD;&#xA;                mLastTouchX = ev.getX(newPointerIndex);&#xD;&#xA;                mLastTouchY = ev.getY(newPointerIndex);&#xD;&#xA;                mActivePointerId = ev.getPointerId(newPointerIndex);&#xD;&#xA;            }&#xD;&#xA;            break;&#xD;&#xA;        }&#xD;&#xA;        }&#xD;&#xA;        return true;&#xD;&#xA;    }&#xD;&#xA;    @Override&#xD;&#xA;    public void onDraw(Canvas canvas) {&#xD;&#xA;        super.onDraw(canvas);&#xD;&#xA;        canvas.save();&#xD;&#xA;        Log.d(""DEBUG"", ""X: ""+mPosX+"" Y: ""+mPosY);&#xD;&#xA;        canvas.translate(mPosX, mPosY);&#xD;&#xA;        canvas.scale(mScaleFactor, mScaleFactor);&#xD;&#xA;        mImage.draw(canvas);&#xD;&#xA;        canvas.restore();&#xD;&#xA;    }&#xD;&#xA;    private class ScaleListener extends ScaleGestureDetector.SimpleOnScaleGestureListener {&#xD;&#xA;        @Override&#xD;&#xA;        public boolean onScale(ScaleGestureDetector detector) {&#xD;&#xA;            mScaleFactor *= detector.getScaleFactor();&#xD;&#xA;            // Don't let the object get too small or too large.&#xD;&#xA;            mScaleFactor = Math.max(0.1f, Math.min(mScaleFactor, 10.0f));&#xD;&#xA;            invalidate();&#xD;&#xA;            return true;&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    }"
-4606079262378767696,110,6,    100% — FF&#xD;&#xA;    99% — FC&#xD;&#xA;    98% — FA&#xD;&#xA;    97% — F7&#xD;&#xA;    96% — F5&#xD;&#xA;    95% — F2&#xD;&#xA;    94% — F0&#xD;&#xA;    93% — ED&#xD;&#xA;    92% — EB&#xD;&#xA;    91% — E8&#xD;&#xA;    &#xD;&#xA;    90% — E6&#xD;&#xA;    89% — E3&#xD;&#xA;    88% — E0&#xD;&#xA;    87% — DE&#xD;&#xA;    86% — DB&#xD;&#xA;    85% — D9&#xD;&#xA;    84% — D6&#xD;&#xA;    83% — D4&#xD;&#xA;    82% — D1&#xD;&#xA;    81% — CF&#xD;&#xA;    &#xD;&#xA;    80% — CC&#xD;&#xA;    79% — C9&#xD;&#xA;    78% — C7&#xD;&#xA;    77% — C4&#xD;&#xA;    76% — C2&#xD;&#xA;    75% — BF&#xD;&#xA;    74% — BD&#xD;&#xA;    73% — BA&#xD;&#xA;    72% — B8&#xD;&#xA;    71% — B5&#xD;&#xA;    &#xD;&#xA;    70% — B3&#xD;&#xA;    69% — B0&#xD;&#xA;    68% — AD&#xD;&#xA;    67% — AB&#xD;&#xA;    66% — A8&#xD;&#xA;    65% — A6&#xD;&#xA;    64% — A3&#xD;&#xA;    63% — A1&#xD;&#xA;    62% — 9E&#xD;&#xA;    61% — 9C&#xD;&#xA;    &#xD;&#xA;    60% — 99&#xD;&#xA;    59% — 96&#xD;&#xA;    58% — 94&#xD;&#xA;    57% — 91&#xD;&#xA;    56% — 8F&#xD;&#xA;    55% — 8C&#xD;&#xA;    54% — 8A&#xD;&#xA;    53% — 87&#xD;&#xA;    52% — 85&#xD;&#xA;    51% — 82&#xD;&#xA;    &#xD;&#xA;    50% — 80&#xD;&#xA;    49% — 7D&#xD;&#xA;    48% — 7A&#xD;&#xA;    47% — 78&#xD;&#xA;    46% — 75&#xD;&#xA;    45% — 73&#xD;&#xA;    44% — 70&#xD;&#xA;    43% — 6E&#xD;&#xA;    42% — 6B&#xD;&#xA;    41% — 69&#xD;&#xA;    &#xD;&#xA;    40% — 66&#xD;&#xA;    39% — 63&#xD;&#xA;    38% — 61&#xD;&#xA;    37% — 5E&#xD;&#xA;    36% — 5C&#xD;&#xA;    35% — 59&#xD;&#xA;    34% — 57&#xD;&#xA;    33% — 54&#xD;&#xA;    32% — 52&#xD;&#xA;    31% — 4F&#xD;&#xA;    &#xD;&#xA;    30% — 4D&#xD;&#xA;    29% — 4A&#xD;&#xA;    28% — 47&#xD;&#xA;    27% — 45&#xD;&#xA;    26% — 42&#xD;&#xA;    25% — 40&#xD;&#xA;    24% — 3D&#xD;&#xA;    23% — 3B&#xD;&#xA;    22% — 38&#xD;&#xA;    21% — 36&#xD;&#xA;    &#xD;&#xA;    20% — 33&#xD;&#xA;    19% — 30&#xD;&#xA;    18% — 2E&#xD;&#xA;    17% — 2B&#xD;&#xA;    16% — 29&#xD;&#xA;    15% — 26&#xD;&#xA;    14% — 24&#xD;&#xA;    13% — 21&#xD;&#xA;    12% — 1F&#xD;&#xA;    11% — 1C&#xD;&#xA;    &#xD;&#xA;    10% — 1A&#xD;&#xA;    9% — 17&#xD;&#xA;    8% — 14&#xD;&#xA;    7% — 12&#xD;&#xA;    6% — 0F&#xD;&#xA;    5% — 0D&#xD;&#xA;    4% — 0A&#xD;&#xA;    3% — 08&#xD;&#xA;    2% — 05&#xD;&#xA;    1% — 03&#xD;&#xA;    0% — 00 
4365257276033999576,111,6,"    <?php&#xD;&#xA;    &#xD;&#xA;    class DB_Functions {&#xD;&#xA;    &#xD;&#xA;        private $db;&#xD;&#xA;    &#xD;&#xA;        //put your code here&#xD;&#xA;        // constructor&#xD;&#xA;        function __construct() {&#xD;&#xA;            require_once 'DB_Connect.php';&#xD;&#xA;            // connecting to database&#xD;&#xA;            $this->db = new DB_Connect();&#xD;&#xA;            $this->db->connect();&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // destructor&#xD;&#xA;        function __destruct() {&#xD;&#xA;            &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /**&#xD;&#xA;         * Storing new user&#xD;&#xA;         * returns user details&#xD;&#xA;         */&#xD;&#xA;        public function storeUser($name, $email, $password) {&#xD;&#xA;            $uuid = uniqid('', true);&#xD;&#xA;            $hash = $this->hashSSHA($password);&#xD;&#xA;            $encrypted_password = $hash[""encrypted""]; // encrypted password&#xD;&#xA;            $salt = $hash[""salt""]; // salt&#xD;&#xA;            $result = mysql_query(""INSERT INTO users(unique_id, name, email, encrypted_password, salt, created_at) VALUES('$uuid', '$name', '$email', '$encrypted_password', '$salt', NOW())"");&#xD;&#xA;            // check for successful store&#xD;&#xA;            if ($result) {&#xD;&#xA;                // get user details &#xD;&#xA;                $uid = mysql_insert_id(); // last inserted id&#xD;&#xA;                $result = mysql_query(""SELECT * FROM users WHERE uid = $uid"");&#xD;&#xA;                // return user details&#xD;&#xA;                return mysql_fetch_array($result);&#xD;&#xA;            } else {&#xD;&#xA;                return false;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /**&#xD;&#xA;         * Get user by email and password&#xD;&#xA;         */&#xD;&#xA;        public function getUserByEmailAndPassword($email, $password) {&#xD;&#xA;            $result = mysql_query(""SELECT * FROM users WHERE email = '$email'"") or die(mysql_error());&#xD;&#xA;            // check for result &#xD;&#xA;            $no_of_rows = mysql_num_rows($result);&#xD;&#xA;            if ($no_of_rows > 0) {&#xD;&#xA;                $result = mysql_fetch_array($result);&#xD;&#xA;                $salt = $result['salt'];&#xD;&#xA;                $encrypted_password = $result['encrypted_password'];&#xD;&#xA;                $hash = $this->checkhashSSHA($salt, $password);&#xD;&#xA;                // check for password equality&#xD;&#xA;                if ($encrypted_password == $hash) {&#xD;&#xA;                    // user authentication details are correct&#xD;&#xA;                    return $result;&#xD;&#xA;                }&#xD;&#xA;            } else {&#xD;&#xA;                // user not found&#xD;&#xA;                return false;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /**&#xD;&#xA;         * Check user is existed or not&#xD;&#xA;         */&#xD;&#xA;        public function isUserExisted($email) {&#xD;&#xA;            $result = mysql_query(""SELECT email from users WHERE email = '$email'"");&#xD;&#xA;            $no_of_rows = mysql_num_rows($result);&#xD;&#xA;            if ($no_of_rows > 0) {&#xD;&#xA;                // user existed &#xD;&#xA;                return true;&#xD;&#xA;            } else {&#xD;&#xA;                // user not existed&#xD;&#xA;                return false;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /**&#xD;&#xA;         * Encrypting password&#xD;&#xA;         * @param password&#xD;&#xA;         * returns salt and encrypted password&#xD;&#xA;         */&#xD;&#xA;        public function hashSSHA($password) {&#xD;&#xA;    &#xD;&#xA;            $salt = sha1(rand());&#xD;&#xA;            $salt = substr($salt, 0, 10);&#xD;&#xA;            $encrypted = base64_encode(sha1($password . $salt, true) . $salt);&#xD;&#xA;            $hash = array(""salt"" => $salt, ""encrypted"" => $encrypted);&#xD;&#xA;            return $hash;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /**&#xD;&#xA;         * Decrypting password&#xD;&#xA;         * @param salt, password&#xD;&#xA;         * returns hash string&#xD;&#xA;         */&#xD;&#xA;        public function checkhashSSHA($salt, $password) {&#xD;&#xA;    &#xD;&#xA;            $hash = base64_encode(sha1($password . $salt, true) . $salt);&#xD;&#xA;    &#xD;&#xA;            return $hash;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    ?>"
1010083565050373259,114,6,"     public String compressImage(String imageUri) {&#xD;&#xA;     &#xD;&#xA;            String filePath = getRealPathFromURI(imageUri);&#xD;&#xA;            Bitmap scaledBitmap = null;&#xD;&#xA;     &#xD;&#xA;            BitmapFactory.Options options = new BitmapFactory.Options();&#xD;&#xA;     &#xD;&#xA;           //      by setting this field as true, the actual bitmap pixels are not loaded in the memory.                                                                                                                      Just the bounds are loaded. If&#xD;&#xA;    //      you try the use the bitmap here, you will get null.&#xD;&#xA;            options.inJustDecodeBounds = true;&#xD;&#xA;            Bitmap bmp = BitmapFactory.decodeFile(filePath, options);&#xD;&#xA;     &#xD;&#xA;            int actualHeight = options.outHeight;&#xD;&#xA;            int actualWidth = options.outWidth;&#xD;&#xA;     &#xD;&#xA;    //      max Height and width values of the compressed image is taken as 816x612&#xD;&#xA;     &#xD;&#xA;            float maxHeight = 816.0f;&#xD;&#xA;            float maxWidth = 612.0f;&#xD;&#xA;            float imgRatio = actualWidth / actualHeight;&#xD;&#xA;            float maxRatio = maxWidth / maxHeight;&#xD;&#xA;     &#xD;&#xA;    //      width and height values are set maintaining the aspect ratio of the image&#xD;&#xA;     &#xD;&#xA;            if (actualHeight > maxHeight || actualWidth > maxWidth) {&#xD;&#xA;                if (imgRatio < maxRatio) {               imgRatio = maxHeight / actualHeight;                actualWidth = (int) (imgRatio * actualWidth);               actualHeight = (int) maxHeight;             } else if (imgRatio > maxRatio) {&#xD;&#xA;                    imgRatio = maxWidth / actualWidth;&#xD;&#xA;                    actualHeight = (int) (imgRatio * actualHeight);&#xD;&#xA;                    actualWidth = (int) maxWidth;&#xD;&#xA;                } else {&#xD;&#xA;                    actualHeight = (int) maxHeight;&#xD;&#xA;                    actualWidth = (int) maxWidth;&#xD;&#xA;     &#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;     &#xD;&#xA;    //      setting inSampleSize value allows to load a scaled down version of the original image&#xD;&#xA;     &#xD;&#xA;            options.inSampleSize = calculateInSampleSize(options, actualWidth, actualHeight);&#xD;&#xA;     &#xD;&#xA;    //      inJustDecodeBounds set to false to load the actual bitmap&#xD;&#xA;            options.inJustDecodeBounds = false;&#xD;&#xA;     &#xD;&#xA;    //      this options allow android to claim the bitmap memory if it runs low on memory&#xD;&#xA;            options.inPurgeable = true;&#xD;&#xA;            options.inInputShareable = true;&#xD;&#xA;            options.inTempStorage = new byte[16 * 1024];&#xD;&#xA;     &#xD;&#xA;            try {&#xD;&#xA;    //          load the bitmap from its path&#xD;&#xA;                bmp = BitmapFactory.decodeFile(filePath, options);&#xD;&#xA;            } catch (OutOfMemoryError exception) {&#xD;&#xA;                exception.printStackTrace();&#xD;&#xA;     &#xD;&#xA;            }&#xD;&#xA;            try {&#xD;&#xA;                scaledBitmap = Bitmap.createBitmap(actualWidth, actualHeight,Bitmap.Config.ARGB_8888);&#xD;&#xA;            } catch (OutOfMemoryError exception) {&#xD;&#xA;                exception.printStackTrace();&#xD;&#xA;            }&#xD;&#xA;     &#xD;&#xA;            float ratioX = actualWidth / (float) options.outWidth;&#xD;&#xA;            float ratioY = actualHeight / (float) options.outHeight;&#xD;&#xA;            float middleX = actualWidth / 2.0f;&#xD;&#xA;            float middleY = actualHeight / 2.0f;&#xD;&#xA;     &#xD;&#xA;            Matrix scaleMatrix = new Matrix();&#xD;&#xA;            scaleMatrix.setScale(ratioX, ratioY, middleX, middleY);&#xD;&#xA;     &#xD;&#xA;            Canvas canvas = new Canvas(scaledBitmap);&#xD;&#xA;            canvas.setMatrix(scaleMatrix);&#xD;&#xA;            canvas.drawBitmap(bmp, middleX - bmp.getWidth() / 2, middleY - bmp.getHeight() / 2, new Paint(Paint.FILTER_BITMAP_FLAG));&#xD;&#xA;     &#xD;&#xA;    //      check the rotation of the image and display it properly&#xD;&#xA;            ExifInterface exif;&#xD;&#xA;            try {&#xD;&#xA;                exif = new ExifInterface(filePath);&#xD;&#xA;     &#xD;&#xA;                int orientation = exif.getAttributeInt(&#xD;&#xA;                        ExifInterface.TAG_ORIENTATION, 0);&#xD;&#xA;                Log.d(""EXIF"", ""Exif: "" + orientation);&#xD;&#xA;                Matrix matrix = new Matrix();&#xD;&#xA;                if (orientation == 6) {&#xD;&#xA;                    matrix.postRotate(90);&#xD;&#xA;                    Log.d(""EXIF"", ""Exif: "" + orientation);&#xD;&#xA;                } else if (orientation == 3) {&#xD;&#xA;                    matrix.postRotate(180);&#xD;&#xA;                    Log.d(""EXIF"", ""Exif: "" + orientation);&#xD;&#xA;                } else if (orientation == 8) {&#xD;&#xA;                    matrix.postRotate(270);&#xD;&#xA;                    Log.d(""EXIF"", ""Exif: "" + orientation);&#xD;&#xA;                }&#xD;&#xA;                scaledBitmap = Bitmap.createBitmap(scaledBitmap, 0, 0,&#xD;&#xA;                        scaledBitmap.getWidth(), scaledBitmap.getHeight(), matrix,&#xD;&#xA;                        true);&#xD;&#xA;            } catch (IOException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            }&#xD;&#xA;     &#xD;&#xA;            FileOutputStream out = null;&#xD;&#xA;            String filename = getFilename();&#xD;&#xA;            try {&#xD;&#xA;                out = new FileOutputStream(filename);&#xD;&#xA;     &#xD;&#xA;    //          write the compressed bitmap at the destination specified by filename.&#xD;&#xA;                scaledBitmap.compress(Bitmap.CompressFormat.JPEG, 80, out);&#xD;&#xA;     &#xD;&#xA;            } catch (FileNotFoundException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            }&#xD;&#xA;     &#xD;&#xA;            return filename;&#xD;&#xA;     &#xD;&#xA;        }"
-7070538668226392881,119,6,"    body {&#xD;&#xA;        font-family: Verdana, sans-serif;&#xD;&#xA;        margin: 0;&#xD;&#xA;      }&#xD;&#xA;      * {&#xD;&#xA;        box-sizing: border-box;&#xD;&#xA;      }&#xD;&#xA;      .row > .column {&#xD;&#xA;        padding: 0 8px;&#xD;&#xA;      }&#xD;&#xA;      .row:after {&#xD;&#xA;        content: """";&#xD;&#xA;        display: table;&#xD;&#xA;        clear: both;&#xD;&#xA;      }&#xD;&#xA;      .column {&#xD;&#xA;        float: left;&#xD;&#xA;        width: 25%;&#xD;&#xA;      }&#xD;&#xA;      /* The Modal (background) */&#xD;&#xA;      .modal {&#xD;&#xA;        display: none;&#xD;&#xA;        position: fixed;&#xD;&#xA;        z-index: 1;&#xD;&#xA;        padding-top: 100px;&#xD;&#xA;        left: 0;&#xD;&#xA;        top: 0;&#xD;&#xA;        width: 100%;&#xD;&#xA;        height: 100%;&#xD;&#xA;        overflow: auto;&#xD;&#xA;        background-color: black;&#xD;&#xA;      }&#xD;&#xA;      /* Modal Content */&#xD;&#xA;      .modal-content {&#xD;&#xA;        position: relative;&#xD;&#xA;        background-color: #fefefe;&#xD;&#xA;        margin: auto;&#xD;&#xA;        padding: 0;&#xD;&#xA;        width: 90%;&#xD;&#xA;        max-width: 1200px;&#xD;&#xA;      }&#xD;&#xA;      /* The Close Button */&#xD;&#xA;      .close {&#xD;&#xA;        color: white;&#xD;&#xA;        position: absolute;&#xD;&#xA;        top: 10px;&#xD;&#xA;        right: 25px;&#xD;&#xA;        font-size: 35px;&#xD;&#xA;        font-weight: bold;&#xD;&#xA;      }&#xD;&#xA;      .close:hover,&#xD;&#xA;      .close:focus {&#xD;&#xA;        color: #999;&#xD;&#xA;        text-decoration: none;&#xD;&#xA;        cursor: pointer;&#xD;&#xA;      }&#xD;&#xA;      .mySlides {&#xD;&#xA;        display: none;&#xD;&#xA;      }&#xD;&#xA;      .cursor {&#xD;&#xA;        cursor: pointer;&#xD;&#xA;      }&#xD;&#xA;      /* Next & previous buttons */&#xD;&#xA;      .prev,&#xD;&#xA;      .next {&#xD;&#xA;        cursor: pointer;&#xD;&#xA;        position: absolute;&#xD;&#xA;        top: 50%;&#xD;&#xA;        width: auto;&#xD;&#xA;        padding: 16px;&#xD;&#xA;        margin-top: -50px;&#xD;&#xA;        color: white;&#xD;&#xA;        font-weight: bold;&#xD;&#xA;        font-size: 20px;&#xD;&#xA;        transition: 0.6s ease;&#xD;&#xA;        border-radius: 0 3px 3px 0;&#xD;&#xA;        user-select: none;&#xD;&#xA;        -webkit-user-select: none;&#xD;&#xA;      }&#xD;&#xA;      /* Position the ""next button"" to the right */&#xD;&#xA;      .next {&#xD;&#xA;        right: 0;&#xD;&#xA;        border-radius: 3px 0 0 3px;&#xD;&#xA;      }&#xD;&#xA;        /* On hover, add a black background color with a little bit see-through */&#xD;&#xA;        .prev:hover,&#xD;&#xA;        .next:hover {&#xD;&#xA;          background-color: rgba(0, 0, 0, 0.8);&#xD;&#xA;        }&#xD;&#xA;      /* Number text (1/3 etc) */&#xD;&#xA;      .numbertext {&#xD;&#xA;        color: #f2f2f2;&#xD;&#xA;        font-size: 12px;&#xD;&#xA;        padding: 8px 12px;&#xD;&#xA;        position: absolute;&#xD;&#xA;        top: 0;&#xD;&#xA;      }&#xD;&#xA;      img {&#xD;&#xA;        margin-bottom: -4px;&#xD;&#xA;      }&#xD;&#xA;      .caption-container {&#xD;&#xA;        text-align: center;&#xD;&#xA;        background-color: black;&#xD;&#xA;        padding: 2px 16px;&#xD;&#xA;        color: white;&#xD;&#xA;      }&#xD;&#xA;      .demo {&#xD;&#xA;        opacity: 0.6;&#xD;&#xA;      }&#xD;&#xA;        .active,&#xD;&#xA;        .demo:hover {&#xD;&#xA;          opacity: 1;&#xD;&#xA;        }&#xD;&#xA;      img.hover-shadow {&#xD;&#xA;        transition: 0.3s;&#xD;&#xA;      }&#xD;&#xA;      .hover-shadow:hover {&#xD;&#xA;        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);&#xD;&#xA;      }"
6519357850793231325,120,6,"        public abstract class CursorRecyclerViewAdapter<VH extends RecyclerView.ViewHolder> extends RecyclerView.Adapter<VH> {&#xD;&#xA;        &#xD;&#xA;            private Context mContext;&#xD;&#xA;        &#xD;&#xA;            private Cursor mCursor;&#xD;&#xA;        &#xD;&#xA;            private boolean mDataValid;&#xD;&#xA;        &#xD;&#xA;            private int mRowIdColumn;&#xD;&#xA;        &#xD;&#xA;            private DataSetObserver mDataSetObserver;&#xD;&#xA;        &#xD;&#xA;            public CursorRecyclerViewAdapter(Context context, Cursor cursor) {&#xD;&#xA;                mContext = context;&#xD;&#xA;                mCursor = cursor;&#xD;&#xA;                mDataValid = cursor != null;&#xD;&#xA;                mRowIdColumn = mDataValid ? mCursor.getColumnIndex(""_id"") : -1;&#xD;&#xA;                mDataSetObserver = new NotifyingDataSetObserver();&#xD;&#xA;                if (mCursor != null) {&#xD;&#xA;                    mCursor.registerDataSetObserver(mDataSetObserver);&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            public Cursor getCursor() {&#xD;&#xA;                return mCursor;&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            @Override&#xD;&#xA;            public int getItemCount() {&#xD;&#xA;                if (mDataValid && mCursor != null) {&#xD;&#xA;                    return mCursor.getCount();&#xD;&#xA;                }&#xD;&#xA;                return 0;&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            @Override&#xD;&#xA;            public long getItemId(int position) {&#xD;&#xA;                if (mDataValid && mCursor != null && mCursor.moveToPosition(position)) {&#xD;&#xA;                    return mCursor.getLong(mRowIdColumn);&#xD;&#xA;                }&#xD;&#xA;                return 0;&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            @Override&#xD;&#xA;            public void setHasStableIds(boolean hasStableIds) {&#xD;&#xA;                super.setHasStableIds(true);&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            public abstract void onBindViewHolder(VH viewHolder, Cursor cursor);&#xD;&#xA;        &#xD;&#xA;            @Override&#xD;&#xA;            public void onBindViewHolder(VH viewHolder, int position) {&#xD;&#xA;                if (!mDataValid) {&#xD;&#xA;                    throw new IllegalStateException(""this should only be called when the cursor is valid"");&#xD;&#xA;                }&#xD;&#xA;                if (!mCursor.moveToPosition(position)) {&#xD;&#xA;                    throw new IllegalStateException(""couldn't move cursor to position "" + position);&#xD;&#xA;                }&#xD;&#xA;                onBindViewHolder(viewHolder, mCursor);&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            /**&#xD;&#xA;             * Change the underlying cursor to a new cursor. If there is an existing cursor it will be&#xD;&#xA;             * closed.&#xD;&#xA;             */&#xD;&#xA;            public void changeCursor(Cursor cursor) {&#xD;&#xA;                Cursor old = swapCursor(cursor);&#xD;&#xA;                if (old != null) {&#xD;&#xA;                    old.close();&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            /**&#xD;&#xA;             * Swap in a new Cursor, returning the old Cursor.  Unlike&#xD;&#xA;             * {@link #changeCursor(Cursor)}, the returned old Cursor is <em>not</em>&#xD;&#xA;             * closed.&#xD;&#xA;             */&#xD;&#xA;            public Cursor swapCursor(Cursor newCursor) {&#xD;&#xA;                if (newCursor == mCursor) {&#xD;&#xA;                    return null;&#xD;&#xA;                }&#xD;&#xA;                final Cursor oldCursor = mCursor;&#xD;&#xA;                if (oldCursor != null && mDataSetObserver != null) {&#xD;&#xA;                    oldCursor.unregisterDataSetObserver(mDataSetObserver);&#xD;&#xA;                }&#xD;&#xA;                mCursor = newCursor;&#xD;&#xA;                if (mCursor != null) {&#xD;&#xA;                    if (mDataSetObserver != null) {&#xD;&#xA;                        mCursor.registerDataSetObserver(mDataSetObserver);&#xD;&#xA;                    }&#xD;&#xA;                    mRowIdColumn = newCursor.getColumnIndexOrThrow(""_id"");&#xD;&#xA;                    mDataValid = true;&#xD;&#xA;                    notifyDataSetChanged();&#xD;&#xA;                } else {&#xD;&#xA;                    mRowIdColumn = -1;&#xD;&#xA;                    mDataValid = false;&#xD;&#xA;                    notifyDataSetChanged();&#xD;&#xA;                    //There is no notifyDataSetInvalidated() method in RecyclerView.Adapter&#xD;&#xA;                }&#xD;&#xA;                return oldCursor;&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            private class NotifyingDataSetObserver extends DataSetObserver {&#xD;&#xA;                @Override&#xD;&#xA;                public void onChanged() {&#xD;&#xA;                    super.onChanged();&#xD;&#xA;                    mDataValid = true;&#xD;&#xA;                    notifyDataSetChanged();&#xD;&#xA;                }&#xD;&#xA;        &#xD;&#xA;                @Override&#xD;&#xA;                public void onInvalidated() {&#xD;&#xA;                    super.onInvalidated();&#xD;&#xA;                    mDataValid = false;&#xD;&#xA;                    notifyDataSetChanged();&#xD;&#xA;                    //There is no notifyDataSetInvalidated() method in RecyclerView.Adapter&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;    }"
207944707108550613,121,6,"     public class MyWb extends Activity {&#xD;&#xA;    /** Called when the activity is first created. */&#xD;&#xA;    &#xD;&#xA;    WebView web;&#xD;&#xA;    ProgressBar progressBar;&#xD;&#xA;    &#xD;&#xA;    private ValueCallback<Uri> mUploadMessage;  &#xD;&#xA;     private final static int FILECHOOSER_RESULTCODE=1;  &#xD;&#xA;    &#xD;&#xA;     @Override  &#xD;&#xA;     protected void onActivityResult(int requestCode, int resultCode,  &#xD;&#xA;                                        Intent intent) {  &#xD;&#xA;      if(requestCode==FILECHOOSER_RESULTCODE)  &#xD;&#xA;      {  &#xD;&#xA;       if (null == mUploadMessage) return;  &#xD;&#xA;                Uri result = intent == null || resultCode != RESULT_OK ? null  &#xD;&#xA;                        : intent.getData();  &#xD;&#xA;                mUploadMessage.onReceiveValue(result);  &#xD;&#xA;                mUploadMessage = null;  &#xD;&#xA;      }&#xD;&#xA;      }  &#xD;&#xA;    &#xD;&#xA;    @Override&#xD;&#xA;    public void onCreate(Bundle savedInstanceState) {&#xD;&#xA;        super.onCreate(savedInstanceState);&#xD;&#xA;        setContentView(R.layout.main);&#xD;&#xA;    &#xD;&#xA;        web = (WebView) findViewById(R.id.webview01);&#xD;&#xA;        progressBar = (ProgressBar) findViewById(R.id.progressBar1);&#xD;&#xA;    &#xD;&#xA;        web = new WebView(this);  &#xD;&#xA;        web.getSettings().setJavaScriptEnabled(true);&#xD;&#xA;        web.loadUrl(""http://www.script-tutorials.com/demos/199/index.html"");&#xD;&#xA;        web.setWebViewClient(new myWebClient());&#xD;&#xA;        web.setWebChromeClient(new WebChromeClient()  &#xD;&#xA;        {  &#xD;&#xA;               //The undocumented magic method override  &#xD;&#xA;               //Eclipse will swear at you if you try to put @Override here  &#xD;&#xA;            // For Android 3.0+&#xD;&#xA;            public void openFileChooser(ValueCallback<Uri> uploadMsg) {  &#xD;&#xA;    &#xD;&#xA;                mUploadMessage = uploadMsg;  &#xD;&#xA;                Intent i = new Intent(Intent.ACTION_GET_CONTENT);  &#xD;&#xA;                i.addCategory(Intent.CATEGORY_OPENABLE);  &#xD;&#xA;                i.setType(""image/*"");  &#xD;&#xA;                MyWb.this.startActivityForResult(Intent.createChooser(i,""File Chooser""), FILECHOOSER_RESULTCODE);  &#xD;&#xA;    &#xD;&#xA;               }&#xD;&#xA;    &#xD;&#xA;            // For Android 3.0+&#xD;&#xA;               public void openFileChooser( ValueCallback uploadMsg, String acceptType ) {&#xD;&#xA;               mUploadMessage = uploadMsg;&#xD;&#xA;               Intent i = new Intent(Intent.ACTION_GET_CONTENT);&#xD;&#xA;               i.addCategory(Intent.CATEGORY_OPENABLE);&#xD;&#xA;               i.setType(""*/*"");&#xD;&#xA;               MyWb.this.startActivityForResult(&#xD;&#xA;               Intent.createChooser(i, ""File Browser""),&#xD;&#xA;               FILECHOOSER_RESULTCODE);&#xD;&#xA;               }&#xD;&#xA;    &#xD;&#xA;            //For Android 4.1&#xD;&#xA;               public void openFileChooser(ValueCallback<Uri> uploadMsg, String acceptType, String capture){&#xD;&#xA;                   mUploadMessage = uploadMsg;  &#xD;&#xA;                   Intent i = new Intent(Intent.ACTION_GET_CONTENT);  &#xD;&#xA;                   i.addCategory(Intent.CATEGORY_OPENABLE);  &#xD;&#xA;                   i.setType(""image/*"");  &#xD;&#xA;                   MyWb.this.startActivityForResult( Intent.createChooser( i, ""File Chooser"" ), MyWb.FILECHOOSER_RESULTCODE );&#xD;&#xA;    &#xD;&#xA;               }&#xD;&#xA;    &#xD;&#xA;        });  &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        setContentView(web);  &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    public class myWebClient extends WebViewClient&#xD;&#xA;    {&#xD;&#xA;        @Override&#xD;&#xA;        public void onPageStarted(WebView view, String url, Bitmap favicon) {&#xD;&#xA;            // TODO Auto-generated method stub&#xD;&#xA;            super.onPageStarted(view, url, favicon);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public boolean shouldOverrideUrlLoading(WebView view, String url) {&#xD;&#xA;            // TODO Auto-generated method stub&#xD;&#xA;    &#xD;&#xA;            view.loadUrl(url);&#xD;&#xA;            return true;&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void onPageFinished(WebView view, String url) {&#xD;&#xA;            // TODO Auto-generated method stub&#xD;&#xA;            super.onPageFinished(view, url);&#xD;&#xA;    &#xD;&#xA;            progressBar.setVisibility(View.GONE);&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    //flipscreen not loading again&#xD;&#xA;    @Override&#xD;&#xA;    public void onConfigurationChanged(Configuration newConfig){        &#xD;&#xA;        super.onConfigurationChanged(newConfig);&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    // To handle ""Back"" key press event for WebView to go back to previous screen.&#xD;&#xA;    /*@Override&#xD;&#xA;    public boolean onKeyDown(int keyCode, KeyEvent event) &#xD;&#xA;    {&#xD;&#xA;        if ((keyCode == KeyEvent.KEYCODE_BACK) && web.canGoBack()) {&#xD;&#xA;            web.goBack();&#xD;&#xA;            return true;&#xD;&#xA;        }&#xD;&#xA;        return super.onKeyDown(keyCode, event);&#xD;&#xA;    }*/&#xD;&#xA;    }"
-790001823392833728,124,6,"     var fs = require('fs');&#xD;&#xA;        var readline = require('readline');&#xD;&#xA;        var google = require('googleapis');&#xD;&#xA;        var googleAuth = require('google-auth-library');&#xD;&#xA;        &#xD;&#xA;        // If modifying these scopes, delete your previously saved credentials&#xD;&#xA;        // at ~/.credentials/gmail-nodejs-quickstart.json&#xD;&#xA;        var SCOPES = ['https://www.googleapis.com/auth/gmail.readonly'];&#xD;&#xA;        var TOKEN_DIR = (process.env.HOME || process.env.HOMEPATH ||&#xD;&#xA;            process.env.USERPROFILE) + '/.credentials/';&#xD;&#xA;        var TOKEN_PATH = TOKEN_DIR + 'gmail-nodejs-quickstart.json';&#xD;&#xA;        &#xD;&#xA;        // Load client secrets from a local file.&#xD;&#xA;        fs.readFile('client_secret.json', function processClientSecrets(err, content) {&#xD;&#xA;          if (err) {&#xD;&#xA;            console.log('Error loading client secret file: ' + err);&#xD;&#xA;            return;&#xD;&#xA;          }&#xD;&#xA;          // Authorize a client with the loaded credentials, then call the&#xD;&#xA;          // Gmail API.&#xD;&#xA;          authorize(JSON.parse(content), listLabels);&#xD;&#xA;        });&#xD;&#xA;        &#xD;&#xA;        /**&#xD;&#xA;         * Create an OAuth2 client with the given credentials, and then execute the&#xD;&#xA;         * given callback function.&#xD;&#xA;         *&#xD;&#xA;         * @param {Object} credentials The authorization client credentials.&#xD;&#xA;         * @param {function} callback The callback to call with the authorized client.&#xD;&#xA;         */&#xD;&#xA;        function authorize(credentials, callback) {&#xD;&#xA;          var clientSecret = credentials.installed.client_secret;&#xD;&#xA;          var clientId = credentials.installed.client_id;&#xD;&#xA;          var redirectUrl = credentials.installed.redirect_uris[0];&#xD;&#xA;          var auth = new googleAuth();&#xD;&#xA;          var oauth2Client = new auth.OAuth2(clientId, clientSecret, redirectUrl);&#xD;&#xA;        &#xD;&#xA;          // Check if we have previously stored a token.&#xD;&#xA;          fs.readFile(TOKEN_PATH, function(err, token) {&#xD;&#xA;            if (err) {&#xD;&#xA;              getNewToken(oauth2Client, callback);&#xD;&#xA;            } else {&#xD;&#xA;              oauth2Client.credentials = JSON.parse(token);&#xD;&#xA;              callback(oauth2Client);&#xD;&#xA;            }&#xD;&#xA;          });&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        /**&#xD;&#xA;         * Get and store new token after prompting for user authorization, and then&#xD;&#xA;         * execute the given callback with the authorized OAuth2 client.&#xD;&#xA;         *&#xD;&#xA;         * @param {google.auth.OAuth2} oauth2Client The OAuth2 client to get token for.&#xD;&#xA;         * @param {getEventsCallback} callback The callback to call with the authorized&#xD;&#xA;         *     client.&#xD;&#xA;         */&#xD;&#xA;        function getNewToken(oauth2Client, callback) {&#xD;&#xA;          var authUrl = oauth2Client.generateAuthUrl({&#xD;&#xA;            access_type: 'offline',&#xD;&#xA;            scope: SCOPES&#xD;&#xA;          });&#xD;&#xA;          console.log('Authorize this app by visiting this url: ', authUrl);&#xD;&#xA;          var rl = readline.createInterface({&#xD;&#xA;            input: process.stdin,&#xD;&#xA;            output: process.stdout&#xD;&#xA;          });&#xD;&#xA;          rl.question('Enter the code from that page here: ', function(code) {&#xD;&#xA;            rl.close();&#xD;&#xA;            oauth2Client.getToken(code, function(err, token) {&#xD;&#xA;              if (err) {&#xD;&#xA;                console.log('Error while trying to retrieve access token', err);&#xD;&#xA;                return;&#xD;&#xA;              }&#xD;&#xA;              oauth2Client.credentials = token;&#xD;&#xA;              storeToken(token);&#xD;&#xA;              callback(oauth2Client);&#xD;&#xA;            });&#xD;&#xA;          });&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        /**&#xD;&#xA;         * Store token to disk be used in later program executions.&#xD;&#xA;         *&#xD;&#xA;         * @param {Object} token The token to store to disk.&#xD;&#xA;         */&#xD;&#xA;        function storeToken(token) {&#xD;&#xA;          try {&#xD;&#xA;            fs.mkdirSync(TOKEN_DIR);&#xD;&#xA;          } catch (err) {&#xD;&#xA;            if (err.code != 'EEXIST') {&#xD;&#xA;              throw err;&#xD;&#xA;            }&#xD;&#xA;          }&#xD;&#xA;          fs.writeFile(TOKEN_PATH, JSON.stringify(token));&#xD;&#xA;          console.log('Token stored to ' + TOKEN_PATH);&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        /**&#xD;&#xA;         * Lists the labels in the user's account.&#xD;&#xA;         *&#xD;&#xA;         * @param {google.auth.OAuth2} auth An authorized OAuth2 client.&#xD;&#xA;         */&#xD;&#xA;        function listLabels(auth) {&#xD;&#xA;          var gmail = google.gmail('v1');&#xD;&#xA;          gmail.users.labels.list({&#xD;&#xA;            auth: auth,&#xD;&#xA;            userId: 'me',&#xD;&#xA;          }, function(err, response) {&#xD;&#xA;            if (err) {&#xD;&#xA;              console.log('The API returned an error: ' + err);&#xD;&#xA;              return;&#xD;&#xA;            }&#xD;&#xA;            var labels = response.labels;&#xD;&#xA;            if (labels.length == 0) {&#xD;&#xA;              console.log('No labels found.');&#xD;&#xA;            } else {&#xD;&#xA;              console.log('Labels:');&#xD;&#xA;              for (var i = 0; i < labels.length; i++) {&#xD;&#xA;                var label = labels[i];&#xD;&#xA;                console.log('- %s', label.name);&#xD;&#xA;              }&#xD;&#xA;            }&#xD;&#xA;          });&#xD;&#xA;        }"
-1250343221847980167,127,6,"    import java.awt.*;&#xD;&#xA;    import java.awt.event.*;&#xD;&#xA;    import java.util.Arrays;&#xD;&#xA;    import java.util.ArrayList;&#xD;&#xA;    import java.util.Collections;&#xD;&#xA;    import java.util.List;&#xD;&#xA;    import javax.swing.*;&#xD;&#xA;    import javax.swing.table.*;&#xD;&#xA;    &#xD;&#xA;    public class ItemDeletion extends JPanel&#xD;&#xA;    {&#xD;&#xA;    	private JList<String> list;&#xD;&#xA;    	private JTable table;&#xD;&#xA;    &#xD;&#xA;    	public ItemDeletion()&#xD;&#xA;    	{&#xD;&#xA;    		setLayout( new BorderLayout(5, 5) );&#xD;&#xA;    &#xD;&#xA;    		String[] items =&#xD;&#xA;    		{&#xD;&#xA;    			""One"",&#xD;&#xA;    			""Two"",&#xD;&#xA;    			""Three"",&#xD;&#xA;    			""Four"",&#xD;&#xA;    			""Five"",&#xD;&#xA;    			""Six"",&#xD;&#xA;    			""Seven"",&#xD;&#xA;    			""Eight"",&#xD;&#xA;    			""Nine"",&#xD;&#xA;    			""Ten""&#xD;&#xA;    		};&#xD;&#xA;    &#xD;&#xA;    		//  Add the list&#xD;&#xA;    &#xD;&#xA;    		DefaultListModel<String> listModel = new DefaultListModel<String>();&#xD;&#xA;    &#xD;&#xA;    		for (String item: items)&#xD;&#xA;    			listModel.addElement( item );&#xD;&#xA;    &#xD;&#xA;    		list = new JList<String>( listModel );&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    		JButton listDelete = new JButton( ""Delete From List"" );&#xD;&#xA;    		listDelete.addActionListener( new ActionListener()&#xD;&#xA;    		{&#xD;&#xA;    			@Override&#xD;&#xA;    			public void actionPerformed(ActionEvent e)&#xD;&#xA;    			{&#xD;&#xA;    				DefaultListModel model = (DefaultListModel)list.getModel();&#xD;&#xA;    				int row = list.getSelectedIndex();&#xD;&#xA;    &#xD;&#xA;    				while (row != -1)&#xD;&#xA;    				{&#xD;&#xA;    					model.removeElementAt( row );&#xD;&#xA;    					row = list.getSelectedIndex();&#xD;&#xA;    				}&#xD;&#xA;    			}&#xD;&#xA;    		});&#xD;&#xA;    &#xD;&#xA;    		JPanel listPanel = new JPanel( new BorderLayout(5, 5) );&#xD;&#xA;    		listPanel.add(new JScrollPane( list ), BorderLayout.CENTER);&#xD;&#xA;    		listPanel.add(listDelete, BorderLayout.PAGE_END);&#xD;&#xA;    &#xD;&#xA;    		//  Add the table&#xD;&#xA;    &#xD;&#xA;    		DefaultTableModel tableModel = new DefaultTableModel(0, 1);&#xD;&#xA;    		List<String> tableItems = Arrays.asList( items );&#xD;&#xA;    		Collections.shuffle( tableItems );&#xD;&#xA;    &#xD;&#xA;    		for (String item: tableItems)&#xD;&#xA;    		{&#xD;&#xA;    			System.out.println( item );&#xD;&#xA;    			tableModel.addRow( new String[]{item} );&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		table = new JTable( tableModel );&#xD;&#xA;    &#xD;&#xA;    		table.setAutoCreateRowSorter(true);&#xD;&#xA;    		((DefaultRowSorter)table.getRowSorter()).toggleSortOrder(0);&#xD;&#xA;    &#xD;&#xA;    		JButton tableDelete = new JButton( ""Delete From Table"" );&#xD;&#xA;    		tableDelete.addActionListener( new ActionListener()&#xD;&#xA;    		{&#xD;&#xA;    			@Override&#xD;&#xA;    			public void actionPerformed(ActionEvent e)&#xD;&#xA;    			{&#xD;&#xA;    				DefaultTableModel model = (DefaultTableModel)table.getModel();&#xD;&#xA;    				int row = table.getSelectedRow();&#xD;&#xA;    &#xD;&#xA;    				while (row != -1)&#xD;&#xA;    				{&#xD;&#xA;    				    int modelRow = table.convertRowIndexToModel( row );&#xD;&#xA;    					model.removeRow( modelRow );&#xD;&#xA;    					row = table.getSelectedRow();&#xD;&#xA;    				}&#xD;&#xA;    			}&#xD;&#xA;    		});&#xD;&#xA;    &#xD;&#xA;    		JPanel tablePanel = new JPanel( new BorderLayout(5, 5) );&#xD;&#xA;    		tablePanel.add(new JScrollPane( table ), BorderLayout.CENTER);&#xD;&#xA;    		tablePanel.add(tableDelete, BorderLayout.PAGE_END);&#xD;&#xA;    &#xD;&#xA;    		add(listPanel, BorderLayout.LINE_START);&#xD;&#xA;    		add(tablePanel, BorderLayout.LINE_END);&#xD;&#xA;       	}&#xD;&#xA;    &#xD;&#xA;    	private static void createAndShowGUI()&#xD;&#xA;    	{&#xD;&#xA;    		JFrame frame = new JFrame(""Multiple Item Deletion"");&#xD;&#xA;    		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;&#xA;    		frame.add(new ItemDeletion(), BorderLayout.NORTH);&#xD;&#xA;    		frame.setLocationByPlatform( true );&#xD;&#xA;    		frame.pack();&#xD;&#xA;    		frame.setVisible( true );&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public static void main(String[] args)&#xD;&#xA;    	{&#xD;&#xA;    		EventQueue.invokeLater(new Runnable()&#xD;&#xA;    		{&#xD;&#xA;    			public void run()&#xD;&#xA;    			{&#xD;&#xA;    				createAndShowGUI();&#xD;&#xA;    			}&#xD;&#xA;    		});&#xD;&#xA;    	}&#xD;&#xA;    }"
-9131089500354668336,128,6,"       /**&#xD;&#xA;     * Get a file path from a Uri. This will get the the path for Storage Access&#xD;&#xA;     * Framework Documents, as well as the _data field for the MediaStore and&#xD;&#xA;     * other file-based ContentProviders.&#xD;&#xA;     *&#xD;&#xA;     * @param context The context.&#xD;&#xA;     * @param uri The Uri to query.&#xD;&#xA;     * @author paulburke&#xD;&#xA;     */&#xD;&#xA;    public static String getPath(final Context context, final Uri uri) {&#xD;&#xA;    &#xD;&#xA;        final boolean isKitKat = Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT;&#xD;&#xA;    &#xD;&#xA;        // DocumentProvider&#xD;&#xA;        if (isKitKat && DocumentsContract.isDocumentUri(context, uri)) {&#xD;&#xA;            // ExternalStorageProvider&#xD;&#xA;            if (isExternalStorageDocument(uri)) {&#xD;&#xA;                final String docId = DocumentsContract.getDocumentId(uri);&#xD;&#xA;                final String[] split = docId.split("":"");&#xD;&#xA;                final String type = split[0];&#xD;&#xA;    &#xD;&#xA;                if (""primary"".equalsIgnoreCase(type)) {&#xD;&#xA;                    return Environment.getExternalStorageDirectory() + ""/"" + split[1];&#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;                // TODO handle non-primary volumes&#xD;&#xA;            }&#xD;&#xA;            // DownloadsProvider&#xD;&#xA;            else if (isDownloadsDocument(uri)) {&#xD;&#xA;    &#xD;&#xA;                final String id = DocumentsContract.getDocumentId(uri);&#xD;&#xA;                final Uri contentUri = ContentUris.withAppendedId(&#xD;&#xA;                        Uri.parse(""content://downloads/public_downloads""), Long.valueOf(id));&#xD;&#xA;    &#xD;&#xA;                return getDataColumn(context, contentUri, null, null);&#xD;&#xA;            }&#xD;&#xA;            // MediaProvider&#xD;&#xA;            else if (isMediaDocument(uri)) {&#xD;&#xA;                final String docId = DocumentsContract.getDocumentId(uri);&#xD;&#xA;                final String[] split = docId.split("":"");&#xD;&#xA;                final String type = split[0];&#xD;&#xA;    &#xD;&#xA;                Uri contentUri = null;&#xD;&#xA;                if (""image"".equals(type)) {&#xD;&#xA;                    contentUri = MediaStore.Images.Media.EXTERNAL_CONTENT_URI;&#xD;&#xA;                } else if (""video"".equals(type)) {&#xD;&#xA;                    contentUri = MediaStore.Video.Media.EXTERNAL_CONTENT_URI;&#xD;&#xA;                } else if (""audio"".equals(type)) {&#xD;&#xA;                    contentUri = MediaStore.Audio.Media.EXTERNAL_CONTENT_URI;&#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;                final String selection = ""_id=?"";&#xD;&#xA;                final String[] selectionArgs = new String[] {&#xD;&#xA;                        split[1]&#xD;&#xA;                };&#xD;&#xA;    &#xD;&#xA;                return getDataColumn(context, contentUri, selection, selectionArgs);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        // MediaStore (and general)&#xD;&#xA;        else if (""content"".equalsIgnoreCase(uri.getScheme())) {&#xD;&#xA;            return getDataColumn(context, uri, null, null);&#xD;&#xA;        }&#xD;&#xA;        // File&#xD;&#xA;        else if (""file"".equalsIgnoreCase(uri.getScheme())) {&#xD;&#xA;            return uri.getPath();&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        return null;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * Get the value of the data column for this Uri. This is useful for&#xD;&#xA;     * MediaStore Uris, and other file-based ContentProviders.&#xD;&#xA;     *&#xD;&#xA;     * @param context The context.&#xD;&#xA;     * @param uri The Uri to query.&#xD;&#xA;     * @param selection (Optional) Filter used in the query.&#xD;&#xA;     * @param selectionArgs (Optional) Selection arguments used in the query.&#xD;&#xA;     * @return The value of the _data column, which is typically a file path.&#xD;&#xA;     */&#xD;&#xA;    public static String getDataColumn(Context context, Uri uri, String selection,&#xD;&#xA;            String[] selectionArgs) {&#xD;&#xA;    &#xD;&#xA;        Cursor cursor = null;&#xD;&#xA;        final String column = ""_data"";&#xD;&#xA;        final String[] projection = {&#xD;&#xA;                column&#xD;&#xA;        };&#xD;&#xA;    &#xD;&#xA;        try {&#xD;&#xA;            cursor = context.getContentResolver().query(uri, projection, selection, selectionArgs,&#xD;&#xA;                    null);&#xD;&#xA;            if (cursor != null && cursor.moveToFirst()) {&#xD;&#xA;                final int column_index = cursor.getColumnIndexOrThrow(column);&#xD;&#xA;                return cursor.getString(column_index);&#xD;&#xA;            }&#xD;&#xA;        } finally {&#xD;&#xA;            if (cursor != null)&#xD;&#xA;                cursor.close();&#xD;&#xA;        }&#xD;&#xA;        return null;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * @param uri The Uri to check.&#xD;&#xA;     * @return Whether the Uri authority is ExternalStorageProvider.&#xD;&#xA;     */&#xD;&#xA;    public static boolean isExternalStorageDocument(Uri uri) {&#xD;&#xA;        return ""com.android.externalstorage.documents"".equals(uri.getAuthority());&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * @param uri The Uri to check.&#xD;&#xA;     * @return Whether the Uri authority is DownloadsProvider.&#xD;&#xA;     */&#xD;&#xA;    public static boolean isDownloadsDocument(Uri uri) {&#xD;&#xA;        return ""com.android.providers.downloads.documents"".equals(uri.getAuthority());&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * @param uri The Uri to check.&#xD;&#xA;     * @return Whether the Uri authority is MediaProvider.&#xD;&#xA;     */&#xD;&#xA;    public static boolean isMediaDocument(Uri uri) {&#xD;&#xA;        return ""com.android.providers.media.documents"".equals(uri.getAuthority());&#xD;&#xA;    }"
2728558584288938808,135,6,"       var Base64 = {&#xD;&#xA; &#xD;&#xA;	// private property&#xD;&#xA;	_keyStr : ""ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="",&#xD;&#xA; &#xD;&#xA;	// public method for encoding&#xD;&#xA;	encode : function (input) {&#xD;&#xA;		var output = """";&#xD;&#xA;		var chr1, chr2, chr3, enc1, enc2, enc3, enc4;&#xD;&#xA;		var i = 0;&#xD;&#xA; &#xD;&#xA;		input = Base64._utf8_encode(input);&#xD;&#xA; &#xD;&#xA;		while (i < input.length) {&#xD;&#xA; &#xD;&#xA;			chr1 = input.charCodeAt(i++);&#xD;&#xA;			chr2 = input.charCodeAt(i++);&#xD;&#xA;			chr3 = input.charCodeAt(i++);&#xD;&#xA; &#xD;&#xA;			enc1 = chr1 >> 2;&#xD;&#xA;			enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);&#xD;&#xA;			enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);&#xD;&#xA;			enc4 = chr3 & 63;&#xD;&#xA; &#xD;&#xA;			if (isNaN(chr2)) {&#xD;&#xA;				enc3 = enc4 = 64;&#xD;&#xA;			} else if (isNaN(chr3)) {&#xD;&#xA;				enc4 = 64;&#xD;&#xA;			}&#xD;&#xA; &#xD;&#xA;			output = output +&#xD;&#xA;			this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +&#xD;&#xA;			this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);&#xD;&#xA; &#xD;&#xA;		}&#xD;&#xA; &#xD;&#xA;		return output;&#xD;&#xA;	},&#xD;&#xA; &#xD;&#xA;	// public method for decoding&#xD;&#xA;	decode : function (input) {&#xD;&#xA;		var output = """";&#xD;&#xA;		var chr1, chr2, chr3;&#xD;&#xA;		var enc1, enc2, enc3, enc4;&#xD;&#xA;		var i = 0;&#xD;&#xA; &#xD;&#xA;		input = input.replace(/[^A-Za-z0-9\+\/\=]/g, """");&#xD;&#xA; &#xD;&#xA;		while (i < input.length) {&#xD;&#xA; &#xD;&#xA;			enc1 = this._keyStr.indexOf(input.charAt(i++));&#xD;&#xA;			enc2 = this._keyStr.indexOf(input.charAt(i++));&#xD;&#xA;			enc3 = this._keyStr.indexOf(input.charAt(i++));&#xD;&#xA;			enc4 = this._keyStr.indexOf(input.charAt(i++));&#xD;&#xA; &#xD;&#xA;			chr1 = (enc1 << 2) | (enc2 >> 4);&#xD;&#xA;			chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);&#xD;&#xA;			chr3 = ((enc3 & 3) << 6) | enc4;&#xD;&#xA; &#xD;&#xA;			output = output + String.fromCharCode(chr1);&#xD;&#xA; &#xD;&#xA;			if (enc3 != 64) {&#xD;&#xA;				output = output + String.fromCharCode(chr2);&#xD;&#xA;			}&#xD;&#xA;			if (enc4 != 64) {&#xD;&#xA;				output = output + String.fromCharCode(chr3);&#xD;&#xA;			}&#xD;&#xA; &#xD;&#xA;		}&#xD;&#xA; &#xD;&#xA;		output = Base64._utf8_decode(output);&#xD;&#xA; &#xD;&#xA;		return output;&#xD;&#xA; &#xD;&#xA;	},&#xD;&#xA; &#xD;&#xA;	// private method for UTF-8 encoding&#xD;&#xA;	_utf8_encode : function (string) {&#xD;&#xA;		string = string.replace(/\r\n/g,""\n"");&#xD;&#xA;		var utftext = """";&#xD;&#xA; &#xD;&#xA;		for (var n = 0; n < string.length; n++) {&#xD;&#xA; &#xD;&#xA;			var c = string.charCodeAt(n);&#xD;&#xA; &#xD;&#xA;			if (c < 128) {&#xD;&#xA;				utftext += String.fromCharCode(c);&#xD;&#xA;			}&#xD;&#xA;			else if((c > 127) && (c < 2048)) {&#xD;&#xA;				utftext += String.fromCharCode((c >> 6) | 192);&#xD;&#xA;				utftext += String.fromCharCode((c & 63) | 128);&#xD;&#xA;			}&#xD;&#xA;			else {&#xD;&#xA;				utftext += String.fromCharCode((c >> 12) | 224);&#xD;&#xA;				utftext += String.fromCharCode(((c >> 6) & 63) | 128);&#xD;&#xA;				utftext += String.fromCharCode((c & 63) | 128);&#xD;&#xA;			}&#xD;&#xA; &#xD;&#xA;		}&#xD;&#xA; &#xD;&#xA;		return utftext;&#xD;&#xA;	},&#xD;&#xA; &#xD;&#xA;	// private method for UTF-8 decoding&#xD;&#xA;	_utf8_decode : function (utftext) {&#xD;&#xA;		var string = """";&#xD;&#xA;		var i = 0;&#xD;&#xA;		var c = c1 = c2 = 0;&#xD;&#xA; &#xD;&#xA;		while ( i < utftext.length ) {&#xD;&#xA; &#xD;&#xA;			c = utftext.charCodeAt(i);&#xD;&#xA; &#xD;&#xA;			if (c < 128) {&#xD;&#xA;				string += String.fromCharCode(c);&#xD;&#xA;				i++;&#xD;&#xA;			}&#xD;&#xA;			else if((c > 191) && (c < 224)) {&#xD;&#xA;				c2 = utftext.charCodeAt(i+1);&#xD;&#xA;				string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));&#xD;&#xA;				i += 2;&#xD;&#xA;			}&#xD;&#xA;			else {&#xD;&#xA;				c2 = utftext.charCodeAt(i+1);&#xD;&#xA;				c3 = utftext.charCodeAt(i+2);&#xD;&#xA;				string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));&#xD;&#xA;				i += 3;&#xD;&#xA;			}&#xD;&#xA; &#xD;&#xA;		}&#xD;&#xA; &#xD;&#xA;		return string;&#xD;&#xA;	}&#xD;&#xA; &#xD;&#xA;    }"
-315220135051016029,140,6,    - !ruby/object:Rate&#xD;&#xA;      attributes:&#xD;&#xA;        id: 11&#xD;&#xA;        rater_id: 1&#xD;&#xA;        rateable_id: 3&#xD;&#xA;        rateable_type: Bboy&#xD;&#xA;        stars: 5.0&#xD;&#xA;        dimension: foundation&#xD;&#xA;        created_at: 2014-02-25 09:33:23.000000000 Z&#xD;&#xA;        updated_at: 2014-02-25 09:33:23.000000000 Z&#xD;&#xA;    - !ruby/object:Rate&#xD;&#xA;      attributes:&#xD;&#xA;        id: 12&#xD;&#xA;        rater_id: 1&#xD;&#xA;        rateable_id: 3&#xD;&#xA;        rateable_type: Bboy&#xD;&#xA;        stars: 5.0&#xD;&#xA;        dimension: originality&#xD;&#xA;        created_at: 2014-02-25 09:33:24.000000000 Z&#xD;&#xA;        updated_at: 2014-02-25 09:33:24.000000000 Z&#xD;&#xA;    - !ruby/object:Rate&#xD;&#xA;      attributes:&#xD;&#xA;        id: 13&#xD;&#xA;        rater_id: 1&#xD;&#xA;        rateable_id: 3&#xD;&#xA;        rateable_type: Bboy&#xD;&#xA;        stars: 5.0&#xD;&#xA;        dimension: dynamics&#xD;&#xA;        created_at: 2014-02-25 09:33:25.000000000 Z&#xD;&#xA;        updated_at: 2014-02-25 09:33:25.000000000 Z&#xD;&#xA;    - !ruby/object:Rate&#xD;&#xA;      attributes:&#xD;&#xA;        id: 14&#xD;&#xA;        rater_id: 1&#xD;&#xA;        rateable_id: 3&#xD;&#xA;        rateable_type: Bboy&#xD;&#xA;        stars: 5.0&#xD;&#xA;        dimension: execution&#xD;&#xA;        created_at: 2014-02-25 09:33:26.000000000 Z&#xD;&#xA;        updated_at: 2014-02-25 09:33:26.000000000 Z&#xD;&#xA;    - !ruby/object:Rate&#xD;&#xA;      attributes:&#xD;&#xA;        id: 15&#xD;&#xA;        rater_id: 1&#xD;&#xA;        rateable_id: 3&#xD;&#xA;        rateable_type: Bboy&#xD;&#xA;        stars: 5.0&#xD;&#xA;        dimension: battle&#xD;&#xA;        created_at: 2014-02-25 09:33:27.000000000 Z&#xD;&#xA;        updated_at: 2014-02-25 09:33:27.000000000 Z&#xD;&#xA;    - !ruby/object:Rate&#xD;&#xA;      attributes:&#xD;&#xA;        id: 16&#xD;&#xA;        rater_id: 1&#xD;&#xA;        rateable_id: 5&#xD;&#xA;        rateable_type: Bboy&#xD;&#xA;        stars: 5.0&#xD;&#xA;        dimension: foundation&#xD;&#xA;        created_at: 2014-02-25 09:36:30.000000000 Z&#xD;&#xA;        updated_at: 2014-02-25 09:36:30.000000000 Z&#xD;&#xA;    - !ruby/object:Rate&#xD;&#xA;      attributes:&#xD;&#xA;        id: 17&#xD;&#xA;        rater_id: 1&#xD;&#xA;        rateable_id: 5&#xD;&#xA;        rateable_type: Bboy&#xD;&#xA;        stars: 5.0&#xD;&#xA;        dimension: originality&#xD;&#xA;        created_at: 2014-02-25 09:36:31.000000000 Z&#xD;&#xA;        updated_at: 2014-02-25 09:36:31.000000000 Z&#xD;&#xA;    - !ruby/object:Rate&#xD;&#xA;      attributes:&#xD;&#xA;        id: 18&#xD;&#xA;        rater_id: 1&#xD;&#xA;        rateable_id: 5&#xD;&#xA;        rateable_type: Bboy&#xD;&#xA;        stars: 5.0&#xD;&#xA;        dimension: dynamics&#xD;&#xA;        created_at: 2014-02-25 09:36:31.000000000 Z&#xD;&#xA;        updated_at: 2014-02-25 09:36:31.000000000 Z&#xD;&#xA;    - !ruby/object:Rate&#xD;&#xA;      attributes:&#xD;&#xA;        id: 19&#xD;&#xA;        rater_id: 1&#xD;&#xA;        rateable_id: 5&#xD;&#xA;        rateable_type: Bboy&#xD;&#xA;        stars: 5.0&#xD;&#xA;        dimension: battle&#xD;&#xA;        created_at: 2014-02-25 09:36:32.000000000 Z&#xD;&#xA;        updated_at: 2014-02-25 09:36:32.000000000 Z&#xD;&#xA;    - !ruby/object:Rate&#xD;&#xA;      attributes:&#xD;&#xA;        id: 25&#xD;&#xA;        rater_id: 8&#xD;&#xA;        rateable_id: 3&#xD;&#xA;        rateable_type: Bboy&#xD;&#xA;        stars: 1.0&#xD;&#xA;        dimension: foundation&#xD;&#xA;        created_at: 2014-03-04 14:06:46.000000000 Z&#xD;&#xA;        updated_at: 2014-03-04 14:06:46.000000000 Z&#xD;&#xA;    - !ruby/object:Rate&#xD;&#xA;      attributes:&#xD;&#xA;        id: 26&#xD;&#xA;        rater_id: 8&#xD;&#xA;        rateable_id: 3&#xD;&#xA;        rateable_type: Bboy&#xD;&#xA;        stars: 1.0&#xD;&#xA;        dimension: originality&#xD;&#xA;        created_at: 2014-03-04 14:06:49.000000000 Z&#xD;&#xA;        updated_at: 2014-03-04 14:06:49.000000000 Z&#xD;&#xA;    - !ruby/object:Rate&#xD;&#xA;      attributes:&#xD;&#xA;        id: 27&#xD;&#xA;        rater_id: 8&#xD;&#xA;        rateable_id: 3&#xD;&#xA;        rateable_type: Bboy&#xD;&#xA;        stars: 1.0&#xD;&#xA;        dimension: dynamics&#xD;&#xA;        created_at: 2014-03-04 14:06:51.000000000 Z&#xD;&#xA;        updated_at: 2014-03-04 14:06:51.000000000 Z&#xD;&#xA;    - !ruby/object:Rate&#xD;&#xA;      attributes:&#xD;&#xA;        id: 28&#xD;&#xA;        rater_id: 8&#xD;&#xA;        rateable_id: 3&#xD;&#xA;        rateable_type: Bboy&#xD;&#xA;        stars: 1.0&#xD;&#xA;        dimension: execution&#xD;&#xA;        created_at: 2014-03-04 14:06:53.000000000 Z&#xD;&#xA;        updated_at: 2014-03-04 14:06:53.000000000 Z&#xD;&#xA;    - !ruby/object:Rate&#xD;&#xA;      attributes:&#xD;&#xA;        id: 29&#xD;&#xA;        rater_id: 8&#xD;&#xA;        rateable_id: 3&#xD;&#xA;        rateable_type: Bboy&#xD;&#xA;        stars: 1.0&#xD;&#xA;        dimension: battle&#xD;&#xA;        created_at: 2014-03-04 14:06:54.000000000 Z&#xD;&#xA;        updated_at: 2014-03-04 14:06:54.000000000 Z
-6268176132432003008,159,6,"    import java.awt.*;&#xD;&#xA;    import java.awt.event.*;&#xD;&#xA;    import javax.swing.*;&#xD;&#xA;    import javax.swing.table.*;&#xD;&#xA;    &#xD;&#xA;    /*&#xD;&#xA;     * The editor button that brings up the dialog.&#xD;&#xA;     */&#xD;&#xA;    //public class TablePopupEditor extends AbstractCellEditor&#xD;&#xA;    public class TablePopupEditor extends DefaultCellEditor&#xD;&#xA;    	implements TableCellEditor&#xD;&#xA;    {&#xD;&#xA;    	private PopupDialog popup;&#xD;&#xA;    	private String currentText = """";&#xD;&#xA;    	private JButton editorComponent;&#xD;&#xA;    &#xD;&#xA;    	public TablePopupEditor()&#xD;&#xA;    	{&#xD;&#xA;    		super(new JTextField());&#xD;&#xA;    &#xD;&#xA;    		setClickCountToStart(1);&#xD;&#xA;    &#xD;&#xA;    		//  Use a JButton as the editor component&#xD;&#xA;    &#xD;&#xA;    		editorComponent = new JButton();&#xD;&#xA;    		editorComponent.setBackground(Color.white);&#xD;&#xA;    		editorComponent.setBorderPainted(false);&#xD;&#xA;    		editorComponent.setContentAreaFilled( false );&#xD;&#xA;    &#xD;&#xA;    		// Make sure focus goes back to the table when the dialog is closed&#xD;&#xA;    		editorComponent.setFocusable( false );&#xD;&#xA;    &#xD;&#xA;    		//  Set up the dialog where we do the actual editing&#xD;&#xA;    &#xD;&#xA;    		popup = new PopupDialog();&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public Object getCellEditorValue()&#xD;&#xA;    	{&#xD;&#xA;    		return currentText;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public Component getTableCellEditorComponent(&#xD;&#xA;    		JTable table, Object value, boolean isSelected, int row, int column)&#xD;&#xA;    	{&#xD;&#xA;    &#xD;&#xA;    		SwingUtilities.invokeLater(new Runnable()&#xD;&#xA;    		{&#xD;&#xA;    			public void run()&#xD;&#xA;    			{&#xD;&#xA;    				popup.setText( currentText );&#xD;&#xA;    //				popup.setLocationRelativeTo( editorComponent );&#xD;&#xA;    				Point p = editorComponent.getLocationOnScreen();&#xD;&#xA;    				popup.setLocation(p.x, p.y + editorComponent.getSize().height);&#xD;&#xA;    				popup.show();&#xD;&#xA;    				fireEditingStopped();&#xD;&#xA;    			}&#xD;&#xA;    		});&#xD;&#xA;    &#xD;&#xA;    		currentText = value.toString();&#xD;&#xA;    	   	editorComponent.setText( currentText );&#xD;&#xA;    		return editorComponent;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	/*&#xD;&#xA;    	*   Simple dialog containing the actual editing component&#xD;&#xA;    	*/&#xD;&#xA;    	class PopupDialog extends JDialog implements ActionListener&#xD;&#xA;    	{&#xD;&#xA;    		private JTextArea textArea;&#xD;&#xA;    &#xD;&#xA;    		public PopupDialog()&#xD;&#xA;    		{&#xD;&#xA;    			super((Frame)null, ""Change Description"", true);&#xD;&#xA;    &#xD;&#xA;    			textArea = new JTextArea(5, 20);&#xD;&#xA;    			textArea.setLineWrap( true );&#xD;&#xA;    			textArea.setWrapStyleWord( true );&#xD;&#xA;    			KeyStroke keyStroke = KeyStroke.getKeyStroke(""ENTER"");&#xD;&#xA;    			textArea.getInputMap().put(keyStroke, ""none"");&#xD;&#xA;    			JScrollPane scrollPane = new JScrollPane( textArea );&#xD;&#xA;    			getContentPane().add( scrollPane );&#xD;&#xA;    &#xD;&#xA;    			JButton cancel = new JButton(""Cancel"");&#xD;&#xA;    			cancel.addActionListener( this );&#xD;&#xA;    			JButton ok = new JButton(""Ok"");&#xD;&#xA;    			ok.setPreferredSize( cancel.getPreferredSize() );&#xD;&#xA;    			ok.addActionListener( this );&#xD;&#xA;    &#xD;&#xA;    			JPanel buttons = new JPanel();&#xD;&#xA;    			buttons.add( ok );&#xD;&#xA;    			buttons.add( cancel );&#xD;&#xA;    			getContentPane().add(buttons, BorderLayout.SOUTH);&#xD;&#xA;    			pack();&#xD;&#xA;    &#xD;&#xA;    			getRootPane().setDefaultButton( ok );&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		public void setText(String text)&#xD;&#xA;    		{&#xD;&#xA;    			textArea.setText( text );&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		/*&#xD;&#xA;    		*   Save the changed text before hiding the popup&#xD;&#xA;    		*/&#xD;&#xA;    		public void actionPerformed(ActionEvent e)&#xD;&#xA;    		{&#xD;&#xA;    			if (""Ok"".equals( e.getActionCommand() ) )&#xD;&#xA;    			{&#xD;&#xA;    				currentText = textArea.getText();&#xD;&#xA;    			}&#xD;&#xA;    &#xD;&#xA;    			textArea.requestFocusInWindow();&#xD;&#xA;    			setVisible( false );&#xD;&#xA;    		}&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	private static void createAndShowUI()&#xD;&#xA;    	{&#xD;&#xA;    		String[] columnNames = {""Item"", ""Description""};&#xD;&#xA;    		Object[][] data =&#xD;&#xA;    		{&#xD;&#xA;    			{""Item 1"", ""Description of Item 1""},&#xD;&#xA;    			{""Item 2"", ""Description of Item 2""},&#xD;&#xA;    			{""Item 3"", ""Description of Item 3""}&#xD;&#xA;    		};&#xD;&#xA;    &#xD;&#xA;    		JTable table = new JTable(data, columnNames);&#xD;&#xA;    		table.getColumnModel().getColumn(1).setPreferredWidth(300);&#xD;&#xA;    		table.setPreferredScrollableViewportSize(table.getPreferredSize());&#xD;&#xA;    		JScrollPane scrollPane = new JScrollPane(table);&#xD;&#xA;    &#xD;&#xA;    		// Use the popup editor on the second column&#xD;&#xA;    &#xD;&#xA;    		TablePopupEditor popupEditor = new TablePopupEditor();&#xD;&#xA;    		table.getColumnModel().getColumn(1).setCellEditor( popupEditor );&#xD;&#xA;    &#xD;&#xA;    		JFrame frame = new JFrame(""Popup Editor Test"");&#xD;&#xA;    		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;&#xA;    		frame.add(new JTextField(), BorderLayout.NORTH);&#xD;&#xA;    		frame.add( scrollPane );&#xD;&#xA;    		frame.pack();&#xD;&#xA;    		frame.setLocationRelativeTo( null );&#xD;&#xA;    		frame.setVisible(true);&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public static void main(String[] args)&#xD;&#xA;    	{&#xD;&#xA;    		EventQueue.invokeLater(new Runnable()&#xD;&#xA;    		{&#xD;&#xA;    			public void run()&#xD;&#xA;    			{&#xD;&#xA;    				createAndShowUI();&#xD;&#xA;    			}&#xD;&#xA;    		});&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    }"
3224418094889049902,169,6,"    /*custom font*/&#xD;&#xA;    &#xD;&#xA;    @import url(http://fonts.googleapis.com/css?family=Montserrat);&#xD;&#xA;    &#xD;&#xA;    /*basic reset*/&#xD;&#xA;    &#xD;&#xA;    * {&#xD;&#xA;      margin: 0;&#xD;&#xA;      padding: 0;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    html {&#xD;&#xA;      height: 100%;&#xD;&#xA;      /*Image only BG fallback*/&#xD;&#xA;      /*background = gradient + image pattern combo*/&#xD;&#xA;      background: linear-gradient(rgba(196, 102, 0, 0.6), rgba(155, 89, 182, 0.6));&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    body {&#xD;&#xA;      font-family: montserrat, arial, verdana;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    /*form styles*/&#xD;&#xA;    &#xD;&#xA;    #msform {&#xD;&#xA;      width: 400px;&#xD;&#xA;      margin: 50px auto;&#xD;&#xA;      text-align: center;&#xD;&#xA;      position: relative;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    #msform fieldset {&#xD;&#xA;      background: white;&#xD;&#xA;      border: 0 none;&#xD;&#xA;      border-radius: 3px;&#xD;&#xA;      box-shadow: 0 0 15px 1px rgba(0, 0, 0, 0.4);&#xD;&#xA;      padding: 20px 30px;&#xD;&#xA;      box-sizing: border-box;&#xD;&#xA;      width: 80%;&#xD;&#xA;      margin: 0 10%;&#xD;&#xA;      /*stacking fieldsets above each other*/&#xD;&#xA;      position: relative;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    /*Hide all except first fieldset*/&#xD;&#xA;    &#xD;&#xA;    #msform fieldset:not(:first-of-type) {&#xD;&#xA;      display: none;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    /*inputs*/&#xD;&#xA;    &#xD;&#xA;    #msform input,&#xD;&#xA;    #msform textarea {&#xD;&#xA;      padding: 15px;&#xD;&#xA;      border: 1px solid #ccc;&#xD;&#xA;      border-radius: 3px;&#xD;&#xA;      margin-bottom: 10px;&#xD;&#xA;      width: 100%;&#xD;&#xA;      box-sizing: border-box;&#xD;&#xA;      font-family: montserrat;&#xD;&#xA;      color: #2C3E50;&#xD;&#xA;      font-size: 13px;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    /*buttons*/&#xD;&#xA;    &#xD;&#xA;    #msform .action-button {&#xD;&#xA;      width: 100px;&#xD;&#xA;      background: #27AE60;&#xD;&#xA;      font-weight: bold;&#xD;&#xA;      color: white;&#xD;&#xA;      border: 0 none;&#xD;&#xA;      border-radius: 1px;&#xD;&#xA;      cursor: pointer;&#xD;&#xA;      padding: 10px 5px;&#xD;&#xA;      margin: 10px 5px;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    #msform .action-button:hover,&#xD;&#xA;    #msform .action-button:focus {&#xD;&#xA;      box-shadow: 0 0 0 2px white, 0 0 0 3px #27AE60;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    /*headings*/&#xD;&#xA;    &#xD;&#xA;    .fs-title {&#xD;&#xA;      font-size: 15px;&#xD;&#xA;      text-transform: uppercase;&#xD;&#xA;      color: #2C3E50;&#xD;&#xA;      margin-bottom: 10px;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .fs-subtitle {&#xD;&#xA;      font-weight: normal;&#xD;&#xA;      font-size: 13px;&#xD;&#xA;      color: #666;&#xD;&#xA;      margin-bottom: 20px;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    /*progressbar*/&#xD;&#xA;    &#xD;&#xA;    #progressbar {&#xD;&#xA;      margin-bottom: 30px;&#xD;&#xA;      overflow: hidden;&#xD;&#xA;      /*CSS counters to number the steps*/&#xD;&#xA;      counter-reset: step;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    #progressbar li {&#xD;&#xA;      list-style-type: none;&#xD;&#xA;      color: white;&#xD;&#xA;      text-transform: uppercase;&#xD;&#xA;      font-size: 9px;&#xD;&#xA;      width: 33.33%;&#xD;&#xA;      float: left;&#xD;&#xA;      position: relative;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    #progressbar li:before {&#xD;&#xA;      content: counter(step);&#xD;&#xA;      counter-increment: step;&#xD;&#xA;      width: 20px;&#xD;&#xA;      line-height: 20px;&#xD;&#xA;      display: block;&#xD;&#xA;      font-size: 10px;&#xD;&#xA;      color: #333;&#xD;&#xA;      background: white;&#xD;&#xA;      border-radius: 3px;&#xD;&#xA;      margin: 0 auto 5px auto;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    /*progressbar connectors*/&#xD;&#xA;    &#xD;&#xA;    #progressbar li:after {&#xD;&#xA;      content: '';&#xD;&#xA;      width: 100%;&#xD;&#xA;      height: 2px;&#xD;&#xA;      background: white;&#xD;&#xA;      position: absolute;&#xD;&#xA;      left: -50%;&#xD;&#xA;      top: 9px;&#xD;&#xA;      z-index: -1;&#xD;&#xA;      /*put it behind the numbers*/&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    #progressbar li:first-child:after {&#xD;&#xA;      /*connector not needed before the first step*/&#xD;&#xA;      content: none;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    /*marking active/completed steps green*/&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    /*The number of the step and the connector before it = green*/&#xD;&#xA;    &#xD;&#xA;    #progressbar li.active:before,&#xD;&#xA;    #progressbar li.active:after {&#xD;&#xA;      background: #27AE60;&#xD;&#xA;      color: white;&#xD;&#xA;    }"
-3216684853017641881,186,6,"        .t {&#xD;&#xA;            -webkit-transform-origin: top left;&#xD;&#xA;            -moz-transform-origin: top left;&#xD;&#xA;            -o-transform-origin: top left;&#xD;&#xA;            -ms-transform-origin: top left;&#xD;&#xA;            -webkit-transform: scale(0.25);&#xD;&#xA;            -moz-transform: scale(0.25);&#xD;&#xA;            -o-transform: scale(0.25);&#xD;&#xA;            -ms-transform: scale(0.25);&#xD;&#xA;            z-index: 2;&#xD;&#xA;            position: absolute;&#xD;&#xA;            white-space: pre;&#xD;&#xA;            overflow: visible;&#xD;&#xA;        }&#xD;&#xA;        #t1_1{left:256px;top:35px;letter-spacing:0.1px;}&#xD;&#xA;        #t2_1{left:334px;top:87px;word-spacing:-0.1px;}&#xD;&#xA;        #t3_1{left:210px;top:123px;}&#xD;&#xA;        #t4_1{left:238px;top:123px;word-spacing:-0.3px;}&#xD;&#xA;        #t5_1{left:210px;top:141px;}&#xD;&#xA;        #t6_1{left:210px;top:160px;}&#xD;&#xA;        #t7_1{left:210px;top:179px;}&#xD;&#xA;        #t8_1{left:238px;top:141px;letter-spacing:-0.1px;word-spacing:-0.1px;}&#xD;&#xA;        #t9_1{left:238px;top:160px;word-spacing:-0.1px;}&#xD;&#xA;        #ta_1{left:238px;top:179px;word-spacing:-0.1px;}&#xD;&#xA;        #tb_1{left:343px;top:242px;letter-spacing:-0.1px;}&#xD;&#xA;        #tc_1{left:210px;top:278px;}&#xD;&#xA;        #td_1{left:210px;top:297px;}&#xD;&#xA;        #te_1{left:210px;top:315px;}&#xD;&#xA;        #tf_1{left:210px;top:334px;}&#xD;&#xA;        #tg_1{left:238px;top:278px;word-spacing:-0.1px;}&#xD;&#xA;        #th_1{left:238px;top:297px;word-spacing:-0.1px;}&#xD;&#xA;        #ti_1{left:238px;top:315px;word-spacing:-0.2px;}&#xD;&#xA;        #tj_1{left:238px;top:334px;word-spacing:-0.1px;}&#xD;&#xA;        #tk_1{left:286px;top:393px;word-spacing:-0.1px;}&#xD;&#xA;        #tl_1{left:210px;top:429px;}&#xD;&#xA;        #tm_1{left:210px;top:448px;}&#xD;&#xA;        #tn_1{left:210px;top:466px;}&#xD;&#xA;        #to_1{left:210px;top:485px;}&#xD;&#xA;        #tp_1{left:238px;top:429px;word-spacing:-0.3px;}&#xD;&#xA;        #tq_1{left:238px;top:448px;word-spacing:-0.1px;}&#xD;&#xA;        #tr_1{left:238px;top:466px;word-spacing:-0.1px;}&#xD;&#xA;        #ts_1{left:238px;top:485px;word-spacing:-0.2px;}&#xD;&#xA;        #tt_1{left:326px;top:544px;letter-spacing:-0.1px;}&#xD;&#xA;        #tu_1{left:210px;top:580px;}&#xD;&#xA;        #tv_1{left:210px;top:599px;}&#xD;&#xA;        #tw_1{left:210px;top:618px;}&#xD;&#xA;        #tx_1{left:238px;top:618px;}&#xD;&#xA;        #ty_1{left:210px;top:636px;}&#xD;&#xA;        #tz_1{left:238px;top:636px;}&#xD;&#xA;        #t10_1{left:210px;top:655px;}&#xD;&#xA;        #t11_1{left:238px;top:580px;word-spacing:-0.1px;}&#xD;&#xA;        #t12_1{left:238px;top:599px;word-spacing:-0.2px;}&#xD;&#xA;        #t13_1{left:238px;top:655px;word-spacing:-0.1px;}&#xD;&#xA;        #t14_1{left:264px;top:716px;word-spacing:-0.2px;}&#xD;&#xA;        #t15_1{left:210px;top:752px;}&#xD;&#xA;        #t16_1{left:210px;top:771px;}&#xD;&#xA;        #t17_1{left:210px;top:789px;}&#xD;&#xA;        #t18_1{left:210px;top:808px;}&#xD;&#xA;        #t19_1{left:238px;top:752px;word-spacing:-0.1px;}&#xD;&#xA;        #t1a_1{left:238px;top:771px;word-spacing:-0.1px;}&#xD;&#xA;        #t1b_1{left:238px;top:789px;word-spacing:-0.2px;}&#xD;&#xA;        #t1c_1{left:238px;top:808px;word-spacing:-0.1px;}&#xD;&#xA;        .s1_1{&#xD;&#xA;            FONT-SIZE: 85.4px;&#xD;&#xA;            FONT-FAMILY: Arial;&#xD;&#xA;            color: rgb(0,0,0);&#xD;&#xA;            FONT-WEIGHT: bold;&#xD;&#xA;        }&#xD;&#xA;        .s2_1{&#xD;&#xA;            FONT-SIZE: 61.2px;&#xD;&#xA;            FONT-FAMILY: Arial;&#xD;&#xA;            color: rgb(0,0,0);&#xD;&#xA;            FONT-WEIGHT: bold;&#xD;&#xA;        }&#xD;&#xA;        .s3_1{&#xD;&#xA;            FONT-SIZE: 61.2px;&#xD;&#xA;            FONT-FAMILY: SymbolMT_1z5;&#xD;&#xA;            color: rgb(0,0,0);&#xD;&#xA;        }&#xD;&#xA;        .s4_1{&#xD;&#xA;            FONT-SIZE: 61.2px;&#xD;&#xA;            FONT-FAMILY: Arial;&#xD;&#xA;            color: rgb(0,0,0);&#xD;&#xA;        }&#xD;&#xA;        div {&#xD;&#xA;          padding-top: 10px;&#xD;&#xA;        }&#xD;&#xA;          .button {&#xD;&#xA;            font-size: 1em;&#xD;&#xA;            padding: 10px;&#xD;&#xA;            color: #fff;&#xD;&#xA;            border: 2px solid orange;&#xD;&#xA;            border-radius: 20px/50px;&#xD;&#xA;            text-decoration: none;&#xD;&#xA;            cursor: pointer;&#xD;&#xA;            transition: all 0.3s ease-out;&#xD;&#xA;          }&#xD;&#xA;          .button:hover {&#xD;&#xA;            background: orange;&#xD;&#xA;          }&#xD;&#xA;          .overlay {&#xD;&#xA;            position: absolute;&#xD;&#xA;            top: 0;&#xD;&#xA;            bottom: 0;&#xD;&#xA;            left: 0;&#xD;&#xA;            right: 0;&#xD;&#xA;            background: rgba(0, 0, 0, 0.7);&#xD;&#xA;            transition: opacity 500ms;&#xD;&#xA;            visibility: visible;&#xD;&#xA;            opacity: 1;&#xD;&#xA;            height: 578%;&#xD;&#xA;            width: 117.5%;&#xD;&#xA;          }&#xD;&#xA;          .overlay:target {&#xD;&#xA;            visibility: hidden;&#xD;&#xA;            opacity: 0;&#xD;&#xA;            display:none;&#xD;&#xA;          }&#xD;&#xA;          .PopUp {&#xD;&#xA;            margin: 50px auto;&#xD;&#xA;            padding: 0px;&#xD;&#xA;            background: #fff;&#xD;&#xA;            border-radius: 5px;&#xD;&#xA;            width: 60%;&#xD;&#xA;            position: relative;&#xD;&#xA;            transition: all 5s ease-in-out;&#xD;&#xA;          }&#xD;&#xA;          .PopUp .close {&#xD;&#xA;            position: absolute;&#xD;&#xA;            top: 20px;&#xD;&#xA;            right: 30px;&#xD;&#xA;            transition: all 200ms;&#xD;&#xA;            font-size: 30px;&#xD;&#xA;            font-weight: bold;&#xD;&#xA;            text-decoration: none;&#xD;&#xA;            color: #333;&#xD;&#xA;          }&#xD;&#xA;          .PopUp .close:hover {&#xD;&#xA;            color: orange;&#xD;&#xA;          }&#xD;&#xA;          .PopUp .content {&#xD;&#xA;            max-height: 117.5%;&#xD;&#xA;            overflow: auto;&#xD;&#xA;          }&#xD;&#xA;    .pdf1 {&#xD;&#xA;    width: 935px;&#xD;&#xA;    height: 1210px;&#xD;&#xA;    background-color: white;&#xD;&#xA;    -moz-transform: scale(1);&#xD;&#xA;    z-index: 0;&#xD;&#xA;    border: none;&#xD;&#xA;      }&#xD;&#xA;    button {&#xD;&#xA;        background-color: Transparent;&#xD;&#xA;        background-repeat:no-repeat;&#xD;&#xA;        border: none;&#xD;&#xA;        cursor:pointer;&#xD;&#xA;        overflow: hidden;&#xD;&#xA;        outline:none;&#xD;&#xA;        font-family: ""Open Sans"",sans-serif;&#xD;&#xA;        font-weight: 700;&#xD;&#xA;        color: #2D2D2D;&#xD;&#xA;        font-size: 1rem;&#xD;&#xA;        line-height: 1;&#xD;&#xA;        text-align: center;&#xD;&#xA;    }&#xD;&#xA;    .Print {&#xD;&#xA;        padding-bottom: 10px;&#xD;&#xA;        margin-top: -5px;   &#xD;&#xA;    }&#xD;&#xA;    .close-message {&#xD;&#xA;        font-family: ""Open Sans"",sans-serif;&#xD;&#xA;        font-weight: 700;&#xD;&#xA;        color: black;&#xD;&#xA;        font-size: 0.9rem;&#xD;&#xA;        line-height: 1;&#xD;&#xA;        position: absolute;&#xD;&#xA;        top: 15px;&#xD;&#xA;        left: 9px;&#xD;&#xA;    }&#xD;&#xA;    .timer {&#xD;&#xA;        position: absolute;&#xD;&#xA;        top: 5px;&#xD;&#xA;        right: 20px;&#xD;&#xA;        z-index: 2;&#xD;&#xA;    }"
6695569438130837568,188,6,"	# This is the main Apache server configuration file.  It contains the&#xD;&#xA;	# configuration directives that give the server its instructions.&#xD;&#xA;	# See http://httpd.apache.org/docs/2.4/ for detailed information about&#xD;&#xA;	# the directives and /usr/share/doc/apache2/README.Debian about Debian specific&#xD;&#xA;	# hints.&#xD;&#xA;	#&#xD;&#xA;	#&#xD;&#xA;	# Summary of how the Apache 2 configuration works in Debian:&#xD;&#xA;	# The Apache 2 web server configuration in Debian is quite different to&#xD;&#xA;	# upstream's suggested way to configure the web server. This is because Debian's&#xD;&#xA;	# default Apache2 installation attempts to make adding and removing modules,&#xD;&#xA;	# virtual hosts, and extra configuration directives as flexible as possible, in&#xD;&#xA;	# order to make automating the changes and administering the server as easy as&#xD;&#xA;	# possible.&#xD;&#xA;	# It is split into several files forming the configuration hierarchy outlined&#xD;&#xA;	# below, all located in the /etc/apache2/ directory:&#xD;&#xA;	#&#xD;&#xA;	#	/etc/apache2/&#xD;&#xA;	#	|-- apache2.conf&#xD;&#xA;	#	|	`--  ports.conf&#xD;&#xA;	#	|-- mods-enabled&#xD;&#xA;	#	|	|-- *.load&#xD;&#xA;	#	|	`-- *.conf&#xD;&#xA;	#	|-- conf-enabled&#xD;&#xA;	#	|	`-- *.conf&#xD;&#xA;	# 	`-- sites-enabled&#xD;&#xA;	#	 	`-- *.conf&#xD;&#xA;	#&#xD;&#xA;	#&#xD;&#xA;	# * apache2.conf is the main configuration file (this file). It puts the pieces&#xD;&#xA;	#   together by including all remaining configuration files when starting up the&#xD;&#xA;	#   web server.&#xD;&#xA;	#&#xD;&#xA;	# * ports.conf is always included from the main configuration file. It is&#xD;&#xA;	#   supposed to determine listening ports for incoming connections which can be&#xD;&#xA;	#   customized anytime.&#xD;&#xA;	#&#xD;&#xA;	# * Configuration files in the mods-enabled/, conf-enabled/ and sites-enabled/&#xD;&#xA;	#   directories contain particular configuration snippets which manage modules,&#xD;&#xA;	#   global configuration fragments, or virtual host configurations,&#xD;&#xA;	#   respectively.&#xD;&#xA;	#&#xD;&#xA;	#   They are activated by symlinking available configuration files from their&#xD;&#xA;	#   respective *-available/ counterparts. These should be managed by using our&#xD;&#xA;	#   helpers a2enmod/a2dismod, a2ensite/a2dissite and a2enconf/a2disconf. See&#xD;&#xA;	#   their respective man pages for detailed information.&#xD;&#xA;	#&#xD;&#xA;	# * The binary is called apache2. Due to the use of environment variables, in&#xD;&#xA;	#   the default configuration, apache2 needs to be started/stopped with&#xD;&#xA;	#   /etc/init.d/apache2 or apache2ctl. Calling /usr/bin/apache2 directly will not&#xD;&#xA;	#   work with the default configuration.&#xD;&#xA;	# Global configuration&#xD;&#xA;	#&#xD;&#xA;	#&#xD;&#xA;	# ServerRoot: The top of the directory tree under which the server's&#xD;&#xA;	# configuration, error, and log files are kept.&#xD;&#xA;	#&#xD;&#xA;	# NOTE!  If you intend to place this on an NFS (or otherwise network)&#xD;&#xA;	# mounted filesystem then please read the Mutex documentation (available&#xD;&#xA;	# at <URL:http://httpd.apache.org/docs/2.4/mod/core.html#mutex>);&#xD;&#xA;	# you will save yourself a lot of trouble.&#xD;&#xA;	#&#xD;&#xA;	# Do NOT add a slash at the end of the directory path.&#xD;&#xA;	#&#xD;&#xA;	#ServerRoot ""/etc/apache2""&#xD;&#xA;	#&#xD;&#xA;	# The accept serialization lock file MUST BE STORED ON A LOCAL DISK.&#xD;&#xA;	#&#xD;&#xA;	Mutex file:${APACHE_LOCK_DIR} default&#xD;&#xA;	#&#xD;&#xA;	# PidFile: The file in which the server should record its process&#xD;&#xA;	# identification number when it starts.&#xD;&#xA;	# This needs to be set in /etc/apache2/envvars&#xD;&#xA;	#&#xD;&#xA;	PidFile ${APACHE_PID_FILE}&#xD;&#xA;	#&#xD;&#xA;	# Timeout: The number of seconds before receives and sends time out.&#xD;&#xA;	#&#xD;&#xA;	Timeout 300&#xD;&#xA;	#&#xD;&#xA;	# KeepAlive: Whether or not to allow persistent connections (more than&#xD;&#xA;	# one request per connection). Set to ""Off"" to deactivate.&#xD;&#xA;	#&#xD;&#xA;	KeepAlive On&#xD;&#xA;	#&#xD;&#xA;	# MaxKeepAliveRequests: The maximum number of requests to allow&#xD;&#xA;	# during a persistent connection. Set to 0 to allow an unlimited amount.&#xD;&#xA;	# We recommend you leave this number high, for maximum performance.&#xD;&#xA;	#&#xD;&#xA;	MaxKeepAliveRequests 100&#xD;&#xA;	#&#xD;&#xA;	# KeepAliveTimeout: Number of seconds to wait for the next request from the&#xD;&#xA;	# same client on the same connection.&#xD;&#xA;	#&#xD;&#xA;	KeepAliveTimeout 5&#xD;&#xA;	# These need to be set in /etc/apache2/envvars&#xD;&#xA;	User ${APACHE_RUN_USER}&#xD;&#xA;	Group ${APACHE_RUN_GROUP}&#xD;&#xA;	#&#xD;&#xA;	# HostnameLookups: Log the names of clients or just their IP addresses&#xD;&#xA;	# e.g., www.apache.org (on) or 204.62.129.132 (off).&#xD;&#xA;	# The default is off because it'd be overall better for the net if people&#xD;&#xA;	# had to knowingly turn this feature on, since enabling it means that&#xD;&#xA;	# each client request will result in AT LEAST one lookup request to the&#xD;&#xA;	# nameserver.&#xD;&#xA;	#&#xD;&#xA;	HostnameLookups Off&#xD;&#xA;	# ErrorLog: The location of the error log file.&#xD;&#xA;	# If you do not specify an ErrorLog directive within a <VirtualHost>&#xD;&#xA;	# container, error messages relating to that virtual host will be&#xD;&#xA;	# logged here.  If you *do* define an error logfile for a <VirtualHost>&#xD;&#xA;	# container, that host's errors will be logged there and not here.&#xD;&#xA;	#&#xD;&#xA;	ErrorLog ${APACHE_LOG_DIR}/error.log&#xD;&#xA;	#&#xD;&#xA;	# LogLevel: Control the severity of messages logged to the error_log.&#xD;&#xA;	# Available values: trace8, ..., trace1, debug, info, notice, warn,&#xD;&#xA;	# error, crit, alert, emerg.&#xD;&#xA;	# It is also possible to configure the log level for particular modules, e.g.&#xD;&#xA;	# ""LogLevel info ssl:warn""&#xD;&#xA;	#&#xD;&#xA;	LogLevel warn&#xD;&#xA;	# Include module configuration:&#xD;&#xA;	IncludeOptional mods-enabled/*.load&#xD;&#xA;	IncludeOptional mods-enabled/*.conf&#xD;&#xA;	# Include list of ports to listen on&#xD;&#xA;	Include ports.conf&#xD;&#xA;	# Sets the default security model of the Apache2 HTTPD server. It does&#xD;&#xA;	# not allow access to the root filesystem outside of /usr/share and /var/www.&#xD;&#xA;	# The former is used by web applications packaged in Debian,&#xD;&#xA;	# the latter may be used for local directories served by the web server. If&#xD;&#xA;	# your system is serving content from a sub-directory in /srv you must allow&#xD;&#xA;	# access here, or in any related virtual host.&#xD;&#xA;	<Directory />&#xD;&#xA;		Options FollowSymLinks&#xD;&#xA;		AllowOverride None&#xD;&#xA;		Require all denied&#xD;&#xA;	</Directory>&#xD;&#xA;	<Directory /usr/share>&#xD;&#xA;		AllowOverride None&#xD;&#xA;		Require all granted&#xD;&#xA;	</Directory>&#xD;&#xA;	<Directory /var/www/>&#xD;&#xA;		Options Indexes FollowSymLinks&#xD;&#xA;		AllowOverride None&#xD;&#xA;		Require all granted&#xD;&#xA;	</Directory>&#xD;&#xA;	#<Directory /srv/>&#xD;&#xA;	#	Options Indexes FollowSymLinks&#xD;&#xA;	#	AllowOverride None&#xD;&#xA;	#	Require all granted&#xD;&#xA;	#</Directory>&#xD;&#xA;	# AccessFileName: The name of the file to look for in each directory&#xD;&#xA;	# for additional configuration directives.  See also the AllowOverride&#xD;&#xA;	# directive.&#xD;&#xA;	#&#xD;&#xA;	AccessFileName .htaccess&#xD;&#xA;	#&#xD;&#xA;	# The following lines prevent .htaccess and .htpasswd files from being&#xD;&#xA;	# viewed by Web clients.&#xD;&#xA;	#&#xD;&#xA;	<FilesMatch ""^\.ht"">&#xD;&#xA;		Require all denied&#xD;&#xA;	</FilesMatch>&#xD;&#xA;	#&#xD;&#xA;	# The following directives define some format nicknames for use with&#xD;&#xA;	# a CustomLog directive.&#xD;&#xA;	#&#xD;&#xA;	# These deviate from the Common Log Format definitions in that they use %O&#xD;&#xA;	# (the actual bytes sent including headers) instead of %b (the size of the&#xD;&#xA;	# requested file), because the latter makes it impossible to detect partial&#xD;&#xA;	# requests.&#xD;&#xA;	#&#xD;&#xA;	# Note that the use of %{X-Forwarded-For}i instead of %h is not recommended.&#xD;&#xA;	# Use mod_remoteip instead.&#xD;&#xA;	#&#xD;&#xA;	LogFormat ""%v:%p %h %l %u %t \""%r\"" %>s %O \""%{Referer}i\"" \""%{User-Agent}i\"""" vhost_combined&#xD;&#xA;	LogFormat ""%h %l %u %t \""%r\"" %>s %O \""%{Referer}i\"" \""%{User-Agent}i\"""" combined&#xD;&#xA;	LogFormat ""%h %l %u %t \""%r\"" %>s %O"" common&#xD;&#xA;	LogFormat ""%{Referer}i -> %U"" referer&#xD;&#xA;	LogFormat ""%{User-agent}i"" agent&#xD;&#xA;	# Include of directories ignores editors' and dpkg's backup files,&#xD;&#xA;	# see README.Debian for details.&#xD;&#xA;	# Include generic snippets of statements&#xD;&#xA;	IncludeOptional conf-enabled/*.conf&#xD;&#xA;	# Include the virtual host configurations:&#xD;&#xA;	IncludeOptional sites-enabled/*.conf&#xD;&#xA;	# vim: syntax=apache ts=4 sw=4 sts=4 sr noet"
8077482404871478465,239,6,"                   <!-- The HTML -->&#xD;&#xA;    <!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"">&#xD;&#xA;    <html>&#xD;&#xA;                &#xD;&#xA;        <head>&#xD;&#xA;        <title>Unslider.com example</title>&#xD;&#xA;        <meta http-equiv=""Content-Type"" content=""text/html; charset=UTF-8"">&#xD;&#xA;        <script src=""http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"" type=""text/javascript""></script> &#xD;&#xA;        <script src=""http://unslider.com/unslider.min.js""type=""text/javascript""></script>&#xD;&#xA;        &#xD;&#xA;            <!-- JavaScript -->&#xD;&#xA;        &#xD;&#xA;        <script type=""text/javascript"">&#xD;&#xA;    		 &#xD;&#xA;    $(function() {&#xD;&#xA;    $('.banner').unslider({&#xD;&#xA;    	speed: 500,               //  The speed to animate each slide (in milliseconds)&#xD;&#xA;    	delay: 3000,              //  The delay between slide animations (in milliseconds)&#xD;&#xA;    	complete: function() {},  //  A function that gets called after every slide animation&#xD;&#xA;    	keys: true,               //  Enable keyboard (left, right) arrow shortcuts&#xD;&#xA;    	dots: true,               //  Display dot navigation&#xD;&#xA;    	fluid: false              //  Support responsive design. May break non-responsive designs&#xD;&#xA;      &#xD;&#xA;    });&#xD;&#xA;    var unslider = $('.banner').unslider();&#xD;&#xA;      &#xD;&#xA;      $('.prev').click(function() {&#xD;&#xA;          unslider.data('unslider').prev();&#xD;&#xA;      });&#xD;&#xA;      &#xD;&#xA;      $('.next').click(function() {&#xD;&#xA;          unslider.data('unslider').next();&#xD;&#xA;      });&#xD;&#xA;      return false;&#xD;&#xA;    });&#xD;&#xA;    </script>&#xD;&#xA;        &#xD;&#xA;        <!-- CSS -->&#xD;&#xA;        <style type=""text/css"">&#xD;&#xA;    &#xD;&#xA;    * { &#xD;&#xA;      margin: 0;&#xD;&#xA;      padding: 0;&#xD;&#xA;      -webkit-box-sizing: border-box; &#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .banner {&#xD;&#xA;    position: relative;&#xD;&#xA;    width: 100%;&#xD;&#xA;    overflow: auto;&#xD;&#xA;    top: 50px;&#xD;&#xA;    /*z-index: -1;*/&#xD;&#xA;    &#xD;&#xA;    font-size: 18px;&#xD;&#xA;    line-height: 24px;&#xD;&#xA;    text-align: center;&#xD;&#xA;    &#xD;&#xA;    color: #FFFFFF;&#xD;&#xA;    text-shadow: 0 0 1px rgba(0,0,0,.05), 0 1px 2px rgba(0,0,0,.3);&#xD;&#xA;    &#xD;&#xA;    background: #FFFFFF;&#xD;&#xA;    box-shadow: 0 1px 2px rgba(0,0,0,.25);&#xD;&#xA;    }&#xD;&#xA;    .banner ul {&#xD;&#xA;    list-style: none;&#xD;&#xA;    width: 300%;&#xD;&#xA;    }&#xD;&#xA;    .banner ul li {&#xD;&#xA;    display: block;&#xD;&#xA;    float: left;&#xD;&#xA;    &#xD;&#xA;    min-height: 500px;&#xD;&#xA;    &#xD;&#xA;    -o-background-size: 100% 100%;&#xD;&#xA;    -ms-background-size: 100% 100%;&#xD;&#xA;    -moz-background-size: 100% 100%;&#xD;&#xA;    -webkit-background-size: 100% 100%;&#xD;&#xA;    background-size: 100% 100%;&#xD;&#xA;    &#xD;&#xA;    box-shadow: inset 0 -3px 6px rgba(0,0,0,.1);&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .banner .inner {&#xD;&#xA;    padding: 360px 0 110px;&#xD;&#xA;    &#xD;&#xA;    float: left;&#xD;&#xA;    vertical-align:-100px;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .banner h1, .banner h2 {&#xD;&#xA;    &#xD;&#xA;    font-size: 40px;&#xD;&#xA;    line-height: 52px;&#xD;&#xA;    color: #fff;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .banner .btn {&#xD;&#xA;    display: inline-block;&#xD;&#xA;    margin: 25px 0 0;&#xD;&#xA;    padding: 9px 22px 7px;&#xD;&#xA;    clear: both;&#xD;&#xA;    &#xD;&#xA;    color: #fff;&#xD;&#xA;    font-size: 12px;&#xD;&#xA;    font-weight: bold;&#xD;&#xA;    text-transform: uppercase;&#xD;&#xA;    text-decoration: none;&#xD;&#xA;    border : rgba(255, 255, 255, 0.4) solid 2px;&#xD;&#xA;    border-radius: 5px;&#xD;&#xA;    }&#xD;&#xA;    .banner .btn:hover {&#xD;&#xA;    background : rgba(255, 255, 255, 0.05);&#xD;&#xA;    }&#xD;&#xA;    .banner .btn:active {&#xD;&#xA;    -webkit-filter: drop-shadow(0 -1px 2px rgba(0,0,0,.5));&#xD;&#xA;    -moz-filter: drop-shadow(0 -1px 2px rgba(0,0,0,.5));&#xD;&#xA;    -ms-filter: drop-shadow(0 -1px 2px rgba(0,0,0,.5));&#xD;&#xA;    -o-filter: drop-shadow(0 -1px 2px rgba(0,0,0,.5));&#xD;&#xA;    filter: drop-shadow(0 -1px 2px rgba(0,0,0,.5));&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .banner .btn, .banner .dot {&#xD;&#xA;    -webkit-filter: drop-shadow(0 1px 2px rgba(0,0,0,.3));&#xD;&#xA;    -moz-filter: drop-shadow(0 1px 2px rgba(0,0,0,.3));&#xD;&#xA;    -ms-filter: drop-shadow(0 1px 2px rgba(0,0,0,.3));&#xD;&#xA;    -o-filter: drop-shadow(0 1px 2px rgba(0,0,0,.3));&#xD;&#xA;    filter: drop-shadow(0 1px 2px rgba(0,0,0,.3));&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .banner .dots {&#xD;&#xA;    position: absolute;&#xD;&#xA;    left: 0;&#xD;&#xA;    right: 0;&#xD;&#xA;    bottom: 20px;&#xD;&#xA;    width: 100%;&#xD;&#xA;    }&#xD;&#xA;    .banner .dots li {&#xD;&#xA;    display: inline-block;&#xD;&#xA;    &#xD;&#xA;    width: 10px;&#xD;&#xA;    height: 10px;&#xD;&#xA;    line-height: 10px;&#xD;&#xA;    margin: 0 4px;&#xD;&#xA;    &#xD;&#xA;    text-indent: -999em;&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    border: 2px solid #fff;&#xD;&#xA;    border-radius: 6px;&#xD;&#xA;    &#xD;&#xA;    cursor: pointer;&#xD;&#xA;    opacity: .4;&#xD;&#xA;    &#xD;&#xA;    -webkit-transition: background .5s, opacity .5s;&#xD;&#xA;    -moz-transition: background .5s, opacity .5s;&#xD;&#xA;    transition: background .5s, opacity .5s;&#xD;&#xA;    }&#xD;&#xA;    .banner .dots li.active {&#xD;&#xA;    background: #fff;&#xD;&#xA;    opacity: 1;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;          &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    .unslider-arrow {&#xD;&#xA;      font-family: Expressway;&#xD;&#xA;      font-size: 50px;&#xD;&#xA;      text-decoration: none;&#xD;&#xA;      color: #3d3d3d;&#xD;&#xA;      background: rgba(255,255,255,0.7);&#xD;&#xA;      padding: 0 20px 5px 20px;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .next {&#xD;&#xA;      position: absolute;&#xD;&#xA;      top: 65%;&#xD;&#xA;      right: 0  &#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .prev {&#xD;&#xA;      position: absolute;&#xD;&#xA;      top: 65%;&#xD;&#xA;      right: 90 /* change to left:0; if u wanna have arrow on left side */ &#xD;&#xA;    }&#xD;&#xA;    </style>&#xD;&#xA;         </head>&#xD;&#xA;        <!-- Body of HTML document -->&#xD;&#xA;    &#xD;&#xA;        <body>&#xD;&#xA;            <div class=""slider"">&#xD;&#xA;            <div class=""banner"">&#xD;&#xA;              <ul>&#xD;&#xA;              <li style=""background-image: url('http://lorempixel.com/1200/600/');"">&#xD;&#xA;                <div class=""inner"">&#xD;&#xA;                  <h1>Some h1 text</h1>&#xD;&#xA;                 <p>smaller p text</p>&#xD;&#xA;    &#xD;&#xA;                    <a class=""btn"" href=""http://www.yourlink.com"">Hyperlink</a>&#xD;&#xA;                </div>&#xD;&#xA;              </li>&#xD;&#xA;      &#xD;&#xA;              <li style=""background-image: url('http://lorempixel.com/1200/600/');"">&#xD;&#xA;                <div class=""inner"">&#xD;&#xA;                  <h1>Some h1 text</h1>&#xD;&#xA;                 <p>smaller p text</p>&#xD;&#xA;    &#xD;&#xA;                  <a class=""btn"" href=""http://www.yourlink.com"">Hyperlink</a>&#xD;&#xA;                  </div>&#xD;&#xA;                  </li>&#xD;&#xA;    &#xD;&#xA;               <li style=""background-image: url('http://lorempixel.com/1200/600/');"">&#xD;&#xA;                 <div class=""inner"">&#xD;&#xA;                  <h1>Some h1 text</h1>&#xD;&#xA;                 <p>smaller p text</p>&#xD;&#xA;    &#xD;&#xA;                  <a class=""btn"" href=""http://www.yourlink.com"">Hyperlink</a>&#xD;&#xA;                  </div>&#xD;&#xA;              </li>&#xD;&#xA;    &#xD;&#xA;              <li style=""background-image: url('http://lorempixel.com/1200/600/');"">&#xD;&#xA;              <div class=""inner"">&#xD;&#xA;                  <h1>Some h1 text</h1>&#xD;&#xA;                 <p>smaller p text</p>&#xD;&#xA;    &#xD;&#xA;                  <a class=""btn"" href=""http://www.yourlink.com"">Hyperlink</a>&#xD;&#xA;                </div>&#xD;&#xA;              </li>&#xD;&#xA;          </ul>&#xD;&#xA;              &#xD;&#xA;              &#xD;&#xA;            </div>&#xD;&#xA;              <a href=""#"" class=""unslider-arrow prev"">&larr;</a>&#xD;&#xA;              <a href=""#"" class=""unslider-arrow next"">&rarr;</a>&#xD;&#xA;            </div>&#xD;&#xA;       </body>  &#xD;&#xA;    &#xD;&#xA;    </html>&#xD;&#xA;   "
-504294653977591417,254,6,"    // Extended TabControl which saves the displayed item so you don't get the performance hit of &#xD;&#xA;    // unloading and reloading the VisualTree when switching tabs&#xD;&#xA;    &#xD;&#xA;    // Obtained from http://eric.burke.name/dotnetmania/2009/04/26/22.09.28&#xD;&#xA;    // and made a some modifications so it reuses a TabItem's ContentPresenter when doing drag/drop operations&#xD;&#xA;    &#xD;&#xA;    [TemplatePart(Name = ""PART_ItemsHolder"", Type = typeof(Panel))]&#xD;&#xA;    public class TabControlEx : System.Windows.Controls.TabControl&#xD;&#xA;    {&#xD;&#xA;        // Holds all items, but only marks the current tab's item as visible&#xD;&#xA;        private Panel _itemsHolder = null;&#xD;&#xA;    &#xD;&#xA;        // Temporaily holds deleted item in case this was a drag/drop operation&#xD;&#xA;        private object _deletedObject = null;&#xD;&#xA;    &#xD;&#xA;        public TabControlEx()&#xD;&#xA;            : base()&#xD;&#xA;        {&#xD;&#xA;            // this is necessary so that we get the initial databound selected item&#xD;&#xA;            this.ItemContainerGenerator.StatusChanged += ItemContainerGenerator_StatusChanged;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /// <summary>&#xD;&#xA;        /// if containers are done, generate the selected item&#xD;&#xA;        /// </summary>&#xD;&#xA;        /// <param name=""sender""></param>&#xD;&#xA;        /// <param name=""e""></param>&#xD;&#xA;        void ItemContainerGenerator_StatusChanged(object sender, EventArgs e)&#xD;&#xA;        {&#xD;&#xA;            if (this.ItemContainerGenerator.Status == GeneratorStatus.ContainersGenerated)&#xD;&#xA;            {&#xD;&#xA;                this.ItemContainerGenerator.StatusChanged -= ItemContainerGenerator_StatusChanged;&#xD;&#xA;                UpdateSelectedItem();&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /// <summary>&#xD;&#xA;        /// get the ItemsHolder and generate any children&#xD;&#xA;        /// </summary>&#xD;&#xA;        public override void OnApplyTemplate()&#xD;&#xA;        {&#xD;&#xA;            base.OnApplyTemplate();&#xD;&#xA;            _itemsHolder = GetTemplateChild(""PART_ItemsHolder"") as Panel;&#xD;&#xA;            UpdateSelectedItem();&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /// <summary>&#xD;&#xA;        /// when the items change we remove any generated panel children and add any new ones as necessary&#xD;&#xA;        /// </summary>&#xD;&#xA;        /// <param name=""e""></param>&#xD;&#xA;        protected override void OnItemsChanged(NotifyCollectionChangedEventArgs e)&#xD;&#xA;        {&#xD;&#xA;            base.OnItemsChanged(e);&#xD;&#xA;    &#xD;&#xA;            if (_itemsHolder == null)&#xD;&#xA;            {&#xD;&#xA;                return;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            switch (e.Action)&#xD;&#xA;            {&#xD;&#xA;                case NotifyCollectionChangedAction.Reset:&#xD;&#xA;                    _itemsHolder.Children.Clear();&#xD;&#xA;    &#xD;&#xA;                    if (base.Items.Count > 0)&#xD;&#xA;                    {&#xD;&#xA;                        base.SelectedItem = base.Items[0];&#xD;&#xA;                        UpdateSelectedItem();&#xD;&#xA;                    }&#xD;&#xA;    &#xD;&#xA;                    break;&#xD;&#xA;    &#xD;&#xA;                case NotifyCollectionChangedAction.Add:&#xD;&#xA;                case NotifyCollectionChangedAction.Remove:&#xD;&#xA;    &#xD;&#xA;                    // Search for recently deleted items caused by a Drag/Drop operation&#xD;&#xA;                    if (e.NewItems != null && _deletedObject != null)&#xD;&#xA;                    {&#xD;&#xA;                        foreach (var item in e.NewItems)&#xD;&#xA;                        {&#xD;&#xA;                            if (_deletedObject == item)&#xD;&#xA;                            {&#xD;&#xA;                                // If the new item is the same as the recently deleted one (i.e. a drag/drop event)&#xD;&#xA;                                // then cancel the deletion and reuse the ContentPresenter so it doesn't have to be &#xD;&#xA;                                // redrawn. We do need to link the presenter to the new item though (using the Tag)&#xD;&#xA;                                ContentPresenter cp = FindChildContentPresenter(_deletedObject);&#xD;&#xA;                                if (cp != null)&#xD;&#xA;                                {&#xD;&#xA;                                    int index = _itemsHolder.Children.IndexOf(cp);&#xD;&#xA;    &#xD;&#xA;                                    (_itemsHolder.Children[index] as ContentPresenter).Tag =&#xD;&#xA;                                        (item is TabItem) ? item : (this.ItemContainerGenerator.ContainerFromItem(item));&#xD;&#xA;                                }&#xD;&#xA;                                _deletedObject = null;&#xD;&#xA;                            }&#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;    &#xD;&#xA;                    if (e.OldItems != null)&#xD;&#xA;                    {&#xD;&#xA;                        foreach (var item in e.OldItems)&#xD;&#xA;                        {&#xD;&#xA;    &#xD;&#xA;                            _deletedObject = item;&#xD;&#xA;    &#xD;&#xA;                            // We want to run this at a slightly later priority in case this&#xD;&#xA;                            // is a drag/drop operation so that we can reuse the template&#xD;&#xA;                            this.Dispatcher.BeginInvoke(DispatcherPriority.DataBind,&#xD;&#xA;                                new Action(delegate()&#xD;&#xA;                            {&#xD;&#xA;                                if (_deletedObject != null)&#xD;&#xA;                                {&#xD;&#xA;                                    ContentPresenter cp = FindChildContentPresenter(_deletedObject);&#xD;&#xA;                                    if (cp != null)&#xD;&#xA;                                    {&#xD;&#xA;                                        this._itemsHolder.Children.Remove(cp);&#xD;&#xA;                                    }&#xD;&#xA;                                }&#xD;&#xA;                            }&#xD;&#xA;                            ));&#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;    &#xD;&#xA;                    UpdateSelectedItem();&#xD;&#xA;                    break;&#xD;&#xA;    &#xD;&#xA;                case NotifyCollectionChangedAction.Replace:&#xD;&#xA;                    throw new NotImplementedException(""Replace not implemented yet"");&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /// <summary>&#xD;&#xA;        /// update the visible child in the ItemsHolder&#xD;&#xA;        /// </summary>&#xD;&#xA;        /// <param name=""e""></param>&#xD;&#xA;        protected override void OnSelectionChanged(SelectionChangedEventArgs e)&#xD;&#xA;        {&#xD;&#xA;            base.OnSelectionChanged(e);&#xD;&#xA;            UpdateSelectedItem();&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /// <summary>&#xD;&#xA;        /// generate a ContentPresenter for the selected item&#xD;&#xA;        /// </summary>&#xD;&#xA;        void UpdateSelectedItem()&#xD;&#xA;        {&#xD;&#xA;            if (_itemsHolder == null)&#xD;&#xA;            {&#xD;&#xA;                return;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            // generate a ContentPresenter if necessary&#xD;&#xA;            TabItem item = GetSelectedTabItem();&#xD;&#xA;            if (item != null)&#xD;&#xA;            {&#xD;&#xA;                CreateChildContentPresenter(item);&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            // show the right child&#xD;&#xA;            foreach (ContentPresenter child in _itemsHolder.Children)&#xD;&#xA;            {&#xD;&#xA;                child.Visibility = ((child.Tag as TabItem).IsSelected) ? Visibility.Visible : Visibility.Collapsed;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /// <summary>&#xD;&#xA;        /// create the child ContentPresenter for the given item (could be data or a TabItem)&#xD;&#xA;        /// </summary>&#xD;&#xA;        /// <param name=""item""></param>&#xD;&#xA;        /// <returns></returns>&#xD;&#xA;        ContentPresenter CreateChildContentPresenter(object item)&#xD;&#xA;        {&#xD;&#xA;            if (item == null)&#xD;&#xA;            {&#xD;&#xA;                return null;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            ContentPresenter cp = FindChildContentPresenter(item);&#xD;&#xA;    &#xD;&#xA;            if (cp != null)&#xD;&#xA;            {&#xD;&#xA;                return cp;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            // the actual child to be added.  cp.Tag is a reference to the TabItem&#xD;&#xA;            cp = new ContentPresenter();&#xD;&#xA;            cp.Content = (item is TabItem) ? (item as TabItem).Content : item;&#xD;&#xA;            cp.ContentTemplate = this.SelectedContentTemplate;&#xD;&#xA;            cp.ContentTemplateSelector = this.SelectedContentTemplateSelector;&#xD;&#xA;            cp.ContentStringFormat = this.SelectedContentStringFormat;&#xD;&#xA;            cp.Visibility = Visibility.Collapsed;&#xD;&#xA;            cp.Tag = (item is TabItem) ? item : (this.ItemContainerGenerator.ContainerFromItem(item));&#xD;&#xA;            _itemsHolder.Children.Add(cp);&#xD;&#xA;            return cp;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /// <summary>&#xD;&#xA;        /// Find the CP for the given object.  data could be a TabItem or a piece of data&#xD;&#xA;        /// </summary>&#xD;&#xA;        /// <param name=""data""></param>&#xD;&#xA;        /// <returns></returns>&#xD;&#xA;        ContentPresenter FindChildContentPresenter(object data)&#xD;&#xA;        {&#xD;&#xA;            if (data is TabItem)&#xD;&#xA;            {&#xD;&#xA;                data = (data as TabItem).Content;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            if (data == null)&#xD;&#xA;            {&#xD;&#xA;                return null;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            if (_itemsHolder == null)&#xD;&#xA;            {&#xD;&#xA;                return null;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            foreach (ContentPresenter cp in _itemsHolder.Children)&#xD;&#xA;            {&#xD;&#xA;                if (cp.Content == data)&#xD;&#xA;                {&#xD;&#xA;                    return cp;&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            return null;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /// <summary>&#xD;&#xA;        /// copied from TabControl; wish it were protected in that class instead of private&#xD;&#xA;        /// </summary>&#xD;&#xA;        /// <returns></returns>&#xD;&#xA;        protected TabItem GetSelectedTabItem()&#xD;&#xA;        {&#xD;&#xA;            object selectedItem = base.SelectedItem;&#xD;&#xA;            if (selectedItem == null)&#xD;&#xA;            {&#xD;&#xA;                return null;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            if (_deletedObject == selectedItem)&#xD;&#xA;            { &#xD;&#xA;    &#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            TabItem item = selectedItem as TabItem;&#xD;&#xA;            if (item == null)&#xD;&#xA;            {&#xD;&#xA;                item = base.ItemContainerGenerator.ContainerFromIndex(base.SelectedIndex) as TabItem;&#xD;&#xA;            }&#xD;&#xA;            return item;&#xD;&#xA;        }&#xD;&#xA;    }"
-8817317638666662649,20,7,"	fastcgi_param  QUERY_STRING       $query_string;&#xD;&#xA;	fastcgi_param  REQUEST_METHOD     $request_method;&#xD;&#xA;	fastcgi_param  CONTENT_TYPE       $content_type;&#xD;&#xA;	fastcgi_param  CONTENT_LENGTH     $content_length;&#xD;&#xA;	fastcgi_param  SCRIPT_NAME        $fastcgi_script_name;&#xD;&#xA;	fastcgi_param  REQUEST_URI        $request_uri;&#xD;&#xA;	fastcgi_param  DOCUMENT_URI       $document_uri;&#xD;&#xA;	fastcgi_param  DOCUMENT_ROOT      $document_root;&#xD;&#xA;	fastcgi_param  SERVER_PROTOCOL    $server_protocol;&#xD;&#xA;	fastcgi_param  REQUEST_SCHEME     $scheme;&#xD;&#xA;	fastcgi_param  HTTPS              $https if_not_empty;&#xD;&#xA;	fastcgi_param  GATEWAY_INTERFACE  CGI/1.1;&#xD;&#xA;	fastcgi_param  SERVER_SOFTWARE    nginx/$nginx_version;&#xD;&#xA;	fastcgi_param  REMOTE_ADDR        $remote_addr;&#xD;&#xA;	fastcgi_param  REMOTE_PORT        $remote_port;&#xD;&#xA;	fastcgi_param  SERVER_ADDR        $server_addr;&#xD;&#xA;	fastcgi_param  SERVER_PORT        $server_port;&#xD;&#xA;	fastcgi_param  SERVER_NAME        $server_name;&#xD;&#xA;	# PHP only, required if PHP was built with --enable-force-cgi-redirect&#xD;&#xA;	fastcgi_param  REDIRECT_STATUS    200;"
4504875590470092702,20,7,"        <android.support.v4.view.ViewPager xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;    xmlns:tools=""http://schemas.android.com/tools""&#xD;&#xA;    android:id=""@+id/pager""&#xD;&#xA;    android:layout_width=""match_parent""&#xD;&#xA;    android:layout_height=""match_parent""&#xD;&#xA;    tools:context="".MainActivity"" >&#xD;&#xA;    <!--&#xD;&#xA;    This title strip will display the currently visible page title, as well as the page&#xD;&#xA;    titles for adjacent pages.&#xD;&#xA;    -->&#xD;&#xA;    <android.support.v4.view.PagerTitleStrip&#xD;&#xA;        android:id=""@+id/pager_title_strip""&#xD;&#xA;        android:layout_width=""match_parent""&#xD;&#xA;        android:layout_height=""wrap_content""&#xD;&#xA;        android:layout_gravity=""top""&#xD;&#xA;        android:background=""#33b5e5""&#xD;&#xA;        android:paddingBottom=""4dp""&#xD;&#xA;        android:paddingTop=""4dp""&#xD;&#xA;        android:textColor=""#fff"" />&#xD;&#xA;    </android.support.v4.view.ViewPager>"
9021348330889796731,21,7,"	>>> import this&#xD;&#xA;	The Zen of Python, by Tim Peters&#xD;&#xA;	Beautiful is better than ugly.&#xD;&#xA;	Explicit is better than implicit.&#xD;&#xA;	Simple is better than complex.&#xD;&#xA;	Complex is better than complicated.&#xD;&#xA;	Flat is better than nested.&#xD;&#xA;	Sparse is better than dense.&#xD;&#xA;	Readability counts.&#xD;&#xA;	Special cases aren't special enough to break the rules.&#xD;&#xA;	Although practicality beats purity.&#xD;&#xA;	Errors should never pass silently.&#xD;&#xA;	Unless explicitly silenced.&#xD;&#xA;	In the face of ambiguity, refuse the temptation to guess.&#xD;&#xA;	There should be one-- and preferably only one --obvious way to do it.&#xD;&#xA;	Although that way may not be obvious at first unless you're Dutch.&#xD;&#xA;	Now is better than never.&#xD;&#xA;	Although never is often better than *right* now.&#xD;&#xA;	If the implementation is hard to explain, it's a bad idea.&#xD;&#xA;	If the implementation is easy to explain, it may be a good idea.&#xD;&#xA;	Namespaces are one honking great idea -- let's do more of those!"
2968521476674548071,22,7,"    <?xml version=""1.0"" encoding=""utf-8""?>&#xD;&#xA;    <menu xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;        xmlns:app=""http://schemas.android.com/apk/res-auto"">&#xD;&#xA;        <item&#xD;&#xA;            android:id=""@+id/action_favorites""&#xD;&#xA;            android:enabled=""true""&#xD;&#xA;            android:icon=""@drawable/ic_favorite_white_24dp""&#xD;&#xA;            android:title=""@string/text_favorites""&#xD;&#xA;            app:showAsAction=""ifRoom"" />&#xD;&#xA;        <item&#xD;&#xA;            android:id=""@+id/action_schedules""&#xD;&#xA;            android:enabled=""true""&#xD;&#xA;            android:icon=""@drawable/ic_access_time_white_24dp""&#xD;&#xA;            android:title=""@string/text_schedules""&#xD;&#xA;            app:showAsAction=""ifRoom"" />&#xD;&#xA;        <item&#xD;&#xA;            android:id=""@+id/action_music""&#xD;&#xA;            android:enabled=""true""&#xD;&#xA;            android:icon=""@drawable/ic_audiotrack_white_24dp""&#xD;&#xA;            android:title=""@string/text_music""&#xD;&#xA;            app:showAsAction=""ifRoom"" />&#xD;&#xA;    </menu>"
-2525650162212549013,22,7,"          <!-- Button trigger modal -->&#xD;&#xA;    <button class=""btn btn-primary btn-lg"" data-toggle=""modal"" data-target=""#myModal"">&#xD;&#xA;      Launch demo modal&#xD;&#xA;    </button>&#xD;&#xA;    <!-- Modal -->&#xD;&#xA;    <div class=""modal fade"" id=""myModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"">&#xD;&#xA;      <div class=""modal-dialog"">&#xD;&#xA;        <div class=""modal-content"">&#xD;&#xA;          <div class=""modal-header"">&#xD;&#xA;            <button type=""button"" class=""close"" data-dismiss=""modal"" aria-hidden=""true"">&times;</button>&#xD;&#xA;            <h4 class=""modal-title"" id=""myModalLabel"">Modal title</h4>&#xD;&#xA;          </div>&#xD;&#xA;          <div class=""modal-body"">&#xD;&#xA;            ...&#xD;&#xA;          </div>&#xD;&#xA;          <div class=""modal-footer"">&#xD;&#xA;            <button type=""button"" class=""btn btn-default"" data-dismiss=""modal"">Close</button>&#xD;&#xA;            <button type=""button"" class=""btn btn-primary"">Save changes</button>&#xD;&#xA;          </div>&#xD;&#xA;        </div>&#xD;&#xA;      </div>&#xD;&#xA;    </div>"
5933491443417784140,23,7,"    version: '3'&#xD;&#xA;    &#xD;&#xA;    services:&#xD;&#xA;      db:&#xD;&#xA;        image: postgres&#xD;&#xA;        environment:&#xD;&#xA;          POSTGRES_USER: aso&#xD;&#xA;          POSTGRES_PASSWORD: somepass&#xD;&#xA;      django:&#xD;&#xA;        build: .&#xD;&#xA;        command: python3 MainDirectory/backend/myProject/manage.py runserver 0.0.0.0:8001&#xD;&#xA;        volumes:&#xD;&#xA;          - .:/code&#xD;&#xA;        ports:&#xD;&#xA;          - ""8001:8001""&#xD;&#xA;        depends_on:&#xD;&#xA;          - db&#xD;&#xA;      angular:&#xD;&#xA;        build: MainDirectory/frontend&#xD;&#xA;        ports:&#xD;&#xA;          - ""4200:4200""&#xD;&#xA;        depends_on:&#xD;&#xA;          - django"
-1287625931860734414,23,7,"				    switch (json_last_error()) {&#xD;&#xA;					case JSON_ERROR_NONE:&#xD;&#xA;					    echo ' - No errors';&#xD;&#xA;					break;&#xD;&#xA;					case JSON_ERROR_DEPTH:&#xD;&#xA;					    echo ' - Maximum stack depth exceeded';&#xD;&#xA;					break;&#xD;&#xA;					case JSON_ERROR_STATE_MISMATCH:&#xD;&#xA;					    echo ' - Underflow or the modes mismatch';&#xD;&#xA;					break;&#xD;&#xA;					case JSON_ERROR_CTRL_CHAR:&#xD;&#xA;					    echo ' - Unexpected control character found';&#xD;&#xA;					break;&#xD;&#xA;					case JSON_ERROR_SYNTAX:&#xD;&#xA;					    echo ' - Syntax error, malformed JSON';&#xD;&#xA;					break;&#xD;&#xA;					case JSON_ERROR_UTF8:&#xD;&#xA;					    echo ' - Malformed UTF-8 characters, possibly incorrectly encoded';&#xD;&#xA;					break;&#xD;&#xA;					default:&#xD;&#xA;					    echo ' - Unknown error';&#xD;&#xA;					break;&#xD;&#xA;				    }"
-1660629039029144163,23,7,"    <Style x:Key=""RadioButtonListBoxStyle"" TargetType=""{x:Type ListBox}"">&#xD;&#xA;        <Setter Property=""BorderBrush"" Value=""Transparent""/>&#xD;&#xA;        <Setter Property=""KeyboardNavigation.DirectionalNavigation"" Value=""Cycle"" />&#xD;&#xA;        <Setter Property=""ItemContainerStyle"">&#xD;&#xA;            <Setter.Value>&#xD;&#xA;                <Style TargetType=""{x:Type ListBoxItem}"" >&#xD;&#xA;                    <Setter Property=""Margin"" Value=""2, 2, 2, 0"" />&#xD;&#xA;                    <Setter Property=""Template"">&#xD;&#xA;                        <Setter.Value>&#xD;&#xA;                            <ControlTemplate>&#xD;&#xA;                                <Border Background=""Transparent"">&#xD;&#xA;                                    <RadioButton&#xD;&#xA;                                        Content=""{TemplateBinding ContentPresenter.Content}"" VerticalAlignment=""Center""&#xD;&#xA;                                        IsChecked=""{Binding Path=IsSelected,RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}""/>&#xD;&#xA;                                    &#xD;&#xA;                                </Border>&#xD;&#xA;                            </ControlTemplate>&#xD;&#xA;                        </Setter.Value>&#xD;&#xA;                    </Setter>&#xD;&#xA;                </Style>&#xD;&#xA;            </Setter.Value>&#xD;&#xA;        </Setter>&#xD;&#xA;    </Style>"
1285258962606565063,23,7,"        <!DOCTYPE html>&#xD;&#xA;    <html xmlns=""http://www.w3.org/1999/xhtml"" xmlns:th=""http://www.thymeleaf.org"" xmlns:sec=""http://www.thymeleaf.org/thymeleaf-extras-springsecurity3"">&#xD;&#xA;    <head>&#xD;&#xA;    <title>Spring Security Example</title>&#xD;&#xA;    </head>&#xD;&#xA;    <body>&#xD;&#xA;    	<div th:if=""${param.error}"">Invalid username and password.</div>&#xD;&#xA;    	<div th:if=""${param.logout}"">You have been logged out.</div>&#xD;&#xA;    	<form th:action=""@{/login}"" method=""post"">&#xD;&#xA;    		<div>&#xD;&#xA;    			<label> User Name : <input type=""text"" name=""username"" />&#xD;&#xA;    			</label>&#xD;&#xA;    		</div>&#xD;&#xA;    		<div>&#xD;&#xA;    			<label> Password: <input type=""password"" name=""password"" />&#xD;&#xA;    			</label>&#xD;&#xA;    		</div>&#xD;&#xA;    		<div>&#xD;&#xA;    			<input type=""submit"" value=""Sign In"" />&#xD;&#xA;    		</div>&#xD;&#xA;    	</form>&#xD;&#xA;    </body>&#xD;&#xA;    </html>"
-2129541815821626723,23,7,"     <?php&#xD;&#xA;     namespace App;&#xD;&#xA;     use Illuminate\Notifications\Notifiable;&#xD;&#xA;     use Illuminate\Foundation\Auth\User as Authenticatable;&#xD;&#xA;     class User extends Authenticatable&#xD;&#xA;     {&#xD;&#xA;    use Notifiable;&#xD;&#xA;    /**&#xD;&#xA;     * The attributes that are mass assignable.&#xD;&#xA;     *&#xD;&#xA;     * @var array&#xD;&#xA;     */&#xD;&#xA;    protected $fillable = [&#xD;&#xA;        'name', 'email', 'password',&#xD;&#xA;    ];&#xD;&#xA;    /**&#xD;&#xA;     * The attributes that should be hidden for arrays.&#xD;&#xA;     *&#xD;&#xA;     * @var array&#xD;&#xA;     */&#xD;&#xA;    protected $hidden = [&#xD;&#xA;        'password', 'remember_token',&#xD;&#xA;    ];"
-5317856726261573023,24,7,	<context-param>&#xD;&#xA;		<param-name>contextConfigLocation</param-name>&#xD;&#xA;		<param-value>/WEB-INF/spring/root-context.xml</param-value>&#xD;&#xA;	</context-param>&#xD;&#xA;	&#xD;&#xA;	<!-- Creates the Spring Container shared by all Servlets and Filters -->&#xD;&#xA;	<listener>&#xD;&#xA;		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>&#xD;&#xA;	</listener>&#xD;&#xA;	<!-- Processes application requests -->&#xD;&#xA;	<servlet>&#xD;&#xA;		<servlet-name>appServlet</servlet-name>&#xD;&#xA;		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>&#xD;&#xA;		<init-param>&#xD;&#xA;			<param-name>contextConfigLocation</param-name>&#xD;&#xA;			<param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value>&#xD;&#xA;		</init-param>&#xD;&#xA;		<load-on-startup>1</load-on-startup>&#xD;&#xA;	</servlet>&#xD;&#xA;		&#xD;&#xA;	<servlet-mapping>&#xD;&#xA;		<servlet-name>appServlet</servlet-name>&#xD;&#xA;		<url-pattern>/</url-pattern>&#xD;&#xA;	</servlet-mapping>
273883331500495339,24,7,"    	<nav class=""navbar navbar-toggleable-md navbar-light bg-faded"">&#xD;&#xA;      <button class=""navbar-toggler navbar-toggler-right"" type=""button"" data-toggle=""collapse"" data-target=""#navbarSupportedContent"" aria-controls=""navbarSupportedContent"" aria-expanded=""false"" aria-label=""Toggle navigation"">&#xD;&#xA;        <span class=""navbar-toggler-icon""></span>&#xD;&#xA;      </button>&#xD;&#xA;      <a class=""navbar-brand"" href=""#"">Navbar</a>&#xD;&#xA;    &#xD;&#xA;      <div class=""collapse navbar-collapse"" id=""navbarSupportedContent"">&#xD;&#xA;        <ul class=""navbar-nav mr-auto"">&#xD;&#xA;          <li class=""nav-item active"">&#xD;&#xA;            <a class=""nav-link"" href=""#"">Home <span class=""sr-only"">(current)</span></a>&#xD;&#xA;          </li>&#xD;&#xA;          <li class=""nav-item"">&#xD;&#xA;            <a class=""nav-link"" href=""#"">Link</a>&#xD;&#xA;          </li>&#xD;&#xA;          <li class=""nav-item"">&#xD;&#xA;            <a class=""nav-link disabled"" href=""#"">Disabled</a>&#xD;&#xA;          </li>&#xD;&#xA;        </ul>&#xD;&#xA;        <form class=""form-inline my-2 my-lg-0"">&#xD;&#xA;          <input class=""form-control mr-sm-2"" type=""text"" placeholder=""Search"">&#xD;&#xA;          <button class=""btn btn-outline-success my-2 my-sm-0"" type=""submit"">Search</button>&#xD;&#xA;        </form>&#xD;&#xA;      </div>&#xD;&#xA;    </nav>"
-7606616859300897205,25,7,"    <android.support.percent.PercentRelativeLayout&#xD;&#xA;        xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;        xmlns:app=""http://schemas.android.com/apk/res-auto""&#xD;&#xA;        android:layout_width=""match_parent""&#xD;&#xA;        android:layout_height=""match_parent"">&#xD;&#xA;        <TextView&#xD;&#xA;            android:id=""@+id/fifty_huntv""&#xD;&#xA;            android:layout_width=""0dp""&#xD;&#xA;            android:layout_height=""0dp""&#xD;&#xA;            android:background=""#ff7acfff""&#xD;&#xA;            android:text=""20% - 50%""&#xD;&#xA;            android:textColor=""@android:color/white""&#xD;&#xA;            app:layout_heightPercent=""20%""&#xD;&#xA;            app:layout_widthPercent=""50%"" />&#xD;&#xA;        <TextView&#xD;&#xA;            android:layout_width=""0dp""&#xD;&#xA;            android:layout_height=""0dp""&#xD;&#xA;            android:layout_toRightOf=""@id/fifty_huntv""&#xD;&#xA;            android:background=""#ffff5566""&#xD;&#xA;            android:text=""80%-50%""&#xD;&#xA;            app:layout_heightPercent=""80%""&#xD;&#xA;            app:layout_widthPercent=""50%""&#xD;&#xA;            />&#xD;&#xA;    &#xD;&#xA;    </android.support.percent.PercentRelativeLayout>"
1509722767604417151,25,7,"        <?xml version=""1.0"" encoding=""utf-8""?>&#xD;&#xA;    <android.support.v4.widget.DrawerLayout xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;        xmlns:app=""http://schemas.android.com/apk/res-auto""&#xD;&#xA;        xmlns:tools=""http://schemas.android.com/tools""&#xD;&#xA;        android:id=""@+id/drawer_layout""&#xD;&#xA;        android:layout_width=""match_parent""&#xD;&#xA;        android:layout_height=""match_parent""&#xD;&#xA;        android:fitsSystemWindows=""true""&#xD;&#xA;        tools:openDrawer=""start"">&#xD;&#xA;    &#xD;&#xA;        <include&#xD;&#xA;            layout=""@layout/app_bar_main2""&#xD;&#xA;            android:layout_width=""match_parent""&#xD;&#xA;            android:layout_height=""match_parent"" />&#xD;&#xA;    &#xD;&#xA;        <android.support.design.widget.NavigationView&#xD;&#xA;            android:id=""@+id/nav_view""&#xD;&#xA;            android:layout_width=""wrap_content""&#xD;&#xA;            android:layout_height=""match_parent""&#xD;&#xA;            android:layout_gravity=""start""&#xD;&#xA;            android:fitsSystemWindows=""true""&#xD;&#xA;            app:headerLayout=""@layout/nav_header_main2""&#xD;&#xA;            app:menu=""@menu/activity_main2_drawer"" />&#xD;&#xA;    &#xD;&#xA;    </android.support.v4.widget.DrawerLayout>"
4455399961956540780,25,7,"    <?xml version=""1.0"" encoding=""UTF-8""?>&#xD;&#xA;    <web-app xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""&#xD;&#xA;	xmlns=""http://xmlns.jcp.org/xml/ns/javaee""&#xD;&#xA;	xsi:schemaLocation=""http://xmlns.jcp.org/xml/ns/javaee &#xD;&#xA;    http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd""&#xD;&#xA;	id=""WebApp_ID"" version=""3.1"">&#xD;&#xA;	<display-name>spring-mvc-demo</display-name>&#xD;&#xA;	<!-- Spring MVC Configs -->&#xD;&#xA;	<!-- Step 1: Configure Spring MVC Dispatcher Servlet -->&#xD;&#xA;	<servlet>&#xD;&#xA;		<servlet-name>dispatcher</servlet-name>&#xD;&#xA;		<servlet- &#xD;&#xA;        class>org.springframework.web.servlet.DispatcherServlet</servlet-class>&#xD;&#xA;		<init-param>&#xD;&#xA;			<param-name>contextConfigLocation</param-name>&#xD;&#xA;			<param-value>/WEB-INF/spring-mvc-demo-servlet.xml</param-value>&#xD;&#xA;		</init-param>&#xD;&#xA;		<load-on-startup>1</load-on-startup>&#xD;&#xA;	</servlet>&#xD;&#xA;	<!-- Step 2: Set up URL mapping for Spring MVC Dispatcher Servlet -->&#xD;&#xA;	<servlet-mapping>&#xD;&#xA;		<servlet-name>dispatcher</servlet-name>&#xD;&#xA;        <url-pattern>/*</url-pattern>&#xD;&#xA;	</servlet-mapping>&#xD;&#xA;    </web-app>"
1183278166022604516,26,7,"	<VirtualHost *:80>&#xD;&#xA;		ServerAdmin webmaster@localhost&#xD;&#xA;		DocumentRoot /var/www&#xD;&#xA;		<Directory />&#xD;&#xA;			Options FollowSymLinks&#xD;&#xA;			AllowOverride None&#xD;&#xA;		</Directory>&#xD;&#xA;		<Directory /var/www/>&#xD;&#xA;			Options Indexes FollowSymLinks MultiViews&#xD;&#xA;			AllowOverride None&#xD;&#xA;			Order allow,deny&#xD;&#xA;			allow from all&#xD;&#xA;		</Directory>&#xD;&#xA;		ScriptAlias /cgi-bin/ /usr/lib/cgi-bin/&#xD;&#xA;		<Directory ""/usr/lib/cgi-bin"">&#xD;&#xA;			AllowOverride None&#xD;&#xA;			Options +ExecCGI -MultiViews +SymLinksIfOwnerMatch&#xD;&#xA;			Order allow,deny&#xD;&#xA;			Allow from all&#xD;&#xA;		</Directory>&#xD;&#xA;		ErrorLog ${APACHE_LOG_DIR}/error.log&#xD;&#xA;		# Possible values include: debug, info, notice, warn, error, crit,&#xD;&#xA;		# alert, emerg.&#xD;&#xA;		LogLevel warn&#xD;&#xA;		CustomLog ${APACHE_LOG_DIR}/access.log combined&#xD;&#xA;	</VirtualHost>"
-9012697084987678731,26,7,"    <IfModule mod_deflate.c>&#xD;&#xA;        SetOutputFilter DEFLATE&#xD;&#xA;        <IfModule mod_setenvif.c>&#xD;&#xA;            # Netscape 4.x has some problems...&#xD;&#xA;            BrowserMatch ^Mozilla/4 gzip-only-text/html&#xD;&#xA;            &#xD;&#xA;            # Netscape 4.06-4.08 have some more problems&#xD;&#xA;            BrowserMatch ^Mozilla/4\.0[678] no-gzip&#xD;&#xA;            &#xD;&#xA;            # MSIE masquerades as Netscape, but it is fine&#xD;&#xA;            # BrowserMatch \bMSIE !no-gzip !gzip-only-text/html&#xD;&#xA;            &#xD;&#xA;            # NOTE: Due to a bug in mod_setenvif up to Apache 2.0.48&#xD;&#xA;            # the above regex won't work. You can use the following&#xD;&#xA;            # workaround to get the desired effect:&#xD;&#xA;            BrowserMatch \bMSI[E] !no-gzip !gzip-only-text/html&#xD;&#xA;            &#xD;&#xA;            # Don't compress images&#xD;&#xA;            SetEnvIfNoCase Request_URI .(?:gif|jpe?g|png)$ no-gzip dont-vary&#xD;&#xA;        </IfModule>&#xD;&#xA;        &#xD;&#xA;        <IfModule mod_headers.c>&#xD;&#xA;            # Make sure proxies don't deliver the wrong content&#xD;&#xA;            Header append Vary User-Agent env=!dont-vary&#xD;&#xA;        </IfModule>&#xD;&#xA;    </IfModule>"
-7431863138204447294,27,7,"    <?xml version=""1.0"" encoding=""utf-8""?>&#xD;&#xA;    <TabHost xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;        android:id=""@android:id/tabhost""&#xD;&#xA;        android:layout_width=""fill_parent""&#xD;&#xA;        android:layout_height=""fill_parent"" >&#xD;&#xA;    &#xD;&#xA;        <RelativeLayout&#xD;&#xA;            android:layout_width=""fill_parent""&#xD;&#xA;            android:layout_height=""fill_parent""&#xD;&#xA;            android:orientation=""vertical""&#xD;&#xA;            android:padding=""3dp"" >&#xD;&#xA;    &#xD;&#xA;            <FrameLayout&#xD;&#xA;                android:id=""@android:id/tabcontent""&#xD;&#xA;                android:layout_width=""fill_parent""&#xD;&#xA;                android:layout_height=""fill_parent""&#xD;&#xA;                android:layout_above=""@android:id/tabs""&#xD;&#xA;                android:layout_weight=""1"" />&#xD;&#xA;    &#xD;&#xA;            <TabWidget&#xD;&#xA;                android:id=""@android:id/tabs""&#xD;&#xA;                android:layout_width=""fill_parent""&#xD;&#xA;                android:layout_height=""wrap_content""&#xD;&#xA;                android:layout_alignParentBottom=""true"" />&#xD;&#xA;        </RelativeLayout>&#xD;&#xA;    &#xD;&#xA;    </TabHost>"
-7616880549903751700,27,7,"    Sub DAOFromExcelToAccess()&#xD;&#xA;    ' exports data from the active worksheet to a table in an Access database&#xD;&#xA;    ' this procedure must be edited before use&#xD;&#xA;    Dim db As Database, rs As Recordset, r As Long&#xD;&#xA;        Set db = OpenDatabase(""C:\FolderName\DataBaseName.mdb"") &#xD;&#xA;        ' open the database&#xD;&#xA;        Set rs = db.OpenRecordset(""TableName"", dbOpenTable) &#xD;&#xA;        ' get all records in a table&#xD;&#xA;        r = 3 ' the start row in the worksheet&#xD;&#xA;        Do While Len(Range(""A"" & r).Formula) > 0 &#xD;&#xA;        ' repeat until first empty cell in column A&#xD;&#xA;            With rs&#xD;&#xA;                .AddNew ' create a new record&#xD;&#xA;                ' add values to each field in the record&#xD;&#xA;                .Fields(""FieldName1"") = Range(""A"" & r).Value&#xD;&#xA;                .Fields(""FieldName2"") = Range(""B"" & r).Value&#xD;&#xA;                .Fields(""FieldNameN"") = Range(""C"" & r).Value&#xD;&#xA;                ' add more fields if necessary...&#xD;&#xA;                .Update ' stores the new record&#xD;&#xA;            End With&#xD;&#xA;            r = r + 1 ' next row&#xD;&#xA;        Loop&#xD;&#xA;        rs.Close&#xD;&#xA;        Set rs = Nothing&#xD;&#xA;        db.Close&#xD;&#xA;        Set db = Nothing&#xD;&#xA;    End Sub"
5601408684321156395,28,7,"    class DeviseCreateUsers < ActiveRecord::Migration&#xD;&#xA;      def self.up&#xD;&#xA;        create_table(:users) do |t|&#xD;&#xA;          t.database_authenticatable :null => false&#xD;&#xA;          t.recoverable&#xD;&#xA;          t.rememberable&#xD;&#xA;          t.trackable&#xD;&#xA;    &#xD;&#xA;          # t.encryptable&#xD;&#xA;          # t.confirmable&#xD;&#xA;          # t.lockable :lock_strategy => :failed_attempts, :unlock_strategy => :both&#xD;&#xA;          # t.token_authenticatable&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;          t.timestamps&#xD;&#xA;        end&#xD;&#xA;    &#xD;&#xA;        add_index :users, :email,                :unique => true&#xD;&#xA;        add_index :users, :reset_password_token, :unique => true&#xD;&#xA;        # add_index :users, :confirmation_token,   :unique => true&#xD;&#xA;        # add_index :users, :unlock_token,         :unique => true&#xD;&#xA;        # add_index :users, :authentication_token, :unique => true&#xD;&#xA;      end&#xD;&#xA;    &#xD;&#xA;      def self.down&#xD;&#xA;        drop_table :users&#xD;&#xA;      end&#xD;&#xA;    end"
7794977556085010624,29,7,"    (UIImage *)convertImageToGrayScale:(UIImage *)image&#xD;&#xA;    {&#xD;&#xA;      // Create image rectangle with current image width/height&#xD;&#xA;      CGRect imageRect = CGRectMake(0, 0, image.size.width, image.size.height);&#xD;&#xA; &#xD;&#xA;      // Grayscale color space&#xD;&#xA;      CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceGray();&#xD;&#xA; &#xD;&#xA;      // Create bitmap content with current image size and grayscale colorspace&#xD;&#xA;      CGContextRef context = CGBitmapContextCreate(nil, image.size.width, image.size.height, 8, 0,   colorSpace, kCGImageAlphaNone);&#xD;&#xA; &#xD;&#xA;      // Draw image into current context, with specified rectangle&#xD;&#xA;      // using previously defined context (with grayscale colorspace)&#xD;&#xA;      CGContextDrawImage(context, imageRect, [image CGImage]);&#xD;&#xA; &#xD;&#xA;      // Create bitmap image info from pixel data in current context&#xD;&#xA;      CGImageRef imageRef = CGBitmapContextCreateImage(context);&#xD;&#xA; &#xD;&#xA;      // Create a new UIImage object  &#xD;&#xA;      UIImage *newImage = [UIImage imageWithCGImage:imageRef];&#xD;&#xA; &#xD;&#xA;      // Release colorspace, context and bitmap information&#xD;&#xA;      CGColorSpaceRelease(colorSpace);&#xD;&#xA;      CGContextRelease(context);&#xD;&#xA;      CFRelease(imageRef);&#xD;&#xA; &#xD;&#xA;      // Return the new grayscale image&#xD;&#xA;      return newImage;&#xD;&#xA;    }"
-8433953513507548904,30,7,"     <bookstore>&#xD;&#xA;      <book category=""COOKING"">&#xD;&#xA;      <title lang=""en"">Everyday Italian</title>&#xD;&#xA;      <author>Giada De Laurentiis</author>&#xD;&#xA;      <year>2005</year>&#xD;&#xA;      <price>30.00</price>&#xD;&#xA;      </book>&#xD;&#xA;      <book category=""CHILDREN"">&#xD;&#xA;      <title lang=""en"">Harry Potter</title>&#xD;&#xA;      <author>J K. Rowling</author>&#xD;&#xA;      <year>2005</year>&#xD;&#xA;      <price>29.99</price>&#xD;&#xA;      </book>&#xD;&#xA;      <book category=""WEB"">&#xD;&#xA;      <title lang=""en"">XQuery Kick Start</title>&#xD;&#xA;      <author>James McGovern</author>&#xD;&#xA;      <author>Per Bothner</author>&#xD;&#xA;      <author>Kurt Cagle</author>&#xD;&#xA;      <author>James Linn</author>&#xD;&#xA;      <author>Vaidyanathan Nagarajan</author>&#xD;&#xA;      <year>2003</year>&#xD;&#xA;      <price>49.99</price>&#xD;&#xA;      </book>&#xD;&#xA;      <book category=""WEB"">&#xD;&#xA;      <title lang=""en"">Learning XML</title>&#xD;&#xA;      <author>Erik T. Ray</author>&#xD;&#xA;      <year>2003</year>&#xD;&#xA;      <price>39.95</price>&#xD;&#xA;      </book>&#xD;&#xA;     </bookstore>"
-3649299141471801193,31,7,"    <!DOCTYPE html>&#xD;&#xA;    <html>&#xD;&#xA;      <head>&#xD;&#xA;        <script src=""//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js""></script>&#xD;&#xA;        <script>&#xD;&#xA;        $(function() {&#xD;&#xA;          &#xD;&#xA;        });&#xD;&#xA;        function updateSS(i,j)&#xD;&#xA;        {&#xD;&#xA;          var str='#txt' + String(i) + String(j);&#xD;&#xA;          var value=$(str).val();&#xD;&#xA;          $(str).css('background-color','#ffff00');&#xD;&#xA;          google.script.run&#xD;&#xA;             .withSuccessHandler(successHandler)&#xD;&#xA;             .updateSpreadsheet(i,j,value)&#xD;&#xA;        }&#xD;&#xA;        function successHandler(data)&#xD;&#xA;        {&#xD;&#xA;          $('#success').text(data.message);&#xD;&#xA;          $('#txt' + data.ridx + data.cidx).css('background-color','#ffffff');&#xD;&#xA;        }&#xD;&#xA;        console.log('My Code');&#xD;&#xA;        </script>&#xD;&#xA;        <style>&#xD;&#xA;          th{text-align:left}&#xD;&#xA;        </style>&#xD;&#xA;      </head>&#xD;&#xA;      <body>&#xD;&#xA;      <div id=""success""></div>&#xD;&#xA;    "
6767177024937218971,31,7,"    In addition, substitution of FOR variable references has been enhanced.&#xD;&#xA;    You can now use the following optional syntax:&#xD;&#xA;    %~I         - expands %I removing any surrounding quotes ("")&#xD;&#xA;    %~fI        - expands %I to a fully qualified path name&#xD;&#xA;    %~dI        - expands %I to a drive letter only&#xD;&#xA;    %~pI        - expands %I to a path only&#xD;&#xA;    %~nI        - expands %I to a file name only&#xD;&#xA;    %~xI        - expands %I to a file extension only&#xD;&#xA;    %~sI        - expanded path contains short names only&#xD;&#xA;    %~aI        - expands %I to file attributes of file&#xD;&#xA;    %~tI        - expands %I to date/time of file&#xD;&#xA;    %~zI        - expands %I to size of file&#xD;&#xA;    %~$PATH:I   - searches the directories listed in the PATH&#xD;&#xA;                   environment variable and expands %I to the&#xD;&#xA;                   fully qualified name of the first one found.&#xD;&#xA;                   If the environment variable name is not&#xD;&#xA;                   defined or the file is not found by the&#xD;&#xA;                   search, then this modifier expands to the&#xD;&#xA;                   empty string&#xD;&#xA;    The modifiers can be combined to get compound results:&#xD;&#xA;    %~dpI       - expands %I to a drive letter and path only&#xD;&#xA;    %~nxI       - expands %I to a file name and extension only&#xD;&#xA;    %~fsI       - expands %I to a full path name with short names only&#xD;&#xA;    %~dp$PATH:I - searches the directories listed in the PATH&#xD;&#xA;                   environment variable for %I and expands to the&#xD;&#xA;                   drive letter and path of the first one found.&#xD;&#xA;    %~ftzaI     - expands %I to a DIR like output line&#xD;&#xA;    In the above examples %I and PATH can be replaced by other valid&#xD;&#xA;    values.  The %~ syntax is terminated by a valid FOR variable name.&#xD;&#xA;    Picking upper case variable names like %I makes it more readable and&#xD;&#xA;    avoids confusion with the modifiers, which are not case sensitive."
9212283162113982853,31,7,"        require_once('../class.phpmailer.php');&#xD;&#xA;		 &#xD;&#xA;        //include(""class.smtp.php""); // optional, gets called from within class.phpmailer.php if not already loaded&#xD;&#xA;		$mail             = new PHPMailer();&#xD;&#xA;		$body             = file_get_contents('contents.html');&#xD;&#xA;		$body             = eregi_replace(""[\]"",'',$body);&#xD;&#xA;		$mail->IsSMTP(); // telling the class to use SMTP&#xD;&#xA;		$mail->Host       = ""mail.yourdomain.com""; // SMTP server&#xD;&#xA;		$mail->SMTPDebug  = 2;                     // enables SMTP debug information (for testing)&#xD;&#xA;		                                           // 1 = errors and messages&#xD;&#xA;		                                           // 2 = messages only&#xD;&#xA;		$mail->SMTPAuth   = true;                  // enable SMTP authentication&#xD;&#xA;		$mail->Host       = ""mail.yourdomain.com""; // sets the SMTP server&#xD;&#xA;		$mail->Port       = 26;                    // set the SMTP port for the GMAIL server&#xD;&#xA;		$mail->Username   = ""yourname@yourdomain""; // SMTP account username&#xD;&#xA;		$mail->Password   = ""yourpassword"";        // SMTP account password&#xD;&#xA;		$mail->SetFrom('name@yourdomain.com', 'First Last');&#xD;&#xA;		$mail->AddReplyTo(""name@yourdomain.com"",""First Last"");&#xD;&#xA;		$mail->Subject    = ""PHPMailer Test Subject via smtp, basic with authentication"";&#xD;&#xA;		$mail->AltBody    = ""To view the message, please use an HTML compatible email viewer!""; // optional, comment out and test&#xD;&#xA;		$mail->MsgHTML($body);&#xD;&#xA;		$address = ""whoto@otherdomain.com"";&#xD;&#xA;		$mail->AddAddress($address, ""John Doe"");&#xD;&#xA;		$mail->AddAttachment(""images/phpmailer.gif"");      // attachment&#xD;&#xA;		$mail->AddAttachment(""images/phpmailer_mini.gif""); // attachment&#xD;&#xA;		if(!$mail->Send()) {&#xD;&#xA;		  echo ""Mailer Error: "" . $mail->ErrorInfo;&#xD;&#xA;		} else {&#xD;&#xA;		  echo ""Message sent!"";&#xD;&#xA;		}&#xD;&#xA;		    "
-626661735748945664,31,7,"       // create the view that will execute our animation&#xD;&#xA;     UIImageView* campFireView = [[UIImageView alloc] initWithFrame:self.view.frame];&#xD;&#xA;     &#xD;&#xA;     // load all the frames of our animation&#xD;&#xA;     campFireView.animationImages = [NSArray arrayWithObjects:    &#xD;&#xA;                                 [UIImage imageNamed:@""campFire01.gif""],&#xD;&#xA;                                 [UIImage imageNamed:@""campFire02.gif""],&#xD;&#xA;                                 [UIImage imageNamed:@""campFire03.gif""],&#xD;&#xA;                                 [UIImage imageNamed:@""campFire04.gif""],&#xD;&#xA;                                 [UIImage imageNamed:@""campFire05.gif""],&#xD;&#xA;                                 [UIImage imageNamed:@""campFire06.gif""],&#xD;&#xA;                                 [UIImage imageNamed:@""campFire07.gif""],&#xD;&#xA;                                 [UIImage imageNamed:@""campFire08.gif""],&#xD;&#xA;                                 [UIImage imageNamed:@""campFire09.gif""],&#xD;&#xA;                                 [UIImage imageNamed:@""campFire10.gif""],&#xD;&#xA;                                 [UIImage imageNamed:@""campFire11.gif""],&#xD;&#xA;                                 [UIImage imageNamed:@""campFire12.gif""],&#xD;&#xA;                                 [UIImage imageNamed:@""campFire13.gif""],&#xD;&#xA;                                 [UIImage imageNamed:@""campFire14.gif""],&#xD;&#xA;                                 [UIImage imageNamed:@""campFire15.gif""],&#xD;&#xA;                                 [UIImage imageNamed:@""campFire16.gif""],&#xD;&#xA;                                 [UIImage imageNamed:@""campFire17.gif""], nil];&#xD;&#xA;     &#xD;&#xA;     // all frames will execute in 1.75 seconds&#xD;&#xA;     campFireView.animationDuration = 1.75;&#xD;&#xA;     // repeat the annimation forever&#xD;&#xA;     campFireView.animationRepeatCount = 0;&#xD;&#xA;     // start animating&#xD;&#xA;     [campFireView startAnimating];&#xD;&#xA;     // add the animation view to the main window &#xD;&#xA;     [self.view addSubview:campFireView];"
-6848899284629889983,32,7,"          function sortTable(table, col, reverse) {&#xD;&#xA;        var tb = table.tBodies[0], // use `<tbody>` to ignore `<thead>` and `<tfoot>` rows&#xD;&#xA;            tr = Array.prototype.slice.call(tb.rows, 0), // put rows into array&#xD;&#xA;            i;&#xD;&#xA;        reverse = -((+reverse) || -1);&#xD;&#xA;        tr = tr.sort(function (a, b) { // sort rows&#xD;&#xA;            return reverse // `-1 *` if want opposite order&#xD;&#xA;                * (a.cells[col].textContent.trim() // using `.textContent.trim()` for test&#xD;&#xA;                    .localeCompare(b.cells[col].textContent.trim())&#xD;&#xA;                   );&#xD;&#xA;        });&#xD;&#xA;        for(i = 0; i < tr.length; ++i) tb.appendChild(tr[i]); // append each row in order&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    function makeSortable(table) {&#xD;&#xA;        var th = table.tHead, i;&#xD;&#xA;        th && (th = th.rows[0]) && (th = th.cells);&#xD;&#xA;        if (th) i = th.length;&#xD;&#xA;        else return; // if no `<thead>` then do nothing&#xD;&#xA;        while (--i >= 0) (function (i) {&#xD;&#xA;            var dir = 1;&#xD;&#xA;            th[i].addEventListener('click', function () {sortTable(table, i, (dir = 1 - dir))});&#xD;&#xA;        }(i));&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    function makeAllSortable(parent) {&#xD;&#xA;        parent = parent || document.body;&#xD;&#xA;        var t = parent.getElementsByTagName('table'), i = t.length;&#xD;&#xA;        while (--i >= 0) makeSortable(t[i]);&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    window.onload = function () {makeAllSortable();};"
-1147022563321652099,32,7,"       <!DOCTYPE HTML>&#xD;&#xA;    <html>&#xD;&#xA;    <head>&#xD;&#xA;    <style>&#xD;&#xA;    #div1 {width:350px;height:70px;padding:10px;border:1px solid #aaaaaa;}&#xD;&#xA;    </style>&#xD;&#xA;    <script>&#xD;&#xA;    function allowDrop(ev) {&#xD;&#xA;        ev.preventDefault();&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    function drag(ev) {&#xD;&#xA;        ev.dataTransfer.setData(""text"", ev.target.id);&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    function drop(ev) {&#xD;&#xA;        ev.preventDefault();&#xD;&#xA;        var data = ev.dataTransfer.getData(""text"");&#xD;&#xA;        ev.target.appendChild(document.getElementById(data));&#xD;&#xA;    }&#xD;&#xA;    </script>&#xD;&#xA;    </head>&#xD;&#xA;    <body>&#xD;&#xA;    &#xD;&#xA;    <p>Drag the W3Schools image into the rectangle:</p>&#xD;&#xA;    &#xD;&#xA;    <div id=""div1"" ondrop=""drop(event)"" ondragover=""allowDrop(event)""></div>&#xD;&#xA;    <br>&#xD;&#xA;    <img id=""drag1"" src=""img_logo.gif"" draggable=""true"" ondragstart=""drag(event)"" width=""336"" height=""69"">&#xD;&#xA;    &#xD;&#xA;    </body>&#xD;&#xA;    </html>"
4390097984731655937,32,7,"     <?xml version=""1.0""?>&#xD;&#xA;        <catalog>&#xD;&#xA;           <book id=""bk101"">&#xD;&#xA;              <author>Gambardella, Matthew</author>&#xD;&#xA;              <title>XML Developer's Guide</title>&#xD;&#xA;              <genre>Computer</genre>&#xD;&#xA;              <price>44.95</price>&#xD;&#xA;              <publish_date>2000-10-01</publish_date>&#xD;&#xA;              <description>An in-depth look at creating applications &#xD;&#xA;              with XML.</description>&#xD;&#xA;           </book>&#xD;&#xA;           <book id=""bk102"">&#xD;&#xA;              <author>Ralls, Kim</author>&#xD;&#xA;              <title>Midnight Rain</title>&#xD;&#xA;              <genre>Fantasy</genre>&#xD;&#xA;              <price>5.95</price>&#xD;&#xA;              <publish_date>2000-12-16</publish_date>&#xD;&#xA;              <description>A former architect battles corporate zombies, &#xD;&#xA;              an evil sorceress, and her own childhood to become queen &#xD;&#xA;              of the world.</description>&#xD;&#xA;           </book>&#xD;&#xA;           <book id=""bk103"">&#xD;&#xA;              <author>Corets, Eva</author>&#xD;&#xA;              <title>Maeve Ascendant</title>&#xD;&#xA;              <genre>Fantasy</genre>&#xD;&#xA;              <price>5.95</price>&#xD;&#xA;              <publish_date>2000-11-17</publish_date>&#xD;&#xA;              <description>After the collapse of a nanotechnology &#xD;&#xA;              society in England, the young survivors lay the &#xD;&#xA;              foundation for a new society.</description>&#xD;&#xA;           </book>&#xD;&#xA;        </catalog>"
-6500893646956768357,32,7,"    <?xml version=""1.0"" encoding=""UTF-8"" ?>&#xD;&#xA;    <xs:schema xmlns:xs=""http://www.w3.org/2001/XMLSchema"">&#xD;&#xA;        <xs:element name=""shiporder"">&#xD;&#xA;            <xs:complexType>&#xD;&#xA;                <xs:sequence>&#xD;&#xA;                    <xs:element name=""orderperson"" type=""xs:string""/>&#xD;&#xA;                    <xs:element name=""shipto"">&#xD;&#xA;                        <xs:complexType>&#xD;&#xA;                            <xs:sequence>&#xD;&#xA;                                <xs:element name=""name"" type=""xs:string""/>&#xD;&#xA;                                <xs:element name=""address"" type=""xs:string""/>&#xD;&#xA;                                <xs:element name=""city"" type=""xs:string""/>&#xD;&#xA;                                <xs:element name=""country"" type=""xs:string""/>&#xD;&#xA;                            </xs:sequence>&#xD;&#xA;                        </xs:complexType>&#xD;&#xA;                    </xs:element>&#xD;&#xA;                    <xs:element name=""item"" maxOccurs=""unbounded"">&#xD;&#xA;                        <xs:complexType>&#xD;&#xA;                            <xs:sequence>&#xD;&#xA;                                <xs:element name=""title"" type=""xs:string""/>&#xD;&#xA;                                <xs:element name=""note"" type=""xs:string"" minOccurs=""0""/>&#xD;&#xA;                                <xs:element name=""quantity"" type=""xs:positiveInteger""/>&#xD;&#xA;                                <xs:element name=""price"" type=""xs:decimal""/>&#xD;&#xA;                            </xs:sequence>&#xD;&#xA;                        </xs:complexType>&#xD;&#xA;                    </xs:element>&#xD;&#xA;                </xs:sequence>&#xD;&#xA;                <xs:attribute name=""orderid"" type=""xs:string"" use=""required""/>&#xD;&#xA;            </xs:complexType>&#xD;&#xA;        </xs:element>&#xD;&#xA;    &#xD;&#xA;    </xs:schema>"
-5957670467540132124,32,7,"    <?php&#xD;&#xA;    return array(&#xD;&#xA;    &#xD;&#xA;        'default' => 'mysql',&#xD;&#xA;    &#xD;&#xA;        'connections' => array(&#xD;&#xA;    &#xD;&#xA;            # Our primary database connection&#xD;&#xA;            'mysql' => array(&#xD;&#xA;                'driver'    => 'mysql',&#xD;&#xA;                'host'      => 'host1',&#xD;&#xA;                'database'  => 'database1',&#xD;&#xA;                'username'  => 'user1',&#xD;&#xA;                'password'  => 'pass1'&#xD;&#xA;                'charset'   => 'utf8',&#xD;&#xA;                'collation' => 'utf8_unicode_ci',&#xD;&#xA;                'prefix'    => '',&#xD;&#xA;            ),&#xD;&#xA;    &#xD;&#xA;            # Our secondary database connection&#xD;&#xA;            'mysql2' => array(&#xD;&#xA;                'driver'    => 'mysql',&#xD;&#xA;                'host'      => 'host2',&#xD;&#xA;                'database'  => 'database2',&#xD;&#xA;                'username'  => 'user2',&#xD;&#xA;                'password'  => 'pass2'&#xD;&#xA;                'charset'   => 'utf8',&#xD;&#xA;                'collation' => 'utf8_unicode_ci',&#xD;&#xA;                'prefix'    => '',&#xD;&#xA;            ),&#xD;&#xA;        ),&#xD;&#xA;    );"
4415066901954614115,32,7,"        <?xml version=""1.0"" encoding=""utf-8""?>&#xD;&#xA;        <manifest xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;            package=""com.example.myfirstapp""&#xD;&#xA;            android:versionCode=""1""&#xD;&#xA;            android:versionName=""1.0"" >&#xD;&#xA;            <uses-sdk&#xD;&#xA;                android:minSdkVersion=""8""&#xD;&#xA;                android:targetSdkVersion=""19"" />&#xD;&#xA;           <application&#xD;&#xA;                android:allowBackup=""true""&#xD;&#xA;                android:icon=""@drawable/ic_launcher""&#xD;&#xA;                android:label=""@string/app_name""&#xD;&#xA;                android:theme=""@style/AppTheme"" >&#xD;&#xA;                <activity&#xD;&#xA;                    android:name=""com.example.myfirstapp.MainActivity""&#xD;&#xA;                    android:label=""@string/app_name"" >&#xD;&#xA;                    <intent-filter>&#xD;&#xA;                        <action android:name=""android.intent.action.MAIN"" />&#xD;&#xA;                        <category android:name=""android.intent.category.LAUNCHER"" />&#xD;&#xA;                    </intent-filter>&#xD;&#xA;                </activity>&#xD;&#xA;                <activity&#xD;&#xA;                        android:name=""com.example.myfirstapp.DisplayMessageActivity""&#xD;&#xA;                        android:label=""@string/title_activity_display_message""&#xD;&#xA;                        android:parentActivityName=""com.example.myfirstapp.MainActivity"" >&#xD;&#xA;                    <meta-data&#xD;&#xA;                        android:name=""android.support.PARENT_ACTIVITY""&#xD;&#xA;                        android:value=""com.example.myfirstapp.MainActivity"" />&#xD;&#xA;                </activity>&#xD;&#xA;       &#xD;&#xA;            </application>&#xD;&#xA;        </manifest>"
7911389066091498004,32,7,"     <?php&#xD;&#xA;     use Illuminate\Support\Facades\Schema;&#xD;&#xA;     use Illuminate\Database\Schema\Blueprint;&#xD;&#xA;     use Illuminate\Database\Migrations\Migration;&#xD;&#xA;     class CreateUsersTable extends Migration&#xD;&#xA;     {&#xD;&#xA;     /**&#xD;&#xA;     * Run the migrations.&#xD;&#xA;     *&#xD;&#xA;     * @return void&#xD;&#xA;     */&#xD;&#xA;     public function up()&#xD;&#xA;     {&#xD;&#xA;        Schema::create('users', function (Blueprint $table) {&#xD;&#xA;            $table->increments('id');&#xD;&#xA;            $table->string('name');&#xD;&#xA;            $table->string('email')->unique();&#xD;&#xA;            $table->string('password');&#xD;&#xA;            $table->rememberToken();&#xD;&#xA;            $table->timestamps();&#xD;&#xA;        });&#xD;&#xA;     }&#xD;&#xA;     /**&#xD;&#xA;     * Reverse the migrations.&#xD;&#xA;     *&#xD;&#xA;     * @return void&#xD;&#xA;     */&#xD;&#xA;     public function down()&#xD;&#xA;     {&#xD;&#xA;        Schema::dropIfExists('users');&#xD;&#xA;     }&#xD;&#xA;     }"
8287996706841922285,33,7,"     #include ""cv.h"" &#xD;&#xA;     #include ""highgui.h"" &#xD;&#xA;     #include <stdio.h>  &#xD;&#xA;     // A Simple Camera Capture Framework &#xD;&#xA;     int main() {&#xD;&#xA;       CvCapture* capture = cvCaptureFromCAM( CV_CAP_ANY );&#xD;&#xA;       if ( !capture ) {&#xD;&#xA;         fprintf( stderr, ""ERROR: capture is NULL \n"" );&#xD;&#xA;         getchar();&#xD;&#xA;         return -1;&#xD;&#xA;       }&#xD;&#xA;       // Create a window in which the captured images will be presented&#xD;&#xA;       cvNamedWindow( ""mywindow"", CV_WINDOW_AUTOSIZE );&#xD;&#xA;       // Show the image captured from the camera in the window and repeat&#xD;&#xA;       while ( 1 ) {&#xD;&#xA;         // Get one frame&#xD;&#xA;         IplImage* frame = cvQueryFrame( capture );&#xD;&#xA;         if ( !frame ) {&#xD;&#xA;           fprintf( stderr, ""ERROR: frame is null...\n"" );&#xD;&#xA;           getchar();&#xD;&#xA;           break;&#xD;&#xA;         }&#xD;&#xA;         cvShowImage( ""mywindow"", frame );&#xD;&#xA;         // Do not release the frame!&#xD;&#xA;         //If ESC key pressed, Key=0x10001B under OpenCV 0.9.7(linux version),&#xD;&#xA;         //remove higher bits using AND operator&#xD;&#xA;         if ( (cvWaitKey(10) & 255) == 27 ) break;&#xD;&#xA;       }&#xD;&#xA;       // Release the capture device housekeeping&#xD;&#xA;       cvReleaseCapture( &capture );&#xD;&#xA;       cvDestroyWindow( ""mywindow"" );&#xD;&#xA;       return 0;&#xD;&#xA;     }"
5888177405587098470,33,7,"    <?xml version=""1.0"" encoding=""utf-8""?>&#xD;&#xA;    <LinearLayout xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;        xmlns:app=""http://schemas.android.com/apk/res-auto""&#xD;&#xA;        android:layout_width=""match_parent""&#xD;&#xA;        android:layout_height=""@dimen/nav_header_height""&#xD;&#xA;        android:background=""@drawable/side_nav_bar""&#xD;&#xA;        android:gravity=""bottom""&#xD;&#xA;        android:orientation=""vertical""&#xD;&#xA;        android:paddingBottom=""@dimen/activity_vertical_margin""&#xD;&#xA;        android:paddingLeft=""@dimen/activity_horizontal_margin""&#xD;&#xA;        android:paddingRight=""@dimen/activity_horizontal_margin""&#xD;&#xA;        android:paddingTop=""@dimen/activity_vertical_margin""&#xD;&#xA;        android:theme=""@style/ThemeOverlay.AppCompat.Dark"">&#xD;&#xA;    &#xD;&#xA;        <ImageView&#xD;&#xA;            android:id=""@+id/imageView""&#xD;&#xA;            android:layout_width=""wrap_content""&#xD;&#xA;            android:layout_height=""wrap_content""&#xD;&#xA;            android:paddingTop=""@dimen/nav_header_vertical_spacing""&#xD;&#xA;            app:srcCompat=""@android:drawable/sym_def_app_icon"" />&#xD;&#xA;        <TextView&#xD;&#xA;            android:layout_width=""match_parent""&#xD;&#xA;            android:layout_height=""wrap_content""&#xD;&#xA;            android:paddingTop=""@dimen/nav_header_vertical_spacing""&#xD;&#xA;            android:text=""Android Studio""&#xD;&#xA;            android:textAppearance=""@style/TextAppearance.AppCompat.Body1"" />&#xD;&#xA;    &#xD;&#xA;        <TextView&#xD;&#xA;            android:id=""@+id/textView""&#xD;&#xA;            android:layout_width=""wrap_content""&#xD;&#xA;            android:layout_height=""wrap_content""&#xD;&#xA;            android:text=""android.studio@android.com"" />&#xD;&#xA;    </LinearLayout>"
-4387817131698424304,33,7,"    // ----------------------------------------------------------&#xD;&#xA;    // A short snippet for detecting versions of IE in JavaScript&#xD;&#xA;    // without resorting to user-agent sniffing&#xD;&#xA;    // ----------------------------------------------------------&#xD;&#xA;    // If you're not in IE (or IE version is less than 5) then:&#xD;&#xA;    //     ie === undefined&#xD;&#xA;    // If you're in IE (>=5) then you can determine which version:&#xD;&#xA;    //     ie === 7; // IE7&#xD;&#xA;    // Thus, to detect IE:&#xD;&#xA;    //     if (ie) {}&#xD;&#xA;    // And to detect the version:&#xD;&#xA;    //     ie === 6 // IE6&#xD;&#xA;    //     ie > 7 // IE8, IE9 ...&#xD;&#xA;    //     ie < 9 // Anything less than IE9&#xD;&#xA;    // ----------------------------------------------------------&#xD;&#xA;     &#xD;&#xA;    // UPDATE: Now using Live NodeList idea from @jdalton&#xD;&#xA;     &#xD;&#xA;    var ie = (function(){&#xD;&#xA;     &#xD;&#xA;        var undef,&#xD;&#xA;            v = 3,&#xD;&#xA;            div = document.createElement('div'),&#xD;&#xA;            all = div.getElementsByTagName('i');&#xD;&#xA;        &#xD;&#xA;        while (&#xD;&#xA;            div.innerHTML = '<!--[if gt IE ' + (++v) + ']><i></i><![endif]-->',&#xD;&#xA;            all[0]&#xD;&#xA;        );&#xD;&#xA;        &#xD;&#xA;        return v > 4 ? v : undef;&#xD;&#xA;        &#xD;&#xA;    }());"
641241605970420242,34,7,"        <?xml version=""1.0"" encoding=""utf-8""?>&#xD;&#xA;        <android.support.design.widget.CoordinatorLayout &#xD;&#xA;        xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;        xmlns:app=""http://schemas.android.com/apk/res-auto""&#xD;&#xA;        android:layout_width=""match_parent""&#xD;&#xA;        android:layout_height=""match_parent"">&#xD;&#xA;    &#xD;&#xA;        <android.support.design.widget.AppBarLayout&#xD;&#xA;            android:layout_width=""match_parent""&#xD;&#xA;            android:layout_height=""wrap_content""&#xD;&#xA;            android:theme=""@style/ThemeOverlay.AppCompat.Dark.ActionBar"">&#xD;&#xA;    &#xD;&#xA;            <android.support.v7.widget.Toolbar&#xD;&#xA;                android:id=""@+id/toolbar""&#xD;&#xA;                android:layout_width=""match_parent""&#xD;&#xA;                android:layout_height=""?attr/actionBarSize""&#xD;&#xA;                android:background=""?attr/colorPrimary""&#xD;&#xA;                app:layout_scrollFlags=""scroll|enterAlways""&#xD;&#xA;                app:popupTheme=""@style/ThemeOverlay.AppCompat.Light"" />&#xD;&#xA;    &#xD;&#xA;            <android.support.design.widget.TabLayout&#xD;&#xA;                android:id=""@+id/tabs""&#xD;&#xA;                android:layout_width=""match_parent""&#xD;&#xA;                android:layout_height=""wrap_content""&#xD;&#xA;                app:tabMode=""fixed""&#xD;&#xA;                app:tabGravity=""fill""/>&#xD;&#xA;        </android.support.design.widget.AppBarLayout>&#xD;&#xA;    &#xD;&#xA;        <android.support.v4.view.ViewPager&#xD;&#xA;            android:id=""@+id/viewpager""&#xD;&#xA;            android:layout_width=""match_parent""&#xD;&#xA;            android:layout_height=""match_parent""&#xD;&#xA;            app:layout_behavior=""@string/appbar_scrolling_view_behavior""  />&#xD;&#xA;    </android.support.design.widget.CoordinatorLayout>"
-6697813093223855670,34,7,"    Option Explicit&#xD;&#xA;    &#xD;&#xA;    Private Declare Function URLDownloadToFile Lib ""urlmon"" _&#xD;&#xA;        Alias ""URLDownloadToFileA"" (ByVal pCaller As Long, _&#xD;&#xA;        ByVal szURL As String, ByVal szFileName As String, _&#xD;&#xA;        ByVal dwReserved As Long, ByVal lpfnCB As Long) As Long&#xD;&#xA;    &#xD;&#xA;    Dim Ret As Long&#xD;&#xA;    &#xD;&#xA;    '~~> This is where the images will be saved. Change as applicable&#xD;&#xA;    Const FolderName As String = ""C:\Temp\""&#xD;&#xA;    &#xD;&#xA;    Sub Sample()&#xD;&#xA;        Dim ws As Worksheet&#xD;&#xA;        Dim LastRow As Long, i As Long&#xD;&#xA;        Dim strPath As String&#xD;&#xA;    &#xD;&#xA;        '~~> Name of the sheet which has the list&#xD;&#xA;        Set ws = Sheets(""Sheet1"")&#xD;&#xA;    &#xD;&#xA;        LastRow = ws.Range(""A"" & Rows.Count).End(xlUp).Row&#xD;&#xA;    &#xD;&#xA;        For i = 2 To LastRow '<~~ 2 because row 1 has headers&#xD;&#xA;            strPath = FolderName & ws.Range(""A"" & i).Value & "".jpg""&#xD;&#xA;    &#xD;&#xA;            Ret = URLDownloadToFile(0, ws.Range(""B"" & i).Value, strPath, 0, 0)&#xD;&#xA;    &#xD;&#xA;            If Ret = 0 Then&#xD;&#xA;                ws.Range(""C"" & i).Value = ""File successfully downloaded""&#xD;&#xA;            Else&#xD;&#xA;                ws.Range(""C"" & i).Value = ""Unable to download the file""&#xD;&#xA;            End If&#xD;&#xA;        Next i&#xD;&#xA;    End Sub"
-3182432590532199363,34,7,"     class RequestTask extends AsyncTask<String, String, String>{&#xD;&#xA;        &#xD;&#xA;            @Override&#xD;&#xA;            protected String doInBackground(String... uri) {&#xD;&#xA;                HttpClient httpclient = new DefaultHttpClient();&#xD;&#xA;                HttpResponse response;&#xD;&#xA;                String responseString = null;&#xD;&#xA;                try {&#xD;&#xA;                    response = httpclient.execute(new HttpGet(uri[0]));&#xD;&#xA;                    StatusLine statusLine = response.getStatusLine();&#xD;&#xA;                    if(statusLine.getStatusCode() == HttpStatus.SC_OK){&#xD;&#xA;                        ByteArrayOutputStream out = new ByteArrayOutputStream();&#xD;&#xA;                        response.getEntity().writeTo(out);&#xD;&#xA;                        out.close();&#xD;&#xA;                        responseString = out.toString();&#xD;&#xA;                    } else{&#xD;&#xA;                        //Closes the connection.&#xD;&#xA;                        response.getEntity().getContent().close();&#xD;&#xA;                        throw new IOException(statusLine.getReasonPhrase());&#xD;&#xA;                    }&#xD;&#xA;                } catch (ClientProtocolException e) {&#xD;&#xA;                    //TODO Handle problems..&#xD;&#xA;                } catch (IOException e) {&#xD;&#xA;                    //TODO Handle problems..&#xD;&#xA;                }&#xD;&#xA;                return responseString;&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            @Override&#xD;&#xA;            protected void onPostExecute(String result) {&#xD;&#xA;                super.onPostExecute(result);&#xD;&#xA;                //Do anything with response..&#xD;&#xA;            }&#xD;&#xA;        }"
6695662838436526717,34,7,"    -- PatternSplitCM will split a string based on a pattern of the form &#xD;&#xA;    -- supported by LIKE and PATINDEX &#xD;&#xA;    -- &#xD;&#xA;    -- Created by: Chris Morris 12-Oct-2012 &#xD;&#xA;    CREATE FUNCTION [dbo].[PatternSplitCM]&#xD;&#xA;    (&#xD;&#xA;           @List                VARCHAR(8000) = NULL&#xD;&#xA;           ,@Pattern            VARCHAR(50)&#xD;&#xA;    ) RETURNS TABLE WITH SCHEMABINDING &#xD;&#xA;    AS &#xD;&#xA;    &#xD;&#xA;    RETURN&#xD;&#xA;        WITH numbers AS (&#xD;&#xA;    		SELECT TOP(ISNULL(DATALENGTH(@List), 0))&#xD;&#xA;    			n = ROW_NUMBER() OVER(ORDER BY (SELECT NULL))&#xD;&#xA;    		FROM&#xD;&#xA;    		(VALUES (0),(0),(0),(0),(0),(0),(0),(0),(0),(0)) d (n),&#xD;&#xA;    		(VALUES (0),(0),(0),(0),(0),(0),(0),(0),(0),(0)) e (n),&#xD;&#xA;    		(VALUES (0),(0),(0),(0),(0),(0),(0),(0),(0),(0)) f (n),&#xD;&#xA;    		(VALUES (0),(0),(0),(0),(0),(0),(0),(0),(0),(0)) g (n)&#xD;&#xA;    	)&#xD;&#xA;    &#xD;&#xA;    	SELECT&#xD;&#xA;    		ItemNumber = ROW_NUMBER() OVER(ORDER BY MIN(n)),&#xD;&#xA;    		Item = SUBSTRING(@List,MIN(n),1+MAX(n)-MIN(n)),&#xD;&#xA;    		[Matched]&#xD;&#xA;    	FROM (&#xD;&#xA;    		SELECT n, y.[Matched], Grouper = n - ROW_NUMBER() OVER(ORDER BY y.[Matched],n)&#xD;&#xA;    		FROM numbers&#xD;&#xA;    		CROSS APPLY (&#xD;&#xA;    			SELECT [Matched] = CASE WHEN SUBSTRING(@List,n,1) LIKE @Pattern THEN 1 ELSE 0 END&#xD;&#xA;    		) y&#xD;&#xA;    	) d&#xD;&#xA;    	GROUP BY [Matched], Grouper"
-6685772472337813763,36,7,"    'use strict';&#xD;&#xA;    &#xD;&#xA;    var fs        = require('fs');&#xD;&#xA;    var path      = require('path');&#xD;&#xA;    var Sequelize = require('sequelize');&#xD;&#xA;    var basename  = path.basename(module.filename);&#xD;&#xA;    var env       = process.env.NODE_ENV || 'development';&#xD;&#xA;    var config    = require(__dirname + '/../config/config.json')[env];&#xD;&#xA;    var db        = {};&#xD;&#xA;    &#xD;&#xA;    if (config.use_env_variable) {&#xD;&#xA;      var sequelize = new Sequelize(process.env[config.use_env_variable]);&#xD;&#xA;    } else {&#xD;&#xA;      var sequelize = new Sequelize(config.database, config.username, config.password, config);&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    fs&#xD;&#xA;      .readdirSync(__dirname)&#xD;&#xA;      .filter(function(file) {&#xD;&#xA;        return (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js');&#xD;&#xA;      })&#xD;&#xA;      .forEach(function(file) {&#xD;&#xA;        var model = sequelize['import'](path.join(__dirname, file));&#xD;&#xA;        db[model.name] = model;&#xD;&#xA;      });&#xD;&#xA;    &#xD;&#xA;    Object.keys(db).forEach(function(modelName) {&#xD;&#xA;      if (db[modelName].associate) {&#xD;&#xA;        db[modelName].associate(db);&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;    &#xD;&#xA;    db.sequelize = sequelize;&#xD;&#xA;    db.Sequelize = Sequelize;&#xD;&#xA;    &#xD;&#xA;    module.exports = db;"
-4840774419216094811,36,7,    body {&#xD;&#xA;    	text-align: center;&#xD;&#xA;    	background: #00ECB9;&#xD;&#xA;      font-family: sans-serif;&#xD;&#xA;      font-weight: 100;&#xD;&#xA;    }&#xD;&#xA;    h1 {&#xD;&#xA;      color: #396;&#xD;&#xA;      font-weight: 100;&#xD;&#xA;      font-size: 40px;&#xD;&#xA;      margin: 40px 0px 20px;&#xD;&#xA;    }&#xD;&#xA;    #clockdiv{&#xD;&#xA;    	font-family: sans-serif;&#xD;&#xA;    	color: #fff;&#xD;&#xA;    	display: inline-block;&#xD;&#xA;    	font-weight: 100;&#xD;&#xA;    	text-align: center;&#xD;&#xA;    	font-size: 30px;&#xD;&#xA;    }&#xD;&#xA;    #clockdiv > div {&#xD;&#xA;    	padding: 10px;&#xD;&#xA;    	border-radius: 3px;&#xD;&#xA;    	background: #00BF96;&#xD;&#xA;    	display: inline-block;&#xD;&#xA;    }&#xD;&#xA;    #clockdiv div > span {&#xD;&#xA;    	padding: 15px;&#xD;&#xA;    	border-radius: 3px;&#xD;&#xA;    	background: #00816A;&#xD;&#xA;    	display: inline-block;&#xD;&#xA;    }&#xD;&#xA;    .smalltext {&#xD;&#xA;    	padding-top: 5px;&#xD;&#xA;    	font-size: 16px;&#xD;&#xA;    }
-3837666173352327282,36,7,"        @Override&#xD;&#xA;        public void onReceivedSslError(WebView view, final SslErrorHandler handler, SslError error) {&#xD;&#xA;        final AlertDialog.Builder builder = new AlertDialog.Builder(this);&#xD;&#xA;        String message = ""SSL Certificate error."";&#xD;&#xA;            switch (error.getPrimaryError()) {&#xD;&#xA;                case SslError.SSL_UNTRUSTED:&#xD;&#xA;                    message = ""The certificate authority is not trusted."";&#xD;&#xA;                    break;&#xD;&#xA;                case SslError.SSL_EXPIRED:&#xD;&#xA;                    message = ""The certificate has expired."";&#xD;&#xA;                    break;&#xD;&#xA;                case SslError.SSL_IDMISMATCH:&#xD;&#xA;                    message = ""The certificate Hostname mismatch."";&#xD;&#xA;                    break;&#xD;&#xA;                case SslError.SSL_NOTYETVALID:&#xD;&#xA;                    message = ""The certificate is not yet valid."";&#xD;&#xA;                    break;&#xD;&#xA;            }&#xD;&#xA;            message += "" Do you want to continue anyway?"";&#xD;&#xA;            builder.setTitle(""SSL Certificate Error"");&#xD;&#xA;            builder.setMessage(message);&#xD;&#xA;        builder.setPositiveButton(""continue"", new DialogInterface.OnClickListener() {&#xD;&#xA;            @Override&#xD;&#xA;            public void onClick(DialogInterface dialog, int which) {&#xD;&#xA;                handler.proceed();&#xD;&#xA;            }&#xD;&#xA;        });&#xD;&#xA;        builder.setNegativeButton(""cancel"", new DialogInterface.OnClickListener() {&#xD;&#xA;            @Override&#xD;&#xA;            public void onClick(DialogInterface dialog, int which) {&#xD;&#xA;                handler.cancel();&#xD;&#xA;            }&#xD;&#xA;        });&#xD;&#xA;        final AlertDialog dialog = builder.create();&#xD;&#xA;        dialog.show();&#xD;&#xA;    }"
-8811684297459935758,36,7,"    <android.support.design.widget.CoordinatorLayout &#xD;&#xA;		xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;		xmlns:app=""http://schemas.android.com/apk/res-auto""&#xD;&#xA;		android:id=""@+id/main_content""&#xD;&#xA;		android:layout_width=""match_parent""&#xD;&#xA;		android:layout_height=""match_parent"">&#xD;&#xA;		<android.support.design.widget.AppBarLayout&#xD;&#xA;			android:id=""@+id/appbar""&#xD;&#xA;			android:layout_width=""match_parent""&#xD;&#xA;			android:layout_height=""wrap_content""&#xD;&#xA;			android:theme=""@style/ThemeOverlay.AppCompat.Dark.ActionBar"">&#xD;&#xA;			<android.support.v7.widget.Toolbar&#xD;&#xA;				android:id=""@+id/toolbar""&#xD;&#xA;				android:layout_width=""match_parent""&#xD;&#xA;				android:layout_height=""?attr/actionBarSize""&#xD;&#xA;				android:background=""?attr/colorPrimary""&#xD;&#xA;				app:popupTheme=""@style/ThemeOverlay.AppCompat.Light""&#xD;&#xA;				app:layout_scrollFlags=""scroll|enterAlways"" />&#xD;&#xA;			<android.support.design.widget.TabLayout&#xD;&#xA;				android:id=""@+id/tabs""&#xD;&#xA;				android:layout_width=""match_parent""&#xD;&#xA;				android:layout_height=""wrap_content"" />&#xD;&#xA;		</android.support.design.widget.AppBarLayout>&#xD;&#xA;		<android.support.v4.view.ViewPager&#xD;&#xA;			android:id=""@+id/viewpager""&#xD;&#xA;			android:layout_width=""match_parent""&#xD;&#xA;			android:layout_height=""match_parent""&#xD;&#xA;			app:layout_behavior=""@string/appbar_scrolling_view_behavior"" />&#xD;&#xA;		<android.support.design.widget.FloatingActionButton&#xD;&#xA;			android:id=""@+id/fab""&#xD;&#xA;			android:layout_width=""wrap_content""&#xD;&#xA;			android:layout_height=""wrap_content""&#xD;&#xA;			android:layout_gravity=""end|bottom""&#xD;&#xA;			android:layout_margin=""@dimen/fab_margin""&#xD;&#xA;			android:src=""@drawable/ic_done"" />&#xD;&#xA;	</android.support.design.widget.CoordinatorLayout>"
417661322389481325,37,7,"    <?xml version=""1.0"" encoding=""utf-8""?>&#xD;&#xA;    <selector xmlns:android=""http://schemas.android.com/apk/res/android"">&#xD;&#xA;        <item android:state_pressed=""true"" >&#xD;&#xA;            <shape>&#xD;&#xA;                <solid&#xD;&#xA;                    android:color=""#449def"" />&#xD;&#xA;                <stroke&#xD;&#xA;                    android:width=""1dp""&#xD;&#xA;                    android:color=""#2f6699"" />&#xD;&#xA;                <corners&#xD;&#xA;                    android:radius=""3dp"" />&#xD;&#xA;                <padding&#xD;&#xA;                    android:left=""10dp""&#xD;&#xA;                    android:top=""10dp""&#xD;&#xA;                    android:right=""10dp""&#xD;&#xA;                    android:bottom=""10dp"" />&#xD;&#xA;            </shape>&#xD;&#xA;        </item>&#xD;&#xA;        <item>&#xD;&#xA;            <shape>&#xD;&#xA;                <gradient&#xD;&#xA;                    android:startColor=""#449def""&#xD;&#xA;                    android:endColor=""#2f6699""&#xD;&#xA;                    android:angle=""270"" />&#xD;&#xA;                <stroke&#xD;&#xA;                    android:width=""1dp""&#xD;&#xA;                    android:color=""#2f6699"" />&#xD;&#xA;                <corners&#xD;&#xA;                    android:radius=""4dp"" />&#xD;&#xA;                <padding&#xD;&#xA;                    android:left=""10dp""&#xD;&#xA;                    android:top=""10dp""&#xD;&#xA;                    android:right=""10dp""&#xD;&#xA;                    android:bottom=""10dp"" />&#xD;&#xA;            </shape>&#xD;&#xA;        </item>&#xD;&#xA;    </selector>"
2213539791757019382,37,7,"       class Worker : public QObject&#xD;&#xA;    {&#xD;&#xA;        Q_OBJECT&#xD;&#xA;    &#xD;&#xA;    public slots:&#xD;&#xA;        void doWork(const QString &parameter) {&#xD;&#xA;            QString result;&#xD;&#xA;            /* ... here is the expensive or blocking operation ... */&#xD;&#xA;            emit resultReady(result);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    signals:&#xD;&#xA;        void resultReady(const QString &result);&#xD;&#xA;    };&#xD;&#xA;    &#xD;&#xA;    class Controller : public QObject&#xD;&#xA;    {&#xD;&#xA;        Q_OBJECT&#xD;&#xA;        QThread workerThread;&#xD;&#xA;    public:&#xD;&#xA;        Controller() {&#xD;&#xA;            Worker *worker = new Worker;&#xD;&#xA;            worker->moveToThread(&workerThread);&#xD;&#xA;            connect(&workerThread, &QThread::finished, worker, &QObject::deleteLater);&#xD;&#xA;            connect(this, &Controller::operate, worker, &Worker::doWork);&#xD;&#xA;            connect(worker, &Worker::resultReady, this, &Controller::handleResults);&#xD;&#xA;            workerThread.start();&#xD;&#xA;        }&#xD;&#xA;        ~Controller() {&#xD;&#xA;            workerThread.quit();&#xD;&#xA;            workerThread.wait();&#xD;&#xA;        }&#xD;&#xA;    public slots:&#xD;&#xA;        void handleResults(const QString &);&#xD;&#xA;    signals:&#xD;&#xA;        void operate(const QString &);&#xD;&#xA;    };"
1344348875067040743,37,7,"    import re&#xD;&#xA;    &#xD;&#xA;    from django.db.models import Q&#xD;&#xA;    &#xD;&#xA;    def normalize_query(query_string,&#xD;&#xA;                        findterms=re.compile(r'""([^""]+)""|(\S+)').findall,&#xD;&#xA;                        normspace=re.compile(r'\s{2,}').sub):&#xD;&#xA;        ''' Splits the query string in invidual keywords, getting rid of unecessary spaces&#xD;&#xA;            and grouping quoted words together.&#xD;&#xA;            Example:&#xD;&#xA;            &#xD;&#xA;            >>> normalize_query('  some random  words ""with   quotes  "" and   spaces')&#xD;&#xA;            ['some', 'random', 'words', 'with quotes', 'and', 'spaces']&#xD;&#xA;        &#xD;&#xA;        '''&#xD;&#xA;        return [normspace(' ', (t[0] or t[1]).strip()) for t in findterms(query_string)] &#xD;&#xA;    &#xD;&#xA;    def get_query(query_string, search_fields):&#xD;&#xA;        ''' Returns a query, that is a combination of Q objects. That combination&#xD;&#xA;            aims to search keywords within a model by testing the given search fields.&#xD;&#xA;        &#xD;&#xA;        '''&#xD;&#xA;        query = None # Query to search for every search term        &#xD;&#xA;        terms = normalize_query(query_string)&#xD;&#xA;        for term in terms:&#xD;&#xA;            or_query = None # Query to search for a given term in each field&#xD;&#xA;            for field_name in search_fields:&#xD;&#xA;                q = Q(**{""%s__icontains"" % field_name: term})&#xD;&#xA;                if or_query is None:&#xD;&#xA;                    or_query = q&#xD;&#xA;                else:&#xD;&#xA;                    or_query = or_query | q&#xD;&#xA;            if query is None:&#xD;&#xA;                query = or_query&#xD;&#xA;            else:&#xD;&#xA;                query = query & or_query&#xD;&#xA;        return query"
-1755100536907271607,38,7,        .tabs {&#xD;&#xA;      position: relative;   &#xD;&#xA;      min-height: 200px; /* This part sucks */&#xD;&#xA;      clear: both;&#xD;&#xA;      margin: 25px 0;&#xD;&#xA;    }&#xD;&#xA;    .tab {&#xD;&#xA;      float: left;&#xD;&#xA;    }&#xD;&#xA;    .tab label {&#xD;&#xA;      background: #eee; &#xD;&#xA;      padding: 10px; &#xD;&#xA;      border: 1px solid #ccc; &#xD;&#xA;      margin-left: -1px; &#xD;&#xA;      position: relative;&#xD;&#xA;      left: 1px; &#xD;&#xA;    }&#xD;&#xA;    .tab [type=radio] {&#xD;&#xA;      display: none;   &#xD;&#xA;    }&#xD;&#xA;    .content {&#xD;&#xA;      position: absolute;&#xD;&#xA;      top: 28px;&#xD;&#xA;      left: 0;&#xD;&#xA;      background: white;&#xD;&#xA;      right: 0;&#xD;&#xA;      bottom: 0;&#xD;&#xA;      padding: 20px;&#xD;&#xA;      border: 1px solid #ccc; &#xD;&#xA;    }&#xD;&#xA;    [type=radio]:checked ~ label {&#xD;&#xA;      background: white;&#xD;&#xA;      border-bottom: 1px solid white;&#xD;&#xA;      z-index: 2;&#xD;&#xA;    }&#xD;&#xA;    [type=radio]:checked ~ label ~ .content {&#xD;&#xA;      z-index: 1;&#xD;&#xA;    }
-8302065817576728973,39,7,"	public JSONObject getJSONFromUrl(String url) {&#xD;&#xA;		// Making HTTP request&#xD;&#xA;		try {&#xD;&#xA;			// defaultHttpClient&#xD;&#xA;			DefaultHttpClient httpClient = new DefaultHttpClient();&#xD;&#xA;			HttpPost httpPost = new HttpPost(url);&#xD;&#xA;			HttpResponse httpResponse = httpClient.execute(httpPost);&#xD;&#xA;			HttpEntity httpEntity = httpResponse.getEntity();&#xD;&#xA;			is = httpEntity.getContent();			&#xD;&#xA;		} catch (UnsupportedEncodingException e) {&#xD;&#xA;			e.printStackTrace();&#xD;&#xA;		} catch (ClientProtocolException e) {&#xD;&#xA;			e.printStackTrace();&#xD;&#xA;		} catch (IOException e) {&#xD;&#xA;			e.printStackTrace();&#xD;&#xA;		}&#xD;&#xA;		&#xD;&#xA;		try {&#xD;&#xA;			BufferedReader reader = new BufferedReader(new InputStreamReader(&#xD;&#xA;					is, ""iso-8859-1""), 8);&#xD;&#xA;			StringBuilder sb = new StringBuilder();&#xD;&#xA;			String line = null;&#xD;&#xA;			while ((line = reader.readLine()) != null) {&#xD;&#xA;				sb.append(line + ""\n"");&#xD;&#xA;			}&#xD;&#xA;			is.close();&#xD;&#xA;			json = sb.toString();&#xD;&#xA;		} catch (Exception e) {&#xD;&#xA;			Log.e(""Buffer Error"", ""Error converting result "" + e.toString());&#xD;&#xA;		}&#xD;&#xA;		// try parse the string to a JSON object&#xD;&#xA;		try {&#xD;&#xA;			jObj = new JSONObject(json);&#xD;&#xA;		} catch (JSONException e) {&#xD;&#xA;			Log.e(""JSON Parser"", ""Error parsing data "" + e.toString());&#xD;&#xA;		}&#xD;&#xA;		// return JSON String&#xD;&#xA;		return jObj;&#xD;&#xA;	}  "
-8831238429617271512,40,7,"        <html>&#xD;&#xA;         <head>&#xD;&#xA;          <script>&#xD;&#xA;           function showUser(str) {&#xD;&#xA;           if (str == """") {&#xD;&#xA;             document.getElementById(""txtHint"").innerHTML = """";&#xD;&#xA;             return;&#xD;&#xA;           } else { &#xD;&#xA;            if (window.XMLHttpRequest) {&#xD;&#xA;                // code for IE7+, Firefox, Chrome, Opera, Safari&#xD;&#xA;                xmlhttp = new XMLHttpRequest();&#xD;&#xA;            } else {&#xD;&#xA;                // code for IE6, IE5&#xD;&#xA;                xmlhttp = new ActiveXObject(""Microsoft.XMLHTTP"");&#xD;&#xA;            }&#xD;&#xA;            xmlhttp.onreadystatechange = function() {&#xD;&#xA;                if (this.readyState == 4 && this.status == 200) {&#xD;&#xA;                    document.getElementById(""txtHint"").innerHTML = this.responseText;&#xD;&#xA;                }&#xD;&#xA;            };&#xD;&#xA;            xmlhttp.open(""GET"",""getuser.php?q=""+str,true);&#xD;&#xA;            xmlhttp.send();&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;        </script>&#xD;&#xA;        </head>&#xD;&#xA;        <body>&#xD;&#xA;        <form>&#xD;&#xA;         <select name=""users"" onchange=""showUser(this.value)"">&#xD;&#xA;         <option value="""">Select a person:</option>&#xD;&#xA;         <option value=""1"">Peter Griffin</option>&#xD;&#xA;         <option value=""2"">Lois Griffin</option>&#xD;&#xA;         <option value=""3"">Joseph Swanson</option>&#xD;&#xA;         <option value=""4"">Glenn Quagmire</option>&#xD;&#xA;         </select>&#xD;&#xA;        </form>&#xD;&#xA;         <br>&#xD;&#xA;         <div id=""txtHint""><b>Person info will be listed here...</b></div>&#xD;&#xA;        </body>&#xD;&#xA;        </html>"
-2087667477905951444,40,7,"	public JSONObject getJSONFromUrl(String url, List<NameValuePair> params) {&#xD;&#xA;		// Making HTTP request&#xD;&#xA;		try {&#xD;&#xA;			// defaultHttpClient&#xD;&#xA;			DefaultHttpClient httpClient = new DefaultHttpClient();&#xD;&#xA;			HttpPost httpPost = new HttpPost(url);&#xD;&#xA;			httpPost.setEntity(new UrlEncodedFormEntity(params));&#xD;&#xA;			HttpResponse httpResponse = httpClient.execute(httpPost);&#xD;&#xA;			HttpEntity httpEntity = httpResponse.getEntity();&#xD;&#xA;			is = httpEntity.getContent();&#xD;&#xA;		} catch (UnsupportedEncodingException e) {&#xD;&#xA;			e.printStackTrace();&#xD;&#xA;		} catch (ClientProtocolException e) {&#xD;&#xA;			e.printStackTrace();&#xD;&#xA;		} catch (IOException e) {&#xD;&#xA;			e.printStackTrace();&#xD;&#xA;		}&#xD;&#xA;		try {&#xD;&#xA;			BufferedReader reader = new BufferedReader(new InputStreamReader(&#xD;&#xA;					is, ""iso-8859-1""), 8);&#xD;&#xA;			StringBuilder sb = new StringBuilder();&#xD;&#xA;			String line = null;&#xD;&#xA;			while ((line = reader.readLine()) != null) {&#xD;&#xA;				sb.append(line + ""\n"");&#xD;&#xA;			}&#xD;&#xA;			is.close();&#xD;&#xA;			json = sb.toString();&#xD;&#xA;			Log.e(""JSON"", json);&#xD;&#xA;		} catch (Exception e) {&#xD;&#xA;			Log.e(""Buffer Error"", ""Error converting result "" + e.toString());&#xD;&#xA;		}&#xD;&#xA;		// try parse the string to a JSON object&#xD;&#xA;		try {&#xD;&#xA;			jObj = new JSONObject(json);			&#xD;&#xA;		} catch (JSONException e) {&#xD;&#xA;			Log.e(""JSON Parser"", ""Error parsing data "" + e.toString());&#xD;&#xA;		}&#xD;&#xA;		// return JSON String&#xD;&#xA;		return jObj;&#xD;&#xA;	}"
-2721974336094988075,40,7,"    public enum Planet {&#xD;&#xA;            MERCURY (3.303e+23, 2.4397e6),&#xD;&#xA;            VENUS   (4.869e+24, 6.0518e6),&#xD;&#xA;            EARTH   (5.976e+24, 6.37814e6),&#xD;&#xA;            MARS    (6.421e+23, 3.3972e6),&#xD;&#xA;            JUPITER (1.9e+27,   7.1492e7),&#xD;&#xA;            SATURN  (5.688e+26, 6.0268e7),&#xD;&#xA;            URANUS  (8.686e+25, 2.5559e7),&#xD;&#xA;            NEPTUNE (1.024e+26, 2.4746e7);&#xD;&#xA;        &#xD;&#xA;            private final double mass;   // in kilograms&#xD;&#xA;            private final double radius; // in meters&#xD;&#xA;            Planet(double mass, double radius) {&#xD;&#xA;                this.mass = mass;&#xD;&#xA;                this.radius = radius;&#xD;&#xA;            }&#xD;&#xA;            private double mass() { return mass; }&#xD;&#xA;            private double radius() { return radius; }&#xD;&#xA;        &#xD;&#xA;            // universal gravitational constant  (m3 kg-1 s-2)&#xD;&#xA;            public static final double G = 6.67300E-11;&#xD;&#xA;        &#xD;&#xA;            double surfaceGravity() {&#xD;&#xA;                return G * mass / (radius * radius);&#xD;&#xA;            }&#xD;&#xA;            double surfaceWeight(double otherMass) {&#xD;&#xA;                return otherMass * surfaceGravity();&#xD;&#xA;            }&#xD;&#xA;            public static void main(String[] args) {&#xD;&#xA;                if (args.length != 1) {&#xD;&#xA;                    System.err.println(""Usage: java Planet <earth_weight>"");&#xD;&#xA;                    System.exit(-1);&#xD;&#xA;                }&#xD;&#xA;                double earthWeight = Double.parseDouble(args[0]);&#xD;&#xA;                double mass = earthWeight/EARTH.surfaceGravity();&#xD;&#xA;                for (Planet p : Planet.values())&#xD;&#xA;                   System.out.printf(""Your weight on %s is %f%n"",&#xD;&#xA;                                     p, p.surfaceWeight(mass));&#xD;&#xA;            }&#xD;&#xA;        }"
4513035749191282382,41,7,"    import { Component, OnInit } from '@angular/core';&#xD;&#xA;    &#xD;&#xA;    import { IProduct } from './product';&#xD;&#xA;    import { ProductService } from './product.service';&#xD;&#xA;    &#xD;&#xA;    @Component({&#xD;&#xA;        templateUrl: './product-list.component.html'&#xD;&#xA;    })&#xD;&#xA;    export class ProductListComponent implements OnInit {&#xD;&#xA;    &#xD;&#xA;        _listFilter: string;&#xD;&#xA;        get listFilter(): string {&#xD;&#xA;            return this._listFilter;&#xD;&#xA;        }&#xD;&#xA;        set listFilter(value: string) {&#xD;&#xA;            this._listFilter = value;&#xD;&#xA;            this.filteredProducts = this.listFilter ? this.performFilter(this.listFilter) : this.products;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        filteredProducts: IProduct[];&#xD;&#xA;        products: IProduct[] = [];&#xD;&#xA;    &#xD;&#xA;        constructor(private _productService: ProductService) {&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        performFilter(filterBy: string): IProduct[] {&#xD;&#xA;            filterBy = filterBy.toLocaleLowerCase();&#xD;&#xA;            return this.products.filter((product: IProduct) =>&#xD;&#xA;                  product.productName.toLocaleLowerCase().indexOf(filterBy) !== -1);&#xD;&#xA;        }&#xD;&#xA;      &#xD;&#xA;        ngOnInit(): void {&#xD;&#xA;            this._productService.getProducts()&#xD;&#xA;                    .subscribe(products => {&#xD;&#xA;                        this.products = products;&#xD;&#xA;                        this.filteredProducts = this.products;&#xD;&#xA;                    },&#xD;&#xA;                        error => this.errorMessage = <any>error);&#xD;&#xA;        }&#xD;&#xA;    }"
-404131629417659092,41,7,"           AlertDialog.Builder builderSingle = new AlertDialog.Builder(&#xD;&#xA;                    DialogActivity.this);&#xD;&#xA;            builderSingle.setIcon(R.drawable.ic_launcher);&#xD;&#xA;            builderSingle.setTitle(""Select One Name:-"");&#xD;&#xA;            final ArrayAdapter<String> arrayAdapter = new ArrayAdapter<String>(&#xD;&#xA;                    DialogActivity.this,&#xD;&#xA;                    android.R.layout.select_dialog_singlechoice);&#xD;&#xA;            arrayAdapter.add(""Hardik"");&#xD;&#xA;            arrayAdapter.add(""Archit"");&#xD;&#xA;            arrayAdapter.add(""Jignesh"");&#xD;&#xA;            arrayAdapter.add(""Umang"");&#xD;&#xA;            arrayAdapter.add(""Gatti"");&#xD;&#xA;            builderSingle.setNegativeButton(""cancel"",&#xD;&#xA;                    new DialogInterface.OnClickListener() {&#xD;&#xA;                        @Override&#xD;&#xA;                        public void onClick(DialogInterface dialog, int which) {&#xD;&#xA;                            dialog.dismiss();&#xD;&#xA;                        }&#xD;&#xA;                    });&#xD;&#xA;            builderSingle.setAdapter(arrayAdapter,&#xD;&#xA;                    new DialogInterface.OnClickListener() {&#xD;&#xA;                        @Override&#xD;&#xA;                        public void onClick(DialogInterface dialog, int which) {&#xD;&#xA;                            String strName = arrayAdapter.getItem(which);&#xD;&#xA;                            AlertDialog.Builder builderInner = new AlertDialog.Builder(&#xD;&#xA;                                    DialogActivity.this);&#xD;&#xA;                            builderInner.setMessage(strName);&#xD;&#xA;                            builderInner.setTitle(""Your Selected Item is"");&#xD;&#xA;                            builderInner.setPositiveButton(""Ok"",&#xD;&#xA;                                    new DialogInterface.OnClickListener() {&#xD;&#xA;                                        @Override&#xD;&#xA;                                        public void onClick(&#xD;&#xA;                                                DialogInterface dialog,&#xD;&#xA;                                                int which) {&#xD;&#xA;                                            dialog.dismiss();&#xD;&#xA;                                        }&#xD;&#xA;                                    });&#xD;&#xA;                            builderInner.show();&#xD;&#xA;                        }&#xD;&#xA;                    });&#xD;&#xA;            builderSingle.show();"
2341524940657599414,41,7,"	- (NSArray *)runningProcesses {&#xD;&#xA;	    int mib[4] = {CTL_KERN, KERN_PROC, KERN_PROC_ALL, 0};&#xD;&#xA;	    size_t miblen = 4;&#xD;&#xA;	    size_t size;&#xD;&#xA;	    int st = sysctl(mib, miblen, NULL, &size, NULL, 0);&#xD;&#xA;	    struct kinfo_proc * process = NULL;&#xD;&#xA;	    struct kinfo_proc * newprocess = NULL;&#xD;&#xA;	    do {&#xD;&#xA;	        size += size / 10;&#xD;&#xA;	        newprocess = realloc(process, size);&#xD;&#xA;	        if (!newprocess){&#xD;&#xA;	            if (process){&#xD;&#xA;	                free(process);&#xD;&#xA;	            }&#xD;&#xA;	            return nil;&#xD;&#xA;	        }&#xD;&#xA;	        process = newprocess;&#xD;&#xA;	        st = sysctl(mib, miblen, process, &size, NULL, 0);&#xD;&#xA;	    } while (st == -1 && errno == ENOMEM);&#xD;&#xA;	    if (st == 0){&#xD;&#xA;	        if (size % sizeof(struct kinfo_proc) == 0){&#xD;&#xA;	            int nprocess = size / sizeof(struct kinfo_proc);&#xD;&#xA;	            if (nprocess){&#xD;&#xA;	                NSMutableArray * array = [[NSMutableArray alloc] init];&#xD;&#xA;	                for (int i = nprocess - 1; i >= 0; i--){&#xD;&#xA;	                    NSString * processID = [[NSString alloc] initWithFormat:@""%d"", process[i].kp_proc.p_pid];&#xD;&#xA;	                    NSString * processName = [[NSString alloc] initWithFormat:@""%s"", process[i].kp_proc.p_comm];&#xD;&#xA;	                    NSDictionary * dict = [[NSDictionary alloc] initWithObjects:[NSArray arrayWithObjects:processID, processName, nil] &#xD;&#xA;	                                                                        forKeys:[NSArray arrayWithObjects:@""ProcessID"", @""ProcessName"", nil]];&#xD;&#xA;	                    [processID release];&#xD;&#xA;	                    [processName release];&#xD;&#xA;	                    [array addObject:dict];&#xD;&#xA;	                    [dict release];&#xD;&#xA;	                }&#xD;&#xA;	                free(process);&#xD;&#xA;	                return [array autorelease];&#xD;&#xA;	            }&#xD;&#xA;	        }&#xD;&#xA;	    }&#xD;&#xA;	    return nil;&#xD;&#xA;	}"
8404608536136541441,41,7,"    public class SongsManager {&#xD;&#xA;	// SDCard Path&#xD;&#xA;	final String MEDIA_PATH = new String(""/sdcard/"");&#xD;&#xA;	private ArrayList<HashMap<String, String>> songsList = new ArrayList<HashMap<String, String>>();&#xD;&#xA;	&#xD;&#xA;	&#xD;&#xA;	&#xD;&#xA;	// Constructor&#xD;&#xA;	public SongsManager(){&#xD;&#xA;		&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	/**&#xD;&#xA;	 * Function to read all mp3 files from sdcard&#xD;&#xA;	 * and store the details in ArrayList&#xD;&#xA;	 * */&#xD;&#xA;	public ArrayList<HashMap<String, String>> getPlayList(){&#xD;&#xA;		File home = new File(MEDIA_PATH);&#xD;&#xA;		if (home.listFiles(new FileExtensionFilter()).length > 0) {&#xD;&#xA;			for (File file : home.listFiles(new FileExtensionFilter())) {&#xD;&#xA;				HashMap<String, String> song = new HashMap<String, String>();&#xD;&#xA;				song.put(""songTitle"", file.getName().substring(0, (file.getName().length() - 4)));&#xD;&#xA;				song.put(""songPath"", file.getPath());&#xD;&#xA;				&#xD;&#xA;				// Adding each song to SongList&#xD;&#xA;				songsList.add(song);&#xD;&#xA;			}&#xD;&#xA;		}&#xD;&#xA;		// return songs list array&#xD;&#xA;		return songsList;&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	/**&#xD;&#xA;	 * Class to filter files which are having .mp3 extension&#xD;&#xA;	 * */&#xD;&#xA;	class FileExtensionFilter implements FilenameFilter {&#xD;&#xA;		public boolean accept(File dir, String name) {&#xD;&#xA;			return (name.endsWith("".mp3"") || name.endsWith("".MP3""));&#xD;&#xA;		}&#xD;&#xA;	}&#xD;&#xA;}"
-6778563487215722896,42,7,"    public String getJSON(String url, int timeout) {&#xD;&#xA;            HttpURLConnection c = null;&#xD;&#xA;            try {&#xD;&#xA;                URL u = new URL(url);&#xD;&#xA;                c = (HttpURLConnection) u.openConnection();&#xD;&#xA;                c.setRequestMethod(""GET"");&#xD;&#xA;                c.setRequestProperty(""Content-length"", ""0"");&#xD;&#xA;                c.setUseCaches(false);&#xD;&#xA;                c.setAllowUserInteraction(false);&#xD;&#xA;                c.setConnectTimeout(timeout);&#xD;&#xA;                c.setReadTimeout(timeout);&#xD;&#xA;                c.connect();&#xD;&#xA;                int status = c.getResponseCode();&#xD;&#xA;    &#xD;&#xA;                switch (status) {&#xD;&#xA;                    case 200:&#xD;&#xA;                    case 201:&#xD;&#xA;                        BufferedReader br = new BufferedReader(new InputStreamReader(c.getInputStream()));&#xD;&#xA;                        StringBuilder sb = new StringBuilder();&#xD;&#xA;                        String line;&#xD;&#xA;                        while ((line = br.readLine()) != null) {&#xD;&#xA;                            sb.append(line+""\n"");&#xD;&#xA;                        }&#xD;&#xA;                        br.close();&#xD;&#xA;                        return sb.toString();&#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;            } catch (MalformedURLException ex) {&#xD;&#xA;                Logger.getLogger(getClass().getName()).log(Level.SEVERE, null, ex);&#xD;&#xA;            } catch (IOException ex) {&#xD;&#xA;                Logger.getLogger(getClass().getName()).log(Level.SEVERE, null, ex);&#xD;&#xA;            } finally {&#xD;&#xA;                if (c != null) {&#xD;&#xA;                    try {&#xD;&#xA;                        c.disconnect();&#xD;&#xA;                    } catch (Exception ex) {&#xD;&#xA;                        Logger.getLogger(getClass().getName()).log(Level.SEVERE, null, ex);&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;            return null;&#xD;&#xA;        }"
3648269030534168926,42,7,            Date.prototype.addSeconds = function(seconds) {&#xD;&#xA;                this.setSeconds(this.getSeconds() + seconds);&#xD;&#xA;                return this;&#xD;&#xA;            };&#xD;&#xA;            Date.prototype.addMinutes = function(minutes) {&#xD;&#xA;                this.setMinutes(this.getMinutes() + minutes);&#xD;&#xA;                return this;&#xD;&#xA;            };&#xD;&#xA;            Date.prototype.addHours = function(hours) {&#xD;&#xA;                this.setHours(this.getHours() + hours);&#xD;&#xA;                return this;&#xD;&#xA;            };&#xD;&#xA;            Date.prototype.addDays = function(days) {&#xD;&#xA;                this.setDate(this.getDate() + days);&#xD;&#xA;                return this;&#xD;&#xA;            };&#xD;&#xA;            Date.prototype.addWeeks = function(weeks) {&#xD;&#xA;                this.addDays(weeks*7);&#xD;&#xA;                return this;&#xD;&#xA;            };&#xD;&#xA;            &#xD;&#xA;            Date.prototype.addMonths = function (months) {&#xD;&#xA;                var dt = this.getDate();&#xD;&#xA;                this.setMonth(this.getMonth() + months);&#xD;&#xA;                var currDt = this.getDate();&#xD;&#xA;                if (dt !== currDt) {  &#xD;&#xA;                    this.addDays(-currDt);&#xD;&#xA;                }&#xD;&#xA;                return this;&#xD;&#xA;            };&#xD;&#xA;            Date.prototype.addYears = function(years) {&#xD;&#xA;                var dt = this.getDate();&#xD;&#xA;                &#xD;&#xA;                this.setFullYear(this.getFullYear() + years);&#xD;&#xA;                &#xD;&#xA;                var currDt = this.getDate();&#xD;&#xA;                if (dt !== currDt) {  &#xD;&#xA;                    this.addDays(-currDt);&#xD;&#xA;                }&#xD;&#xA;                &#xD;&#xA;                return this;&#xD;&#xA;            };
4441367612164212893,42,7,"	RewriteEngine On&#xD;&#xA;	RewriteBase /&#xD;&#xA;	 &#xD;&#xA;	# If there are caps, set HASCAPS to true and skip next rule&#xD;&#xA;	RewriteRule [A-Z] - [E=HASCAPS:TRUE,S=1]&#xD;&#xA;	 &#xD;&#xA;	# Skip this entire section if no uppercase letters in requested URL&#xD;&#xA;	RewriteRule ![A-Z] - [S=28]&#xD;&#xA;	 &#xD;&#xA;	# Replace single occurance of CAP with cap, then process next Rule.&#xD;&#xA;	RewriteRule ^([^A]*)A(.*)$ $1a$2&#xD;&#xA;	RewriteRule ^([^B]*)B(.*)$ $1b$2&#xD;&#xA;	RewriteRule ^([^C]*)C(.*)$ $1c$2&#xD;&#xA;	RewriteRule ^([^D]*)D(.*)$ $1d$2&#xD;&#xA;	RewriteRule ^([^E]*)E(.*)$ $1e$2&#xD;&#xA;	RewriteRule ^([^F]*)F(.*)$ $1f$2&#xD;&#xA;	RewriteRule ^([^G]*)G(.*)$ $1g$2&#xD;&#xA;	RewriteRule ^([^H]*)H(.*)$ $1h$2&#xD;&#xA;	RewriteRule ^([^I]*)I(.*)$ $1i$2&#xD;&#xA;	RewriteRule ^([^J]*)J(.*)$ $1j$2&#xD;&#xA;	RewriteRule ^([^K]*)K(.*)$ $1k$2&#xD;&#xA;	RewriteRule ^([^L]*)L(.*)$ $1l$2&#xD;&#xA;	RewriteRule ^([^M]*)M(.*)$ $1m$2&#xD;&#xA;	RewriteRule ^([^N]*)N(.*)$ $1n$2&#xD;&#xA;	RewriteRule ^([^O]*)O(.*)$ $1o$2&#xD;&#xA;	RewriteRule ^([^P]*)P(.*)$ $1p$2&#xD;&#xA;	RewriteRule ^([^Q]*)Q(.*)$ $1q$2&#xD;&#xA;	RewriteRule ^([^R]*)R(.*)$ $1r$2&#xD;&#xA;	RewriteRule ^([^S]*)S(.*)$ $1s$2&#xD;&#xA;	RewriteRule ^([^T]*)T(.*)$ $1t$2&#xD;&#xA;	RewriteRule ^([^U]*)U(.*)$ $1u$2&#xD;&#xA;	RewriteRule ^([^V]*)V(.*)$ $1v$2&#xD;&#xA;	RewriteRule ^([^W]*)W(.*)$ $1w$2&#xD;&#xA;	RewriteRule ^([^X]*)X(.*)$ $1x$2&#xD;&#xA;	RewriteRule ^([^Y]*)Y(.*)$ $1y$2&#xD;&#xA;	RewriteRule ^([^Z]*)Z(.*)$ $1z$2&#xD;&#xA;	 &#xD;&#xA;	# If there are any uppercase letters, restart at very first RewriteRule in file.&#xD;&#xA;	RewriteRule [A-Z] - [N]&#xD;&#xA;	 &#xD;&#xA;	RewriteCond %{ENV:HASCAPS} TRUE&#xD;&#xA;	RewriteRule ^/?(.*) /$1 [R=301,L]"
7796908969231665626,43,7,"    <?php&#xD;&#xA;    $host=""localhost""; // Host name &#xD;&#xA;    $username=""""; // Mysql username &#xD;&#xA;    $password=""""; // Mysql password &#xD;&#xA;    $db_name=""test""; // Database name &#xD;&#xA;    $tbl_name=""members""; // Table name &#xD;&#xA;    // Connect to server and select databse.&#xD;&#xA;    mysql_connect(""$host"", ""$username"",      &#xD;&#xA;    ""$password"")or die(""cannot connect""); &#xD;&#xA;    mysql_select_db(""$db_name"")or    &#xD;&#xA;    die(""cannot select DB"");&#xD;&#xA;    // username and password sent from form &#xD;&#xA;    $myusername=$_POST['myusername']; &#xD;&#xA;    $mypassword=$_POST['mypassword']; &#xD;&#xA;    // To protect MySQL injection (more detail    &#xD;&#xA;    about MySQL injection)&#xD;&#xA;    $myusername =    &#xD;&#xA;    stripslashes($myusername);&#xD;&#xA;    $mypassword =                &#xD;&#xA;    stripslashes($mypassword);&#xD;&#xA;    $myusername =    &#xD;&#xA;    mysql_real_escape_string($myusername);&#xD;&#xA;    $mypassword =   &#xD;&#xA;    mysql_real_escape_string($mypassword);&#xD;&#xA;    $sql=""SELECT * FROM $tbl_name  &#xD;&#xA;    WHERE username='$myusername' and  &#xD;&#xA;    password='$mypassword'"";&#xD;&#xA;    $result=mysql_query($sql);&#xD;&#xA;    // Mysql_num_row is counting table row&#xD;&#xA;    $count=mysql_num_rows($result);&#xD;&#xA;    // If result matched $myusername and    &#xD;&#xA;    $mypassword, table row must be 1 row&#xD;&#xA;    if($count==1){&#xD;&#xA;    // Register $myusername, $mypassword     &#xD;&#xA;    and redirect to file ""login_success.php""&#xD;&#xA;    session_register(""myusername"");&#xD;&#xA;    session_register(""mypassword""); &#xD;&#xA;    header(""location:login_success.php"");&#xD;&#xA;    }&#xD;&#xA;    else {&#xD;&#xA;    echo ""Wrong Username or Password"";&#xD;&#xA;    }&#xD;&#xA;    ?>"
8984489108258405303,43,7,"    #include <windows.h>&#xD;&#xA;    #include <stdio.h>&#xD;&#xA;    #include <tchar.h>&#xD;&#xA;    &#xD;&#xA;    void _tmain( int argc, TCHAR *argv[] )&#xD;&#xA;    {&#xD;&#xA;        STARTUPINFO si;&#xD;&#xA;        PROCESS_INFORMATION pi;&#xD;&#xA;    &#xD;&#xA;        ZeroMemory( &si, sizeof(si) );&#xD;&#xA;        si.cb = sizeof(si);&#xD;&#xA;        ZeroMemory( &pi, sizeof(pi) );&#xD;&#xA;    &#xD;&#xA;        if( argc != 2 )&#xD;&#xA;        {&#xD;&#xA;            printf(""Usage: %s [cmdline]\n"", argv[0]);&#xD;&#xA;            return;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // Start the child process. &#xD;&#xA;        if( !CreateProcess( NULL,   // No module name (use command line)&#xD;&#xA;            argv[1],        // Command line&#xD;&#xA;            NULL,           // Process handle not inheritable&#xD;&#xA;            NULL,           // Thread handle not inheritable&#xD;&#xA;            FALSE,          // Set handle inheritance to FALSE&#xD;&#xA;            0,              // No creation flags&#xD;&#xA;            NULL,           // Use parent's environment block&#xD;&#xA;            NULL,           // Use parent's starting directory &#xD;&#xA;            &si,            // Pointer to STARTUPINFO structure&#xD;&#xA;            &pi )           // Pointer to PROCESS_INFORMATION structure&#xD;&#xA;        ) &#xD;&#xA;        {&#xD;&#xA;            printf( ""CreateProcess failed (%d).\n"", GetLastError() );&#xD;&#xA;    		return;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // Wait until child process exits.&#xD;&#xA;        WaitForSingleObject( pi.hProcess, INFINITE );&#xD;&#xA;    &#xD;&#xA;        // Close process and thread handles. &#xD;&#xA;        CloseHandle( pi.hProcess );&#xD;&#xA;        CloseHandle( pi.hThread );&#xD;&#xA;    }"
-4816270635512714267,45,7,"	<?xml version=""1.0"" encoding=""utf-8""?>&#xD;&#xA;	<layer-list xmlns:android=""http://schemas.android.com/apk/res/android"">&#xD;&#xA;		&#xD;&#xA;		<item android:id=""@android:id/background"">&#xD;&#xA;			<shape>&#xD;&#xA;				<corners android:radius=""5dip"" />&#xD;&#xA;				<gradient&#xD;&#xA;						android:startColor=""#ff9d9e9d""&#xD;&#xA;						android:centerColor=""#ff5a5d5a""&#xD;&#xA;						android:centerY=""0.75""&#xD;&#xA;						android:endColor=""#ff747674""&#xD;&#xA;						android:angle=""270""&#xD;&#xA;				/>&#xD;&#xA;			</shape>&#xD;&#xA;		</item>&#xD;&#xA;		&#xD;&#xA;		<item android:id=""@android:id/secondaryProgress"">&#xD;&#xA;			<clip>&#xD;&#xA;				<shape>&#xD;&#xA;					<corners android:radius=""5dip"" />&#xD;&#xA;					<gradient&#xD;&#xA;							android:startColor=""#80ffd300""&#xD;&#xA;							android:centerColor=""#80ffb600""&#xD;&#xA;							android:centerY=""0.75""&#xD;&#xA;							android:endColor=""#a0ffcb00""&#xD;&#xA;							android:angle=""270""&#xD;&#xA;					/>&#xD;&#xA;				</shape>&#xD;&#xA;			</clip>&#xD;&#xA;		</item>&#xD;&#xA;		<item&#xD;&#xA;			android:id=""@android:id/progress""&#xD;&#xA;		>&#xD;&#xA;			<clip>&#xD;&#xA;				<shape>&#xD;&#xA;					<corners&#xD;&#xA;						android:radius=""5dip"" />&#xD;&#xA;					<gradient&#xD;&#xA;						android:startColor=""#33FF33""&#xD;&#xA;						android:endColor=""#008000""&#xD;&#xA;						android:angle=""270"" />&#xD;&#xA;				</shape>&#xD;&#xA;			</clip>&#xD;&#xA;		</item>&#xD;&#xA;	</layer-list>"
-7155517812742274910,46,7,"        (function(global) {&#xD;&#xA;    &#xD;&#xA;      // map tells the System loader where to look for things&#xD;&#xA;      var map = {&#xD;&#xA;        'app':                        'app', // 'dist',&#xD;&#xA;        'rxjs':                       'node_modules/rxjs',&#xD;&#xA;        'angular2-in-memory-web-api': 'node_modules/angular2-in-memory-web-api',&#xD;&#xA;        '@angular':                   'node_modules/@angular'&#xD;&#xA;      };&#xD;&#xA;    &#xD;&#xA;      // packages tells the System loader how to load when no filename and/or no extension&#xD;&#xA;      var packages = {&#xD;&#xA;        'app':                        { main: 'main.js',  defaultExtension: 'js' },&#xD;&#xA;        'rxjs':                       { defaultExtension: 'js' },&#xD;&#xA;        'angular2-in-memory-web-api': { defaultExtension: 'js' },&#xD;&#xA;      };&#xD;&#xA;    &#xD;&#xA;      var packageNames = [&#xD;&#xA;        '@angular/common',&#xD;&#xA;        '@angular/compiler',&#xD;&#xA;        '@angular/core',&#xD;&#xA;        '@angular/http',&#xD;&#xA;        '@angular/platform-browser',&#xD;&#xA;        '@angular/platform-browser-dynamic',&#xD;&#xA;        '@angular/router',&#xD;&#xA;        '@angular/router-deprecated',&#xD;&#xA;        '@angular/testing',&#xD;&#xA;        '@angular/upgrade',&#xD;&#xA;      ];&#xD;&#xA;    &#xD;&#xA;      // add package entries for angular packages in the form '@angular/common': { main: 'index.js', defaultExtension: 'js' }&#xD;&#xA;      packageNames.forEach(function(pkgName) {&#xD;&#xA;        packages[pkgName] = { main: 'index.js', defaultExtension: 'js' };&#xD;&#xA;      });&#xD;&#xA;    &#xD;&#xA;      var config = {&#xD;&#xA;        map: map,&#xD;&#xA;        packages: packages&#xD;&#xA;      }&#xD;&#xA;    &#xD;&#xA;      // filterSystemConfig - index.html's chance to modify config before we register it.&#xD;&#xA;      if (global.filterSystemConfig) { global.filterSystemConfig(config); }&#xD;&#xA;    &#xD;&#xA;      System.config(config);&#xD;&#xA;    &#xD;&#xA;    })(this);"
-5210259840589668157,46,7,"         {&#xD;&#xA;       ""nodes"": [&#xD;&#xA;       {&#xD;&#xA;         ""id"": ""n0"",&#xD;&#xA;         ""label"": ""A node"",&#xD;&#xA;        ""x"": 0,&#xD;&#xA;        ""y"": 0,&#xD;&#xA;         ""size"": 3&#xD;&#xA;       },&#xD;&#xA;        {&#xD;&#xA;         ""id"": ""n1"",&#xD;&#xA;         ""label"": ""Another node"",&#xD;&#xA;         ""x"": 3,&#xD;&#xA;         ""y"": 1,&#xD;&#xA;          ""size"": 2&#xD;&#xA;      },&#xD;&#xA;       {&#xD;&#xA;         ""id"": ""n2"",&#xD;&#xA;         ""label"": ""And a last one"",&#xD;&#xA;         ""x"": 1,&#xD;&#xA;         ""y"": 3,&#xD;&#xA;          ""size"": 1&#xD;&#xA;       }&#xD;&#xA;      ],&#xD;&#xA;      ""edges"": [&#xD;&#xA;       {&#xD;&#xA;         ""id"": ""e0"",&#xD;&#xA;         ""source"": ""n0"",&#xD;&#xA;         ""target"": ""n1""&#xD;&#xA;       },&#xD;&#xA;       {&#xD;&#xA;         ""id"": ""e1"",&#xD;&#xA;         ""source"": ""n1"",&#xD;&#xA;          ""target"": ""n2""&#xD;&#xA;       },&#xD;&#xA;       {&#xD;&#xA;         ""id"": ""e2"",&#xD;&#xA;         ""source"": ""n2"",&#xD;&#xA;         ""target"": ""n0""&#xD;&#xA;       }&#xD;&#xA;     ]&#xD;&#xA;    }&#xD;&#xA;   &#xD;&#xA;	&#xD;&#xA;    &#xD;&#xA;    "
-1256209134127783965,47,7,"    public class Person : INotifyPropertyChanged&#xD;&#xA;    {&#xD;&#xA;        public event PropertyChangedEventHandler PropertyChanged;&#xD;&#xA;        string givenNames;&#xD;&#xA;        public string GivenNames&#xD;&#xA;        {&#xD;&#xA;            get { return givenNames; }&#xD;&#xA;            set&#xD;&#xA;            {&#xD;&#xA;                if (value != givenNames)&#xD;&#xA;                {&#xD;&#xA;                    givenNames = value;&#xD;&#xA;                    OnPropertyChanged(""GivenNames"");&#xD;&#xA;                    OnPropertyChanged(""FullName"");&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        string familyName;&#xD;&#xA;        public string FamilyName&#xD;&#xA;        {&#xD;&#xA;            get { return familyName; }&#xD;&#xA;            set &#xD;&#xA;            {&#xD;&#xA;                if (value != familyName)&#xD;&#xA;                {&#xD;&#xA;                    familyName = value;&#xD;&#xA;                    OnPropertyChanged(""FamilyName"");&#xD;&#xA;                    OnPropertyChanged(""FullName"");&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        public string FullName&#xD;&#xA;        {&#xD;&#xA;            get&#xD;&#xA;            {&#xD;&#xA;                return string.Format(""{0} {1}"", GivenNames, FamilyName);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        public virtual void OnPropertyChanged(string propertyName)&#xD;&#xA;        {&#xD;&#xA;            var propertyChanged = PropertyChanged;&#xD;&#xA;            if (propertyChanged != null)&#xD;&#xA;            {&#xD;&#xA;                propertyChanged(this, new PropertyChangedEventArgs(propertyName));&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }"
3904722103129497086,47,7,"        public class WeatherAdapter extends ArrayAdapter<Weather>{&#xD;&#xA;    &#xD;&#xA;        Context context;&#xD;&#xA;        int layoutResourceId;   &#xD;&#xA;        Weather data[] = null;&#xD;&#xA;       &#xD;&#xA;        public WeatherAdapter(Context context, int layoutResourceId, Weather[] data) {&#xD;&#xA;            super(context, layoutResourceId, data);&#xD;&#xA;            this.layoutResourceId = layoutResourceId;&#xD;&#xA;            this.context = context;&#xD;&#xA;            this.data = data;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public View getView(int position, View convertView, ViewGroup parent) {&#xD;&#xA;            View row = convertView;&#xD;&#xA;            WeatherHolder holder = null;&#xD;&#xA;           &#xD;&#xA;            if(row == null)&#xD;&#xA;            {&#xD;&#xA;                LayoutInflater inflater = ((Activity)context).getLayoutInflater();&#xD;&#xA;                row = inflater.inflate(layoutResourceId, parent, false);&#xD;&#xA;               &#xD;&#xA;                holder = new WeatherHolder();&#xD;&#xA;                holder.imgIcon = (ImageView)row.findViewById(R.id.imgIcon);&#xD;&#xA;                holder.txtTitle = (TextView)row.findViewById(R.id.txtTitle);&#xD;&#xA;               &#xD;&#xA;                row.setTag(holder);&#xD;&#xA;            }&#xD;&#xA;            else&#xD;&#xA;            {&#xD;&#xA;                holder = (WeatherHolder)row.getTag();&#xD;&#xA;            }&#xD;&#xA;           &#xD;&#xA;            Weather weather = data[position];&#xD;&#xA;            holder.txtTitle.setText(weather.title);&#xD;&#xA;            holder.imgIcon.setImageResource(weather.icon);&#xD;&#xA;           &#xD;&#xA;            return row;&#xD;&#xA;        }&#xD;&#xA;       &#xD;&#xA;        static class WeatherHolder&#xD;&#xA;        {&#xD;&#xA;            ImageView imgIcon;&#xD;&#xA;            TextView txtTitle;&#xD;&#xA;        }&#xD;&#xA;    }"
-8571059175320836658,47,7,"    	    /**&#xD;&#xA;			 * Eric Meyer's Reset CSS v2.0 (http://meyerweb.com/eric/tools/css/reset/)&#xD;&#xA;			 * http://cssreset.com&#xD;&#xA;			 */&#xD;&#xA;			html, body, div, span, applet, object, iframe,&#xD;&#xA;			h1, h2, h3, h4, h5, h6, p, blockquote, pre,&#xD;&#xA;			a, abbr, acronym, address, big, cite, code,&#xD;&#xA;			del, dfn, em, img, ins, kbd, q, s, samp,&#xD;&#xA;			small, strike, strong, sub, sup, tt, var,&#xD;&#xA;			b, u, i, center,&#xD;&#xA;			dl, dt, dd, ol, ul, li,&#xD;&#xA;			fieldset, form, label, legend,&#xD;&#xA;			table, caption, tbody, tfoot, thead, tr, th, td,&#xD;&#xA;			article, aside, canvas, details, embed,&#xD;&#xA;			figure, figcaption, footer, header, hgroup,&#xD;&#xA;			menu, nav, output, ruby, section, summary,&#xD;&#xA;			time, mark, audio, video {&#xD;&#xA;				margin: 0;&#xD;&#xA;				padding: 0;&#xD;&#xA;				border: 0;&#xD;&#xA;				font-size: 100%;&#xD;&#xA;				font: inherit;&#xD;&#xA;				vertical-align: baseline;&#xD;&#xA;			}&#xD;&#xA;			/* HTML5 display-role reset for older browsers */&#xD;&#xA;			article, aside, details, figcaption, figure,&#xD;&#xA;			footer, header, hgroup, menu, nav, section {&#xD;&#xA;				display: block;&#xD;&#xA;			}&#xD;&#xA;			body {&#xD;&#xA;				line-height: 1;&#xD;&#xA;			}&#xD;&#xA;			ol, ul {&#xD;&#xA;				list-style: none;&#xD;&#xA;			}&#xD;&#xA;			blockquote, q {&#xD;&#xA;				quotes: none;&#xD;&#xA;			}&#xD;&#xA;			blockquote:before, blockquote:after,&#xD;&#xA;			q:before, q:after {&#xD;&#xA;				content: '';&#xD;&#xA;				content: none;&#xD;&#xA;			}&#xD;&#xA;			table {&#xD;&#xA;				border-collapse: collapse;&#xD;&#xA;				border-spacing: 0;&#xD;&#xA;			}"
-4311888134744091615,51,7,"	<?xml version=""1.0""?>&#xD;&#xA;	<configuration>&#xD;&#xA;	  <configSections>&#xD;&#xA;	    <sectionGroup name=""system.web.webPages.razor"" type=""System.Web.WebPages.Razor.Configuration.RazorWebSectionGroup, System.Web.WebPages.Razor, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"">&#xD;&#xA;	      <section name=""host"" type=""System.Web.WebPages.Razor.Configuration.HostSection, System.Web.WebPages.Razor, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"" requirePermission=""false"" />&#xD;&#xA;	      <section name=""pages"" type=""System.Web.WebPages.Razor.Configuration.RazorPagesSection, System.Web.WebPages.Razor, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"" requirePermission=""false"" />&#xD;&#xA;	    </sectionGroup>&#xD;&#xA;	  </configSections>&#xD;&#xA;	  <system.web.webPages.razor>&#xD;&#xA;	    <host factoryType=""System.Web.Mvc.MvcWebRazorHostFactory, System.Web.Mvc, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"" />&#xD;&#xA;	    <pages pageBaseType=""System.Web.Mvc.WebViewPage"">&#xD;&#xA;	      <namespaces>&#xD;&#xA;	        <add namespace=""System.Web.Mvc"" />&#xD;&#xA;	        <add namespace=""System.Web.Mvc.Ajax"" />&#xD;&#xA;	        <add namespace=""System.Web.Mvc.Html"" />&#xD;&#xA;	        <add namespace=""System.Web.Routing"" />&#xD;&#xA;	      </namespaces>&#xD;&#xA;	    </pages>&#xD;&#xA;	  </system.web.webPages.razor>&#xD;&#xA;	  <appSettings>&#xD;&#xA;	    <add key=""webpages:Enabled"" value=""false"" />&#xD;&#xA;	  </appSettings>&#xD;&#xA;	  <system.web>&#xD;&#xA;	    <httpHandlers>&#xD;&#xA;	      <add path=""*"" verb=""*"" type=""System.Web.HttpNotFoundHandler""/>&#xD;&#xA;	    </httpHandlers>&#xD;&#xA;	    <!--&#xD;&#xA;	        Enabling request validation in view pages would cause validation to occur&#xD;&#xA;	        after the input has already been processed by the controller. By default&#xD;&#xA;	        MVC performs request validation before a controller processes the input.&#xD;&#xA;	        To change this behavior apply the ValidateInputAttribute to a&#xD;&#xA;	        controller or action.&#xD;&#xA;	    -->&#xD;&#xA;	    <pages&#xD;&#xA;	        validateRequest=""false""&#xD;&#xA;	        pageParserFilterType=""System.Web.Mvc.ViewTypeParserFilter, System.Web.Mvc, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35""&#xD;&#xA;	        pageBaseType=""System.Web.Mvc.ViewPage, System.Web.Mvc, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35""&#xD;&#xA;	        userControlBaseType=""System.Web.Mvc.ViewUserControl, System.Web.Mvc, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"">&#xD;&#xA;	      <controls>&#xD;&#xA;	        <add assembly=""System.Web.Mvc, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"" namespace=""System.Web.Mvc"" tagPrefix=""mvc"" />&#xD;&#xA;	      </controls>&#xD;&#xA;	    </pages>&#xD;&#xA;	  </system.web>&#xD;&#xA;	  <system.webServer>&#xD;&#xA;	    <validation validateIntegratedModeConfiguration=""false"" />&#xD;&#xA;	    <handlers>&#xD;&#xA;	      <remove name=""BlockViewHandler""/>&#xD;&#xA;	      <add name=""BlockViewHandler"" path=""*"" verb=""*"" preCondition=""integratedMode"" type=""System.Web.HttpNotFoundHandler"" />&#xD;&#xA;	    </handlers>&#xD;&#xA;	  </system.webServer>&#xD;&#xA;	</configuration>"
-1761440668202600454,51,7,"     <?php&#xD;&#xA;    /*******EDIT LINES 3-8*******/&#xD;&#xA;    $DB_Server = ""localhost""; //MySQL Server    &#xD;&#xA;    $DB_Username = ""username""; //MySQL Username     &#xD;&#xA;    $DB_Password = ""password"";             //MySQL Password     &#xD;&#xA;    $DB_DBName = ""databasename"";         //MySQL Database Name  &#xD;&#xA;    $DB_TBLName = ""tablename""; //MySQL Table Name   &#xD;&#xA;    $filename = ""excelfilename"";         //File Name&#xD;&#xA;    /*******YOU DO NOT NEED TO EDIT ANYTHING BELOW THIS LINE*******/    &#xD;&#xA;    //create MySQL connection   &#xD;&#xA;    $sql = ""Select * from $DB_TBLName"";&#xD;&#xA;    $Connect = @mysql_connect($DB_Server, $DB_Username, $DB_Password) or die(""Couldn't connect to MySQL:<br>"" . mysql_error() . ""<br>"" . mysql_errno());&#xD;&#xA;    //select database   &#xD;&#xA;    $Db = @mysql_select_db($DB_DBName, $Connect) or die(""Couldn't select database:<br>"" . mysql_error(). ""<br>"" . mysql_errno());   &#xD;&#xA;    //execute query &#xD;&#xA;    $result = @mysql_query($sql,$Connect) or die(""Couldn't execute query:<br>"" . mysql_error(). ""<br>"" . mysql_errno());    &#xD;&#xA;    $file_ending = ""xls"";&#xD;&#xA;    //header info for browser&#xD;&#xA;    header(""Content-Type: application/xls"");    &#xD;&#xA;    header(""Content-Disposition: attachment; filename=$filename.xls"");  &#xD;&#xA;    header(""Pragma: no-cache""); &#xD;&#xA;    header(""Expires: 0"");&#xD;&#xA;    /*******Start of Formatting for Excel*******/   &#xD;&#xA;    //define separator (defines columns in excel & tabs in word)&#xD;&#xA;    $sep = ""\t""; //tabbed character&#xD;&#xA;    //start of printing column names as names of MySQL fields&#xD;&#xA;    for ($i = 0; $i < mysql_num_fields($result); $i++) {&#xD;&#xA;    echo mysql_field_name($result,$i) . ""\t"";&#xD;&#xA;    }&#xD;&#xA;    print(""\n"");    &#xD;&#xA;    //end of printing column names  &#xD;&#xA;    //start while loop to get data&#xD;&#xA;        while($row = mysql_fetch_row($result))&#xD;&#xA;        {&#xD;&#xA;            $schema_insert = """";&#xD;&#xA;            for($j=0; $j<mysql_num_fields($result);$j++)&#xD;&#xA;            {&#xD;&#xA;                if(!isset($row[$j]))&#xD;&#xA;                    $schema_insert .= ""NULL"".$sep;&#xD;&#xA;                elseif ($row[$j] != """")&#xD;&#xA;                    $schema_insert .= ""$row[$j]"".$sep;&#xD;&#xA;                else&#xD;&#xA;                    $schema_insert .= """".$sep;&#xD;&#xA;            }&#xD;&#xA;            $schema_insert = str_replace($sep.""$"", """", $schema_insert);&#xD;&#xA;            $schema_insert = preg_replace(""/\r\n|\n\r|\n|\r/"", "" "", $schema_insert);&#xD;&#xA;            $schema_insert .= ""\t"";&#xD;&#xA;            print(trim($schema_insert));&#xD;&#xA;            print ""\n"";&#xD;&#xA;        }   &#xD;&#xA;    ?>"
-4788072928341417627,51,7,"        $(document).ready(function() {  &#xD;&#xA;        &#xD;&#xA;            // Icon Click Focus&#xD;&#xA;            $('div.icon').click(function(){&#xD;&#xA;                $('input#search').focus();&#xD;&#xA;            });&#xD;&#xA;        &#xD;&#xA;            //Listen for the event&#xD;&#xA;                $(""input#search"").live(""keyup"", function(e) {&#xD;&#xA;                // Set Timeout&#xD;&#xA;                clearTimeout($.data(this, 'timer'));&#xD;&#xA;        &#xD;&#xA;                // Set Search String&#xD;&#xA;                var search_string = $(this).val();&#xD;&#xA;        &#xD;&#xA;                // Do Search&#xD;&#xA;                if (search_string == '') {&#xD;&#xA;                    $(""ul#results"").fadeOut();&#xD;&#xA;                    $('h4#results-text').fadeOut();&#xD;&#xA;                }else{&#xD;&#xA;                    $(""ul#results"").fadeIn();&#xD;&#xA;                    $('h4#results-text').fadeIn();&#xD;&#xA;                    $(this).data('timer', setTimeout(search, 100));&#xD;&#xA;                };&#xD;&#xA;            });&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;            // Live Search&#xD;&#xA;            // On Search Submit and Get Results&#xD;&#xA;            function search() {&#xD;&#xA;                var query_value = $('input#search').val();&#xD;&#xA;                $('b#search-string').html(query_value);&#xD;&#xA;                if(query_value !== ''){&#xD;&#xA;                    $.ajax({&#xD;&#xA;                        type: ""POST"",&#xD;&#xA;                        url: ""search_st.php"",&#xD;&#xA;                        data: { query: query_value },&#xD;&#xA;                        cache: false,&#xD;&#xA;                        success: function(html){&#xD;&#xA;                            $(""ul#results"").html(html);&#xD;&#xA;        &#xD;&#xA;                        }&#xD;&#xA;                    });&#xD;&#xA;                }return false;    &#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        })&#xD;&#xA;    &#xD;&#xA;    ;"
978840992016301051,53,7,"    @media only screen and (max-width: 800px) {&#xD;&#xA;                /* Force table to not be like tables anymore */&#xD;&#xA;                &#xD;&#xA;                #no-more-tables table,&#xD;&#xA;                #no-more-tables thead,&#xD;&#xA;                #no-more-tables tbody,&#xD;&#xA;                #no-more-tables th,&#xD;&#xA;                #no-more-tables td,&#xD;&#xA;                #no-more-tables tr {&#xD;&#xA;                    display: block;&#xD;&#xA;                }&#xD;&#xA;                /* Hide table headers (but not display: none;, for accessibility) */&#xD;&#xA;                &#xD;&#xA;                #no-more-tables thead tr {&#xD;&#xA;                    position: absolute;&#xD;&#xA;                    top: -9999px;&#xD;&#xA;                    left: -9999px;&#xD;&#xA;                }&#xD;&#xA;                #no-more-tables tr {&#xD;&#xA;                    border: 1px solid #ccc;&#xD;&#xA;                }&#xD;&#xA;                #no-more-tables td {&#xD;&#xA;                    /* Behave  like a ""row"" */&#xD;&#xA;                    &#xD;&#xA;                    border: none;&#xD;&#xA;                    border-bottom: 1px solid #eee;&#xD;&#xA;                    position: relative;&#xD;&#xA;                    padding-left: 50%;&#xD;&#xA;                    white-space: normal;&#xD;&#xA;                    text-align: left;&#xD;&#xA;                }&#xD;&#xA;                #no-more-tables td:before {&#xD;&#xA;                    /* Now like a table header */&#xD;&#xA;                    &#xD;&#xA;                    position: absolute;&#xD;&#xA;                    /* Top/left values mimic padding */&#xD;&#xA;                    &#xD;&#xA;                    top: 6px;&#xD;&#xA;                    left: 6px;&#xD;&#xA;                    width: 45%;&#xD;&#xA;                    padding-right: 10px;&#xD;&#xA;                    white-space: nowrap;&#xD;&#xA;                    text-align: left;&#xD;&#xA;                    font-weight: bold;&#xD;&#xA;                }&#xD;&#xA;                /*&#xD;&#xA;    	Label the data&#xD;&#xA;    	*/&#xD;&#xA;                &#xD;&#xA;                #no-more-tables td:before {&#xD;&#xA;                    content: attr(data-title);&#xD;&#xA;                }&#xD;&#xA;            }"
4650423236965794280,57,7,"    >   ALPHABETICAL ORDER,,,,,,,,,,,,,&#xD;&#xA;    > ,,Positions,,,,Classifications,,,,,,,&#xD;&#xA;    > Company,Booth,Full-Time,""Full-Time Visa&#xD;&#xA;    > Sponsor"",Part-Time,Internship,Freshman,Sophomore,Junior,Senior,Post-Bacs,MS,PhD,Alumni&#xD;&#xA;    > AIG,10,,,,Yes,,,Jr,,,MS,,&#xD;&#xA;    > Baylor�College�of�Medicine,19,Yes,Yes,,,,,,,,,,Recent&#xD;&#xA;    > CGG,17,Yes,Yes,,,,,,,,MS,PhD,Recent Citi,27/28,Yes,,,Yes,,,Jr,Sr,,,,&#xD;&#xA;    > ExxonMobil,11,Yes,,,Yes,Fr,Soph,Jr,Sr,PB,,, ,...&#xD;&#xA;    > Flow-Cal�Inc.,16,Yes,,,Yes,,,Jr,Sr,,,,All&#xD;&#xA;    > Global�Shop�Solutions,18,Yes,,,Yes,,,,Sr,PB,,,All&#xD;&#xA;    > Harris�County�CTS,22,Yes,,,Yes,,,Jr,Sr,PB,MS,PhD,All&#xD;&#xA;    > HCSS,29,Yes,,,Yes,Fr,Soph,Jr,Sr,PB,MS,,Recent&#xD;&#xA;    > Hitachi�Consulting,13,Yes,,,,,,,Sr,,MS,,&#xD;&#xA;    > HP�Inc.,1,Yes,,,Yes,,,Jr,,,MS,,Recent&#xD;&#xA;    > INT�Inc.,20,Yes,Yes,,Yes,,,Jr,Sr,,MS,PhD,&#xD;&#xA;    > JPMorgan�Chase�&�Co,3,Yes,,,Yes,,,Jr,Sr,,,,&#xD;&#xA;    > Leidos,390,Yes,,,Yes,Fr,Soph,Jr,Sr,PB,MS,,&#xD;&#xA;    > McKesson,26,Yes,,,,,,,Sr,,,, ,,,,,,,,,,,,,&#xD;&#xA;    > MRE�Consulting�Ltd.,2,Yes,,,,,,,Sr,PB,MS,,All&#xD;&#xA;    > NetIQ,7,,,,Yes,,Soph,Jr,Sr,PB,,, PROS,21,Yes,,,,,,,Sr,,MS,PhD,All&#xD;&#xA;    > San�Jacinto�College��,14,,,,Yes,,Soph,Jr,Sr,PB,MS,,&#xD;&#xA;    > SAS,4,Yes,,,Yes,Fr,Soph,Jr,Sr,PB,MS,,Recent&#xD;&#xA;    > Smartbridge,8,Yes,,,,,,,Sr,PB,MS,, Sogeti�USA,15,Yes,,,,,,,Sr,PB,MS,,&#xD;&#xA;    > Southwest�Research�Institute,12,Yes,,,Yes,,,Jr,Sr,PB,MS,PhD,All&#xD;&#xA;    > The�Reynolds�and�Reynolds�Company,23,Yes,Yes,,Yes,Fr,Soph,Jr,Sr,PB,,,All&#xD;&#xA;    > UH�Enterprise�Systems,9,Yes,Yes,Yes,Yes,Fr,Soph,Jr,Sr,PB,MS,PhD,All&#xD;&#xA;    > U.S.�Marine�Corps,25,Yes,,,Yes,Fr,Soph,Jr,Sr,PB,MS,,All&#xD;&#xA;    > ValuD�Consuting�LLC,5,Yes,,,,,,,Sr,PB,,,All&#xD;&#xA;    > Wipro,24,Yes,,,,,,,Sr,PB,,, BOOTH ORDER,,,,,,,,,,,,,&#xD;&#xA;    > ,Booth,Positions,,,,Classifications,,,,,,,&#xD;&#xA;    > Company,#,Full-Time,""Full-Time Visa&#xD;&#xA;    > Sponsor"",Part-Time,Internship,Freshman,Sophomore,Junior,Senior,Post-Bacs,MS,PhD,Alumni&#xD;&#xA;    > HP�Inc.,1,Yes,,,Yes,,,Jr,,,MS,,Recent&#xD;&#xA;    > ""MRE�Consulting,�Ltd."",2,Yes,,,,,,,Sr,PB,MS,,All&#xD;&#xA;    > JPMorgan�Chase�&�Co,3,Yes,,,Yes,,,Jr,Sr,,,,&#xD;&#xA;    > SAS,4,Yes,,,Yes,Fr,Soph,Jr,Sr,PB,MS,,Recent&#xD;&#xA;    > ValuD�Consuting�LLC,5,Yes,,,,,,,Sr,PB,,,All&#xD;&#xA;    > NetIQ,7,,,,Yes,,Soph,Jr,Sr,PB,,, Smartbridge,8,Yes,,,,,,,Sr,PB,MS,,&#xD;&#xA;    > UH�Enterprise�Systems,9,Yes,Yes,Yes,Yes,Fr,Soph,Jr,Sr,PB,MS,PhD,All&#xD;&#xA;    > AIG,10,,,,Yes,,,Jr,,,MS,, ExxonMobil,11,Yes,,,Yes,Fr,Soph,Jr,Sr,PB,,,&#xD;&#xA;    > Southwest�Research�Institute,12,Yes,,,Yes,,,Jr,Sr,PB,MS,PhD,All&#xD;&#xA;    > Hitachi�Consulting,13,Yes,,,,,,,Sr,,MS,,&#xD;&#xA;    > San�Jacinto�College��,14,,,,Yes,,Soph,Jr,Sr,PB,MS,,&#xD;&#xA;    > Sogeti�USA,15,Yes,,,,,,,Sr,PB,MS,,&#xD;&#xA;    > ""Flow-Cal,�Inc."",16,Yes,,,Yes,,,Jr,Sr,,,,All&#xD;&#xA;    > CGG,17,Yes,Yes,,,,,,,,MS,PhD,Recent&#xD;&#xA;    > Global�Shop�Solutions,18,Yes,,,Yes,,,,Sr,PB,,,All&#xD;&#xA;    > Baylor�College�of�Medicine,19,Yes,Yes,,,,,,,,,,Recent&#xD;&#xA;    > ""INT,�Inc."",20,Yes,Yes,,Yes,,,Jr,Sr,,MS,PhD,&#xD;&#xA;    > PROS,21,Yes,,,,,,,Sr,,MS,PhD,All&#xD;&#xA;    > Harris�County�CTS,22,Yes,,,Yes,,,Jr,Sr,PB,MS,PhD,All&#xD;&#xA;    > The�Reynolds�and�Reynolds�Company,23,Yes,Yes,,Yes,Fr,Soph,Jr,Sr,PB,,,All&#xD;&#xA;    > Wipro,24,Yes,,,,,,,Sr,PB,,,&#xD;&#xA;    > U.S.�Marine�Corps,25,Yes,,,Yes,Fr,Soph,Jr,Sr,PB,MS,,All&#xD;&#xA;    > McKesson,26,Yes,,,,,,,Sr,,,, Citi,27/28,Yes,,,Yes,,,Jr,Sr,,,,&#xD;&#xA;    > HCSS,29,Yes,,,Yes,Fr,Soph,Jr,Sr,PB,MS,,Recent&#xD;&#xA;    > Leidos,30,Yes,,,Yes,Fr,Soph,Jr,Sr,PB,MS,,"
-74134386470572286,57,7,"        import java.io.UnsupportedEncodingException;&#xD;&#xA;        import java.util.Map;    &#xD;&#xA;        import org.json.JSONException;&#xD;&#xA;        import org.json.JSONObject;    &#xD;&#xA;        import com.android.volley.NetworkResponse;&#xD;&#xA;        import com.android.volley.ParseError;&#xD;&#xA;        import com.android.volley.Request;&#xD;&#xA;        import com.android.volley.Response;&#xD;&#xA;        import com.android.volley.Response.ErrorListener;&#xD;&#xA;        import com.android.volley.Response.Listener;&#xD;&#xA;        import com.android.volley.toolbox.HttpHeaderParser;&#xD;&#xA;        &#xD;&#xA;        public class CustomRequest extends Request<JSONObject> {&#xD;&#xA;    &#xD;&#xA;    	private Listener<JSONObject> listener;&#xD;&#xA;    	private Map<String, String> params;&#xD;&#xA;    &#xD;&#xA;    	public CustomRequest(String url, Map<String, String> params,&#xD;&#xA;    			Listener<JSONObject> reponseListener, ErrorListener errorListener) {&#xD;&#xA;    		super(Method.GET, url, errorListener);&#xD;&#xA;    		this.listener = reponseListener;&#xD;&#xA;    		this.params = params;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public CustomRequest(int method, String url, Map<String, String> params,&#xD;&#xA;    			Listener<JSONObject> reponseListener, ErrorListener errorListener) {&#xD;&#xA;    		super(method, url, errorListener);&#xD;&#xA;    		this.listener = reponseListener;&#xD;&#xA;    		this.params = params;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	protected Map<String, String> getParams()&#xD;&#xA;    			throws com.android.volley.AuthFailureError {&#xD;&#xA;    		return params;&#xD;&#xA;    	};&#xD;&#xA;    &#xD;&#xA;    	@Override&#xD;&#xA;    	protected Response<JSONObject> parseNetworkResponse(NetworkResponse response) {&#xD;&#xA;    		try {&#xD;&#xA;    			String jsonString = new String(response.data,&#xD;&#xA;    					HttpHeaderParser.parseCharset(response.headers));&#xD;&#xA;    			return Response.success(new JSONObject(jsonString),&#xD;&#xA;    					HttpHeaderParser.parseCacheHeaders(response));&#xD;&#xA;    		} catch (UnsupportedEncodingException e) {&#xD;&#xA;    			return Response.error(new ParseError(e));&#xD;&#xA;    		} catch (JSONException je) {&#xD;&#xA;    			return Response.error(new ParseError(je));&#xD;&#xA;    		}&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	@Override&#xD;&#xA;    	protected void deliverResponse(JSONObject response) {&#xD;&#xA;    		// TODO Auto-generated method stub&#xD;&#xA;    		listener.onResponse(response);&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    }"
6610981878372055650,57,7,"	# This is a configuration file for ProGuard.&#xD;&#xA;	# http://proguard.sourceforge.net/index.html#manual/usage.html&#xD;&#xA;	&#xD;&#xA;	-dontusemixedcaseclassnames&#xD;&#xA;	-dontskipnonpubliclibraryclasses&#xD;&#xA;	-verbose&#xD;&#xA;	&#xD;&#xA;	# Optimization is turned off by default. Dex does not like code run&#xD;&#xA;	# through the ProGuard optimize and preverify steps (and performs some&#xD;&#xA;	# of these optimizations on its own).&#xD;&#xA;	-dontoptimize&#xD;&#xA;	-dontpreverify&#xD;&#xA;	# Note that if you want to enable optimization, you cannot just&#xD;&#xA;	# include optimization flags in your own project configuration file;&#xD;&#xA;	# instead you will need to point to the&#xD;&#xA;	# ""proguard-android-optimize.txt"" file instead of this one from your&#xD;&#xA;	# project.properties file.&#xD;&#xA;	&#xD;&#xA;	-keepattributes *Annotation*&#xD;&#xA;	-keep public class com.google.vending.licensing.ILicensingService&#xD;&#xA;	-keep public class com.android.vending.licensing.ILicensingService&#xD;&#xA;	&#xD;&#xA;	# For native methods, see http://proguard.sourceforge.net/manual/examples.html#native&#xD;&#xA;	-keepclasseswithmembernames class * {&#xD;&#xA;	    native <methods>;&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	# keep setters in Views so that animations can still work.&#xD;&#xA;	# see http://proguard.sourceforge.net/manual/examples.html#beans&#xD;&#xA;	-keepclassmembers public class * extends android.view.View {&#xD;&#xA;	   void set*(***);&#xD;&#xA;	   *** get*();&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	# We want to keep methods in Activity that could be used in the XML attribute onClick&#xD;&#xA;	-keepclassmembers class * extends android.app.Activity {&#xD;&#xA;	   public void *(android.view.View);&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	# For enumeration classes, see http://proguard.sourceforge.net/manual/examples.html#enumerations&#xD;&#xA;	-keepclassmembers enum * {&#xD;&#xA;	    public static **[] values();&#xD;&#xA;	    public static ** valueOf(java.lang.String);&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	-keep class * implements android.os.Parcelable {&#xD;&#xA;	  public static final android.os.Parcelable$Creator *;&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	-keepclassmembers class **.R$* {&#xD;&#xA;	    public static <fields>;&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	# The support library contains references to newer platform versions.&#xD;&#xA;	# Don't warn about those in case this app is linking against an older&#xD;&#xA;	# platform version.  We know about them, and they are safe.&#xD;&#xA;	-dontwarn android.support.**"
2903693604825925669,58,7,"    loginButton = (LoginButton) findViewById(R.id.login_button);&#xD;&#xA;    &#xD;&#xA;    List < String > permissionNeeds = Arrays.asList(""user_photos"", ""email"",&#xD;&#xA;    	""user_birthday"", ""public_profile"", ""AccessToken"");&#xD;&#xA;    loginButton.registerCallback(callbackManager,&#xD;&#xA;    new FacebookCallback < LoginResult > () {@Override&#xD;&#xA;    	public void onSuccess(LoginResult loginResult) {&#xD;&#xA;    &#xD;&#xA;    		System.out.println(""onSuccess"");&#xD;&#xA;    &#xD;&#xA;    		String accessToken = loginResult.getAccessToken()&#xD;&#xA;    			.getToken();&#xD;&#xA;    		Log.i(""accessToken"", accessToken);&#xD;&#xA;    &#xD;&#xA;    		GraphRequest request = GraphRequest.newMeRequest(&#xD;&#xA;    		loginResult.getAccessToken(),&#xD;&#xA;    		new GraphRequest.GraphJSONObjectCallback() {@Override&#xD;&#xA;    			public void onCompleted(JSONObject object,&#xD;&#xA;    			GraphResponse response) {&#xD;&#xA;    				Log.i(""LoginActivity"", response.toString());&#xD;&#xA;    				try {&#xD;&#xA;    					id = object.getString(""id"");&#xD;&#xA;    					try {&#xD;&#xA;    						URL profile_pic = new URL(&#xD;&#xA;    							""http://graph.facebook.com/"" + id + ""/picture?type=large"");&#xD;&#xA;    						Log.i(""profile_pic"",&#xD;&#xA;    						profile_pic + """");&#xD;&#xA;    &#xD;&#xA;    					} catch (MalformedURLException e) {&#xD;&#xA;    						e.printStackTrace();&#xD;&#xA;    					}&#xD;&#xA;    					name = object.getString(""name"");&#xD;&#xA;    					email = object.getString(""email"");&#xD;&#xA;    					gender = object.getString(""gender"");&#xD;&#xA;    					birthday = object.getString(""birthday"");&#xD;&#xA;    				} catch (JSONException e) {&#xD;&#xA;    					e.printStackTrace();&#xD;&#xA;    				}&#xD;&#xA;    			}&#xD;&#xA;    		});&#xD;&#xA;    		Bundle parameters = new Bundle();&#xD;&#xA;    		parameters.putString(""fields"",&#xD;&#xA;    			""id,name,email,gender, birthday"");&#xD;&#xA;    		request.setParameters(parameters);&#xD;&#xA;    		request.executeAsync();&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	@Override&#xD;&#xA;    	public void onCancel() {&#xD;&#xA;    		System.out.println(""onCancel"");&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	@Override&#xD;&#xA;    	public void onError(FacebookException exception) {&#xD;&#xA;    		System.out.println(""onError"");&#xD;&#xA;    		Log.v(""LoginActivity"", exception.getCause().toString());&#xD;&#xA;    	}&#xD;&#xA;    });"
-152983120750475117,58,7,"    using System;&#xD;&#xA;    using System.Windows.Forms;&#xD;&#xA;    &#xD;&#xA;    namespace UIWriteOverhead&#xD;&#xA;    {&#xD;&#xA;        public partial class Form1 : Form&#xD;&#xA;        {&#xD;&#xA;            public Form1()&#xD;&#xA;            {&#xD;&#xA;                InitializeComponent();&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            int[] getNumbers(int upperLimit)&#xD;&#xA;            {&#xD;&#xA;                int[] ReturnValue = new int[upperLimit];&#xD;&#xA;    &#xD;&#xA;                for (int i = 0; i < ReturnValue.Length; i++)&#xD;&#xA;                    ReturnValue[i] = i;&#xD;&#xA;    &#xD;&#xA;                return ReturnValue;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            void printWithBuffer(int[] Values)&#xD;&#xA;            {&#xD;&#xA;                textBox1.Text = """";&#xD;&#xA;                string buffer = """";&#xD;&#xA;    &#xD;&#xA;                foreach (int Number in Values)&#xD;&#xA;                    buffer += Number.ToString() + Environment.NewLine;&#xD;&#xA;                textBox1.Text = buffer;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            void printDirectly(int[] Values){&#xD;&#xA;                textBox1.Text = """";&#xD;&#xA;    &#xD;&#xA;                foreach (int Number in Values)&#xD;&#xA;                    textBox1.Text += Number.ToString() + Environment.NewLine;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            private void btnPrintBuffer_Click(object sender, EventArgs e)&#xD;&#xA;            {&#xD;&#xA;                MessageBox.Show(""Generating Numbers"");&#xD;&#xA;                int[] temp = getNumbers(10000);&#xD;&#xA;                MessageBox.Show(""Printing with buffer"");&#xD;&#xA;                printWithBuffer(temp);&#xD;&#xA;                MessageBox.Show(""Printing done"");&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            private void btnPrintDirect_Click(object sender, EventArgs e)&#xD;&#xA;            {&#xD;&#xA;                MessageBox.Show(""Generating Numbers"");&#xD;&#xA;                int[] temp = getNumbers(1000);&#xD;&#xA;                MessageBox.Show(""Printing directly"");&#xD;&#xA;                printDirectly(temp);&#xD;&#xA;                MessageBox.Show(""Printing done"");&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }"
6192563515783359784,58,7,"        Rails.application.configure do&#xD;&#xA;          # Settings specified here will take precedence over those in config/application.rb.&#xD;&#xA;          # Code is not reloaded between requests.&#xD;&#xA;          config.cache_classes = true&#xD;&#xA;          # Eager load code on boot. This eager loads most of Rails and&#xD;&#xA;          # your application in memory, allowing both threaded web servers&#xD;&#xA;          # and those relying on copy on write to perform better.&#xD;&#xA;          # Rake tasks automatically ignore this option for performance.&#xD;&#xA;          config.eager_load = true&#xD;&#xA;          # Full error reports are disabled and caching is turned on.&#xD;&#xA;          config.consider_all_requests_local       = false&#xD;&#xA;          config.action_controller.perform_caching = true&#xD;&#xA;          # Enable Rack::Cache to put a simple HTTP cache in front of your application&#xD;&#xA;          # Add `rack-cache` to your Gemfile before enabling this.&#xD;&#xA;          # For large-scale production use, consider using a caching reverse proxy like&#xD;&#xA;          # NGINX, varnish or squid.&#xD;&#xA;          # config.action_dispatch.rack_cache = true&#xD;&#xA;          # Disable serving static files from the `/public` folder by default since&#xD;&#xA;          # Apache or NGINX already handles this.&#xD;&#xA;          config.serve_static_files = ENV['RAILS_SERVE_STATIC_FILES'].present?&#xD;&#xA;          # Compress JavaScripts and CSS.&#xD;&#xA;          config.assets.js_compressor = :uglifier&#xD;&#xA;          # config.assets.css_compressor = :sass&#xD;&#xA;          # Do not fallback to assets pipeline if a precompiled asset is missed.&#xD;&#xA;          config.assets.compile = false&#xD;&#xA;          # Asset digests allow you to set far-future HTTP expiration dates on all assets,&#xD;&#xA;          # yet still be able to expire them through the digest params.&#xD;&#xA;          config.assets.digest = true&#xD;&#xA;          # `config.assets.precompile` and `config.assets.version` have moved to config/initializers/assets.rb&#xD;&#xA;          # Specifies the header that your server uses for sending files.&#xD;&#xA;          # config.action_dispatch.x_sendfile_header = 'X-Sendfile' # for Apache&#xD;&#xA;          # config.action_dispatch.x_sendfile_header = 'X-Accel-Redirect' # for NGINX&#xD;&#xA;          # Force all access to the app over SSL, use Strict-Transport-Security, and use secure cookies.&#xD;&#xA;          # config.force_ssl = true&#xD;&#xA;          # Use the lowest log level to ensure availability of diagnostic information&#xD;&#xA;          # when problems arise.&#xD;&#xA;          config.log_level = :debug&#xD;&#xA;          # Prepend all log lines with the following tags.&#xD;&#xA;          # config.log_tags = [ :subdomain, :uuid ]&#xD;&#xA;          # Use a different logger for distributed setups.&#xD;&#xA;          # config.logger = ActiveSupport::TaggedLogging.new(SyslogLogger.new)&#xD;&#xA;          # Use a different cache store in production.&#xD;&#xA;          # config.cache_store = :mem_cache_store&#xD;&#xA;          # Enable serving of images, stylesheets, and JavaScripts from an asset server.&#xD;&#xA;          # config.action_controller.asset_host = 'http://assets.example.com'&#xD;&#xA;          # Ignore bad email addresses and do not raise email delivery errors.&#xD;&#xA;          # Set this to true and configure the email server for immediate delivery to raise delivery errors.&#xD;&#xA;          # config.action_mailer.raise_delivery_errors = false&#xD;&#xA;          # Enable locale fallbacks for I18n (makes lookups for any locale fall back to&#xD;&#xA;          # the I18n.default_locale when a translation cannot be found).&#xD;&#xA;          config.i18n.fallbacks = true&#xD;&#xA;          # Send deprecation notices to registered listeners.&#xD;&#xA;          config.active_support.deprecation = :notify&#xD;&#xA;          # Use default logging formatter so that PID and timestamp are not suppressed.&#xD;&#xA;          config.log_formatter = ::Logger::Formatter.new&#xD;&#xA;          # Do not dump schema after migrations.&#xD;&#xA;          config.active_record.dump_schema_after_migration = false&#xD;&#xA;        end"
-859923329185040896,59,7,"    <?php         &#xD;&#xA;    require_once 'Google/Client.php';     &#xD;&#xA;    require_once 'Google/Service/Analytics.php';       &#xD;&#xA;    session_start();      &#xD;&#xA;    $client = new Google_Client();&#xD;&#xA;        $client->setApplicationName(""Client_Library_Examples"");&#xD;&#xA;        $client->setDeveloperKey(""{devkey}"");  &#xD;&#xA;        $client->setClientId('{clientid}.apps.googleusercontent.com');&#xD;&#xA;        $client->setClientSecret('{clientsecret}');&#xD;&#xA;        $client->setRedirectUri('http://www.daimto.com/Tutorials/PHP/Oauth2.php');&#xD;&#xA;        $client->setScopes(array('https://www.googleapis.com/auth/analytics.readonly'));&#xD;&#xA;    &#xD;&#xA;        //For loging out.&#xD;&#xA;        if ($_GET['logout'] == ""1"") {&#xD;&#xA;    	unset($_SESSION['token']);&#xD;&#xA;           }   &#xD;&#xA;    &#xD;&#xA;        // Step 2: The user accepted your access now you need to exchange it.&#xD;&#xA;        if (isset($_GET['code'])) {&#xD;&#xA;            &#xD;&#xA;        	$client->authenticate($_GET['code']);  &#xD;&#xA;        	$_SESSION['token'] = $client->getAccessToken();&#xD;&#xA;        	$redirect = 'http://' . $_SERVER['HTTP_HOST'] . $_SERVER['PHP_SELF'];&#xD;&#xA;        	header('Location: ' . filter_var($redirect, FILTER_SANITIZE_URL));&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // Step 1:  The user has not authenticated we give them a link to login    &#xD;&#xA;        if (!$client->getAccessToken() && !isset($_SESSION['token'])) {&#xD;&#xA;        	$authUrl = $client->createAuthUrl();&#xD;&#xA;        	print ""<a class='login' href='$authUrl'>Connect Me!</a>"";&#xD;&#xA;            }        &#xD;&#xA;    &#xD;&#xA;        // Step 3: We have access we can now create our service&#xD;&#xA;        if (isset($_SESSION['token'])) {&#xD;&#xA;            print ""<a class='logout' href='"".$_SERVER['PHP_SELF'].""?logout=1'>LogOut</a><br>"";&#xD;&#xA;        	$client->setAccessToken($_SESSION['token']);&#xD;&#xA;        	$service = new Google_Service_Analytics($client);    &#xD;&#xA;    &#xD;&#xA;            // request user accounts&#xD;&#xA;            $accounts = $service->management_accountSummaries->listManagementAccountSummaries();&#xD;&#xA;    &#xD;&#xA;           foreach ($accounts->getItems() as $item) {&#xD;&#xA;    		echo ""Account: "",$item['name'], ""  "" , $item['id'], ""<br /> \n"";		&#xD;&#xA;    		foreach($item->getWebProperties() as $wp) {&#xD;&#xA;    			echo '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WebProperty: ' ,$wp['name'], ""  "" , $wp['id'], ""<br /> \n"";    &#xD;&#xA;    			&#xD;&#xA;    			$views = $wp->getProfiles();&#xD;&#xA;    			if (!is_null($views)) {&#xD;&#xA;    				foreach($wp->getProfiles() as $view) {&#xD;&#xA;    				//	echo '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;View: ' ,$view['name'], ""  "" , $view['id'], ""<br /> \n"";    &#xD;&#xA;    				}&#xD;&#xA;    			}&#xD;&#xA;    		}&#xD;&#xA;    	} // closes account summaries&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;     print ""<br><br><br>"";&#xD;&#xA;     print ""Access from google: "" . $_SESSION['token']; &#xD;&#xA;    ?>"
7250886340197727914,59,7,"       public class MainActivity extends AppCompatActivity {&#xD;&#xA; &#xD;&#xA;    private Toolbar toolbar;&#xD;&#xA;    private TabLayout tabLayout;&#xD;&#xA;    private ViewPager viewPager;&#xD;&#xA; &#xD;&#xA;    @Override&#xD;&#xA;    protected void onCreate(Bundle savedInstanceState) {&#xD;&#xA;        super.onCreate(savedInstanceState);&#xD;&#xA;        setContentView(R.layout.activity_main);&#xD;&#xA; &#xD;&#xA;        toolbar = (Toolbar) findViewById(R.id.toolbar);&#xD;&#xA;        setSupportActionBar(toolbar);&#xD;&#xA; &#xD;&#xA;        getSupportActionBar().setDisplayHomeAsUpEnabled(true);&#xD;&#xA; &#xD;&#xA;        viewPager = (ViewPager) findViewById(R.id.viewpager);&#xD;&#xA;        setupViewPager(viewPager);&#xD;&#xA; &#xD;&#xA;        tabLayout = (TabLayout) findViewById(R.id.tabs);&#xD;&#xA;        tabLayout.setupWithViewPager(viewPager);&#xD;&#xA;    }&#xD;&#xA; &#xD;&#xA;    private void setupViewPager(ViewPager viewPager) {&#xD;&#xA;        ViewPagerAdapter adapter = new ViewPagerAdapter(getSupportFragmentManager());&#xD;&#xA;        adapter.addFragment(new OneFragment(), ""ONE"");&#xD;&#xA;        adapter.addFragment(new TwoFragment(), ""TWO"");&#xD;&#xA;        adapter.addFragment(new ThreeFragment(), ""THREE"");&#xD;&#xA;        viewPager.setAdapter(adapter);&#xD;&#xA;    }&#xD;&#xA; &#xD;&#xA;    class ViewPagerAdapter extends FragmentPagerAdapter {&#xD;&#xA;        private final List<Fragment> mFragmentList = new ArrayList<>();&#xD;&#xA;        private final List<String> mFragmentTitleList = new ArrayList<>();&#xD;&#xA; &#xD;&#xA;        public ViewPagerAdapter(FragmentManager manager) {&#xD;&#xA;            super(manager);&#xD;&#xA;        }&#xD;&#xA; &#xD;&#xA;        @Override&#xD;&#xA;        public Fragment getItem(int position) {&#xD;&#xA;            return mFragmentList.get(position);&#xD;&#xA;        }&#xD;&#xA; &#xD;&#xA;        @Override&#xD;&#xA;        public int getCount() {&#xD;&#xA;            return mFragmentList.size();&#xD;&#xA;        }&#xD;&#xA; &#xD;&#xA;        public void addFragment(Fragment fragment, String title) {&#xD;&#xA;            mFragmentList.add(fragment);&#xD;&#xA;            mFragmentTitleList.add(title);&#xD;&#xA;        }&#xD;&#xA; &#xD;&#xA;        @Override&#xD;&#xA;        public CharSequence getPageTitle(int position) {&#xD;&#xA;            return mFragmentTitleList.get(position);&#xD;&#xA;        }&#xD;&#xA;    }"
8630391557189731108,60,7,"    private Bitmap getBitmap(String path) {&#xD;&#xA;    &#xD;&#xA;            Uri uri = Uri.fromFile(new File(path));&#xD;&#xA;            InputStream in = null;&#xD;&#xA;            try {&#xD;&#xA;                final int IMAGE_MAX_SIZE = 1200000; // 1.2MP&#xD;&#xA;                in = getContentResolver().openInputStream(uri);&#xD;&#xA;    &#xD;&#xA;                // Decode image size&#xD;&#xA;                BitmapFactory.Options o = new BitmapFactory.Options();&#xD;&#xA;                o.inJustDecodeBounds = true;&#xD;&#xA;                BitmapFactory.decodeStream(in, null, o);&#xD;&#xA;                in.close();&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;                int scale = 1;&#xD;&#xA;                while ((o.outWidth * o.outHeight) * (1 / Math.pow(scale, 2)) >&#xD;&#xA;                        IMAGE_MAX_SIZE) {&#xD;&#xA;                    scale++;&#xD;&#xA;                }&#xD;&#xA;                Log.d("""", ""scale = "" + scale + "", orig-width: "" + o.outWidth + "", orig-height: "" + o.outHeight);&#xD;&#xA;    &#xD;&#xA;                Bitmap b = null;&#xD;&#xA;                in = getContentResolver().openInputStream(uri);&#xD;&#xA;                if (scale > 1) {&#xD;&#xA;                    scale--;&#xD;&#xA;                    // scale to max possible inSampleSize that still yields an image&#xD;&#xA;                    // larger than target&#xD;&#xA;                    o = new BitmapFactory.Options();&#xD;&#xA;                    o.inSampleSize = scale;&#xD;&#xA;                    b = BitmapFactory.decodeStream(in, null, o);&#xD;&#xA;    &#xD;&#xA;                    // resize to desired dimensions&#xD;&#xA;                    int height = b.getHeight();&#xD;&#xA;                    int width = b.getWidth();&#xD;&#xA;                    Log.d("""", ""1th scale operation dimenions - width: "" + width + "", height: "" + height);&#xD;&#xA;    &#xD;&#xA;                    double y = Math.sqrt(IMAGE_MAX_SIZE&#xD;&#xA;                            / (((double) width) / height));&#xD;&#xA;                    double x = (y / height) * width;&#xD;&#xA;    &#xD;&#xA;                    Bitmap scaledBitmap = Bitmap.createScaledBitmap(b, (int) x,&#xD;&#xA;                            (int) y, true);&#xD;&#xA;                    b.recycle();&#xD;&#xA;                    b = scaledBitmap;&#xD;&#xA;    &#xD;&#xA;                    System.gc();&#xD;&#xA;                } else {&#xD;&#xA;                    b = BitmapFactory.decodeStream(in);&#xD;&#xA;                }&#xD;&#xA;                in.close();&#xD;&#xA;    &#xD;&#xA;                Log.d("""", ""bitmap size - width: "" + b.getWidth() + "", height: "" +&#xD;&#xA;                        b.getHeight());&#xD;&#xA;                return b;&#xD;&#xA;            } catch (IOException e) {&#xD;&#xA;                Log.e("""", e.getMessage(), e);&#xD;&#xA;                return null;&#xD;&#xA;            }&#xD;&#xA;        }"
-9152312263599898882,60,7,"        {&#xD;&#xA;        ""name"": ""angular-quickstart"",&#xD;&#xA;     ""version"": ""1.0.0"",&#xD;&#xA;     ""description"": ""QuickStart package.json from the documentation, supplemented with testing support"",&#xD;&#xA;      ""scripts"": {&#xD;&#xA;      ""build"": ""tsc -p src/"",&#xD;&#xA;      ""build:watch"": ""tsc -p src/ -w"",&#xD;&#xA;      ""build:e2e"": ""tsc -p e2e/"",&#xD;&#xA;      ""serve"": ""lite-server -c=bs-config.json"",&#xD;&#xA;      ""serve:e2e"": ""lite-server -c=bs-config.e2e.json"",&#xD;&#xA;      ""prestart"": ""npm run build"",&#xD;&#xA;    ""start"": ""concurrently \""npm run build:watch\"" \""npm run serve\"""",&#xD;&#xA;    ""pree2e"": ""npm run build:e2e"",&#xD;&#xA;     ""e2e"": ""concurrently \""npm run serve:e2e\"" \""npm run protractor\"" --kill-others --success first"",&#xD;&#xA;    ""preprotractor"": ""webdriver-manager update"",&#xD;&#xA;    ""protractor"": ""protractor protractor.config.js"",&#xD;&#xA;    ""pretest"": ""npm run build"",&#xD;&#xA;    ""test"": ""concurrently \""npm run build:watch\"" \""karma start karma.conf.js\"""",&#xD;&#xA;     ""pretest:once"": ""npm run build"",&#xD;&#xA;     ""test:once"": ""karma start karma.conf.js --single-run"",&#xD;&#xA;     ""lint"": ""tslint ./src/**/*.ts -t verbose""&#xD;&#xA;       },&#xD;&#xA;     ""keywords"": [],&#xD;&#xA;     ""author"": """",&#xD;&#xA;     ""license"": ""MIT"",&#xD;&#xA;    ""dependencies"": {&#xD;&#xA;    ""@angular/common"": ""~4.3.4"",&#xD;&#xA;    ""@angular/compiler"": ""~4.3.4"",&#xD;&#xA;    ""@angular/core"": ""~4.3.4"",&#xD;&#xA;    ""@angular/forms"": ""~4.3.4"",&#xD;&#xA;    ""@angular/http"": ""~4.3.4"",&#xD;&#xA;    ""@angular/platform-browser"": ""~4.3.4"",&#xD;&#xA;    ""@angular/platform-browser-dynamic"": ""~4.3.4"",&#xD;&#xA;    ""@angular/router"": ""~4.3.4"",&#xD;&#xA;    ""angular-in-memory-web-api"": ""~0.3.0"",&#xD;&#xA;    ""systemjs"": ""0.19.40"",&#xD;&#xA;    ""core-js"": ""^2.4.1"",&#xD;&#xA;    ""rxjs"": ""5.0.1"",&#xD;&#xA;      ""zone.js"": ""^0.8.4""&#xD;&#xA;       },&#xD;&#xA;     ""devDependencies"": {&#xD;&#xA;    ""concurrently"": ""^3.2.0"",&#xD;&#xA;    ""lite-server"": ""^2.2.2"",&#xD;&#xA;    ""typescript"": ""~2.1.0"",&#xD;&#xA;    ""canonical-path"": ""0.0.2"",&#xD;&#xA;    ""tslint"": ""^3.15.1"",&#xD;&#xA;    ""lodash"": ""^4.16.4"",&#xD;&#xA;    ""jasmine-core"": ""~2.4.1"",&#xD;&#xA;    ""karma"": ""^1.3.0"",&#xD;&#xA;    ""karma-chrome-launcher"": ""^2.0.0"",&#xD;&#xA;    ""karma-cli"": ""^1.0.1"",&#xD;&#xA;    ""karma-jasmine"": ""^1.0.2"",&#xD;&#xA;    ""karma-jasmine-html-reporter"": ""^0.2.2"",&#xD;&#xA;    ""protractor"": ""~4.0.14"",&#xD;&#xA;     ""rimraf"": ""^2.5.4"",&#xD;&#xA;     ""@types/node"": ""^6.0.46"",&#xD;&#xA;    ""@types/jasmine"": ""2.5.36""&#xD;&#xA;       },&#xD;&#xA;      ""repository"": {}&#xD;&#xA;    }"
178615073772769725,62,7,"    <div class=""panel-group"" id=""accordion"">&#xD;&#xA;        <div class=""panel panel-default"">&#xD;&#xA;            <div class=""panel-heading"">&#xD;&#xA;                <h4 class=""panel-title"">&#xD;&#xA;                    <a data-toggle=""collapse"" data-parent=""#accordion"" href=""#collapseOne"">Collapsible Group&#xD;&#xA;                        Item #1 </a>&#xD;&#xA;                </h4>&#xD;&#xA;            </div>&#xD;&#xA;            <div id=""collapseOne"" class=""panel-collapse collapse in"">&#xD;&#xA;                <div class=""panel-body"">&#xD;&#xA;                    Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson&#xD;&#xA;                    ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food&#xD;&#xA;                    truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put&#xD;&#xA;                    a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim&#xD;&#xA;                    keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident.&#xD;&#xA;                    Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table,&#xD;&#xA;                    raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus&#xD;&#xA;                    labore sustainable VHS.&#xD;&#xA;                </div>&#xD;&#xA;            </div>&#xD;&#xA;        </div>&#xD;&#xA;        <div class=""panel panel-default"">&#xD;&#xA;            <div class=""panel-heading"">&#xD;&#xA;                <h4 class=""panel-title"">&#xD;&#xA;                    <a data-toggle=""collapse"" data-parent=""#accordion"" href=""#collapseTwo"">Collapsible Group&#xD;&#xA;                        Item #2 </a>&#xD;&#xA;                </h4>&#xD;&#xA;            </div>&#xD;&#xA;            <div id=""collapseTwo"" class=""panel-collapse collapse"">&#xD;&#xA;                <div class=""panel-body"">&#xD;&#xA;                    Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson&#xD;&#xA;                    ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food&#xD;&#xA;                    truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put&#xD;&#xA;                    a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim&#xD;&#xA;                    keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident.&#xD;&#xA;                    Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table,&#xD;&#xA;                    raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus&#xD;&#xA;                    labore sustainable VHS.&#xD;&#xA;                </div>&#xD;&#xA;            </div>&#xD;&#xA;        </div>&#xD;&#xA;        <div class=""panel panel-default"">&#xD;&#xA;            <div class=""panel-heading"">&#xD;&#xA;                <h4 class=""panel-title"">&#xD;&#xA;                    <a data-toggle=""collapse"" data-parent=""#accordion"" href=""#collapseThree"">Collapsible&#xD;&#xA;                        Group Item #3 </a>&#xD;&#xA;                </h4>&#xD;&#xA;            </div>&#xD;&#xA;            <div id=""collapseThree"" class=""panel-collapse collapse"">&#xD;&#xA;                <div class=""panel-body"">&#xD;&#xA;                    Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson&#xD;&#xA;                    ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food&#xD;&#xA;                    truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put&#xD;&#xA;                    a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim&#xD;&#xA;                    keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident.&#xD;&#xA;                    Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table,&#xD;&#xA;                    raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus&#xD;&#xA;                    labore sustainable VHS.&#xD;&#xA;                </div>&#xD;&#xA;            </div>&#xD;&#xA;        </div>&#xD;&#xA;    </div>"
1388200812100721394,63,7,"         {&#xD;&#xA;           ""results"" : [&#xD;&#xA;          {&#xD;&#xA;         ""address_components"" : [&#xD;&#xA;            {&#xD;&#xA;               ""long_name"" : ""1600"",&#xD;&#xA;               ""short_name"" : ""1600"",&#xD;&#xA;               ""types"" : [ ""street_number"" ]&#xD;&#xA;            },&#xD;&#xA;            {&#xD;&#xA;               ""long_name"" : ""Amphitheatre Pkwy"",&#xD;&#xA;               ""short_name"" : ""Amphitheatre Pkwy"",&#xD;&#xA;               ""types"" : [ ""route"" ]&#xD;&#xA;            },&#xD;&#xA;            {&#xD;&#xA;               ""long_name"" : ""Mountain View"",&#xD;&#xA;               ""short_name"" : ""Mountain View"",&#xD;&#xA;               ""types"" : [ ""locality"", ""political"" ]&#xD;&#xA;            },&#xD;&#xA;            {&#xD;&#xA;               ""long_name"" : ""Santa Clara"",&#xD;&#xA;               ""short_name"" : ""Santa Clara"",&#xD;&#xA;               ""types"" : [ ""administrative_area_level_2"", ""political"" ]&#xD;&#xA;            },&#xD;&#xA;            {&#xD;&#xA;               ""long_name"" : ""California"",&#xD;&#xA;               ""short_name"" : ""CA"",&#xD;&#xA;               ""types"" : [ ""administrative_area_level_1"", ""political"" ]&#xD;&#xA;            },&#xD;&#xA;            {&#xD;&#xA;               ""long_name"" : ""United States"",&#xD;&#xA;               ""short_name"" : ""US"",&#xD;&#xA;               ""types"" : [ ""country"", ""political"" ]&#xD;&#xA;            },&#xD;&#xA;            {&#xD;&#xA;               ""long_name"" : ""94043"",&#xD;&#xA;               ""short_name"" : ""94043"",&#xD;&#xA;               ""types"" : [ ""postal_code"" ]&#xD;&#xA;            }&#xD;&#xA;         ],&#xD;&#xA;         ""formatted_address"" : ""1600 Amphitheatre Pkwy, Mountain View, CA 94043, USA"",&#xD;&#xA;         ""geometry"" : {&#xD;&#xA;            ""location"" : {&#xD;&#xA;               ""lat"" : 37.42291810,&#xD;&#xA;               ""lng"" : -122.08542120&#xD;&#xA;            },&#xD;&#xA;            ""location_type"" : ""ROOFTOP"",&#xD;&#xA;            ""viewport"" : {&#xD;&#xA;               ""northeast"" : {&#xD;&#xA;                  ""lat"" : 37.42426708029149,&#xD;&#xA;                  ""lng"" : -122.0840722197085&#xD;&#xA;               },&#xD;&#xA;               ""southwest"" : {&#xD;&#xA;                  ""lat"" : 37.42156911970850,&#xD;&#xA;                  ""lng"" : -122.0867701802915&#xD;&#xA;               }&#xD;&#xA;            }&#xD;&#xA;         },&#xD;&#xA;         ""types"" : [ ""street_address"" ]&#xD;&#xA;      }&#xD;&#xA;      ],&#xD;&#xA;       ""status"" : ""OK""&#xD;&#xA;     }"
2489625192477763556,66,7,"     $(function () {&#xD;&#xA;        $('#container').highcharts({&#xD;&#xA;            chart: {&#xD;&#xA;                type: 'column'&#xD;&#xA;            },&#xD;&#xA;            title: {&#xD;&#xA;                text: 'Monthly Average Rainfall'&#xD;&#xA;            },&#xD;&#xA;            subtitle: {&#xD;&#xA;                text: 'Source: WorldClimate.com'&#xD;&#xA;            },&#xD;&#xA;            xAxis: {&#xD;&#xA;                categories: [&#xD;&#xA;                    'Jan',&#xD;&#xA;                    'Feb',&#xD;&#xA;                    'Mar',&#xD;&#xA;                    'Apr',&#xD;&#xA;                    'May',&#xD;&#xA;                    'Jun',&#xD;&#xA;                    'Jul',&#xD;&#xA;                    'Aug',&#xD;&#xA;                    'Sep',&#xD;&#xA;                    'Oct',&#xD;&#xA;                    'Nov',&#xD;&#xA;                    'Dec'&#xD;&#xA;                ]&#xD;&#xA;            },&#xD;&#xA;            yAxis: {&#xD;&#xA;                min: 0,&#xD;&#xA;                title: {&#xD;&#xA;                    text: 'Rainfall (mm)'&#xD;&#xA;                }&#xD;&#xA;            },&#xD;&#xA;            tooltip: {&#xD;&#xA;                headerFormat: '<span style=""font-size:10px"">{point.key}</span><table>',&#xD;&#xA;                pointFormat: '<tr><td style=""color:{series.color};padding:0"">{series.name}: </td>' +&#xD;&#xA;                    '<td style=""padding:0""><b>{point.y:.1f} mm</b></td></tr>',&#xD;&#xA;                footerFormat: '</table>',&#xD;&#xA;                shared: true,&#xD;&#xA;                useHTML: true&#xD;&#xA;            },&#xD;&#xA;            plotOptions: {&#xD;&#xA;                column: {&#xD;&#xA;                    pointPadding: 0.2,&#xD;&#xA;                    borderWidth: 0&#xD;&#xA;                }&#xD;&#xA;            },&#xD;&#xA;            series: [{&#xD;&#xA;                name: 'Tokyo',&#xD;&#xA;                data: [49.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6, 148.5, 216.4, 194.1,        95.6, 54.4]&#xD;&#xA;    &#xD;&#xA;            }, {&#xD;&#xA;                name: 'New York',&#xD;&#xA;                data: [83.6, 78.8, 98.5, 93.4, 106.0, 84.5, 105.0, 104.3, 91.2, 83.5, 106.6, 92.3]&#xD;&#xA;    &#xD;&#xA;            }, {&#xD;&#xA;                name: 'London',&#xD;&#xA;                data: [48.9, 38.8, 39.3, 41.4, 47.0, 48.3, 59.0, 59.6, 52.4, 65.2, 59.3, 51.2]&#xD;&#xA;    &#xD;&#xA;            }, {&#xD;&#xA;                name: 'Berlin',&#xD;&#xA;                data: [42.4, 33.2, 34.5, 39.7, 52.6, 75.5, 57.4, 60.4, 47.6, 39.1, 46.8, 51.1]&#xD;&#xA;    &#xD;&#xA;            }]&#xD;&#xA;        });&#xD;&#xA;    });   "
-8721870048897768134,69,7,"    import java.awt.*;&#xD;&#xA;    import java.awt.event.*;&#xD;&#xA;    import javax.swing.*;&#xD;&#xA;    import javax.swing.border.*;&#xD;&#xA;    &#xD;&#xA;    public class CalculatorPanel extends JPanel&#xD;&#xA;    {&#xD;&#xA;    	private JTextField display;&#xD;&#xA;    &#xD;&#xA;    	public CalculatorPanel()&#xD;&#xA;    	{&#xD;&#xA;    		Action numberAction = new AbstractAction()&#xD;&#xA;    		{&#xD;&#xA;    			@Override&#xD;&#xA;    			public void actionPerformed(ActionEvent e)&#xD;&#xA;    			{&#xD;&#xA;    //				display.setCaretPosition( display.getDocument().getLength() );&#xD;&#xA;    				display.replaceSelection(e.getActionCommand());&#xD;&#xA;    			}&#xD;&#xA;    		};&#xD;&#xA;    &#xD;&#xA;    		setLayout( new BorderLayout() );&#xD;&#xA;    &#xD;&#xA;    		display = new JTextField();&#xD;&#xA;    		display.setEditable( false );&#xD;&#xA;    		display.setHorizontalAlignment(JTextField.RIGHT);&#xD;&#xA;    		add(display, BorderLayout.NORTH);&#xD;&#xA;    &#xD;&#xA;    		JPanel buttonPanel = new JPanel();&#xD;&#xA;    		buttonPanel.setLayout( new GridLayout(0, 5) );&#xD;&#xA;    		add(buttonPanel, BorderLayout.CENTER);&#xD;&#xA;    &#xD;&#xA;    		for (int i = 0; i < 10; i++)&#xD;&#xA;    		{&#xD;&#xA;    			String text = String.valueOf(i);&#xD;&#xA;    			JButton button = new JButton( text );&#xD;&#xA;    			button.addActionListener( numberAction );&#xD;&#xA;    			button.setBorder( new LineBorder(Color.BLACK) );&#xD;&#xA;    			button.setPreferredSize( new Dimension(30, 30) );&#xD;&#xA;    			buttonPanel.add( button );&#xD;&#xA;    &#xD;&#xA;    			InputMap inputMap = button.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);&#xD;&#xA;    			inputMap.put(KeyStroke.getKeyStroke(text), text);&#xD;&#xA;    			inputMap.put(KeyStroke.getKeyStroke(""NUMPAD"" + text), text);&#xD;&#xA;    			button.getActionMap().put(text, numberAction);&#xD;&#xA;    		}&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	private static void createAndShowUI()&#xD;&#xA;    	{&#xD;&#xA;    		JFrame frame = new JFrame(""Calculator Panel"");&#xD;&#xA;    		frame.setDefaultCloseOperation( JFrame.EXIT_ON_CLOSE );&#xD;&#xA;    		frame.add( new CalculatorPanel() );&#xD;&#xA;    		frame.pack();&#xD;&#xA;    		frame.setLocationRelativeTo( null );&#xD;&#xA;    		frame.setVisible(true);&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public static void main(String[] args)&#xD;&#xA;    	{&#xD;&#xA;    		EventQueue.invokeLater(new Runnable()&#xD;&#xA;    		{&#xD;&#xA;    			public void run()&#xD;&#xA;    			{&#xD;&#xA;    				createAndShowUI();&#xD;&#xA;    			}&#xD;&#xA;    		});&#xD;&#xA;    	}&#xD;&#xA;    }"
1423378431109717224,70,7,"		$(function() {&#xD;&#xA;		&#xD;&#xA;		$(""input,textarea"").jqBootstrapValidation({&#xD;&#xA;		preventSubmit: true,&#xD;&#xA;		submitError: function($form, event, errors) {&#xD;&#xA;		// additional error messages or events&#xD;&#xA;		},&#xD;&#xA;		submitSuccess: function($form, event) {&#xD;&#xA;		event.preventDefault(); // prevent default submit behaviour&#xD;&#xA;		// get values from FORM&#xD;&#xA;		var name = $(""input#name"").val();&#xD;&#xA;		var email = $(""input#email"").val();&#xD;&#xA;		var phone = $(""input#phone"").val();&#xD;&#xA;		var message = $(""textarea#message"").val();&#xD;&#xA;		var firstName = name; // For Success/Failure Message&#xD;&#xA;		// Check for white space in name for Success/Fail message&#xD;&#xA;		if (firstName.indexOf(' ') >= 0) {&#xD;&#xA;		firstName = name.split(' ').slice(0, -1).join(' ');&#xD;&#xA;		}&#xD;&#xA;		$.ajax({&#xD;&#xA;		url: ""././mail/contact_me.php"",&#xD;&#xA;		type: ""POST"",&#xD;&#xA;		data: {&#xD;&#xA;		name: name,&#xD;&#xA;		phone: phone,&#xD;&#xA;		email: email,&#xD;&#xA;		message: message&#xD;&#xA;		},&#xD;&#xA;		cache: false,&#xD;&#xA;		success: function() {&#xD;&#xA;		// Success message&#xD;&#xA;		$('#success').html(""<div class='alert alert-success'>"");&#xD;&#xA;		$('#success > .alert-success').html(""<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;"")&#xD;&#xA;		.append(""</button>"");&#xD;&#xA;		$('#success > .alert-success')&#xD;&#xA;		.append(""<strong>Your message has been sent. </strong>"");&#xD;&#xA;		$('#success > .alert-success')&#xD;&#xA;		.append('</div>');&#xD;&#xA;		&#xD;&#xA;		//clear all fields&#xD;&#xA;		$('#contactForm').trigger(""reset"");&#xD;&#xA;		},&#xD;&#xA;		error: function() {&#xD;&#xA;		// Fail message&#xD;&#xA;		$('#success').html(""<div class='alert alert-danger'>"");&#xD;&#xA;		$('#success > .alert-danger').html(""<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;"")&#xD;&#xA;		.append(""</button>"");&#xD;&#xA;		$('#success > .alert-danger').append(""<strong>Sorry "" + firstName + "", it seems that my mail server is not responding. Please try again later!"");&#xD;&#xA;		$('#success > .alert-danger').append('</div>');&#xD;&#xA;		//clear all fields&#xD;&#xA;		$('#contactForm').trigger(""reset"");&#xD;&#xA;		},&#xD;&#xA;		})&#xD;&#xA;		},&#xD;&#xA;		filter: function() {&#xD;&#xA;		return $(this).is("":visible"");&#xD;&#xA;		},&#xD;&#xA;		});&#xD;&#xA;		&#xD;&#xA;		$(""a[data-toggle=\""tab\""]"").click(function(e) {&#xD;&#xA;		e.preventDefault();&#xD;&#xA;		$(this).tab(""show"");&#xD;&#xA;		});&#xD;&#xA;		});&#xD;&#xA;		&#xD;&#xA;		&#xD;&#xA;		/*When clicking on Full hide fail/success boxes */&#xD;&#xA;		$('#name').focus(function() {&#xD;&#xA;		$('#success').html('');&#xD;&#xA;		});"
5926779484911530976,73,7,"    public class VerticalViewPager extends ViewPager {&#xD;&#xA;    &#xD;&#xA;        public VerticalViewPager(Context context) {&#xD;&#xA;            super(context);&#xD;&#xA;            init();&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public VerticalViewPager(Context context, AttributeSet attrs) {&#xD;&#xA;            super(context, attrs);&#xD;&#xA;            init();&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private void init() {&#xD;&#xA;            // The majority of the magic happens here&#xD;&#xA;            setPageTransformer(true, new VerticalPageTransformer());&#xD;&#xA;            // The easiest way to get rid of the overscroll drawing that happens on the left and right&#xD;&#xA;            setOverScrollMode(OVER_SCROLL_NEVER);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private class VerticalPageTransformer implements ViewPager.PageTransformer {&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            public void transformPage(View view, float position) {&#xD;&#xA;    &#xD;&#xA;                if (position < -1) { // [-Infinity,-1)&#xD;&#xA;                    // This page is way off-screen to the left.&#xD;&#xA;                    view.setAlpha(0);&#xD;&#xA;    &#xD;&#xA;                } else if (position <= 1) { // [-1,1]&#xD;&#xA;                    view.setAlpha(1);&#xD;&#xA;    &#xD;&#xA;                    // Counteract the default slide transition&#xD;&#xA;                    view.setTranslationX(view.getWidth() * -position);&#xD;&#xA;    &#xD;&#xA;                    //set Y position to swipe in from top&#xD;&#xA;                    float yPosition = position * view.getHeight();&#xD;&#xA;                    view.setTranslationY(yPosition);&#xD;&#xA;    &#xD;&#xA;                } else { // (1,+Infinity]&#xD;&#xA;                    // This page is way off-screen to the right.&#xD;&#xA;                    view.setAlpha(0);&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /**&#xD;&#xA;         * Swaps the X and Y coordinates of your touch event.&#xD;&#xA;         */&#xD;&#xA;        private MotionEvent swapXY(MotionEvent ev) {&#xD;&#xA;            float width = getWidth();&#xD;&#xA;            float height = getHeight();&#xD;&#xA;    &#xD;&#xA;            float newX = (ev.getY() / height) * width;&#xD;&#xA;            float newY = (ev.getX() / width) * height;&#xD;&#xA;    &#xD;&#xA;            ev.setLocation(newX, newY);&#xD;&#xA;    &#xD;&#xA;            return ev;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public boolean onInterceptTouchEvent(MotionEvent ev){&#xD;&#xA;            boolean intercepted = super.onInterceptTouchEvent(swapXY(ev));&#xD;&#xA;            swapXY(ev); // return touch coordinates to original reference frame for any child views&#xD;&#xA;            return intercepted;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public boolean onTouchEvent(MotionEvent ev) {&#xD;&#xA;            return super.onTouchEvent(swapXY(ev));&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    }"
7639735243856883260,76,7,"    import java.awt.*;&#xD;&#xA;    import java.util.*;&#xD;&#xA;    import javax.swing.*;&#xD;&#xA;    import javax.swing.event.*;&#xD;&#xA;    import javax.swing.table.*;&#xD;&#xA;    &#xD;&#xA;    public class TablePropertyEditor extends JFrame&#xD;&#xA;    {&#xD;&#xA;    	public TablePropertyEditor()&#xD;&#xA;    	{&#xD;&#xA;    		String[] columnNames = {""Type"", ""Value""};&#xD;&#xA;    		Object[][] data =&#xD;&#xA;    		{&#xD;&#xA;    			{""String"", ""I'm a string""},&#xD;&#xA;    			{""Date"", new Date()},&#xD;&#xA;    			{""Integer"", new Integer(123)},&#xD;&#xA;    			{""Double"", new Double(123.45)},&#xD;&#xA;    			{""Boolean"", Boolean.TRUE}&#xD;&#xA;    		};&#xD;&#xA;    &#xD;&#xA;    		JTable table = new JTable(data, columnNames)&#xD;&#xA;    		{&#xD;&#xA;    			private Class editingClass;&#xD;&#xA;    &#xD;&#xA;    			public TableCellRenderer getCellRenderer(int row, int column)&#xD;&#xA;    			{&#xD;&#xA;    				editingClass = null;&#xD;&#xA;    				int modelColumn = convertColumnIndexToModel(column);&#xD;&#xA;    &#xD;&#xA;    				if (modelColumn == 1)&#xD;&#xA;    				{&#xD;&#xA;    					Class rowClass = getModel().getValueAt(row, modelColumn).getClass();&#xD;&#xA;    					return getDefaultRenderer( rowClass );&#xD;&#xA;    				}&#xD;&#xA;    				else&#xD;&#xA;    					return super.getCellRenderer(row, column);&#xD;&#xA;    			}&#xD;&#xA;    &#xD;&#xA;    			public TableCellEditor getCellEditor(int row, int column)&#xD;&#xA;    			{&#xD;&#xA;    				editingClass = null;&#xD;&#xA;    				int modelColumn = convertColumnIndexToModel(column);&#xD;&#xA;    &#xD;&#xA;    				if (modelColumn == 1)&#xD;&#xA;    				{&#xD;&#xA;    					editingClass = getModel().getValueAt(row, modelColumn).getClass();&#xD;&#xA;    					return getDefaultEditor( editingClass );&#xD;&#xA;    				}&#xD;&#xA;    				else&#xD;&#xA;    					return super.getCellEditor(row, column);&#xD;&#xA;    			}&#xD;&#xA;    &#xD;&#xA;    			//  This method is also invoked by the editor when the value in the editor&#xD;&#xA;    			//  component is saved in the TableModel. The class was saved when the&#xD;&#xA;    			//  editor was invoked so the proper class can be created.&#xD;&#xA;    &#xD;&#xA;    			public Class getColumnClass(int column)&#xD;&#xA;    			{&#xD;&#xA;    				return editingClass != null ? editingClass : super.getColumnClass(column);&#xD;&#xA;    			}&#xD;&#xA;    		};&#xD;&#xA;    &#xD;&#xA;    		table.setPreferredScrollableViewportSize(table.getPreferredSize());&#xD;&#xA;    		JScrollPane scrollPane = new JScrollPane( table );&#xD;&#xA;    		getContentPane().add( scrollPane );&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public static void main(String[] args)&#xD;&#xA;    	{&#xD;&#xA;    		TablePropertyEditor frame = new TablePropertyEditor();&#xD;&#xA;    		frame.setDefaultCloseOperation( EXIT_ON_CLOSE );&#xD;&#xA;    		frame.pack();&#xD;&#xA;    		frame.setLocationRelativeTo( null );&#xD;&#xA;    		frame.setVisible(true);&#xD;&#xA;    	}&#xD;&#xA;    }"
-3569313439872226556,76,7,"    public class Movie {&#xD;&#xA;    	private String name, thumbnailUrl;&#xD;&#xA;    	//private int year;&#xD;&#xA;    	private String average_ratings,area,cuisine,address;&#xD;&#xA;    //	private ArrayList<String> genre;&#xD;&#xA;    &#xD;&#xA;    	public Movie() {&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public Movie(String name, String thumbnailUrl, String average_ratings, String area, String cuisine, String address&#xD;&#xA;    			) {&#xD;&#xA;    		this.name = name;&#xD;&#xA;    		this.thumbnailUrl = thumbnailUrl;&#xD;&#xA;    		//this.year = year;&#xD;&#xA;    		this.average_ratings = average_ratings;&#xD;&#xA;    		this.area=area;&#xD;&#xA;    		this.cuisine=cuisine;&#xD;&#xA;    this.address=address;&#xD;&#xA;    		//this.genre = genre;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public String getName() {&#xD;&#xA;    		return name;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public void setName(String name) {&#xD;&#xA;    		this.name = name;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public String getThumbnailUrl() {&#xD;&#xA;    		return thumbnailUrl;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public void setThumbnailUrl(String thumbnailUrl) {&#xD;&#xA;    		this.thumbnailUrl = thumbnailUrl;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	/*public int getYear() {&#xD;&#xA;    		return year;&#xD;&#xA;    	}*/&#xD;&#xA;    &#xD;&#xA;    	/*public void setYear(int year) {&#xD;&#xA;    		this.year = year;&#xD;&#xA;    	}*/&#xD;&#xA;    &#xD;&#xA;    	public String getAverage_ratings() {&#xD;&#xA;    		return average_ratings;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public void setAverage_ratings(String average_ratings) {&#xD;&#xA;    		this.average_ratings = average_ratings;&#xD;&#xA;    	}&#xD;&#xA;    	public String getAddress() {&#xD;&#xA;    		return address;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public void setAddress(String address) {&#xD;&#xA;    		this.address = address;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public String getCuisine() {&#xD;&#xA;    		return cuisine;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public void setCuisine(String cuisine) {&#xD;&#xA;    		this.cuisine = cuisine;&#xD;&#xA;    	}&#xD;&#xA;    	/*public ArrayList<String> getGenre() {&#xD;&#xA;    		return genre;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public void setGenre(ArrayList<String> genre) {&#xD;&#xA;    		this.genre = genre;&#xD;&#xA;    	}&#xD;&#xA;    */&#xD;&#xA;    }"
4777602232607231306,77,7,"    // Call this method somewhere in your view controller setup code.&#xD;&#xA;    &#xD;&#xA;    - (void)registerForKeyboardNotifications&#xD;&#xA;    &#xD;&#xA;    {&#xD;&#xA;    &#xD;&#xA;        [[NSNotificationCenter defaultCenter] addObserver:self&#xD;&#xA;    &#xD;&#xA;                selector:@selector(keyboardWasShown:)&#xD;&#xA;    &#xD;&#xA;                name:UIKeyboardDidShowNotification object:nil];&#xD;&#xA;    &#xD;&#xA;     &#xD;&#xA;    &#xD;&#xA;       [[NSNotificationCenter defaultCenter] addObserver:self&#xD;&#xA;    &#xD;&#xA;                 selector:@selector(keyboardWillBeHidden:)&#xD;&#xA;    &#xD;&#xA;                 name:UIKeyboardWillHideNotification object:nil];&#xD;&#xA;    &#xD;&#xA;     &#xD;&#xA;    &#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;     &#xD;&#xA;    &#xD;&#xA;    // Called when the UIKeyboardDidShowNotification is sent.&#xD;&#xA;    &#xD;&#xA;    - (void)keyboardWasShown:(NSNotification*)aNotification&#xD;&#xA;    &#xD;&#xA;    {&#xD;&#xA;    &#xD;&#xA;        NSDictionary* info = [aNotification userInfo];&#xD;&#xA;    &#xD;&#xA;        CGSize kbSize = [[info objectForKey:UIKeyboardFrameBeginUserInfoKey] CGRectValue].size;&#xD;&#xA;    &#xD;&#xA;     &#xD;&#xA;    &#xD;&#xA;        UIEdgeInsets contentInsets = UIEdgeInsetsMake(0.0, 0.0, kbSize.height, 0.0);&#xD;&#xA;    &#xD;&#xA;        scrollView.contentInset = contentInsets;&#xD;&#xA;    &#xD;&#xA;        scrollView.scrollIndicatorInsets = contentInsets;&#xD;&#xA;    &#xD;&#xA;     &#xD;&#xA;    &#xD;&#xA;        // If active text field is hidden by keyboard, scroll it so it's visible&#xD;&#xA;    &#xD;&#xA;        // Your app might not need or want this behavior.&#xD;&#xA;    &#xD;&#xA;        CGRect aRect = self.view.frame;&#xD;&#xA;    &#xD;&#xA;        aRect.size.height -= kbSize.height;&#xD;&#xA;    &#xD;&#xA;        if (!CGRectContainsPoint(aRect, activeField.frame.origin) ) {&#xD;&#xA;    &#xD;&#xA;            [self.scrollView scrollRectToVisible:activeField.frame animated:YES];&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;     &#xD;&#xA;    &#xD;&#xA;    // Called when the UIKeyboardWillHideNotification is sent&#xD;&#xA;    &#xD;&#xA;    - (void)keyboardWillBeHidden:(NSNotification*)aNotification&#xD;&#xA;    &#xD;&#xA;    {&#xD;&#xA;    &#xD;&#xA;        UIEdgeInsets contentInsets = UIEdgeInsetsZero;&#xD;&#xA;    &#xD;&#xA;        scrollView.contentInset = contentInsets;&#xD;&#xA;    &#xD;&#xA;        scrollView.scrollIndicatorInsets = contentInsets;&#xD;&#xA;    &#xD;&#xA;    }"
-3942509255400703052,82,7,"    $(document).ready(function(){&#xD;&#xA;        $('button').click(function(){&#xD;&#xA;            var data = $('#txt').val();&#xD;&#xA;            if(data == '')&#xD;&#xA;                return;&#xD;&#xA;            &#xD;&#xA;            JSONToCSVConvertor(data, ""Vehicle Report"", true);&#xD;&#xA;        });&#xD;&#xA;    });&#xD;&#xA;    &#xD;&#xA;    function JSONToCSVConvertor(JSONData, ReportTitle, ShowLabel) {&#xD;&#xA;        //If JSONData is not an object then JSON.parse will parse the JSON string in an Object&#xD;&#xA;        var arrData = typeof JSONData != 'object' ? JSON.parse(JSONData) : JSONData;&#xD;&#xA;        &#xD;&#xA;        var CSV = '';    &#xD;&#xA;        //Set Report title in first row or line&#xD;&#xA;        &#xD;&#xA;        CSV += ReportTitle + '\r\n\n';&#xD;&#xA;    &#xD;&#xA;        //This condition will generate the Label/Header&#xD;&#xA;        if (ShowLabel) {&#xD;&#xA;            var row = """";&#xD;&#xA;            &#xD;&#xA;            //This loop will extract the label from 1st index of on array&#xD;&#xA;            for (var index in arrData[0]) {&#xD;&#xA;                &#xD;&#xA;                //Now convert each value to string and comma-seprated&#xD;&#xA;                row += index + ',';&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            row = row.slice(0, -1);&#xD;&#xA;            &#xD;&#xA;            //append Label row with line break&#xD;&#xA;            CSV += row + '\r\n';&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        //1st loop is to extract each row&#xD;&#xA;        for (var i = 0; i < arrData.length; i++) {&#xD;&#xA;            var row = """";&#xD;&#xA;            &#xD;&#xA;            //2nd loop will extract each column and convert it in string comma-seprated&#xD;&#xA;            for (var index in arrData[i]) {&#xD;&#xA;                row += '""' + arrData[i][index] + '"",';&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            row.slice(0, row.length - 1);&#xD;&#xA;            &#xD;&#xA;            //add a line break after each row&#xD;&#xA;            CSV += row + '\r\n';&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        if (CSV == '') {        &#xD;&#xA;            alert(""Invalid data"");&#xD;&#xA;            return;&#xD;&#xA;        }   &#xD;&#xA;        &#xD;&#xA;        //Generate a file name&#xD;&#xA;        var fileName = ""MyReport_"";&#xD;&#xA;        //this will remove the blank-spaces from the title and replace it with an underscore&#xD;&#xA;        fileName += ReportTitle.replace(/ /g,""_"");   &#xD;&#xA;        &#xD;&#xA;        //Initialize file format you want csv or xls&#xD;&#xA;        var uri = 'data:text/csv;charset=utf-8,' + escape(CSV);&#xD;&#xA;        &#xD;&#xA;        // Now the little tricky part.&#xD;&#xA;        // you can use either>> window.open(uri);&#xD;&#xA;        // but this will not work in some browsers&#xD;&#xA;        // or you will not get the correct file extension    &#xD;&#xA;        &#xD;&#xA;        //this trick will generate a temp <a /> tag&#xD;&#xA;        var link = document.createElement(""a"");    &#xD;&#xA;        link.href = uri;&#xD;&#xA;        &#xD;&#xA;        //set the visibility hidden so it will not effect on your web-layout&#xD;&#xA;        link.style = ""visibility:hidden"";&#xD;&#xA;        link.download = fileName + "".csv"";&#xD;&#xA;        &#xD;&#xA;        //this part will append the anchor tag and remove it after automatic click&#xD;&#xA;        document.body.appendChild(link);&#xD;&#xA;        link.click();&#xD;&#xA;        document.body.removeChild(link);&#xD;&#xA;    }"
7133085841619644450,84,7,"        const path = require('path');&#xD;&#xA;    const webpack = require('webpack');&#xD;&#xA;    const merge = require('webpack-merge');&#xD;&#xA;    const AotPlugin = require('@ngtools/webpack').AotPlugin;&#xD;&#xA;    const CheckerPlugin = require('awesome-typescript-loader').CheckerPlugin;&#xD;&#xA;    &#xD;&#xA;    module.exports = (env) => {&#xD;&#xA;        // Configuration in common to both client-side and server-side bundles&#xD;&#xA;        const isDevBuild = !(env && env.prod);&#xD;&#xA;        const sharedConfig = {&#xD;&#xA;            stats: { modules: false },&#xD;&#xA;            context: __dirname,&#xD;&#xA;            resolve: { extensions: [ '.js', '.ts' ] },&#xD;&#xA;            output: {&#xD;&#xA;                filename: '[name].js',&#xD;&#xA;                publicPath: 'dist/' // Webpack dev middleware, if enabled, handles requests for this URL prefix&#xD;&#xA;            },&#xD;&#xA;            module: {&#xD;&#xA;                rules: [&#xD;&#xA;                    //{ test: /\.ts$/, include: /ClientApp/, use: isDevBuild ? ['awesome-typescript-loader?silent=true', 'angular2-template-loader'] : '@ngtools/webpack' },&#xD;&#xA;                    { test: /\.html$/, use: 'html-loader?minimize=false' },&#xD;&#xA;                    { test: /\.css$/, use: [ 'to-string-loader', isDevBuild ? 'css-loader' : 'css-loader?minimize' ] },&#xD;&#xA;                    { test: /\.(png|jpg|jpeg|gif|svg)$/, use: 'url-loader?limit=25000' }&#xD;&#xA;                ]&#xD;&#xA;            },&#xD;&#xA;            plugins: [new CheckerPlugin()]&#xD;&#xA;        };&#xD;&#xA;    &#xD;&#xA;        // Configuration for client-side bundle suitable for running in browsers&#xD;&#xA;        const clientBundleOutputDir = './wwwroot/dist';&#xD;&#xA;        const clientBundleConfig = merge(sharedConfig, {&#xD;&#xA;            entry: { 'main-client': './ClientApp/boot.browser.ts' },&#xD;&#xA;            output: { path: path.join(__dirname, clientBundleOutputDir) },&#xD;&#xA;            plugins: [&#xD;&#xA;                new webpack.DllReferencePlugin({&#xD;&#xA;                    context: __dirname,&#xD;&#xA;                    manifest: require('./wwwroot/dist/vendor-manifest.json')&#xD;&#xA;                })&#xD;&#xA;            ].concat(isDevBuild ? [&#xD;&#xA;                // Plugins that apply in development builds only&#xD;&#xA;                new webpack.SourceMapDevToolPlugin({&#xD;&#xA;                    filename: '[file].map', // Remove this line if you prefer inline source maps&#xD;&#xA;                    moduleFilenameTemplate: path.relative(clientBundleOutputDir, '[resourcePath]') // Point sourcemap entries to the original file locations on disk&#xD;&#xA;                })&#xD;&#xA;            ] : [&#xD;&#xA;                // Plugins that apply in production builds only&#xD;&#xA;                new webpack.optimize.UglifyJsPlugin(),&#xD;&#xA;                new AotPlugin({&#xD;&#xA;                    tsConfigPath: './tsconfig.json',&#xD;&#xA;                    entryModule: path.join(__dirname, 'ClientApp/app/app.module.browser#AppModule'),&#xD;&#xA;                    exclude: ['./**/*.server.ts']&#xD;&#xA;                })&#xD;&#xA;            ])&#xD;&#xA;        });&#xD;&#xA;    &#xD;&#xA;        // Configuration for server-side (prerendering) bundle suitable for running in Node&#xD;&#xA;        const serverBundleConfig = merge(sharedConfig, {&#xD;&#xA;            resolve: { mainFields: ['main'] },&#xD;&#xA;            entry: { 'main-server': './ClientApp/boot.server.ts' },&#xD;&#xA;            plugins: [&#xD;&#xA;                new webpack.DllReferencePlugin({&#xD;&#xA;                    context: __dirname,&#xD;&#xA;                    manifest: require('./ClientApp/dist/vendor-manifest.json'),&#xD;&#xA;                    sourceType: 'commonjs2',&#xD;&#xA;                    name: './vendor'&#xD;&#xA;                })&#xD;&#xA;            ].concat(isDevBuild ? [] : [&#xD;&#xA;                // Plugins that apply in production builds only&#xD;&#xA;                new AotPlugin({&#xD;&#xA;                    tsConfigPath: './tsconfig.json',&#xD;&#xA;                    entryModule: path.join(__dirname, 'ClientApp/app/app.module.server#AppModule'),&#xD;&#xA;                    exclude: ['./**/*.browser.ts']&#xD;&#xA;                })&#xD;&#xA;            ]),&#xD;&#xA;            output: {&#xD;&#xA;                libraryTarget: 'commonjs',&#xD;&#xA;                path: path.join(__dirname, './ClientApp/dist')&#xD;&#xA;            },&#xD;&#xA;            target: 'node',&#xD;&#xA;            devtool: 'inline-source-map'&#xD;&#xA;        });&#xD;&#xA;    &#xD;&#xA;        return [clientBundleConfig, serverBundleConfig];&#xD;&#xA;    };"
-5269488934762945888,88,7,"    public class ItemClickSupport {&#xD;&#xA;        private final RecyclerView mRecyclerView;&#xD;&#xA;        private OnItemClickListener mOnItemClickListener;&#xD;&#xA;        private OnItemLongClickListener mOnItemLongClickListener;&#xD;&#xA;        private View.OnClickListener mOnClickListener = new View.OnClickListener() {&#xD;&#xA;            @Override&#xD;&#xA;            public void onClick(View v) {&#xD;&#xA;                if (mOnItemClickListener != null) {&#xD;&#xA;                    RecyclerView.ViewHolder holder = mRecyclerView.getChildViewHolder(v);&#xD;&#xA;                    mOnItemClickListener.onItemClicked(mRecyclerView, holder.getAdapterPosition(), v);&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        };&#xD;&#xA;        private View.OnLongClickListener mOnLongClickListener = new View.OnLongClickListener() {&#xD;&#xA;            @Override&#xD;&#xA;            public boolean onLongClick(View v) {&#xD;&#xA;                if (mOnItemLongClickListener != null) {&#xD;&#xA;                    RecyclerView.ViewHolder holder = mRecyclerView.getChildViewHolder(v);&#xD;&#xA;                    return mOnItemLongClickListener.onItemLongClicked(mRecyclerView, holder.getAdapterPosition(), v);&#xD;&#xA;                }&#xD;&#xA;                return false;&#xD;&#xA;            }&#xD;&#xA;        };&#xD;&#xA;        private RecyclerView.OnChildAttachStateChangeListener mAttachListener&#xD;&#xA;                = new RecyclerView.OnChildAttachStateChangeListener() {&#xD;&#xA;            @Override&#xD;&#xA;            public void onChildViewAttachedToWindow(View view) {&#xD;&#xA;                if (mOnItemClickListener != null) {&#xD;&#xA;                    view.setOnClickListener(mOnClickListener);&#xD;&#xA;                }&#xD;&#xA;                if (mOnItemLongClickListener != null) {&#xD;&#xA;                    view.setOnLongClickListener(mOnLongClickListener);&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            public void onChildViewDetachedFromWindow(View view) {&#xD;&#xA;    &#xD;&#xA;            }&#xD;&#xA;        };&#xD;&#xA;    &#xD;&#xA;        private ItemClickSupport(RecyclerView recyclerView) {&#xD;&#xA;            mRecyclerView = recyclerView;&#xD;&#xA;            mRecyclerView.setTag(R.id.item_click_support, this);&#xD;&#xA;            mRecyclerView.addOnChildAttachStateChangeListener(mAttachListener);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public static ItemClickSupport addTo(RecyclerView view) {&#xD;&#xA;            ItemClickSupport support = (ItemClickSupport) view.getTag(R.id.item_click_support);&#xD;&#xA;            if (support == null) {&#xD;&#xA;                support = new ItemClickSupport(view);&#xD;&#xA;            }&#xD;&#xA;            return support;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public static ItemClickSupport removeFrom(RecyclerView view) {&#xD;&#xA;            ItemClickSupport support = (ItemClickSupport) view.getTag(R.id.item_click_support);&#xD;&#xA;            if (support != null) {&#xD;&#xA;                support.detach(view);&#xD;&#xA;            }&#xD;&#xA;            return support;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public ItemClickSupport setOnItemClickListener(OnItemClickListener listener) {&#xD;&#xA;            mOnItemClickListener = listener;&#xD;&#xA;            return this;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public ItemClickSupport setOnItemLongClickListener(OnItemLongClickListener listener) {&#xD;&#xA;            mOnItemLongClickListener = listener;&#xD;&#xA;            return this;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private void detach(RecyclerView view) {&#xD;&#xA;            view.removeOnChildAttachStateChangeListener(mAttachListener);&#xD;&#xA;            view.setTag(R.id.item_click_support, null);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public interface OnItemClickListener {&#xD;&#xA;    &#xD;&#xA;            void onItemClicked(RecyclerView recyclerView, int position, View v);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public interface OnItemLongClickListener {&#xD;&#xA;    &#xD;&#xA;            boolean onItemLongClicked(RecyclerView recyclerView, int position, View v);&#xD;&#xA;        }&#xD;&#xA;    }"
-822985486122289568,89,7,"       class EntityContactListener : public ContactListener&#xD;&#xA;        {&#xD;&#xA;        private:&#xD;&#xA;           GameWorld* _gameWorld;&#xD;&#xA;           EntityContactListener() {}&#xD;&#xA;           &#xD;&#xA;           typedef struct &#xD;&#xA;           {&#xD;&#xA;              Entity* entA;&#xD;&#xA;              Entity* entB;&#xD;&#xA;           } CONTACT_PAIR_T;&#xD;&#xA;           &#xD;&#xA;           vector<CONTACT_PAIR_T> _contactPairs;&#xD;&#xA;           &#xD;&#xA;        public:&#xD;&#xA;           virtual ~EntityContactListener() {}&#xD;&#xA;           &#xD;&#xA;           EntityContactListener(GameWorld* gameWorld) :&#xD;&#xA;              _gameWorld(gameWorld)&#xD;&#xA;           {&#xD;&#xA;              _contactPairs.reserve(128);&#xD;&#xA;           }&#xD;&#xA;           &#xD;&#xA;           void NotifyCollisions()&#xD;&#xA;           {&#xD;&#xA;              Message* msg;&#xD;&#xA;              MessageManager& mm = GameManager::Instance().GetMessageMgr();&#xD;&#xA;              &#xD;&#xA;              for(uint32 idx = 0; idx < _contactPairs.size(); idx++)&#xD;&#xA;              {&#xD;&#xA;                 Entity* entA = _contactPairs[idx].entA;&#xD;&#xA;                 Entity* entB = _contactPairs[idx].entB;&#xD;&#xA;                 &#xD;&#xA;                 //DebugLogCPP(""Contact Notification %s<->%s"",entA->ToString().c_str(),entB->ToString().c_str());&#xD;&#xA;                 &#xD;&#xA;                 msg = mm.CreateMessage();&#xD;&#xA;                 msg->Init(entA->GetID(), entB->GetID(), Message::MESSAGE_COLLISION);&#xD;&#xA;                 mm.EnqueueMessge(msg, 0);&#xD;&#xA;                 &#xD;&#xA;                 msg = mm.CreateMessage();&#xD;&#xA;                 msg->Init(entB->GetID(), entA->GetID(), Message::MESSAGE_COLLISION);&#xD;&#xA;                 mm.EnqueueMessge(msg, 0);         &#xD;&#xA;              }&#xD;&#xA;              _contactPairs.clear();&#xD;&#xA;           }&#xD;&#xA;           &#xD;&#xA;           void PreSolve(b2Contact* contact, const b2Manifold* oldManifold)&#xD;&#xA;           {&#xD;&#xA;              &#xD;&#xA;           }&#xD;&#xA;           &#xD;&#xA;           // BEWARE:  You may get multiple calls for the same event.&#xD;&#xA;           void BeginContact(b2Contact* contact)&#xD;&#xA;           {&#xD;&#xA;              Entity* entA = (Entity*)contact->GetFixtureA()->GetBody()->GetUserData();&#xD;&#xA;              Entity* entB = (Entity*)contact->GetFixtureB()->GetBody()->GetUserData();&#xD;&#xA;              //DebugLogCPP(""Begin Contact %s->%s"",entA->ToString().c_str(),entB->ToString().c_str());&#xD;&#xA;              if(entA->GetGroupID() == entB->GetGroupID())&#xD;&#xA;              {  // Can't collide if they are in the same group.&#xD;&#xA;                 return;&#xD;&#xA;              }&#xD;&#xA;              &#xD;&#xA;              assert(entA != NULL);&#xD;&#xA;              assert(entB != NULL);&#xD;&#xA;              &#xD;&#xA;              for(uint32 idx = 0; idx < _contactPairs.size(); idx++)&#xD;&#xA;              {&#xD;&#xA;                 if(_contactPairs[idx].entA == entA && _contactPairs[idx].entB == entB)&#xD;&#xA;                    return;&#xD;&#xA;                 // Not sure if this is needed...&#xD;&#xA;                 if(_contactPairs[idx].entA == entB && _contactPairs[idx].entA == entB)&#xD;&#xA;                    return;&#xD;&#xA;              }&#xD;&#xA;              CONTACT_PAIR_T pair;&#xD;&#xA;              pair.entA = entA;&#xD;&#xA;              pair.entB = entB;&#xD;&#xA;              _contactPairs.push_back(pair);&#xD;&#xA;           }&#xD;&#xA;           &#xD;&#xA;           // BEWARE:  You may get multiple calls for the same event.&#xD;&#xA;           void EndContact(b2Contact* contact)&#xD;&#xA;           {&#xD;&#xA;              /*&#xD;&#xA;              Entity* entA = (Entity*)contact->GetFixtureA()->GetBody()->GetUserData();&#xD;&#xA;              Entity* entB = (Entity*)contact->GetFixtureB()->GetBody()->GetUserData();&#xD;&#xA;              DebugLogCPP(""End Contact %s->%s"",entA->ToString().c_str(),entB->ToString().c_str());&#xD;&#xA;               */&#xD;&#xA;           }&#xD;&#xA;        };"
3677187917039538253,92,7,"        public class MyLocation {&#xD;&#xA;        Timer timer1;&#xD;&#xA;        LocationManager lm;&#xD;&#xA;        LocationResult locationResult;&#xD;&#xA;        boolean gps_enabled=false;&#xD;&#xA;        boolean network_enabled=false;&#xD;&#xA;    &#xD;&#xA;        public boolean getLocation(Context context, LocationResult result)&#xD;&#xA;        {&#xD;&#xA;            //I use LocationResult callback class to pass location value from MyLocation to user code.&#xD;&#xA;            locationResult=result;&#xD;&#xA;            if(lm==null)&#xD;&#xA;                lm = (LocationManager) context.getSystemService(Context.LOCATION_SERVICE);&#xD;&#xA;    &#xD;&#xA;            //exceptions will be thrown if provider is not permitted.&#xD;&#xA;            try{gps_enabled=lm.isProviderEnabled(LocationManager.GPS_PROVIDER);}catch(Exception ex){}&#xD;&#xA;            try{network_enabled=lm.isProviderEnabled(LocationManager.NETWORK_PROVIDER);}catch(Exception ex){}&#xD;&#xA;    &#xD;&#xA;            //don't start listeners if no provider is enabled&#xD;&#xA;            if(!gps_enabled && !network_enabled)&#xD;&#xA;                return false;&#xD;&#xA;    &#xD;&#xA;            if(gps_enabled)&#xD;&#xA;                lm.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0, 0, locationListenerGps);&#xD;&#xA;            if(network_enabled)&#xD;&#xA;                lm.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 0, 0, locationListenerNetwork);&#xD;&#xA;            timer1=new Timer();&#xD;&#xA;            timer1.schedule(new GetLastLocation(), 20000);&#xD;&#xA;            return true;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        LocationListener locationListenerGps = new LocationListener() {&#xD;&#xA;            public void onLocationChanged(Location location) {&#xD;&#xA;                timer1.cancel();&#xD;&#xA;                locationResult.gotLocation(location);&#xD;&#xA;                lm.removeUpdates(this);&#xD;&#xA;                lm.removeUpdates(locationListenerNetwork);&#xD;&#xA;            }&#xD;&#xA;            public void onProviderDisabled(String provider) {}&#xD;&#xA;            public void onProviderEnabled(String provider) {}&#xD;&#xA;            public void onStatusChanged(String provider, int status, Bundle extras) {}&#xD;&#xA;        };&#xD;&#xA;    &#xD;&#xA;        LocationListener locationListenerNetwork = new LocationListener() {&#xD;&#xA;            public void onLocationChanged(Location location) {&#xD;&#xA;                timer1.cancel();&#xD;&#xA;                locationResult.gotLocation(location);&#xD;&#xA;                lm.removeUpdates(this);&#xD;&#xA;                lm.removeUpdates(locationListenerGps);&#xD;&#xA;            }&#xD;&#xA;            public void onProviderDisabled(String provider) {}&#xD;&#xA;            public void onProviderEnabled(String provider) {}&#xD;&#xA;            public void onStatusChanged(String provider, int status, Bundle extras) {}&#xD;&#xA;        };&#xD;&#xA;    &#xD;&#xA;        class GetLastLocation extends TimerTask {&#xD;&#xA;            @Override&#xD;&#xA;            public void run() {&#xD;&#xA;                 lm.removeUpdates(locationListenerGps);&#xD;&#xA;                 lm.removeUpdates(locationListenerNetwork);&#xD;&#xA;    &#xD;&#xA;                 Location net_loc=null, gps_loc=null;&#xD;&#xA;                 if(gps_enabled)&#xD;&#xA;                     gps_loc=lm.getLastKnownLocation(LocationManager.GPS_PROVIDER);&#xD;&#xA;                 if(network_enabled)&#xD;&#xA;                     net_loc=lm.getLastKnownLocation(LocationManager.NETWORK_PROVIDER);&#xD;&#xA;    &#xD;&#xA;                 //if there are both values use the latest one&#xD;&#xA;                 if(gps_loc!=null && net_loc!=null){&#xD;&#xA;                     if(gps_loc.getTime()>net_loc.getTime())&#xD;&#xA;                         locationResult.gotLocation(gps_loc);&#xD;&#xA;                     else&#xD;&#xA;                         locationResult.gotLocation(net_loc);&#xD;&#xA;                     return;&#xD;&#xA;                 }&#xD;&#xA;    &#xD;&#xA;                 if(gps_loc!=null){&#xD;&#xA;                     locationResult.gotLocation(gps_loc);&#xD;&#xA;                     return;&#xD;&#xA;                 }&#xD;&#xA;                 if(net_loc!=null){&#xD;&#xA;                     locationResult.gotLocation(net_loc);&#xD;&#xA;                     return;&#xD;&#xA;                 }&#xD;&#xA;                 locationResult.gotLocation(null);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public static abstract class LocationResult{&#xD;&#xA;            public abstract void gotLocation(Location location);&#xD;&#xA;        }&#xD;&#xA;       }"
3891796000992890557,98,7,"    class PageTemplater {&#xD;&#xA;		/**&#xD;&#xA;         * A Unique Identifier&#xD;&#xA;         */&#xD;&#xA;		 protected $plugin_slug;&#xD;&#xA;        /**&#xD;&#xA;         * A reference to an instance of this class.&#xD;&#xA;         */&#xD;&#xA;        private static $instance;&#xD;&#xA;        /**&#xD;&#xA;         * The array of templates that this plugin tracks.&#xD;&#xA;         */&#xD;&#xA;        protected $templates;&#xD;&#xA;        /**&#xD;&#xA;         * Returns an instance of this class. &#xD;&#xA;         */&#xD;&#xA;        public static function get_instance() {&#xD;&#xA;                if( null == self::$instance ) {&#xD;&#xA;                        self::$instance = new PageTemplater();&#xD;&#xA;                } &#xD;&#xA;                return self::$instance;&#xD;&#xA;        } &#xD;&#xA;        /**&#xD;&#xA;         * Initializes the plugin by setting filters and administration functions.&#xD;&#xA;         */&#xD;&#xA;        private function __construct() {&#xD;&#xA;                $this->templates = array();&#xD;&#xA;                // Add a filter to the attributes metabox to inject template into the cache.&#xD;&#xA;                add_filter(&#xD;&#xA;					'page_attributes_dropdown_pages_args',&#xD;&#xA;					 array( $this, 'register_project_templates' ) &#xD;&#xA;				);&#xD;&#xA;                // Add a filter to the save post to inject out template into the page cache&#xD;&#xA;                add_filter(&#xD;&#xA;					'wp_insert_post_data', &#xD;&#xA;					array( $this, 'register_project_templates' ) &#xD;&#xA;				);&#xD;&#xA;                // Add a filter to the template include to determine if the page has our &#xD;&#xA;				// template assigned and return it's path&#xD;&#xA;                add_filter(&#xD;&#xA;					'template_include', &#xD;&#xA;					array( $this, 'view_project_template') &#xD;&#xA;				);&#xD;&#xA;                // Add your templates to this array.&#xD;&#xA;                $this->templates = array(&#xD;&#xA;                        'goodtobebad-template.php'     => 'It\'s Good to Be Bad',&#xD;&#xA;                );&#xD;&#xA;				&#xD;&#xA;        } &#xD;&#xA;        /**&#xD;&#xA;         * Adds our template to the pages cache in order to trick WordPress&#xD;&#xA;         * into thinking the template file exists where it doens't really exist.&#xD;&#xA;         *&#xD;&#xA;         */&#xD;&#xA;        public function register_project_templates( $atts ) {&#xD;&#xA;                // Create the key used for the themes cache&#xD;&#xA;                $cache_key = 'page_templates-' . md5( get_theme_root() . '/' . get_stylesheet() );&#xD;&#xA;                // Retrieve the cache list. &#xD;&#xA;				// If it doesn't exist, or it's empty prepare an array&#xD;&#xA;                $templates = wp_get_theme()->get_page_templates();&#xD;&#xA;                if ( empty( $templates ) ) {&#xD;&#xA;                        $templates = array();&#xD;&#xA;                } &#xD;&#xA;                // New cache, therefore remove the old one&#xD;&#xA;                wp_cache_delete( $cache_key , 'themes');&#xD;&#xA;                // Now add our template to the list of templates by merging our templates&#xD;&#xA;                // with the existing templates array from the cache.&#xD;&#xA;                $templates = array_merge( $templates, $this->templates );&#xD;&#xA;                // Add the modified cache to allow WordPress to pick it up for listing&#xD;&#xA;                // available templates&#xD;&#xA;                wp_cache_add( $cache_key, $templates, 'themes', 1800 );&#xD;&#xA;                return $atts;&#xD;&#xA;        } &#xD;&#xA;        /**&#xD;&#xA;         * Checks if the template is assigned to the page&#xD;&#xA;         */&#xD;&#xA;        public function view_project_template( $template ) {&#xD;&#xA;                global $post;&#xD;&#xA;                if (!isset($this->templates[get_post_meta( &#xD;&#xA;					$post->ID, '_wp_page_template', true &#xD;&#xA;				)] ) ) {&#xD;&#xA;					&#xD;&#xA;                        return $template;&#xD;&#xA;						&#xD;&#xA;                } &#xD;&#xA;                $file = plugin_dir_path(__FILE__). get_post_meta( &#xD;&#xA;					$post->ID, '_wp_page_template', true &#xD;&#xA;				);&#xD;&#xA;				&#xD;&#xA;                // Just to be safe, we check if the file exist first&#xD;&#xA;                if( file_exists( $file ) ) {&#xD;&#xA;                        return $file;&#xD;&#xA;                } &#xD;&#xA;				else { echo $file; }&#xD;&#xA;                return $template;&#xD;&#xA;        } &#xD;&#xA;    } &#xD;&#xA;    add_action( 'plugins_loaded', array( 'PageTemplater', 'get_instance' ) );"
-9020367314868897319,104,7,"    Sub Mail_Selection_Range_Outlook_Body()&#xD;&#xA;    'For Tips see: http://www.rondebruin.nl/win/winmail/Outlook/tips.htm&#xD;&#xA;    'Don't forget to copy the function RangetoHTML in the module.&#xD;&#xA;    'Working in Excel 2000-2016&#xD;&#xA;        Dim rng As Range&#xD;&#xA;        Dim OutApp As Object&#xD;&#xA;        Dim OutMail As Object&#xD;&#xA;    &#xD;&#xA;        Set rng = Nothing&#xD;&#xA;        On Error Resume Next&#xD;&#xA;        'Only the visible cells in the selection&#xD;&#xA;        Set rng = Selection.SpecialCells(xlCellTypeVisible)&#xD;&#xA;        'You can also use a fixed range if you want&#xD;&#xA;        'Set rng = Sheets(""YourSheet"").Range(""D4:D12"").SpecialCells(xlCellTypeVisible)&#xD;&#xA;        On Error GoTo 0&#xD;&#xA;    &#xD;&#xA;        If rng Is Nothing Then&#xD;&#xA;            MsgBox ""The selection is not a range or the sheet is protected"" & _&#xD;&#xA;                   vbNewLine & ""please correct and try again."", vbOKOnly&#xD;&#xA;            Exit Sub&#xD;&#xA;        End If&#xD;&#xA;    &#xD;&#xA;        With Application&#xD;&#xA;            .EnableEvents = False&#xD;&#xA;            .ScreenUpdating = False&#xD;&#xA;        End With&#xD;&#xA;    &#xD;&#xA;        Set OutApp = CreateObject(""Outlook.Application"")&#xD;&#xA;        Set OutMail = OutApp.CreateItem(0)&#xD;&#xA;    &#xD;&#xA;        On Error Resume Next&#xD;&#xA;        With OutMail&#xD;&#xA;            .To = ""ron@debruin.nl""&#xD;&#xA;            .CC = """"&#xD;&#xA;            .BCC = """"&#xD;&#xA;            .Subject = ""This is the Subject line""&#xD;&#xA;            .HTMLBody = RangetoHTML(rng)&#xD;&#xA;            .Send   'or use .Display&#xD;&#xA;        End With&#xD;&#xA;        On Error GoTo 0&#xD;&#xA;    &#xD;&#xA;        With Application&#xD;&#xA;            .EnableEvents = True&#xD;&#xA;            .ScreenUpdating = True&#xD;&#xA;        End With&#xD;&#xA;    &#xD;&#xA;        Set OutMail = Nothing&#xD;&#xA;        Set OutApp = Nothing&#xD;&#xA;    End Sub&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    Function RangetoHTML(rng As Range)&#xD;&#xA;    ' Changed by Ron de Bruin 28-Oct-2006&#xD;&#xA;    ' Working in Office 2000-2016&#xD;&#xA;        Dim fso As Object&#xD;&#xA;        Dim ts As Object&#xD;&#xA;        Dim TempFile As String&#xD;&#xA;        Dim TempWB As Workbook&#xD;&#xA;    &#xD;&#xA;        TempFile = Environ$(""temp"") & ""\"" & Format(Now, ""dd-mm-yy h-mm-ss"") & "".htm""&#xD;&#xA;    &#xD;&#xA;        'Copy the range and create a new workbook to past the data in&#xD;&#xA;        rng.Copy&#xD;&#xA;        Set TempWB = Workbooks.Add(1)&#xD;&#xA;        With TempWB.Sheets(1)&#xD;&#xA;            .Cells(1).PasteSpecial Paste:=8&#xD;&#xA;            .Cells(1).PasteSpecial xlPasteValues, , False, False&#xD;&#xA;            .Cells(1).PasteSpecial xlPasteFormats, , False, False&#xD;&#xA;            .Cells(1).Select&#xD;&#xA;            Application.CutCopyMode = False&#xD;&#xA;            On Error Resume Next&#xD;&#xA;            .DrawingObjects.Visible = True&#xD;&#xA;            .DrawingObjects.Delete&#xD;&#xA;            On Error GoTo 0&#xD;&#xA;        End With&#xD;&#xA;    &#xD;&#xA;        'Publish the sheet to a htm file&#xD;&#xA;        With TempWB.PublishObjects.Add( _&#xD;&#xA;             SourceType:=xlSourceRange, _&#xD;&#xA;             Filename:=TempFile, _&#xD;&#xA;             Sheet:=TempWB.Sheets(1).Name, _&#xD;&#xA;             Source:=TempWB.Sheets(1).UsedRange.Address, _&#xD;&#xA;             HtmlType:=xlHtmlStatic)&#xD;&#xA;            .Publish (True)&#xD;&#xA;        End With&#xD;&#xA;    &#xD;&#xA;        'Read all data from the htm file into RangetoHTML&#xD;&#xA;        Set fso = CreateObject(""Scripting.FileSystemObject"")&#xD;&#xA;        Set ts = fso.GetFile(TempFile).OpenAsTextStream(1, -2)&#xD;&#xA;        RangetoHTML = ts.readall&#xD;&#xA;        ts.Close&#xD;&#xA;        RangetoHTML = Replace(RangetoHTML, ""align=center x:publishsource="", _&#xD;&#xA;                              ""align=left x:publishsource="")&#xD;&#xA;    &#xD;&#xA;        'Close TempWB&#xD;&#xA;        TempWB.Close savechanges:=False&#xD;&#xA;    &#xD;&#xA;        'Delete the htm file we used in this function&#xD;&#xA;        Kill TempFile&#xD;&#xA;    &#xD;&#xA;        Set ts = Nothing&#xD;&#xA;        Set fso = Nothing&#xD;&#xA;        Set TempWB = Nothing&#xD;&#xA;    End Function"
-7013044399635970540,105,7,"    * {&#xD;&#xA;      margin: 0;&#xD;&#xA;      padding: 0;&#xD;&#xA;    }&#xD;&#xA;    .tree ul {&#xD;&#xA;      padding-top: 20px;&#xD;&#xA;      position: relative;&#xD;&#xA;      transition: all 0.5s;&#xD;&#xA;      -webkit-transition: all 0.5s;&#xD;&#xA;      -moz-transition: all 0.5s;&#xD;&#xA;    }&#xD;&#xA;    .tree li {&#xD;&#xA;      float: left;&#xD;&#xA;      text-align: center;&#xD;&#xA;      list-style-type: none;&#xD;&#xA;      position: relative;&#xD;&#xA;      padding: 20px 5px 0 5px;&#xD;&#xA;      transition: all 0.5s;&#xD;&#xA;      -webkit-transition: all 0.5s;&#xD;&#xA;      -moz-transition: all 0.5s;&#xD;&#xA;    }&#xD;&#xA;    /*We will use ::before and ::after to draw the connectors*/&#xD;&#xA;    .tree li::before,&#xD;&#xA;    .tree li::after {&#xD;&#xA;      content: '';&#xD;&#xA;      position: absolute;&#xD;&#xA;      top: 0;&#xD;&#xA;      right: 50%;&#xD;&#xA;      border-top: 1px solid #ccc;&#xD;&#xA;      width: 50%;&#xD;&#xA;      height: 20px;&#xD;&#xA;    }&#xD;&#xA;    .tree li::after {&#xD;&#xA;      right: auto;&#xD;&#xA;      left: 50%;&#xD;&#xA;      border-left: 1px solid #ccc;&#xD;&#xA;    }&#xD;&#xA;    /*We need to remove left-right connectors from elements without &#xD;&#xA;    any siblings*/&#xD;&#xA;    .tree li:only-child::after,&#xD;&#xA;    .tree li:only-child::before {&#xD;&#xA;      display: none;&#xD;&#xA;    }&#xD;&#xA;    /*Remove space from the top of single children*/&#xD;&#xA;    .tree li:only-child {&#xD;&#xA;      padding-top: 0;&#xD;&#xA;    }&#xD;&#xA;    /*Remove left connector from first child and &#xD;&#xA;    right connector from last child*/&#xD;&#xA;    .tree li:first-child::before,&#xD;&#xA;    .tree li:last-child::after {&#xD;&#xA;      border: 0 none;&#xD;&#xA;    }&#xD;&#xA;    /*Adding back the vertical connector to the last nodes*/&#xD;&#xA;    .tree li:last-child::before {&#xD;&#xA;      border-right: 1px solid #ccc;&#xD;&#xA;      border-radius: 0 5px 0 0;&#xD;&#xA;      -webkit-border-radius: 0 5px 0 0;&#xD;&#xA;      -moz-border-radius: 0 5px 0 0;&#xD;&#xA;    }&#xD;&#xA;    .tree li:first-child::after {&#xD;&#xA;      border-radius: 5px 0 0 0;&#xD;&#xA;      -webkit-border-radius: 5px 0 0 0;&#xD;&#xA;      -moz-border-radius: 5px 0 0 0;&#xD;&#xA;    }&#xD;&#xA;    /*Time to add downward connectors from parents*/&#xD;&#xA;    .tree ul ul::before {&#xD;&#xA;      content: '';&#xD;&#xA;      position: absolute;&#xD;&#xA;      top: 0;&#xD;&#xA;      left: 50%;&#xD;&#xA;      border-left: 1px solid #ccc;&#xD;&#xA;      width: 0;&#xD;&#xA;      height: 20px;&#xD;&#xA;    }&#xD;&#xA;    .tree li a {&#xD;&#xA;      border: 1px solid #ccc;&#xD;&#xA;      padding: 5px 10px;&#xD;&#xA;      text-decoration: none;&#xD;&#xA;      color: #666;&#xD;&#xA;      font-family: arial, verdana, tahoma;&#xD;&#xA;      font-size: 11px;&#xD;&#xA;      display: inline-block;&#xD;&#xA;      border-radius: 5px;&#xD;&#xA;      -webkit-border-radius: 5px;&#xD;&#xA;      -moz-border-radius: 5px;&#xD;&#xA;      transition: all 0.5s;&#xD;&#xA;      -webkit-transition: all 0.5s;&#xD;&#xA;      -moz-transition: all 0.5s;&#xD;&#xA;    }&#xD;&#xA;    /*Time for some hover effects*/&#xD;&#xA;    /*We will apply the hover effect the the lineage of the element also*/&#xD;&#xA;    .tree li a:hover,&#xD;&#xA;    .tree li a:hover+ul li a {&#xD;&#xA;      background: #c8e4f8;&#xD;&#xA;      color: #000;&#xD;&#xA;      border: 1px solid #94a0b4;&#xD;&#xA;    }&#xD;&#xA;    /*Connector styles on hover*/&#xD;&#xA;    .tree li a:hover+ul li::after,&#xD;&#xA;    .tree li a:hover+ul li::before,&#xD;&#xA;    .tree li a:hover+ul::before,&#xD;&#xA;    .tree li a:hover+ul ul::before {&#xD;&#xA;      border-color: #94a0b4;&#xD;&#xA;    }"
-6427069715545091728,115,7,"	import java.text.SimpleDateFormat;&#xD;&#xA;	import java.util.ArrayList;&#xD;&#xA;	import java.util.Date;&#xD;&#xA;	import android.os.Handler;&#xD;&#xA;	import android.widget.TextView;&#xD;&#xA;	/**&#xD;&#xA;	 * The class for creating and refreshing many different fields on different layouts,&#xD;&#xA;	 * that can hold actual time and/or date in different formats &#xD;&#xA;	 * The formats should be as in http://developer.android.com/reference/java/text/SimpleDateFormat.html. &#xD;&#xA;	 * Only present and visible fields are being actualized, so there is no need to clean the clock list after closing an activity&#xD;&#xA;	 * &#xD;&#xA;	 * Examples of use:&#xD;&#xA;	 * &#xD;&#xA;	 * 	    Clock.registerClock((TextView) findViewById(R.id.TimeField), ""HH:mm"");&#xD;&#xA;	 *      Clock.registerClock((TextView) findViewById(R.id.DateField), ""d.M.yyyy EEE"");&#xD;&#xA;	 *	    Clock.start(10000L);&#xD;&#xA;	 *&#xD;&#xA;	 * @author Petr Gangnus&#xD;&#xA;	 */&#xD;&#xA;	public final class Clock {&#xD;&#xA;		/**&#xD;&#xA;		 * the handler that works instead of timer and supports UI&#xD;&#xA;		 */&#xD;&#xA;	    static private Handler handler = new Handler();&#xD;&#xA;		/**&#xD;&#xA;		 * the interval of the time refreshing&#xD;&#xA;		 */&#xD;&#xA;	    static private long refreshStep;&#xD;&#xA;	    &#xD;&#xA;	    /**&#xD;&#xA;	     * pairs TextView timer+time/date format&#xD;&#xA;	     */&#xD;&#xA;		private TextView clockFace;&#xD;&#xA;		private String format;&#xD;&#xA;		private Clock(TextView clockFace, String format){&#xD;&#xA;			this.clockFace=clockFace;&#xD;&#xA;			this.format=format;&#xD;&#xA;		}&#xD;&#xA;	    // here is the list of views containing the visual timers that should be held actual&#xD;&#xA;	    static private ArrayList<Clock> clocks=new ArrayList<Clock>();&#xD;&#xA;	    /**&#xD;&#xA;	     * fills all timer fields by actual time value, according to their formats.&#xD;&#xA;	     */&#xD;&#xA;	    static private Runnable mUpdateTimeTask = new Runnable() {&#xD;&#xA;		   public void run() {&#xD;&#xA;			   for(Clock clock:clocks){&#xD;&#xA;				   showActualTimeDate(clock);&#xD;&#xA;			   }&#xD;&#xA;		       handler.postDelayed(this,refreshStep);&#xD;&#xA;		   }&#xD;&#xA;		};&#xD;&#xA;		&#xD;&#xA;		//============================================ public members ====================================================================&#xD;&#xA;	    /**&#xD;&#xA;	     * add a clock to the list of updating clocks&#xD;&#xA;	     * @param clockFace - the place where the time or date will be shown &#xD;&#xA;	     * @param format - the format of the time/date &#xD;&#xA;	     * @return&#xD;&#xA;	     */&#xD;&#xA;	    public static boolean registerClock(TextView clockFace, String format){&#xD;&#xA;	    	if (clockFace==null) return false;&#xD;&#xA;	    	if(clocks.contains(clockFace)){&#xD;&#xA;	    		// old clockFace&#xD;&#xA;	    		clocks.get(clocks.indexOf(clockFace)).format=format;&#xD;&#xA;	    	} else {&#xD;&#xA;	    		// new clockFace&#xD;&#xA;	    		clocks.add(new Clock(clockFace, format));&#xD;&#xA;	    	}&#xD;&#xA;	    	return true;&#xD;&#xA;	    }&#xD;&#xA;	    /**&#xD;&#xA;	     * remove a clock from the updating list&#xD;&#xA;	     * @param clockFace&#xD;&#xA;	     * @return&#xD;&#xA;	     */&#xD;&#xA;	    public static boolean unRegisterClock(TextView clockFace){&#xD;&#xA;	    	if (clockFace==null) return false;&#xD;&#xA;	    	if(clocks.contains(clockFace)){&#xD;&#xA;	    		// found clockFace&#xD;&#xA;	    		clocks.remove(clocks.indexOf(clockFace));&#xD;&#xA;	    	} else {&#xD;&#xA;	    		// not found clockFace&#xD;&#xA;	    		return false;&#xD;&#xA;	    	}&#xD;&#xA;	    	return true;&#xD;&#xA;	    }&#xD;&#xA;		/**&#xD;&#xA;		 * put in the ""place"" the actual date/time in the appropriate ""format""&#xD;&#xA;		 * @param place&#xD;&#xA;		 * @param format&#xD;&#xA;		 */&#xD;&#xA;		public static void showActualTimeDate(Clock clock){&#xD;&#xA;			if (clock.clockFace==null) return;&#xD;&#xA;			if (clock.clockFace.getVisibility()!=TextView.VISIBLE) return;&#xD;&#xA;		    Date thisDate=new Date();&#xD;&#xA;		    SimpleDateFormat df=new SimpleDateFormat(clock.format);&#xD;&#xA;		    clock.clockFace.setText(df.format(thisDate));&#xD;&#xA;		}&#xD;&#xA;		/**&#xD;&#xA;		 * start the ticking for all clocks&#xD;&#xA;		 * @param step the tick interval&#xD;&#xA;		 */&#xD;&#xA;	    public static void start(long step) { &#xD;&#xA;	        refreshStep=step;&#xD;&#xA;	    	handler.removeCallbacks(mUpdateTimeTask);&#xD;&#xA;	        handler.postDelayed(mUpdateTimeTask, 0);&#xD;&#xA;	    }&#xD;&#xA;	    /**&#xD;&#xA;	     * Stopping ticking all clocks (not removing them)&#xD;&#xA;	     * the calling could be put somewhere in onStop&#xD;&#xA;	     */&#xD;&#xA;	    public static void stop() { &#xD;&#xA;	        handler.removeCallbacks(mUpdateTimeTask);&#xD;&#xA;	    }&#xD;&#xA;	}"
4820290793457668457,374,7,"    /*&#xD;&#xA;          Based on:&#xD;&#xA;          1. http://stephen.io/mediaqueries&#xD;&#xA;          2. https://css-tricks.com/snippets/css/media-queries-for-standard-devices/&#xD;&#xA;        */&#xD;&#xA;        /* iPhone 6 in portrait & landscape */&#xD;&#xA;        @media only screen &#xD;&#xA;        and (min-device-width : 375px) &#xD;&#xA;        and (max-device-width : 667px) {&#xD;&#xA;          &#xD;&#xA;        }&#xD;&#xA;        /* iPhone 6 in landscape */&#xD;&#xA;        @media only screen &#xD;&#xA;        and (min-device-width : 375px) &#xD;&#xA;        and (max-device-width : 667px) &#xD;&#xA;        and (orientation : landscape) {&#xD;&#xA;          &#xD;&#xA;        }&#xD;&#xA;        /* iPhone 6 in portrait */&#xD;&#xA;        @media only screen &#xD;&#xA;        and (min-device-width : 375px) &#xD;&#xA;        and (max-device-width : 667px) &#xD;&#xA;        and (orientation : portrait) {&#xD;&#xA;          &#xD;&#xA;        }&#xD;&#xA;        /* iPhone 6 Plus in portrait & landscape */&#xD;&#xA;        @media only screen &#xD;&#xA;        and (min-device-width : 414px) &#xD;&#xA;        and (max-device-width : 736px) {&#xD;&#xA;          &#xD;&#xA;        }&#xD;&#xA;        /* iPhone 6 Plus in landscape */&#xD;&#xA;        @media only screen &#xD;&#xA;        and (min-device-width : 414px) &#xD;&#xA;        and (max-device-width : 736px) &#xD;&#xA;        and (orientation : landscape) {&#xD;&#xA;          &#xD;&#xA;        }&#xD;&#xA;        /* iPhone 6 Plus in portrait */&#xD;&#xA;        @media only screen &#xD;&#xA;        and (min-device-width : 414px) &#xD;&#xA;        and (max-device-width : 736px) &#xD;&#xA;        and (orientation : portrait) {&#xD;&#xA;          &#xD;&#xA;        }&#xD;&#xA;        /* iPhone 5 & 5S in portrait & landscape */&#xD;&#xA;        @media only screen &#xD;&#xA;        and (min-device-width : 320px) &#xD;&#xA;        and (max-device-width : 568px) {&#xD;&#xA;          &#xD;&#xA;        }&#xD;&#xA;        /* iPhone 5 & 5S in landscape */&#xD;&#xA;        @media only screen &#xD;&#xA;        and (min-device-width : 320px) &#xD;&#xA;        and (max-device-width : 568px) &#xD;&#xA;        and (orientation : landscape) {&#xD;&#xA;          &#xD;&#xA;        }&#xD;&#xA;        /* iPhone 5 & 5S in portrait */&#xD;&#xA;        @media only screen &#xD;&#xA;        and (min-device-width : 320px) &#xD;&#xA;        and (max-device-width : 568px) &#xD;&#xA;        and (orientation : portrait) {&#xD;&#xA;          &#xD;&#xA;        }&#xD;&#xA;        /* &#xD;&#xA;          iPhone 2G, 3G, 4, 4S Media Queries&#xD;&#xA;          It's noteworthy that these media queries are also the same for iPod Touch generations 1-4.&#xD;&#xA;        */&#xD;&#xA;        /* iPhone 2G-4S in portrait & landscape */&#xD;&#xA;        @media only screen &#xD;&#xA;        and (min-device-width : 320px) &#xD;&#xA;        and (max-device-width : 480px) {&#xD;&#xA;          &#xD;&#xA;        }&#xD;&#xA;        /* iPhone 2G-4S in landscape */&#xD;&#xA;        @media only screen &#xD;&#xA;        and (min-device-width : 320px) &#xD;&#xA;        and (max-device-width : 480px) &#xD;&#xA;        and (orientation : landscape) {&#xD;&#xA;          &#xD;&#xA;        }&#xD;&#xA;        /* iPhone 2G-4S in portrait */&#xD;&#xA;        @media only screen &#xD;&#xA;        and (min-device-width : 320px) &#xD;&#xA;        and (max-device-width : 480px) &#xD;&#xA;        and (orientation : portrait) {&#xD;&#xA;          &#xD;&#xA;        }&#xD;&#xA;        /* iPad in portrait & landscape */&#xD;&#xA;        @media only screen &#xD;&#xA;        and (min-device-width : 768px) &#xD;&#xA;        and (max-device-width : 1024px)  {&#xD;&#xA;          &#xD;&#xA;        }&#xD;&#xA;        /* iPad in landscape */&#xD;&#xA;        @media only screen &#xD;&#xA;        and (min-device-width : 768px) &#xD;&#xA;        and (max-device-width : 1024px) &#xD;&#xA;        and (orientation : landscape) {&#xD;&#xA;          &#xD;&#xA;        }&#xD;&#xA;        /* iPad in portrait */&#xD;&#xA;        @media only screen &#xD;&#xA;        and (min-device-width : 768px) &#xD;&#xA;        and (max-device-width : 1024px) &#xD;&#xA;        and (orientation : portrait) {&#xD;&#xA;          &#xD;&#xA;        }&#xD;&#xA;        /* Galaxy S3 portrait and landscape */&#xD;&#xA;        @media screen &#xD;&#xA;          and (device-width: 320px) &#xD;&#xA;          and (device-height: 640px) &#xD;&#xA;          and (-webkit-device-pixel-ratio: 2) {&#xD;&#xA;        }&#xD;&#xA;        /* Galaxy S3 portrait */&#xD;&#xA;        @media screen &#xD;&#xA;          and (device-width: 320px) &#xD;&#xA;          and (device-height: 640px) &#xD;&#xA;          and (-webkit-device-pixel-ratio: 2) &#xD;&#xA;          and (orientation: portrait) {&#xD;&#xA;        }&#xD;&#xA;        /* Galaxy S3 landscape */&#xD;&#xA;        @media screen &#xD;&#xA;          and (device-width: 320px) &#xD;&#xA;          and (device-height: 640px) &#xD;&#xA;          and (-webkit-device-pixel-ratio: 2) &#xD;&#xA;          and (orientation: landscape) {&#xD;&#xA;        }&#xD;&#xA;        /* Galaxy S4 portrait and landscape */&#xD;&#xA;        @media screen &#xD;&#xA;          and (device-width: 320px) &#xD;&#xA;          and (device-height: 640px) &#xD;&#xA;          and (-webkit-device-pixel-ratio: 3) {&#xD;&#xA;        }&#xD;&#xA;        /* Galaxy S4 portrait */&#xD;&#xA;        @media screen &#xD;&#xA;          and (device-width: 320px) &#xD;&#xA;          and (device-height: 640px) &#xD;&#xA;          and (-webkit-device-pixel-ratio: 3) &#xD;&#xA;          and (orientation: portrait) {&#xD;&#xA;        }&#xD;&#xA;        /* Galaxy S4 landscape */&#xD;&#xA;        @media screen &#xD;&#xA;          and (device-width: 320px) &#xD;&#xA;          and (device-height: 640px) &#xD;&#xA;          and (-webkit-device-pixel-ratio: 3) &#xD;&#xA;          and (orientation: landscape) {&#xD;&#xA;        }&#xD;&#xA;        /* Galaxy S5 portrait and landscape */&#xD;&#xA;        @media screen &#xD;&#xA;          and (device-width: 360px) &#xD;&#xA;          and (device-height: 640px) &#xD;&#xA;          and (-webkit-device-pixel-ratio: 3) {&#xD;&#xA;        }&#xD;&#xA;        /* Galaxy S5 portrait */&#xD;&#xA;        @media screen &#xD;&#xA;          and (device-width: 360px) &#xD;&#xA;          and (device-height: 640px) &#xD;&#xA;          and (-webkit-device-pixel-ratio: 3) &#xD;&#xA;          and (orientation: portrait) {&#xD;&#xA;        }&#xD;&#xA;        /* Galaxy S5 landscape */&#xD;&#xA;        @media screen &#xD;&#xA;          and (device-width: 360px) &#xD;&#xA;          and (device-height: 640px) &#xD;&#xA;          and (-webkit-device-pixel-ratio: 3) &#xD;&#xA;          and (orientation: landscape) {&#xD;&#xA;        }&#xD;&#xA;        /* HTC One portrait and landscape */&#xD;&#xA;        @media screen &#xD;&#xA;          and (device-width: 360px) &#xD;&#xA;          and (device-height: 640px) &#xD;&#xA;          and (-webkit-device-pixel-ratio: 3) {&#xD;&#xA;        }&#xD;&#xA;        /* HTC One portrait */&#xD;&#xA;        @media screen &#xD;&#xA;          and (device-width: 360px) &#xD;&#xA;          and (device-height: 640px) &#xD;&#xA;          and (-webkit-device-pixel-ratio: 3) &#xD;&#xA;          and (orientation: portrait) {&#xD;&#xA;        }&#xD;&#xA;        /* HTC One landscape */&#xD;&#xA;        @media screen &#xD;&#xA;          and (device-width: 360px) &#xD;&#xA;          and (device-height: 640px) &#xD;&#xA;          and (-webkit-device-pixel-ratio: 3) &#xD;&#xA;          and (orientation: landscape) {&#xD;&#xA;        }&#xD;&#xA;        /*&#xD;&#xA;          iPad 3 & 4 Media Queries&#xD;&#xA;          If you're looking to target only 3rd and 4th generation Retina iPads &#xD;&#xA;          (or tablets with similar resolution) to add @2x graphics,&#xD;&#xA;          or other features for the tablet's Retina display, use the following media queries.&#xD;&#xA;        */&#xD;&#xA;        /* Retina iPad in portrait & landscape */&#xD;&#xA;        @media only screen &#xD;&#xA;        and (min-device-width : 768px) &#xD;&#xA;        and (max-device-width : 1024px)&#xD;&#xA;        and (-webkit-min-device-pixel-ratio: 2) {&#xD;&#xA;          &#xD;&#xA;        }&#xD;&#xA;        /* Retina iPad in landscape */&#xD;&#xA;        @media only screen &#xD;&#xA;        and (min-device-width : 768px) &#xD;&#xA;        and (max-device-width : 1024px) &#xD;&#xA;        and (orientation : landscape)&#xD;&#xA;        and (-webkit-min-device-pixel-ratio: 2) {&#xD;&#xA;          &#xD;&#xA;        }&#xD;&#xA;        /* Retina iPad in portrait */&#xD;&#xA;        @media only screen &#xD;&#xA;        and (min-device-width : 768px) &#xD;&#xA;        and (max-device-width : 1024px) &#xD;&#xA;        and (orientation : portrait)&#xD;&#xA;        and (-webkit-min-device-pixel-ratio: 2) {&#xD;&#xA;          &#xD;&#xA;        }&#xD;&#xA;        /*&#xD;&#xA;          iPad 1 & 2 Media Queries&#xD;&#xA;          If you're looking to supply different graphics or choose different typography &#xD;&#xA;          for the lower resolution iPad display, the media queries below will work &#xD;&#xA;          like a charm in your responsive design!&#xD;&#xA;        */&#xD;&#xA;        /* iPad 1 & 2 in portrait & landscape */&#xD;&#xA;        @media only screen &#xD;&#xA;        and (min-device-width : 768px) &#xD;&#xA;        and (max-device-width : 1024px) &#xD;&#xA;        and (-webkit-min-device-pixel-ratio: 1) {&#xD;&#xA;          &#xD;&#xA;        }&#xD;&#xA;        /* iPad 1 & 2 in landscape */&#xD;&#xA;        @media only screen &#xD;&#xA;        and (min-device-width : 768px) &#xD;&#xA;        and (max-device-width : 1024px) &#xD;&#xA;        and (orientation : landscape)&#xD;&#xA;        and (-webkit-min-device-pixel-ratio: 1) {&#xD;&#xA;          &#xD;&#xA;        }&#xD;&#xA;        /* iPad 1 & 2 in portrait */&#xD;&#xA;        @media only screen &#xD;&#xA;        and (min-device-width : 768px) &#xD;&#xA;        and (max-device-width : 1024px) &#xD;&#xA;        and (orientation : portrait) &#xD;&#xA;        and (-webkit-min-device-pixel-ratio: 1) {&#xD;&#xA;          &#xD;&#xA;        }&#xD;&#xA;        /* iPad mini in portrait & landscape */&#xD;&#xA;        @media only screen &#xD;&#xA;        and (min-device-width : 768px) &#xD;&#xA;        and (max-device-width : 1024px)&#xD;&#xA;        and (-webkit-min-device-pixel-ratio: 1) {&#xD;&#xA;          &#xD;&#xA;        }&#xD;&#xA;        /* iPad mini in landscape */&#xD;&#xA;        @media only screen &#xD;&#xA;        and (min-device-width : 768px) &#xD;&#xA;        and (max-device-width : 1024px) &#xD;&#xA;        and (orientation : landscape)&#xD;&#xA;        and (-webkit-min-device-pixel-ratio: 1) {&#xD;&#xA;        }&#xD;&#xA;        /* iPad mini in portrait */&#xD;&#xA;        @media only screen &#xD;&#xA;        and (min-device-width : 768px) &#xD;&#xA;        and (max-device-width : 1024px) &#xD;&#xA;        and (orientation : portrait)&#xD;&#xA;        and (-webkit-min-device-pixel-ratio: 1) {&#xD;&#xA;          &#xD;&#xA;        }&#xD;&#xA;        /* Galaxy Tab 10.1 portrait and landscape */&#xD;&#xA;        @media&#xD;&#xA;          (min-device-width: 800px) &#xD;&#xA;          and (max-device-width: 1280px) {&#xD;&#xA;        }&#xD;&#xA;        /* Galaxy Tab 10.1 portrait */&#xD;&#xA;        @media &#xD;&#xA;          (max-device-width: 800px) &#xD;&#xA;          and (orientation: portrait) { &#xD;&#xA;        }&#xD;&#xA;        /* Galaxy Tab 10.1 landscape */&#xD;&#xA;        @media &#xD;&#xA;          (max-device-width: 1280px) &#xD;&#xA;          and (orientation: landscape) { &#xD;&#xA;        }&#xD;&#xA;        /* Asus Nexus 7 portrait and landscape */&#xD;&#xA;        @media screen &#xD;&#xA;          and (device-width: 601px) &#xD;&#xA;          and (device-height: 906px) &#xD;&#xA;          and (-webkit-min-device-pixel-ratio: 1.331) &#xD;&#xA;          and (-webkit-max-device-pixel-ratio: 1.332) {&#xD;&#xA;        }&#xD;&#xA;        /* Asus Nexus 7 portrait */&#xD;&#xA;        @media screen &#xD;&#xA;          and (device-width: 601px) &#xD;&#xA;          and (device-height: 906px) &#xD;&#xA;          and (-webkit-min-device-pixel-ratio: 1.331) &#xD;&#xA;          and (-webkit-max-device-pixel-ratio: 1.332) &#xD;&#xA;          and (orientation: portrait) {&#xD;&#xA;        }&#xD;&#xA;        /* Asus Nexus 7 landscape */&#xD;&#xA;        @media screen &#xD;&#xA;          and (device-width: 601px) &#xD;&#xA;          and (device-height: 906px) &#xD;&#xA;          and (-webkit-min-device-pixel-ratio: 1.331) &#xD;&#xA;          and (-webkit-max-device-pixel-ratio: 1.332) &#xD;&#xA;          and (orientation: landscape) {&#xD;&#xA;        }&#xD;&#xA;        /* Kindle Fire HD 7"" portrait and landscape */&#xD;&#xA;        @media only screen &#xD;&#xA;          and (min-device-width: 800px) &#xD;&#xA;          and (max-device-width: 1280px) &#xD;&#xA;          and (-webkit-min-device-pixel-ratio: 1.5) {&#xD;&#xA;        }&#xD;&#xA;        /* Kindle Fire HD 7"" portrait */&#xD;&#xA;        @media only screen &#xD;&#xA;          and (min-device-width: 800px) &#xD;&#xA;          and (max-device-width: 1280px) &#xD;&#xA;          and (-webkit-min-device-pixel-ratio: 1.5) &#xD;&#xA;          and (orientation: portrait) {&#xD;&#xA;            &#xD;&#xA;        }&#xD;&#xA;        /* Kindle Fire HD 7"" landscape */&#xD;&#xA;        @media only screen &#xD;&#xA;          and (min-device-width: 800px) &#xD;&#xA;          and (max-device-width: 1280px) &#xD;&#xA;          and (-webkit-min-device-pixel-ratio: 1.5) &#xD;&#xA;          and (orientation: landscape) {&#xD;&#xA;        }&#xD;&#xA;        /* Kindle Fire HD 8.9"" portrait and landscape */&#xD;&#xA;        @media only screen &#xD;&#xA;          and (min-device-width: 1200px) &#xD;&#xA;          and (max-device-width: 1600px) &#xD;&#xA;          and (-webkit-min-device-pixel-ratio: 1.5) {&#xD;&#xA;        }&#xD;&#xA;        /* Kindle Fire HD 8.9"" portrait */&#xD;&#xA;        @media only screen &#xD;&#xA;          and (min-device-width: 1200px) &#xD;&#xA;          and (max-device-width: 1600px) &#xD;&#xA;          and (-webkit-min-device-pixel-ratio: 1.5) &#xD;&#xA;          and (orientation: portrait) {&#xD;&#xA;            &#xD;&#xA;        }&#xD;&#xA;        /* Kindle Fire HD 8.9"" landscape */&#xD;&#xA;        @media only screen &#xD;&#xA;          and (min-device-width: 1200px) &#xD;&#xA;          and (max-device-width: 1600px) &#xD;&#xA;          and (-webkit-min-device-pixel-ratio: 1.5) &#xD;&#xA;          and (orientation: landscape) {&#xD;&#xA;        }&#xD;&#xA;        /* Laptops non-retina screens */&#xD;&#xA;        @media screen &#xD;&#xA;          and (min-device-width: 1200px) &#xD;&#xA;          and (max-device-width: 1600px) &#xD;&#xA;          and (-webkit-min-device-pixel-ratio: 1) {&#xD;&#xA;            &#xD;&#xA;        }&#xD;&#xA;        /* Laptops retina screens */&#xD;&#xA;        @media screen &#xD;&#xA;          and (min-device-width: 1200px) &#xD;&#xA;          and (max-device-width: 1600px) &#xD;&#xA;          and (-webkit-min-device-pixel-ratio: 2)&#xD;&#xA;          and (min-resolution: 192dpi) {&#xD;&#xA;            &#xD;&#xA;        }&#xD;&#xA;        /* Apple Watch */&#xD;&#xA;        @media&#xD;&#xA;          (max-device-width: 42mm)&#xD;&#xA;          and (min-device-width: 38mm) { &#xD;&#xA;        }&#xD;&#xA;        /* Moto 360 Watch */&#xD;&#xA;        @media &#xD;&#xA;          (max-device-width: 218px)&#xD;&#xA;          and (max-device-height: 281px) { &#xD;&#xA;        }"
3895858055505143799,119,7,"    public class GoogleLocationService {&#xD;&#xA;    private GoogleServicesCallbacks callbacks = new GoogleServicesCallbacks();&#xD;&#xA;    LocationUpdateListener locationUpdateListener;&#xD;&#xA;    Context activity;&#xD;&#xA;    protected GoogleApiClient mGoogleApiClient;&#xD;&#xA;    protected LocationRequest mLocationRequest;&#xD;&#xA;    public static final long UPDATE_INTERVAL_IN_MILLISECONDS = 30000;&#xD;&#xA;   &#xD;&#xA;    public GoogleLocationService(Context activity, LocationUpdateListener locationUpdateListener) {&#xD;&#xA;        this.locationUpdateListener = locationUpdateListener;&#xD;&#xA;        this.activity = activity;&#xD;&#xA;        buildGoogleApiClient();&#xD;&#xA;    }&#xD;&#xA;    protected synchronized void buildGoogleApiClient() {&#xD;&#xA;        //Log.i(TAG, ""Building GoogleApiClient"");&#xD;&#xA;        mGoogleApiClient = new GoogleApiClient.Builder(activity)&#xD;&#xA;                .addConnectionCallbacks(callbacks)&#xD;&#xA;                .addOnConnectionFailedListener(callbacks)&#xD;&#xA;                .addApi(LocationServices.API)&#xD;&#xA;                .build();&#xD;&#xA;        createLocationRequest();&#xD;&#xA;        mGoogleApiClient.connect();&#xD;&#xA;    }&#xD;&#xA;    protected void createLocationRequest() {&#xD;&#xA;        mLocationRequest = new LocationRequest();&#xD;&#xA;        mLocationRequest.setInterval(UPDATE_INTERVAL_IN_MILLISECONDS);&#xD;&#xA;        mLocationRequest.setPriority(LocationRequest.PRIORITY_HIGH_ACCURACY);&#xD;&#xA;    }&#xD;&#xA;    private class GoogleServicesCallbacks implements GoogleApiClient.ConnectionCallbacks, GoogleApiClient.OnConnectionFailedListener, LocationListener {&#xD;&#xA;        @Override&#xD;&#xA;        public void onConnected(Bundle bundle) {&#xD;&#xA;            startLocationUpdates();&#xD;&#xA;        }&#xD;&#xA;        @Override&#xD;&#xA;        public void onConnectionSuspended(int i) {&#xD;&#xA;            mGoogleApiClient.connect();&#xD;&#xA;        }&#xD;&#xA;        @Override&#xD;&#xA;        public void onConnectionFailed(@NonNull ConnectionResult connectionResult) {&#xD;&#xA;            if (connectionResult.getErrorCode() == ConnectionResult.SERVICE_VERSION_UPDATE_REQUIRED) {&#xD;&#xA;                Toast.makeText(activity, ""Google play service not updated"", Toast.LENGTH_LONG).show();&#xD;&#xA;            }&#xD;&#xA;            locationUpdateListener.cannotReceiveLocationUpdates();&#xD;&#xA;        }&#xD;&#xA;        @Override&#xD;&#xA;        public void onLocationChanged(Location location) {&#xD;&#xA;            if (location.hasAccuracy()) {&#xD;&#xA;                if (location.getAccuracy() < 30) {&#xD;&#xA;                    locationUpdateListener.updateLocation(location);&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    private static boolean locationEnabled(Context context) {&#xD;&#xA;        boolean gps_enabled = false;&#xD;&#xA;        LocationManager lm = (LocationManager) context.getSystemService(Context.LOCATION_SERVICE);&#xD;&#xA;        try {&#xD;&#xA;            gps_enabled = lm.isProviderEnabled(LocationManager.GPS_PROVIDER);&#xD;&#xA;        } catch (Exception ex) {&#xD;&#xA;            ex.printStackTrace();&#xD;&#xA;        }&#xD;&#xA;        return gps_enabled;&#xD;&#xA;    }&#xD;&#xA;    private boolean servicesConnected(Context context) {&#xD;&#xA;        return isPackageInstalled(GooglePlayServicesUtil.GOOGLE_PLAY_STORE_PACKAGE, context);&#xD;&#xA;    }&#xD;&#xA;    private boolean isPackageInstalled(String packagename, Context context) {&#xD;&#xA;        PackageManager pm = context.getPackageManager();&#xD;&#xA;        try {&#xD;&#xA;            pm.getPackageInfo(packagename, PackageManager.GET_ACTIVITIES);&#xD;&#xA;            return true;&#xD;&#xA;        } catch (PackageManager.NameNotFoundException e) {&#xD;&#xA;            e.printStackTrace();&#xD;&#xA;            return false;&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    public void startUpdates() {&#xD;&#xA;        /*&#xD;&#xA;         * Connect the client. Don't re-start any requests here; instead, wait&#xD;&#xA;		 * for onResume()&#xD;&#xA;		 */&#xD;&#xA;        if (servicesConnected(activity)) {&#xD;&#xA;            if (locationEnabled(activity)) {&#xD;&#xA;                locationUpdateListener.canReceiveLocationUpdates();&#xD;&#xA;                startLocationUpdates();&#xD;&#xA;            } else {&#xD;&#xA;                locationUpdateListener.cannotReceiveLocationUpdates();&#xD;&#xA;                Toast.makeText(activity, ""Unable to get your location.Please turn on your device Gps"", Toast.LENGTH_LONG).show();&#xD;&#xA;            }&#xD;&#xA;        } else {&#xD;&#xA;            locationUpdateListener.cannotReceiveLocationUpdates();&#xD;&#xA;            Toast.makeText(activity, ""Google play service not available"", Toast.LENGTH_LONG).show();&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    //stop location updates&#xD;&#xA;    public void stopUpdates() {&#xD;&#xA;        stopLocationUpdates();&#xD;&#xA;    }&#xD;&#xA;    //start location updates&#xD;&#xA;    private void startLocationUpdates() {&#xD;&#xA;        if (checkSelfPermission(activity, ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && checkSelfPermission(activity, ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {&#xD;&#xA;            return;&#xD;&#xA;        }&#xD;&#xA;        if (mGoogleApiClient.isConnected()) {&#xD;&#xA;            LocationServices.FusedLocationApi.requestLocationUpdates(mGoogleApiClient, mLocationRequest, callbacks);&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    public void stopLocationUpdates() {&#xD;&#xA;        if (mGoogleApiClient.isConnected()) {&#xD;&#xA;            LocationServices.FusedLocationApi.removeLocationUpdates(mGoogleApiClient, callbacks);&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    public void startGoogleApi() {&#xD;&#xA;        mGoogleApiClient.connect();&#xD;&#xA;    }&#xD;&#xA;    public void closeGoogleApi() {&#xD;&#xA;        mGoogleApiClient.disconnect();&#xD;&#xA;    }&#xD;&#xA;     }"
-3797311061146730926,125,7,"       /*&#xD;&#xA;     * Date Format 1.2.3&#xD;&#xA;     * (c) 2007-2009 Steven Levithan <stevenlevithan.com>&#xD;&#xA;     * MIT license&#xD;&#xA;     *&#xD;&#xA;     * Includes enhancements by Scott Trenda <scott.trenda.net>&#xD;&#xA;     * and Kris Kowal <cixar.com/~kris.kowal/>&#xD;&#xA;     *&#xD;&#xA;     * Accepts a date, a mask, or a date and a mask.&#xD;&#xA;     * Returns a formatted version of the given date.&#xD;&#xA;     * The date defaults to the current date/time.&#xD;&#xA;     * The mask defaults to dateFormat.masks.default.&#xD;&#xA;     */&#xD;&#xA;    &#xD;&#xA;    var dateFormat = function () {&#xD;&#xA;    	var	token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\1?|[LloSZ]|""[^""]*""|'[^']*'/g,&#xD;&#xA;    		timezone = /\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g,&#xD;&#xA;    		timezoneClip = /[^-+\dA-Z]/g,&#xD;&#xA;    		pad = function (val, len) {&#xD;&#xA;    			val = String(val);&#xD;&#xA;    			len = len || 2;&#xD;&#xA;    			while (val.length < len) val = ""0"" + val;&#xD;&#xA;    			return val;&#xD;&#xA;    		};&#xD;&#xA;    &#xD;&#xA;    	// Regexes and supporting functions are cached through closure&#xD;&#xA;    	return function (date, mask, utc) {&#xD;&#xA;    		var dF = dateFormat;&#xD;&#xA;    &#xD;&#xA;    		// You can't provide utc if you skip other args (use the ""UTC:"" mask prefix)&#xD;&#xA;    		if (arguments.length == 1 && Object.prototype.toString.call(date) == ""[object String]"" && !/\d/.test(date)) {&#xD;&#xA;    			mask = date;&#xD;&#xA;    			date = undefined;&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		// Passing date through Date applies Date.parse, if necessary&#xD;&#xA;    		date = date ? new Date(date) : new Date;&#xD;&#xA;    		if (isNaN(date)) throw SyntaxError(""invalid date"");&#xD;&#xA;    &#xD;&#xA;    		mask = String(dF.masks[mask] || mask || dF.masks[""default""]);&#xD;&#xA;    &#xD;&#xA;    		// Allow setting the utc argument via the mask&#xD;&#xA;    		if (mask.slice(0, 4) == ""UTC:"") {&#xD;&#xA;    			mask = mask.slice(4);&#xD;&#xA;    			utc = true;&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		var	_ = utc ? ""getUTC"" : ""get"",&#xD;&#xA;    			d = date[_ + ""Date""](),&#xD;&#xA;    			D = date[_ + ""Day""](),&#xD;&#xA;    			m = date[_ + ""Month""](),&#xD;&#xA;    			y = date[_ + ""FullYear""](),&#xD;&#xA;    			H = date[_ + ""Hours""](),&#xD;&#xA;    			M = date[_ + ""Minutes""](),&#xD;&#xA;    			s = date[_ + ""Seconds""](),&#xD;&#xA;    			L = date[_ + ""Milliseconds""](),&#xD;&#xA;    			o = utc ? 0 : date.getTimezoneOffset(),&#xD;&#xA;    			flags = {&#xD;&#xA;    				d:    d,&#xD;&#xA;    				dd:   pad(d),&#xD;&#xA;    				ddd:  dF.i18n.dayNames[D],&#xD;&#xA;    				dddd: dF.i18n.dayNames[D + 7],&#xD;&#xA;    				m:    m + 1,&#xD;&#xA;    				mm:   pad(m + 1),&#xD;&#xA;    				mmm:  dF.i18n.monthNames[m],&#xD;&#xA;    				mmmm: dF.i18n.monthNames[m + 12],&#xD;&#xA;    				yy:   String(y).slice(2),&#xD;&#xA;    				yyyy: y,&#xD;&#xA;    				h:    H % 12 || 12,&#xD;&#xA;    				hh:   pad(H % 12 || 12),&#xD;&#xA;    				H:    H,&#xD;&#xA;    				HH:   pad(H),&#xD;&#xA;    				M:    M,&#xD;&#xA;    				MM:   pad(M),&#xD;&#xA;    				s:    s,&#xD;&#xA;    				ss:   pad(s),&#xD;&#xA;    				l:    pad(L, 3),&#xD;&#xA;    				L:    pad(L > 99 ? Math.round(L / 10) : L),&#xD;&#xA;    				t:    H < 12 ? ""a""  : ""p"",&#xD;&#xA;    				tt:   H < 12 ? ""am"" : ""pm"",&#xD;&#xA;    				T:    H < 12 ? ""A""  : ""P"",&#xD;&#xA;    				TT:   H < 12 ? ""AM"" : ""PM"",&#xD;&#xA;    				Z:    utc ? ""UTC"" : (String(date).match(timezone) || [""""]).pop().replace(timezoneClip, """"),&#xD;&#xA;    				o:    (o > 0 ? ""-"" : ""+"") + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),&#xD;&#xA;    				S:    [""th"", ""st"", ""nd"", ""rd""][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10]&#xD;&#xA;    			};&#xD;&#xA;    &#xD;&#xA;    		return mask.replace(token, function ($0) {&#xD;&#xA;    			return $0 in flags ? flags[$0] : $0.slice(1, $0.length - 1);&#xD;&#xA;    		});&#xD;&#xA;    	};&#xD;&#xA;    }();&#xD;&#xA;    &#xD;&#xA;    // Some common format strings&#xD;&#xA;    dateFormat.masks = {&#xD;&#xA;    	""default"":      ""ddd mmm dd yyyy HH:MM:ss"",&#xD;&#xA;    	shortDate:      ""m/d/yy"",&#xD;&#xA;    	mediumDate:     ""mmm d, yyyy"",&#xD;&#xA;    	longDate:       ""mmmm d, yyyy"",&#xD;&#xA;    	fullDate:       ""dddd, mmmm d, yyyy"",&#xD;&#xA;    	shortTime:      ""h:MM TT"",&#xD;&#xA;    	mediumTime:     ""h:MM:ss TT"",&#xD;&#xA;    	longTime:       ""h:MM:ss TT Z"",&#xD;&#xA;    	isoDate:        ""yyyy-mm-dd"",&#xD;&#xA;    	isoTime:        ""HH:MM:ss"",&#xD;&#xA;    	isoDateTime:    ""yyyy-mm-dd'T'HH:MM:ss"",&#xD;&#xA;    	isoUtcDateTime: ""UTC:yyyy-mm-dd'T'HH:MM:ss'Z'""&#xD;&#xA;    };&#xD;&#xA;    &#xD;&#xA;    // Internationalization strings&#xD;&#xA;    dateFormat.i18n = {&#xD;&#xA;    	dayNames: [&#xD;&#xA;    		""Sun"", ""Mon"", ""Tue"", ""Wed"", ""Thu"", ""Fri"", ""Sat"",&#xD;&#xA;    		""Sunday"", ""Monday"", ""Tuesday"", ""Wednesday"", ""Thursday"", ""Friday"", ""Saturday""&#xD;&#xA;    	],&#xD;&#xA;    	monthNames: [&#xD;&#xA;    		""Jan"", ""Feb"", ""Mar"", ""Apr"", ""May"", ""Jun"", ""Jul"", ""Aug"", ""Sep"", ""Oct"", ""Nov"", ""Dec"",&#xD;&#xA;    		""January"", ""February"", ""March"", ""April"", ""May"", ""June"", ""July"", ""August"", ""September"", ""October"", ""November"", ""December""&#xD;&#xA;    	]&#xD;&#xA;    };&#xD;&#xA;    &#xD;&#xA;    // For convenience...&#xD;&#xA;    Date.prototype.format = function (mask, utc) {&#xD;&#xA;    	return dateFormat(this, mask, utc);&#xD;&#xA;    };"
4647132496444666153,150,7,"    public class ImageLoader {&#xD;&#xA;        &#xD;&#xA;        MemoryCache memoryCache=new MemoryCache();&#xD;&#xA;        FileCache fileCache;&#xD;&#xA;        private Map<ImageView, String> imageViews=Collections.synchronizedMap(new WeakHashMap<ImageView, String>());&#xD;&#xA;        ExecutorService executorService; &#xD;&#xA;        &#xD;&#xA;        public ImageLoader(Context context){&#xD;&#xA;            fileCache=new FileCache(context);&#xD;&#xA;            executorService=Executors.newFixedThreadPool(5);&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        final int stub_id = R.drawable.no_image;&#xD;&#xA;        public void DisplayImage(String url, ImageView imageView)&#xD;&#xA;        {&#xD;&#xA;            imageViews.put(imageView, url);&#xD;&#xA;            Bitmap bitmap=memoryCache.get(url);&#xD;&#xA;            if(bitmap!=null)&#xD;&#xA;                imageView.setImageBitmap(bitmap);&#xD;&#xA;            else&#xD;&#xA;            {&#xD;&#xA;                queuePhoto(url, imageView);&#xD;&#xA;                imageView.setImageResource(stub_id);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;            &#xD;&#xA;        private void queuePhoto(String url, ImageView imageView)&#xD;&#xA;        {&#xD;&#xA;            PhotoToLoad p=new PhotoToLoad(url, imageView);&#xD;&#xA;            executorService.submit(new PhotosLoader(p));&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        private Bitmap getBitmap(String url) &#xD;&#xA;        {&#xD;&#xA;            File f=fileCache.getFile(url);&#xD;&#xA;            &#xD;&#xA;            //from SD cache&#xD;&#xA;            Bitmap b = decodeFile(f);&#xD;&#xA;            if(b!=null)&#xD;&#xA;                return b;&#xD;&#xA;            &#xD;&#xA;            //from web&#xD;&#xA;            try {&#xD;&#xA;                Bitmap bitmap=null;&#xD;&#xA;                URL imageUrl = new URL(url);&#xD;&#xA;                HttpURLConnection conn = (HttpURLConnection)imageUrl.openConnection();&#xD;&#xA;                conn.setConnectTimeout(30000);&#xD;&#xA;                conn.setReadTimeout(30000);&#xD;&#xA;                conn.setInstanceFollowRedirects(true);&#xD;&#xA;                InputStream is=conn.getInputStream();&#xD;&#xA;                OutputStream os = new FileOutputStream(f);&#xD;&#xA;                Utils.CopyStream(is, os);&#xD;&#xA;                os.close();&#xD;&#xA;                bitmap = decodeFile(f);&#xD;&#xA;                return bitmap;&#xD;&#xA;            } catch (Exception ex){&#xD;&#xA;               ex.printStackTrace();&#xD;&#xA;               return null;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        //decodes image and scales it to reduce memory consumption&#xD;&#xA;        private Bitmap decodeFile(File f){&#xD;&#xA;            try {&#xD;&#xA;                //decode image size&#xD;&#xA;                BitmapFactory.Options o = new BitmapFactory.Options();&#xD;&#xA;                o.inJustDecodeBounds = true;&#xD;&#xA;                BitmapFactory.decodeStream(new FileInputStream(f),null,o);&#xD;&#xA;                &#xD;&#xA;                //Find the correct scale value. It should be the power of 2.&#xD;&#xA;                final int REQUIRED_SIZE=70;&#xD;&#xA;                int width_tmp=o.outWidth, height_tmp=o.outHeight;&#xD;&#xA;                int scale=1;&#xD;&#xA;                while(true){&#xD;&#xA;                    if(width_tmp/2<REQUIRED_SIZE || height_tmp/2<REQUIRED_SIZE)&#xD;&#xA;                        break;&#xD;&#xA;                    width_tmp/=2;&#xD;&#xA;                    height_tmp/=2;&#xD;&#xA;                    scale*=2;&#xD;&#xA;                }&#xD;&#xA;                &#xD;&#xA;                //decode with inSampleSize&#xD;&#xA;                BitmapFactory.Options o2 = new BitmapFactory.Options();&#xD;&#xA;                o2.inSampleSize=scale;&#xD;&#xA;                return BitmapFactory.decodeStream(new FileInputStream(f), null, o2);&#xD;&#xA;            } catch (FileNotFoundException e) {}&#xD;&#xA;            return null;&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        //Task for the queue&#xD;&#xA;        private class PhotoToLoad&#xD;&#xA;        {&#xD;&#xA;            public String url;&#xD;&#xA;            public ImageView imageView;&#xD;&#xA;            public PhotoToLoad(String u, ImageView i){&#xD;&#xA;                url=u; &#xD;&#xA;                imageView=i;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        class PhotosLoader implements Runnable {&#xD;&#xA;            PhotoToLoad photoToLoad;&#xD;&#xA;            PhotosLoader(PhotoToLoad photoToLoad){&#xD;&#xA;                this.photoToLoad=photoToLoad;&#xD;&#xA;            }&#xD;&#xA;            &#xD;&#xA;            @Override&#xD;&#xA;            public void run() {&#xD;&#xA;                if(imageViewReused(photoToLoad))&#xD;&#xA;                    return;&#xD;&#xA;                Bitmap bmp=getBitmap(photoToLoad.url);&#xD;&#xA;                memoryCache.put(photoToLoad.url, bmp);&#xD;&#xA;                if(imageViewReused(photoToLoad))&#xD;&#xA;                    return;&#xD;&#xA;                BitmapDisplayer bd=new BitmapDisplayer(bmp, photoToLoad);&#xD;&#xA;                Activity a=(Activity)photoToLoad.imageView.getContext();&#xD;&#xA;                a.runOnUiThread(bd);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        boolean imageViewReused(PhotoToLoad photoToLoad){&#xD;&#xA;            String tag=imageViews.get(photoToLoad.imageView);&#xD;&#xA;            if(tag==null || !tag.equals(photoToLoad.url))&#xD;&#xA;                return true;&#xD;&#xA;            return false;&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        //Used to display bitmap in the UI thread&#xD;&#xA;        class BitmapDisplayer implements Runnable&#xD;&#xA;        {&#xD;&#xA;            Bitmap bitmap;&#xD;&#xA;            PhotoToLoad photoToLoad;&#xD;&#xA;            public BitmapDisplayer(Bitmap b, PhotoToLoad p){bitmap=b;photoToLoad=p;}&#xD;&#xA;            public void run()&#xD;&#xA;            {&#xD;&#xA;                if(imageViewReused(photoToLoad))&#xD;&#xA;                    return;&#xD;&#xA;                if(bitmap!=null)&#xD;&#xA;                    photoToLoad.imageView.setImageBitmap(bitmap);&#xD;&#xA;                else&#xD;&#xA;                    photoToLoad.imageView.setImageResource(stub_id);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void clearCache() {&#xD;&#xA;            memoryCache.clear();&#xD;&#xA;            fileCache.clear();&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    }"
-5210080652456827021,150,7,    .reset-this {&#xD;&#xA;        animation : none;&#xD;&#xA;        animation-delay : 0;&#xD;&#xA;        animation-direction : normal;&#xD;&#xA;        animation-duration : 0;&#xD;&#xA;        animation-fill-mode : none;&#xD;&#xA;        animation-iteration-count : 1;&#xD;&#xA;        animation-name : none;&#xD;&#xA;        animation-play-state : running;&#xD;&#xA;        animation-timing-function : ease;&#xD;&#xA;        backface-visibility : visible;&#xD;&#xA;        background : 0;&#xD;&#xA;        background-attachment : scroll;&#xD;&#xA;        background-clip : border-box;&#xD;&#xA;        background-color : transparent;&#xD;&#xA;        background-image : none;&#xD;&#xA;        background-origin : padding-box;&#xD;&#xA;        background-position : 0 0;&#xD;&#xA;        background-position-x : 0;&#xD;&#xA;        background-position-y : 0;&#xD;&#xA;        background-repeat : repeat;&#xD;&#xA;        background-size : auto auto;&#xD;&#xA;        border : 0;&#xD;&#xA;        border-style : none;&#xD;&#xA;        border-width : medium;&#xD;&#xA;        border-color : inherit;&#xD;&#xA;        border-bottom : 0;&#xD;&#xA;        border-bottom-color : inherit;&#xD;&#xA;        border-bottom-left-radius : 0;&#xD;&#xA;        border-bottom-right-radius : 0;&#xD;&#xA;        border-bottom-style : none;&#xD;&#xA;        border-bottom-width : medium;&#xD;&#xA;        border-collapse : separate;&#xD;&#xA;        border-image : none;&#xD;&#xA;        border-left : 0;&#xD;&#xA;        border-left-color : inherit;&#xD;&#xA;        border-left-style : none;&#xD;&#xA;        border-left-width : medium;&#xD;&#xA;        border-radius : 0;&#xD;&#xA;        border-right : 0;&#xD;&#xA;        border-right-color : inherit;&#xD;&#xA;        border-right-style : none;&#xD;&#xA;        border-right-width : medium;&#xD;&#xA;        border-spacing : 0;&#xD;&#xA;        border-top : 0;&#xD;&#xA;        border-top-color : inherit;&#xD;&#xA;        border-top-left-radius : 0;&#xD;&#xA;        border-top-right-radius : 0;&#xD;&#xA;        border-top-style : none;&#xD;&#xA;        border-top-width : medium;&#xD;&#xA;        bottom : auto;&#xD;&#xA;        box-shadow : none;&#xD;&#xA;        box-sizing : content-box;&#xD;&#xA;        caption-side : top;&#xD;&#xA;        clear : none;&#xD;&#xA;        clip : auto;&#xD;&#xA;        color : inherit;&#xD;&#xA;        columns : auto;&#xD;&#xA;        column-count : auto;&#xD;&#xA;        column-fill : balance;&#xD;&#xA;        column-gap : normal;&#xD;&#xA;        column-rule : medium none currentColor;&#xD;&#xA;        column-rule-color : currentColor;&#xD;&#xA;        column-rule-style : none;&#xD;&#xA;        column-rule-width : none;&#xD;&#xA;        column-span : 1;&#xD;&#xA;        column-width : auto;&#xD;&#xA;        content : normal;&#xD;&#xA;        counter-increment : none;&#xD;&#xA;        counter-reset : none;&#xD;&#xA;        cursor : auto;&#xD;&#xA;        direction : ltr;&#xD;&#xA;        display : inline;&#xD;&#xA;        empty-cells : show;&#xD;&#xA;        float : none;&#xD;&#xA;        font : normal;&#xD;&#xA;        font-family : inherit;&#xD;&#xA;        font-size : medium;&#xD;&#xA;        font-style : normal;&#xD;&#xA;        font-variant : normal;&#xD;&#xA;        font-weight : normal;&#xD;&#xA;        height : auto;&#xD;&#xA;        hyphens : none;&#xD;&#xA;        left : auto;&#xD;&#xA;        letter-spacing : normal;&#xD;&#xA;        line-height : normal;&#xD;&#xA;        list-style : none;&#xD;&#xA;        list-style-image : none;&#xD;&#xA;        list-style-position : outside;&#xD;&#xA;        list-style-type : disc;&#xD;&#xA;        margin : 0;&#xD;&#xA;        margin-bottom : 0;&#xD;&#xA;        margin-left : 0;&#xD;&#xA;        margin-right : 0;&#xD;&#xA;        margin-top : 0;&#xD;&#xA;        max-height : none;&#xD;&#xA;        max-width : none;&#xD;&#xA;        min-height : 0;&#xD;&#xA;        min-width : 0;&#xD;&#xA;        opacity : 1;&#xD;&#xA;        orphans : 0;&#xD;&#xA;        outline : 0;&#xD;&#xA;        outline-color : invert;&#xD;&#xA;        outline-style : none;&#xD;&#xA;        outline-width : medium;&#xD;&#xA;        overflow : visible;&#xD;&#xA;        overflow-x : visible;&#xD;&#xA;        overflow-y : visible;&#xD;&#xA;        padding : 0;&#xD;&#xA;        padding-bottom : 0;&#xD;&#xA;        padding-left : 0;&#xD;&#xA;        padding-right : 0;&#xD;&#xA;        padding-top : 0;&#xD;&#xA;        page-break-after : auto;&#xD;&#xA;        page-break-before : auto;&#xD;&#xA;        page-break-inside : auto;&#xD;&#xA;        perspective : none;&#xD;&#xA;        perspective-origin : 50% 50%;&#xD;&#xA;        position : static;&#xD;&#xA;        /* May need to alter quotes for different locales (e.g fr) */&#xD;&#xA;        quotes : '\201C' '\201D' '\2018' '\2019';&#xD;&#xA;        right : auto;&#xD;&#xA;        tab-size : 8;&#xD;&#xA;        table-layout : auto;&#xD;&#xA;        text-align : inherit;&#xD;&#xA;        text-align-last : auto;&#xD;&#xA;        text-decoration : none;&#xD;&#xA;        text-decoration-color : inherit;&#xD;&#xA;        text-decoration-line : none;&#xD;&#xA;        text-decoration-style : solid;&#xD;&#xA;        text-indent : 0;&#xD;&#xA;        text-shadow : none;&#xD;&#xA;        text-transform : none;&#xD;&#xA;        top : auto;&#xD;&#xA;        transform : none;&#xD;&#xA;        transform-style : flat;&#xD;&#xA;        transition : none;&#xD;&#xA;        transition-delay : 0s;&#xD;&#xA;        transition-duration : 0s;&#xD;&#xA;        transition-property : none;&#xD;&#xA;        transition-timing-function : ease;&#xD;&#xA;        unicode-bidi : normal;&#xD;&#xA;        vertical-align : baseline;&#xD;&#xA;        visibility : visible;&#xD;&#xA;        white-space : normal;&#xD;&#xA;        widows : 0;&#xD;&#xA;        width : auto;&#xD;&#xA;        word-spacing : normal;&#xD;&#xA;        z-index : auto;&#xD;&#xA;    }
8123111761618467476,158,7,"        public static DataTable GetDataTabletFromCSVFile(string filePath, bool isHeadings)&#xD;&#xA;        {&#xD;&#xA;            DataTable MethodResult = null;&#xD;&#xA;            try&#xD;&#xA;            {&#xD;&#xA;                using (TextFieldParser TextFieldParser = new TextFieldParser(filePath))&#xD;&#xA;                {&#xD;&#xA;                    if (isHeadings)&#xD;&#xA;                    {&#xD;&#xA;                        MethodResult = GetDataTableFromTextFieldParser(TextFieldParser);&#xD;&#xA;                    }&#xD;&#xA;                    else&#xD;&#xA;                    {&#xD;&#xA;                        MethodResult = GetDataTableFromTextFieldParserNoHeadings(TextFieldParser);&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;            catch (Exception ex)&#xD;&#xA;            {&#xD;&#xA;                ex.HandleException();&#xD;&#xA;            }&#xD;&#xA;            return MethodResult;&#xD;&#xA;        }&#xD;&#xA;        public static DataTable GetDataTableFromCsvString(string csvBody, bool isHeadings)&#xD;&#xA;        {&#xD;&#xA;            DataTable MethodResult = null;&#xD;&#xA;            try&#xD;&#xA;            {&#xD;&#xA;                MemoryStream MemoryStream = new MemoryStream();&#xD;&#xA;                StreamWriter StreamWriter = new StreamWriter(MemoryStream);&#xD;&#xA;                StreamWriter.Write(csvBody);&#xD;&#xA;                StreamWriter.Flush();&#xD;&#xA;                MemoryStream.Position = 0;&#xD;&#xA;                using (TextFieldParser TextFieldParser = new TextFieldParser(MemoryStream))&#xD;&#xA;                {&#xD;&#xA;                    if (isHeadings)&#xD;&#xA;                    {&#xD;&#xA;                        MethodResult = GetDataTableFromTextFieldParser(TextFieldParser);&#xD;&#xA;                    }&#xD;&#xA;                    else&#xD;&#xA;                    {&#xD;&#xA;                        MethodResult = GetDataTableFromTextFieldParserNoHeadings(TextFieldParser);&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;            catch (Exception ex)&#xD;&#xA;            {&#xD;&#xA;                ex.HandleException();&#xD;&#xA;            }&#xD;&#xA;            return MethodResult;&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        public static DataTable GetDataTableFromRemoteCsv(string url, bool isHeadings)&#xD;&#xA;        {&#xD;&#xA;            DataTable MethodResult = null;&#xD;&#xA;            try&#xD;&#xA;            {&#xD;&#xA;                HttpWebRequest httpWebRequest = (HttpWebRequest)WebRequest.Create(url);&#xD;&#xA;                HttpWebResponse httpWebResponse = (HttpWebResponse)httpWebRequest.GetResponse();&#xD;&#xA;                StreamReader StreamReader = new StreamReader(httpWebResponse.GetResponseStream());&#xD;&#xA;                &#xD;&#xA;                using (TextFieldParser TextFieldParser = new TextFieldParser(StreamReader))&#xD;&#xA;                {&#xD;&#xA;                    if (isHeadings)&#xD;&#xA;                    {&#xD;&#xA;                        MethodResult = GetDataTableFromTextFieldParser(TextFieldParser);&#xD;&#xA;                    }&#xD;&#xA;                    else&#xD;&#xA;                    {&#xD;&#xA;                        MethodResult = GetDataTableFromTextFieldParserNoHeadings(TextFieldParser);&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;            catch (Exception ex)&#xD;&#xA;            {&#xD;&#xA;                ex.HandleException();&#xD;&#xA;            }&#xD;&#xA;            return MethodResult;&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        private static DataTable GetDataTableFromTextFieldParser(TextFieldParser textFieldParser)&#xD;&#xA;        {&#xD;&#xA;            DataTable MethodResult = null;&#xD;&#xA;            try&#xD;&#xA;            {&#xD;&#xA;                textFieldParser.SetDelimiters(new string[] { "","" });&#xD;&#xA;                textFieldParser.HasFieldsEnclosedInQuotes = true;&#xD;&#xA;                string[] ColumnFields = textFieldParser.ReadFields();&#xD;&#xA;                DataTable dt = new DataTable();&#xD;&#xA;                foreach (string ColumnField in ColumnFields)&#xD;&#xA;                {&#xD;&#xA;                    DataColumn DataColumn = new DataColumn(ColumnField);&#xD;&#xA;                    DataColumn.AllowDBNull = true;&#xD;&#xA;                    dt.Columns.Add(DataColumn);&#xD;&#xA;                }&#xD;&#xA;                while (!textFieldParser.EndOfData)&#xD;&#xA;                {&#xD;&#xA;                    string[] Fields = textFieldParser.ReadFields();&#xD;&#xA;                    for (int i = 0; i < Fields.Length; i++)&#xD;&#xA;                    {&#xD;&#xA;                        if (Fields[i] == """")&#xD;&#xA;                        {&#xD;&#xA;                            Fields[i] = null;&#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;                    dt.Rows.Add(Fields);&#xD;&#xA;                }&#xD;&#xA;                MethodResult = dt;&#xD;&#xA;                &#xD;&#xA;            }&#xD;&#xA;            catch (Exception ex)&#xD;&#xA;            {&#xD;&#xA;                ex.HandleException();&#xD;&#xA;            }&#xD;&#xA;            return MethodResult;&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        private static DataTable GetDataTableFromTextFieldParserNoHeadings(TextFieldParser textFieldParser)&#xD;&#xA;        {&#xD;&#xA;            DataTable MethodResult = null;&#xD;&#xA;            try&#xD;&#xA;            {&#xD;&#xA;                textFieldParser.SetDelimiters(new string[] { "","" });&#xD;&#xA;                textFieldParser.HasFieldsEnclosedInQuotes = true;&#xD;&#xA;                &#xD;&#xA;                bool FirstPass = true;&#xD;&#xA;                DataTable dt = new DataTable();&#xD;&#xA;                while (!textFieldParser.EndOfData)&#xD;&#xA;                {&#xD;&#xA;                    string[] Fields = textFieldParser.ReadFields();&#xD;&#xA;                    if(FirstPass)&#xD;&#xA;                    {&#xD;&#xA;                        for (int i = 0; i < Fields.Length; i++)&#xD;&#xA;                        {&#xD;&#xA;                            DataColumn DataColumn = new DataColumn(""Column "" + i);&#xD;&#xA;                            DataColumn.AllowDBNull = true;&#xD;&#xA;                            dt.Columns.Add(DataColumn);&#xD;&#xA;                        }&#xD;&#xA;                        FirstPass = false;&#xD;&#xA;                    }&#xD;&#xA;                    for (int i = 0; i < Fields.Length; i++)&#xD;&#xA;                    {&#xD;&#xA;                        if (Fields[i] == """")&#xD;&#xA;                        {&#xD;&#xA;                            Fields[i] = null;&#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;                    dt.Rows.Add(Fields);&#xD;&#xA;                }&#xD;&#xA;                MethodResult = dt;&#xD;&#xA;            }&#xD;&#xA;            catch (Exception ex)&#xD;&#xA;            {&#xD;&#xA;                ex.HandleException();&#xD;&#xA;            }&#xD;&#xA;            return MethodResult;&#xD;&#xA;        }&#xD;&#xA;        "
485607546903847101,22,8,"    function getScrollBarWidth () &#xD;&#xA;    {&#xD;&#xA;        var inner = document.createElement('p');&#xD;&#xA;        inner.style.width = ""100%"";&#xD;&#xA;        inner.style.height = ""200px"";&#xD;&#xA;        var outer = document.createElement('div');&#xD;&#xA;        outer.style.position = ""absolute"";&#xD;&#xA;        outer.style.top = ""0px"";&#xD;&#xA;        outer.style.left = ""0px"";&#xD;&#xA;        outer.style.visibility = ""hidden"";&#xD;&#xA;        outer.style.width = ""200px"";&#xD;&#xA;        outer.style.height = ""150px"";&#xD;&#xA;        outer.style.overflow = ""hidden"";&#xD;&#xA;        outer.appendChild (inner);&#xD;&#xA;        document.body.appendChild (outer);&#xD;&#xA;        var w1 = inner.offsetWidth;&#xD;&#xA;        outer.style.overflow = 'scroll';&#xD;&#xA;        var w2 = inner.offsetWidth;&#xD;&#xA;        if (w1 == w2) w2 = outer.clientWidth;&#xD;&#xA;        document.body.removeChild (outer);&#xD;&#xA;        return (w1 - w2);&#xD;&#xA;    }"
3836917373720717746,23,8,"    Sub PasswordBreaker()&#xD;&#xA;        'Breaks worksheet password protection.&#xD;&#xA;        Dim i As Integer, j As Integer, k As Integer&#xD;&#xA;        Dim l As Integer, m As Integer, n As Integer&#xD;&#xA;        Dim i1 As Integer, i2 As Integer, i3 As Integer&#xD;&#xA;        Dim i4 As Integer, i5 As Integer, i6 As Integer&#xD;&#xA;        On Error Resume Next&#xD;&#xA;        For i = 65 To 66: For j = 65 To 66: For k = 65 To 66&#xD;&#xA;        For l = 65 To 66: For m = 65 To 66: For i1 = 65 To 66&#xD;&#xA;        For i2 = 65 To 66: For i3 = 65 To 66: For i4 = 65 To 66&#xD;&#xA;        For i5 = 65 To 66: For i6 = 65 To 66: For n = 32 To 126&#xD;&#xA;        ActiveSheet.Unprotect Chr(i) & Chr(j) & Chr(k) & _&#xD;&#xA;            Chr(l) & Chr(m) & Chr(i1) & Chr(i2) & Chr(i3) & _&#xD;&#xA;            Chr(i4) & Chr(i5) & Chr(i6) & Chr(n)&#xD;&#xA;        If ActiveSheet.ProtectContents = False Then&#xD;&#xA;            MsgBox ""One usable password is "" & Chr(i) & Chr(j) & _&#xD;&#xA;                Chr(k) & Chr(l) & Chr(m) & Chr(i1) & Chr(i2) & _&#xD;&#xA;                Chr(i3) & Chr(i4) & Chr(i5) & Chr(i6) & Chr(n)&#xD;&#xA;             Exit Sub&#xD;&#xA;        End If&#xD;&#xA;        Next: Next: Next: Next: Next: Next&#xD;&#xA;        Next: Next: Next: Next: Next: Next&#xD;&#xA;    End Sub"
-3195852196100646136,23,8,"    #ifndef LISTITERATORG_H&#xD;&#xA;    #define LISTITERATORG_H&#xD;&#xA;    #include <stdio.h>&#xD;&#xA;    typedef struct IteratorGRep *IteratorG;&#xD;&#xA;    typedef int   (*ElmCompareFp)(void const *e1, void const *e2);&#xD;&#xA;    typedef void *(*ElmNewFp)(void const *e1);&#xD;&#xA;    typedef void  (*ElmFreeFp)(void *e1);&#xD;&#xA;    IteratorG newIterator(ElmCompareFp cmpFp, ElmNewFp newFp, ElmFreeFp freeFp);&#xD;&#xA;    int  add(IteratorG it, void *vp);&#xD;&#xA;    int  hasNext(IteratorG it);&#xD;&#xA;    int  hasPrevious(IteratorG it);&#xD;&#xA;    void *next(IteratorG it);&#xD;&#xA;    void *previous(IteratorG it);&#xD;&#xA;    int  del(IteratorG it);&#xD;&#xA;    int  set(IteratorG it, void *vp);&#xD;&#xA;    IteratorG advance(IteratorG it, int n);&#xD;&#xA;    void reverse(IteratorG it);&#xD;&#xA;    IteratorG find(IteratorG it, int (*fp) (void *vp) );&#xD;&#xA;    int distanceFromStart(IteratorG it);&#xD;&#xA;    int distanceToEnd(IteratorG it);&#xD;&#xA;    void reset(IteratorG it);&#xD;&#xA;    void freeIt(IteratorG it);&#xD;&#xA;    #endif"
-6500249012456597290,24,8,"    <?xml version=""1.0"" encoding=""utf-8""?>&#xD;&#xA;     <selector xmlns:android=""http://schemas.android.com/apk/res/android"" >&#xD;&#xA;     <item android:state_pressed=""true"" >&#xD;&#xA;     <shape android:shape=""rectangle""  >&#xD;&#xA;         <corners android:radius=""3dip"" />&#xD;&#xA;         <stroke android:width=""1dip"" android:color=""#5e7974"" />&#xD;&#xA;         <gradient android:angle=""-90"" android:startColor=""#345953"" android:endColor=""#689a92""  />            &#xD;&#xA;     </shape>&#xD;&#xA;    </item>&#xD;&#xA;    <item android:state_focused=""true"">&#xD;&#xA;     <shape android:shape=""rectangle""  >&#xD;&#xA;         <corners android:radius=""3dip"" />&#xD;&#xA;         <stroke android:width=""1dip"" android:color=""#5e7974"" />&#xD;&#xA;         <solid android:color=""#58857e""/>       &#xD;&#xA;     </shape>&#xD;&#xA;      </item>  &#xD;&#xA;    <item >&#xD;&#xA;    <shape android:shape=""rectangle""  >&#xD;&#xA;         <corners android:radius=""3dip"" />&#xD;&#xA;         <stroke android:width=""1dip"" android:color=""#5e7974"" />&#xD;&#xA;         <gradient android:angle=""-90"" android:startColor=""#8dbab3"" android:endColor=""#58857e"" />            &#xD;&#xA;     </shape>&#xD;&#xA;     </item>&#xD;&#xA;     </selector>"
580254965657790071,24,8,"	<html>&#xD;&#xA;		<head>&#xD;&#xA;			<script type='text/javascript' src='https://www.google.com/jsapi'></script>&#xD;&#xA;			<script type='text/javascript'>&#xD;&#xA;				google.load('visualization', '1', {packages: ['corechart']});&#xD;&#xA;				google.setOnLoadCallback(drawChart);&#xD;&#xA;				function drawChart() {&#xD;&#xA;					var data = google.visualization.arrayToDataTable([&#xD;&#xA;						['Year', 'Sales', 'Expenses'],&#xD;&#xA;						['2004', 1000, 400],&#xD;&#xA;						['2005', 1170, 460],&#xD;&#xA;						['2006', 660, 1120],&#xD;&#xA;						['2007', 1030, 540]&#xD;&#xA;					]);&#xD;&#xA;					var options = {title: 'Company Performance'};&#xD;&#xA;					var chart = new google.visualization.LineChart(document.getElementById('chart_div'));&#xD;&#xA;					chart.draw(data, options);&#xD;&#xA;				}&#xD;&#xA;			</script>&#xD;&#xA;		</head>&#xD;&#xA;		<body>&#xD;&#xA;			<div id='chart_div' style='width: 900px; height: 500px;'></div>&#xD;&#xA;		</body>&#xD;&#xA;	</html>"
4057254715059966512,24,8,"    <assembly xmlns=""http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.0""&#xD;&#xA;      xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""&#xD;&#xA;      xsi:schemaLocation=""http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.0 http://maven.apache.org/xsd/assembly-1.1.0.xsd"">&#xD;&#xA;      <id>test</id>&#xD;&#xA;      <formats>&#xD;&#xA;        <format>war</format>&#xD;&#xA;      </formats>&#xD;&#xA;      <includeBaseDirectory>false</includeBaseDirectory>&#xD;&#xA;      <dependencySets>&#xD;&#xA;        <dependencySet>&#xD;&#xA;          <unpack>true</unpack>&#xD;&#xA;          <useProjectArtifact>true</useProjectArtifact>&#xD;&#xA;        </dependencySet>&#xD;&#xA;      </dependencySets>&#xD;&#xA;      <fileSets>&#xD;&#xA;        <fileSet>&#xD;&#xA;          <outputDirectory>WEB-INF</outputDirectory>&#xD;&#xA;          <directory>${basedir}/src/main/environment/test/</directory>&#xD;&#xA;          <includes>&#xD;&#xA;            <include>**</include>&#xD;&#xA;          </includes>&#xD;&#xA;        </fileSet>&#xD;&#xA;      </fileSets>&#xD;&#xA;    </assembly>"
-5761503065898476361,27,8,"        public String getNetworkClass(Context context) {&#xD;&#xA;            TelephonyManager mTelephonyManager = (TelephonyManager)&#xD;&#xA;                    context.getSystemService(Context.TELEPHONY_SERVICE);&#xD;&#xA;            int networkType = mTelephonyManager.getNetworkType();&#xD;&#xA;            switch (networkType) {&#xD;&#xA;                case TelephonyManager.NETWORK_TYPE_GPRS:&#xD;&#xA;                case TelephonyManager.NETWORK_TYPE_EDGE:&#xD;&#xA;                case TelephonyManager.NETWORK_TYPE_CDMA:&#xD;&#xA;                case TelephonyManager.NETWORK_TYPE_1xRTT:&#xD;&#xA;                case TelephonyManager.NETWORK_TYPE_IDEN:&#xD;&#xA;                    return ""2G"";&#xD;&#xA;                case TelephonyManager.NETWORK_TYPE_UMTS:&#xD;&#xA;                case TelephonyManager.NETWORK_TYPE_EVDO_0:&#xD;&#xA;                case TelephonyManager.NETWORK_TYPE_EVDO_A:&#xD;&#xA;                case TelephonyManager.NETWORK_TYPE_HSDPA:&#xD;&#xA;                case TelephonyManager.NETWORK_TYPE_HSUPA:&#xD;&#xA;                case TelephonyManager.NETWORK_TYPE_HSPA:&#xD;&#xA;                case TelephonyManager.NETWORK_TYPE_EVDO_B:&#xD;&#xA;                case TelephonyManager.NETWORK_TYPE_EHRPD:&#xD;&#xA;                case TelephonyManager.NETWORK_TYPE_HSPAP:&#xD;&#xA;                    return ""3G"";&#xD;&#xA;                case TelephonyManager.NETWORK_TYPE_LTE:&#xD;&#xA;                    return ""4G"";&#xD;&#xA;                default:&#xD;&#xA;                    return ""Unknown"";&#xD;&#xA;            }&#xD;&#xA;        }"
1404436576429233810,27,8,"        <?php $_helper = Mage::helper('catalog/category') ?>&#xD;&#xA;    <?php $_categories = $_helper->getStoreCategories() ?>&#xD;&#xA;    <?php $currentCategory = Mage::registry('current_category') ?>&#xD;&#xA;    <?php if (count($_categories) > 0): ?>&#xD;&#xA;    	<ul>&#xD;&#xA;    		<?php foreach($_categories as $_category): ?>&#xD;&#xA;    			<li>&#xD;&#xA;    				<a href=""<?php echo $_helper->getCategoryUrl($_category) ?>"">&#xD;&#xA;    					<?php echo $_category->getName() ?>&#xD;&#xA;    				</a>&#xD;&#xA;    				<?php $_category = Mage::getModel('catalog/category')->load($_category->getId()) ?>&#xD;&#xA;    				<?php $_subcategories = $_category->getChildrenCategories() ?>&#xD;&#xA;    				<?php if (count($_subcategories) > 0): ?>&#xD;&#xA;    					<ul>&#xD;&#xA;    						<?php foreach($_subcategories as $_subcategory): ?>&#xD;&#xA;    							<li>&#xD;&#xA;    								<a href=""<?php echo $_helper->getCategoryUrl($_subcategory) ?>"">&#xD;&#xA;    									<?php echo $_subcategory->getName() ?>&#xD;&#xA;    								</a>&#xD;&#xA;    							</li>&#xD;&#xA;    						<?php endforeach; ?>&#xD;&#xA;    					</ul>&#xD;&#xA;    				<?php endif; ?>&#xD;&#xA;    			</li>&#xD;&#xA;    		<?php endforeach; ?>&#xD;&#xA;    	</ul>&#xD;&#xA;    <?php endif; ?>"
8099534288015709696,27,8,"    <% provide(:title, ""Edit user"") %> &#xD;&#xA;    <h1>Update your profile</h1>&#xD;&#xA;    &#xD;&#xA;    <div class=""row"">&#xD;&#xA;      <div class=""span6 offset3"">&#xD;&#xA;        <%= form_for(@user) do |f| %>&#xD;&#xA;          <%= render 'shared/error_messages' %>&#xD;&#xA;    &#xD;&#xA;          <%= f.label :name %>&#xD;&#xA;          <%= f.text_field :name %>&#xD;&#xA;    &#xD;&#xA;          <%= f.label :email %>&#xD;&#xA;          <%= f.text_field :email %>&#xD;&#xA;    &#xD;&#xA;          <%= f.label :password %>&#xD;&#xA;          <%= f.password_field :password %>&#xD;&#xA;    &#xD;&#xA;          <%= f.label :password_confirmation, ""Confirm Password"" %>&#xD;&#xA;          <%= f.password_field :password_confirmation %>&#xD;&#xA;    &#xD;&#xA;          <%= f.submit ""Save changes"", class: ""btn btn-large btn-primary"" %>&#xD;&#xA;        <% end %>&#xD;&#xA;    &#xD;&#xA;        <%= gravatar_for @user %>&#xD;&#xA;        <a href=""http://gravatar.com/emails"">change</a>&#xD;&#xA;      </div>&#xD;&#xA;    </div>"
7290973074541156134,28,8,"	<form class=""form-horizontal"">&#xD;&#xA;	  <div class=""form-group"">&#xD;&#xA;		<label for=""inputEmail3"" class=""col-sm-2 control-label"">Email</label>&#xD;&#xA;		<div class=""col-sm-10"">&#xD;&#xA;		  <input type=""email"" class=""form-control"" id=""inputEmail3"" placeholder=""Email"">&#xD;&#xA;		</div>&#xD;&#xA;	  </div>&#xD;&#xA;	  <div class=""form-group"">&#xD;&#xA;		<label for=""inputPassword3"" class=""col-sm-2 control-label"">Password</label>&#xD;&#xA;		<div class=""col-sm-10"">&#xD;&#xA;		  <input type=""password"" class=""form-control"" id=""inputPassword3"" placeholder=""Password"">&#xD;&#xA;		</div>&#xD;&#xA;	  </div>&#xD;&#xA;	  <div class=""form-group"">&#xD;&#xA;		<div class=""col-sm-offset-2 col-sm-10"">&#xD;&#xA;		  <div class=""checkbox"">&#xD;&#xA;			<label>&#xD;&#xA;			  <input type=""checkbox""> Remember me&#xD;&#xA;			</label>&#xD;&#xA;		  </div>&#xD;&#xA;		</div>&#xD;&#xA;	  </div>&#xD;&#xA;	  <div class=""form-group"">&#xD;&#xA;		<div class=""col-sm-offset-2 col-sm-10"">&#xD;&#xA;		  <button type=""submit"" class=""btn btn-default"">Sign in</button>&#xD;&#xA;		</div>&#xD;&#xA;	  </div>&#xD;&#xA;	</form>"
8528126096049028643,28,8,"	<configuration>&#xD;&#xA;		<system.web>&#xD;&#xA;			<authentication mode=""Forms"" >&#xD;&#xA;				<forms loginUrl=""login.aspx"" name="".ASPNETAUTH"" protection=""None"" path=""/"" timeout=""20"" >&#xD;&#xA;				</forms>&#xD;&#xA;			</authentication>&#xD;&#xA;	<!-- This section denies access to all files in this application except for those that you have not explicitly specified by using another setting. -->&#xD;&#xA;			<authorization>&#xD;&#xA;				<deny users=""?"" /> &#xD;&#xA;			</authorization>&#xD;&#xA;		</system.web>&#xD;&#xA;	<!-- This section gives the unauthenticated user access to the Default1.aspx page only. It is located in the same folder as this configuration file. -->&#xD;&#xA;			<location path=""default1.aspx"">&#xD;&#xA;			<system.web>&#xD;&#xA;			<authorization>&#xD;&#xA;				<allow users =""*"" />&#xD;&#xA;			</authorization>&#xD;&#xA;			</system.web>&#xD;&#xA;			</location>&#xD;&#xA;	<!-- This section gives the unauthenticated user access to all of the files that are stored in the Subdir1 folder.  -->&#xD;&#xA;			<location path=""subdir1"">&#xD;&#xA;			<system.web>&#xD;&#xA;			<authorization>&#xD;&#xA;				<allow users =""*"" />&#xD;&#xA;			</authorization>&#xD;&#xA;			</system.web>&#xD;&#xA;			</location>&#xD;&#xA;	</configuration>"
-5858070634449031179,28,8,"     <?php&#xD;&#xA;        	// Set the content-type&#xD;&#xA;        	header('Content-Type: image/png');&#xD;&#xA;        &#xD;&#xA;        	// Create the image&#xD;&#xA;        	$im = imagecreatetruecolor(400, 30);&#xD;&#xA;        &#xD;&#xA;        	// Create some colors&#xD;&#xA;        	$white = imagecolorallocate($im, 255, 255, 255);&#xD;&#xA;        	$grey = imagecolorallocate($im, 128, 128, 128);&#xD;&#xA;        	$black = imagecolorallocate($im, 0, 0, 0);&#xD;&#xA;        	imagefilledrectangle($im, 0, 0, 399, 29, $white);&#xD;&#xA;        &#xD;&#xA;        	// The text to draw&#xD;&#xA;        	$text = 'Testing...';&#xD;&#xA;        	// Replace path by your own font path&#xD;&#xA;        	$font = 'arial.ttf';&#xD;&#xA;        &#xD;&#xA;        	// Add some shadow to the text&#xD;&#xA;        	imagettftext($im, 20, 0, 11, 21, $grey, $font, $text);&#xD;&#xA;        &#xD;&#xA;        	// Add the text&#xD;&#xA;        	imagettftext($im, 20, 0, 10, 20, $black, $font, $text);&#xD;&#xA;        &#xD;&#xA;        	// Using imagepng() results in clearer text compared with imagejpeg()&#xD;&#xA;        	imagepng($im);&#xD;&#xA;        	imagedestroy($im);&#xD;&#xA;    ?>"
790047003239401413,29,8,"          <asp:ScriptManager runat=""server"">&#xD;&#xA;            <Scripts>&#xD;&#xA;                <%--To learn more about bundling scripts in ScriptManager see &#xD;&#xA;           http://go.microsoft.com/fwlink/?LinkID=301884 --%>&#xD;&#xA;                <%--Framework Scripts--%>&#xD;&#xA;                <asp:ScriptReference Name=""MsAjaxBundle"" />&#xD;&#xA;                <asp:ScriptReference Name=""jquery"" />&#xD;&#xA;                <asp:ScriptReference Name=""bootstrap"" />&#xD;&#xA;                <asp:ScriptReference Name=""respond"" />&#xD;&#xA;                <asp:ScriptReference Name=""WebForms.js"" Assembly=""System.Web"" &#xD;&#xA;         Path=""~/Scripts/WebForms/WebForms.js"" />&#xD;&#xA;                <asp:ScriptReference Name=""WebUIValidation.js"" &#xD;&#xA;         Assembly=""System.Web"" Path=""~/Scripts/WebForms/WebUIValidation.js"" />&#xD;&#xA;                <asp:ScriptReference Name=""MenuStandards.js"" &#xD;&#xA;         Assembly=""System.Web"" Path=""~/Scripts/WebForms/MenuStandards.js"" />&#xD;&#xA;                <asp:ScriptReference Name=""GridView.js"" Assembly=""System.Web"" &#xD;&#xA;         Path=""~/Scripts/WebForms/GridView.js"" />&#xD;&#xA;                <asp:ScriptReference Name=""DetailsView.js"" Assembly=""System.Web"" &#xD;&#xA;         Path=""~/Scripts/WebForms/DetailsView.js"" />&#xD;&#xA;                <asp:ScriptReference Name=""TreeView.js"" Assembly=""System.Web"" &#xD;&#xA;         Path=""~/Scripts/WebForms/TreeView.js"" />&#xD;&#xA;                <asp:ScriptReference Name=""WebParts.js"" Assembly=""System.Web"" &#xD;&#xA;         Path=""~/Scripts/WebForms/WebParts.js"" />&#xD;&#xA;                <asp:ScriptReference Name=""Focus.js"" Assembly=""System.Web"" &#xD;&#xA;         Path=""~/Scripts/WebForms/Focus.js"" />&#xD;&#xA;                <asp:ScriptReference Name=""WebFormsBundle""/>&#xD;&#xA;                <%--Site Scripts--%>&#xD;&#xA;            </Scripts>&#xD;&#xA;        </asp:ScriptManager>"
-3572277688513893115,29,8,"    <!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Strict//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-   strict.dtd"">&#xD;&#xA;    <html xmlns=""http://www.w3.org/1999/xhtml"">&#xD;&#xA;        <head>&#xD;&#xA;            <meta http-equiv=""Content-Type"" content=""text/html; charset=iso-8859-1""/>&#xD;&#xA;            <title>401 - Unauthorized: Access is denied due to invalid credentials.</title>&#xD;&#xA;            <style type=""text/css"">&#xD;&#xA;            <!--&#xD;&#xA;                body{margin:0;font-size:.7em;font-family:Verdana, Arial, Helvetica, sans-   serif;background:#EEEEEE;}&#xD;&#xA;                fieldset{padding:0 15px 10px 15px;} &#xD;&#xA;                h1{font-size:2.4em;margin:0;color:#FFF;}&#xD;&#xA;                h2{font-size:1.7em;margin:0;color:#CC0000;} &#xD;&#xA;                h3{font-size:1.2em;margin:10px 0 0 0;color:#000000;} &#xD;&#xA;                #header{width:96%;margin:0 0 0 0;padding:6px 2% 6px 2%;font-family:""trebuchet MS"", Verdana, sans- serif;color:#FFF;&#xD;&#xA;                background-color:#555555;}&#xD;&#xA;                #content{margin:0 0 0 2%;position:relative;}&#xD;&#xA;                .content-container{background:#FFF;width:96%;margin-top:8px;padding:10px;position:relative;}&#xD;&#xA;            -->&#xD;&#xA;            </style>&#xD;&#xA;        </head>&#xD;&#xA;        <body>&#xD;&#xA;            <div id=""header""><h1>Server Error</h1></div>&#xD;&#xA;            <div id=""content"">&#xD;&#xA;                <div class=""content-container""><fieldset>&#xD;&#xA;                    <h2>401 - Unauthorized: Access is denied due to invalid credentials.</h2>&#xD;&#xA;                    <h3>You do not have permission to view this directory or page using the credentials that you    supplied.</h3>&#xD;&#xA;                </fieldset></div>&#xD;&#xA;            </div>&#xD;&#xA;        </body>&#xD;&#xA;    </html>"
6011817815904882917,30,8,"	public static Bitmap decodeSampledBitmapFromResource(Resources res, int resId,&#xD;&#xA;			int reqWidth, int reqHeight) {&#xD;&#xA;		// First decode with inJustDecodeBounds=true to check dimensions&#xD;&#xA;		final BitmapFactory.Options options = new BitmapFactory.Options();&#xD;&#xA;		options.inJustDecodeBounds = true;&#xD;&#xA;		BitmapFactory.decodeResource(res, resId, options);&#xD;&#xA;		// Calculate inSampleSize&#xD;&#xA;		options.inSampleSize = calculateInSampleSize(options, reqWidth, reqHeight);&#xD;&#xA;		// Decode bitmap with inSampleSize set&#xD;&#xA;		options.inJustDecodeBounds = false;&#xD;&#xA;		return BitmapFactory.decodeResource(res, resId, options);&#xD;&#xA;	}&#xD;&#xA;	public static int calculateInSampleSize(&#xD;&#xA;			BitmapFactory.Options options, int reqWidth, int reqHeight) {&#xD;&#xA;		// Raw height and width of image&#xD;&#xA;		final int height = options.outHeight;&#xD;&#xA;		final int width = options.outWidth;&#xD;&#xA;		int inSampleSize = 1;&#xD;&#xA;		if (height > reqHeight || width > reqWidth) {&#xD;&#xA;			final int halfHeight = height / 2;&#xD;&#xA;			final int halfWidth = width / 2;&#xD;&#xA;			// Calculate the largest inSampleSize value that is a power of 2 and keeps both&#xD;&#xA;			// height and width larger than the requested height and width.&#xD;&#xA;			while ((halfHeight / inSampleSize) > reqHeight&#xD;&#xA;					&& (halfWidth / inSampleSize) > reqWidth) {&#xD;&#xA;				inSampleSize *= 2;&#xD;&#xA;			}&#xD;&#xA;		}&#xD;&#xA;		return inSampleSize;&#xD;&#xA;	}"
3798182619210162000,30,8,"    <bookstore>&#xD;&#xA;    	<book category=""cooking"">&#xD;&#xA;    		<title lang=""en"">Everyday Italian</title>&#xD;&#xA;    		<author>Giada De Laurentiis</author>&#xD;&#xA;    		<year>2005</year>&#xD;&#xA;    		<price>30.00</price>&#xD;&#xA;    	</book>&#xD;&#xA;    	<book category=""children"">&#xD;&#xA;    		<title lang=""en"">Harry Potter</title>&#xD;&#xA;    		<author>J K. Rowling</author>&#xD;&#xA;    		<year>2005</year>&#xD;&#xA;    		<price>29.99</price>&#xD;&#xA;    	</book>&#xD;&#xA;    	<book category=""web"">&#xD;&#xA;    		<title lang=""en"">XQuery Kick Start</title>&#xD;&#xA;    		<author>James McGovern</author>&#xD;&#xA;    		<author>Per Bothner</author>&#xD;&#xA;    		<author>Kurt Cagle</author>&#xD;&#xA;    		<author>James Linn</author>&#xD;&#xA;    		<author>Vaidyanathan Nagarajan</author>&#xD;&#xA;    		<year>2003</year>&#xD;&#xA;    		<price>49.99</price>&#xD;&#xA;    	</book>&#xD;&#xA;    	<book category=""web"" cover=""paperback"">&#xD;&#xA;    		<title lang=""en"">Learning XML</title>&#xD;&#xA;    		<author>Erik T. Ray</author>&#xD;&#xA;    		<year>2003</year>&#xD;&#xA;    		<price>39.95</price>&#xD;&#xA;    	</book>&#xD;&#xA;    </bookstore>"
-5763793125731606629,31,8,"    create procedure [usp_my_procedure_name]&#xD;&#xA;    as&#xD;&#xA;    begin&#xD;&#xA;    	set nocount on;&#xD;&#xA;    	declare @trancount int;&#xD;&#xA;    	set @trancount = @@trancount;&#xD;&#xA;    	begin try&#xD;&#xA;    		if @trancount = 0&#xD;&#xA;    			begin transaction&#xD;&#xA;    		else&#xD;&#xA;    			save transaction usp_my_procedure_name;&#xD;&#xA;    &#xD;&#xA;    		-- Do the actual work here&#xD;&#xA;    	&#xD;&#xA;    lbexit:&#xD;&#xA;    		if @trancount = 0	&#xD;&#xA;    			commit;&#xD;&#xA;    	end try&#xD;&#xA;    	begin catch&#xD;&#xA;    		declare @error int, @message varchar(4000), @xstate int;&#xD;&#xA;    		select @error = ERROR_NUMBER(), @message = ERROR_MESSAGE(), @xstate = XACT_STATE();&#xD;&#xA;    		if @xstate = -1&#xD;&#xA;    			rollback;&#xD;&#xA;    		if @xstate = 1 and @trancount = 0&#xD;&#xA;    			rollback&#xD;&#xA;    		if @xstate = 1 and @trancount > 0&#xD;&#xA;    			rollback transaction usp_my_procedure_name;&#xD;&#xA;    &#xD;&#xA;    		raiserror ('usp_my_procedure_name: %d: %s', 16, 1, @error, @message) ;&#xD;&#xA;    	end catch	&#xD;&#xA;    end"
6956713358124936175,31,8,"	<IfModule mod_rewrite.c>&#xD;&#xA;	    RewriteEngine On&#xD;&#xA;	    RewriteBase /&#xD;&#xA;	&#xD;&#xA;	    #Removes access to the system folder by users.&#xD;&#xA;	    #Additionally this will allow you to create a System.php controller,&#xD;&#xA;	    #previously this would not have been possible.&#xD;&#xA;	    #'system' can be replaced if you have renamed your system folder.&#xD;&#xA;	    RewriteCond %{REQUEST_URI} ^system.*&#xD;&#xA;	    RewriteRule ^(.*)$ /index.php?/$1 [L]&#xD;&#xA;	&#xD;&#xA;	    #When your application folder isn't in the system folder&#xD;&#xA;	    #This snippet prevents user access to the application folder&#xD;&#xA;	    #Rename 'application' to your applications folder name.&#xD;&#xA;	    RewriteCond %{REQUEST_URI} ^application.*&#xD;&#xA;	    RewriteRule ^(.*)$ /index.php?/$1 [L]&#xD;&#xA;	&#xD;&#xA;	    #Checks to see if the user is attempting to access a valid file,&#xD;&#xA;	    #such as an image or css document, if this isn't true it sends the&#xD;&#xA;	    #request to index.php&#xD;&#xA;	    RewriteCond %{REQUEST_FILENAME} !-f&#xD;&#xA;	    RewriteCond %{REQUEST_FILENAME} !-d&#xD;&#xA;	    RewriteRule ^(.*)$ index.php?/$1 [L]&#xD;&#xA;	</IfModule>&#xD;&#xA;	&#xD;&#xA;	<IfModule !mod_rewrite.c>&#xD;&#xA;	    # If we don't have mod_rewrite installed, all 404's&#xD;&#xA;	    # can be sent to index.php, and everything works as normal.&#xD;&#xA;	&#xD;&#xA;	    ErrorDocument 404 /index.php&#xD;&#xA;	</IfModule> "
-471723751904566360,31,8,"    Sub ADOFromExcelToAccess()&#xD;&#xA;    ' exports data from the active worksheet to a table in an Access database&#xD;&#xA;    ' this procedure must be edited before use&#xD;&#xA;    Dim cn As ADODB.Connection, rs As ADODB.Recordset, r As Long&#xD;&#xA;        ' connect to the Access database&#xD;&#xA;        Set cn = New ADODB.Connection&#xD;&#xA;        cn.Open ""Provider=Microsoft.Jet.OLEDB.4.0; "" & _&#xD;&#xA;            ""Data Source=C:\FolderName\DataBaseName.mdb;""&#xD;&#xA;        ' open a recordset&#xD;&#xA;        Set rs = New ADODB.Recordset&#xD;&#xA;        rs.Open ""TableName"", cn, adOpenKeyset, adLockOptimistic, adCmdTable  &#xD;&#xA;        ' all records in a table&#xD;&#xA;        r = 3 ' the start row in the worksheet&#xD;&#xA;        Do While Len(Range(""A"" & r).Formula) > 0 &#xD;&#xA;        ' repeat until first empty cell in column A&#xD;&#xA;            With rs&#xD;&#xA;                .AddNew ' create a new record&#xD;&#xA;                ' add values to each field in the record&#xD;&#xA;                .Fields(""FieldName1"") = Range(""A"" & r).Value&#xD;&#xA;                .Fields(""FieldName2"") = Range(""B"" & r).Value&#xD;&#xA;                .Fields(""FieldNameN"") = Range(""C"" & r).Value&#xD;&#xA;                ' add more fields if necessary...&#xD;&#xA;                .Update ' stores the new record&#xD;&#xA;            End With&#xD;&#xA;            r = r + 1 ' next row&#xD;&#xA;        Loop&#xD;&#xA;        rs.Close&#xD;&#xA;        Set rs = Nothing&#xD;&#xA;        cn.Close&#xD;&#xA;        Set cn = Nothing&#xD;&#xA;    End Sub"
-4245168638247710155,32,8,"    using System;&#xD;&#xA;    using System.Collections.Generic;&#xD;&#xA;    using System.ComponentModel;&#xD;&#xA;    using System.Data;&#xD;&#xA;    using System.Drawing;&#xD;&#xA;    using System.Linq;&#xD;&#xA;    using System.Text;&#xD;&#xA;    using System.Windows.Forms;&#xD;&#xA;    namespace WindowsFormsApplication1&#xD;&#xA;    {&#xD;&#xA;        public partial class Form2 : Form&#xD;&#xA;        {&#xD;&#xA;            Form1 form1;&#xD;&#xA;            public Form2(Form1 nform1)&#xD;&#xA;            {&#xD;&#xA;                InitializeComponent();&#xD;&#xA;                this.FormClosing +=  new FormClosingEventHandler(Form2_FormClosing);&#xD;&#xA;                form1 = nform1;&#xD;&#xA;                form1.Hide();&#xD;&#xA;            }&#xD;&#xA;            private void Form2_FormClosing(object sender, FormClosingEventArgs e)&#xD;&#xA;            {&#xD;&#xA;                //stops form from closing&#xD;&#xA;                e.Cancel = true;&#xD;&#xA;                this.Hide();&#xD;&#xA;            }&#xD;&#xA;            public string GetData()&#xD;&#xA;            {&#xD;&#xA;                return ""The quick brown fox jumped over the lazy dog"";&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }"
5290391990452997947,34,8,"    Public Function AgeSimple( _&#xD;&#xA;      ByVal datDateOfBirth As Date) _&#xD;&#xA;      As Integer&#xD;&#xA;    &#xD;&#xA;    ' Returns the difference in full years from datDateOfBirth to current date.&#xD;&#xA;    '&#xD;&#xA;    ' Calculates correctly for:&#xD;&#xA;    '   leap years&#xD;&#xA;    '   dates of 29. February&#xD;&#xA;    '   date/time values with embedded time values&#xD;&#xA;    '&#xD;&#xA;    ' DateAdd() is used for check for month end of February as it correctly&#xD;&#xA;    ' returns Feb. 28. when adding a count of years to dates of Feb. 29.&#xD;&#xA;    ' when the resulting year is a common year.&#xD;&#xA;    ' After an idea of Markus G. Fischer.&#xD;&#xA;    '&#xD;&#xA;    ' 2007-06-26. Cactus Data ApS, CPH.&#xD;&#xA;    &#xD;&#xA;      Dim datToday  As Date&#xD;&#xA;      Dim intAge    As Integer&#xD;&#xA;      Dim intYears  As Integer&#xD;&#xA;        &#xD;&#xA;      datToday = Date&#xD;&#xA;      ' Find difference in calendar years.&#xD;&#xA;      intYears = DateDiff(""yyyy"", datDateOfBirth, datToday)&#xD;&#xA;      If intYears > 0 Then&#xD;&#xA;        ' Decrease by 1 if current date is earlier than birthday of current year&#xD;&#xA;        ' using DateDiff to ignore a time portion of datDateOfBirth.&#xD;&#xA;        intAge = intYears - Abs(DateDiff(""d"", datToday, DateAdd(""yyyy"", intYears, datDateOfBirth)) > 0)&#xD;&#xA;      End If&#xD;&#xA;      &#xD;&#xA;      AgeSimple = intAge&#xD;&#xA;      &#xD;&#xA;    End Function"
-2160898252056638478,35,8,"        <?php&#xD;&#xA;    $to = ""somebody@example.com, somebodyelse@example.com"";&#xD;&#xA;    $subject = ""HTML email"";&#xD;&#xA;    &#xD;&#xA;    $message = ""&#xD;&#xA;    <html>&#xD;&#xA;    <head>&#xD;&#xA;    <title>HTML email</title>&#xD;&#xA;    </head>&#xD;&#xA;    <body>&#xD;&#xA;    <p>This email contains HTML Tags!</p>&#xD;&#xA;    <table>&#xD;&#xA;    <tr>&#xD;&#xA;    <th>Firstname</th>&#xD;&#xA;    <th>Lastname</th>&#xD;&#xA;    </tr>&#xD;&#xA;    <tr>&#xD;&#xA;    <td>John</td>&#xD;&#xA;    <td>Doe</td>&#xD;&#xA;    </tr>&#xD;&#xA;    </table>&#xD;&#xA;    </body>&#xD;&#xA;    </html>&#xD;&#xA;    "";&#xD;&#xA;    &#xD;&#xA;    // Always set content-type when sending HTML email&#xD;&#xA;    $headers = ""MIME-Version: 1.0"" . ""\r\n"";&#xD;&#xA;    $headers .= ""Content-type:text/html;charset=UTF-8"" . ""\r\n"";&#xD;&#xA;    &#xD;&#xA;    // More headers&#xD;&#xA;    $headers .= 'From: <webmaster@example.com>' . ""\r\n"";&#xD;&#xA;    $headers .= 'Cc: myboss@example.com' . ""\r\n"";&#xD;&#xA;    &#xD;&#xA;    mail($to,$subject,$message,$headers);&#xD;&#xA;    ?>"
7140669375228845080,35,8,"    	$(document).ready(function() {&#xD;&#xA;        // Configure/customize these variables.&#xD;&#xA;        var showChar = 100;  // How many characters are shown by default&#xD;&#xA;        var ellipsestext = ""..."";&#xD;&#xA;        var moretext = ""Show more >"";&#xD;&#xA;        var lesstext = ""Show less"";&#xD;&#xA;        &#xD;&#xA;        $('.more').each(function() {&#xD;&#xA;            var content = $(this).html();&#xD;&#xA;     &#xD;&#xA;            if(content.length > showChar) {&#xD;&#xA;     &#xD;&#xA;                var c = content.substr(0, showChar);&#xD;&#xA;                var h = content.substr(showChar, content.length - showChar);&#xD;&#xA;     &#xD;&#xA;                var html = c + '<span class=""moreellipses"">' + ellipsestext+ '&nbsp;</span><span class=""morecontent""><span>' + h + '</span>&nbsp;&nbsp;<a href="""" class=""morelink"">' + moretext + '</a></span>';&#xD;&#xA;     &#xD;&#xA;                $(this).html(html);&#xD;&#xA;            }&#xD;&#xA;     &#xD;&#xA;        });&#xD;&#xA;     &#xD;&#xA;        $("".morelink"").click(function(){&#xD;&#xA;            if($(this).hasClass(""less"")) {&#xD;&#xA;                $(this).removeClass(""less"");&#xD;&#xA;                $(this).html(moretext);&#xD;&#xA;            } else {&#xD;&#xA;                $(this).addClass(""less"");&#xD;&#xA;                $(this).html(lesstext);&#xD;&#xA;            }&#xD;&#xA;            $(this).parent().prev().toggle();&#xD;&#xA;            $(this).prev().toggle();&#xD;&#xA;            return false;&#xD;&#xA;        });&#xD;&#xA;    });"
-4821586516982269618,35,8,"    <?php&#xD;&#xA;    &#xD;&#xA;    use Illuminate\Database\Schema\Blueprint;&#xD;&#xA;    use Illuminate\Database\Migrations\Migration;&#xD;&#xA;    &#xD;&#xA;        class CreateUsersTable extends Migration {&#xD;&#xA;        &#xD;&#xA;        	/**&#xD;&#xA;        	 * Run the migrations.&#xD;&#xA;        	 *&#xD;&#xA;        	 * @return void&#xD;&#xA;        	 */&#xD;&#xA;        	public function up()&#xD;&#xA;        	{&#xD;&#xA;        		Schema::create('users', function(Blueprint $table)&#xD;&#xA;        		{&#xD;&#xA;        			$table->increments('id');&#xD;&#xA;        			$table->string('name');&#xD;&#xA;        			$table->string('email')->unique();&#xD;&#xA;        			$table->string('password', 60);&#xD;&#xA;        			$table->rememberToken();&#xD;&#xA;        			$table->timestamps();&#xD;&#xA;        		});&#xD;&#xA;        	}&#xD;&#xA;    &#xD;&#xA;    	/**&#xD;&#xA;    	 * Reverse the migrations.&#xD;&#xA;    	 *&#xD;&#xA;    	 * @return void&#xD;&#xA;    	 */&#xD;&#xA;    	public function down()&#xD;&#xA;    	{&#xD;&#xA;    		Schema::drop('users');&#xD;&#xA;    	}&#xD;&#xA;    }"
5135640990147307673,36,8,"    // Select all links with hashes&#xD;&#xA;    $('a[href*=""#""]')&#xD;&#xA;      // Remove links that don't actually link to anything&#xD;&#xA;      .not('[href=""#""]')&#xD;&#xA;      .not('[href=""#0""]')&#xD;&#xA;      .click(function(event) {&#xD;&#xA;        // On-page links&#xD;&#xA;        if (&#xD;&#xA;          location.pathname.replace(/^\//, '') == this.pathname.replace(/^\//, '') &#xD;&#xA;          && &#xD;&#xA;          location.hostname == this.hostname&#xD;&#xA;        ) {&#xD;&#xA;          // Figure out element to scroll to&#xD;&#xA;          var target = $(this.hash);&#xD;&#xA;          target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');&#xD;&#xA;          // Does a scroll target exist?&#xD;&#xA;          if (target.length) {&#xD;&#xA;            // Only prevent default if animation is actually gonna happen&#xD;&#xA;            event.preventDefault();&#xD;&#xA;            $('html, body').animate({&#xD;&#xA;              scrollTop: target.offset().top&#xD;&#xA;            }, 1000, function() {&#xD;&#xA;              // Callback after animation&#xD;&#xA;              // Must change focus!&#xD;&#xA;              var $target = $(target);&#xD;&#xA;              $target.focus();&#xD;&#xA;              if ($target.is("":focus"")) { // Checking if the target was focused&#xD;&#xA;                return false;&#xD;&#xA;              } else {&#xD;&#xA;                $target.attr('tabindex','-1'); // Adding tabindex for elements not focusable&#xD;&#xA;                $target.focus(); // Set focus again&#xD;&#xA;              };&#xD;&#xA;            });&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;      });"
-6989384187470228972,37,8,"	<?php &#xD;&#xA;	class MCrypt&#xD;&#xA;	{&#xD;&#xA;		private $iv = 'fedcba9876543210'; #Same as in JAVA&#xD;&#xA;		private $key = '0123456789abcdef'; #Same as in JAVA&#xD;&#xA;		function __construct()&#xD;&#xA;		{&#xD;&#xA;		}&#xD;&#xA;		function encrypt($str) {&#xD;&#xA;		  //$key = $this->hex2bin($key);    &#xD;&#xA;		  $iv = $this->iv;&#xD;&#xA;		  $td = mcrypt_module_open('rijndael-128', '', 'cbc', $iv);&#xD;&#xA;		  mcrypt_generic_init($td, $this->key, $iv);&#xD;&#xA;		  $encrypted = mcrypt_generic($td, $str);&#xD;&#xA;		  mcrypt_generic_deinit($td);&#xD;&#xA;		  mcrypt_module_close($td);&#xD;&#xA;		  return bin2hex($encrypted);&#xD;&#xA;		}&#xD;&#xA;		function decrypt($code) {&#xD;&#xA;		  //$key = $this->hex2bin($key);&#xD;&#xA;		  $code = $this->hex2bin($code);&#xD;&#xA;		  $iv = $this->iv;&#xD;&#xA;		  $td = mcrypt_module_open('rijndael-128', '', 'cbc', $iv);&#xD;&#xA;		  mcrypt_generic_init($td, $this->key, $iv);&#xD;&#xA;		  $decrypted = mdecrypt_generic($td, $code);&#xD;&#xA;		  mcrypt_generic_deinit($td);&#xD;&#xA;		  mcrypt_module_close($td);&#xD;&#xA;		  return utf8_encode(trim($decrypted));&#xD;&#xA;		}&#xD;&#xA;		protected function hex2bin($hexdata) {&#xD;&#xA;		  $bindata = '';&#xD;&#xA;		  for ($i = 0; $i < strlen($hexdata); $i += 2) {&#xD;&#xA;			$bindata .= chr(hexdec(substr($hexdata, $i, 2)));&#xD;&#xA;		  }&#xD;&#xA;		  return $bindata;&#xD;&#xA;		}&#xD;&#xA;	}"
-3533777151832372002,38,8,"        <?xml version=""1.0"" encoding=""utf-8""?>&#xD;&#xA;    <RelativeLayout xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;        android:layout_width=""match_parent""&#xD;&#xA;        android:layout_height=""48dp""&#xD;&#xA;        android:background=""@drawable/list_selector"">&#xD;&#xA;    &#xD;&#xA;        <ImageView&#xD;&#xA;            android:id=""@+id/icon""&#xD;&#xA;            android:layout_width=""25dp""&#xD;&#xA;            android:layout_height=""wrap_content""&#xD;&#xA;            android:layout_alignParentLeft=""true""&#xD;&#xA;            android:layout_marginLeft=""12dp""&#xD;&#xA;            android:layout_marginRight=""12dp""&#xD;&#xA;            android:contentDescription=""@string/desc_list_item_icon""&#xD;&#xA;            android:src=""@drawable/ic_home""&#xD;&#xA;            android:layout_centerVertical=""true"" />&#xD;&#xA;    &#xD;&#xA;        <TextView&#xD;&#xA;            android:id=""@+id/title""&#xD;&#xA;            android:layout_width=""wrap_content""&#xD;&#xA;            android:layout_height=""match_parent""&#xD;&#xA;            android:layout_toRightOf=""@id/icon""&#xD;&#xA;            android:minHeight=""?android:attr/listPreferredItemHeightSmall""&#xD;&#xA;            android:textAppearance=""?android:attr/textAppearanceListItemSmall""&#xD;&#xA;            android:textColor=""@color/list_item_title""&#xD;&#xA;            android:gravity=""center_vertical""&#xD;&#xA;            android:paddingRight=""40dp""/>&#xD;&#xA;    &#xD;&#xA;        <TextView android:id=""@+id/counter""&#xD;&#xA;            android:layout_width=""wrap_content""&#xD;&#xA;            android:layout_height=""wrap_content""&#xD;&#xA;            android:background=""@drawable/counter_bg""&#xD;&#xA;            android:layout_alignParentRight=""true""&#xD;&#xA;            android:layout_centerVertical=""true""&#xD;&#xA;            android:layout_marginRight=""8dp""&#xD;&#xA;            android:textColor=""@color/counter_text_color""/>&#xD;&#xA;    &#xD;&#xA;    </RelativeLayout>"
7033485488345308104,40,8,"        public class FloodFill {&#xD;&#xA;	    public void floodFill(Bitmap  image, Point node, int targetColor,&#xD;&#xA;			int replacementColor) {&#xD;&#xA;		int width = image.getWidth();&#xD;&#xA;		int height = image.getHeight();&#xD;&#xA;		int target = targetColor;&#xD;&#xA;		int replacement = replacementColor;&#xD;&#xA;		if (target != replacement) {&#xD;&#xA;			Queue<Point> queue = new LinkedList<Point>();&#xD;&#xA;			do {&#xD;&#xA;				int x = node.x;&#xD;&#xA;				int y = node.y;&#xD;&#xA;				while (x > 0 && image.getPixel(x - 1, y) == target) {&#xD;&#xA;					x--;&#xD;&#xA;				}&#xD;&#xA;				boolean spanUp = false;&#xD;&#xA;				boolean spanDown = false;&#xD;&#xA;				while (x < width && image.getPixel(x, y) == target) {&#xD;&#xA;					image.setPixel(x, y, replacement);&#xD;&#xA;					if (!spanUp && y > 0 && image.getPixel(x, y - 1) == target) {&#xD;&#xA;						queue.add(new Point(x, y - 1));&#xD;&#xA;						spanUp = true;&#xD;&#xA;					} else if (spanUp && y > 0&#xD;&#xA;							&& image.getPixel(x, y - 1) != target) {&#xD;&#xA;						spanUp = false;&#xD;&#xA;					}&#xD;&#xA;					if (!spanDown && y < height - 1&#xD;&#xA;							&& image.getPixel(x, y + 1) == target) {&#xD;&#xA;						queue.add(new Point(x, y + 1));&#xD;&#xA;						spanDown = true;&#xD;&#xA;					} else if (spanDown && y < height - 1&#xD;&#xA;							&& image.getPixel(x, y + 1) != target) {&#xD;&#xA;						spanDown = false;&#xD;&#xA;					}&#xD;&#xA;					x++;&#xD;&#xA;				}&#xD;&#xA;			} while ((node = queue.poll()) != null);&#xD;&#xA;		}&#xD;&#xA;	      }&#xD;&#xA;             }"
7934293943617714784,41,8,"       public class JSONfunctions {&#xD;&#xA;	public static JSONObject getJSONfromURL(String url){&#xD;&#xA;		InputStream is = null;&#xD;&#xA;		String result = """";&#xD;&#xA;		JSONObject jArray = null;&#xD;&#xA;		&#xD;&#xA;		//http post&#xD;&#xA;	    try{&#xD;&#xA;	            HttpClient httpclient = new DefaultHttpClient();&#xD;&#xA;	            HttpPost httppost = new HttpPost(url);&#xD;&#xA;	            HttpResponse response = httpclient.execute(httppost);&#xD;&#xA;	            HttpEntity entity = response.getEntity();&#xD;&#xA;	            is = entity.getContent();&#xD;&#xA;	    }catch(Exception e){&#xD;&#xA;	            Log.e(""log_tag"", ""Error in http connection ""+e.toString());&#xD;&#xA;	    }&#xD;&#xA;	    &#xD;&#xA;	  //convert response to string&#xD;&#xA;	    try{&#xD;&#xA;	            BufferedReader reader = new BufferedReader(new InputStreamReader(is,""iso-8859-1""),8);&#xD;&#xA;	            StringBuilder sb = new StringBuilder();&#xD;&#xA;	            String line = null;&#xD;&#xA;	            while ((line = reader.readLine()) != null) {&#xD;&#xA;	                    sb.append(line + ""\n"");&#xD;&#xA;	            }&#xD;&#xA;	            is.close();&#xD;&#xA;	            result=sb.toString();&#xD;&#xA;	    }catch(Exception e){&#xD;&#xA;	            Log.e(""log_tag"", ""Error converting result ""+e.toString());&#xD;&#xA;	    }&#xD;&#xA;	    &#xD;&#xA;	    try{&#xD;&#xA;	    	&#xD;&#xA;            jArray = new JSONObject(result);            &#xD;&#xA;	    }catch(JSONException e){&#xD;&#xA;	            Log.e(""log_tag"", ""Error parsing data ""+e.toString());&#xD;&#xA;	    }&#xD;&#xA;    &#xD;&#xA;	    return jArray;&#xD;&#xA;	}&#xD;&#xA;}"
-870907804595177072,41,8,"        Rails.application.configure do&#xD;&#xA;      # Settings specified here will take precedence over those in config/application.rb.&#xD;&#xA;    &#xD;&#xA;      # In the development environment your application's code is reloaded on&#xD;&#xA;      # every request. This slows down response time but is perfect for development&#xD;&#xA;      # since you don't have to restart the web server when you make code changes.&#xD;&#xA;      config.cache_classes = false&#xD;&#xA;    &#xD;&#xA;      # Do not eager load code on boot.&#xD;&#xA;      config.eager_load = false&#xD;&#xA;    &#xD;&#xA;      # Show full error reports and disable caching.&#xD;&#xA;      config.consider_all_requests_local       = true&#xD;&#xA;      config.action_controller.perform_caching = false&#xD;&#xA;    &#xD;&#xA;      # Don't care if the mailer can't send.&#xD;&#xA;      config.action_mailer.raise_delivery_errors = false&#xD;&#xA;    &#xD;&#xA;      # Print deprecation notices to the Rails logger.&#xD;&#xA;      config.active_support.deprecation = :log&#xD;&#xA;    &#xD;&#xA;      # Raise an error on page load if there are pending migrations.&#xD;&#xA;      config.active_record.migration_error = :page_load&#xD;&#xA;    &#xD;&#xA;      # Debug mode disables concatenation and preprocessing of assets.&#xD;&#xA;      # This option may cause significant delays in view rendering with a large&#xD;&#xA;      # number of complex assets.&#xD;&#xA;      config.assets.debug = true&#xD;&#xA;    &#xD;&#xA;      # Asset digests allow you to set far-future HTTP expiration dates on all assets,&#xD;&#xA;      # yet still be able to expire them through the digest params.&#xD;&#xA;      config.assets.digest = true&#xD;&#xA;    &#xD;&#xA;      # Adds additional error checking when serving assets at runtime.&#xD;&#xA;      # Checks for improperly declared sprockets dependencies.&#xD;&#xA;      # Raises helpful error messages.&#xD;&#xA;      config.assets.raise_runtime_errors = true&#xD;&#xA;    &#xD;&#xA;      # Raises error for missing translations&#xD;&#xA;      # config.action_view.raise_on_missing_translations = true&#xD;&#xA;    end"
5289854828844283396,41,8,"        <?xml version=""1.0"" encoding=""UTF-8""?>&#xD;&#xA;    <configuration>&#xD;&#xA;        <system.webServer>&#xD;&#xA;            <rewrite>&#xD;&#xA;                <rules>&#xD;&#xA;                    <rule name=""WordPress Rule 1"" stopProcessing=""true"">&#xD;&#xA;                        <match url=""^index\.php$"" ignoreCase=""false"" />&#xD;&#xA;                        <action type=""None"" />&#xD;&#xA;                    </rule>&#xD;&#xA;                    <rule name=""WordPress Rule 2"" stopProcessing=""true"">&#xD;&#xA;                        <match url=""^([_0-9a-zA-Z-]+/)?files/(.+)"" ignoreCase=""false"" />&#xD;&#xA;                        <action type=""Rewrite"" url=""wp-includes/ms-files.php?file={R:2}"" appendQueryString=""false"" />&#xD;&#xA;                    </rule>&#xD;&#xA;                    <rule name=""WordPress Rule 3"" stopProcessing=""true"">&#xD;&#xA;                        <match url=""^([_0-9a-zA-Z-]+/)?wp-admin$"" ignoreCase=""false"" />&#xD;&#xA;                        <action type=""Redirect"" url=""{R:1}wp-admin/"" redirectType=""Permanent"" />&#xD;&#xA;                    </rule>&#xD;&#xA;                    <rule name=""WordPress Rule 4"" stopProcessing=""true"">&#xD;&#xA;                        <match url=""^"" ignoreCase=""false"" />&#xD;&#xA;                        <conditions logicalGrouping=""MatchAny"">&#xD;&#xA;                            <add input=""{REQUEST_FILENAME}"" matchType=""IsFile"" ignoreCase=""false"" />&#xD;&#xA;                            <add input=""{REQUEST_FILENAME}"" matchType=""IsDirectory"" ignoreCase=""false"" />&#xD;&#xA;                        </conditions>&#xD;&#xA;                        <action type=""None"" />&#xD;&#xA;                    </rule>&#xD;&#xA;                    <rule name=""WordPress Rule 5"" stopProcessing=""true"">&#xD;&#xA;                        <match url=""^([_0-9a-zA-Z-]+/)?(wp-(content|admin|includes).*)"" ignoreCase=""false"" />&#xD;&#xA;                        <action type=""Rewrite"" url=""{R:2}"" />&#xD;&#xA;                    </rule>&#xD;&#xA;                    <rule name=""WordPress Rule 6"" stopProcessing=""true"">&#xD;&#xA;                        <match url=""^([_0-9a-zA-Z-]+/)?(.*\.php)$"" ignoreCase=""false"" />&#xD;&#xA;                        <action type=""Rewrite"" url=""{R:2}"" />&#xD;&#xA;                    </rule>&#xD;&#xA;                    <rule name=""WordPress Rule 7"" stopProcessing=""true"">&#xD;&#xA;                        <match url=""."" ignoreCase=""false"" />&#xD;&#xA;                        <action type=""Rewrite"" url=""index.php"" />&#xD;&#xA;                    </rule>&#xD;&#xA;                </rules>&#xD;&#xA;            </rewrite>&#xD;&#xA;        </system.webServer>&#xD;&#xA;    </configuration>"
6148205857420913129,42,8,"     ul {&#xD;&#xA;            list-style-type: none;&#xD;&#xA;            margin: 0;&#xD;&#xA;            padding: 0;&#xD;&#xA;            overflow: hidden;&#xD;&#xA;            background-color: #333;&#xD;&#xA;        }&#xD;&#xA;        li {&#xD;&#xA;            float: left;&#xD;&#xA;        }&#xD;&#xA;        li a, .dropbtn {&#xD;&#xA;            display: inline-block;&#xD;&#xA;            color: white;&#xD;&#xA;            text-align: center;&#xD;&#xA;            padding: 14px 16px;&#xD;&#xA;            text-decoration: none;&#xD;&#xA;        }&#xD;&#xA;        li a:hover, .dropdown:hover .dropbtn {&#xD;&#xA;            background-color: red;&#xD;&#xA;        }&#xD;&#xA;        li.dropdown {&#xD;&#xA;            display: inline-block;&#xD;&#xA;        }&#xD;&#xA;        .dropdown-content {&#xD;&#xA;            display: none;&#xD;&#xA;            position: absolute;&#xD;&#xA;            background-color: #f9f9f9;&#xD;&#xA;            min-width: 160px;&#xD;&#xA;            box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);&#xD;&#xA;            z-index: 1;&#xD;&#xA;        }&#xD;&#xA;        .dropdown-content a {&#xD;&#xA;            color: black;&#xD;&#xA;            padding: 12px 16px;&#xD;&#xA;            text-decoration: none;&#xD;&#xA;            display: block;&#xD;&#xA;            text-align: left;&#xD;&#xA;        }&#xD;&#xA;        .dropdown-content a:hover {background-color: #f1f1f1}&#xD;&#xA;        .dropdown:hover .dropdown-content {&#xD;&#xA;            display: block;&#xD;&#xA;        }"
3903270173783939077,42,8,"     ul {&#xD;&#xA;    font-family: Arial, Verdana;&#xD;&#xA;    font-size: 14px;&#xD;&#xA;    margin: 0;&#xD;&#xA;    padding: 0;&#xD;&#xA;    list-style: none;&#xD;&#xA;    }&#xD;&#xA;    ul li {&#xD;&#xA;    display: block;&#xD;&#xA;    position: relative;&#xD;&#xA;    float: left;&#xD;&#xA;    }&#xD;&#xA;    li ul {&#xD;&#xA;    display: none;&#xD;&#xA;    }&#xD;&#xA;    ul li a {&#xD;&#xA;    display: block;&#xD;&#xA;    text-decoration: none;&#xD;&#xA;    color: #ffffff;&#xD;&#xA;    border-top: 1px solid #ffffff;&#xD;&#xA;    padding: 5px 15px 5px 15px;&#xD;&#xA;    background: #2C5463;&#xD;&#xA;    margin-left: 1px;&#xD;&#xA;    white-space: nowrap;&#xD;&#xA;    }&#xD;&#xA;    ul li a:hover {&#xD;&#xA;    background: #617F8A;&#xD;&#xA;    }&#xD;&#xA;    li:hover ul {&#xD;&#xA;    display: block;&#xD;&#xA;    position: absolute;&#xD;&#xA;    }&#xD;&#xA;    li:hover li {&#xD;&#xA;    float: none;&#xD;&#xA;    font-size: 11px;&#xD;&#xA;    }&#xD;&#xA;    li:hover a {&#xD;&#xA;    background: #617F8A;&#xD;&#xA;    }&#xD;&#xA;    li:hover li a:hover {&#xD;&#xA;    background: #95A9B1;&#xD;&#xA;    }"
6895209274453527528,42,8,"    class DeviseCreateUsers < ActiveRecord::Migration&#xD;&#xA;      def change&#xD;&#xA;        create_table :users do |t|&#xD;&#xA;          ## Database authenticatable&#xD;&#xA;          t.string :email,              null: false, default: """"&#xD;&#xA;          t.string :encrypted_password, null: false, default: """"&#xD;&#xA;    &#xD;&#xA;          ## Recoverable&#xD;&#xA;          t.string   :reset_password_token&#xD;&#xA;          t.datetime :reset_password_sent_at&#xD;&#xA;    &#xD;&#xA;          ## Rememberable&#xD;&#xA;          t.datetime :remember_created_at&#xD;&#xA;    &#xD;&#xA;          ## Trackable&#xD;&#xA;          t.integer  :sign_in_count, default: 0, null: false&#xD;&#xA;          t.datetime :current_sign_in_at&#xD;&#xA;          t.datetime :last_sign_in_at&#xD;&#xA;          t.string   :current_sign_in_ip&#xD;&#xA;          t.string   :last_sign_in_ip&#xD;&#xA;    &#xD;&#xA;          ## Confirmable&#xD;&#xA;          # t.string   :confirmation_token&#xD;&#xA;          # t.datetime :confirmed_at&#xD;&#xA;          # t.datetime :confirmation_sent_at&#xD;&#xA;          # t.string   :unconfirmed_email # Only if using reconfirmable&#xD;&#xA;    &#xD;&#xA;          ## Lockable&#xD;&#xA;          # t.integer  :failed_attempts, default: 0, null: false # Only if lock strategy is :failed_attempts&#xD;&#xA;          # t.string   :unlock_token # Only if unlock strategy is :email or :both&#xD;&#xA;          # t.datetime :locked_at&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;          t.timestamps null: false&#xD;&#xA;        end&#xD;&#xA;    &#xD;&#xA;        add_index :users, :email,                unique: true&#xD;&#xA;        add_index :users, :reset_password_token, unique: true&#xD;&#xA;        # add_index :users, :confirmation_token,   unique: true&#xD;&#xA;        # add_index :users, :unlock_token,         unique: true&#xD;&#xA;      end&#xD;&#xA;    end"
-2095177140698163643,42,8,        <plugin>&#xD;&#xA;            <groupId>org.apache.maven.plugins</groupId>&#xD;&#xA;            <artifactId>maven-assembly-plugin</artifactId>&#xD;&#xA;            <executions>&#xD;&#xA;              <execution>&#xD;&#xA;                <id>test</id>&#xD;&#xA;                <phase>package</phase>&#xD;&#xA;                <goals>&#xD;&#xA;                  <goal>single</goal>&#xD;&#xA;                </goals>&#xD;&#xA;                <configuration>&#xD;&#xA;                  <descriptors>&#xD;&#xA;                    <descriptor>${project.basedir}/src/main/assembly/test.xml</descriptor>&#xD;&#xA;                  </descriptors>&#xD;&#xA;                </configuration>&#xD;&#xA;              </execution>&#xD;&#xA;              <execution>&#xD;&#xA;                <id>qa</id>&#xD;&#xA;                <phase>package</phase>&#xD;&#xA;                <goals>&#xD;&#xA;                  <goal>single</goal>&#xD;&#xA;                </goals>&#xD;&#xA;                <configuration>&#xD;&#xA;                  <descriptors>&#xD;&#xA;                    <descriptor>${project.basedir}/src/main/assembly/qa.xml</descriptor>&#xD;&#xA;                  </descriptors>&#xD;&#xA;                </configuration>&#xD;&#xA;              </execution>&#xD;&#xA;              <execution>&#xD;&#xA;                <id>production</id>&#xD;&#xA;                <phase>package</phase>&#xD;&#xA;                <goals>&#xD;&#xA;                  <goal>single</goal>&#xD;&#xA;                </goals>&#xD;&#xA;                <configuration>&#xD;&#xA;                  <descriptors>&#xD;&#xA;                    <descriptor>${project.basedir}/src/main/assembly/production.xml</descriptor>&#xD;&#xA;                  </descriptors>&#xD;&#xA;                </configuration>&#xD;&#xA;              </execution>&#xD;&#xA;            </executions>&#xD;&#xA;          </plugin>
5234487877748031670,44,8,"	<?php&#xD;&#xA;	$target_dir = ""uploads/"";&#xD;&#xA;	$target_file = $target_dir . basename($_FILES[""fileToUpload""][""name""]);&#xD;&#xA;	$uploadOk = 1;&#xD;&#xA;	$imageFileType = strtolower(pathinfo($target_file,PATHINFO_EXTENSION));&#xD;&#xA;	// Check if image file is a actual image or fake image&#xD;&#xA;	if(isset($_POST[""submit""])) {&#xD;&#xA;	    $check = getimagesize($_FILES[""fileToUpload""][""tmp_name""]);&#xD;&#xA;	    if($check !== false) {&#xD;&#xA;		echo ""File is an image - "" . $check[""mime""] . ""."";&#xD;&#xA;		$uploadOk = 1;&#xD;&#xA;	    } else {&#xD;&#xA;		echo ""File is not an image."";&#xD;&#xA;		$uploadOk = 0;&#xD;&#xA;	    }&#xD;&#xA;	}&#xD;&#xA;	// Check if file already exists&#xD;&#xA;	if (file_exists($target_file)) {&#xD;&#xA;	    echo ""Sorry, file already exists."";&#xD;&#xA;	    $uploadOk = 0;&#xD;&#xA;	}&#xD;&#xA;	// Check file size&#xD;&#xA;	if ($_FILES[""fileToUpload""][""size""] > 500000) {&#xD;&#xA;	    echo ""Sorry, your file is too large."";&#xD;&#xA;	    $uploadOk = 0;&#xD;&#xA;	}&#xD;&#xA;	// Allow certain file formats&#xD;&#xA;	if($imageFileType != ""jpg"" && $imageFileType != ""png"" && $imageFileType != ""jpeg""&#xD;&#xA;	&& $imageFileType != ""gif"" ) {&#xD;&#xA;	    echo ""Sorry, only JPG, JPEG, PNG & GIF files are allowed."";&#xD;&#xA;	    $uploadOk = 0;&#xD;&#xA;	}&#xD;&#xA;	// Check if $uploadOk is set to 0 by an error&#xD;&#xA;	if ($uploadOk == 0) {&#xD;&#xA;	    echo ""Sorry, your file was not uploaded."";&#xD;&#xA;	// if everything is ok, try to upload file&#xD;&#xA;	} else {&#xD;&#xA;	    if (move_uploaded_file($_FILES[""fileToUpload""][""tmp_name""], $target_file)) {&#xD;&#xA;		echo ""The file "". basename( $_FILES[""fileToUpload""][""name""]). "" has been uploaded."";&#xD;&#xA;	    } else {&#xD;&#xA;		echo ""Sorry, there was an error uploading your file."";&#xD;&#xA;	    }&#xD;&#xA;	}&#xD;&#xA;	?>"
-4254055884953055702,44,8,"	<html>&#xD;&#xA;	<head>&#xD;&#xA;	<script type=""text/javascript"">&#xD;&#xA;	function showUser(str)&#xD;&#xA;	{&#xD;&#xA;	if (str=="""")&#xD;&#xA;	  {&#xD;&#xA;	  document.getElementById(""txtHint"").innerHTML="""";&#xD;&#xA;	  return;&#xD;&#xA;	  } &#xD;&#xA;	if (window.XMLHttpRequest)&#xD;&#xA;	  {// code for IE7+, Firefox, Chrome, Opera, Safari&#xD;&#xA;	  xmlhttp=new XMLHttpRequest();&#xD;&#xA;	  }&#xD;&#xA;	else&#xD;&#xA;	  {// code for IE6, IE5&#xD;&#xA;	  xmlhttp=new ActiveXObject(""Microsoft.XMLHTTP"");&#xD;&#xA;	  }&#xD;&#xA;	xmlhttp.onreadystatechange=function()&#xD;&#xA;	  {&#xD;&#xA;	  if (xmlhttp.readyState==4 && xmlhttp.status==200)&#xD;&#xA;		{&#xD;&#xA;		document.getElementById(""txtHint"").innerHTML=xmlhttp.responseText;&#xD;&#xA;		}&#xD;&#xA;	  }&#xD;&#xA;	xmlhttp.open(""GET"",""getuser.php?q=""+str,true);&#xD;&#xA;	xmlhttp.send();&#xD;&#xA;	}&#xD;&#xA;	</script>&#xD;&#xA;	</head>&#xD;&#xA;	<body>&#xD;&#xA;	<form>&#xD;&#xA;	<select name=""users"" onchange=""showUser(this.value)"">&#xD;&#xA;	<option value="""">Select a person:</option>&#xD;&#xA;	<option value=""1"">Peter Griffin</option>&#xD;&#xA;	<option value=""2"">Lois Griffin</option>&#xD;&#xA;	<option value=""3"">Glenn Quagmire</option>&#xD;&#xA;	<option value=""4"">Joseph Swanson</option>&#xD;&#xA;	</select>&#xD;&#xA;	</form>&#xD;&#xA;	<br />&#xD;&#xA;	<div id=""txtHint""><b>Person info will be listed here.</b></div>&#xD;&#xA;	</body>&#xD;&#xA;	</html>"
-6305177117748696633,45,8,"    private class ConnectThread extends Thread {&#xD;&#xA;	    private final BluetoothSocket mmSocket;&#xD;&#xA;	    private final BluetoothDevice mmDevice;&#xD;&#xA;	 &#xD;&#xA;	    public ConnectThread(BluetoothDevice device) {&#xD;&#xA;	        // Use a temporary object that is later assigned to mmSocket,&#xD;&#xA;	        // because mmSocket is final&#xD;&#xA;	        BluetoothSocket tmp = null;&#xD;&#xA;	        mmDevice = device;&#xD;&#xA;	 &#xD;&#xA;	        // Get a BluetoothSocket to connect with the given BluetoothDevice&#xD;&#xA;	        try {&#xD;&#xA;	            // MY_UUID is the app's UUID string, also used by the server code&#xD;&#xA;	            tmp = device.createRfcommSocketToServiceRecord(MY_UUID);&#xD;&#xA;	        } catch (IOException e) { }&#xD;&#xA;	        mmSocket = tmp;&#xD;&#xA;	    }&#xD;&#xA;	 &#xD;&#xA;	    public void run() {&#xD;&#xA;	        // Cancel discovery because it will slow down the connection&#xD;&#xA;	        mBluetoothAdapter.cancelDiscovery();&#xD;&#xA;	 &#xD;&#xA;	        try {&#xD;&#xA;	            // Connect the device through the socket. This will block&#xD;&#xA;	            // until it succeeds or throws an exception&#xD;&#xA;	            mmSocket.connect();&#xD;&#xA;	        } catch (IOException connectException) {&#xD;&#xA;	            // Unable to connect; close the socket and get out&#xD;&#xA;	            try {&#xD;&#xA;	                mmSocket.close();&#xD;&#xA;	            } catch (IOException closeException) { }&#xD;&#xA;	            return;&#xD;&#xA;	        }&#xD;&#xA;	 &#xD;&#xA;	        // Do work to manage the connection (in a separate thread)&#xD;&#xA;	        manageConnectedSocket(mmSocket);&#xD;&#xA;	    }&#xD;&#xA;	 &#xD;&#xA;	    /** Will cancel an in-progress connection, and close the socket */&#xD;&#xA;	    public void cancel() {&#xD;&#xA;	        try {&#xD;&#xA;	            mmSocket.close();&#xD;&#xA;	        } catch (IOException e) { }&#xD;&#xA;	    }&#xD;&#xA;	}"
-2716871800645686948,50,8,"     function query(/* $sql [, ... ] */)&#xD;&#xA;        {&#xD;&#xA;            // SQL statement&#xD;&#xA;            $sql = func_get_arg(0);&#xD;&#xA;    &#xD;&#xA;            // parameters, if any&#xD;&#xA;            $parameters = array_slice(func_get_args(), 1);&#xD;&#xA;    &#xD;&#xA;            // try to connect to database&#xD;&#xA;            static $handle;&#xD;&#xA;            if (!isset($handle))&#xD;&#xA;            {&#xD;&#xA;                try&#xD;&#xA;                {&#xD;&#xA;                    // connect to database&#xD;&#xA;                    $handle = new PDO(""mysql:dbname="" . DATABASE . "";host="" . SERVER, USERNAME, PASSWORD);&#xD;&#xA;    &#xD;&#xA;                    // ensure that PDO::prepare returns false when passed invalid SQL&#xD;&#xA;                    $handle->setAttribute(PDO::ATTR_EMULATE_PREPARES, false); &#xD;&#xA;                }&#xD;&#xA;                catch (Exception $e)&#xD;&#xA;                {&#xD;&#xA;                    // trigger (big, orange) error&#xD;&#xA;                    trigger_error($e->getMessage(), E_USER_ERROR);&#xD;&#xA;                    exit;&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            // prepare SQL statement&#xD;&#xA;            $statement = $handle->prepare($sql);&#xD;&#xA;            if ($statement === false)&#xD;&#xA;            {&#xD;&#xA;                // trigger (big, orange) error&#xD;&#xA;                trigger_error($handle->errorInfo()[2], E_USER_ERROR);&#xD;&#xA;                exit;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            // execute SQL statement&#xD;&#xA;            $results = $statement->execute($parameters);&#xD;&#xA;    &#xD;&#xA;            // return result set's rows, if any&#xD;&#xA;            if ($results !== false)&#xD;&#xA;            {&#xD;&#xA;                return $statement->fetchAll(PDO::FETCH_ASSOC);&#xD;&#xA;            }&#xD;&#xA;            else&#xD;&#xA;            {&#xD;&#xA;                return false;&#xD;&#xA;            }&#xD;&#xA;        }"
268133672878768968,51,8,"     <?php&#xD;&#xA;        &#xD;&#xA;        /*&#xD;&#xA;         * Following code will create a new product row&#xD;&#xA;         * All product details are read from HTTP Post Request&#xD;&#xA;         */&#xD;&#xA;        &#xD;&#xA;        // array for JSON response&#xD;&#xA;        $response = array();&#xD;&#xA;        &#xD;&#xA;        // check for required fields&#xD;&#xA;        if (isset($_POST['name']) && isset($_POST['price']) && isset($_POST['description'])) {&#xD;&#xA;            &#xD;&#xA;            $name = $_POST['name'];&#xD;&#xA;            $price = $_POST['price'];&#xD;&#xA;            $description = $_POST['description'];&#xD;&#xA;        &#xD;&#xA;            // include db connect class&#xD;&#xA;            require_once __DIR__ . '/db_connect.php';&#xD;&#xA;        &#xD;&#xA;            // connecting to db&#xD;&#xA;            $db = new DB_CONNECT();&#xD;&#xA;        &#xD;&#xA;            // mysql inserting a new row&#xD;&#xA;            $result = mysql_query(""INSERT INTO products(name, price, description) VALUES('$name', '$price', '$description')"");&#xD;&#xA;        &#xD;&#xA;            // check if row inserted or not&#xD;&#xA;            if ($result) {&#xD;&#xA;                // successfully inserted into database&#xD;&#xA;                $response[""success""] = 1;&#xD;&#xA;                $response[""message""] = ""Product successfully created."";&#xD;&#xA;        &#xD;&#xA;                // echoing JSON response&#xD;&#xA;                echo json_encode($response);&#xD;&#xA;            } else {&#xD;&#xA;                // failed to insert row&#xD;&#xA;                $response[""success""] = 0;&#xD;&#xA;                $response[""message""] = ""Oops! An error occurred."";&#xD;&#xA;                &#xD;&#xA;                // echoing JSON response&#xD;&#xA;                echo json_encode($response);&#xD;&#xA;            }&#xD;&#xA;        } else {&#xD;&#xA;            // required field is missing&#xD;&#xA;            $response[""success""] = 0;&#xD;&#xA;            $response[""message""] = ""Required field(s) is missing"";&#xD;&#xA;        &#xD;&#xA;            // echoing JSON response&#xD;&#xA;            echo json_encode($response);&#xD;&#xA;        }&#xD;&#xA;        ?>"
-6751604314950424373,52,8,"     $(document).ready(function () {&#xD;&#xA;        &#xD;&#xA;            function exportTableToCSV($table, filename) {&#xD;&#xA;        &#xD;&#xA;                var $rows = $table.find('tr:has(td)'),&#xD;&#xA;        &#xD;&#xA;                    // Temporary delimiter characters unlikely to be typed by keyboard&#xD;&#xA;                    // This is to avoid accidentally splitting the actual contents&#xD;&#xA;                    tmpColDelim = String.fromCharCode(11), // vertical tab character&#xD;&#xA;                    tmpRowDelim = String.fromCharCode(0), // null character&#xD;&#xA;        &#xD;&#xA;                    // actual delimiter characters for CSV format&#xD;&#xA;                    colDelim = '"",""',&#xD;&#xA;                    rowDelim = '""\r\n""',&#xD;&#xA;        &#xD;&#xA;                    // Grab text from table into CSV formatted string&#xD;&#xA;                    csv = '""' + $rows.map(function (i, row) {&#xD;&#xA;                        var $row = $(row),&#xD;&#xA;                            $cols = $row.find('td');&#xD;&#xA;        &#xD;&#xA;                        return $cols.map(function (j, col) {&#xD;&#xA;                            var $col = $(col),&#xD;&#xA;                                text = $col.text();&#xD;&#xA;        &#xD;&#xA;                            return text.replace('""', '""""'); // escape double quotes&#xD;&#xA;        &#xD;&#xA;                        }).get().join(tmpColDelim);&#xD;&#xA;        &#xD;&#xA;                    }).get().join(tmpRowDelim)&#xD;&#xA;                        .split(tmpRowDelim).join(rowDelim)&#xD;&#xA;                        .split(tmpColDelim).join(colDelim) + '""',&#xD;&#xA;        &#xD;&#xA;                    // Data URI&#xD;&#xA;                    csvData = 'data:application/csv;charset=utf-8,' + encodeURIComponent(csv);&#xD;&#xA;        &#xD;&#xA;                $(this)&#xD;&#xA;                    .attr({&#xD;&#xA;                    'download': filename,&#xD;&#xA;                        'href': csvData,&#xD;&#xA;                        'target': '_blank'&#xD;&#xA;                });&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            // This must be a hyperlink&#xD;&#xA;            $("".export"").on('click', function (event) {&#xD;&#xA;                // CSV&#xD;&#xA;                exportTableToCSV.apply(this, [$('#dvData>table'), 'export.csv']);&#xD;&#xA;                &#xD;&#xA;                // IF CSV, don't do event.preventDefault() or return false&#xD;&#xA;                // We actually need this to be a typical hyperlink&#xD;&#xA;            });&#xD;&#xA;        });"
-7068658475055544329,53,8,"    # Use the front controller as in&#xD;&#xA;    dex file. It serves as a fallback solution when&#xD;&#xA;    # every other rewrite/redirect fails (e.g. in an aliased environment without&#xD;&#xA;    # mod_rewrite). Additionally, this reduces the matching process for the&#xD;&#xA;    # start page (path ""/"") because otherwise Apache will apply the rewriting rules&#xD;&#xA;    # to each configured DirectoryIndex file (e.g. index.php, index.html, index.pl).&#xD;&#xA;    DirectoryIndex app.php&#xD;&#xA;    &#xD;&#xA;    <IfModule mod_rewrite.c>&#xD;&#xA;        RewriteEngine On&#xD;&#xA;    &#xD;&#xA;        # Determine the RewriteBase automatically and set it as environment variable.&#xD;&#xA;        # If you are using Apache aliases to do mass virtual hosting or installed the&#xD;&#xA;        # project in a subdirectory, the base path will be prepended to allow proper&#xD;&#xA;        # resolution of the app.php file and to redirect to the correct URI. It will&#xD;&#xA;        # work in environments without path prefix as well, providing a safe, one-size&#xD;&#xA;        # fits all solution. But as you do not need it in this case, you can comment&#xD;&#xA;        # the following 2 lines to eliminate the overhead.&#xD;&#xA;        RewriteCond %{REQUEST_URI}::$1 ^(/.+)/(.*)::\2$&#xD;&#xA;        RewriteRule ^(.*) - [E=BASE:%1]&#xD;&#xA;    &#xD;&#xA;        # Redirect to URI without front controller to prevent duplicate content&#xD;&#xA;        # (with and without `/app.php`). Only do this redirect on the initial&#xD;&#xA;        # rewrite by Apache and not on subsequent cycles. Otherwise we would get an&#xD;&#xA;        # endless redirect loop (request -> rewrite to front controller ->&#xD;&#xA;        # redirect -> request -> ...).&#xD;&#xA;        # So in case you get a ""too many redirects"" error or you always get redirected&#xD;&#xA;        # to the start page because your Apache does not expose the REDIRECT_STATUS&#xD;&#xA;        # environment variable, you have 2 choices:&#xD;&#xA;        # - disable this feature by commenting the following 2 lines or&#xD;&#xA;        # - use Apache >= 2.3.9 and replace all L flags by END flags and remove the&#xD;&#xA;        #   following RewriteCond (best solution)&#xD;&#xA;        RewriteCond %{ENV:REDIRECT_STATUS} ^$&#xD;&#xA;        RewriteRule ^app\.php(/(.*)|$) %{ENV:BASE}/$2 [R=301,L]&#xD;&#xA;    &#xD;&#xA;        # If the requested filename exists, simply serve it.&#xD;&#xA;        # We only want to let Apache serve files and not directories.&#xD;&#xA;        RewriteCond %{REQUEST_FILENAME} -f&#xD;&#xA;        RewriteRule .? - [L]&#xD;&#xA;    &#xD;&#xA;        # Rewrite all other queries to the front controller.&#xD;&#xA;        RewriteRule .? %{ENV:BASE}/app.php [L]&#xD;&#xA;    </IfModule>&#xD;&#xA;    &#xD;&#xA;    <IfModule !mod_rewrite.c>&#xD;&#xA;        <IfModule mod_alias.c>&#xD;&#xA;            # When mod_rewrite is not available, we instruct a temporary redirect of&#xD;&#xA;            # the start page to the front controller explicitly so that the website&#xD;&#xA;            # and the generated links can still be used.&#xD;&#xA;            RedirectMatch 302 ^/$ /app.php/&#xD;&#xA;            # RedirectTemp cannot be used instead&#xD;&#xA;        </IfModule>&#xD;&#xA;    </IfModule>"
1090262710034975433,53,8,"    public class MainActivity extends FragmentActivity implements&#xD;&#xA;		ActionBar.TabListener {&#xD;&#xA;	private ViewPager viewPager;&#xD;&#xA;	private TabsPagerAdapter mAdapter;&#xD;&#xA;	private ActionBar actionBar;&#xD;&#xA;	// Tab titles&#xD;&#xA;	private String[] tabs = { ""Top Rated"", ""Games"", ""Movies"" };&#xD;&#xA;	@Override&#xD;&#xA;	protected void onCreate(Bundle savedInstanceState) {&#xD;&#xA;		super.onCreate(savedInstanceState);&#xD;&#xA;		setContentView(R.layout.activity_main);&#xD;&#xA;		// Initilization&#xD;&#xA;		viewPager = (ViewPager) findViewById(R.id.pager);&#xD;&#xA;		actionBar = getActionBar();&#xD;&#xA;		mAdapter = new TabsPagerAdapter(getSupportFragmentManager());&#xD;&#xA;		viewPager.setAdapter(mAdapter);&#xD;&#xA;		actionBar.setHomeButtonEnabled(false);&#xD;&#xA;		actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_TABS);		&#xD;&#xA;		// Adding Tabs&#xD;&#xA;		for (String tab_name : tabs) {&#xD;&#xA;			actionBar.addTab(actionBar.newTab().setText(tab_name)&#xD;&#xA;					.setTabListener(this));&#xD;&#xA;		}&#xD;&#xA;		/**&#xD;&#xA;		 * on swiping the viewpager make respective tab selected&#xD;&#xA;		 * */&#xD;&#xA;		viewPager.setOnPageChangeListener(new ViewPager.OnPageChangeListener() {&#xD;&#xA;			@Override&#xD;&#xA;			public void onPageSelected(int position) {&#xD;&#xA;				// on changing the page&#xD;&#xA;				// make respected tab selected&#xD;&#xA;				actionBar.setSelectedNavigationItem(position);&#xD;&#xA;			}&#xD;&#xA;			@Override&#xD;&#xA;			public void onPageScrolled(int arg0, float arg1, int arg2) {&#xD;&#xA;			}&#xD;&#xA;			@Override&#xD;&#xA;			public void onPageScrollStateChanged(int arg0) {&#xD;&#xA;			}&#xD;&#xA;		});&#xD;&#xA;	}&#xD;&#xA;	@Override&#xD;&#xA;	public void onTabReselected(Tab tab, FragmentTransaction ft) {&#xD;&#xA;	}&#xD;&#xA;	@Override&#xD;&#xA;	public void onTabSelected(Tab tab, FragmentTransaction ft) {&#xD;&#xA;		// on tab selected&#xD;&#xA;		// show respected fragment view&#xD;&#xA;		viewPager.setCurrentItem(tab.getPosition());&#xD;&#xA;	}&#xD;&#xA;	@Override&#xD;&#xA;	public void onTabUnselected(Tab tab, FragmentTransaction ft) {&#xD;&#xA;	}"
2918121187975703393,58,8,"    <?php&#xD;&#xA;     &#xD;&#xA;    class GCM {&#xD;&#xA;     &#xD;&#xA;        //put your code here&#xD;&#xA;        // constructor&#xD;&#xA;        function __construct() {&#xD;&#xA;             &#xD;&#xA;        }&#xD;&#xA;     &#xD;&#xA;        /**&#xD;&#xA;         * Sending Push Notification&#xD;&#xA;         */&#xD;&#xA;        public function send_notification($registatoin_ids, $message) {&#xD;&#xA;            // include config&#xD;&#xA;            include_once './config.php';&#xD;&#xA;     &#xD;&#xA;            // Set POST variables&#xD;&#xA;            $url = 'https://android.googleapis.com/gcm/send';&#xD;&#xA;     &#xD;&#xA;            $fields = array(&#xD;&#xA;                'registration_ids' => $registatoin_ids,&#xD;&#xA;                'data' => $message,&#xD;&#xA;            );&#xD;&#xA;     &#xD;&#xA;            $headers = array(&#xD;&#xA;                'Authorization: key=' . GOOGLE_API_KEY,&#xD;&#xA;                'Content-Type: application/json'&#xD;&#xA;            );&#xD;&#xA;            // Open connection&#xD;&#xA;            $ch = curl_init();&#xD;&#xA;     &#xD;&#xA;            // Set the url, number of POST vars, POST data&#xD;&#xA;            curl_setopt($ch, CURLOPT_URL, $url);&#xD;&#xA;     &#xD;&#xA;            curl_setopt($ch, CURLOPT_POST, true);&#xD;&#xA;            curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);&#xD;&#xA;            curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);&#xD;&#xA;     &#xD;&#xA;            // Disabling SSL Certificate support temporarly&#xD;&#xA;            curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);&#xD;&#xA;     &#xD;&#xA;            curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($fields));&#xD;&#xA;     &#xD;&#xA;            // Execute post&#xD;&#xA;            $result = curl_exec($ch);&#xD;&#xA;            if ($result === FALSE) {&#xD;&#xA;                die('Curl failed: ' . curl_error($ch));&#xD;&#xA;            }&#xD;&#xA;     &#xD;&#xA;            // Close connection&#xD;&#xA;            curl_close($ch);&#xD;&#xA;            echo $result;&#xD;&#xA;        }&#xD;&#xA;     &#xD;&#xA;    }&#xD;&#xA;     &#xD;&#xA;    ?>"
-1827318091107472352,59,8,"    var express = require('express');&#xD;&#xA;    var path = require('path');&#xD;&#xA;    var favicon = require('serve-favicon');&#xD;&#xA;    var logger = require('morgan');&#xD;&#xA;    var cookieParser = require('cookie-parser');&#xD;&#xA;    var bodyParser = require('body-parser');&#xD;&#xA;    &#xD;&#xA;    var routes = require('./routes/index');&#xD;&#xA;    var users = require('./routes/users');&#xD;&#xA;    &#xD;&#xA;    var app = express();&#xD;&#xA;    &#xD;&#xA;    // view engine setup&#xD;&#xA;    app.set('views', path.join(__dirname, 'views'));&#xD;&#xA;    app.set('view engine', 'jade');&#xD;&#xA;    &#xD;&#xA;    // uncomment after placing your favicon in /public&#xD;&#xA;    //app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));&#xD;&#xA;    app.use(logger('dev'));&#xD;&#xA;    app.use(bodyParser.json());&#xD;&#xA;    app.use(bodyParser.urlencoded({ extended: false }));&#xD;&#xA;    app.use(cookieParser());&#xD;&#xA;    app.use(express.static(path.join(__dirname, 'public')));&#xD;&#xA;    &#xD;&#xA;    app.use('/', routes);&#xD;&#xA;    app.use('/users', users);&#xD;&#xA;    &#xD;&#xA;    // catch 404 and forward to error handler&#xD;&#xA;    app.use(function(req, res, next) {&#xD;&#xA;      var err = new Error('Not Found');&#xD;&#xA;      err.status = 404;&#xD;&#xA;      next(err);&#xD;&#xA;    });&#xD;&#xA;    &#xD;&#xA;    // error handlers&#xD;&#xA;    &#xD;&#xA;    // development error handler&#xD;&#xA;    // will print stacktrace&#xD;&#xA;    if (app.get('env') === 'development') {&#xD;&#xA;      app.use(function(err, req, res, next) {&#xD;&#xA;        res.status(err.status || 500);&#xD;&#xA;        res.render('error', {&#xD;&#xA;          message: err.message,&#xD;&#xA;          error: err&#xD;&#xA;        });&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    // production error handler&#xD;&#xA;    // no stacktraces leaked to user&#xD;&#xA;    app.use(function(err, req, res, next) {&#xD;&#xA;      res.status(err.status || 500);&#xD;&#xA;      res.render('error', {&#xD;&#xA;            message: err.message,&#xD;&#xA;            error: {}&#xD;&#xA;          });&#xD;&#xA;        });&#xD;&#xA;    &#xD;&#xA;    module.exports = app;"
1890009522220125144,60,8,"    function fix_flash() {&#xD;&#xA;        // loop through every embed tag on the site&#xD;&#xA;        var embeds = document.getElementsByTagName('embed');&#xD;&#xA;        for (i = 0; i < embeds.length; i++) {&#xD;&#xA;            embed = embeds[i];&#xD;&#xA;            var new_embed;&#xD;&#xA;            // everything but Firefox & Konqueror&#xD;&#xA;            if (embed.outerHTML) {&#xD;&#xA;                var html = embed.outerHTML;&#xD;&#xA;                // replace an existing wmode parameter&#xD;&#xA;                if (html.match(/wmode\s*=\s*('|"")[a-zA-Z]+('|"")/i))&#xD;&#xA;                    new_embed = html.replace(/wmode\s*=\s*('|"")window('|"")/i, ""wmode='transparent'"");&#xD;&#xA;                // add a new wmode parameter&#xD;&#xA;                else&#xD;&#xA;                    new_embed = html.replace(/<embed\s/i, ""<embed wmode='transparent' "");&#xD;&#xA;                // replace the old embed object with the fixed version&#xD;&#xA;                embed.insertAdjacentHTML('beforeBegin', new_embed);&#xD;&#xA;                embed.parentNode.removeChild(embed);&#xD;&#xA;            } else {&#xD;&#xA;                // cloneNode is buggy in some versions of Safari & Opera, but works fine in FF&#xD;&#xA;                new_embed = embed.cloneNode(true);&#xD;&#xA;                if (!new_embed.getAttribute('wmode') || new_embed.getAttribute('wmode').toLowerCase() == 'window')&#xD;&#xA;                    new_embed.setAttribute('wmode', 'transparent');&#xD;&#xA;                embed.parentNode.replaceChild(new_embed, embed);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        // loop through every object tag on the site&#xD;&#xA;        var objects = document.getElementsByTagName('object');&#xD;&#xA;        for (i = 0; i < objects.length; i++) {&#xD;&#xA;            object = objects[i];&#xD;&#xA;            var new_object;&#xD;&#xA;            // object is an IE specific tag so we can use outerHTML here&#xD;&#xA;            if (object.outerHTML) {&#xD;&#xA;                var html = object.outerHTML;&#xD;&#xA;                // replace an existing wmode parameter&#xD;&#xA;                if (html.match(/<param\s+name\s*=\s*('|"")wmode('|"")\s+value\s*=\s*('|"")[a-zA-Z]+('|"")\s*\/?\>/i))&#xD;&#xA;                    new_object = html.replace(/<param\s+name\s*=\s*('|"")wmode('|"")\s+value\s*=\s*('|"")window('|"")\s*\/?\>/i, ""<param name='wmode' value='transparent' />"");&#xD;&#xA;                // add a new wmode parameter&#xD;&#xA;                else&#xD;&#xA;                    new_object = html.replace(/<\/object\>/i, ""<param name='wmode' value='transparent' />\n</object>"");&#xD;&#xA;                // loop through each of the param tags&#xD;&#xA;                var children = object.childNodes;&#xD;&#xA;                for (j = 0; j < children.length; j++) {&#xD;&#xA;                    try {&#xD;&#xA;                        if (children[j] != null) {&#xD;&#xA;                            var theName = children[j].getAttribute('name');&#xD;&#xA;                            if (theName != null && theName.match(/flashvars/i)) {&#xD;&#xA;                                new_object = new_object.replace(/<param\s+name\s*=\s*('|"")flashvars('|"")\s+value\s*=\s*('|"")[^'""]*('|"")\s*\/?\>/i, ""<param name='flashvars' value='"" + children[j].getAttribute('value') + ""' />"");&#xD;&#xA;                            }&#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;                    catch (err) {&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;                // replace the old embed object with the fixed versiony&#xD;&#xA;                object.insertAdjacentHTML('beforeBegin', new_object);&#xD;&#xA;                object.parentNode.removeChild(object);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }"
-3028639678721310924,62,8,"    using System;&#xD;&#xA;    using System.IO;&#xD;&#xA;    using System.Security.Permissions;&#xD;&#xA;    &#xD;&#xA;    public class Watcher&#xD;&#xA;    {&#xD;&#xA;    &#xD;&#xA;        public static void Main()&#xD;&#xA;        {&#xD;&#xA;           Run();&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        [PermissionSet(SecurityAction.Demand, Name=""FullTrust"")]&#xD;&#xA;        public static void Run()&#xD;&#xA;        {&#xD;&#xA;            string[] args = System.Environment.GetCommandLineArgs();&#xD;&#xA;    &#xD;&#xA;            // If a directory is not specified, exit program.&#xD;&#xA;            if(args.Length != 2)&#xD;&#xA;            {&#xD;&#xA;                // Display the proper way to call the program.&#xD;&#xA;                Console.WriteLine(""Usage: Watcher.exe (directory)"");&#xD;&#xA;                return;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            // Create a new FileSystemWatcher and set its properties.&#xD;&#xA;            FileSystemWatcher watcher = new FileSystemWatcher();&#xD;&#xA;            watcher.Path = args[1];&#xD;&#xA;            /* Watch for changes in LastAccess and LastWrite times, and&#xD;&#xA;               the renaming of files or directories. */&#xD;&#xA;            watcher.NotifyFilter = NotifyFilters.LastAccess | NotifyFilters.LastWrite&#xD;&#xA;               | NotifyFilters.FileName | NotifyFilters.DirectoryName;&#xD;&#xA;            // Only watch text files.&#xD;&#xA;            watcher.Filter = ""*.txt"";&#xD;&#xA;    &#xD;&#xA;            // Add event handlers.&#xD;&#xA;            watcher.Changed += new FileSystemEventHandler(OnChanged);&#xD;&#xA;            watcher.Created += new FileSystemEventHandler(OnChanged);&#xD;&#xA;            watcher.Deleted += new FileSystemEventHandler(OnChanged);&#xD;&#xA;            watcher.Renamed += new RenamedEventHandler(OnRenamed);&#xD;&#xA;    &#xD;&#xA;            // Begin watching.&#xD;&#xA;            watcher.EnableRaisingEvents = true;&#xD;&#xA;    &#xD;&#xA;            // Wait for the user to quit the program.&#xD;&#xA;            Console.WriteLine(""Press \'q\' to quit the sample."");&#xD;&#xA;            while(Console.Read()!='q');&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // Define the event handlers.&#xD;&#xA;        private static void OnChanged(object source, FileSystemEventArgs e)&#xD;&#xA;        {&#xD;&#xA;            // Specify what is done when a file is changed, created, or deleted.&#xD;&#xA;           Console.WriteLine(""File: "" +  e.FullPath + "" "" + e.ChangeType);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private static void OnRenamed(object source, RenamedEventArgs e)&#xD;&#xA;        {&#xD;&#xA;            // Specify what is done when a file is renamed.&#xD;&#xA;            Console.WriteLine(""File: {0} renamed to {1}"", e.OldFullPath, e.FullPath);&#xD;&#xA;        }&#xD;&#xA;    }"
5556784223767842186,62,8,"	Imports System.Runtime.InteropServices&#xD;&#xA;	Public Class KeyboardHook&#xD;&#xA;		<DllImport(""User32.dll"", CharSet:=CharSet.Auto, CallingConvention:=CallingConvention.StdCall)> _&#xD;&#xA;		Private Overloads Shared Function SetWindowsHookEx(ByVal idHook As Integer, ByVal HookProc As KBDLLHookProc, ByVal hInstance As IntPtr, ByVal wParam As Integer) As Integer&#xD;&#xA;		End Function&#xD;&#xA;		<DllImport(""User32.dll"", CharSet:=CharSet.Auto, CallingConvention:=CallingConvention.StdCall)> _&#xD;&#xA;		Private Overloads Shared Function CallNextHookEx(ByVal idHook As Integer, ByVal nCode As Integer, ByVal wParam As IntPtr, ByVal lParam As IntPtr) As Integer&#xD;&#xA;		End Function&#xD;&#xA;		<DllImport(""User32.dll"", CharSet:=CharSet.Auto, CallingConvention:=CallingConvention.StdCall)> _&#xD;&#xA;		Private Overloads Shared Function UnhookWindowsHookEx(ByVal idHook As Integer) As Boolean&#xD;&#xA;		End Function&#xD;&#xA;		<StructLayout(LayoutKind.Sequential)> _&#xD;&#xA;		Private Structure KBDLLHOOKSTRUCT&#xD;&#xA;			Public vkCode As UInt32&#xD;&#xA;			Public scanCode As UInt32&#xD;&#xA;			Public flags As KBDLLHOOKSTRUCTFlags&#xD;&#xA;			Public time As UInt32&#xD;&#xA;			Public dwExtraInfo As UIntPtr&#xD;&#xA;		End Structure&#xD;&#xA;		<Flags()> _&#xD;&#xA;		Private Enum KBDLLHOOKSTRUCTFlags As UInt32&#xD;&#xA;			LLKHF_EXTENDED = &H1&#xD;&#xA;			LLKHF_INJECTED = &H10&#xD;&#xA;			LLKHF_ALTDOWN = &H20&#xD;&#xA;			LLKHF_UP = &H80&#xD;&#xA;		End Enum&#xD;&#xA;		Public Shared Event KeyDown(ByVal Key As Keys)&#xD;&#xA;		Public Shared Event KeyUp(ByVal Key As Keys)&#xD;&#xA;		Private Const WH_KEYBOARD_LL As Integer = 13&#xD;&#xA;		Private Const HC_ACTION As Integer = 0&#xD;&#xA;		Private Const WM_KEYDOWN = &H100&#xD;&#xA;		Private Const WM_KEYUP = &H101&#xD;&#xA;		Private Const WM_SYSKEYDOWN = &H104&#xD;&#xA;		Private Const WM_SYSKEYUP = &H105&#xD;&#xA;		Private Delegate Function KBDLLHookProc(ByVal nCode As Integer, ByVal wParam As IntPtr, ByVal lParam As IntPtr) As Integer&#xD;&#xA;		Private KBDLLHookProcDelegate As KBDLLHookProc = New KBDLLHookProc(AddressOf KeyboardProc)&#xD;&#xA;		Private HHookID As IntPtr = IntPtr.Zero&#xD;&#xA;		Private Function KeyboardProc(ByVal nCode As Integer, ByVal wParam As IntPtr, ByVal lParam As IntPtr) As Integer&#xD;&#xA;			If (nCode = HC_ACTION) Then&#xD;&#xA;				Dim struct As KBDLLHOOKSTRUCT&#xD;&#xA;				Select Case wParam&#xD;&#xA;					Case WM_KEYDOWN, WM_SYSKEYDOWN&#xD;&#xA;						RaiseEvent KeyDown(CType(CType(Marshal.PtrToStructure(lParam, struct.GetType()), KBDLLHOOKSTRUCT).vkCode, Keys))&#xD;&#xA;					Case WM_KEYUP, WM_SYSKEYUP&#xD;&#xA;						RaiseEvent KeyUp(CType(CType(Marshal.PtrToStructure(lParam, struct.GetType()), KBDLLHOOKSTRUCT).vkCode, Keys))&#xD;&#xA;				End Select&#xD;&#xA;			End If&#xD;&#xA;			Return CallNextHookEx(IntPtr.Zero, nCode, wParam, lParam)&#xD;&#xA;		End Function&#xD;&#xA;		Public Sub New()&#xD;&#xA;			HHookID = SetWindowsHookEx(WH_KEYBOARD_LL, KBDLLHookProcDelegate, System.Runtime.InteropServices.Marshal.GetHINSTANCE(System.Reflection.Assembly.GetExecutingAssembly.GetModules()(0)).ToInt32, 0)&#xD;&#xA;			If HHookID = IntPtr.Zero Then&#xD;&#xA;				Throw New Exception(""Could not set keyboard hook"")&#xD;&#xA;			End If&#xD;&#xA;		End Sub&#xD;&#xA;		Protected Overrides Sub Finalize()&#xD;&#xA;			If Not HHookID = IntPtr.Zero Then&#xD;&#xA;				UnhookWindowsHookEx(HHookID)&#xD;&#xA;			End If&#xD;&#xA;			MyBase.Finalize()&#xD;&#xA;		End Sub&#xD;&#xA;	End Class"
2244793480970697103,67,8,"	##&#xD;&#xA;	# @package		Joomla&#xD;&#xA;	# @copyright	Copyright (C) 2005 - 2013 Open Source Matters. All rights reserved.&#xD;&#xA;	# @license		GNU General Public License version 2 or later; see LICENSE.txt&#xD;&#xA;	##&#xD;&#xA;	##&#xD;&#xA;	# READ THIS COMPLETELY IF YOU CHOOSE TO USE THIS FILE!&#xD;&#xA;	#&#xD;&#xA;	# The line just below this section: 'Options +FollowSymLinks' may cause problems&#xD;&#xA;	# with some server configurations.  It is required for use of mod_rewrite, but may already&#xD;&#xA;	# be set by your server administrator in a way that dissallows changing it in&#xD;&#xA;	# your .htaccess file.  If using it causes your server to error out, comment it out (add # to&#xD;&#xA;	# beginning of line), reload your site in your browser and test your sef url's.  If they work,&#xD;&#xA;	# it has been set by your server administrator and you do not need it set here.&#xD;&#xA;	##&#xD;&#xA;	## Can be commented out if causes errors, see notes above.&#xD;&#xA;	Options +FollowSymLinks&#xD;&#xA;	## Mod_rewrite in use.&#xD;&#xA;	RewriteEngine On&#xD;&#xA;	## Begin - Rewrite rules to block out some common exploits.&#xD;&#xA;	# If you experience problems on your site block out the operations listed below&#xD;&#xA;	# This attempts to block the most common type of exploit `attempts` to Joomla!&#xD;&#xA;	#&#xD;&#xA;	# Block out any script trying to base64_encode data within the URL.&#xD;&#xA;	RewriteCond %{QUERY_STRING} base64_encode[^(]*\([^)]*\) [OR]&#xD;&#xA;	# Block out any script that includes a <script> tag in URL.&#xD;&#xA;	RewriteCond %{QUERY_STRING} (<|%3C)([^s]*s)+cript.*(>|%3E) [NC,OR]&#xD;&#xA;	# Block out any script trying to set a PHP GLOBALS variable via URL.&#xD;&#xA;	RewriteCond %{QUERY_STRING} GLOBALS(=|\[|\%[0-9A-Z]{0,2}) [OR]&#xD;&#xA;	# Block out any script trying to modify a _REQUEST variable via URL.&#xD;&#xA;	RewriteCond %{QUERY_STRING} _REQUEST(=|\[|\%[0-9A-Z]{0,2})&#xD;&#xA;	# Return 403 Forbidden header and show the content of the root homepage&#xD;&#xA;	RewriteRule .* index.php [F]&#xD;&#xA;	#&#xD;&#xA;	## End - Rewrite rules to block out some common exploits.&#xD;&#xA;	## Begin - Custom redirects&#xD;&#xA;	#&#xD;&#xA;	# If you need to redirect some pages, or set a canonical non-www to&#xD;&#xA;	# www redirect (or vice versa), place that code here. Ensure those&#xD;&#xA;	# redirects use the correct RewriteRule syntax and the [R=301,L] flags.&#xD;&#xA;	#&#xD;&#xA;	## End - Custom redirects&#xD;&#xA;	##&#xD;&#xA;	# Uncomment following line if your webserver's URL&#xD;&#xA;	# is not directly related to physical file paths.&#xD;&#xA;	# Update Your Joomla! Directory (just / for root).&#xD;&#xA;	##&#xD;&#xA;	# RewriteBase /&#xD;&#xA;	## Begin - Joomla! core SEF Section.&#xD;&#xA;	#&#xD;&#xA;	RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]&#xD;&#xA;	#&#xD;&#xA;	# If the requested path and file is not /index.php and the request&#xD;&#xA;	# has not already been internally rewritten to the index.php script&#xD;&#xA;	RewriteCond %{REQUEST_URI} !^/index\.php&#xD;&#xA;	# and the request is for something within the component folder,&#xD;&#xA;	# or for the site root, or for an extensionless URL, or the&#xD;&#xA;	# requested URL ends with one of the listed extensions&#xD;&#xA;	RewriteCond %{REQUEST_URI} /component/|(/[^.]*|\.(php|html?|feed|pdf|vcf|raw))$ [NC]&#xD;&#xA;	# and the requested path and file doesn't directly match a physical file&#xD;&#xA;	RewriteCond %{REQUEST_FILENAME} !-f&#xD;&#xA;	# and the requested path and file doesn't directly match a physical folder&#xD;&#xA;	RewriteCond %{REQUEST_FILENAME} !-d&#xD;&#xA;	# internally rewrite the request to the index.php script&#xD;&#xA;	RewriteRule .* index.php [L]&#xD;&#xA;	#&#xD;&#xA;	## End - Joomla! core SEF Section."
-5756858009325556333,74,8,"     @import ""http://fonts.googleapis.com/css?family=Droid+Sans"";&#xD;&#xA;        form{&#xD;&#xA;        background-color:#fff&#xD;&#xA;        }&#xD;&#xA;        #maindiv{&#xD;&#xA;        width:960px;&#xD;&#xA;        margin:10px auto;&#xD;&#xA;        padding:10px;&#xD;&#xA;        font-family:'Droid Sans',sans-serif&#xD;&#xA;        }&#xD;&#xA;        #formdiv{&#xD;&#xA;        width:500px;&#xD;&#xA;        float:left;&#xD;&#xA;        text-align:center&#xD;&#xA;        }&#xD;&#xA;        form{&#xD;&#xA;        padding:40px 20px;&#xD;&#xA;        box-shadow:0 0 10px;&#xD;&#xA;        border-radius:2px&#xD;&#xA;        }&#xD;&#xA;        h2{&#xD;&#xA;        margin-left:30px&#xD;&#xA;        }&#xD;&#xA;        .upload{&#xD;&#xA;        background-color:red;&#xD;&#xA;        border:1px solid red;&#xD;&#xA;        color:#fff;&#xD;&#xA;        border-radius:5px;&#xD;&#xA;        padding:10px;&#xD;&#xA;        text-shadow:1px 1px 0 green;&#xD;&#xA;        box-shadow:2px 2px 15px rgba(0,0,0,.75)&#xD;&#xA;        }&#xD;&#xA;        .upload:hover{&#xD;&#xA;        cursor:pointer;&#xD;&#xA;        background:#c20b0b;&#xD;&#xA;        border:1px solid #c20b0b;&#xD;&#xA;        box-shadow:0 0 5px rgba(0,0,0,.75)&#xD;&#xA;        }&#xD;&#xA;        #file{&#xD;&#xA;        color:green;&#xD;&#xA;        padding:5px;&#xD;&#xA;        border:1px dashed #123456;&#xD;&#xA;        background-color:#f9ffe5&#xD;&#xA;        }&#xD;&#xA;        #upload{&#xD;&#xA;        margin-left:45px&#xD;&#xA;        }&#xD;&#xA;        #noerror{&#xD;&#xA;        color:green;&#xD;&#xA;        text-align:left&#xD;&#xA;        }&#xD;&#xA;        #error{&#xD;&#xA;        color:red;&#xD;&#xA;        text-align:left&#xD;&#xA;        }&#xD;&#xA;        #img{&#xD;&#xA;        width:17px;&#xD;&#xA;        border:none;&#xD;&#xA;        height:17px;&#xD;&#xA;        margin-left:-20px;&#xD;&#xA;        margin-bottom:91px&#xD;&#xA;        }&#xD;&#xA;        .abcd{&#xD;&#xA;        text-align:center&#xD;&#xA;        }&#xD;&#xA;        .abcd img{&#xD;&#xA;        height:100px;&#xD;&#xA;        width:100px;&#xD;&#xA;        padding:5px;&#xD;&#xA;        border:1px solid #e8debd&#xD;&#xA;        }&#xD;&#xA;        b{&#xD;&#xA;        color:red&#xD;&#xA;        }"
-5196646714476796821,80,8,"        /*!&#xD;&#xA;     * classie - class helper functions&#xD;&#xA;     * from bonzo https://github.com/ded/bonzo&#xD;&#xA;     * &#xD;&#xA;     * classie.has( elem, 'my-class' ) -> true/false&#xD;&#xA;     * classie.add( elem, 'my-new-class' )&#xD;&#xA;     * classie.remove( elem, 'my-unwanted-class' )&#xD;&#xA;     * classie.toggle( elem, 'my-class' )&#xD;&#xA;     */&#xD;&#xA;    &#xD;&#xA;    /*jshint browser: true, strict: true, undef: true */&#xD;&#xA;    /*global define: false */&#xD;&#xA;    &#xD;&#xA;    ( function( window ) {&#xD;&#xA;    &#xD;&#xA;    'use strict';&#xD;&#xA;    &#xD;&#xA;    // class helper functions from bonzo https://github.com/ded/bonzo&#xD;&#xA;    &#xD;&#xA;    function classReg( className ) {&#xD;&#xA;      return new RegExp(""(^|\\s+)"" + className + ""(\\s+|$)"");&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    // classList support for class management&#xD;&#xA;    // altho to be fair, the api sucks because it won't accept multiple classes at once&#xD;&#xA;    var hasClass, addClass, removeClass;&#xD;&#xA;    &#xD;&#xA;    if ( 'classList' in document.documentElement ) {&#xD;&#xA;      hasClass = function( elem, c ) {&#xD;&#xA;        return elem.classList.contains( c );&#xD;&#xA;      };&#xD;&#xA;      addClass = function( elem, c ) {&#xD;&#xA;        elem.classList.add( c );&#xD;&#xA;      };&#xD;&#xA;      removeClass = function( elem, c ) {&#xD;&#xA;        elem.classList.remove( c );&#xD;&#xA;      };&#xD;&#xA;    }&#xD;&#xA;    else {&#xD;&#xA;      hasClass = function( elem, c ) {&#xD;&#xA;        return classReg( c ).test( elem.className );&#xD;&#xA;      };&#xD;&#xA;      addClass = function( elem, c ) {&#xD;&#xA;        if ( !hasClass( elem, c ) ) {&#xD;&#xA;          elem.className = elem.className + ' ' + c;&#xD;&#xA;        }&#xD;&#xA;      };&#xD;&#xA;      removeClass = function( elem, c ) {&#xD;&#xA;        elem.className = elem.className.replace( classReg( c ), ' ' );&#xD;&#xA;      };&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    function toggleClass( elem, c ) {&#xD;&#xA;      var fn = hasClass( elem, c ) ? removeClass : addClass;&#xD;&#xA;      fn( elem, c );&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    var classie = {&#xD;&#xA;      // full names&#xD;&#xA;      hasClass: hasClass,&#xD;&#xA;      addClass: addClass,&#xD;&#xA;      removeClass: removeClass,&#xD;&#xA;      toggleClass: toggleClass,&#xD;&#xA;      // short names&#xD;&#xA;      has: hasClass,&#xD;&#xA;      add: addClass,&#xD;&#xA;      remove: removeClass,&#xD;&#xA;      toggle: toggleClass&#xD;&#xA;    };&#xD;&#xA;    &#xD;&#xA;    // transport&#xD;&#xA;    if ( typeof define === 'function' && define.amd ) {&#xD;&#xA;      // AMD&#xD;&#xA;      define( classie );&#xD;&#xA;    } else {&#xD;&#xA;      // browser global&#xD;&#xA;      window.classie = classie;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    })( window );"
-2609543088632284984,86,8,"    /* C-Minus BNF Grammar */&#xD;&#xA;    &#xD;&#xA;    %token ELSE&#xD;&#xA;    %token IF&#xD;&#xA;    %token INT&#xD;&#xA;    %token RETURN&#xD;&#xA;    %token VOID&#xD;&#xA;    %token WHILE&#xD;&#xA;    &#xD;&#xA;    %token ID&#xD;&#xA;    %token NUM&#xD;&#xA;    &#xD;&#xA;    %token LTE&#xD;&#xA;    %token GTE&#xD;&#xA;    %token EQUAL&#xD;&#xA;    %token NOTEQUAL&#xD;&#xA;    %%&#xD;&#xA;    &#xD;&#xA;    program : declaration_list ;&#xD;&#xA;    &#xD;&#xA;    declaration_list : declaration_list declaration | declaration ;&#xD;&#xA;    &#xD;&#xA;    declaration : var_declaration | fun_declaration ;&#xD;&#xA;    &#xD;&#xA;    var_declaration : type_specifier ID ';'&#xD;&#xA;                    | type_specifier ID '[' NUM ']' ';' ;&#xD;&#xA;    &#xD;&#xA;    type_specifier : INT | VOID ;&#xD;&#xA;    &#xD;&#xA;    fun_declaration : type_specifier ID '(' params ')' compound_stmt ;&#xD;&#xA;    &#xD;&#xA;    params : param_list | VOID ;&#xD;&#xA;    &#xD;&#xA;    param_list : param_list ',' param&#xD;&#xA;               | param ;&#xD;&#xA;    &#xD;&#xA;    param : type_specifier ID | type_specifier ID '[' ']' ;&#xD;&#xA;    &#xD;&#xA;    compound_stmt : '{' local_declarations statement_list '}' ;&#xD;&#xA;    &#xD;&#xA;    local_declarations : local_declarations var_declaration&#xD;&#xA;                       | /* empty */ ;&#xD;&#xA;    &#xD;&#xA;    statement_list : statement_list statement&#xD;&#xA;                   | /* empty */ ;&#xD;&#xA;    &#xD;&#xA;    statement : expression_stmt&#xD;&#xA;              | compound_stmt&#xD;&#xA;              | selection_stmt&#xD;&#xA;              | iteration_stmt&#xD;&#xA;              | return_stmt ;&#xD;&#xA;    &#xD;&#xA;    expression_stmt : expression ';'&#xD;&#xA;                    | ';' ;&#xD;&#xA;    &#xD;&#xA;    selection_stmt : IF '(' expression ')' statement&#xD;&#xA;                   | IF '(' expression ')' statement ELSE statement ;&#xD;&#xA;    &#xD;&#xA;    iteration_stmt : WHILE '(' expression ')' statement ;&#xD;&#xA;    &#xD;&#xA;    return_stmt : RETURN ';' | RETURN expression ';' ;&#xD;&#xA;    &#xD;&#xA;    expression : var '=' expression | simple_expression ;&#xD;&#xA;    &#xD;&#xA;    var : ID | ID '[' expression ']' ;&#xD;&#xA;    &#xD;&#xA;    simple_expression : additive_expression relop additive_expression&#xD;&#xA;                      | additive_expression ;&#xD;&#xA;    &#xD;&#xA;    relop : LTE | '<' | '>' | GTE | EQUAL | NOTEQUAL ;&#xD;&#xA;    &#xD;&#xA;    additive_expression : additive_expression addop term | term ;&#xD;&#xA;    &#xD;&#xA;    addop : '+' | '-' ;&#xD;&#xA;    &#xD;&#xA;    term : term mulop factor | factor ;&#xD;&#xA;    &#xD;&#xA;    mulop : '*' | '/' ;&#xD;&#xA;    &#xD;&#xA;    factor : '(' expression ')' | var | call | NUM ;&#xD;&#xA;    &#xD;&#xA;    call : ID '(' args ')' ;&#xD;&#xA;    &#xD;&#xA;    args : arg_list | /* empty */ ;&#xD;&#xA;    &#xD;&#xA;    arg_list : arg_list ',' expression | expression ;"
7640677867749398501,86,8,"        public class MainActivity extends AppCompatActivity&#xD;&#xA;                implements NavigationView.OnNavigationItemSelectedListener {&#xD;&#xA;        &#xD;&#xA;            @Override&#xD;&#xA;            protected void onCreate(Bundle savedInstanceState) {&#xD;&#xA;                super.onCreate(savedInstanceState);&#xD;&#xA;                setContentView(R.layout.activity_main);&#xD;&#xA;                Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);&#xD;&#xA;                setSupportActionBar(toolbar);&#xD;&#xA;        &#xD;&#xA;                FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);&#xD;&#xA;                fab.setOnClickListener(new View.OnClickListener() {&#xD;&#xA;                    @Override&#xD;&#xA;                    public void onClick(View view) {&#xD;&#xA;                        Snackbar.make(view, ""Replace with your own action"", Snackbar.LENGTH_LONG)&#xD;&#xA;                                .setAction(""Action"", null).show();&#xD;&#xA;                    }&#xD;&#xA;                });&#xD;&#xA;        &#xD;&#xA;                DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);&#xD;&#xA;                ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(&#xD;&#xA;                        this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);&#xD;&#xA;                drawer.setDrawerListener(toggle);&#xD;&#xA;                toggle.syncState();&#xD;&#xA;        &#xD;&#xA;                NavigationView navigationView = (NavigationView) findViewById(R.id.nav_view);&#xD;&#xA;                navigationView.setNavigationItemSelectedListener(this);&#xD;&#xA;        &#xD;&#xA;            }&#xD;&#xA;            @Override&#xD;&#xA;            public void onBackPressed() {&#xD;&#xA;                DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);&#xD;&#xA;                if (drawer.isDrawerOpen(GravityCompat.START)) {&#xD;&#xA;                    drawer.closeDrawer(GravityCompat.START);&#xD;&#xA;                } else {&#xD;&#xA;                    super.onBackPressed();&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            @Override&#xD;&#xA;            public boolean onCreateOptionsMenu(Menu menu) {&#xD;&#xA;                // Inflate the menu; this adds items to the action bar if it is present.&#xD;&#xA;                getMenuInflater().inflate(R.menu.main, menu);&#xD;&#xA;                return true;&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            @Override&#xD;&#xA;            public boolean onOptionsItemSelected(MenuItem item) {&#xD;&#xA;                // Handle action bar item clicks here. The action bar will&#xD;&#xA;                // automatically handle clicks on the Home/Up button, so long&#xD;&#xA;                // as you specify a parent activity in AndroidManifest.xml.&#xD;&#xA;                int id = item.getItemId();&#xD;&#xA;        &#xD;&#xA;                //noinspection SimplifiableIfStatement&#xD;&#xA;                if (id == R.id.action_settings) {&#xD;&#xA;                    return true;&#xD;&#xA;                }&#xD;&#xA;        &#xD;&#xA;                return super.onOptionsItemSelected(item);&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            @SuppressWarnings(""StatementWithEmptyBody"")&#xD;&#xA;            @Override&#xD;&#xA;            public boolean onNavigationItemSelected(MenuItem item) {&#xD;&#xA;                // Handle navigation view item clicks here.&#xD;&#xA;                int id = item.getItemId();&#xD;&#xA;        &#xD;&#xA;                if (id == R.id.nav_camera) {&#xD;&#xA;                    // Handle the camera action&#xD;&#xA;                } else if (id == R.id.nav_gallery) {&#xD;&#xA;        &#xD;&#xA;                } else if (id == R.id.nav_slideshow) {&#xD;&#xA;        &#xD;&#xA;                } else if (id == R.id.nav_manage) {&#xD;&#xA;        &#xD;&#xA;                } else if (id == R.id.nav_share) {&#xD;&#xA;        &#xD;&#xA;                } else if (id == R.id.nav_send) {&#xD;&#xA;        &#xD;&#xA;                }&#xD;&#xA;        &#xD;&#xA;                DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);&#xD;&#xA;                drawer.closeDrawer(GravityCompat.START);&#xD;&#xA;                return true;&#xD;&#xA;            }&#xD;&#xA;        }"
1402827098056827123,88,8,"           /* Style the Image Used to Trigger the Modal */&#xD;&#xA;           #myImg {&#xD;&#xA;            border-radius: 5px;&#xD;&#xA;            cursor: pointer;&#xD;&#xA;            transition: 0.3s;&#xD;&#xA;             }&#xD;&#xA;    &#xD;&#xA;             #myImg:hover {opacity: 0.7;}&#xD;&#xA;    &#xD;&#xA;              /* The Modal (background) */&#xD;&#xA;             .modal {&#xD;&#xA;              display: none; /* Hidden by default */&#xD;&#xA;              position: fixed; /* Stay in place */&#xD;&#xA;              z-index: 1; /* Sit on top */&#xD;&#xA;              padding-top: 100px; /* Location of the box */&#xD;&#xA;              left: 0;&#xD;&#xA;              top: 0;&#xD;&#xA;              width: 100%; /* Full width */&#xD;&#xA;              height: 100%; /* Full height */&#xD;&#xA;              overflow: auto; /* Enable scroll if needed */&#xD;&#xA;              background-color: rgb(0,0,0); /* Fallback color */&#xD;&#xA;              background-color: rgba(0,0,0,0.9); /* Black w/ opacity */&#xD;&#xA;              }&#xD;&#xA;    &#xD;&#xA;              /* Modal Content (Image) */&#xD;&#xA;              .modal-content {&#xD;&#xA;              margin: auto;&#xD;&#xA;              display: block;&#xD;&#xA;              width: 80%;&#xD;&#xA;              max-width: 700px;&#xD;&#xA;              }&#xD;&#xA;    &#xD;&#xA;             /* Caption of Modal Image (Image Text) - Same Width as the Image */&#xD;&#xA;              #caption {&#xD;&#xA;                 margin: auto;&#xD;&#xA;                     display: block;&#xD;&#xA;                   width: 80%;&#xD;&#xA;               max-width: 700px;&#xD;&#xA;               text-align: center;&#xD;&#xA;                  color: #ccc;&#xD;&#xA;        padding: 10px 0;&#xD;&#xA;        height: 150px;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    /* Add Animation - Zoom in the Modal */&#xD;&#xA;    .modal-content, #caption { &#xD;&#xA;        -webkit-animation-name: zoom;&#xD;&#xA;        -webkit-animation-duration: 0.6s;&#xD;&#xA;        animation-name: zoom;&#xD;&#xA;        animation-duration: 0.6s;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    @-webkit-keyframes zoom {&#xD;&#xA;        from {-webkit-transform:scale(0)} &#xD;&#xA;        to {-webkit-transform:scale(1)}&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    @keyframes zoom {&#xD;&#xA;        from {transform:scale(0)} &#xD;&#xA;        to {transform:scale(1)}&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    /* The Close Button */&#xD;&#xA;    .close {&#xD;&#xA;        position: absolute;&#xD;&#xA;        top: 15px;&#xD;&#xA;        right: 35px;&#xD;&#xA;        color: #f1f1f1;&#xD;&#xA;        font-size: 40px;&#xD;&#xA;        font-weight: bold;&#xD;&#xA;        transition: 0.3s;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .close:hover,&#xD;&#xA;    .close:focus {&#xD;&#xA;        color: #bbb;&#xD;&#xA;        text-decoration: none;&#xD;&#xA;        cursor: pointer;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    /* 100% Image Width on Smaller Screens */&#xD;&#xA;    @media only screen and (max-width: 700px){&#xD;&#xA;        .modal-content {&#xD;&#xA;            width: 100%;&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    "
3516347676349951685,96,8,"    [TableMapping(""Users"")]&#xD;&#xA;    public class User : EntityBase&#xD;&#xA;    {&#xD;&#xA;        #region Constructor(s)&#xD;&#xA;        public AppUser()&#xD;&#xA;        {&#xD;&#xA;            BookCollection = new BookCollection();&#xD;&#xA;        }&#xD;&#xA;        #endregion&#xD;&#xA;        #region Properties&#xD;&#xA;        #region Default Properties - Direct Field Mapping using DataFieldMappingAttribute&#xD;&#xA;        private System.Int32 _UserId;&#xD;&#xA;        private System.String _FirstName;&#xD;&#xA;        private System.String _LastName;&#xD;&#xA;        private System.String _UserName;&#xD;&#xA;        private System.Boolean _IsActive;&#xD;&#xA;        [DataFieldMapping(""UserID"")]&#xD;&#xA;        [DataObjectFieldAttribute(true, true, false)]&#xD;&#xA;        [NotNullOrEmpty(Message = ""UserID From Users Table Is Required."")]&#xD;&#xA;        public override int Id&#xD;&#xA;        {&#xD;&#xA;            get&#xD;&#xA;            {&#xD;&#xA;                return _UserId;&#xD;&#xA;            }&#xD;&#xA;            set&#xD;&#xA;            {&#xD;&#xA;                _UserId = value;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        [DataFieldMapping(""UserName"")]&#xD;&#xA;        [Searchable]&#xD;&#xA;        [NotNullOrEmpty(Message = ""Username Is Required."")]&#xD;&#xA;        public string UserName&#xD;&#xA;        {&#xD;&#xA;            get&#xD;&#xA;            {&#xD;&#xA;                return _UserName;&#xD;&#xA;            }&#xD;&#xA;            set&#xD;&#xA;            {&#xD;&#xA;                _UserName = value;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        [DataFieldMapping(""FirstName"")]&#xD;&#xA;        [Searchable]&#xD;&#xA;        public string FirstName&#xD;&#xA;        {&#xD;&#xA;            get&#xD;&#xA;            {&#xD;&#xA;                return _FirstName;&#xD;&#xA;            }&#xD;&#xA;            set&#xD;&#xA;            {&#xD;&#xA;                _FirstName = value;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        [DataFieldMapping(""LastName"")]&#xD;&#xA;        [Searchable]&#xD;&#xA;        public string LastName&#xD;&#xA;        {&#xD;&#xA;            get&#xD;&#xA;            {&#xD;&#xA;                return _LastName;&#xD;&#xA;            }&#xD;&#xA;            set&#xD;&#xA;            {&#xD;&#xA;                _LastName = value;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        [DataFieldMapping(""IsActive"")]&#xD;&#xA;        public bool IsActive&#xD;&#xA;        {&#xD;&#xA;            get&#xD;&#xA;            {&#xD;&#xA;                return _IsActive;&#xD;&#xA;            }&#xD;&#xA;            set&#xD;&#xA;            {&#xD;&#xA;                _IsActive = value;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        #region One-To-Many Mappings&#xD;&#xA;        public BookCollection Books { get; set; }&#xD;&#xA;        #endregion&#xD;&#xA;        #region Derived Properties&#xD;&#xA;        public string FullName { get { return this.FirstName + "" "" + this.LastName; } }&#xD;&#xA;        #endregion&#xD;&#xA;        #endregion&#xD;&#xA;        public override bool Validate()&#xD;&#xA;        {&#xD;&#xA;            bool baseValid = base.Validate();&#xD;&#xA;            bool localValid = Books.Validate();&#xD;&#xA;            return baseValid && localValid;&#xD;&#xA;        }&#xD;&#xA;    }"
6666567173282868368,101,8,"	import android.util.Log;&#xD;&#xA;	import org.json.JSONException;&#xD;&#xA;	import org.json.JSONObject;&#xD;&#xA;	import java.io.BufferedInputStream;&#xD;&#xA;	import java.io.BufferedReader;&#xD;&#xA;	import java.io.DataOutputStream;&#xD;&#xA;	import java.io.IOException;&#xD;&#xA;	import java.io.InputStream;&#xD;&#xA;	import java.io.InputStreamReader;&#xD;&#xA;	import java.io.UnsupportedEncodingException;&#xD;&#xA;	import java.net.HttpURLConnection;&#xD;&#xA;	import java.net.URL;&#xD;&#xA;	import java.net.URLEncoder;&#xD;&#xA;	import java.util.HashMap;&#xD;&#xA;    public class JSONParser {&#xD;&#xA;		String charset = ""UTF-8"";&#xD;&#xA;		HttpURLConnection conn;&#xD;&#xA;		DataOutputStream wr;&#xD;&#xA;		StringBuilder result;&#xD;&#xA;		URL urlObj;&#xD;&#xA;		JSONObject jObj = null;&#xD;&#xA;		StringBuilder sbParams;&#xD;&#xA;		String paramsString;&#xD;&#xA;		public JSONObject makeHttpRequest(String url, String method,&#xD;&#xA;										  HashMap<String, String> params) {&#xD;&#xA;			sbParams = new StringBuilder();&#xD;&#xA;			int i = 0;&#xD;&#xA;			for (String key : params.keySet()) {&#xD;&#xA;				try {&#xD;&#xA;					if (i != 0){&#xD;&#xA;						sbParams.append(""&"");&#xD;&#xA;					}&#xD;&#xA;					sbParams.append(key).append(""="")&#xD;&#xA;							.append(URLEncoder.encode(params.get(key), charset));&#xD;&#xA;				} catch (UnsupportedEncodingException e) {&#xD;&#xA;					e.printStackTrace();&#xD;&#xA;				}&#xD;&#xA;				i++;&#xD;&#xA;			}&#xD;&#xA;			if (method.equals(""POST"")) {&#xD;&#xA;				// request method is POST&#xD;&#xA;				try {&#xD;&#xA;					urlObj = new URL(url);&#xD;&#xA;					conn = (HttpURLConnection) urlObj.openConnection();&#xD;&#xA;					conn.setDoOutput(true);&#xD;&#xA;					conn.setRequestMethod(""POST"");&#xD;&#xA;					conn.setRequestProperty(""Accept-Charset"", charset);&#xD;&#xA;					conn.setReadTimeout(10000);&#xD;&#xA;					conn.setConnectTimeout(15000);&#xD;&#xA;					conn.connect();&#xD;&#xA;					paramsString = sbParams.toString();&#xD;&#xA;					wr = new DataOutputStream(conn.getOutputStream());&#xD;&#xA;					wr.writeBytes(paramsString);&#xD;&#xA;					wr.flush();&#xD;&#xA;					wr.close();&#xD;&#xA;				} catch (IOException e) {&#xD;&#xA;					e.printStackTrace();&#xD;&#xA;				}&#xD;&#xA;			}&#xD;&#xA;			else if(method.equals(""GET"")){&#xD;&#xA;				// request method is GET&#xD;&#xA;				if (sbParams.length() != 0) {&#xD;&#xA;					url += ""?"" + sbParams.toString();&#xD;&#xA;				}&#xD;&#xA;				try {&#xD;&#xA;					urlObj = new URL(url);&#xD;&#xA;					conn = (HttpURLConnection) urlObj.openConnection();&#xD;&#xA;					conn.setDoOutput(false);&#xD;&#xA;					conn.setRequestMethod(""GET"");&#xD;&#xA;					conn.setRequestProperty(""Accept-Charset"", charset);&#xD;&#xA;					conn.setConnectTimeout(15000);&#xD;&#xA;					conn.connect();&#xD;&#xA;				} catch (IOException e) {&#xD;&#xA;					e.printStackTrace();&#xD;&#xA;				}&#xD;&#xA;			}&#xD;&#xA;			try {&#xD;&#xA;				//Receive the response from the server&#xD;&#xA;				InputStream in = new BufferedInputStream(conn.getInputStream());&#xD;&#xA;				BufferedReader reader = new BufferedReader(new InputStreamReader(in));&#xD;&#xA;				result = new StringBuilder();&#xD;&#xA;				String line;&#xD;&#xA;				while ((line = reader.readLine()) != null) {&#xD;&#xA;					result.append(line);&#xD;&#xA;				}&#xD;&#xA;				Log.d(""JSON Parser"", ""result: "" + result.toString());&#xD;&#xA;			} catch (IOException e) {&#xD;&#xA;				e.printStackTrace();&#xD;&#xA;			}&#xD;&#xA;			conn.disconnect();&#xD;&#xA;			// try parse the string to a JSON object&#xD;&#xA;			try {&#xD;&#xA;				jObj = new JSONObject(result.toString());&#xD;&#xA;			} catch (JSONException e) {&#xD;&#xA;				Log.e(""JSON Parser"", ""Error parsing data "" + e.toString());&#xD;&#xA;			}&#xD;&#xA;			// return JSON Object&#xD;&#xA;			return jObj;&#xD;&#xA;		}&#xD;&#xA;	}&#xD;&#xA;	"
-7153009120017431773,107,8,"         # 1.To use URL Alias you need to be running apache with mod_rewrite enabled. &#xD;&#xA;            &#xD;&#xA;            &#xD;&#xA;            &#xD;&#xA;            # 2. In your opencart directory rename htaccess.txt to .htaccess.&#xD;&#xA;            &#xD;&#xA;            &#xD;&#xA;            &#xD;&#xA;            # For any support issues please visit: http://www.opencart.com&#xD;&#xA;            &#xD;&#xA;            &#xD;&#xA;            &#xD;&#xA;            Options +FollowSymlinks&#xD;&#xA;            &#xD;&#xA;            &#xD;&#xA;            &#xD;&#xA;            # Prevent Directoy listing &#xD;&#xA;            &#xD;&#xA;            Options -Indexes&#xD;&#xA;            &#xD;&#xA;            &#xD;&#xA;            &#xD;&#xA;            # Prevent Direct Access to files&#xD;&#xA;            &#xD;&#xA;            <FilesMatch ""\.(tpl|ini|log)"">&#xD;&#xA;            &#xD;&#xA;             Order deny,allow&#xD;&#xA;            &#xD;&#xA;             Deny from all&#xD;&#xA;            &#xD;&#xA;            </FilesMatch>&#xD;&#xA;            &#xD;&#xA;            &#xD;&#xA;            &#xD;&#xA;            # SEO URL Settings&#xD;&#xA;            &#xD;&#xA;            RewriteEngine On&#xD;&#xA;            &#xD;&#xA;            # If your opencart installation does not run on the main web folder make sure you folder it does run in ie. / becomes /shop/ &#xD;&#xA;            &#xD;&#xA;            &#xD;&#xA;            &#xD;&#xA;            RewriteBase /&#xD;&#xA;            &#xD;&#xA;            RewriteRule ^sitemap.xml$ index.php?route=feed/google_sitemap [L]&#xD;&#xA;            &#xD;&#xA;            RewriteRule ^googlebase.xml$ index.php?route=feed/google_base [L]&#xD;&#xA;            &#xD;&#xA;            RewriteRule ^download/(.*) /index.php?route=error/not_found [L]&#xD;&#xA;            &#xD;&#xA;            RewriteCond %{REQUEST_FILENAME} !-f&#xD;&#xA;            &#xD;&#xA;            RewriteCond %{REQUEST_FILENAME} !-d&#xD;&#xA;            &#xD;&#xA;            RewriteCond %{REQUEST_URI} !.*\.(ico|gif|jpg|jpeg|png|js|css)&#xD;&#xA;            &#xD;&#xA;            RewriteRule ^([^?]*) index.php?_route_=$1 [L,QSA]&#xD;&#xA;            &#xD;&#xA;            &#xD;&#xA;            &#xD;&#xA;            ### Additional Settings that may need to be enabled for some servers &#xD;&#xA;            &#xD;&#xA;            ### Uncomment the commands by removing the # sign in front of it.&#xD;&#xA;            &#xD;&#xA;            ### If you get an ""Internal Server Error 500"" after enabling any of the following settings, restore the # as this means your host doesn't allow that.&#xD;&#xA;            &#xD;&#xA;            &#xD;&#xA;            &#xD;&#xA;            # 1. If your cart only allows you to add one item at a time, it is possible register_globals is on. This may work to disable it:&#xD;&#xA;            &#xD;&#xA;            # php_flag register_globals off&#xD;&#xA;            &#xD;&#xA;            &#xD;&#xA;            &#xD;&#xA;            # 2. If your cart has magic quotes enabled, This may work to disable it:&#xD;&#xA;            &#xD;&#xA;            # php_flag magic_quotes_gpc Off&#xD;&#xA;            &#xD;&#xA;            &#xD;&#xA;            &#xD;&#xA;            # 3. Set max upload file size. Most hosts will limit this and not allow it to be overridden but you can try&#xD;&#xA;            &#xD;&#xA;            # php_value upload_max_filesize 999M&#xD;&#xA;            &#xD;&#xA;            &#xD;&#xA;            &#xD;&#xA;            # 4. set max post size. uncomment this line if you have a lot of product options or are getting errors where forms are not saving all fields&#xD;&#xA;            &#xD;&#xA;            # php_value post_max_size 999M&#xD;&#xA;            &#xD;&#xA;            &#xD;&#xA;            &#xD;&#xA;            # 5. set max time script can take. uncomment this line if you have a lot of product options or are getting errors where forms are not saving all fields&#xD;&#xA;            &#xD;&#xA;            # php_value max_execution_time 200&#xD;&#xA;            &#xD;&#xA;            &#xD;&#xA;            &#xD;&#xA;            # 6. set max time for input to be recieved. Uncomment this line if you have a lot of product options or are getting errors where forms are not saving all fields&#xD;&#xA;            &#xD;&#xA;            # php_value max_input_time 200&#xD;&#xA;            &#xD;&#xA;            &#xD;&#xA;            &#xD;&#xA;            # 7. disable open_basedir limitations&#xD;&#xA;            &#xD;&#xA;            # php_admin_value open_basedir none"
-2580984027424161964,114,8,"    <?xml version=""1.0"" encoding=""UTF-8""?>&#xD;&#xA;    <project name=""xslt-converter"" basedir=""."" default=""package"">&#xD;&#xA;        <property name=""version"" value=""1.6""/>&#xD;&#xA;        <property name=""haltonfailure"" value=""no""/>&#xD;&#xA;        <property name=""out"" value=""out""/>&#xD;&#xA;        <property name=""production.src"" value=""src""/>&#xD;&#xA;        <property name=""production.lib"" value=""lib""/>&#xD;&#xA;        <property name=""production.resources"" value=""config""/>&#xD;&#xA;        <property name=""production.classes"" value=""${out}/production/${ant.project.name}""/>&#xD;&#xA;        <property name=""test.src"" value=""test""/>&#xD;&#xA;        <property name=""test.lib"" value=""lib""/>&#xD;&#xA;        <property name=""test.resources"" value=""config""/>&#xD;&#xA;        <property name=""test.classes"" value=""${out}/test/${ant.project.name}""/>&#xD;&#xA;        <property name=""exploded"" value=""out/exploded/${ant.project.name}""/>&#xD;&#xA;        <property name=""exploded.classes"" value=""${exploded}/WEB-INF/classes""/>&#xD;&#xA;        <property name=""exploded.lib"" value=""${exploded}/WEB-INF/lib""/>&#xD;&#xA;        <property name=""reports.out"" value=""${out}/reports""/>&#xD;&#xA;        <property name=""junit.out"" value=""${reports.out}/junit""/>&#xD;&#xA;        <property name=""testng.out"" value=""${reports.out}/testng""/>&#xD;&#xA;        <path id=""production.class.path"">&#xD;&#xA;            <pathelement location=""${production.classes}""/>&#xD;&#xA;            <pathelement location=""${production.resources}""/>&#xD;&#xA;            <fileset dir=""${production.lib}"">&#xD;&#xA;                <include name=""**/*.jar""/>&#xD;&#xA;                <exclude name=""**/junit*.jar""/>&#xD;&#xA;                <exclude name=""**/*test*.jar""/>&#xD;&#xA;            </fileset>&#xD;&#xA;        </path>&#xD;&#xA;        <path id=""test.class.path"">                            &#xD;&#xA;            <path refid=""production.class.path""/>&#xD;&#xA;            <pathelement location=""${test.classes}""/>&#xD;&#xA;            <pathelement location=""${test.resources}""/>&#xD;&#xA;            <fileset dir=""${test.lib}"">&#xD;&#xA;                <include name=""**/junit*.jar""/>&#xD;&#xA;                <include name=""**/*test*.jar""/>&#xD;&#xA;            </fileset>&#xD;&#xA;        </path>&#xD;&#xA;        <path id=""testng.class.path"">&#xD;&#xA;            <fileset dir=""${test.lib}"">&#xD;&#xA;                <include name=""**/testng*.jar""/>&#xD;&#xA;            </fileset>&#xD;&#xA;        </path>&#xD;&#xA;        <available file=""${out}"" property=""outputExists""/>&#xD;&#xA;        <target name=""clean"" description=""remove all generated artifacts"" if=""outputExists"">&#xD;&#xA;            <delete dir=""${out}"" includeEmptyDirs=""true""/>&#xD;&#xA;            <delete dir=""${reports.out}"" includeEmptyDirs=""true""/>&#xD;&#xA;        </target>&#xD;&#xA;        <target name=""create"" description=""create the output directories"" unless=""outputExists"">&#xD;&#xA;            <mkdir dir=""${production.classes}""/>&#xD;&#xA;            <mkdir dir=""${test.classes}""/>&#xD;&#xA;            <mkdir dir=""${reports.out}""/>&#xD;&#xA;            <mkdir dir=""${junit.out}""/>&#xD;&#xA;            <mkdir dir=""${testng.out}""/>&#xD;&#xA;            <mkdir dir=""${exploded.classes}""/>&#xD;&#xA;            <mkdir dir=""${exploded.lib}""/>&#xD;&#xA;        </target>&#xD;&#xA;        <target name=""compile"" description=""compile all .java source files"" depends=""create"">&#xD;&#xA;            <!-- Debug output&#xD;&#xA;                    <property name=""production.class.path"" refid=""production.class.path""/>&#xD;&#xA;                    <echo message=""${production.class.path}""/>&#xD;&#xA;            -->&#xD;&#xA;            <javac srcdir=""src"" destdir=""${out}/production/${ant.project.name}"" debug=""on"" source=""${version}"">&#xD;&#xA;                <classpath refid=""production.class.path""/>&#xD;&#xA;                <include name=""**/*.java""/>&#xD;&#xA;                <exclude name=""**/*Test.java""/>&#xD;&#xA;            </javac>&#xD;&#xA;            <javac srcdir=""${test.src}"" destdir=""${out}/test/${ant.project.name}"" debug=""on"" source=""${version}"">&#xD;&#xA;                <classpath refid=""test.class.path""/>&#xD;&#xA;                <include name=""**/*Test.java""/>&#xD;&#xA;            </javac>&#xD;&#xA;        </target>&#xD;&#xA;        <target name=""junit-test"" description=""run all junit tests"" depends=""compile"">&#xD;&#xA;            <!-- Debug output&#xD;&#xA;                    <property name=""test.class.path"" refid=""test.class.path""/>&#xD;&#xA;                    <echo message=""${test.class.path}""/>&#xD;&#xA;            -->&#xD;&#xA;            <junit printsummary=""yes"" haltonfailure=""${haltonfailure}"">&#xD;&#xA;                <classpath refid=""test.class.path""/>&#xD;&#xA;                <formatter type=""xml""/>&#xD;&#xA;                <batchtest fork=""yes"" todir=""${junit.out}"">&#xD;&#xA;                    <fileset dir=""${test.src}"">&#xD;&#xA;                        <include name=""**/*Test.java""/>&#xD;&#xA;                    </fileset>&#xD;&#xA;                </batchtest>&#xD;&#xA;            </junit>&#xD;&#xA;            <junitreport todir=""${junit.out}"">&#xD;&#xA;                <fileset dir=""${junit.out}"">&#xD;&#xA;                    <include name=""TEST-*.xml""/>&#xD;&#xA;                </fileset>&#xD;&#xA;                <report todir=""${junit.out}"" format=""frames""/>&#xD;&#xA;            </junitreport>&#xD;&#xA;        </target>&#xD;&#xA;        <taskdef resource=""testngtasks"" classpathref=""testng.class.path""/>&#xD;&#xA;        <target name=""testng-test"" description=""run all testng tests"" depends=""compile"">&#xD;&#xA;            <!-- Debug output&#xD;&#xA;                    <property name=""test.class.path"" refid=""test.class.path""/>&#xD;&#xA;                    <echo message=""${test.class.path}""/>&#xD;&#xA;            -->&#xD;&#xA;            <testng classpathref=""test.class.path"" outputDir=""${testng.out}"" haltOnFailure=""${haltonfailure}"" verbose=""2"" parallel=""methods"" threadcount=""50"">&#xD;&#xA;                <classfileset dir=""${out}/test/${ant.project.name}"" includes=""**/*.class""/>&#xD;&#xA;            </testng>&#xD;&#xA;        </target>&#xD;&#xA;        <target name=""exploded"" description=""create exploded deployment"" depends=""testng-test"">&#xD;&#xA;            <copy todir=""${exploded.classes}"">&#xD;&#xA;                <fileset dir=""${production.classes}""/>&#xD;&#xA;            </copy>&#xD;&#xA;            <copy todir=""${exploded.lib}"">&#xD;&#xA;                <fileset dir=""${production.lib}""/>&#xD;&#xA;            </copy>&#xD;&#xA;        </target>&#xD;&#xA;        <target name=""package"" description=""create package file"" depends=""exploded"">&#xD;&#xA;            <jar destfile=""${out}/${ant.project.name}.jar"" basedir=""${production.classes}"" includes=""**/*.class""/>&#xD;&#xA;        </target>&#xD;&#xA;    </project>"
-4309990469071791560,142,8,"    /**&#xD;&#xA;     *&#xD;&#xA;     *  Base64 encode / decode&#xD;&#xA;     *  http://www.webtoolkit.info/&#xD;&#xA;     *&#xD;&#xA;     **/&#xD;&#xA;     &#xD;&#xA;    var Base64 = {&#xD;&#xA;     &#xD;&#xA;        // private property&#xD;&#xA;        _keyStr : ""ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="",&#xD;&#xA;     &#xD;&#xA;        // public method for encoding&#xD;&#xA;        encode : function (input) {&#xD;&#xA;            var output = """";&#xD;&#xA;            var chr1, chr2, chr3, enc1, enc2, enc3, enc4;&#xD;&#xA;            var i = 0;&#xD;&#xA;     &#xD;&#xA;            input = Base64._utf8_encode(input);&#xD;&#xA;     &#xD;&#xA;            while (i < input.length) {&#xD;&#xA;     &#xD;&#xA;                chr1 = input.charCodeAt(i++);&#xD;&#xA;                chr2 = input.charCodeAt(i++);&#xD;&#xA;                chr3 = input.charCodeAt(i++);&#xD;&#xA;     &#xD;&#xA;                enc1 = chr1 >> 2;&#xD;&#xA;                enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);&#xD;&#xA;                enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);&#xD;&#xA;                enc4 = chr3 & 63;&#xD;&#xA;     &#xD;&#xA;                if (isNaN(chr2)) {&#xD;&#xA;                    enc3 = enc4 = 64;&#xD;&#xA;                } else if (isNaN(chr3)) {&#xD;&#xA;                    enc4 = 64;&#xD;&#xA;                }&#xD;&#xA;     &#xD;&#xA;                output = output +&#xD;&#xA;                this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +&#xD;&#xA;                this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);&#xD;&#xA;     &#xD;&#xA;            }&#xD;&#xA;     &#xD;&#xA;            return output;&#xD;&#xA;        },&#xD;&#xA;     &#xD;&#xA;        // public method for decoding&#xD;&#xA;        decode : function (input) {&#xD;&#xA;            var output = """";&#xD;&#xA;            var chr1, chr2, chr3;&#xD;&#xA;            var enc1, enc2, enc3, enc4;&#xD;&#xA;            var i = 0;&#xD;&#xA;     &#xD;&#xA;            input = input.replace(/[^A-Za-z0-9\+\/\=]/g, """");&#xD;&#xA;     &#xD;&#xA;            while (i < input.length) {&#xD;&#xA;     &#xD;&#xA;                enc1 = this._keyStr.indexOf(input.charAt(i++));&#xD;&#xA;                enc2 = this._keyStr.indexOf(input.charAt(i++));&#xD;&#xA;                enc3 = this._keyStr.indexOf(input.charAt(i++));&#xD;&#xA;                enc4 = this._keyStr.indexOf(input.charAt(i++));&#xD;&#xA;     &#xD;&#xA;                chr1 = (enc1 << 2) | (enc2 >> 4);&#xD;&#xA;                chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);&#xD;&#xA;                chr3 = ((enc3 & 3) << 6) | enc4;&#xD;&#xA;     &#xD;&#xA;                output = output + String.fromCharCode(chr1);&#xD;&#xA;     &#xD;&#xA;                if (enc3 != 64) {&#xD;&#xA;                    output = output + String.fromCharCode(chr2);&#xD;&#xA;                }&#xD;&#xA;                if (enc4 != 64) {&#xD;&#xA;                    output = output + String.fromCharCode(chr3);&#xD;&#xA;                }&#xD;&#xA;     &#xD;&#xA;            }&#xD;&#xA;     &#xD;&#xA;            output = Base64._utf8_decode(output);&#xD;&#xA;     &#xD;&#xA;            return output;&#xD;&#xA;     &#xD;&#xA;        },&#xD;&#xA;     &#xD;&#xA;        // private method for UTF-8 encoding&#xD;&#xA;        _utf8_encode : function (string) {&#xD;&#xA;            string = string.replace(/\r\n/g,""\n"");&#xD;&#xA;            var utftext = """";&#xD;&#xA;     &#xD;&#xA;            for (var n = 0; n < string.length; n++) {&#xD;&#xA;     &#xD;&#xA;                var c = string.charCodeAt(n);&#xD;&#xA;     &#xD;&#xA;                if (c < 128) {&#xD;&#xA;                    utftext += String.fromCharCode(c);&#xD;&#xA;                }&#xD;&#xA;                else if((c > 127) && (c < 2048)) {&#xD;&#xA;                    utftext += String.fromCharCode((c >> 6) | 192);&#xD;&#xA;                    utftext += String.fromCharCode((c & 63) | 128);&#xD;&#xA;                }&#xD;&#xA;                else {&#xD;&#xA;                    utftext += String.fromCharCode((c >> 12) | 224);&#xD;&#xA;                    utftext += String.fromCharCode(((c >> 6) & 63) | 128);&#xD;&#xA;                    utftext += String.fromCharCode((c & 63) | 128);&#xD;&#xA;                }&#xD;&#xA;     &#xD;&#xA;            }&#xD;&#xA;     &#xD;&#xA;            return utftext;&#xD;&#xA;        },&#xD;&#xA;     &#xD;&#xA;        // private method for UTF-8 decoding&#xD;&#xA;        _utf8_decode : function (utftext) {&#xD;&#xA;            var string = """";&#xD;&#xA;            var i = 0;&#xD;&#xA;            var c = c1 = c2 = 0;&#xD;&#xA;     &#xD;&#xA;            while ( i < utftext.length ) {&#xD;&#xA;     &#xD;&#xA;                c = utftext.charCodeAt(i);&#xD;&#xA;     &#xD;&#xA;                if (c < 128) {&#xD;&#xA;                    string += String.fromCharCode(c);&#xD;&#xA;                    i++;&#xD;&#xA;                }&#xD;&#xA;                else if((c > 191) && (c < 224)) {&#xD;&#xA;                    c2 = utftext.charCodeAt(i+1);&#xD;&#xA;                    string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));&#xD;&#xA;                    i += 2;&#xD;&#xA;                }&#xD;&#xA;                else {&#xD;&#xA;                    c2 = utftext.charCodeAt(i+1);&#xD;&#xA;                    c3 = utftext.charCodeAt(i+2);&#xD;&#xA;                    string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));&#xD;&#xA;                    i += 3;&#xD;&#xA;                }&#xD;&#xA;     &#xD;&#xA;            }&#xD;&#xA;     &#xD;&#xA;            return string;&#xD;&#xA;        }&#xD;&#xA;     &#xD;&#xA;    }"
-6702784411470051708,165,8,"        #cssmenu,&#xD;&#xA;    #cssmenu ul,&#xD;&#xA;    #cssmenu ul li,&#xD;&#xA;    #cssmenu ul li a {&#xD;&#xA;      margin: 0;&#xD;&#xA;      padding: 0;&#xD;&#xA;      border: 0;&#xD;&#xA;      list-style: none;&#xD;&#xA;      line-height: 1;&#xD;&#xA;      display: block;&#xD;&#xA;      position: relative;&#xD;&#xA;      -webkit-box-sizing: border-box;&#xD;&#xA;      -moz-box-sizing: border-box;&#xD;&#xA;      box-sizing: border-box;&#xD;&#xA;    }&#xD;&#xA;    #cssmenu {&#xD;&#xA;      width: 200px;&#xD;&#xA;      font-family: Helvetica, Arial, sans-serif;&#xD;&#xA;      color: #ffffff;&#xD;&#xA;    }&#xD;&#xA;    #cssmenu ul ul {&#xD;&#xA;      display: none;&#xD;&#xA;    }&#xD;&#xA;    .align-right {&#xD;&#xA;      float: right;&#xD;&#xA;    }&#xD;&#xA;    #cssmenu > ul > li > a {&#xD;&#xA;      padding: 15px 20px;&#xD;&#xA;      border-left: 1px solid #1682ba;&#xD;&#xA;      border-right: 1px solid #1682ba;&#xD;&#xA;      border-top: 1px solid #1682ba;&#xD;&#xA;      cursor: pointer;&#xD;&#xA;      z-index: 2;&#xD;&#xA;      font-size: 14px;&#xD;&#xA;      font-weight: bold;&#xD;&#xA;      text-decoration: none;&#xD;&#xA;      color: #ffffff;&#xD;&#xA;      text-shadow: 0 1px 1px rgba(0, 0, 0, 0.35);&#xD;&#xA;      background: #36aae7;&#xD;&#xA;      background: -webkit-linear-gradient(#36aae7, #1fa0e4);&#xD;&#xA;      background: -moz-linear-gradient(#36aae7, #1fa0e4);&#xD;&#xA;      background: -o-linear-gradient(#36aae7, #1fa0e4);&#xD;&#xA;      background: -ms-linear-gradient(#36aae7, #1fa0e4);&#xD;&#xA;      background: linear-gradient(#36aae7, #1fa0e4);&#xD;&#xA;      box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.15);&#xD;&#xA;    }&#xD;&#xA;    #cssmenu > ul > li > a:hover,&#xD;&#xA;    #cssmenu > ul > li.active > a,&#xD;&#xA;    #cssmenu > ul > li.open > a {&#xD;&#xA;      color: #eeeeee;&#xD;&#xA;      background: #1fa0e4;&#xD;&#xA;      background: -webkit-linear-gradient(#1fa0e4, #1992d1);&#xD;&#xA;      background: -moz-linear-gradient(#1fa0e4, #1992d1);&#xD;&#xA;      background: -o-linear-gradient(#1fa0e4, #1992d1);&#xD;&#xA;      background: -ms-linear-gradient(#1fa0e4, #1992d1);&#xD;&#xA;      background: linear-gradient(#1fa0e4, #1992d1);&#xD;&#xA;    }&#xD;&#xA;    #cssmenu > ul > li.open > a {&#xD;&#xA;      box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.15), 0 1px 1px rgba(0, 0, 0, 0.15);&#xD;&#xA;      border-bottom: 1px solid #1682ba;&#xD;&#xA;    }&#xD;&#xA;    #cssmenu > ul > li:last-child > a,&#xD;&#xA;    #cssmenu > ul > li.last > a {&#xD;&#xA;      border-bottom: 1px solid #1682ba;&#xD;&#xA;    }&#xD;&#xA;    .holder {&#xD;&#xA;      width: 0;&#xD;&#xA;      height: 0;&#xD;&#xA;      position: absolute;&#xD;&#xA;      top: 0;&#xD;&#xA;      right: 0;&#xD;&#xA;    }&#xD;&#xA;    .holder::after,&#xD;&#xA;    .holder::before {&#xD;&#xA;      display: block;&#xD;&#xA;      position: absolute;&#xD;&#xA;      content: """";&#xD;&#xA;      width: 6px;&#xD;&#xA;      height: 6px;&#xD;&#xA;      right: 20px;&#xD;&#xA;      z-index: 10;&#xD;&#xA;      -webkit-transform: rotate(-135deg);&#xD;&#xA;      -moz-transform: rotate(-135deg);&#xD;&#xA;      -ms-transform: rotate(-135deg);&#xD;&#xA;      -o-transform: rotate(-135deg);&#xD;&#xA;      transform: rotate(-135deg);&#xD;&#xA;    }&#xD;&#xA;    .holder::after {&#xD;&#xA;      top: 17px;&#xD;&#xA;      border-top: 2px solid #ffffff;&#xD;&#xA;      border-left: 2px solid #ffffff;&#xD;&#xA;    }&#xD;&#xA;    #cssmenu > ul > li > a:hover > span::after,&#xD;&#xA;    #cssmenu > ul > li.active > a > span::after,&#xD;&#xA;    #cssmenu > ul > li.open > a > span::after {&#xD;&#xA;      border-color: #eeeeee;&#xD;&#xA;    }&#xD;&#xA;    .holder::before {&#xD;&#xA;      top: 18px;&#xD;&#xA;      border-top: 2px solid;&#xD;&#xA;      border-left: 2px solid;&#xD;&#xA;      border-top-color: inherit;&#xD;&#xA;      border-left-color: inherit;&#xD;&#xA;    }&#xD;&#xA;    #cssmenu ul ul li a {&#xD;&#xA;      cursor: pointer;&#xD;&#xA;      border-bottom: 1px solid #32373e;&#xD;&#xA;      border-left: 1px solid #32373e;&#xD;&#xA;      border-right: 1px solid #32373e;&#xD;&#xA;      padding: 10px 20px;&#xD;&#xA;      z-index: 1;&#xD;&#xA;      text-decoration: none;&#xD;&#xA;      font-size: 13px;&#xD;&#xA;      color: #eeeeee;&#xD;&#xA;      background: #49505a;&#xD;&#xA;      box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.1);&#xD;&#xA;    }&#xD;&#xA;    #cssmenu ul ul li:hover > a,&#xD;&#xA;    #cssmenu ul ul li.open > a,&#xD;&#xA;    #cssmenu ul ul li.active > a {&#xD;&#xA;      background: #424852;&#xD;&#xA;      color: #ffffff;&#xD;&#xA;    }&#xD;&#xA;    #cssmenu ul ul li:first-child > a {&#xD;&#xA;      box-shadow: none;&#xD;&#xA;    }&#xD;&#xA;    #cssmenu ul ul ul li:first-child > a {&#xD;&#xA;      box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.1);&#xD;&#xA;    }&#xD;&#xA;    #cssmenu ul ul ul li a {&#xD;&#xA;      padding-left: 30px;&#xD;&#xA;    }&#xD;&#xA;    #cssmenu > ul > li > ul > li:last-child > a,&#xD;&#xA;    #cssmenu > ul > li > ul > li.last > a {&#xD;&#xA;      border-bottom: 0;&#xD;&#xA;    }&#xD;&#xA;    #cssmenu > ul > li > ul > li.open:last-child > a,&#xD;&#xA;    #cssmenu > ul > li > ul > li.last.open > a {&#xD;&#xA;      border-bottom: 1px solid #32373e;&#xD;&#xA;    }&#xD;&#xA;    #cssmenu > ul > li > ul > li.open:last-child > ul > li:last-child > a {&#xD;&#xA;      border-bottom: 0;&#xD;&#xA;    }&#xD;&#xA;    #cssmenu ul ul li.has-sub > a::after {&#xD;&#xA;      display: block;&#xD;&#xA;      position: absolute;&#xD;&#xA;      content: """";&#xD;&#xA;      width: 5px;&#xD;&#xA;      height: 5px;&#xD;&#xA;      right: 20px;&#xD;&#xA;      z-index: 10;&#xD;&#xA;      top: 11.5px;&#xD;&#xA;      border-top: 2px solid #eeeeee;&#xD;&#xA;      border-left: 2px solid #eeeeee;&#xD;&#xA;        -webkit-transform: rotate(-135deg);&#xD;&#xA;        -moz-transform: rotate(-135deg);&#xD;&#xA;        -ms-transform: rotate(-135deg);&#xD;&#xA;        -o-transform: rotate(-135deg);&#xD;&#xA;        transform: rotate(-135deg);&#xD;&#xA;        }&#xD;&#xA;        #cssmenu ul ul li.active > a::after,&#xD;&#xA;        #cssmenu ul ul li.open > a::after,&#xD;&#xA;        #cssmenu ul ul li > a:hover::after {&#xD;&#xA;          border-color: #ffffff;&#xD;&#xA;        }"
8719130005761971761,22,9,"    <?xml version=""1.0"" encoding=""utf-8""?>&#xD;&#xA;    <android.support.v4.widget.DrawerLayout &#xD;&#xA;    xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;    xmlns:app=""http://schemas.android.com/apk/res-auto""&#xD;&#xA;    xmlns:tools=""http://schemas.android.com/tools""&#xD;&#xA;    android:id=""@+id/drawer_layout""&#xD;&#xA;    android:layout_width=""match_parent""&#xD;&#xA;    android:layout_height=""match_parent""&#xD;&#xA;    android:fitsSystemWindows=""true""&#xD;&#xA;    tools:openDrawer=""start"">&#xD;&#xA;    <include&#xD;&#xA;        layout=""@layout/app_bar_main""&#xD;&#xA;        android:layout_width=""match_parent""&#xD;&#xA;        android:layout_height=""match_parent"" />&#xD;&#xA;    <android.support.design.widget.NavigationView&#xD;&#xA;        android:id=""@+id/nav_view""&#xD;&#xA;        android:layout_width=""wrap_content""&#xD;&#xA;        android:layout_height=""match_parent""&#xD;&#xA;        android:layout_gravity=""start""&#xD;&#xA;        android:fitsSystemWindows=""true""&#xD;&#xA;        app:headerLayout=""@layout/nav_header_main""&#xD;&#xA;        app:menu=""@menu/activity_main_drawer"" />"
8706202841919150851,23,9,"    <html>&#xD;&#xA;      <head>&#xD;&#xA;        <title>Angular 2 QuickStart</title>&#xD;&#xA;        <meta charset=""UTF-8"">&#xD;&#xA;        <meta name=""viewport"" content=""width=device-width, initial-scale=1"">&#xD;&#xA;        <link rel=""stylesheet"" href=""styles.css"">&#xD;&#xA;        <!-- 1. Load libraries -->&#xD;&#xA;         <!-- Polyfill(s) for older browsers -->&#xD;&#xA;        <script src=""node_modules/core-js/client/shim.min.js""></script>&#xD;&#xA;        <script src=""node_modules/zone.js/dist/zone.js""></script>&#xD;&#xA;        <script src=""node_modules/reflect-metadata/Reflect.js""></script>&#xD;&#xA;        <script src=""node_modules/systemjs/dist/system.src.js""></script>&#xD;&#xA;        <!-- 2. Configure SystemJS -->&#xD;&#xA;        <script src=""systemjs.config.js""></script>&#xD;&#xA;        <script>&#xD;&#xA;          System.import('app').catch(function(err){ console.error(err); });&#xD;&#xA;        </script>&#xD;&#xA;      </head>&#xD;&#xA;      <!-- 3. Display the application -->&#xD;&#xA;      <body>&#xD;&#xA;        <my-app>Loading...</my-app>&#xD;&#xA;      </body>&#xD;&#xA;    </html>"
-213642772803550891,23,9,"    <!-- Trigger the modal with a button -->&#xD;&#xA;    <button type=""button"" class=""btn btn-info btn-lg"" data-toggle=""modal"" data-target=""#myModal"">Open Modal</button>&#xD;&#xA;    &#xD;&#xA;    <!-- Modal -->&#xD;&#xA;    <div id=""myModal"" class=""modal fade"" role=""dialog"">&#xD;&#xA;      <div class=""modal-dialog"">&#xD;&#xA;    &#xD;&#xA;        <!-- Modal content-->&#xD;&#xA;        <div class=""modal-content"">&#xD;&#xA;          <div class=""modal-header"">&#xD;&#xA;            <button type=""button"" class=""close"" data-dismiss=""modal"">&times;</button>&#xD;&#xA;            <h4 class=""modal-title"">Modal Header</h4>&#xD;&#xA;          </div>&#xD;&#xA;          <div class=""modal-body"">&#xD;&#xA;            <p>Some text in the modal.</p>&#xD;&#xA;          </div>&#xD;&#xA;          <div class=""modal-footer"">&#xD;&#xA;            <button type=""button"" class=""btn btn-default"" data-dismiss=""modal"">Close</button>&#xD;&#xA;          </div>&#xD;&#xA;        </div>&#xD;&#xA;    &#xD;&#xA;      </div>&#xD;&#xA;    </div>"
-3490805689374761415,24,9,"     <?xml version=""1.0"" encoding=""utf-8""?>&#xD;&#xA;     <LinearLayout xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;     android:layout_width=""match_parent""&#xD;&#xA;     android:layout_height=""match_parent""&#xD;&#xA;     android:orientation=""vertical"" >&#xD;&#xA;	<FrameLayout&#xD;&#xA;	    android:id=""@+id/realtabcontent""&#xD;&#xA;	    android:layout_width=""match_parent""&#xD;&#xA;	    android:layout_height=""0dip""&#xD;&#xA;	    android:layout_weight=""1"" />&#xD;&#xA;	&#xD;&#xA;	<android.support.v4.app.FragmentTabHost&#xD;&#xA;	    android:id=""@android:id/tabhost""&#xD;&#xA;	    android:layout_width=""match_parent""&#xD;&#xA;	    android:layout_height=""wrap_content"" >&#xD;&#xA;	&#xD;&#xA;	    <FrameLayout&#xD;&#xA;	        android:id=""@android:id/tabcontent""&#xD;&#xA;	        android:layout_width=""0dp""&#xD;&#xA;	        android:layout_height=""0dp""&#xD;&#xA;	        android:layout_weight=""0"" />&#xD;&#xA;	</android.support.v4.app.FragmentTabHost>&#xD;&#xA;	&#xD;&#xA;    </LinearLayout>"
6857146719266237045,25,9,        <key>NSAppTransportSecurity</key>&#xD;&#xA;    <dict>&#xD;&#xA;        <key>NSExceptionDomains</key>&#xD;&#xA;        <dict>&#xD;&#xA;            <key>testdomain.com</key>&#xD;&#xA;            <dict>&#xD;&#xA;                <key>NSIncludesSubdomains</key>&#xD;&#xA;                <true/>&#xD;&#xA;                <key>NSExceptionAllowsInsecureHTTPLoads</key>&#xD;&#xA;                <true/>&#xD;&#xA;                <key>NSExceptionRequiresForwardSecrecy</key>&#xD;&#xA;                <true/>&#xD;&#xA;                <key>NSExceptionMinimumTLSVersion</key>&#xD;&#xA;                <string>TLSv1.2</string>&#xD;&#xA;                <key>NSThirdPartyExceptionAllowsInsecureHTTPLoads</key>&#xD;&#xA;                <false/>&#xD;&#xA;                <key>NSThirdPartyExceptionRequiresForwardSecrecy</key>&#xD;&#xA;                <true/>&#xD;&#xA;                <key>NSThirdPartyExceptionMinimumTLSVersion</key>&#xD;&#xA;                <string>TLSv1.2</string>&#xD;&#xA;                <key>NSRequiresCertificateTransparency</key>&#xD;&#xA;                <false/>&#xD;&#xA;            </dict>&#xD;&#xA;        </dict>&#xD;&#xA;    </dict>
-2148328411180859395,25,9,"	<?php&#xD;&#xA;	$mysqli = new mysqli(""localhost"", ""my_user"", ""my_password"", ""world"");&#xD;&#xA;	/* check connection */&#xD;&#xA;	if (mysqli_connect_errno()) {&#xD;&#xA;	    printf(""Connect failed: %s\n"", mysqli_connect_error());&#xD;&#xA;	    exit();&#xD;&#xA;	}&#xD;&#xA;	$city = ""Amersfoort"";&#xD;&#xA;	/* create a prepared statement */&#xD;&#xA;	if ($stmt = $mysqli->prepare(""SELECT District FROM City WHERE Name=?"")) {&#xD;&#xA;	    /* bind parameters for markers */&#xD;&#xA;	    $stmt->bind_param(""s"", $city);&#xD;&#xA;	    /* execute query */&#xD;&#xA;	    $stmt->execute();&#xD;&#xA;	    /* bind result variables */&#xD;&#xA;	    $stmt->bind_result($district);&#xD;&#xA;	    /* fetch value */&#xD;&#xA;	    $stmt->fetch();&#xD;&#xA;	    printf(""%s is in district %s\n"", $city, $district);&#xD;&#xA;	    /* close statement */&#xD;&#xA;	    $stmt->close();&#xD;&#xA;	}&#xD;&#xA;	/* close connection */&#xD;&#xA;	$mysqli->close();&#xD;&#xA;	?>"
-211525698043731571,27,9,"		<VirtualHost *:80>&#xD;&#xA;			# The ServerName directive sets the request scheme, hostname and port that&#xD;&#xA;			# the server uses to identify itself. This is used when creating&#xD;&#xA;			# redirection URLs. In the context of virtual hosts, the ServerName&#xD;&#xA;			# specifies what hostname must appear in the request's Host: header to&#xD;&#xA;			# match this virtual host. For the default virtual host (this file) this&#xD;&#xA;			# value is not decisive as it is used as a last resort host regardless.&#xD;&#xA;			# However, you must set it for any further virtual host explicitly.&#xD;&#xA;			#ServerName www.example.com&#xD;&#xA;	&#xD;&#xA;			ServerAdmin webmaster@localhost&#xD;&#xA;			DocumentRoot /var/www/html&#xD;&#xA;			# Available loglevels: trace8, ..., trace1, debug, info, notice, warn,&#xD;&#xA;			# error, crit, alert, emerg.&#xD;&#xA;			# It is also possible to configure the loglevel for particular&#xD;&#xA;			# modules, e.g.&#xD;&#xA;			#LogLevel info ssl:warn&#xD;&#xA;			ErrorLog ${APACHE_LOG_DIR}/error.log&#xD;&#xA;			CustomLog ${APACHE_LOG_DIR}/access.log combined&#xD;&#xA;			# For most configuration files from conf-available/, which are&#xD;&#xA;			# enabled or disabled at a global level, it is possible to&#xD;&#xA;			# include a line for only one particular virtual host. For example the&#xD;&#xA;			# following line enables the CGI configuration for this host only&#xD;&#xA;			# after it has been globally disabled with ""a2disconf"".&#xD;&#xA;			#Include conf-available/serve-cgi-bin.conf&#xD;&#xA;		</VirtualHost>&#xD;&#xA;		# vim: syntax=apache ts=4 sw=4 sts=4 sr noet"
1966648461276943612,27,9,"    <form class=""cmxform"" id=""commentForm"" method=""get"" action="""">&#xD;&#xA;      <fieldset>&#xD;&#xA;        <legend>Please provide your name, email address (won't be published) and a comment</legend>&#xD;&#xA;        <p>&#xD;&#xA;          <label for=""cname"">Name (required, at least 2 characters)</label>&#xD;&#xA;          <input id=""cname"" name=""name"" minlength=""2"" type=""text"" required/>&#xD;&#xA;        </p>&#xD;&#xA;        <p>&#xD;&#xA;          <label for=""cemail"">E-Mail (required)</label>&#xD;&#xA;          <input id=""cemail"" type=""email"" name=""email"" required/>&#xD;&#xA;        </p>&#xD;&#xA;        <p>&#xD;&#xA;          <label for=""curl"">URL (optional)</label>&#xD;&#xA;          <input id=""curl"" type=""url"" name=""url""/>&#xD;&#xA;        </p>&#xD;&#xA;        <p>&#xD;&#xA;          <label for=""ccomment"">Your comment (required)</label>&#xD;&#xA;          <textarea id=""ccomment"" name=""comment"" required></textarea>&#xD;&#xA;        </p>&#xD;&#xA;        <p>&#xD;&#xA;          <input class=""submit"" type=""submit"" value=""Submit""/>&#xD;&#xA;        </p>&#xD;&#xA;      </fieldset>&#xD;&#xA;    </form>&#xD;&#xA;    <script>&#xD;&#xA;       $(""#commentForm"").validate();&#xD;&#xA;    </script>"
-3261911964153110222,28,9,"    <android.support.design.widget.CoordinatorLayout xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;    xmlns:app=""http://schemas.android.com/apk/res-auto""&#xD;&#xA;    android:layout_width=""match_parent""&#xD;&#xA;    android:layout_height=""match_parent"">&#xD;&#xA;    <android.support.design.widget.AppBarLayout&#xD;&#xA;        android:layout_width=""match_parent""&#xD;&#xA;        android:layout_height=""wrap_content""&#xD;&#xA;        android:theme=""@style/ThemeOverlay.AppCompat.Dark.ActionBar""&#xD;&#xA;        >&#xD;&#xA;        <android.support.v7.widget.Toolbar&#xD;&#xA;            android:id=""@+id/toolbar""&#xD;&#xA;            android:layout_width=""match_parent""&#xD;&#xA;            android:layout_height=""?attr/actionBarSize""&#xD;&#xA;            android:background=""?attr/colorPrimary""&#xD;&#xA;            app:layout_scrollFlags=""scroll|enterAlways""&#xD;&#xA;            app:popupTheme=""@style/ThemeOverlay.AppCompat.Light"" />&#xD;&#xA;        <android.support.design.widget.TabLayout&#xD;&#xA;            android:id=""@+id/tabs""&#xD;&#xA;            android:layout_width=""match_parent""&#xD;&#xA;            android:layout_height=""wrap_content""&#xD;&#xA;            app:tabMode=""fixed""&#xD;&#xA;            app:tabGravity=""fill""/>&#xD;&#xA;    </android.support.design.widget.AppBarLayout>&#xD;&#xA;    <android.support.v4.view.ViewPager&#xD;&#xA;        android:id=""@+id/viewpager""&#xD;&#xA;        android:layout_width=""match_parent""&#xD;&#xA;        android:layout_height=""match_parent""&#xD;&#xA;        app:layout_behavior=""@string/appbar_scrolling_view_behavior""  />"
-3403612589528070626,29,9,"    <?php&#xD;&#xA;     require_once ""Mail.php"";&#xD;&#xA;     &#xD;&#xA;     $from = ""Sandra Sender <sender@example.com>"";&#xD;&#xA;     $to = ""Ramona Recipient <recipient@example.com>"";&#xD;&#xA;     $subject = ""Hi!"";&#xD;&#xA;     $body = ""Hi,\n\nHow are you?"";&#xD;&#xA;     &#xD;&#xA;     $host = ""mail.example.com"";&#xD;&#xA;     $username = ""smtp_username"";&#xD;&#xA;     $password = ""smtp_password"";&#xD;&#xA;     &#xD;&#xA;     $headers = array ('From' => $from,&#xD;&#xA;       'To' => $to,&#xD;&#xA;       'Subject' => $subject);&#xD;&#xA;     $smtp = Mail::factory('smtp',&#xD;&#xA;       array ('host' => $host,&#xD;&#xA;         'auth' => true,&#xD;&#xA;         'username' => $username,&#xD;&#xA;         'password' => $password));&#xD;&#xA;     &#xD;&#xA;     $mail = $smtp->send($to, $headers, $body);&#xD;&#xA;     &#xD;&#xA;     if (PEAR::isError($mail)) {&#xD;&#xA;       echo(""<p>"" . $mail->getMessage() . ""</p>"");&#xD;&#xA;      } else {&#xD;&#xA;       echo(""<p>Message successfully sent!</p>"");&#xD;&#xA;      }&#xD;&#xA;     ?>"
3079402623131464920,29,9,"    <?php&#xD;&#xA;	require 'PHPMailerAutoload.php';&#xD;&#xA;	$mail = new PHPMailer;&#xD;&#xA;	$mail->isSMTP();                                      // Set mailer to use SMTP&#xD;&#xA;	$mail->Host = 'smtp1.example.com;smtp2.example.com';  // Specify main and backup SMTP servers&#xD;&#xA;	$mail->SMTPAuth = true;                               // Enable SMTP authentication&#xD;&#xA;	$mail->Username = 'user@example.com';                 // SMTP username&#xD;&#xA;	$mail->Password = 'secret';                           // SMTP password&#xD;&#xA;	$mail->SMTPSecure = 'tls';                            // Enable encryption, 'ssl' also accepted&#xD;&#xA;	$mail->From = 'from@example.com';&#xD;&#xA;	$mail->FromName = 'Mailer';&#xD;&#xA;	$mail->addAddress('joe@example.net', 'Joe User');     // Add a recipient&#xD;&#xA;	$mail->addAddress('ellen@example.com');               // Name is optional&#xD;&#xA;	$mail->addReplyTo('info@example.com', 'Information');&#xD;&#xA;	$mail->addCC('cc@example.com');&#xD;&#xA;	$mail->addBCC('bcc@example.com');&#xD;&#xA;	$mail->WordWrap = 50;                                 // Set word wrap to 50 characters&#xD;&#xA;	$mail->addAttachment('/var/tmp/file.tar.gz');         // Add attachments&#xD;&#xA;	$mail->addAttachment('/tmp/image.jpg', 'new.jpg');    // Optional name&#xD;&#xA;	$mail->isHTML(true);                                  // Set email format to HTML&#xD;&#xA;	$mail->Subject = 'Here is the subject';&#xD;&#xA;	$mail->Body    = 'This is the HTML message body <b>in bold!</b>';&#xD;&#xA;	$mail->AltBody = 'This is the body in plain text for non-HTML mail clients';&#xD;&#xA;	if(!$mail->send()) {&#xD;&#xA;	    echo 'Message could not be sent.';&#xD;&#xA;	    echo 'Mailer Error: ' . $mail->ErrorInfo;&#xD;&#xA;	} else {&#xD;&#xA;	    echo 'Message has been sent';&#xD;&#xA;	}"
314329119620760885,31,9,"    <layer-list xmlns:android=""http://schemas.android.com/apk/res/android"">&#xD;&#xA;      &#xD;&#xA;    <!-- Define the background properties like color etc -->&#xD;&#xA;        <item android:id=""@android:id/background"">&#xD;&#xA;            <shape>&#xD;&#xA;                <gradient&#xD;&#xA;                        android:startColor=""#000001""&#xD;&#xA;                        android:centerColor=""#0b131e""&#xD;&#xA;                        android:centerY=""1.0""&#xD;&#xA;                        android:endColor=""#0d1522""&#xD;&#xA;                        android:angle=""270""&#xD;&#xA;                />&#xD;&#xA;            </shape>&#xD;&#xA;        </item>&#xD;&#xA;    &#xD;&#xA;     <!-- Define the progress properties like start color, end color etc -->&#xD;&#xA;        <item android:id=""@android:id/progress"">&#xD;&#xA;            <clip>&#xD;&#xA;                <shape>&#xD;&#xA;                    <gradient&#xD;&#xA;                        android:startColor=""#007A00""&#xD;&#xA;                        android:centerColor=""#007A00""&#xD;&#xA;                        android:centerY=""1.0""&#xD;&#xA;                        android:endColor=""#06101d""&#xD;&#xA;                        android:angle=""270""&#xD;&#xA;                    />&#xD;&#xA;                </shape>&#xD;&#xA;            </clip>&#xD;&#xA;        </item>&#xD;&#xA;    &#xD;&#xA;    </layer-list>"
8523190379802206291,34,9,"     /* The Modal (background) */&#xD;&#xA;    .modal {&#xD;&#xA;        display: none; /* Hidden by default */&#xD;&#xA;        position: fixed; /* Stay in place */&#xD;&#xA;        z-index: 1; /* Sit on top */&#xD;&#xA;        left: 0;&#xD;&#xA;        top: 0;&#xD;&#xA;        width: 100%; /* Full width */&#xD;&#xA;        height: 100%; /* Full height */&#xD;&#xA;        overflow: auto; /* Enable scroll if needed */&#xD;&#xA;        background-color: rgb(0,0,0); /* Fallback color */&#xD;&#xA;        background-color: rgba(0,0,0,0.4); /* Black w/ opacity */&#xD;&#xA;    }&#xD;&#xA;    /* Modal Content/Box */&#xD;&#xA;    .modal-content {&#xD;&#xA;        background-color: #fefefe;&#xD;&#xA;        margin: 15% auto; /* 15% from the top and centered */&#xD;&#xA;        padding: 20px;&#xD;&#xA;        border: 1px solid #888;&#xD;&#xA;        width: 80%; /* Could be more or less, depending on screen size */&#xD;&#xA;    }&#xD;&#xA;    /* The Close Button */&#xD;&#xA;    .close {&#xD;&#xA;        color: #aaa;&#xD;&#xA;        float: right;&#xD;&#xA;        font-size: 28px;&#xD;&#xA;        font-weight: bold;&#xD;&#xA;    }&#xD;&#xA;    .close:hover,&#xD;&#xA;    .close:focus {&#xD;&#xA;        color: black;&#xD;&#xA;        text-decoration: none;&#xD;&#xA;        cursor: pointer;&#xD;&#xA;    }"
-8258736418540964258,34,9,"    <?  &#xD;&#xA;    mysql_connect(); &#xD;&#xA;    mysql_select_db(""new""); &#xD;&#xA;    $table = ""test""; &#xD;&#xA;    if($_SERVER['REQUEST_METHOD']=='POST') { //form handler part: &#xD;&#xA;      $name = mysql_real_escape_string($_POST['name']); &#xD;&#xA;      if ($id = intval($_POST['id'])) { &#xD;&#xA;        $query=""UPDATE $table SET name='$name' WHERE id=$id""; &#xD;&#xA;      } else { &#xD;&#xA;        $query=""INSERT INTO $table SET name='$name'""; &#xD;&#xA;      } &#xD;&#xA;      mysql_query($query) or trigger_error(mysql_error()."" in "".$query); &#xD;&#xA;      header(""Location: http://"".$_SERVER['HTTP_HOST'].$_SERVER['PHP_SELF']);  &#xD;&#xA;      exit;  &#xD;&#xA;    }  &#xD;&#xA;    if (!isset($_GET['id'])) { //listing part: &#xD;&#xA;      $LIST=array(); &#xD;&#xA;      $query=""SELECT * FROM $table"";  &#xD;&#xA;      $res=mysql_query($query); &#xD;&#xA;      while($row=mysql_fetch_assoc($res)) $LIST[]=$row; &#xD;&#xA;      include 'list.php'; &#xD;&#xA;    } else { // form displaying part: &#xD;&#xA;      if ($id=intval($_GET['id'])) { &#xD;&#xA;        $query=""SELECT * FROM $table WHERE id=$id"";  &#xD;&#xA;        $res=mysql_query($query); &#xD;&#xA;        $row=mysql_fetch_assoc($res); &#xD;&#xA;        foreach ($row as $k => $v) $row[$k]=htmlspecialchars($v); &#xD;&#xA;      } else { &#xD;&#xA;        $row['name']=''; &#xD;&#xA;        $row['id']=0; &#xD;&#xA;      } &#xD;&#xA;      include 'form.php'; &#xD;&#xA;    }  &#xD;&#xA;    ?>"
-4640351620681165578,34,9,"        <VirtualHost *:80>&#xD;&#xA;	ServerAdmin webmaster@localhost&#xD;&#xA;	DocumentRoot /var/www&#xD;&#xA;	<Directory />&#xD;&#xA;		Options FollowSymLinks&#xD;&#xA;		AllowOverride None&#xD;&#xA;	</Directory>&#xD;&#xA;	<Directory /var/www/>&#xD;&#xA;		Options Indexes FollowSymLinks MultiViews&#xD;&#xA;		AllowOverride None&#xD;&#xA;		Order allow,deny&#xD;&#xA;		allow from all&#xD;&#xA;	</Directory>&#xD;&#xA;	ScriptAlias /cgi-bin/ /usr/lib/cgi-bin/&#xD;&#xA;	<Directory ""/usr/lib/cgi-bin"">&#xD;&#xA;		AllowOverride None&#xD;&#xA;		Options +ExecCGI -MultiViews +SymLinksIfOwnerMatch&#xD;&#xA;		Order allow,deny&#xD;&#xA;		Allow from all&#xD;&#xA;	</Directory>&#xD;&#xA;	ErrorLog ${APACHE_LOG_DIR}/error.log&#xD;&#xA;	# Possible values include: debug, info, notice, warn, error, crit,&#xD;&#xA;	# alert, emerg.&#xD;&#xA;	LogLevel warn&#xD;&#xA;	CustomLog ${APACHE_LOG_DIR}/access.log combined&#xD;&#xA;    Alias /doc/ ""/usr/share/doc/""&#xD;&#xA;    <Directory ""/usr/share/doc/"">&#xD;&#xA;        Options Indexes MultiViews FollowSymLinks&#xD;&#xA;        AllowOverride None&#xD;&#xA;        Order deny,allow&#xD;&#xA;        Deny from all&#xD;&#xA;        Allow from 127.0.0.0/255.0.0.0 ::1/128&#xD;&#xA;    </Directory>&#xD;&#xA;     </VirtualHost>"
2307235993198917429,35,9,"     String externalpath = new String();&#xD;&#xA;     String internalpath = new String();&#xD;&#xA;    public  void getExternalMounts() {&#xD;&#xA;    Runtime runtime = Runtime.getRuntime();&#xD;&#xA;    try&#xD;&#xA;    {&#xD;&#xA;    Process proc = runtime.exec(""mount"");&#xD;&#xA;    InputStream is = proc.getInputStream();&#xD;&#xA;    InputStreamReader isr = new InputStreamReader(is);&#xD;&#xA;    String line;&#xD;&#xA;    BufferedReader br = new BufferedReader(isr);&#xD;&#xA;    while ((line = br.readLine()) != null) {&#xD;&#xA;        if (line.contains(""secure"")) continue;&#xD;&#xA;        if (line.contains(""asec"")) continue;&#xD;&#xA;        if (line.contains(""fat"")) {//external card&#xD;&#xA;            String columns[] = line.split("" "");&#xD;&#xA;            if (columns != null && columns.length > 1) {&#xD;&#xA;                externalpath = externalpath.concat(""*"" + columns[1] + ""\n"");&#xD;&#xA;            }&#xD;&#xA;    } &#xD;&#xA;            else if (line.contains(""fuse"")) {//internal storage&#xD;&#xA;            String columns[] = line.split("" "");&#xD;&#xA;            if (columns != null && columns.length > 1) {&#xD;&#xA;                internalpath = internalpath.concat(columns[1] + ""\n"");&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    }&#xD;&#xA;    catch(Exception e)&#xD;&#xA;    {&#xD;&#xA;        e.printStackTrace();&#xD;&#xA;    }&#xD;&#xA;     System.out.println(""Path  of sd card external............""+externalpath);&#xD;&#xA;     System.out.println(""Path  of internal memory............""+internalpath);&#xD;&#xA;    }"
-2580454381021179283,35,9,"        public class MapsActivity extends FragmentActivity implements OnMapReadyCallback {&#xD;&#xA;    &#xD;&#xA;        private GoogleMap mMap;&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        protected void onCreate(Bundle savedInstanceState) {&#xD;&#xA;            super.onCreate(savedInstanceState);&#xD;&#xA;            setContentView(R.layout.activity_maps);&#xD;&#xA;            // Obtain the SupportMapFragment and get notified when the map is ready to be used.&#xD;&#xA;            SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager()&#xD;&#xA;                    .findFragmentById(R.id.map);&#xD;&#xA;            mapFragment.getMapAsync(this);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        /**&#xD;&#xA;         * Manipulates the map once available.&#xD;&#xA;         * This callback is triggered when the map is ready to be used.&#xD;&#xA;         * This is where we can add markers or lines, add listeners or move the camera. In this case,&#xD;&#xA;         * we just add a marker near Sydney, Australia.&#xD;&#xA;         * If Google Play services is not installed on the device, the user will be prompted to install&#xD;&#xA;         * it inside the SupportMapFragment. This method will only be triggered once the user has&#xD;&#xA;         * installed Google Play services and returned to the app.&#xD;&#xA;         */&#xD;&#xA;        @Override&#xD;&#xA;        public void onMapReady(GoogleMap googleMap) {&#xD;&#xA;            mMap = googleMap;&#xD;&#xA;    &#xD;&#xA;            // Add a marker in Sydney and move the camera&#xD;&#xA;            LatLng sydney = new LatLng(-34, 151);&#xD;&#xA;            mMap.addMarker(new MarkerOptions().position(sydney).title(""Marker in Sydney""));&#xD;&#xA;            mMap.moveCamera(CameraUpdateFactory.newLatLng(sydney));&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    }"
-7905177712424443585,35,9,"        <nav class=""navbar navbar-expand-lg navbar-light bg-light"">&#xD;&#xA;          <a class=""navbar-brand"" href=""#"">Navbar</a>&#xD;&#xA;          <button class=""navbar-toggler"" type=""button"" data-toggle=""collapse"" data-target=""#navbarSupportedContent"" aria-controls=""navbarSupportedContent"" aria-expanded=""false"" aria-label=""Toggle navigation"">&#xD;&#xA;            <span class=""navbar-toggler-icon""></span>&#xD;&#xA;          </button>&#xD;&#xA;        &#xD;&#xA;          <div class=""collapse navbar-collapse"" id=""navbarSupportedContent"">&#xD;&#xA;            <ul class=""navbar-nav mr-auto"">&#xD;&#xA;              <li class=""nav-item active"">&#xD;&#xA;                <a class=""nav-link"" href=""#"">Home <span class=""sr-only"">(current)</span></a>&#xD;&#xA;              </li>&#xD;&#xA;              <li class=""nav-item"">&#xD;&#xA;                <a class=""nav-link"" href=""#"">Link</a>&#xD;&#xA;              </li>&#xD;&#xA;              <li class=""nav-item dropdown"">&#xD;&#xA;                <a class=""nav-link dropdown-toggle"" href=""#"" id=""navbarDropdown"" role=""button"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">&#xD;&#xA;                  Dropdown&#xD;&#xA;                </a>&#xD;&#xA;                <div class=""dropdown-menu"" aria-labelledby=""navbarDropdown"">&#xD;&#xA;                  <a class=""dropdown-item"" href=""#"">Action</a>&#xD;&#xA;                  <a class=""dropdown-item"" href=""#"">Another action</a>&#xD;&#xA;                  <div class=""dropdown-divider""></div>&#xD;&#xA;                  <a class=""dropdown-item"" href=""#"">Something else here</a>&#xD;&#xA;                </div>&#xD;&#xA;              </li>&#xD;&#xA;              <li class=""nav-item"">&#xD;&#xA;                <a class=""nav-link disabled"" href=""#"">Disabled</a>&#xD;&#xA;              </li>&#xD;&#xA;            </ul>&#xD;&#xA;            <form class=""form-inline my-2 my-lg-0"">&#xD;&#xA;              <input class=""form-control mr-sm-2"" type=""search"" placeholder=""Search"" aria-label=""Search"">&#xD;&#xA;              <button class=""btn btn-outline-success my-2 my-sm-0"" type=""submit"">Search</button>&#xD;&#xA;            </form>&#xD;&#xA;          </div>&#xD;&#xA;        </nav>"
4269273402957973562,36,9,"    <?php&#xD;&#xA;    require 'PHPMailerAutoload.php';&#xD;&#xA;    &#xD;&#xA;    $mail = new PHPMailer;&#xD;&#xA;    &#xD;&#xA;    //$mail->SMTPDebug = 3;                               // Enable verbose debug output&#xD;&#xA;    &#xD;&#xA;    $mail->isSMTP();                                      // Set mailer to use SMTP&#xD;&#xA;    $mail->Host = 'smtp1.example.com;smtp2.example.com';  // Specify main and backup SMTP servers&#xD;&#xA;    $mail->SMTPAuth = true;                               // Enable SMTP authentication&#xD;&#xA;    $mail->Username = 'user@example.com';                 // SMTP username&#xD;&#xA;    $mail->Password = 'secret';                           // SMTP password&#xD;&#xA;    $mail->SMTPSecure = 'tls';                            // Enable TLS encryption, `ssl` also accepted&#xD;&#xA;    $mail->Port = 587;                                    // TCP port to connect to&#xD;&#xA;    &#xD;&#xA;    $mail->setFrom('from@example.com', 'Mailer');&#xD;&#xA;    $mail->addAddress('joe@example.net', 'Joe User');     // Add a recipient&#xD;&#xA;    $mail->addAddress('ellen@example.com');               // Name is optional&#xD;&#xA;    $mail->addReplyTo('info@example.com', 'Information');&#xD;&#xA;    $mail->addCC('cc@example.com');&#xD;&#xA;    $mail->addBCC('bcc@example.com');&#xD;&#xA;    &#xD;&#xA;    $mail->addAttachment('/var/tmp/file.tar.gz');         // Add attachments&#xD;&#xA;    $mail->addAttachment('/tmp/image.jpg', 'new.jpg');    // Optional name&#xD;&#xA;    $mail->isHTML(true);                                  // Set email format to HTML&#xD;&#xA;    &#xD;&#xA;    $mail->Subject = 'Here is the subject';&#xD;&#xA;    $mail->Body    = 'This is the HTML message body <b>in bold!</b>';&#xD;&#xA;    $mail->AltBody = 'This is the body in plain text for non-HTML mail clients';&#xD;&#xA;    &#xD;&#xA;    if(!$mail->send()) {&#xD;&#xA;        echo 'Message could not be sent.';&#xD;&#xA;        echo 'Mailer Error: ' . $mail->ErrorInfo;&#xD;&#xA;    } else {&#xD;&#xA;        echo 'Message has been sent';&#xD;&#xA;    }"
-3951921276468065785,37,9,"		public static Bitmap decodeSampledBitmapFromResource(Resources res, int resId,&#xD;&#xA;		        int reqWidth, int reqHeight) {&#xD;&#xA;		&#xD;&#xA;		    // First decode with inJustDecodeBounds=true to check dimensions&#xD;&#xA;		    final BitmapFactory.Options options = new BitmapFactory.Options();&#xD;&#xA;		    options.inJustDecodeBounds = true;&#xD;&#xA;		    BitmapFactory.decodeResource(res, resId, options);&#xD;&#xA;		&#xD;&#xA;		    // Calculate inSampleSize&#xD;&#xA;		    options.inSampleSize = calculateInSampleSize(options, reqWidth, reqHeight);&#xD;&#xA;		&#xD;&#xA;		    // Decode bitmap with inSampleSize set&#xD;&#xA;		    options.inJustDecodeBounds = false;&#xD;&#xA;		    return BitmapFactory.decodeResource(res, resId, options);&#xD;&#xA;		}&#xD;&#xA;		&#xD;&#xA;		public static int calculateInSampleSize(&#xD;&#xA;		            BitmapFactory.Options options, int reqWidth, int reqHeight) {&#xD;&#xA;		    // Raw height and width of image&#xD;&#xA;		    final int height = options.outHeight;&#xD;&#xA;		    final int width = options.outWidth;&#xD;&#xA;		    int inSampleSize = 1;&#xD;&#xA;		&#xD;&#xA;		    if (height > reqHeight || width > reqWidth) {&#xD;&#xA;		&#xD;&#xA;		        // Calculate ratios of height and width to requested height and width&#xD;&#xA;		        final int heightRatio = Math.round((float) height / (float) reqHeight);&#xD;&#xA;		        final int widthRatio = Math.round((float) width / (float) reqWidth);&#xD;&#xA;		&#xD;&#xA;		        // Choose the smallest ratio as inSampleSize value, this will guarantee&#xD;&#xA;		        // a final image with both dimensions larger than or equal to the&#xD;&#xA;		        // requested height and width.&#xD;&#xA;		        inSampleSize = heightRatio < widthRatio ? heightRatio : widthRatio;&#xD;&#xA;		    }&#xD;&#xA;		&#xD;&#xA;		    return inSampleSize;&#xD;&#xA;		}"
-1824023177218139293,39,9,"    $(document).ready(function () {&#xD;&#xA;        $(document).on(""scroll"", onScroll);&#xD;&#xA;        &#xD;&#xA;        //smoothscroll&#xD;&#xA;        $('a[href^=""#""]').on('click', function (e) {&#xD;&#xA;            e.preventDefault();&#xD;&#xA;            $(document).off(""scroll"");&#xD;&#xA;            &#xD;&#xA;            $('a').each(function () {&#xD;&#xA;                $(this).removeClass('active');&#xD;&#xA;            })&#xD;&#xA;            $(this).addClass('active');&#xD;&#xA;          &#xD;&#xA;            var target = this.hash,&#xD;&#xA;                menu = target;&#xD;&#xA;            $target = $(target);&#xD;&#xA;            $('html, body').stop().animate({&#xD;&#xA;                'scrollTop': $target.offset().top+2&#xD;&#xA;            }, 500, 'swing', function () {&#xD;&#xA;                window.location.hash = target;&#xD;&#xA;                $(document).on(""scroll"", onScroll);&#xD;&#xA;            });&#xD;&#xA;        });&#xD;&#xA;    });&#xD;&#xA;    &#xD;&#xA;    function onScroll(event){&#xD;&#xA;        var scrollPos = $(document).scrollTop();&#xD;&#xA;        $('#menu-center a').each(function () {&#xD;&#xA;            var currLink = $(this);&#xD;&#xA;            var refElement = $(currLink.attr(""href""));&#xD;&#xA;            if (refElement.position().top <= scrollPos && refElement.position().top + refElement.height() > scrollPos) {&#xD;&#xA;                $('#menu-center ul li a').removeClass(""active"");&#xD;&#xA;                currLink.addClass(""active"");&#xD;&#xA;            }&#xD;&#xA;            else{&#xD;&#xA;                currLink.removeClass(""active"");&#xD;&#xA;            }&#xD;&#xA;        });&#xD;&#xA;    }"
-7350004720998651035,39,9,        <?php&#xD;&#xA;    &#xD;&#xA;    namespace App\Http\Controllers\Auth;&#xD;&#xA;    &#xD;&#xA;    use App\Http\Controllers\Controller;&#xD;&#xA;    use Illuminate\Foundation\Auth\AuthenticatesUsers;&#xD;&#xA;    &#xD;&#xA;    class LoginController extends Controller&#xD;&#xA;    {&#xD;&#xA;        /*&#xD;&#xA;        |--------------------------------------------------------------------------&#xD;&#xA;        | Login Controller&#xD;&#xA;        |--------------------------------------------------------------------------&#xD;&#xA;        |&#xD;&#xA;        | This controller handles authenticating users for the application and&#xD;&#xA;        | redirecting them to your home screen. The controller uses a trait&#xD;&#xA;        | to conveniently provide its functionality to your applications.&#xD;&#xA;        |&#xD;&#xA;        */&#xD;&#xA;    &#xD;&#xA;        use AuthenticatesUsers;&#xD;&#xA;    &#xD;&#xA;        /**&#xD;&#xA;         * Where to redirect users after login.&#xD;&#xA;         *&#xD;&#xA;         * @var string&#xD;&#xA;         */&#xD;&#xA;        protected $redirectTo = 'home';&#xD;&#xA;    &#xD;&#xA;        /**&#xD;&#xA;         * Create a new controller instance.&#xD;&#xA;         *&#xD;&#xA;         * @return void&#xD;&#xA;         */&#xD;&#xA;        public function __construct()&#xD;&#xA;        {&#xD;&#xA;            $this->middleware('guest')->except('logout');&#xD;&#xA;        }&#xD;&#xA;    }
-927177371037729391,40,9,"        package YourPackage;&#xD;&#xA;        import android.app.AlarmManager;&#xD;&#xA;        import android.app.PendingIntent;&#xD;&#xA;        import android.content.BroadcastReceiver;&#xD;&#xA;        import android.content.Context;&#xD;&#xA;        import android.content.Intent;&#xD;&#xA;        import android.os.PowerManager;&#xD;&#xA;        import android.widget.Toast;&#xD;&#xA;    &#xD;&#xA;        public class Alarm extends BroadcastReceiver &#xD;&#xA;        {    &#xD;&#xA;             @Override&#xD;&#xA;             public void onReceive(Context context, Intent intent) &#xD;&#xA;             {   &#xD;&#xA;                 PowerManager pm = (PowerManager) context.getSystemService(Context.POWER_SERVICE);&#xD;&#xA;                 PowerManager.WakeLock wl = pm.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK, """");&#xD;&#xA;                 wl.acquire();&#xD;&#xA;    &#xD;&#xA;                 // Put here YOUR code.&#xD;&#xA;                 Toast.makeText(context, ""Alarm !!!!!!!!!!"", Toast.LENGTH_LONG).show(); // For example&#xD;&#xA;    &#xD;&#xA;                 wl.release();&#xD;&#xA;             }&#xD;&#xA;    &#xD;&#xA;         public void SetAlarm(Context context)&#xD;&#xA;         {&#xD;&#xA;             AlarmManager am=(AlarmManager)context.getSystemService(Context.ALARM_SERVICE);&#xD;&#xA;             Intent i = new Intent(context, Alarm.class);&#xD;&#xA;             PendingIntent pi = PendingIntent.getBroadcast(context, 0, i, 0);&#xD;&#xA;             am.setRepeating(AlarmManager.RTC_WAKEUP, System.currentTimeMillis(), 1000 * 60 * 10, pi); // Millisec * Second * Minute&#xD;&#xA;         }&#xD;&#xA;    &#xD;&#xA;         public void CancelAlarm(Context context)&#xD;&#xA;         {&#xD;&#xA;             Intent intent = new Intent(context, Alarm.class);&#xD;&#xA;             PendingIntent sender = PendingIntent.getBroadcast(context, 0, intent, 0);&#xD;&#xA;             AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);&#xD;&#xA;             alarmManager.cancel(sender);&#xD;&#xA;         }&#xD;&#xA;     }"
7841999063986636860,41,9,"    $(function() {&#xD;&#xA;	// Get the form.&#xD;&#xA;	var form = $('#ajax-contact');&#xD;&#xA;	// Get the messages div.&#xD;&#xA;	var formMessages = $('#form-messages');&#xD;&#xA;	// Set up an event listener for the contact form.&#xD;&#xA;	$(form).submit(function(e) {&#xD;&#xA;		// Stop the browser from submitting the form.&#xD;&#xA;		e.preventDefault();&#xD;&#xA;		// Serialize the form data.&#xD;&#xA;		var formData = $(form).serialize();&#xD;&#xA;		// Submit the form using AJAX.&#xD;&#xA;		$.ajax({&#xD;&#xA;			type: 'POST',&#xD;&#xA;			url: $(form).attr('action'),&#xD;&#xA;			data: formData&#xD;&#xA;		})&#xD;&#xA;		.done(function(response) {&#xD;&#xA;			// Make sure that the formMessages div has the 'success' class.&#xD;&#xA;			$(formMessages).removeClass('error');&#xD;&#xA;			$(formMessages).addClass('success');&#xD;&#xA;			// Set the message text.&#xD;&#xA;			$(formMessages).text(response);&#xD;&#xA;			// Clear the form.&#xD;&#xA;			$('#name').val('');&#xD;&#xA;			$('#email').val('');&#xD;&#xA;			$('#message').val('');&#xD;&#xA;		})&#xD;&#xA;		.fail(function(data) {&#xD;&#xA;			// Make sure that the formMessages div has the 'error' class.&#xD;&#xA;			$(formMessages).removeClass('success');&#xD;&#xA;			$(formMessages).addClass('error');&#xD;&#xA;			// Set the message text.&#xD;&#xA;			if (data.responseText !== '') {&#xD;&#xA;				$(formMessages).text(data.responseText);&#xD;&#xA;			} else {&#xD;&#xA;				$(formMessages).text('Oops! An error occured and your message           could not be sent.');&#xD;&#xA;			}&#xD;&#xA;		});&#xD;&#xA;	    });&#xD;&#xA;        });"
-1682005555560073119,42,9,"       <table id=""myTable"" class=""tablesorter""> &#xD;&#xA;       <thead> &#xD;&#xA;       <tr> &#xD;&#xA;           <th>Last Name</th> &#xD;&#xA;           <th>First Name</th> &#xD;&#xA;           <th>Email</th> &#xD;&#xA;           <th>Due</th> &#xD;&#xA;           <th>Web Site</th> &#xD;&#xA;       </tr> &#xD;&#xA;       </thead> &#xD;&#xA;       <tbody> &#xD;&#xA;       <tr> &#xD;&#xA;           <td>Smith</td> &#xD;&#xA;           <td>John</td> &#xD;&#xA;           <td>jsmith@gmail.com</td> &#xD;&#xA;           <td>$50.00</td> &#xD;&#xA;           <td>http://www.jsmith.com</td> &#xD;&#xA;       </tr> &#xD;&#xA;       <tr> &#xD;&#xA;           <td>Bach</td> &#xD;&#xA;           <td>Frank</td> &#xD;&#xA;           <td>fbach@yahoo.com</td> &#xD;&#xA;           <td>$50.00</td> &#xD;&#xA;           <td>http://www.frank.com</td> &#xD;&#xA;       </tr> &#xD;&#xA;       <tr> &#xD;&#xA;           <td>Doe</td> &#xD;&#xA;           <td>Jason</td> &#xD;&#xA;           <td>jdoe@hotmail.com</td> &#xD;&#xA;           <td>$100.00</td> &#xD;&#xA;           <td>http://www.jdoe.com</td> &#xD;&#xA;       </tr> &#xD;&#xA;       <tr> &#xD;&#xA;           <td>Conway</td> &#xD;&#xA;           <td>Tim</td> &#xD;&#xA;           <td>tconway@earthlink.net</td> &#xD;&#xA;           <td>$50.00</td> &#xD;&#xA;           <td>http://www.timconway.com</td> &#xD;&#xA;       </tr> &#xD;&#xA;       </tbody> &#xD;&#xA;       </table> &#xD;&#xA;    "
-3579414918379913120,42,9,    #container3 {&#xD;&#xA;        float:left;&#xD;&#xA;        width:100%;&#xD;&#xA;        background:green;&#xD;&#xA;        overflow:hidden;&#xD;&#xA;        position:relative;&#xD;&#xA;    }&#xD;&#xA;    #container2 {&#xD;&#xA;        float:left;&#xD;&#xA;        width:100%;&#xD;&#xA;        background:yellow;&#xD;&#xA;        position:relative;&#xD;&#xA;        right:30%;&#xD;&#xA;    }&#xD;&#xA;    #container1 {&#xD;&#xA;        float:left;&#xD;&#xA;        width:100%;&#xD;&#xA;        background:red;&#xD;&#xA;        position:relative;&#xD;&#xA;        right:40%;&#xD;&#xA;    }&#xD;&#xA;    #col1 {&#xD;&#xA;        float:left;&#xD;&#xA;        width:26%;&#xD;&#xA;        position:relative;&#xD;&#xA;        left:72%;&#xD;&#xA;        overflow:hidden;&#xD;&#xA;    }&#xD;&#xA;    #col2 {&#xD;&#xA;        float:left;&#xD;&#xA;        width:36%;&#xD;&#xA;        position:relative;&#xD;&#xA;        left:76%;&#xD;&#xA;        overflow:hidden;&#xD;&#xA;    }&#xD;&#xA;    #col3 {&#xD;&#xA;        float:left;&#xD;&#xA;        width:26%;&#xD;&#xA;        position:relative;&#xD;&#xA;        left:80%;&#xD;&#xA;        overflow:hidden;&#xD;&#xA;    }
-4211794422638074276,42,9,"    package com.commonsware.android.camcon;&#xD;&#xA;    &#xD;&#xA;    import android.app.Activity;&#xD;&#xA;    import android.content.Intent;&#xD;&#xA;    import android.net.Uri;&#xD;&#xA;    import android.os.Bundle;&#xD;&#xA;    import android.os.Environment;&#xD;&#xA;    import android.provider.MediaStore;&#xD;&#xA;    import java.io.File;&#xD;&#xA;    &#xD;&#xA;    public class CameraContentDemoActivity extends Activity {&#xD;&#xA;      private static final int CONTENT_REQUEST=1337;&#xD;&#xA;      private File output=null;&#xD;&#xA;    &#xD;&#xA;      @Override&#xD;&#xA;      public void onCreate(Bundle savedInstanceState) {&#xD;&#xA;        super.onCreate(savedInstanceState);&#xD;&#xA;    &#xD;&#xA;        Intent i=new Intent(MediaStore.ACTION_IMAGE_CAPTURE);&#xD;&#xA;        File dir=&#xD;&#xA;            Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DCIM);&#xD;&#xA;    &#xD;&#xA;        output=new File(dir, ""CameraContentDemo.jpeg"");&#xD;&#xA;        i.putExtra(MediaStore.EXTRA_OUTPUT, Uri.fromFile(output));&#xD;&#xA;    &#xD;&#xA;        startActivityForResult(i, CONTENT_REQUEST);&#xD;&#xA;      }&#xD;&#xA;    &#xD;&#xA;      @Override&#xD;&#xA;      protected void onActivityResult(int requestCode, int resultCode,&#xD;&#xA;                                      Intent data) {&#xD;&#xA;        if (requestCode == CONTENT_REQUEST) {&#xD;&#xA;          if (resultCode == RESULT_OK) {&#xD;&#xA;            Intent i=new Intent(Intent.ACTION_VIEW);&#xD;&#xA;            &#xD;&#xA;            i.setDataAndType(Uri.fromFile(output), ""image/jpeg"");&#xD;&#xA;            startActivity(i);&#xD;&#xA;            finish();&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;    }"
-3545275688409708626,43,9,"          public static T FindChild<T>(DependencyObject parent, string childName)&#xD;&#xA;       where T : DependencyObject&#xD;&#xA;            {&#xD;&#xA;                // Confirm parent and childName are valid. &#xD;&#xA;                if (parent == null) return null;&#xD;&#xA;    &#xD;&#xA;                T foundChild = null;&#xD;&#xA;    &#xD;&#xA;                int childrenCount = VisualTreeHelper.GetChildrenCount(parent);&#xD;&#xA;                for (int i = 0; i < childrenCount; i++)&#xD;&#xA;                {&#xD;&#xA;                    var child = VisualTreeHelper.GetChild(parent, i);&#xD;&#xA;                    // If the child is not of the request child type child&#xD;&#xA;                    T childType = child as T;&#xD;&#xA;                    if (childType == null)&#xD;&#xA;                    {&#xD;&#xA;                        // recursively drill down the tree&#xD;&#xA;                        foundChild = FindChild<T>(child, childName);&#xD;&#xA;    &#xD;&#xA;                        // If the child is found, break so we do not overwrite the found child. &#xD;&#xA;                        if (foundChild != null) break;&#xD;&#xA;                    }&#xD;&#xA;                    else if (!string.IsNullOrEmpty(childName))&#xD;&#xA;                    {&#xD;&#xA;                        var frameworkElement = child as FrameworkElement;&#xD;&#xA;                        // If the child's name is set for search&#xD;&#xA;                        if (frameworkElement != null && frameworkElement.Name == childName)&#xD;&#xA;                        {&#xD;&#xA;                            // if the child's name is of the request name&#xD;&#xA;                            foundChild = (T)child;&#xD;&#xA;                            break;&#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;                    else&#xD;&#xA;                    {&#xD;&#xA;                        // child element found.&#xD;&#xA;                        foundChild = (T)child;&#xD;&#xA;                        break;&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;                return foundChild;&#xD;&#xA;            }"
1758875595276194866,43,9,"        <style>&#xD;&#xA;      .thumb {&#xD;&#xA;        height: 75px;&#xD;&#xA;        border: 1px solid #000;&#xD;&#xA;        margin: 10px 5px 0 0;&#xD;&#xA;      }&#xD;&#xA;    </style>&#xD;&#xA;    &#xD;&#xA;    <input type=""file"" id=""files"" name=""files[]"" multiple />&#xD;&#xA;    <output id=""list""></output>&#xD;&#xA;    &#xD;&#xA;    <script>&#xD;&#xA;      function handleFileSelect(evt) {&#xD;&#xA;        var files = evt.target.files; // FileList object&#xD;&#xA;    &#xD;&#xA;        // Loop through the FileList and render image files as thumbnails.&#xD;&#xA;        for (var i = 0, f; f = files[i]; i++) {&#xD;&#xA;    &#xD;&#xA;          // Only process image files.&#xD;&#xA;          if (!f.type.match('image.*')) {&#xD;&#xA;            continue;&#xD;&#xA;          }&#xD;&#xA;    &#xD;&#xA;          var reader = new FileReader();&#xD;&#xA;    &#xD;&#xA;          // Closure to capture the file information.&#xD;&#xA;          reader.onload = (function(theFile) {&#xD;&#xA;            return function(e) {&#xD;&#xA;              // Render thumbnail.&#xD;&#xA;              var span = document.createElement('span');&#xD;&#xA;              span.innerHTML = ['<img class=""thumb"" src=""', e.target.result,&#xD;&#xA;                                '"" title=""', escape(theFile.name), '""/>'].join('');&#xD;&#xA;              document.getElementById('list').insertBefore(span, null);&#xD;&#xA;            };&#xD;&#xA;          })(f);&#xD;&#xA;    &#xD;&#xA;          // Read in the image file as a data URL.&#xD;&#xA;          reader.readAsDataURL(f);&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;    &#xD;&#xA;      document.getElementById('files').addEventListener('change', handleFileSelect, false);&#xD;&#xA;    </script>"
-7062081005185602493,44,9,"        public class JSONfunctions {&#xD;&#xA;    &#xD;&#xA;    	public static JSONObject getJSONfromURL(String url) {&#xD;&#xA;    		InputStream is = null;&#xD;&#xA;    		String result = """";&#xD;&#xA;    		JSONObject jArray = null;&#xD;&#xA;    &#xD;&#xA;    		// Download JSON data from URL&#xD;&#xA;    		try {&#xD;&#xA;    			HttpClient httpclient = new DefaultHttpClient();&#xD;&#xA;    			HttpPost httppost = new HttpPost(url);&#xD;&#xA;    			HttpResponse response = httpclient.execute(httppost);&#xD;&#xA;    			HttpEntity entity = response.getEntity();&#xD;&#xA;    			is = entity.getContent();&#xD;&#xA;    &#xD;&#xA;    		} catch (Exception e) {&#xD;&#xA;    			Log.e(""log_tag"", ""Error in http connection "" + e.toString());&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		// Convert response to string&#xD;&#xA;    		try {&#xD;&#xA;    			BufferedReader reader = new BufferedReader(new InputStreamReader(&#xD;&#xA;    					is, ""iso-8859-1""), 8);&#xD;&#xA;    			StringBuilder sb = new StringBuilder();&#xD;&#xA;    			String line = null;&#xD;&#xA;    			while ((line = reader.readLine()) != null) {&#xD;&#xA;    				sb.append(line + ""\n"");&#xD;&#xA;    			}&#xD;&#xA;    			is.close();&#xD;&#xA;    			result = sb.toString();&#xD;&#xA;    		} catch (Exception e) {&#xD;&#xA;    			Log.e(""log_tag"", ""Error converting result "" + e.toString());&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		try {&#xD;&#xA;    &#xD;&#xA;    			jArray = new JSONObject(result);&#xD;&#xA;    		} catch (JSONException e) {&#xD;&#xA;    			Log.e(""log_tag"", ""Error parsing data "" + e.toString());&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		return jArray;&#xD;&#xA;    	}&#xD;&#xA;    }"
787360174365064052,45,9,"        public class RelayCommand : ICommand&#xD;&#xA;        {&#xD;&#xA;            #region Fields&#xD;&#xA;            readonly Action<object> _execute;&#xD;&#xA;            readonly Predicate<object> _canExecute;&#xD;&#xA;            #endregion // Fields&#xD;&#xA;            #region Constructors&#xD;&#xA;            /// <summary>&#xD;&#xA;            /// Creates a new command that can always execute.&#xD;&#xA;            /// </summary>&#xD;&#xA;            /// <param name=""execute"">The execution logic.</param>&#xD;&#xA;            public RelayCommand(Action<object> execute)&#xD;&#xA;                : this(execute, null)&#xD;&#xA;            {&#xD;&#xA;            }&#xD;&#xA;            /// <summary>&#xD;&#xA;            /// Creates a new command.&#xD;&#xA;            /// </summary>&#xD;&#xA;            /// <param name=""execute"">The execution logic.</param>&#xD;&#xA;            /// <param name=""canExecute"">The execution status logic.</param>&#xD;&#xA;            public RelayCommand(Action<object> execute, Predicate<object> canExecute)&#xD;&#xA;            {&#xD;&#xA;                if (execute == null)&#xD;&#xA;                    throw new ArgumentNullException(""execute"");&#xD;&#xA;                _execute = execute;&#xD;&#xA;                _canExecute = canExecute;&#xD;&#xA;            }&#xD;&#xA;            #endregion // Constructors&#xD;&#xA;            #region ICommand Members&#xD;&#xA;            [DebuggerStepThrough]&#xD;&#xA;            public bool CanExecute(object parameter)&#xD;&#xA;            {&#xD;&#xA;                return _canExecute == null ? true : _canExecute(parameter);&#xD;&#xA;            }&#xD;&#xA;            public event EventHandler CanExecuteChanged&#xD;&#xA;            {&#xD;&#xA;                add { CommandManager.RequerySuggested += value; }&#xD;&#xA;                remove { CommandManager.RequerySuggested -= value; }&#xD;&#xA;            }&#xD;&#xA;            public void Execute(object parameter)&#xD;&#xA;            {&#xD;&#xA;                _execute(parameter);&#xD;&#xA;            }&#xD;&#xA;            #endregion // ICommand Members&#xD;&#xA;        }"
-5893792438426740340,45,9,"        .onoffswitch {&#xD;&#xA;            position: relative; width: 90px;&#xD;&#xA;            -webkit-user-select:none; -moz-user-select:none; -ms-user-select: none;&#xD;&#xA;        }&#xD;&#xA;        .onoffswitch-checkbox {&#xD;&#xA;            display: none;&#xD;&#xA;        }&#xD;&#xA;        .onoffswitch-label {&#xD;&#xA;            display: block; overflow: hidden; cursor: pointer;&#xD;&#xA;            border: 2px solid #999999; border-radius: 20px;&#xD;&#xA;        }&#xD;&#xA;        .onoffswitch-inner {&#xD;&#xA;            display: block; width: 200%; margin-left: -100%;&#xD;&#xA;            transition: margin 0.3s ease-in 0s;&#xD;&#xA;        }&#xD;&#xA;        .onoffswitch-inner:before, .onoffswitch-inner:after {&#xD;&#xA;            display: block; float: left; width: 50%; height: 30px; padding: 0; line-height: 30px;&#xD;&#xA;            font-size: 14px; color: white; font-family: Trebuchet, Arial, sans-serif; font-weight: bold;&#xD;&#xA;            box-sizing: border-box;&#xD;&#xA;        }&#xD;&#xA;        .onoffswitch-inner:before {&#xD;&#xA;            content: ""ON"";&#xD;&#xA;            padding-left: 10px;&#xD;&#xA;            background-color: #34A7C1; color: #FFFFFF;&#xD;&#xA;        }&#xD;&#xA;        .onoffswitch-inner:after {&#xD;&#xA;            content: ""OFF"";&#xD;&#xA;            padding-right: 10px;&#xD;&#xA;            background-color: #EEEEEE; color: #999999;&#xD;&#xA;            text-align: right;&#xD;&#xA;        }&#xD;&#xA;        .onoffswitch-switch {&#xD;&#xA;            display: block; width: 18px; margin: 6px;&#xD;&#xA;            background: #FFFFFF;&#xD;&#xA;            position: absolute; top: 0; bottom: 0;&#xD;&#xA;            right: 56px;&#xD;&#xA;            border: 2px solid #999999; border-radius: 20px;&#xD;&#xA;            transition: all 0.3s ease-in 0s; &#xD;&#xA;        }&#xD;&#xA;        .onoffswitch-checkbox:checked + .onoffswitch-label .onoffswitch-inner {&#xD;&#xA;            margin-left: 0;&#xD;&#xA;        }&#xD;&#xA;        .onoffswitch-checkbox:checked + .onoffswitch-label .onoffswitch-switch {&#xD;&#xA;            right: 0px; &#xD;&#xA;        }"
1029253203015088369,46,9,"        public static class HtmlPrefixScopeExtensions&#xD;&#xA;    {&#xD;&#xA;        private const string idsToReuseKey = ""__htmlPrefixScopeExtensions_IdsToReuse_"";&#xD;&#xA;        public static IDisposable BeginCollectionItem(this HtmlHelper html, string collectionName)&#xD;&#xA;        {&#xD;&#xA;            var idsToReuse = GetIdsToReuse(html.ViewContext.HttpContext, collectionName);&#xD;&#xA;            string itemIndex = idsToReuse.Count > 0 ? idsToReuse.Dequeue() : Guid.NewGuid().ToString();&#xD;&#xA;            // autocomplete=""off"" is needed to work around a very annoying Chrome behaviour whereby it reuses old values after the user clicks ""Back"", which causes the xyz.index and xyz[...] values to get out of sync.&#xD;&#xA;            html.ViewContext.Writer.WriteLine(string.Format(""<input type=\""hidden\"" name=\""{0}.index\"" autocomplete=\""off\"" value=\""{1}\"" />"", collectionName, html.Encode(itemIndex)));&#xD;&#xA;            return BeginHtmlFieldPrefixScope(html, string.Format(""{0}[{1}]"", collectionName, itemIndex));&#xD;&#xA;        }&#xD;&#xA;        public static IDisposable BeginHtmlFieldPrefixScope(this HtmlHelper html, string htmlFieldPrefix)&#xD;&#xA;        {&#xD;&#xA;            return new HtmlFieldPrefixScope(html.ViewData.TemplateInfo, htmlFieldPrefix);&#xD;&#xA;        }&#xD;&#xA;        private static Queue<string> GetIdsToReuse(HttpContextBase httpContext, string collectionName)&#xD;&#xA;        {&#xD;&#xA;            // We need to use the same sequence of IDs following a server-side validation failure,  &#xD;&#xA;            // otherwise the framework won't render the validation error messages next to each item.&#xD;&#xA;            string key = idsToReuseKey + collectionName;&#xD;&#xA;            var queue = (Queue<string>)httpContext.Items[key];&#xD;&#xA;            if (queue == null) {&#xD;&#xA;                httpContext.Items[key] = queue = new Queue<string>();&#xD;&#xA;                var previouslyUsedIds = httpContext.Request[collectionName + "".index""];&#xD;&#xA;                if (!string.IsNullOrEmpty(previouslyUsedIds))&#xD;&#xA;                    foreach (string previouslyUsedId in previouslyUsedIds.Split(','))&#xD;&#xA;                        queue.Enqueue(previouslyUsedId);&#xD;&#xA;            }&#xD;&#xA;            return queue;&#xD;&#xA;        }&#xD;&#xA;        private class HtmlFieldPrefixScope : IDisposable&#xD;&#xA;        {&#xD;&#xA;            private readonly TemplateInfo templateInfo;&#xD;&#xA;            private readonly string previousHtmlFieldPrefix;&#xD;&#xA;            public HtmlFieldPrefixScope(TemplateInfo templateInfo, string htmlFieldPrefix)&#xD;&#xA;            {&#xD;&#xA;                this.templateInfo = templateInfo;&#xD;&#xA;                previousHtmlFieldPrefix = templateInfo.HtmlFieldPrefix;&#xD;&#xA;                templateInfo.HtmlFieldPrefix = htmlFieldPrefix;&#xD;&#xA;            }&#xD;&#xA;            public void Dispose()&#xD;&#xA;            {&#xD;&#xA;                templateInfo.HtmlFieldPrefix = previousHtmlFieldPrefix;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }"
1590500060369058200,46,9,"      <?php&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * A class file to connect to database&#xD;&#xA;     */&#xD;&#xA;    class DB_CONNECT {&#xD;&#xA;    &#xD;&#xA;        // constructor&#xD;&#xA;        function __construct() {&#xD;&#xA;            // connecting to database&#xD;&#xA;            $this->connect();&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // destructor&#xD;&#xA;        function __destruct() {&#xD;&#xA;            // closing db connection&#xD;&#xA;            $this->close();&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /**&#xD;&#xA;         * Function to connect with database&#xD;&#xA;         */&#xD;&#xA;        function connect() {&#xD;&#xA;            // import database connection variables&#xD;&#xA;            require_once __DIR__ . '/db_config.php';&#xD;&#xA;    &#xD;&#xA;            // Connecting to mysql database&#xD;&#xA;            $con = mysql_connect(DB_SERVER, DB_USER, DB_PASSWORD) or die(mysql_error());&#xD;&#xA;    &#xD;&#xA;            // Selecing database&#xD;&#xA;            $db = mysql_select_db(DB_DATABASE) or die(mysql_error()) or die(mysql_error());&#xD;&#xA;    &#xD;&#xA;            // returing connection cursor&#xD;&#xA;            return $con;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /**&#xD;&#xA;         * Function to close db connection&#xD;&#xA;         */&#xD;&#xA;        function close() {&#xD;&#xA;            // closing db connection&#xD;&#xA;            mysql_close();&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    ?>"
2890719826624833124,48,9,"        private void publishFeedDialog() {&#xD;&#xA;        Bundle params = new Bundle();&#xD;&#xA;        params.putString(""name"", ""Facebook SDK for Android"");&#xD;&#xA;        params.putString(""caption"", ""Build great social apps and get more installs."");&#xD;&#xA;        params.putString(""description"", ""The Facebook SDK for Android makes it easier and faster to develop Facebook integrated Android apps."");&#xD;&#xA;        params.putString(""link"", ""https://developers.facebook.com/android"");&#xD;&#xA;        params.putString(""picture"", ""https://raw.github.com/fbsamples/ios-3.x-howtos/master/Images/iossdk_logo.png"");&#xD;&#xA;    &#xD;&#xA;        WebDialog feedDialog = (&#xD;&#xA;            new WebDialog.FeedDialogBuilder(getActivity(),&#xD;&#xA;                Session.getActiveSession(),&#xD;&#xA;                params))&#xD;&#xA;            .setOnCompleteListener(new OnCompleteListener() {&#xD;&#xA;    &#xD;&#xA;                @Override&#xD;&#xA;                public void onComplete(Bundle values,&#xD;&#xA;                    FacebookException error) {&#xD;&#xA;                    if (error == null) {&#xD;&#xA;                        // When the story is posted, echo the success&#xD;&#xA;                        // and the post Id.&#xD;&#xA;                        final String postId = values.getString(""post_id"");&#xD;&#xA;                        if (postId != null) {&#xD;&#xA;                            Toast.makeText(getActivity(),&#xD;&#xA;                                ""Posted story, id: ""+postId,&#xD;&#xA;                                Toast.LENGTH_SHORT).show();&#xD;&#xA;                        } else {&#xD;&#xA;                            // User clicked the Cancel button&#xD;&#xA;                            Toast.makeText(getActivity().getApplicationContext(), &#xD;&#xA;                                ""Publish cancelled"", &#xD;&#xA;                                Toast.LENGTH_SHORT).show();&#xD;&#xA;                        }&#xD;&#xA;                    } else if (error instanceof FacebookOperationCanceledException) {&#xD;&#xA;                        // User clicked the ""x"" button&#xD;&#xA;                        Toast.makeText(getActivity().getApplicationContext(), &#xD;&#xA;                            ""Publish cancelled"", &#xD;&#xA;                            Toast.LENGTH_SHORT).show();&#xD;&#xA;                    } else {&#xD;&#xA;                        // Generic, ex: network error&#xD;&#xA;                        Toast.makeText(getActivity().getApplicationContext(), &#xD;&#xA;                            ""Error posting story"", &#xD;&#xA;                            Toast.LENGTH_SHORT).show();&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;            })&#xD;&#xA;            .build();&#xD;&#xA;        feedDialog.show();&#xD;&#xA;    }"
8877693753634073099,48,9,"	user www-data;&#xD;&#xA;	worker_processes auto;&#xD;&#xA;	pid /run/nginx.pid;&#xD;&#xA;	events {&#xD;&#xA;		worker_connections 768;&#xD;&#xA;		# multi_accept on;&#xD;&#xA;	}&#xD;&#xA;	http {&#xD;&#xA;		##&#xD;&#xA;		# Basic Settings&#xD;&#xA;		##&#xD;&#xA;		sendfile on;&#xD;&#xA;		tcp_nopush on;&#xD;&#xA;		tcp_nodelay on;&#xD;&#xA;		keepalive_timeout 65;&#xD;&#xA;		types_hash_max_size 2048;&#xD;&#xA;		# server_tokens off;&#xD;&#xA;		server_names_hash_bucket_size 64;&#xD;&#xA;		# server_name_in_redirect off;&#xD;&#xA;		include /etc/nginx/mime.types;&#xD;&#xA;		default_type application/octet-stream;&#xD;&#xA;		##&#xD;&#xA;		# SSL Settings&#xD;&#xA;		##&#xD;&#xA;		ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE&#xD;&#xA;		ssl_prefer_server_ciphers on;&#xD;&#xA;		##&#xD;&#xA;		# Logging Settings&#xD;&#xA;		##&#xD;&#xA;		access_log /var/log/nginx/access.log;&#xD;&#xA;		error_log /var/log/nginx/error.log;&#xD;&#xA;		##&#xD;&#xA;		# Gzip Settings&#xD;&#xA;		##&#xD;&#xA;		gzip on;&#xD;&#xA;		gzip_disable ""msie6"";&#xD;&#xA;		# gzip_vary on;&#xD;&#xA;		# gzip_proxied any;&#xD;&#xA;		# gzip_comp_level 6;&#xD;&#xA;		# gzip_buffers 16 8k;&#xD;&#xA;		# gzip_http_version 1.1;&#xD;&#xA;		# gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;&#xD;&#xA;		##&#xD;&#xA;		# Virtual Host Configs&#xD;&#xA;		##&#xD;&#xA;		include /etc/nginx/conf.d/*.conf;&#xD;&#xA;		include /etc/nginx/sites-enabled/*;&#xD;&#xA;	}"
2745604788691274898,49,9,"        {&#xD;&#xA;      ""status"": ""OK"",&#xD;&#xA;      ""results"": [ {&#xD;&#xA;        ""types"": [ ""street_address"" ],&#xD;&#xA;        ""formatted_address"": ""1600 Amphitheatre Pkwy, Mountain View, CA 94043, USA"",&#xD;&#xA;        ""address_components"": [ {&#xD;&#xA;          ""long_name"": ""1600"",&#xD;&#xA;          ""short_name"": ""1600"",&#xD;&#xA;          ""types"": [ ""street_number"" ]&#xD;&#xA;        }, {&#xD;&#xA;          ""long_name"": ""Amphitheatre Pkwy"",&#xD;&#xA;          ""short_name"": ""Amphitheatre Pkwy"",&#xD;&#xA;          ""types"": [ ""route"" ]&#xD;&#xA;        }, {&#xD;&#xA;          ""long_name"": ""Mountain View"",&#xD;&#xA;          ""short_name"": ""Mountain View"",&#xD;&#xA;          ""types"": [ ""locality"", ""political"" ]&#xD;&#xA;        }, {&#xD;&#xA;          ""long_name"": ""California"",&#xD;&#xA;          ""short_name"": ""CA"",&#xD;&#xA;          ""types"": [ ""administrative_area_level_1"", ""political"" ]&#xD;&#xA;        }, {&#xD;&#xA;          ""long_name"": ""United States"",&#xD;&#xA;          ""short_name"": ""US"",&#xD;&#xA;          ""types"": [ ""country"", ""political"" ]&#xD;&#xA;        }, {&#xD;&#xA;          ""long_name"": ""94043"",&#xD;&#xA;          ""short_name"": ""94043"",&#xD;&#xA;          ""types"": [ ""postal_code"" ]&#xD;&#xA;        } ],&#xD;&#xA;        ""geometry"": {&#xD;&#xA;          ""location"": {&#xD;&#xA;            ""lat"": 37.4219720,&#xD;&#xA;            ""lng"": -122.0841430&#xD;&#xA;          },&#xD;&#xA;          ""location_type"": ""ROOFTOP"",&#xD;&#xA;          ""viewport"": {&#xD;&#xA;            ""southwest"": {&#xD;&#xA;              ""lat"": 37.4188244,&#xD;&#xA;              ""lng"": -122.0872906&#xD;&#xA;            },&#xD;&#xA;            ""northeast"": {&#xD;&#xA;              ""lat"": 37.4251196,&#xD;&#xA;              ""lng"": -122.0809954&#xD;&#xA;            }&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;      } ]&#xD;&#xA;    }"
1993889331545796194,50,9,"      public class CustomVolleyRequest {&#xD;&#xA;    &#xD;&#xA;        private static CustomVolleyRequest customVolleyRequest;&#xD;&#xA;        private static Context context;&#xD;&#xA;        private RequestQueue requestQueue;&#xD;&#xA;        private ImageLoader imageLoader;&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        private CustomVolleyRequest(Context context) {&#xD;&#xA;            this.context = context;&#xD;&#xA;            this.requestQueue = getRequestQueue();&#xD;&#xA;    &#xD;&#xA;            imageLoader = new ImageLoader(requestQueue,&#xD;&#xA;                    new ImageLoader.ImageCache() {&#xD;&#xA;                        private final LruCache<String, Bitmap>&#xD;&#xA;                                cache = new LruCache<String, Bitmap>(20);&#xD;&#xA;    &#xD;&#xA;                        @Override&#xD;&#xA;                        public Bitmap getBitmap(String url) {&#xD;&#xA;                            return cache.get(url);&#xD;&#xA;                        }&#xD;&#xA;    &#xD;&#xA;                        @Override&#xD;&#xA;                        public void putBitmap(String url, Bitmap bitmap) {&#xD;&#xA;                            cache.put(url, bitmap);&#xD;&#xA;                        }&#xD;&#xA;                    });&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public static synchronized CustomVolleyRequest getInstance(Context context) {&#xD;&#xA;            if (customVolleyRequest == null) {&#xD;&#xA;                customVolleyRequest = new CustomVolleyRequest(context);&#xD;&#xA;            }&#xD;&#xA;            return customVolleyRequest;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public RequestQueue getRequestQueue() {&#xD;&#xA;            if (requestQueue == null) {&#xD;&#xA;                Cache cache = new DiskBasedCache(context.getCacheDir(), 10 * 1024 * 1024);&#xD;&#xA;                Network network = new BasicNetwork(new HurlStack());&#xD;&#xA;                requestQueue = new RequestQueue(cache, network);&#xD;&#xA;                requestQueue.start();&#xD;&#xA;            }&#xD;&#xA;            return requestQueue;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public ImageLoader getImageLoader() {&#xD;&#xA;            return imageLoader;&#xD;&#xA;        }&#xD;&#xA;    }"
-416399917016842748,52,9,     - (void)controllerWillChangeContent:(NSFetchedResultsController *)controller {&#xD;&#xA;         [self.tableView beginUpdates];&#xD;&#xA;      }&#xD;&#xA;       - (void)controller:(NSFetchedResultsController *)controller didChangeSection:(id <NSFetchedResultsSectionInfo>)sectionInfo&#xD;&#xA;           atIndex:(NSUInteger)sectionIndex forChangeType:(NSFetchedResultsChangeType)type {&#xD;&#xA;    &#xD;&#xA;    switch(type) {&#xD;&#xA;        case NSFetchedResultsChangeInsert:&#xD;&#xA;            [self.tableView insertSections:[NSIndexSet indexSetWithIndex:sectionIndex]&#xD;&#xA;                          withRowAnimation:UITableViewRowAnimationFade];&#xD;&#xA;            break;&#xD;&#xA;            &#xD;&#xA;        case NSFetchedResultsChangeDelete:&#xD;&#xA;            [self.tableView deleteSections:[NSIndexSet indexSetWithIndex:sectionIndex]&#xD;&#xA;                          withRowAnimation:UITableViewRowAnimationFade];&#xD;&#xA;            break;&#xD;&#xA;       }&#xD;&#xA;      }&#xD;&#xA;      - (void)controller:(NSFetchedResultsController *)controller didChangeObject:(id)anObject&#xD;&#xA;       atIndexPath:(NSIndexPath *)indexPath forChangeType:(NSFetchedResultsChangeType)type&#xD;&#xA;      newIndexPath:(NSIndexPath *)newIndexPath {&#xD;&#xA;    &#xD;&#xA;    UITableView *tableView = self.tableView;&#xD;&#xA;    &#xD;&#xA;    switch(type) {&#xD;&#xA;            &#xD;&#xA;        case NSFetchedResultsChangeInsert:&#xD;&#xA;            [tableView insertRowsAtIndexPaths:[NSArray arrayWithObject:newIndexPath]&#xD;&#xA;                             withRowAnimation:UITableViewRowAnimationFade];&#xD;&#xA;            break;&#xD;&#xA;            &#xD;&#xA;        case NSFetchedResultsChangeDelete:&#xD;&#xA;            [tableView deleteRowsAtIndexPaths:[NSArray arrayWithObject:indexPath]&#xD;&#xA;                             withRowAnimation:UITableViewRowAnimationFade];&#xD;&#xA;            break;&#xD;&#xA;            &#xD;&#xA;        case NSFetchedResultsChangeUpdate:&#xD;&#xA;            [self configureCell:[tableView cellForRowAtIndexPath:indexPath]&#xD;&#xA;                    atIndexPath:indexPath];&#xD;&#xA;            break;&#xD;&#xA;            &#xD;&#xA;        case NSFetchedResultsChangeMove:&#xD;&#xA;            [tableView deleteRowsAtIndexPaths:[NSArray arrayWithObject:indexPath]&#xD;&#xA;                             withRowAnimation:UITableViewRowAnimationFade];&#xD;&#xA;            [tableView insertRowsAtIndexPaths:[NSArray arrayWithObject:newIndexPath]&#xD;&#xA;                             withRowAnimation:UITableViewRowAnimationFade];&#xD;&#xA;            break;&#xD;&#xA;         }&#xD;&#xA;     }&#xD;&#xA;      - (void)controllerDidChangeContent:(NSFetchedResultsController *)controller {&#xD;&#xA;         [self.tableView endUpdates];&#xD;&#xA;      }
-4475515724740156429,52,9,"	<?xml version=""1.0""?>&#xD;&#xA;	<configuration>&#xD;&#xA;	  <configSections>&#xD;&#xA;		<sectionGroup name=""system.web.webPages.razor"" type=""System.Web.WebPages.Razor.Configuration.RazorWebSectionGroup, System.Web.WebPages.Razor, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"">&#xD;&#xA;		  <section name=""host"" type=""System.Web.WebPages.Razor.Configuration.HostSection, System.Web.WebPages.Razor, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"" requirePermission=""false"" />&#xD;&#xA;		  <section name=""pages"" type=""System.Web.WebPages.Razor.Configuration.RazorPagesSection, System.Web.WebPages.Razor, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"" requirePermission=""false"" />&#xD;&#xA;		</sectionGroup>&#xD;&#xA;	  </configSections>&#xD;&#xA;	  <system.web.webPages.razor>&#xD;&#xA;		<host factoryType=""System.Web.Mvc.MvcWebRazorHostFactory, System.Web.Mvc, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"" />&#xD;&#xA;		<pages pageBaseType=""System.Web.Mvc.WebViewPage"">&#xD;&#xA;		  <namespaces>&#xD;&#xA;			<add namespace=""System.Web.Mvc"" />&#xD;&#xA;			<add namespace=""System.Web.Mvc.Ajax"" />&#xD;&#xA;			<add namespace=""System.Web.Mvc.Html"" />&#xD;&#xA;			<add namespace=""System.Web.Optimization""/>&#xD;&#xA;			<add namespace=""System.Web.Routing"" />&#xD;&#xA;		  </namespaces>&#xD;&#xA;		</pages>&#xD;&#xA;	  </system.web.webPages.razor>&#xD;&#xA;	  <appSettings>&#xD;&#xA;		<add key=""webpages:Enabled"" value=""false"" />&#xD;&#xA;	  </appSettings>&#xD;&#xA;	  <system.web>&#xD;&#xA;		<httpHandlers>&#xD;&#xA;		  <add path=""*"" verb=""*"" type=""System.Web.HttpNotFoundHandler""/>&#xD;&#xA;		</httpHandlers>&#xD;&#xA;		<!--&#xD;&#xA;			Enabling request validation in view pages would cause validation to occur&#xD;&#xA;			after the input has already been processed by the controller. By default&#xD;&#xA;			MVC performs request validation before a controller processes the input.&#xD;&#xA;			To change this behavior apply the ValidateInputAttribute to a&#xD;&#xA;			controller or action.&#xD;&#xA;		-->&#xD;&#xA;		<pages&#xD;&#xA;			validateRequest=""false""&#xD;&#xA;			pageParserFilterType=""System.Web.Mvc.ViewTypeParserFilter, System.Web.Mvc, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35""&#xD;&#xA;			pageBaseType=""System.Web.Mvc.ViewPage, System.Web.Mvc, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35""&#xD;&#xA;			userControlBaseType=""System.Web.Mvc.ViewUserControl, System.Web.Mvc, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"">&#xD;&#xA;		  <controls>&#xD;&#xA;			<add assembly=""System.Web.Mvc, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"" namespace=""System.Web.Mvc"" tagPrefix=""mvc"" />&#xD;&#xA;		  </controls>&#xD;&#xA;		</pages>&#xD;&#xA;	  </system.web>&#xD;&#xA;	  <system.webServer>&#xD;&#xA;		<validation validateIntegratedModeConfiguration=""false"" />&#xD;&#xA;		<handlers>&#xD;&#xA;		  <remove name=""BlockViewHandler""/>&#xD;&#xA;		  <add name=""BlockViewHandler"" path=""*"" verb=""*"" preCondition=""integratedMode"" type=""System.Web.HttpNotFoundHandler"" />&#xD;&#xA;		</handlers>&#xD;&#xA;	  </system.webServer>&#xD;&#xA;	</configuration>"
7533036777677326903,54,9,"        public class JSONParser {&#xD;&#xA;	static InputStream is = null;&#xD;&#xA;	static JSONObject jObj = null;&#xD;&#xA;	static String json = """";&#xD;&#xA;	public JSONParser() {&#xD;&#xA;	}&#xD;&#xA;	public JSONObject makeHttpRequest(String url, String method,&#xD;&#xA;			List<NameValuePair> params) {&#xD;&#xA;		try {&#xD;&#xA;			if (method == ""POST"") {&#xD;&#xA;				DefaultHttpClient httpClient = new DefaultHttpClient();&#xD;&#xA;				HttpPost httpPost = new HttpPost(url);&#xD;&#xA;				httpPost.setEntity(new UrlEncodedFormEntity(params));&#xD;&#xA;				HttpResponse httpResponse = httpClient.execute(httpPost);&#xD;&#xA;				HttpEntity httpEntity = httpResponse.getEntity();&#xD;&#xA;				is = httpEntity.getContent();&#xD;&#xA;			} else if (method == ""GET"") {&#xD;&#xA;				DefaultHttpClient httpClient = new DefaultHttpClient();&#xD;&#xA;				String paramString = URLEncodedUtils.format(params, ""utf- 8"");&#xD;&#xA;				url += ""?"" + paramString;&#xD;&#xA;				HttpGet httpGet = new HttpGet(url);&#xD;&#xA;				HttpResponse httpResponse = httpClient.execute(httpGet);&#xD;&#xA;				HttpEntity httpEntity = httpResponse.getEntity();&#xD;&#xA;				is = httpEntity.getContent();&#xD;&#xA;			}&#xD;&#xA;		} catch (UnsupportedEncodingException e) {&#xD;&#xA;			e.printStackTrace();&#xD;&#xA;		} catch (ClientProtocolException e) {&#xD;&#xA;			e.printStackTrace();&#xD;&#xA;		} catch (IOException e) {&#xD;&#xA;			e.printStackTrace();&#xD;&#xA;		}&#xD;&#xA;		try {&#xD;&#xA;			BufferedReader reader = new BufferedReader(new InputStreamReader(&#xD;&#xA;					is, ""iso-8859-1""), 8);&#xD;&#xA;			StringBuilder sb = new StringBuilder();&#xD;&#xA;			String line = null;&#xD;&#xA;			while ((line = reader.readLine()) != null) {&#xD;&#xA;				sb.append(line + ""\n"");&#xD;&#xA;			}&#xD;&#xA;			is.close();&#xD;&#xA;			json = sb.toString();&#xD;&#xA;		} catch (Exception e) {&#xD;&#xA;			Log.e(""Buffer Error"", ""Error converting result "" + e.toString());&#xD;&#xA;		}&#xD;&#xA;		try {&#xD;&#xA;			jObj = new JSONObject(json);&#xD;&#xA;		} catch (JSONException e) {&#xD;&#xA;			Log.e(""JSON Parser"", ""Error parsing data "" + e.toString());&#xD;&#xA;		}&#xD;&#xA;		return jObj;&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;     }"
6707943169886565317,55,9,"    private static final int TWO_MINUTES = 1000 * 60 * 2;&#xD;&#xA;    &#xD;&#xA;    /** Determines whether one Location reading is better than the current Location fix&#xD;&#xA;      * @param location  The new Location that you want to evaluate&#xD;&#xA;      * @param currentBestLocation  The current Location fix, to which you want to compare the new one&#xD;&#xA;      */&#xD;&#xA;    protected boolean isBetterLocation(Location location, Location currentBestLocation) {&#xD;&#xA;        if (currentBestLocation == null) {&#xD;&#xA;            // A new location is always better than no location&#xD;&#xA;            return true;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // Check whether the new location fix is newer or older&#xD;&#xA;        long timeDelta = location.getTime() - currentBestLocation.getTime();&#xD;&#xA;        boolean isSignificantlyNewer = timeDelta > TWO_MINUTES;&#xD;&#xA;        boolean isSignificantlyOlder = timeDelta < -TWO_MINUTES;&#xD;&#xA;        boolean isNewer = timeDelta > 0;&#xD;&#xA;    &#xD;&#xA;        // If it's been more than two minutes since the current location, use the new location&#xD;&#xA;        // because the user has likely moved&#xD;&#xA;        if (isSignificantlyNewer) {&#xD;&#xA;            return true;&#xD;&#xA;        // If the new location is more than two minutes older, it must be worse&#xD;&#xA;        } else if (isSignificantlyOlder) {&#xD;&#xA;            return false;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // Check whether the new location fix is more or less accurate&#xD;&#xA;        int accuracyDelta = (int) (location.getAccuracy() - currentBestLocation.getAccuracy());&#xD;&#xA;        boolean isLessAccurate = accuracyDelta > 0;&#xD;&#xA;        boolean isMoreAccurate = accuracyDelta < 0;&#xD;&#xA;        boolean isSignificantlyLessAccurate = accuracyDelta > 200;&#xD;&#xA;    &#xD;&#xA;        // Check if the old and new location are from the same provider&#xD;&#xA;        boolean isFromSameProvider = isSameProvider(location.getProvider(),&#xD;&#xA;                currentBestLocation.getProvider());&#xD;&#xA;    &#xD;&#xA;        // Determine location quality using a combination of timeliness and accuracy&#xD;&#xA;        if (isMoreAccurate) {&#xD;&#xA;            return true;&#xD;&#xA;        } else if (isNewer && !isLessAccurate) {&#xD;&#xA;            return true;&#xD;&#xA;        } else if (isNewer && !isSignificantlyLessAccurate && isFromSameProvider) {&#xD;&#xA;            return true;&#xD;&#xA;        }&#xD;&#xA;        return false;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    /** Checks whether two providers are the same */&#xD;&#xA;    private boolean isSameProvider(String provider1, String provider2) {&#xD;&#xA;        if (provider1 == null) {&#xD;&#xA;          return provider2 == null;&#xD;&#xA;        }&#xD;&#xA;        return provider1.equals(provider2);&#xD;&#xA;     }"
-9017086595559876125,57,9,"        #include <stdio.h>&#xD;&#xA;    #include <stdlib.h>&#xD;&#xA;    #include <unistd.h>&#xD;&#xA;    #include <string.h>&#xD;&#xA;    #include <sys/types.h>&#xD;&#xA;    #include <sys/socket.h>&#xD;&#xA;    #include <netinet/in.h>&#xD;&#xA;    #include <netdb.h> &#xD;&#xA;    &#xD;&#xA;    void error(const char *msg)&#xD;&#xA;    {&#xD;&#xA;        perror(msg);&#xD;&#xA;        exit(0);&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    int main(int argc, char *argv[])&#xD;&#xA;    {&#xD;&#xA;        int sockfd, portno, n;&#xD;&#xA;        struct sockaddr_in serv_addr;&#xD;&#xA;        struct hostent *server;&#xD;&#xA;        &#xD;&#xA;        char buffer[256];&#xD;&#xA;        if (argc < 3) {&#xD;&#xA;            fprintf(stderr,""usage %s hostname port\n"", argv[0]);&#xD;&#xA;            exit(0);&#xD;&#xA;        }&#xD;&#xA;        portno = atoi(argv[2]);&#xD;&#xA;        sockfd = socket(AF_INET, SOCK_STREAM, 0);&#xD;&#xA;        if (sockfd < 0) &#xD;&#xA;            error(""ERROR opening socket"");&#xD;&#xA;        server = gethostbyname(argv[1]);&#xD;&#xA;        if (server == NULL) {&#xD;&#xA;            fprintf(stderr,""ERROR, no such host\n"");&#xD;&#xA;            exit(0);&#xD;&#xA;        }&#xD;&#xA;        bzero((char *) &serv_addr, sizeof(serv_addr));&#xD;&#xA;        serv_addr.sin_family = AF_INET;&#xD;&#xA;        bcopy((char *)server->h_addr, &#xD;&#xA;              (char *)&serv_addr.sin_addr.s_addr,&#xD;&#xA;              server->h_length);&#xD;&#xA;        serv_addr.sin_port = htons(portno);&#xD;&#xA;        if (connect(sockfd,(struct sockaddr *) &serv_addr,sizeof(serv_addr)) < 0) &#xD;&#xA;            error(""ERROR connecting"");&#xD;&#xA;        printf(""Please enter the message: "");&#xD;&#xA;        bzero(buffer,256);&#xD;&#xA;        fgets(buffer,255,stdin);&#xD;&#xA;        n = write(sockfd,buffer,strlen(buffer));&#xD;&#xA;        if (n < 0) &#xD;&#xA;            error(""ERROR writing to socket"");&#xD;&#xA;        bzero(buffer,256);&#xD;&#xA;        n = read(sockfd,buffer,255);&#xD;&#xA;        if (n < 0) &#xD;&#xA;            error(""ERROR reading from socket"");&#xD;&#xA;        printf(""%s\n"",buffer);&#xD;&#xA;        close(sockfd);&#xD;&#xA;        return 0;&#xD;&#xA;    }"
1613622843387103500,58,9,"    function setActiveStyleSheet(title) {&#xD;&#xA;      var i, a, main;&#xD;&#xA;      for(i=0; (a = document.getElementsByTagName(""link"")[i]); i++) {&#xD;&#xA;        if(a.getAttribute(""rel"").indexOf(""style"") != -1 && a.getAttribute(""title"")) {&#xD;&#xA;          a.disabled = true;&#xD;&#xA;              if(a.getAttribute(""title"") == title) a.disabled = false;&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;    function getActiveStyleSheet() {&#xD;&#xA;      var i, a;&#xD;&#xA;      for(i=0; (a = document.getElementsByTagName(""link"")[i]); i++) {&#xD;&#xA;        if(a.getAttribute(""rel"").indexOf(""style"") != -1 && a.getAttribute(""title"") &&                           !a.disabled) return a.getAttribute(""title"");&#xD;&#xA;      }&#xD;&#xA;      return null;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    function getPreferredStyleSheet() {&#xD;&#xA;      var i, a;&#xD;&#xA;      for(i=0; (a = document.getElementsByTagName(""link"")[i]); i++) {&#xD;&#xA;        if(a.getAttribute(""rel"").indexOf(""style"") != -1&#xD;&#xA;           && a.getAttribute(""rel"").indexOf(""alt"") == -1&#xD;&#xA;               && a.getAttribute(""title"")&#xD;&#xA;           ) return a.getAttribute(""title"");&#xD;&#xA;      }&#xD;&#xA;      return null;&#xD;&#xA;    }&#xD;&#xA;    function createCookie(name,value,days) {&#xD;&#xA;      if (days) {&#xD;&#xA;        var date = new Date();&#xD;&#xA;        date.setTime(date.getTime()+(days*24*60*60*1000));&#xD;&#xA;        var expires = ""; expires=""+date.toGMTString();&#xD;&#xA;      }&#xD;&#xA;      else expires = """";&#xD;&#xA;      document.cookie = name+""=""+value+expires+""; path=/"";&#xD;&#xA;    }&#xD;&#xA;    function readCookie(name) {&#xD;&#xA;      var nameEQ = name + ""="";&#xD;&#xA;      var ca = document.cookie.split(';');&#xD;&#xA;      for(var i=0;i < ca.length;i++) {&#xD;&#xA;        var c = ca[i];&#xD;&#xA;        while (c.charAt(0)==' ') c = c.substring(1,c.length);&#xD;&#xA;        if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);&#xD;&#xA;      }&#xD;&#xA;      return null;&#xD;&#xA;    }&#xD;&#xA;    window.onload = function(e) {&#xD;&#xA;      var cookie = readCookie(""style"");&#xD;&#xA;      var title = cookie ? cookie : getPreferredStyleSheet();&#xD;&#xA;      setActiveStyleSheet(title);&#xD;&#xA;    }&#xD;&#xA;    window.onunload = function(e) {&#xD;&#xA;      var title = getActiveStyleSheet();&#xD;&#xA;      createCookie(""style"", title, 365);&#xD;&#xA;    }&#xD;&#xA;    var cookie = readCookie(""style"");&#xD;&#xA;    var title = cookie ? cookie : getPreferredStyleSheet();&#xD;&#xA;    setActiveStyleSheet(title);"
3470692816047781677,60,9,"    <?php&#xD;&#xA;    &#xD;&#xA;    // Put your device token here (without spaces):&#xD;&#xA;    &#xD;&#xA;        &#xD;&#xA;          $deviceToken = '1234567890123456789';&#xD;&#xA;    //&#xD;&#xA;    &#xD;&#xA;        &#xD;&#xA;    // Put your private key's passphrase here:&#xD;&#xA;    $passphrase = 'ProjectName';&#xD;&#xA;    &#xD;&#xA;    // Put your alert message here:&#xD;&#xA;    $message = 'My first push notification!';&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    $ctx = stream_context_create();&#xD;&#xA;    stream_context_set_option($ctx, 'ssl', 'local_cert', 'PemFileName.pem');&#xD;&#xA;    stream_context_set_option($ctx, 'ssl', 'passphrase', $passphrase);&#xD;&#xA;    &#xD;&#xA;    // Open a connection to the APNS server&#xD;&#xA;    $fp = stream_socket_client(&#xD;&#xA;    //	'ssl://gateway.push.apple.com:2195', $err,&#xD;&#xA;        'ssl://gateway.sandbox.push.apple.com:2195', $err,&#xD;&#xA;    	$errstr, 60, STREAM_CLIENT_CONNECT|STREAM_CLIENT_PERSISTENT, $ctx);&#xD;&#xA;    &#xD;&#xA;    if (!$fp)&#xD;&#xA;    	exit(""Failed to connect: $err $errstr"" . PHP_EOL);&#xD;&#xA;    &#xD;&#xA;    echo 'Connected to APNS' . PHP_EOL;&#xD;&#xA;    &#xD;&#xA;    // Create the payload body&#xD;&#xA;    &#xD;&#xA;    $body['aps'] = array(&#xD;&#xA;                         'content-available'=> 1,&#xD;&#xA;                         'alert' => $message,&#xD;&#xA;                         'sound' => 'default',&#xD;&#xA;                         'badge' => 0,&#xD;&#xA;                         );&#xD;&#xA;    &#xD;&#xA;        &#xD;&#xA;    &#xD;&#xA;    // Encode the payload as JSON&#xD;&#xA;        &#xD;&#xA;    $payload = json_encode($body);&#xD;&#xA;    &#xD;&#xA;    // Build the binary notification&#xD;&#xA;    $msg = chr(0) . pack('n', 32) . pack('H*', $deviceToken) . pack('n', strlen($payload)) . $payload;&#xD;&#xA;    &#xD;&#xA;    // Send it to the server&#xD;&#xA;    $result = fwrite($fp, $msg, strlen($msg));&#xD;&#xA;    &#xD;&#xA;    if (!$result)&#xD;&#xA;    	echo 'Message not delivered' . PHP_EOL;&#xD;&#xA;    else&#xD;&#xA;    	echo 'Message successfully delivered' . PHP_EOL;&#xD;&#xA;    &#xD;&#xA;    // Close the connection to the server&#xD;&#xA;    fclose($fp);"
-8581600035473759456,62,9,"    private Bitmap getBitmap(String path) {&#xD;&#xA;        &#xD;&#xA;        Uri uri = getImageUri(path);&#xD;&#xA;        InputStream in = null;&#xD;&#xA;        try {&#xD;&#xA;            final int IMAGE_MAX_SIZE = 1200000; // 1.2MP&#xD;&#xA;            in = mContentResolver.openInputStream(uri);&#xD;&#xA;        &#xD;&#xA;            // Decode image size&#xD;&#xA;            BitmapFactory.Options o = new BitmapFactory.Options();&#xD;&#xA;            o.inJustDecodeBounds = true;&#xD;&#xA;            BitmapFactory.decodeStream(in, null, o);&#xD;&#xA;            in.close();&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;            int scale = 1;&#xD;&#xA;            while ((o.outWidth * o.outHeight) * (1 / Math.pow(scale, 2)) > &#xD;&#xA;                  IMAGE_MAX_SIZE) {&#xD;&#xA;               scale++;&#xD;&#xA;            }&#xD;&#xA;            Log.d(TAG, ""scale = "" + scale + "", orig-width: "" + o.outWidth + "", &#xD;&#xA;               orig-height: "" + o.outHeight);&#xD;&#xA;        &#xD;&#xA;            Bitmap b = null;&#xD;&#xA;            in = mContentResolver.openInputStream(uri);&#xD;&#xA;            if (scale > 1) {&#xD;&#xA;                scale--;&#xD;&#xA;                // scale to max possible inSampleSize that still yields an image&#xD;&#xA;                // larger than target&#xD;&#xA;                o = new BitmapFactory.Options();&#xD;&#xA;                o.inSampleSize = scale;&#xD;&#xA;                b = BitmapFactory.decodeStream(in, null, o);&#xD;&#xA;        &#xD;&#xA;                // resize to desired dimensions&#xD;&#xA;                int height = b.getHeight();&#xD;&#xA;                int width = b.getWidth();&#xD;&#xA;                Log.d(TAG, ""1th scale operation dimenions - width: "" + width + "",&#xD;&#xA;                   height: "" + height);&#xD;&#xA;        &#xD;&#xA;                double y = Math.sqrt(IMAGE_MAX_SIZE&#xD;&#xA;                        / (((double) width) / height));&#xD;&#xA;                double x = (y / height) * width;&#xD;&#xA;        &#xD;&#xA;                Bitmap scaledBitmap = Bitmap.createScaledBitmap(b, (int) x, &#xD;&#xA;                   (int) y, true);&#xD;&#xA;                b.recycle();&#xD;&#xA;                b = scaledBitmap;&#xD;&#xA;        &#xD;&#xA;                System.gc();&#xD;&#xA;            } else {&#xD;&#xA;                b = BitmapFactory.decodeStream(in);&#xD;&#xA;            }&#xD;&#xA;            in.close();&#xD;&#xA;        &#xD;&#xA;            Log.d(TAG, ""bitmap size - width: "" +b.getWidth() + "", height: "" + &#xD;&#xA;               b.getHeight());&#xD;&#xA;            return b;&#xD;&#xA;        } catch (IOException e) {&#xD;&#xA;            Log.e(TAG, e.getMessage(),e);&#xD;&#xA;            return null;&#xD;&#xA;        }"
-8775151416932102248,65,9,"    var nVer = navigator.appVersion;&#xD;&#xA;    var nAgt = navigator.userAgent;&#xD;&#xA;    var browserName  = navigator.appName;&#xD;&#xA;    var fullVersion  = ''+parseFloat(navigator.appVersion); &#xD;&#xA;    var majorVersion = parseInt(navigator.appVersion,10);&#xD;&#xA;    var nameOffset,verOffset,ix;&#xD;&#xA;    &#xD;&#xA;    // In Opera, the true version is after ""Opera"" or after ""Version""&#xD;&#xA;    if ((verOffset=nAgt.indexOf(""Opera""))!=-1) {&#xD;&#xA;     browserName = ""Opera"";&#xD;&#xA;     fullVersion = nAgt.substring(verOffset+6);&#xD;&#xA;     if ((verOffset=nAgt.indexOf(""Version""))!=-1) &#xD;&#xA;       fullVersion = nAgt.substring(verOffset+8);&#xD;&#xA;    }&#xD;&#xA;    // In MSIE, the true version is after ""MSIE"" in userAgent&#xD;&#xA;    else if ((verOffset=nAgt.indexOf(""MSIE""))!=-1) {&#xD;&#xA;     browserName = ""Microsoft Internet Explorer"";&#xD;&#xA;     fullVersion = nAgt.substring(verOffset+5);&#xD;&#xA;    }&#xD;&#xA;    // In Chrome, the true version is after ""Chrome"" &#xD;&#xA;    else if ((verOffset=nAgt.indexOf(""Chrome""))!=-1) {&#xD;&#xA;     browserName = ""Chrome"";&#xD;&#xA;     fullVersion = nAgt.substring(verOffset+7);&#xD;&#xA;    }&#xD;&#xA;    // In Safari, the true version is after ""Safari"" or after ""Version"" &#xD;&#xA;    else if ((verOffset=nAgt.indexOf(""Safari""))!=-1) {&#xD;&#xA;     browserName = ""Safari"";&#xD;&#xA;     fullVersion = nAgt.substring(verOffset+7);&#xD;&#xA;     if ((verOffset=nAgt.indexOf(""Version""))!=-1) &#xD;&#xA;       fullVersion = nAgt.substring(verOffset+8);&#xD;&#xA;    }&#xD;&#xA;    // In Firefox, the true version is after ""Firefox"" &#xD;&#xA;    else if ((verOffset=nAgt.indexOf(""Firefox""))!=-1) {&#xD;&#xA;     browserName = ""Firefox"";&#xD;&#xA;     fullVersion = nAgt.substring(verOffset+8);&#xD;&#xA;    }&#xD;&#xA;    // In most other browsers, ""name/version"" is at the end of userAgent &#xD;&#xA;    else if ( (nameOffset=nAgt.lastIndexOf(' ')+1) < &#xD;&#xA;              (verOffset=nAgt.lastIndexOf('/')) ) &#xD;&#xA;    {&#xD;&#xA;     browserName = nAgt.substring(nameOffset,verOffset);&#xD;&#xA;     fullVersion = nAgt.substring(verOffset+1);&#xD;&#xA;     if (browserName.toLowerCase()==browserName.toUpperCase()) {&#xD;&#xA;      browserName = navigator.appName;&#xD;&#xA;     }&#xD;&#xA;    }&#xD;&#xA;    // trim the fullVersion string at semicolon/space if present&#xD;&#xA;    if ((ix=fullVersion.indexOf("";""))!=-1)&#xD;&#xA;       fullVersion=fullVersion.substring(0,ix);&#xD;&#xA;    if ((ix=fullVersion.indexOf("" ""))!=-1)&#xD;&#xA;       fullVersion=fullVersion.substring(0,ix);&#xD;&#xA;    &#xD;&#xA;    majorVersion = parseInt(''+fullVersion,10);&#xD;&#xA;    if (isNaN(majorVersion)) {&#xD;&#xA;     fullVersion  = ''+parseFloat(navigator.appVersion); &#xD;&#xA;     majorVersion = parseInt(navigator.appVersion,10);&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    document.write(''&#xD;&#xA;     +'Browser name  = '+browserName+'<br>'&#xD;&#xA;     +'Full version  = '+fullVersion+'<br>'&#xD;&#xA;     +'Major version = '+majorVersion+'<br>'&#xD;&#xA;     +'navigator.appName = '+navigator.appName+'<br>'&#xD;&#xA;     +'navigator.userAgent = '+navigator.userAgent+'<br>'&#xD;&#xA;    )"
-545890616728636596,69,9,"        /* The Modal (background) */&#xD;&#xA;    .modal {&#xD;&#xA;        display: none; /* Hidden by default */&#xD;&#xA;        position: fixed; /* Stay in place */&#xD;&#xA;        z-index: 1; /* Sit on top */&#xD;&#xA;        padding-top: 100px; /* Location of the box */&#xD;&#xA;        left: 0;&#xD;&#xA;        top: 0;&#xD;&#xA;        width: 100%; /* Full width */&#xD;&#xA;        height: 100%; /* Full height */&#xD;&#xA;        overflow: auto; /* Enable scroll if needed */&#xD;&#xA;        background-color: rgb(0,0,0); /* Fallback color */&#xD;&#xA;        background-color: rgba(0,0,0,0.4); /* Black w/ opacity */&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    /* Modal Content */&#xD;&#xA;    .modal-content {&#xD;&#xA;        position: relative;&#xD;&#xA;        background-color: #fefefe;&#xD;&#xA;        margin: auto;&#xD;&#xA;        padding: 0;&#xD;&#xA;        border: 1px solid #888;&#xD;&#xA;        width: 80%;&#xD;&#xA;        box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);&#xD;&#xA;        -webkit-animation-name: animatetop;&#xD;&#xA;        -webkit-animation-duration: 0.4s;&#xD;&#xA;        animation-name: animatetop;&#xD;&#xA;        animation-duration: 0.4s&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    /* Add Animation */&#xD;&#xA;    @-webkit-keyframes animatetop {&#xD;&#xA;        from {top:-300px; opacity:0}&#xD;&#xA;        to {top:0; opacity:1}&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    @keyframes animatetop {&#xD;&#xA;        from {top:-300px; opacity:0}&#xD;&#xA;        to {top:0; opacity:1}&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    /* The Close Button */&#xD;&#xA;    .close {&#xD;&#xA;        color: white;&#xD;&#xA;        float: right;&#xD;&#xA;        font-size: 28px;&#xD;&#xA;        font-weight: bold;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .close:hover,&#xD;&#xA;    .close:focus {&#xD;&#xA;        color: #000;&#xD;&#xA;        text-decoration: none;&#xD;&#xA;        cursor: pointer;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .modal-header {&#xD;&#xA;        padding: 2px 16px;&#xD;&#xA;        background-color: #5cb85c;&#xD;&#xA;        color: white;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .modal-body {padding: 2px 16px;}&#xD;&#xA;    &#xD;&#xA;    .modal-footer {&#xD;&#xA;        padding: 2px 16px;&#xD;&#xA;        background-color: #5cb85c;&#xD;&#xA;        color: white;&#xD;&#xA;    }"
700930672106151380,70,9,"     import React from ""react"";&#xD;&#xA;        import { BrowserRouter as Router, Route, Link } from ""react-router-dom"";&#xD;&#xA;        &#xD;&#xA;        const BasicExample = () => (&#xD;&#xA;          <Router>&#xD;&#xA;            <div>&#xD;&#xA;              <ul>&#xD;&#xA;                <li>&#xD;&#xA;                  <Link to=""/"">Home</Link>&#xD;&#xA;                </li>&#xD;&#xA;                <li>&#xD;&#xA;                  <Link to=""/about"">About</Link>&#xD;&#xA;                </li>&#xD;&#xA;                <li>&#xD;&#xA;                  <Link to=""/topics"">Topics</Link>&#xD;&#xA;                </li>&#xD;&#xA;              </ul>&#xD;&#xA;        &#xD;&#xA;              <hr />&#xD;&#xA;        &#xD;&#xA;              <Route exact path=""/"" component={Home} />&#xD;&#xA;              <Route path=""/about"" component={About} />&#xD;&#xA;              <Route path=""/topics"" component={Topics} />&#xD;&#xA;            </div>&#xD;&#xA;          </Router>&#xD;&#xA;        );&#xD;&#xA;        &#xD;&#xA;        const Home = () => (&#xD;&#xA;          <div>&#xD;&#xA;            <h2>Home</h2>&#xD;&#xA;          </div>&#xD;&#xA;        );&#xD;&#xA;        &#xD;&#xA;        const About = () => (&#xD;&#xA;          <div>&#xD;&#xA;            <h2>About</h2>&#xD;&#xA;          </div>&#xD;&#xA;        );&#xD;&#xA;        &#xD;&#xA;        const Topics = ({ match }) => (&#xD;&#xA;          <div>&#xD;&#xA;            <h2>Topics</h2>&#xD;&#xA;            <ul>&#xD;&#xA;              <li>&#xD;&#xA;                <Link to={`${match.url}/rendering`}>Rendering with React</Link>&#xD;&#xA;              </li>&#xD;&#xA;              <li>&#xD;&#xA;                <Link to={`${match.url}/components`}>Components</Link>&#xD;&#xA;              </li>&#xD;&#xA;              <li>&#xD;&#xA;                <Link to={`${match.url}/props-v-state`}>Props v. State</Link>&#xD;&#xA;              </li>&#xD;&#xA;            </ul>&#xD;&#xA;        &#xD;&#xA;            <Route path={`${match.url}/:topicId`} component={Topic} />&#xD;&#xA;            <Route&#xD;&#xA;              exact&#xD;&#xA;              path={match.url}&#xD;&#xA;              render={() => <h3>Please select a topic.</h3>}&#xD;&#xA;            />&#xD;&#xA;          </div>&#xD;&#xA;        );&#xD;&#xA;        &#xD;&#xA;        const Topic = ({ match }) => (&#xD;&#xA;          <div>&#xD;&#xA;            <h3>{match.params.topicId}</h3>&#xD;&#xA;          </div>&#xD;&#xA;        );&#xD;&#xA;        &#xD;&#xA;        export default BasicExample;"
-6110748367202919354,77,9,"    	user www-data;&#xD;&#xA;	worker_processes 4;&#xD;&#xA;	pid /run/nginx.pid;&#xD;&#xA;	events {&#xD;&#xA;		worker_connections 768;&#xD;&#xA;		# multi_accept on;&#xD;&#xA;	}&#xD;&#xA;	http {&#xD;&#xA;		##&#xD;&#xA;		# Basic Settings&#xD;&#xA;		##&#xD;&#xA;		sendfile on;&#xD;&#xA;		tcp_nopush on;&#xD;&#xA;		tcp_nodelay on;&#xD;&#xA;		keepalive_timeout 65;&#xD;&#xA;		types_hash_max_size 2048;&#xD;&#xA;		# server_tokens off;&#xD;&#xA;		# server_names_hash_bucket_size 64;&#xD;&#xA;		# server_name_in_redirect off;&#xD;&#xA;		include /etc/nginx/mime.types;&#xD;&#xA;		#default_type application/octet-stream;&#xD;&#xA;		##&#xD;&#xA;		# Logging Settings&#xD;&#xA;		##&#xD;&#xA;		access_log /var/log/nginx/access.log;&#xD;&#xA;		error_log /var/log/nginx/error.log;&#xD;&#xA;		##&#xD;&#xA;		# Gzip Settings&#xD;&#xA;		##&#xD;&#xA;		gzip on;&#xD;&#xA;		gzip_disable ""msie6"";&#xD;&#xA;		# gzip_vary on;&#xD;&#xA;		# gzip_proxied any;&#xD;&#xA;		# gzip_comp_level 6;&#xD;&#xA;		# gzip_buffers 16 8k;&#xD;&#xA;		# gzip_http_version 1.1;&#xD;&#xA;		# gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;&#xD;&#xA;		##&#xD;&#xA;		# nginx-naxsi config&#xD;&#xA;		##&#xD;&#xA;		# Uncomment it if you installed nginx-naxsi&#xD;&#xA;		##&#xD;&#xA;		#include /etc/nginx/naxsi_core.rules;&#xD;&#xA;		##&#xD;&#xA;		# nginx-passenger config&#xD;&#xA;		##&#xD;&#xA;		# Uncomment it if you installed nginx-passenger&#xD;&#xA;		##&#xD;&#xA;		&#xD;&#xA;		#passenger_root /usr;&#xD;&#xA;		#passenger_ruby /usr/bin/ruby;&#xD;&#xA;		##&#xD;&#xA;		# Virtual Host Configs&#xD;&#xA;		##&#xD;&#xA;		include /etc/nginx/conf.d/*.conf;&#xD;&#xA;		include /etc/nginx/sites-enabled/*;&#xD;&#xA;	}&#xD;&#xA;	#mail {&#xD;&#xA;	#	# See sample authentication script at:&#xD;&#xA;	#	# http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript&#xD;&#xA;	# &#xD;&#xA;	#	# auth_http localhost/auth.php;&#xD;&#xA;	#	# pop3_capabilities ""TOP"" ""USER"";&#xD;&#xA;	#	# imap_capabilities ""IMAP4rev1"" ""UIDPLUS"";&#xD;&#xA;	# &#xD;&#xA;	#	server {&#xD;&#xA;	#		listen     localhost:110;&#xD;&#xA;	#		protocol   pop3;&#xD;&#xA;	#		proxy      on;&#xD;&#xA;	#	}&#xD;&#xA;	# &#xD;&#xA;	#	server {&#xD;&#xA;	#		listen     localhost:143;&#xD;&#xA;	#		protocol   imap;&#xD;&#xA;	#		proxy      on;&#xD;&#xA;	#	}&#xD;&#xA;	#}"
1494368114509922553,81,9,"    #region Primenumbers&#xD;&#xA;    private void btnPrimStart_Click(object sender, EventArgs e)&#xD;&#xA;    {&#xD;&#xA;    	if (!bgwPrim.IsBusy)&#xD;&#xA;    	{&#xD;&#xA;    		//Prepare ProgressBar and Textbox&#xD;&#xA;    		int temp = (int)nudPrim.Value;&#xD;&#xA;    		pgbPrim.Maximum = temp;&#xD;&#xA;    		tbPrim.Text = """";&#xD;&#xA;    		//Start processing&#xD;&#xA;    		bgwPrim.RunWorkerAsync(temp);&#xD;&#xA;    	}&#xD;&#xA;    }&#xD;&#xA;    private void btnPrimCancel_Click(object sender, EventArgs e)&#xD;&#xA;    {&#xD;&#xA;    	if (bgwPrim.IsBusy)&#xD;&#xA;    	{&#xD;&#xA;    		bgwPrim.CancelAsync();&#xD;&#xA;    	}&#xD;&#xA;    }&#xD;&#xA;    private void bgwPrim_DoWork(object sender, DoWorkEventArgs e)&#xD;&#xA;    {&#xD;&#xA;    	int highestToCheck = (int)e.Argument;&#xD;&#xA;    	//Get a reference to the BackgroundWorker running this code&#xD;&#xA;    	//for Progress Updates and Cancelation checking&#xD;&#xA;    	BackgroundWorker thisWorker = (BackgroundWorker)sender;&#xD;&#xA;    	//Create the list that stores the results and is returned by DoWork&#xD;&#xA;    	List<int> Primes = new List<int>();&#xD;&#xA;    	&#xD;&#xA;    	//Check all uneven numbers between 1 and whatever the user choose as upper limit&#xD;&#xA;    	for(int PrimeCandidate=1; PrimeCandidate < highestToCheck; PrimeCandidate+=2)&#xD;&#xA;    	{&#xD;&#xA;    		//Report progress&#xD;&#xA;    		thisWorker.ReportProgress(PrimeCandidate);&#xD;&#xA;    		bool isNoPrime = false;&#xD;&#xA;    		//Check if the Cancelation was requested during the last loop&#xD;&#xA;    		if (thisWorker.CancellationPending)&#xD;&#xA;    		{&#xD;&#xA;    			//Tell the Backgroundworker you are canceling and exit the for-loop&#xD;&#xA;    			e.Cancel = true;&#xD;&#xA;    			break;&#xD;&#xA;    		}&#xD;&#xA;    		//Determin if this is a Prime Number&#xD;&#xA;    		for (int j = 3; j < PrimeCandidate && !isNoPrime; j += 2)&#xD;&#xA;    		{&#xD;&#xA;    			if (PrimeCandidate % j == 0)&#xD;&#xA;    				isNoPrime = true;&#xD;&#xA;    		}&#xD;&#xA;    		if (!isNoPrime)&#xD;&#xA;    			Primes.Add(PrimeCandidate);&#xD;&#xA;    	}&#xD;&#xA;    	//Tell the progress bar you are finished&#xD;&#xA;    	thisWorker.ReportProgress(highestToCheck);&#xD;&#xA;    	//Save Return Value&#xD;&#xA;    	e.Result = Primes.ToArray();&#xD;&#xA;    }&#xD;&#xA;    private void bgwPrim_ProgressChanged(object sender, ProgressChangedEventArgs e)&#xD;&#xA;    {&#xD;&#xA;    	pgbPrim.Value = e.ProgressPercentage;&#xD;&#xA;    }&#xD;&#xA;    private void bgwPrim_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e)&#xD;&#xA;    {&#xD;&#xA;    	pgbPrim.Value = pgbPrim.Maximum;&#xD;&#xA;    	this.Refresh();&#xD;&#xA;    	if (!e.Cancelled && e.Error == null)&#xD;&#xA;    	{&#xD;&#xA;    		//Show the Result&#xD;&#xA;    		int[] Primes = (int[])e.Result;&#xD;&#xA;    		StringBuilder sbOutput = new StringBuilder();&#xD;&#xA;    		foreach (int Prim in Primes)&#xD;&#xA;    		{&#xD;&#xA;    			sbOutput.Append(Prim.ToString() + Environment.NewLine);&#xD;&#xA;    		}&#xD;&#xA;    		tbPrim.Text = sbOutput.ToString();&#xD;&#xA;    	}&#xD;&#xA;    	else &#xD;&#xA;    	{&#xD;&#xA;    		tbPrim.Text = ""Operation canceled by user or Exception"";&#xD;&#xA;    	}&#xD;&#xA;    }&#xD;&#xA;    #endregion"
-6881242330401691199,107,9,"    public class MessageBus&#xD;&#xA;    {&#xD;&#xA;        #region Singleton&#xD;&#xA;        static MessageBus _messageBus = null;&#xD;&#xA;        private MessageBus() { }&#xD;&#xA;        public static MessageBus Instance&#xD;&#xA;        {&#xD;&#xA;            get&#xD;&#xA;            {&#xD;&#xA;                if (_messageBus == null)&#xD;&#xA;                {&#xD;&#xA;                    _messageBus = new MessageBus();&#xD;&#xA;                }&#xD;&#xA;                return _messageBus;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        #endregion&#xD;&#xA;        #region Members&#xD;&#xA;        List<Observer> _observers = new List<Observer>();&#xD;&#xA;        List<Observer> _oneTimeObservers = new List<Observer>();&#xD;&#xA;        List<Observer> _waitingSubscribers = new List<Observer>();&#xD;&#xA;        List<Observer> _waitingUnsubscribers = new List<Observer>();&#xD;&#xA;        int _publishingCount = 0;&#xD;&#xA;        #endregion&#xD;&#xA;        public void Subscribe(string message, Action<object> response)&#xD;&#xA;        {&#xD;&#xA;            Subscribe(message, response, _observers);&#xD;&#xA;        }&#xD;&#xA;        public void SubscribeFirstPublication(string message, Action<object> response)&#xD;&#xA;        {&#xD;&#xA;            Subscribe(message, response, _oneTimeObservers);&#xD;&#xA;        }&#xD;&#xA;        public int Unsubscribe(string message, Action<object> response)&#xD;&#xA;        {&#xD;&#xA;            var observers = new List<Observer>(_observers.Where(o => o.Respond == response).ToList());&#xD;&#xA;            observers.AddRange(_waitingSubscribers.Where(o => o.Respond == response));&#xD;&#xA;            observers.AddRange(_oneTimeObservers.Where(o => o.Respond == response));&#xD;&#xA;            if (_publishingCount == 0)&#xD;&#xA;            {&#xD;&#xA;                observers.ForEach(o => _observers.Remove(o));&#xD;&#xA;            }&#xD;&#xA;            else&#xD;&#xA;            {&#xD;&#xA;                _waitingUnsubscribers.AddRange(observers);&#xD;&#xA;            }&#xD;&#xA;            return observers.Count;&#xD;&#xA;        }&#xD;&#xA;        public int Unsubscribe(string subscription)&#xD;&#xA;        {&#xD;&#xA;            var observers = new List<Observer>(_observers.Where(o => o.Subscription == subscription).ToList());&#xD;&#xA;            observers.AddRange(_waitingSubscribers.Where(o => o.Subscription == subscription));&#xD;&#xA;            observers.AddRange(_oneTimeObservers.Where(o => o.Subscription == subscription));&#xD;&#xA;            if (_publishingCount == 0)&#xD;&#xA;            {&#xD;&#xA;                observers.ForEach(o => _observers.Remove(o));&#xD;&#xA;            }&#xD;&#xA;            else&#xD;&#xA;            {&#xD;&#xA;                _waitingUnsubscribers.AddRange(observers);&#xD;&#xA;            }&#xD;&#xA;            return observers.Count;&#xD;&#xA;        }&#xD;&#xA;        public void Publish(string message, object payload)&#xD;&#xA;        {&#xD;&#xA;            _publishingCount++;&#xD;&#xA;            Publish(_observers, message, payload);&#xD;&#xA;            Publish(_oneTimeObservers, message, payload);&#xD;&#xA;            Publish(_waitingSubscribers, message, payload);&#xD;&#xA;            _oneTimeObservers.RemoveAll(o => o.Subscription == message);&#xD;&#xA;            _waitingUnsubscribers.Clear();&#xD;&#xA;            _publishingCount--;&#xD;&#xA;        }&#xD;&#xA;        private void Publish(List<Observer> observers, string message, object payload)&#xD;&#xA;        {&#xD;&#xA;            Debug.Assert(_publishingCount >= 0);&#xD;&#xA;            var subscribers = observers.Where(o => o.Subscription.ToLower() == message.ToLower());&#xD;&#xA;            foreach (var subscriber in subscribers)&#xD;&#xA;            {&#xD;&#xA;                subscriber.Respond(payload);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        public IEnumerable<Observer> GetObservers(string subscription)&#xD;&#xA;        {&#xD;&#xA;            var observers = new List<Observer>(_observers.Where(o => o.Subscription == subscription));&#xD;&#xA;            return observers;&#xD;&#xA;        }&#xD;&#xA;        public void Clear()&#xD;&#xA;        {&#xD;&#xA;            _observers.Clear();&#xD;&#xA;            _oneTimeObservers.Clear();&#xD;&#xA;        }&#xD;&#xA;        #region Helpers&#xD;&#xA;        private void Subscribe(string message, Action<object> response, List<Observer> observers)&#xD;&#xA;        {&#xD;&#xA;            Debug.Assert(_publishingCount >= 0);&#xD;&#xA;            var observer = new Observer() { Subscription = message, Respond = response };&#xD;&#xA;            if (_publishingCount == 0)&#xD;&#xA;            {&#xD;&#xA;                observers.Add(observer);&#xD;&#xA;            }&#xD;&#xA;            else&#xD;&#xA;            {&#xD;&#xA;                _waitingSubscribers.Add(observer);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        #endregion&#xD;&#xA;    }"
-1920445206248886987,113,9,"    <?php&#xD;&#xA;    &#xD;&#xA;    	// CONFIG: Enable debug mode. This means we'll log requests into 'ipn.log' in the same directory.&#xD;&#xA;    	// Especially useful if you encounter network errors or other intermittent problems with IPN (validation).&#xD;&#xA;    	// Set this to 0 once you go live or don't require logging.&#xD;&#xA;    	define(""DEBUG"", 1);&#xD;&#xA;    	// Set to 0 once you're ready to go live&#xD;&#xA;    	define(""USE_SANDBOX"", 1);&#xD;&#xA;    	define(""LOG_FILE"", ""./ipn.log"");&#xD;&#xA;    	// Read POST data&#xD;&#xA;    	// reading posted data directly from $_POST causes serialization&#xD;&#xA;    	// issues with array data in POST. Reading raw POST data from input stream instead.&#xD;&#xA;    	$raw_post_data = file_get_contents('php://input');&#xD;&#xA;    	$raw_post_array = explode('&', $raw_post_data);&#xD;&#xA;    	$myPost = array();&#xD;&#xA;    	foreach ($raw_post_array as $keyval) {&#xD;&#xA;    		$keyval = explode ('=', $keyval);&#xD;&#xA;    		if (count($keyval) == 2)&#xD;&#xA;    			$myPost[$keyval[0]] = urldecode($keyval[1]);&#xD;&#xA;    	}&#xD;&#xA;    	// read the post from PayPal system and add 'cmd'&#xD;&#xA;    	$req = 'cmd=_notify-validate';&#xD;&#xA;    	if(function_exists('get_magic_quotes_gpc')) {&#xD;&#xA;    		$get_magic_quotes_exists = true;&#xD;&#xA;    	}&#xD;&#xA;    	foreach ($myPost as $key => $value) {&#xD;&#xA;    		if($get_magic_quotes_exists == true && get_magic_quotes_gpc() == 1) {&#xD;&#xA;    			$value = urlencode(stripslashes($value));&#xD;&#xA;    		} else {&#xD;&#xA;    			$value = urlencode($value);&#xD;&#xA;    		}&#xD;&#xA;    		$req .= ""&$key=$value"";&#xD;&#xA;    	}&#xD;&#xA;    	// Post IPN data back to PayPal to validate the IPN data is genuine&#xD;&#xA;    	// Without this step anyone can fake IPN data&#xD;&#xA;    	if(USE_SANDBOX == true) {&#xD;&#xA;    		$paypal_url = ""https://www.sandbox.paypal.com/cgi-bin/webscr"";&#xD;&#xA;    	} else {&#xD;&#xA;    		$paypal_url = ""https://www.paypal.com/cgi-bin/webscr"";&#xD;&#xA;    	}&#xD;&#xA;    	$ch = curl_init($paypal_url);&#xD;&#xA;    	if ($ch == FALSE) {&#xD;&#xA;    		return FALSE;&#xD;&#xA;    	}&#xD;&#xA;    	curl_setopt($ch, CURLOPT_HTTP_VERSION, CURL_HTTP_VERSION_1_1);&#xD;&#xA;    	curl_setopt($ch, CURLOPT_POST, 1);&#xD;&#xA;    	curl_setopt($ch, CURLOPT_RETURNTRANSFER,1);&#xD;&#xA;    	curl_setopt($ch, CURLOPT_POSTFIELDS, $req);&#xD;&#xA;    	curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 1);&#xD;&#xA;    	curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 2);&#xD;&#xA;    	curl_setopt($ch, CURLOPT_FORBID_REUSE, 1);&#xD;&#xA;    	if(DEBUG == true) {&#xD;&#xA;    		curl_setopt($ch, CURLOPT_HEADER, 1);&#xD;&#xA;    		curl_setopt($ch, CURLINFO_HEADER_OUT, 1);&#xD;&#xA;    	}&#xD;&#xA;    	// CONFIG: Optional proxy configuration&#xD;&#xA;    	//curl_setopt($ch, CURLOPT_PROXY, $proxy);&#xD;&#xA;    	//curl_setopt($ch, CURLOPT_HTTPPROXYTUNNEL, 1);&#xD;&#xA;    	// Set TCP timeout to 30 seconds&#xD;&#xA;    	curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 30);&#xD;&#xA;    	curl_setopt($ch, CURLOPT_HTTPHEADER, array('Connection: Close'));&#xD;&#xA;    	// CONFIG: Please download 'cacert.pem' from ""http://curl.haxx.se/docs/caextract.html"" and set the directory path&#xD;&#xA;    	// of the certificate as shown below. Ensure the file is readable by the webserver.&#xD;&#xA;    	// This is mandatory for some environments.&#xD;&#xA;    	//$cert = __DIR__ . ""./cacert.pem"";&#xD;&#xA;    	//curl_setopt($ch, CURLOPT_CAINFO, $cert);&#xD;&#xA;    	$res = curl_exec($ch);&#xD;&#xA;    	if (curl_errno($ch) != 0) // cURL error&#xD;&#xA;    		{&#xD;&#xA;    		if(DEBUG == true) {	&#xD;&#xA;    			error_log(date('[Y-m-d H:i e] '). ""Can't connect to PayPal to validate IPN message: "" . curl_error($ch) . PHP_EOL, 3, LOG_FILE);&#xD;&#xA;    		}&#xD;&#xA;    		curl_close($ch);&#xD;&#xA;    		exit;&#xD;&#xA;    	} else {&#xD;&#xA;    		// Log the entire HTTP response if debug is switched on.&#xD;&#xA;    		if(DEBUG == true) {&#xD;&#xA;    			error_log(date('[Y-m-d H:i e] '). ""HTTP request of validation request:"". curl_getinfo($ch, CURLINFO_HEADER_OUT) ."" for IPN payload: $req"" . PHP_EOL, 3, LOG_FILE);&#xD;&#xA;    			error_log(date('[Y-m-d H:i e] '). ""HTTP response of validation request: $res"" . PHP_EOL, 3, LOG_FILE);&#xD;&#xA;    		}&#xD;&#xA;    		curl_close($ch);&#xD;&#xA;    	}&#xD;&#xA;    	// Inspect IPN validation result and act accordingly&#xD;&#xA;    	// Split response headers and payload, a better way for strcmp&#xD;&#xA;    	$tokens = explode(""\r\n\r\n"", trim($res));&#xD;&#xA;    	$res = trim(end($tokens));&#xD;&#xA;    	if (strcmp ($res, ""VERIFIED"") == 0) {&#xD;&#xA;    		// check whether the payment_status is Completed&#xD;&#xA;    		// check that txn_id has not been previously processed&#xD;&#xA;    		// check that receiver_email is your PayPal email&#xD;&#xA;    		// check that payment_amount/payment_currency are correct&#xD;&#xA;    		// process payment and mark item as paid.&#xD;&#xA;    		// assign posted variables to local variables&#xD;&#xA;    		//$item_name = $_POST['item_name'];&#xD;&#xA;    		//$item_number = $_POST['item_number'];&#xD;&#xA;    		//$payment_status = $_POST['payment_status'];&#xD;&#xA;    		//$payment_amount = $_POST['mc_gross'];&#xD;&#xA;    		//$payment_currency = $_POST['mc_currency'];&#xD;&#xA;    		//$txn_id = $_POST['txn_id'];&#xD;&#xA;    		//$receiver_email = $_POST['receiver_email'];&#xD;&#xA;    		//$payer_email = $_POST['payer_email'];&#xD;&#xA;    &#xD;&#xA;    		if(DEBUG == true) {&#xD;&#xA;    			error_log(date('[Y-m-d H:i e] '). ""Verified IPN: $req "". PHP_EOL, 3, LOG_FILE);&#xD;&#xA;    		}&#xD;&#xA;    	} else if (strcmp ($res, ""INVALID"") == 0) {&#xD;&#xA;    		// log for manual investigation&#xD;&#xA;    		// Add business logic here which deals with invalid IPN messages&#xD;&#xA;    		if(DEBUG == true) {&#xD;&#xA;    			error_log(date('[Y-m-d H:i e] '). ""Invalid IPN: $req"" . PHP_EOL, 3, LOG_FILE);&#xD;&#xA;    		}&#xD;&#xA;    	}&#xD;&#xA;    ?>"
-6821872008408170017,136,9,"        <?xml version=""1.0"" encoding=""utf-8""?>&#xD;&#xA;        <ScrollView xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;        android:layout_width=""fill_parent"" &#xD;&#xA;        android:layout_height=""wrap_content"" android:layout_weight=""1"">&#xD;&#xA;       &#xD;&#xA;        <LinearLayout android:id=""@+id/linearLayout""&#xD;&#xA;          android:layout_width=""fill_parent""&#xD;&#xA;          android:layout_height=""wrap_content""&#xD;&#xA;          android:orientation=""vertical"" &#xD;&#xA;          android:padding=""5dp"">&#xD;&#xA;          &#xD;&#xA;          <EditText android:id=""@+id/nameEdit""&#xD;&#xA;             android:layout_width=""fill_parent""&#xD;&#xA;             android:layout_height=""wrap_content"" &#xD;&#xA;             android:imeOptions=""actionNext"" &#xD;&#xA;             android:hint=""@string/name_hint""&#xD;&#xA;             android:inputType=""textPersonName|textCapWords""/>&#xD;&#xA;          &#xD;&#xA;          <EditText android:id=""@+id/capEdit""&#xD;&#xA;             android:layout_width=""fill_parent"" &#xD;&#xA;             android:layout_height=""wrap_content"" &#xD;&#xA;             android:imeOptions=""actionNext"" &#xD;&#xA;             android:hint=""@string/cap_hint""&#xD;&#xA;             android:inputType=""textPersonName|textCapWords""/>&#xD;&#xA;                &#xD;&#xA;        <TextView&#xD;&#xA;            android:id=""@+id/textView3""&#xD;&#xA;            android:layout_width=""wrap_content""&#xD;&#xA;            android:layout_height=""wrap_content""&#xD;&#xA;            android:text=""Data Limit""&#xD;&#xA;            android:textColor=""#ffffff""&#xD;&#xA;            android:textAppearance=""?android:textAppearanceMedium"" />&#xD;&#xA;    &#xD;&#xA;        <SeekBar&#xD;&#xA;            android:id=""@+id/seekBar1""&#xD;&#xA;            android:layout_width=""fill_parent""&#xD;&#xA;            android:layout_height=""wrap_content"" />&#xD;&#xA;    &#xD;&#xA;        <LinearLayout&#xD;&#xA;            android:layout_width=""fill_parent""&#xD;&#xA;            android:layout_height=""wrap_content""&#xD;&#xA;            android:orientation=""horizontal"" >&#xD;&#xA;    &#xD;&#xA;            <TextView&#xD;&#xA;                android:layout_width=""wrap_content""&#xD;&#xA;                android:layout_height=""wrap_content""&#xD;&#xA;                android:layout_weight=""1.0""&#xD;&#xA;                android:gravity=""left""&#xD;&#xA;                android:textColor=""#ffffff""&#xD;&#xA;                android:text=""10MB"" />&#xD;&#xA;    &#xD;&#xA;            <TextView&#xD;&#xA;                android:layout_width=""wrap_content""&#xD;&#xA;                android:layout_height=""wrap_content""&#xD;&#xA;                android:layout_weight=""1.0""&#xD;&#xA;                android:gravity=""right""&#xD;&#xA;                android:textColor=""#ffffff""&#xD;&#xA;                android:text=""Unlimited Data"" />&#xD;&#xA;        </LinearLayout>&#xD;&#xA;    &#xD;&#xA;        <TextView&#xD;&#xA;            android:id=""@+id/textView3""&#xD;&#xA;            android:layout_width=""wrap_content""&#xD;&#xA;            android:layout_height=""wrap_content""&#xD;&#xA;            android:text=""Bandwidth Limit""&#xD;&#xA;            android:textColor=""#ffffff""&#xD;&#xA;            android:textAppearance=""?android:textAppearanceMedium"" />&#xD;&#xA;    &#xD;&#xA;        <SeekBar&#xD;&#xA;            android:id=""@+id/seekBar1""&#xD;&#xA;            android:layout_width=""fill_parent""&#xD;&#xA;            android:layout_height=""wrap_content"" />&#xD;&#xA;    &#xD;&#xA;        <LinearLayout&#xD;&#xA;            android:layout_width=""fill_parent""&#xD;&#xA;            android:layout_height=""wrap_content""&#xD;&#xA;            android:orientation=""horizontal"" >&#xD;&#xA;    &#xD;&#xA;            <TextView&#xD;&#xA;                android:layout_width=""wrap_content""&#xD;&#xA;                android:layout_height=""wrap_content""&#xD;&#xA;                android:layout_weight=""1.0""&#xD;&#xA;                android:gravity=""left""&#xD;&#xA;                android:textColor=""#ffffff""&#xD;&#xA;                android:text=""10kbs"" />&#xD;&#xA;    &#xD;&#xA;            <TextView&#xD;&#xA;                android:layout_width=""wrap_content""&#xD;&#xA;                android:layout_height=""wrap_content""&#xD;&#xA;                android:layout_weight=""1.0""&#xD;&#xA;                android:textColor=""#ffffff""&#xD;&#xA;                android:gravity=""right""&#xD;&#xA;                android:text=""Unlimited Bandwidth"" />&#xD;&#xA;        </LinearLayout>&#xD;&#xA;    &#xD;&#xA;        <TextView&#xD;&#xA;            android:id=""@+id/TextView02""&#xD;&#xA;            android:layout_width=""wrap_content""&#xD;&#xA;            android:layout_height=""wrap_content""&#xD;&#xA;            android:textAppearance=""?android:textAppearanceSmall"" />&#xD;&#xA;    &#xD;&#xA;         <TextView&#xD;&#xA;            android:id=""@+id/TextView02""&#xD;&#xA;            android:layout_width=""wrap_content""&#xD;&#xA;            android:layout_height=""wrap_content""&#xD;&#xA;            android:text=""WiFi Time Limit""&#xD;&#xA;            android:textColor=""#ffffff""&#xD;&#xA;            android:textAppearance=""?android:textAppearanceMedium"" />&#xD;&#xA;    &#xD;&#xA;        <TimePicker&#xD;&#xA;            android:id=""@+id/timeEdit""&#xD;&#xA;            android:layout_width=""wrap_content""&#xD;&#xA;            android:layout_height=""wrap_content""&#xD;&#xA;            android:layout_gravity=""center""&#xD;&#xA;        	android:gravity=""center""&#xD;&#xA;            android:layout_weight=""1.0"" />&#xD;&#xA;    &#xD;&#xA;         <EditText&#xD;&#xA;            android:id=""@+id/codeEdit""&#xD;&#xA;            android:inputType=""textUri""&#xD;&#xA;            android:layout_width=""fill_parent""&#xD;&#xA;            android:layout_height=""wrap_content""&#xD;&#xA;            android:ems=""10""&#xD;&#xA;            android:lines=""1""&#xD;&#xA;            android:hint=""@string/code_hint""&#xD;&#xA;            android:imeOptions=""actionNext"" />&#xD;&#xA;          &#xD;&#xA;          <Button android:id=""@+id/saveBtn"" &#xD;&#xA;             android:layout_width=""wrap_content""&#xD;&#xA;             android:layout_height=""wrap_content""&#xD;&#xA;             android:layout_marginTop=""15dp""&#xD;&#xA;             android:layout_gravity=""center_horizontal""&#xD;&#xA;             android:text=""@string/save_btn""/>&#xD;&#xA;        </LinearLayout>&#xD;&#xA;        </ScrollView>&#xD;&#xA;    "
211959406314471911,145,9,"    Sub Copy_To_Worksheets()&#xD;&#xA;    'Note: This macro use the function LastRow&#xD;&#xA;        Dim My_Range As Range&#xD;&#xA;        Dim FieldNum As Long&#xD;&#xA;        Dim CalcMode As Long&#xD;&#xA;        Dim ViewMode As Long&#xD;&#xA;        Dim ws2 As Worksheet&#xD;&#xA;        Dim Lrow As Long&#xD;&#xA;        Dim cell As Range&#xD;&#xA;        Dim CCount As Long&#xD;&#xA;        Dim WSNew As Worksheet&#xD;&#xA;        Dim ErrNum As Long&#xD;&#xA;    &#xD;&#xA;        'Set filter range on ActiveSheet: A1 is the top left cell of your filter range&#xD;&#xA;        'and the header of the first column, D is the last column in the filter range.&#xD;&#xA;        'You can also add the sheet name to the code like this :&#xD;&#xA;        'Worksheets(""Sheet1"").Range(""A1:D"" & LastRow(Worksheets(""Sheet1"")))&#xD;&#xA;        'No need that the sheet is active then when you run the macro when you use this.&#xD;&#xA;        Set My_Range = Range(""A1:D"" & LastRow(ActiveSheet))&#xD;&#xA;        My_Range.Parent.Select&#xD;&#xA;    &#xD;&#xA;        If ActiveWorkbook.ProtectStructure = True Or _&#xD;&#xA;           My_Range.Parent.ProtectContents = True Then&#xD;&#xA;            MsgBox ""Sorry, not working when the workbook or worksheet is protected"", _&#xD;&#xA;                   vbOKOnly, ""Copy to new worksheet""&#xD;&#xA;            Exit Sub&#xD;&#xA;        End If&#xD;&#xA;    &#xD;&#xA;        'This example filters on the first column in the range(change the field if needed)&#xD;&#xA;        'In this case the range starts in A so Field:=1 is column A, 2 = column B, ......&#xD;&#xA;        FieldNum = 1&#xD;&#xA;    &#xD;&#xA;        'Turn off AutoFilter&#xD;&#xA;        My_Range.Parent.AutoFilterMode = False&#xD;&#xA;    &#xD;&#xA;        'Change ScreenUpdating, Calculation, EnableEvents, ....&#xD;&#xA;        With Application&#xD;&#xA;            CalcMode = .Calculation&#xD;&#xA;            .Calculation = xlCalculationManual&#xD;&#xA;            .ScreenUpdating = False&#xD;&#xA;            .EnableEvents = False&#xD;&#xA;        End With&#xD;&#xA;        ViewMode = ActiveWindow.View&#xD;&#xA;        ActiveWindow.View = xlNormalView&#xD;&#xA;        ActiveSheet.DisplayPageBreaks = False&#xD;&#xA;    &#xD;&#xA;        'Add a worksheet to copy the a unique list and add the CriteriaRange&#xD;&#xA;        Set ws2 = Worksheets.Add&#xD;&#xA;    &#xD;&#xA;        With ws2&#xD;&#xA;            'first we copy the Unique data from the filter field to ws2&#xD;&#xA;            My_Range.Columns(FieldNum).AdvancedFilter _&#xD;&#xA;                    Action:=xlFilterCopy, _&#xD;&#xA;                    CopyToRange:=.Range(""A1""), Unique:=True&#xD;&#xA;    &#xD;&#xA;            'loop through the unique list in ws2 and filter/copy to a new sheet&#xD;&#xA;            Lrow = .Cells(Rows.Count, ""A"").End(xlUp).Row&#xD;&#xA;            For Each cell In .Range(""A2:A"" & Lrow)&#xD;&#xA;    &#xD;&#xA;                'Filter the range&#xD;&#xA;                My_Range.AutoFilter Field:=FieldNum, Criteria1:=""="" & _&#xD;&#xA;                 Replace(Replace(Replace(cell.Value, ""~"", ""~~""), ""*"", ""~*""), ""?"", ""~?"")&#xD;&#xA;    &#xD;&#xA;                'Check if there are no more then 8192 areas(limit of areas)&#xD;&#xA;                CCount = 0&#xD;&#xA;                On Error Resume Next&#xD;&#xA;                CCount = My_Range.Columns(1).SpecialCells(xlCellTypeVisible) _&#xD;&#xA;                         .Areas(1).Cells.Count&#xD;&#xA;                On Error GoTo 0&#xD;&#xA;                If CCount = 0 Then&#xD;&#xA;                    MsgBox ""There are more than 8192 areas for the value : "" & cell.Value _&#xD;&#xA;                         & vbNewLine & ""It is not possible to copy the visible data."" _&#xD;&#xA;                         & vbNewLine & ""Tip: Sort your data before you use this macro."", _&#xD;&#xA;                           vbOKOnly, ""Split in worksheets""&#xD;&#xA;                Else&#xD;&#xA;                    'Add a new worksheet&#xD;&#xA;                    Set WSNew = Worksheets.Add(After:=Sheets(Sheets.Count))&#xD;&#xA;                    On Error Resume Next&#xD;&#xA;                    WSNew.Name = cell.Value&#xD;&#xA;                    If Err.Number > 0 Then&#xD;&#xA;                        ErrNum = ErrNum + 1&#xD;&#xA;                        WSNew.Name = ""Error_"" & Format(ErrNum, ""0000"")&#xD;&#xA;                        Err.Clear&#xD;&#xA;                    End If&#xD;&#xA;                    On Error GoTo 0&#xD;&#xA;    &#xD;&#xA;                    'Copy the visible data to the new worksheet&#xD;&#xA;                    My_Range.SpecialCells(xlCellTypeVisible).Copy&#xD;&#xA;                    With WSNew.Range(""A1"")&#xD;&#xA;                        ' Paste:=8 will copy the columnwidth in Excel 2000 and higher&#xD;&#xA;                        ' Remove this line if you use Excel 97&#xD;&#xA;                        .PasteSpecial Paste:=8&#xD;&#xA;                        .PasteSpecial xlPasteValues&#xD;&#xA;                        .PasteSpecial xlPasteFormats&#xD;&#xA;                        Application.CutCopyMode = False&#xD;&#xA;                        .Select&#xD;&#xA;                    End With&#xD;&#xA;                End If&#xD;&#xA;    &#xD;&#xA;                'Show all data in the range&#xD;&#xA;                My_Range.AutoFilter Field:=FieldNum&#xD;&#xA;    &#xD;&#xA;            Next cell&#xD;&#xA;    &#xD;&#xA;            'Delete the ws2 sheet&#xD;&#xA;            On Error Resume Next&#xD;&#xA;            Application.DisplayAlerts = False&#xD;&#xA;            .Delete&#xD;&#xA;            Application.DisplayAlerts = True&#xD;&#xA;            On Error GoTo 0&#xD;&#xA;    &#xD;&#xA;        End With&#xD;&#xA;    &#xD;&#xA;        'Turn off AutoFilter&#xD;&#xA;        My_Range.Parent.AutoFilterMode = False&#xD;&#xA;    &#xD;&#xA;        If ErrNum > 0 Then&#xD;&#xA;            MsgBox ""Rename every WorkSheet name that start with """"Error_"""" manually"" _&#xD;&#xA;                 & vbNewLine & ""There are characters in the name that are not allowed"" _&#xD;&#xA;                 & vbNewLine & ""in a sheet name or the worksheet already exist.""&#xD;&#xA;        End If&#xD;&#xA;    &#xD;&#xA;        'Restore ScreenUpdating, Calculation, EnableEvents, ....&#xD;&#xA;        My_Range.Parent.Select&#xD;&#xA;        ActiveWindow.View = ViewMode&#xD;&#xA;        With Application&#xD;&#xA;            .ScreenUpdating = True&#xD;&#xA;            .EnableEvents = True&#xD;&#xA;            .Calculation = CalcMode&#xD;&#xA;        End With&#xD;&#xA;    &#xD;&#xA;    End Sub&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    Function LastRow(sh As Worksheet)&#xD;&#xA;        On Error Resume Next&#xD;&#xA;        LastRow = sh.Cells.Find(What:=""*"", _&#xD;&#xA;                                After:=sh.Range(""A1""), _&#xD;&#xA;                                Lookat:=xlPart, _&#xD;&#xA;                                LookIn:=xlValues, _&#xD;&#xA;                                SearchOrder:=xlByRows, _&#xD;&#xA;                                SearchDirection:=xlPrevious, _&#xD;&#xA;                                MatchCase:=False).Row&#xD;&#xA;        On Error GoTo 0&#xD;&#xA;    End Function"
-889668809388807474,155,9,"        <?php&#xD;&#xA;     &#xD;&#xA;    if(isset($_POST['email'])) {&#xD;&#xA;     &#xD;&#xA;         &#xD;&#xA;     &#xD;&#xA;        // EDIT THE 2 LINES BELOW AS REQUIRED&#xD;&#xA;     &#xD;&#xA;        $email_to = ""you@yourdomain.com"";&#xD;&#xA;     &#xD;&#xA;        $email_subject = ""Your email subject line"";&#xD;&#xA;     &#xD;&#xA;         &#xD;&#xA;     &#xD;&#xA;         &#xD;&#xA;     &#xD;&#xA;        function died($error) {&#xD;&#xA;     &#xD;&#xA;            // your error code can go here&#xD;&#xA;     &#xD;&#xA;            echo ""We are very sorry, but there were error(s) found with the form you submitted. "";&#xD;&#xA;     &#xD;&#xA;            echo ""These errors appear below.<br /><br />"";&#xD;&#xA;     &#xD;&#xA;            echo $error.""<br /><br />"";&#xD;&#xA;     &#xD;&#xA;            echo ""Please go back and fix these errors.<br /><br />"";&#xD;&#xA;     &#xD;&#xA;            die();&#xD;&#xA;     &#xD;&#xA;        }&#xD;&#xA;     &#xD;&#xA;         &#xD;&#xA;     &#xD;&#xA;        // validation expected data exists&#xD;&#xA;     &#xD;&#xA;        if(!isset($_POST['first_name']) ||&#xD;&#xA;     &#xD;&#xA;            !isset($_POST['last_name']) ||&#xD;&#xA;     &#xD;&#xA;            !isset($_POST['email']) ||&#xD;&#xA;     &#xD;&#xA;            !isset($_POST['telephone']) ||&#xD;&#xA;     &#xD;&#xA;            !isset($_POST['comments'])) {&#xD;&#xA;     &#xD;&#xA;            died('We are sorry, but there appears to be a problem with the form you submitted.');       &#xD;&#xA;     &#xD;&#xA;        }&#xD;&#xA;     &#xD;&#xA;         &#xD;&#xA;     &#xD;&#xA;        $first_name = $_POST['first_name']; // required&#xD;&#xA;     &#xD;&#xA;        $last_name = $_POST['last_name']; // required&#xD;&#xA;     &#xD;&#xA;        $email_from = $_POST['email']; // required&#xD;&#xA;     &#xD;&#xA;        $telephone = $_POST['telephone']; // not required&#xD;&#xA;     &#xD;&#xA;        $comments = $_POST['comments']; // required&#xD;&#xA;     &#xD;&#xA;         &#xD;&#xA;     &#xD;&#xA;        $error_message = """";&#xD;&#xA;     &#xD;&#xA;        $email_exp = '/^[A-Za-z0-9._%-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$/';&#xD;&#xA;     &#xD;&#xA;      if(!preg_match($email_exp,$email_from)) {&#xD;&#xA;     &#xD;&#xA;        $error_message .= 'The Email Address you entered does not appear to be valid.<br />';&#xD;&#xA;     &#xD;&#xA;      }&#xD;&#xA;     &#xD;&#xA;        $string_exp = ""/^[A-Za-z .'-]+$/"";&#xD;&#xA;     &#xD;&#xA;      if(!preg_match($string_exp,$first_name)) {&#xD;&#xA;     &#xD;&#xA;        $error_message .= 'The First Name you entered does not appear to be valid.<br />';&#xD;&#xA;     &#xD;&#xA;      }&#xD;&#xA;     &#xD;&#xA;      if(!preg_match($string_exp,$last_name)) {&#xD;&#xA;     &#xD;&#xA;        $error_message .= 'The Last Name you entered does not appear to be valid.<br />';&#xD;&#xA;     &#xD;&#xA;      }&#xD;&#xA;     &#xD;&#xA;      if(strlen($comments) < 2) {&#xD;&#xA;     &#xD;&#xA;        $error_message .= 'The Comments you entered do not appear to be valid.<br />';&#xD;&#xA;     &#xD;&#xA;      }&#xD;&#xA;     &#xD;&#xA;      if(strlen($error_message) > 0) {&#xD;&#xA;     &#xD;&#xA;        died($error_message);&#xD;&#xA;     &#xD;&#xA;      }&#xD;&#xA;     &#xD;&#xA;        $email_message = ""Form details below.\n\n"";&#xD;&#xA;     &#xD;&#xA;         &#xD;&#xA;     &#xD;&#xA;        function clean_string($string) {&#xD;&#xA;     &#xD;&#xA;          $bad = array(""content-type"",""bcc:"",""to:"",""cc:"",""href"");&#xD;&#xA;     &#xD;&#xA;          return str_replace($bad,"""",$string);&#xD;&#xA;     &#xD;&#xA;        }&#xD;&#xA;     &#xD;&#xA;         &#xD;&#xA;     &#xD;&#xA;        $email_message .= ""First Name: "".clean_string($first_name).""\n"";&#xD;&#xA;     &#xD;&#xA;        $email_message .= ""Last Name: "".clean_string($last_name).""\n"";&#xD;&#xA;     &#xD;&#xA;        $email_message .= ""Email: "".clean_string($email_from).""\n"";&#xD;&#xA;     &#xD;&#xA;        $email_message .= ""Telephone: "".clean_string($telephone).""\n"";&#xD;&#xA;     &#xD;&#xA;        $email_message .= ""Comments: "".clean_string($comments).""\n"";&#xD;&#xA;     &#xD;&#xA;         &#xD;&#xA;     &#xD;&#xA;         &#xD;&#xA;     &#xD;&#xA;    // create email headers&#xD;&#xA;     &#xD;&#xA;    $headers = 'From: '.$email_from.""\r\n"".&#xD;&#xA;     &#xD;&#xA;    'Reply-To: '.$email_from.""\r\n"" .&#xD;&#xA;     &#xD;&#xA;    'X-Mailer: PHP/' . phpversion();&#xD;&#xA;     &#xD;&#xA;    @mail($email_to, $email_subject, $email_message, $headers);  &#xD;&#xA;     &#xD;&#xA;    ?>&#xD;&#xA;     &#xD;&#xA;     &#xD;&#xA;     &#xD;&#xA;    <!-- include your own success html here -->&#xD;&#xA;     &#xD;&#xA;     &#xD;&#xA;     &#xD;&#xA;    Thank you for contacting us. We will be in touch with you very soon.&#xD;&#xA;     &#xD;&#xA;     &#xD;&#xA;     &#xD;&#xA;    <?php&#xD;&#xA;     &#xD;&#xA;    }&#xD;&#xA;     &#xD;&#xA;    ?>"
-6201563118651141339,205,9,"            import android.app.AlertDialog;&#xD;&#xA;            import android.app.Service;&#xD;&#xA;            import android.content.Context;&#xD;&#xA;            import android.content.DialogInterface;&#xD;&#xA;            import android.content.Intent;&#xD;&#xA;            import android.location.Location;&#xD;&#xA;            import android.location.LocationListener;&#xD;&#xA;            import android.location.LocationManager;&#xD;&#xA;            import android.os.Bundle;&#xD;&#xA;            import android.os.IBinder;&#xD;&#xA;            import android.provider.Settings;&#xD;&#xA;            import android.util.Log;&#xD;&#xA;    &#xD;&#xA;    public class GPSTracker extends Service implements LocationListener {&#xD;&#xA;    &#xD;&#xA;        private final Context mContext;&#xD;&#xA;    &#xD;&#xA;        // flag for GPS status&#xD;&#xA;        boolean isGPSEnabled = false;&#xD;&#xA;    &#xD;&#xA;        // flag for network status&#xD;&#xA;        boolean isNetworkEnabled = false;&#xD;&#xA;    &#xD;&#xA;        // flag for GPS status&#xD;&#xA;        boolean canGetLocation = false;&#xD;&#xA;    &#xD;&#xA;        Location location; // location&#xD;&#xA;        double latitude; // latitude&#xD;&#xA;        double longitude; // longitude&#xD;&#xA;    &#xD;&#xA;        // The minimum distance to change Updates in meters&#xD;&#xA;        private static final long MIN_DISTANCE_CHANGE_FOR_UPDATES = 10; // 10 meters&#xD;&#xA;    &#xD;&#xA;        // The minimum time between updates in milliseconds&#xD;&#xA;        private static final long MIN_TIME_BW_UPDATES = 1000 * 60 * 1; // 1 minute&#xD;&#xA;    &#xD;&#xA;        // Declaring a Location Manager&#xD;&#xA;        protected LocationManager locationManager;&#xD;&#xA;        public GPSTracker(Context context) {&#xD;&#xA;            this.mContext = context;&#xD;&#xA;            getLocation();&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public Location getLocation() {&#xD;&#xA;            try {&#xD;&#xA;                locationManager = (LocationManager) mContext.getSystemService(LOCATION_SERVICE);&#xD;&#xA;    &#xD;&#xA;                // getting GPS status&#xD;&#xA;                isGPSEnabled = locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER);&#xD;&#xA;    &#xD;&#xA;                // getting network status&#xD;&#xA;                isNetworkEnabled = locationManager&#xD;&#xA;                        .isProviderEnabled(LocationManager.NETWORK_PROVIDER);&#xD;&#xA;    &#xD;&#xA;                if (!isGPSEnabled && !isNetworkEnabled) {&#xD;&#xA;                    // no network provider is enabled&#xD;&#xA;                } else {&#xD;&#xA;                    this.canGetLocation = true;&#xD;&#xA;                    // First get location from Network Provider&#xD;&#xA;                    if (isNetworkEnabled) {&#xD;&#xA;                        locationManager.requestLocationUpdates(&#xD;&#xA;                                LocationManager.NETWORK_PROVIDER,&#xD;&#xA;                                MIN_TIME_BW_UPDATES,&#xD;&#xA;                                MIN_DISTANCE_CHANGE_FOR_UPDATES, this);&#xD;&#xA;    &#xD;&#xA;                        Log.d(""Network"", ""Network"");&#xD;&#xA;                        if (locationManager != null) {&#xD;&#xA;                            location = locationManager&#xD;&#xA;                                    .getLastKnownLocation(LocationManager.NETWORK_PROVIDER);&#xD;&#xA;    &#xD;&#xA;                            if (location != null) {&#xD;&#xA;                                latitude = location.getLatitude();&#xD;&#xA;                                longitude = location.getLongitude();&#xD;&#xA;    &#xD;&#xA;                            }&#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;    &#xD;&#xA;                    // if GPS Enabled get lat/long using GPS Services&#xD;&#xA;                    if (isGPSEnabled) {&#xD;&#xA;                        if (location == null) {&#xD;&#xA;                            locationManager.requestLocationUpdates(&#xD;&#xA;                                    LocationManager.GPS_PROVIDER,&#xD;&#xA;                                    MIN_TIME_BW_UPDATES,&#xD;&#xA;                                    MIN_DISTANCE_CHANGE_FOR_UPDATES, this);&#xD;&#xA;    &#xD;&#xA;                            Log.d(""GPS Enabled"", ""GPS Enabled"");&#xD;&#xA;                            if (locationManager != null) {&#xD;&#xA;                                location = locationManager&#xD;&#xA;                                        .getLastKnownLocation(LocationManager.GPS_PROVIDER);&#xD;&#xA;    &#xD;&#xA;                                if (location != null) {&#xD;&#xA;                                    latitude = location.getLatitude();&#xD;&#xA;                                    longitude = location.getLongitude();&#xD;&#xA;                                }&#xD;&#xA;                            }&#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;            } catch (Exception e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            return location;&#xD;&#xA;        }&#xD;&#xA;        /**&#xD;&#xA;         * Stop using GPS listener&#xD;&#xA;         * Calling this function will stop using GPS in your app&#xD;&#xA;         * */&#xD;&#xA;    &#xD;&#xA;        public void stopUsingGPS(){&#xD;&#xA;            if(locationManager != null){&#xD;&#xA;                locationManager.removeUpdates(GPSTracker.this);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /**&#xD;&#xA;         * Function to get latitude&#xD;&#xA;         * */&#xD;&#xA;    &#xD;&#xA;        public double getLatitude(){&#xD;&#xA;            if(location != null){&#xD;&#xA;                latitude = location.getLatitude();&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            // return latitude&#xD;&#xA;            return latitude;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /**&#xD;&#xA;         * Function to get longitude&#xD;&#xA;         * */&#xD;&#xA;    &#xD;&#xA;        public double getLongitude(){&#xD;&#xA;            if(location != null){&#xD;&#xA;                longitude = location.getLongitude();&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            // return longitude&#xD;&#xA;            return longitude;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /**&#xD;&#xA;         * Function to check GPS/wifi enabled&#xD;&#xA;         * @return boolean&#xD;&#xA;         * */&#xD;&#xA;    &#xD;&#xA;        public boolean canGetLocation() {&#xD;&#xA;            return this.canGetLocation;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        /**&#xD;&#xA;         * Function to show settings alert dialog&#xD;&#xA;         * On pressing Settings button will lauch Settings Options&#xD;&#xA;         * */&#xD;&#xA;    &#xD;&#xA;        public void showSettingsAlert(){&#xD;&#xA;            AlertDialog.Builder alertDialog = new AlertDialog.Builder(mContext);&#xD;&#xA;    &#xD;&#xA;            // Setting Dialog Title&#xD;&#xA;            alertDialog.setTitle(""GPS is settings"");&#xD;&#xA;    &#xD;&#xA;            // Setting Dialog Message&#xD;&#xA;            alertDialog.setMessage(""GPS is not enabled. Do you want to go to settings menu?"");&#xD;&#xA;    &#xD;&#xA;            // On pressing Settings button&#xD;&#xA;            alertDialog.setPositiveButton(""Settings"", new DialogInterface.OnClickListener() {&#xD;&#xA;                public void onClick(DialogInterface dialog,int which) {&#xD;&#xA;                    Intent intent = new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS);&#xD;&#xA;                    mContext.startActivity(intent);&#xD;&#xA;                }&#xD;&#xA;            });&#xD;&#xA;    &#xD;&#xA;            // on pressing cancel button&#xD;&#xA;            alertDialog.setNegativeButton(""Cancel"", new DialogInterface.OnClickListener() {&#xD;&#xA;                public void onClick(DialogInterface dialog, int which) {&#xD;&#xA;                    dialog.cancel();&#xD;&#xA;                }&#xD;&#xA;            });&#xD;&#xA;    &#xD;&#xA;            // Showing Alert Message&#xD;&#xA;            alertDialog.show();&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void onLocationChanged(Location location) {&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void onProviderDisabled(String provider) {&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void onProviderEnabled(String provider) {&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void onStatusChanged(String provider, int status, Bundle extras) {&#xD;&#xA;        }&#xD;&#xA;        @Override&#xD;&#xA;        public IBinder onBind(Intent arg0) {&#xD;&#xA;            return null;&#xD;&#xA;        }&#xD;&#xA;    }"
-9175844062748453447,23,10,"     <system.diagnostics>&#xD;&#xA;    <sources>&#xD;&#xA;      <source name=""System.ServiceModel.MessageLogging"">&#xD;&#xA;        <listeners>&#xD;&#xA;                 <add name=""messages""&#xD;&#xA;                 type=""System.Diagnostics.XmlWriterTraceListener""&#xD;&#xA;                 initializeData=""c:\logs\messages.svclog"" />&#xD;&#xA;          </listeners>&#xD;&#xA;      </source>&#xD;&#xA;    </sources>&#xD;&#xA;    </system.diagnostics>&#xD;&#xA;    &#xD;&#xA;    <system.serviceModel>&#xD;&#xA;    <diagnostics>&#xD;&#xA;    <messageLogging &#xD;&#xA;         logEntireMessage=""true"" &#xD;&#xA;         logMalformedMessages=""false""&#xD;&#xA;         logMessagesAtServiceLevel=""true"" &#xD;&#xA;         logMessagesAtTransportLevel=""false""&#xD;&#xA;         maxMessagesToLog=""3000""&#xD;&#xA;         maxSizeOfMessageToLog=""2000""/>&#xD;&#xA;      </diagnostics>&#xD;&#xA;    </system.serviceModel>"
2035905455245068887,23,10,"        <configuration>&#xD;&#xA;          <system.webServer>&#xD;&#xA;            <rewrite>&#xD;&#xA;              <rules>&#xD;&#xA;                <rule name=""Imported Rule 1"" stopProcessing=""true"">&#xD;&#xA;                  <match url=""^(.*)/$"" ignoreCase=""false"" />&#xD;&#xA;                  <conditions>&#xD;&#xA;                    <add input=""{REQUEST_FILENAME}"" matchType=""IsDirectory"" ignoreCase=""false"" negate=""true"" />&#xD;&#xA;                  </conditions>&#xD;&#xA;                  <action type=""Redirect"" redirectType=""Permanent"" url=""/{R:1}"" />&#xD;&#xA;                </rule>&#xD;&#xA;                <rule name=""Imported Rule 2"" stopProcessing=""true"">&#xD;&#xA;                  <match url=""^"" ignoreCase=""false"" />&#xD;&#xA;                  <conditions>&#xD;&#xA;                    <add input=""{REQUEST_FILENAME}"" matchType=""IsDirectory"" ignoreCase=""false"" negate=""true"" />&#xD;&#xA;                    <add input=""{REQUEST_FILENAME}"" matchType=""IsFile"" ignoreCase=""false"" negate=""true"" />&#xD;&#xA;                  </conditions>&#xD;&#xA;                  <action type=""Rewrite"" url=""index.php"" />&#xD;&#xA;                </rule>&#xD;&#xA;              </rules>&#xD;&#xA;            </rewrite>&#xD;&#xA;          </system.webServer>&#xD;&#xA;        </configuration>"
5525228118748634062,23,10,       Introduction&#xD;&#xA;          The Case Study: Searching Orders&#xD;&#xA;          The Northgale Database&#xD;&#xA;       Dynamic SQL&#xD;&#xA;          Introduction&#xD;&#xA;          Using sp_executesql&#xD;&#xA;          Using the CLR&#xD;&#xA;          Using EXEC()&#xD;&#xA;          When Caching Is Not Really What You Want&#xD;&#xA;       Static SQL&#xD;&#xA;          Introduction&#xD;&#xA;          x = @x OR @x IS NULL&#xD;&#xA;          Using IF statements&#xD;&#xA;          Umachandar's Bag of Tricks&#xD;&#xA;          Using Temp Tables&#xD;&#xA;          x = @x AND @x IS NOT NULL&#xD;&#xA;          Handling Complex Conditions&#xD;&#xA;       Hybrid Solutions – Using both Static and Dynamic SQL&#xD;&#xA;          Using Views&#xD;&#xA;          Using Inline Table Functions&#xD;&#xA;       Conclusion&#xD;&#xA;       Feedback and Acknowledgements&#xD;&#xA;       Revision History
-9043566050860010481,24,10,"    		var availableTags = [&#xD;&#xA;			""ActionScript"",&#xD;&#xA;			""AppleScript"",&#xD;&#xA;			""Asp"",&#xD;&#xA;			""BASIC"",&#xD;&#xA;			""C"",&#xD;&#xA;			""C++"",&#xD;&#xA;			""Clojure"",&#xD;&#xA;			""COBOL"",&#xD;&#xA;			""ColdFusion"",&#xD;&#xA;			""Erlang"",&#xD;&#xA;			""Fortran"",&#xD;&#xA;			""Groovy"",&#xD;&#xA;			""Haskell"",&#xD;&#xA;			""Java"",&#xD;&#xA;			""JavaScript"",&#xD;&#xA;			""Lisp"",&#xD;&#xA;			""Perl"",&#xD;&#xA;			""PHP"",&#xD;&#xA;			""Python"",&#xD;&#xA;			""Ruby"",&#xD;&#xA;			""Scala"",&#xD;&#xA;			""Scheme""&#xD;&#xA;		];"
-980126686617744876,26,10,"     public Bitmap scaleCenterCrop(Bitmap source, int newHeight, int newWidth) {&#xD;&#xA;        int sourceWidth = source.getWidth();&#xD;&#xA;        int sourceHeight = source.getHeight();&#xD;&#xA;        // Compute the scaling factors to fit the new height and width, respectively.&#xD;&#xA;        // To cover the final image, the final scaling will be the bigger&#xD;&#xA;        // of these two.&#xD;&#xA;        float xScale = (float) newWidth / sourceWidth;&#xD;&#xA;        float yScale = (float) newHeight / sourceHeight;&#xD;&#xA;        float scale = Math.max(xScale, yScale);&#xD;&#xA;        // Now get the size of the source bitmap when scaled&#xD;&#xA;        float scaledWidth = scale * sourceWidth;&#xD;&#xA;        float scaledHeight = scale * sourceHeight;&#xD;&#xA;        // Let's find out the upper left coordinates if the scaled bitmap&#xD;&#xA;        // should be centered in the new size give by the parameters&#xD;&#xA;        float left = (newWidth - scaledWidth) / 2;&#xD;&#xA;        float top = (newHeight - scaledHeight) / 2;&#xD;&#xA;        // The target rectangle for the new, scaled version of the source bitmap will now&#xD;&#xA;        // be&#xD;&#xA;        RectF targetRect = new RectF(left, top, left + scaledWidth, top + scaledHeight);&#xD;&#xA;        // Finally, we create a new bitmap of the specified size and draw our new,&#xD;&#xA;        // scaled bitmap onto it.&#xD;&#xA;        Bitmap dest = Bitmap.createBitmap(newWidth, newHeight, source.getConfig());&#xD;&#xA;        Canvas canvas = new Canvas(dest);&#xD;&#xA;        canvas.drawBitmap(source, null, targetRect, null);&#xD;&#xA;        return dest;&#xD;&#xA;    }"
-56537683435880593,27,10,"	<!DOCTYPE html>&#xD;&#xA;	  <html>&#xD;&#xA;		<head>&#xD;&#xA;		<meta charset=""utf-8"" />&#xD;&#xA;		<meta name=""viewport"" content=""widdiv=device-widdiv, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"" />&#xD;&#xA;		<meta name=""apple-mobile-web-app-capable"" content=""yes"" />&#xD;&#xA;		<meta name=""apple-mobile-web-app-status-bar-style"" content=""black"" />&#xD;&#xA;		<title>&#xD;&#xA;		</title>&#xD;&#xA;		<link rel=""stylesheet"" href=""http://code.jquery.com/mobile/1.2.0/jquery.mobile-1.2.0.min.css"" />&#xD;&#xA;		<script src=""http://www.dragan-gaic.info/js/jquery-1.8.2.min.js"">&#xD;&#xA;		</script>&#xD;&#xA;		<script src=""http://code.jquery.com/mobile/1.2.0/jquery.mobile-1.2.0.min.js""></script>  &#xD;&#xA;	   </head>&#xD;&#xA;	   <body>&#xD;&#xA;		<!-- Home -->&#xD;&#xA;		<div data-role=""page"" id=""second"">&#xD;&#xA;			<div data-role=""header"">&#xD;&#xA;				<h3>&#xD;&#xA;					Second Page&#xD;&#xA;				</h3>&#xD;&#xA;			</div>&#xD;&#xA;			<div data-role=""content"">&#xD;&#xA;			</div> <!--content-->&#xD;&#xA;		</div><!--page-->&#xD;&#xA;	  </body>&#xD;&#xA;	</html>"
-1394386917797121683,27,10,	<key>NSAppTransportSecurity</key>&#xD;&#xA;	<dict>&#xD;&#xA;		<key>NSExceptionDomains</key>&#xD;&#xA;		<dict>&#xD;&#xA;			<key>facebook.com</key>&#xD;&#xA;			<dict>&#xD;&#xA;				<key>NSIncludesSubdomains</key>&#xD;&#xA;				<true />&#xD;&#xA;				<key>NSExceptionRequiresForwardSecrecy</key>&#xD;&#xA;				<false />&#xD;&#xA;			</dict>&#xD;&#xA;			<key>fbcdn.net</key>&#xD;&#xA;			<dict>&#xD;&#xA;				<key>NSIncludesSubdomains</key>&#xD;&#xA;				<true />&#xD;&#xA;				<key>NSExceptionRequiresForwardSecrecy</key>&#xD;&#xA;				<false />&#xD;&#xA;			</dict>&#xD;&#xA;			<key>akamaihd.net</key>&#xD;&#xA;			<dict>&#xD;&#xA;				<key>NSIncludesSubdomains</key>&#xD;&#xA;				<true />&#xD;&#xA;				<key>NSExceptionRequiresForwardSecrecy</key>&#xD;&#xA;				<false />&#xD;&#xA;			</dict>&#xD;&#xA;		</dict>&#xD;&#xA;	</dict>
3473983788604195247,30,10,"        <?xml version=""1.0"" encoding=""UTF-8""?>&#xD;&#xA;        <web-app version=""2.5"" xmlns=""http://java.sun.com/xml/ns/javaee""&#xD;&#xA;	xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""&#xD;&#xA;	xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee &#xD;&#xA;        http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"">&#xD;&#xA;	<!-- The definition of the Root Spring Container shared by all Servlets and Filters -->&#xD;&#xA;	<context-param>&#xD;&#xA;		<param-name>contextConfigLocation</param-name>&#xD;&#xA;		<param-value>/WEB-INF/spring/root-context.xml</param-value>&#xD;&#xA;	</context-param>&#xD;&#xA;	&#xD;&#xA;	<!-- Creates the Spring Container shared by all Servlets and Filters -->&#xD;&#xA;	<listener>&#xD;&#xA;		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>&#xD;&#xA;	</listener>&#xD;&#xA;	<!-- Processes application requests -->&#xD;&#xA;	<servlet>&#xD;&#xA;		<servlet-name>appServlet</servlet-name>&#xD;&#xA;		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>&#xD;&#xA;		<init-param>&#xD;&#xA;			<param-name>contextConfigLocation</param-name>&#xD;&#xA;			<param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value>&#xD;&#xA;		</init-param>&#xD;&#xA;		<load-on-startup>1</load-on-startup>&#xD;&#xA;	</servlet>&#xD;&#xA;		&#xD;&#xA;	<servlet-mapping>&#xD;&#xA;		<servlet-name>appServlet</servlet-name>&#xD;&#xA;		<url-pattern>/</url-pattern>&#xD;&#xA;	</servlet-mapping>"
5474322066260793802,31,10,"	<?php&#xD;&#xA;	$q=$_GET[""q""];&#xD;&#xA;	$con = mysql_connect('localhost', 'peter', 'abc123');&#xD;&#xA;	if (!$con)&#xD;&#xA;	  {&#xD;&#xA;	  die('Could not connect: ' . mysql_error());&#xD;&#xA;	  }&#xD;&#xA;	mysql_select_db(""ajax_demo"", $con);&#xD;&#xA;	$sql=""SELECT * FROM user WHERE id = '"".$q.""'"";&#xD;&#xA;	$result = mysql_query($sql);&#xD;&#xA;	echo ""<table border='1'>&#xD;&#xA;	<tr>&#xD;&#xA;	<th>Firstname</th>&#xD;&#xA;	<th>Lastname</th>&#xD;&#xA;	<th>Age</th>&#xD;&#xA;	<th>Hometown</th>&#xD;&#xA;	<th>Job</th>&#xD;&#xA;	</tr>"";&#xD;&#xA;	while($row = mysql_fetch_array($result))&#xD;&#xA;	  {&#xD;&#xA;	  echo ""<tr>"";&#xD;&#xA;	  echo ""<td>"" . $row['FirstName'] . ""</td>"";&#xD;&#xA;	  echo ""<td>"" . $row['LastName'] . ""</td>"";&#xD;&#xA;	  echo ""<td>"" . $row['Age'] . ""</td>"";&#xD;&#xA;	  echo ""<td>"" . $row['Hometown'] . ""</td>"";&#xD;&#xA;	  echo ""<td>"" . $row['Job'] . ""</td>"";&#xD;&#xA;	  echo ""</tr>"";&#xD;&#xA;	  }&#xD;&#xA;	echo ""</table>"";&#xD;&#xA;	mysql_close($con);&#xD;&#xA;	?>"
-4870249223222402725,33,10,"        var app = {&#xD;&#xA;        // Application Constructor&#xD;&#xA;        initialize: function() {&#xD;&#xA;            this.bindEvents();&#xD;&#xA;        },&#xD;&#xA;        // Bind Event Listeners&#xD;&#xA;        //&#xD;&#xA;        // Bind any events that are required on startup. Common events are:&#xD;&#xA;        // 'load', 'deviceready', 'offline', and 'online'.&#xD;&#xA;        bindEvents: function() {&#xD;&#xA;            document.addEventListener('deviceready', this.onDeviceReady, false);&#xD;&#xA;        },&#xD;&#xA;        // deviceready Event Handler&#xD;&#xA;        //&#xD;&#xA;        // The scope of 'this' is the event. In order to call the 'receivedEvent'&#xD;&#xA;        // function, we must explicitly call 'app.receivedEvent(...);'&#xD;&#xA;        onDeviceReady: function() {&#xD;&#xA;            app.receivedEvent('deviceready');&#xD;&#xA;        },&#xD;&#xA;        // Update DOM on a Received Event&#xD;&#xA;        receivedEvent: function(id) {&#xD;&#xA;            var parentElement = document.getElementById(id);&#xD;&#xA;            var listeningElement = parentElement.querySelector('.listening');&#xD;&#xA;            var receivedElement = parentElement.querySelector('.received');&#xD;&#xA;    &#xD;&#xA;            listeningElement.setAttribute('style', 'display:none;');&#xD;&#xA;            receivedElement.setAttribute('style', 'display:block;');&#xD;&#xA;    &#xD;&#xA;            console.log('Received Event: ' + id);&#xD;&#xA;        }&#xD;&#xA;    };&#xD;&#xA;    &#xD;&#xA;    app.initialize();"
2389998157275235987,33,10,"	CREATE FUNCTION [dbo].[DelimitedSplit8K]&#xD;&#xA;	--===== Define I/O parameters&#xD;&#xA;			(@pString VARCHAR(8000), @pDelimiter CHAR(1))&#xD;&#xA;	--WARNING!!! DO NOT USE MAX DATA-TYPES HERE!  IT WILL KILL PERFORMANCE!&#xD;&#xA;	RETURNS TABLE WITH SCHEMABINDING AS&#xD;&#xA;	 RETURN&#xD;&#xA;	--===== ""Inline"" CTE Driven ""Tally Table"" produces values from 1 up to 10,000...&#xD;&#xA;		 -- enough to cover VARCHAR(8000)&#xD;&#xA;	  WITH E1(N) AS (&#xD;&#xA;					 SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1 UNION ALL&#xD;&#xA;					 SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1 UNION ALL&#xD;&#xA;					 SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1&#xD;&#xA;					),                          --10E+1 or 10 rows&#xD;&#xA;		   E2(N) AS (SELECT 1 FROM E1 a, E1 b), --10E+2 or 100 rows&#xD;&#xA;		   E4(N) AS (SELECT 1 FROM E2 a, E2 b), --10E+4 or 10,000 rows max&#xD;&#xA;	 cteTally(N) AS (--==== This provides the ""base"" CTE and limits the number of rows right up front&#xD;&#xA;						 -- for both a performance gain and prevention of accidental ""overruns""&#xD;&#xA;					 SELECT TOP (ISNULL(DATALENGTH(@pString),0)) ROW_NUMBER() OVER (ORDER BY (SELECT NULL)) FROM E4&#xD;&#xA;					),&#xD;&#xA;	cteStart(N1) AS (--==== This returns N+1 (starting position of each ""element"" just once for each delimiter)&#xD;&#xA;					 SELECT 1 UNION ALL&#xD;&#xA;					 SELECT t.N+1 FROM cteTally t WHERE SUBSTRING(@pString,t.N,1) = @pDelimiter&#xD;&#xA;					),&#xD;&#xA;	cteLen(N1,L1) AS(--==== Return start and length (for use in substring)&#xD;&#xA;					 SELECT s.N1,&#xD;&#xA;							ISNULL(NULLIF(CHARINDEX(@pDelimiter,@pString,s.N1),0)-s.N1,8000)&#xD;&#xA;					   FROM cteStart s&#xD;&#xA;					)&#xD;&#xA;	--===== Do the actual split. The ISNULL/NULLIF combo handles the length for the final element when no delimiter is found.&#xD;&#xA;	 SELECT ItemNumber = ROW_NUMBER() OVER(ORDER BY l.N1),&#xD;&#xA;			Item       = SUBSTRING(@pString, l.N1, l.L1)&#xD;&#xA;	   FROM cteLen l&#xD;&#xA;	;"
-4377730057715008848,33,10,    body {&#xD;&#xA;      background: #20262E;&#xD;&#xA;      padding: 20px;&#xD;&#xA;      font-family: Helvetica;&#xD;&#xA;    }&#xD;&#xA;    #banner-message {&#xD;&#xA;      background: #fff;&#xD;&#xA;      border-radius: 4px;&#xD;&#xA;      padding: 20px;&#xD;&#xA;      font-size: 25px;&#xD;&#xA;      text-align: center;&#xD;&#xA;      transition: all 0.2s;&#xD;&#xA;      margin: 0 auto;&#xD;&#xA;      width: 300px;&#xD;&#xA;    }&#xD;&#xA;    button {&#xD;&#xA;      background: #0084ff;&#xD;&#xA;      border: none;&#xD;&#xA;      border-radius: 5px;&#xD;&#xA;      padding: 8px 14px;&#xD;&#xA;      font-size: 15px;&#xD;&#xA;      color: #fff;&#xD;&#xA;    }&#xD;&#xA;    #banner-message.alt {&#xD;&#xA;      background: #0084ff;&#xD;&#xA;      color: #fff;&#xD;&#xA;      margin-top: 40px;&#xD;&#xA;      width: 200px;&#xD;&#xA;    }&#xD;&#xA;    #banner-message.alt button {&#xD;&#xA;      background: #fff;&#xD;&#xA;      color: #000;&#xD;&#xA;    }
-5188299548301734603,34,10,"    $(document).ready(function () {&#xD;&#xA;        var id = '#dialog';&#xD;&#xA;        //Get the screen height and width&#xD;&#xA;        var maskHeight = $(document).height();&#xD;&#xA;        var maskWidth = $(window).width();&#xD;&#xA;        //Set heigth and width to mask to fill up the whole screen&#xD;&#xA;        $('#mask').css({&#xD;&#xA;            'width': maskWidth,&#xD;&#xA;            'height': maskHeight&#xD;&#xA;        });&#xD;&#xA;        //transition effect		&#xD;&#xA;        $('#mask').fadeIn(500);&#xD;&#xA;        $('#mask').fadeTo(""slow"", 0.9);&#xD;&#xA;        //Get the window height and width&#xD;&#xA;        var winH = $(window).height();&#xD;&#xA;        var winW = $(window).width();&#xD;&#xA;        //Set the popup window to center&#xD;&#xA;        $(id).css('top', winH / 2 - $(id).height() / 2);&#xD;&#xA;        $(id).css('left', winW / 2 - $(id).width() / 2);&#xD;&#xA;        //transition effect&#xD;&#xA;        $(id).fadeIn(2000);&#xD;&#xA;        //if close button is clicked&#xD;&#xA;        $('.window #close').click(function (e) {&#xD;&#xA;            //Cancel the link behavior&#xD;&#xA;            e.preventDefault();&#xD;&#xA;            $('#mask').hide();&#xD;&#xA;            $('.window').hide();&#xD;&#xA;        });&#xD;&#xA;        //if mask is clicked&#xD;&#xA;        $('#mask').click(function () {&#xD;&#xA;            $(this).hide();&#xD;&#xA;            $('.window').hide();&#xD;&#xA;        });&#xD;&#xA;    });"
2838676052828311101,34,10,"	class BoundedBuffer {&#xD;&#xA;	   final Lock lock = new ReentrantLock();&#xD;&#xA;	   final Condition notFull  = lock.newCondition(); &#xD;&#xA;	   final Condition notEmpty = lock.newCondition(); &#xD;&#xA;	   final Object[] items = new Object[100];&#xD;&#xA;	   int putptr, takeptr, count;&#xD;&#xA;	   public void put(Object x) throws InterruptedException {&#xD;&#xA;		 lock.lock();&#xD;&#xA;		 try {&#xD;&#xA;		   while (count == items.length)&#xD;&#xA;			 notFull.await();&#xD;&#xA;		   items[putptr] = x;&#xD;&#xA;		   if (++putptr == items.length) putptr = 0;&#xD;&#xA;		   ++count;&#xD;&#xA;		   notEmpty.signal();&#xD;&#xA;		 } finally {&#xD;&#xA;		   lock.unlock();&#xD;&#xA;		 }&#xD;&#xA;	   }&#xD;&#xA;	   public Object take() throws InterruptedException {&#xD;&#xA;		 lock.lock();&#xD;&#xA;		 try {&#xD;&#xA;		   while (count == 0)&#xD;&#xA;			 notEmpty.await();&#xD;&#xA;		   Object x = items[takeptr];&#xD;&#xA;		   if (++takeptr == items.length) takeptr = 0;&#xD;&#xA;		   --count;&#xD;&#xA;		   notFull.signal();&#xD;&#xA;		   return x;&#xD;&#xA;		 } finally {&#xD;&#xA;		   lock.unlock();&#xD;&#xA;		 }&#xD;&#xA;	   }&#xD;&#xA;	 }"
-823144835203434249,38,10,"        // Hide Header on on scroll down&#xD;&#xA;    var didScroll;&#xD;&#xA;    var lastScrollTop = 0;&#xD;&#xA;    var delta = 5;&#xD;&#xA;    var navbarHeight = $('header').outerHeight();&#xD;&#xA;    &#xD;&#xA;    $(window).scroll(function(event){&#xD;&#xA;        didScroll = true;&#xD;&#xA;    });&#xD;&#xA;    &#xD;&#xA;    setInterval(function() {&#xD;&#xA;        if (didScroll) {&#xD;&#xA;            hasScrolled();&#xD;&#xA;            didScroll = false;&#xD;&#xA;        }&#xD;&#xA;    }, 250);&#xD;&#xA;    &#xD;&#xA;    function hasScrolled() {&#xD;&#xA;        var st = $(this).scrollTop();&#xD;&#xA;        &#xD;&#xA;        // Make sure they scroll more than delta&#xD;&#xA;        if(Math.abs(lastScrollTop - st) <= delta)&#xD;&#xA;            return;&#xD;&#xA;        &#xD;&#xA;        // If they scrolled down and are past the navbar, add class .nav-up.&#xD;&#xA;        // This is necessary so you never see what is ""behind"" the navbar.&#xD;&#xA;        if (st > lastScrollTop && st > navbarHeight){&#xD;&#xA;            // Scroll Down&#xD;&#xA;            $('header').removeClass('nav-down').addClass('nav-up');&#xD;&#xA;        } else {&#xD;&#xA;            // Scroll Up&#xD;&#xA;            if(st + $(window).height() < $(document).height()) {&#xD;&#xA;                $('header').removeClass('nav-up').addClass('nav-down');&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        lastScrollTop = st;&#xD;&#xA;    }"
-7071821112437474934,40,10,"    public class MainActivity extends AppCompatActivity {&#xD;&#xA;        @Override&#xD;&#xA;        protected void onCreate(Bundle savedInstanceState) {&#xD;&#xA;            super.onCreate(savedInstanceState);&#xD;&#xA;            setContentView(R.layout.activity_main);&#xD;&#xA;            Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);&#xD;&#xA;            setSupportActionBar(toolbar);&#xD;&#xA;    &#xD;&#xA;            FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);&#xD;&#xA;            fab.setOnClickListener(new View.OnClickListener() {&#xD;&#xA;                @Override&#xD;&#xA;                public void onClick(View view) {&#xD;&#xA;                    Snackbar.make(view, ""Replace with your own action"", Snackbar.LENGTH_LONG)&#xD;&#xA;                            .setAction(""Action"", null).show();&#xD;&#xA;                }&#xD;&#xA;            });&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public boolean onCreateOptionsMenu(Menu menu) {&#xD;&#xA;            // Inflate the menu; this adds items to the action bar if it is present.&#xD;&#xA;            getMenuInflater().inflate(R.menu.menu_main, menu);&#xD;&#xA;            return true;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public boolean onOptionsItemSelected(MenuItem item) {&#xD;&#xA;            // Handle action bar item clicks here. The action bar will&#xD;&#xA;            // automatically handle clicks on the Home/Up button, so long&#xD;&#xA;            // as you specify a parent activity in AndroidManifest.xml.&#xD;&#xA;            int id = item.getItemId();&#xD;&#xA;    &#xD;&#xA;            //noinspection SimplifiableIfStatement&#xD;&#xA;            if (id == R.id.action_settings) {&#xD;&#xA;                return true;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            return super.onOptionsItemSelected(item);&#xD;&#xA;        }&#xD;&#xA;    }"
8680620683485237162,46,10,"    html, body, div, span, applet, object, iframe,&#xD;&#xA;    h1, h2, h3, h4, h5, h6, p, blockquote, pre,&#xD;&#xA;    a, abbr, acronym, address, big, cite, code,&#xD;&#xA;    del, dfn, em, font, img, ins, kbd, q, s, samp,&#xD;&#xA;    small, strike, strong, sub, sup, tt, var,&#xD;&#xA;    dl, dt, dd, ol, ul, li,&#xD;&#xA;    fieldset, form, label, legend,&#xD;&#xA;    table, caption, tbody, tfoot, thead, tr, th, td {&#xD;&#xA;    	margin: 0;&#xD;&#xA;	    padding: 0;&#xD;&#xA;	    border: 0;&#xD;&#xA;	    outline: 0;&#xD;&#xA;	    font-weight: inherit;&#xD;&#xA;	    font-style: inherit;&#xD;&#xA;	    font-size: 100%;&#xD;&#xA;	    font-family: inherit;&#xD;&#xA;	    vertical-align: baseline;&#xD;&#xA;    }&#xD;&#xA;    /* remember to define focus styles! */&#xD;&#xA;    :focus {&#xD;&#xA;	    outline: 0;&#xD;&#xA;    }&#xD;&#xA;    body {&#xD;&#xA;	    line-height: 1;&#xD;&#xA;	    color: black;&#xD;&#xA;	    background: white;&#xD;&#xA;    }&#xD;&#xA;    ol, ul {&#xD;&#xA;	    list-style: none;&#xD;&#xA;    }&#xD;&#xA;    /* tables still need 'cellspacing=""0""' in the markup */&#xD;&#xA;    table {&#xD;&#xA;	    border-collapse: separate;&#xD;&#xA;	    border-spacing: 0;&#xD;&#xA;    }&#xD;&#xA;    caption, th, td {&#xD;&#xA;	    text-align: left;&#xD;&#xA;	    font-weight: normal;&#xD;&#xA;    }&#xD;&#xA;    blockquote:before, blockquote:after,&#xD;&#xA;    q:before, q:after {&#xD;&#xA;	    content: """";&#xD;&#xA;    }&#xD;&#xA;    blockquote, q {&#xD;&#xA;	    quotes: """" """";&#xD;&#xA;    }"
7925543843738742250,46,10,"	using System;&#xD;&#xA;	using System.Diagnostics;&#xD;&#xA;	using System.Windows.Forms;&#xD;&#xA;	using System.Runtime.InteropServices;&#xD;&#xA;	class InterceptKeys&#xD;&#xA;	{&#xD;&#xA;		private const int WH_KEYBOARD_LL = 13;&#xD;&#xA;		private const int WM_KEYDOWN = 0x0100;&#xD;&#xA;		private static LowLevelKeyboardProc _proc = HookCallback;&#xD;&#xA;		private static IntPtr _hookID = IntPtr.Zero;&#xD;&#xA;		public static void Main()&#xD;&#xA;		{&#xD;&#xA;			_hookID = SetHook(_proc);&#xD;&#xA;			Application.Run();&#xD;&#xA;			UnhookWindowsHookEx(_hookID);&#xD;&#xA;		}&#xD;&#xA;		private static IntPtr SetHook(LowLevelKeyboardProc proc)&#xD;&#xA;		{&#xD;&#xA;			using (Process curProcess = Process.GetCurrentProcess())&#xD;&#xA;			using (ProcessModule curModule = curProcess.MainModule)&#xD;&#xA;			{&#xD;&#xA;				return SetWindowsHookEx(WH_KEYBOARD_LL, proc,&#xD;&#xA;					GetModuleHandle(curModule.ModuleName), 0);&#xD;&#xA;			}&#xD;&#xA;		}&#xD;&#xA;		private delegate IntPtr LowLevelKeyboardProc(int nCode, IntPtr wParam, IntPtr lParam);&#xD;&#xA;		private static IntPtr HookCallback(int nCode, IntPtr wParam, IntPtr lParam)&#xD;&#xA;		{&#xD;&#xA;			if (nCode >= 0 && wParam == (IntPtr)WM_KEYDOWN)&#xD;&#xA;			{&#xD;&#xA;				int vkCode = Marshal.ReadInt32(lParam);&#xD;&#xA;				Console.WriteLine((Keys)vkCode);&#xD;&#xA;			}&#xD;&#xA;			&#xD;&#xA;			return CallNextHookEx(_hookID, nCode, wParam, lParam);&#xD;&#xA;		}&#xD;&#xA;		[DllImport(""user32.dll"", CharSet = CharSet.Auto, SetLastError = true)]&#xD;&#xA;		private static extern IntPtr SetWindowsHookEx(int idHook, LowLevelKeyboardProc lpfn, IntPtr hMod, uint dwThreadId);&#xD;&#xA;		[DllImport(""user32.dll"", CharSet = CharSet.Auto, SetLastError = true)]&#xD;&#xA;		[return: MarshalAs(UnmanagedType.Bool)]&#xD;&#xA;		private static extern bool UnhookWindowsHookEx(IntPtr hhk);&#xD;&#xA;		[DllImport(""user32.dll"", CharSet = CharSet.Auto, SetLastError = true)]&#xD;&#xA;		private static extern IntPtr CallNextHookEx(IntPtr hhk, int nCode, IntPtr wParam, IntPtr lParam);&#xD;&#xA;		[DllImport(""kernel32.dll"", CharSet = CharSet.Auto, SetLastError = true)]&#xD;&#xA;		private static extern IntPtr GetModuleHandle(string lpModuleName);&#xD;&#xA;	}"
4273172727829923813,49,10,"     $(function () {&#xD;&#xA;        $('#container').highcharts({&#xD;&#xA;            title: {&#xD;&#xA;                text: 'Monthly Average Temperature',&#xD;&#xA;                x: -20 //center&#xD;&#xA;            },&#xD;&#xA;            subtitle: {&#xD;&#xA;                text: 'Source: WorldClimate.com',&#xD;&#xA;                x: -20&#xD;&#xA;            },&#xD;&#xA;            xAxis: {&#xD;&#xA;                categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',&#xD;&#xA;                    'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']&#xD;&#xA;            },&#xD;&#xA;            yAxis: {&#xD;&#xA;                title: {&#xD;&#xA;                    text: 'Temperature (°C)'&#xD;&#xA;                },&#xD;&#xA;                plotLines: [{&#xD;&#xA;                    value: 0,&#xD;&#xA;                    width: 1,&#xD;&#xA;                    color: '#808080'&#xD;&#xA;                }]&#xD;&#xA;            },&#xD;&#xA;            tooltip: {&#xD;&#xA;                valueSuffix: '°C'&#xD;&#xA;            },&#xD;&#xA;            legend: {&#xD;&#xA;                layout: 'vertical',&#xD;&#xA;                align: 'right',&#xD;&#xA;                verticalAlign: 'middle',&#xD;&#xA;                borderWidth: 0&#xD;&#xA;            },&#xD;&#xA;            series: [{&#xD;&#xA;                name: 'Tokyo',&#xD;&#xA;                data: [7.0, 6.9, 9.5, 14.5, 18.2, 21.5, 25.2, 26.5, 23.3, 18.3, 13.9, 9.6]&#xD;&#xA;            }, {&#xD;&#xA;                name: 'New York',&#xD;&#xA;                data: [-0.2, 0.8, 5.7, 11.3, 17.0, 22.0, 24.8, 24.1, 20.1, 14.1, 8.6, 2.5]&#xD;&#xA;            }, {&#xD;&#xA;                name: 'Berlin',&#xD;&#xA;                data: [-0.9, 0.6, 3.5, 8.4, 13.5, 17.0, 18.6, 17.9, 14.3, 9.0, 3.9, 1.0]&#xD;&#xA;            }, {&#xD;&#xA;                name: 'London',&#xD;&#xA;                data: [3.9, 4.2, 5.7, 8.5, 11.9, 15.2, 17.0, 16.6, 14.2, 10.3, 6.6, 4.8]&#xD;&#xA;            }]&#xD;&#xA;        });&#xD;&#xA;    });&#xD;&#xA;    "
-676229738577662944,52,10,"        nav class=""navbar navbar-default"">&#xD;&#xA;          <div class=""container-fluid"">&#xD;&#xA;            <!-- Brand and toggle get grouped for better mobile display -->&#xD;&#xA;            <div class=""navbar-header"">&#xD;&#xA;              <button type=""button"" class=""navbar-toggle collapsed"" data-toggle=""collapse"" data-target=""#bs-example-navbar-collapse-1"" aria-expanded=""false"">&#xD;&#xA;                <span class=""sr-only"">Toggle navigation</span>&#xD;&#xA;                <span class=""icon-bar""></span>&#xD;&#xA;                <span class=""icon-bar""></span>&#xD;&#xA;                <span class=""icon-bar""></span>&#xD;&#xA;              </button>&#xD;&#xA;              <a class=""navbar-brand"" href=""#"">Brand</a>&#xD;&#xA;            </div>&#xD;&#xA;            <!-- Collect the nav links, forms, and other content for toggling -->&#xD;&#xA;            <div class=""collapse navbar-collapse"" id=""bs-example-navbar-collapse-1"">&#xD;&#xA;              <ul class=""nav navbar-nav"">&#xD;&#xA;                <li class=""active""><a href=""#"">Link <span class=""sr-only"">(current)</span></a></li>&#xD;&#xA;                <li><a href=""#"">Link</a></li>&#xD;&#xA;                <li class=""dropdown"">&#xD;&#xA;                  <a href=""#"" class=""dropdown-toggle"" data-toggle=""dropdown"" role=""button"" aria-haspopup=""true"" aria-expanded=""false"">Dropdown <span class=""caret""></span></a>&#xD;&#xA;                  <ul class=""dropdown-menu"">&#xD;&#xA;                    <li><a href=""#"">Action</a></li>&#xD;&#xA;                    <li><a href=""#"">Another action</a></li>&#xD;&#xA;                    <li><a href=""#"">Something else here</a></li>&#xD;&#xA;                    <li role=""separator"" class=""divider""></li>&#xD;&#xA;                    <li><a href=""#"">Separated link</a></li>&#xD;&#xA;                    <li role=""separator"" class=""divider""></li>&#xD;&#xA;                    <li><a href=""#"">One more separated link</a></li>&#xD;&#xA;                  </ul>&#xD;&#xA;                </li>&#xD;&#xA;               </ul>&#xD;&#xA;              <form class=""navbar-form navbar-left"">&#xD;&#xA;                <div class=""form-group"">&#xD;&#xA;                  <input type=""text"" class=""form-control"" placeholder=""Search"">&#xD;&#xA;                </div>&#xD;&#xA;                <button type=""submit"" class=""btn btn-default"">Submit</button>&#xD;&#xA;              </form>&#xD;&#xA;              <ul class=""nav navbar-nav navbar-right"">&#xD;&#xA;                <li><a href=""#"">Link</a></li>&#xD;&#xA;                <li class=""dropdown"">&#xD;&#xA;                  <a href=""#"" class=""dropdown-toggle"" data-toggle=""dropdown"" role=""button"" aria-haspopup=""true"" aria-expanded=""false"">Dropdown <span class=""caret""></span></a>&#xD;&#xA;                  <ul class=""dropdown-menu"">&#xD;&#xA;                    <li><a href=""#"">Action</a></li>&#xD;&#xA;                    <li><a href=""#"">Another action</a></li>&#xD;&#xA;                    <li><a href=""#"">Something else here</a></li>&#xD;&#xA;                    <li role=""separator"" class=""divider""></li>&#xD;&#xA;                    <li><a href=""#"">Separated link</a></li>&#xD;&#xA;                  </ul>&#xD;&#xA;                </li>&#xD;&#xA;              </ul>&#xD;&#xA;            </div><!-- /.navbar-collapse -->&#xD;&#xA;          </div><!-- /.container-fluid -->&#xD;&#xA;        </nav>"
1998829718309734597,53,10,"        private void sendSMS(String phoneNumber, String message) {&#xD;&#xA;        String SENT = ""SMS_SENT"";&#xD;&#xA;        String DELIVERED = ""SMS_DELIVERED"";&#xD;&#xA;        PendingIntent sentPI = PendingIntent.getBroadcast(this, 0,new Intent(SENT), 0);&#xD;&#xA;        PendingIntent deliveredPI = PendingIntent.getBroadcast(this, 0, new Intent(DELIVERED), 0);&#xD;&#xA;          //---when the SMS has been sent---&#xD;&#xA;        registerReceiver(new BroadcastReceiver() {&#xD;&#xA;            @Override&#xD;&#xA;            public void onReceive(Context arg0, Intent arg1) {&#xD;&#xA;                switch (getResultCode()) {&#xD;&#xA;                    case Activity.RESULT_OK:&#xD;&#xA;                        Toast.makeText(getBaseContext(), ""SMS sent"",&#xD;&#xA;                                Toast.LENGTH_SHORT).show();&#xD;&#xA;                        break;&#xD;&#xA;                    case SmsManager.RESULT_ERROR_GENERIC_FAILURE:&#xD;&#xA;                        Toast.makeText(getBaseContext(), ""Generic failure"",&#xD;&#xA;                                Toast.LENGTH_SHORT).show();&#xD;&#xA;                        break;&#xD;&#xA;                    case SmsManager.RESULT_ERROR_NO_SERVICE:&#xD;&#xA;                        Toast.makeText(getBaseContext(), ""No service"",&#xD;&#xA;                                Toast.LENGTH_SHORT).show();&#xD;&#xA;                        break;&#xD;&#xA;                    case SmsManager.RESULT_ERROR_NULL_PDU:&#xD;&#xA;                        Toast.makeText(getBaseContext(), ""Null PDU"",&#xD;&#xA;                                Toast.LENGTH_SHORT).show();&#xD;&#xA;                        break;&#xD;&#xA;                    case SmsManager.RESULT_ERROR_RADIO_OFF:&#xD;&#xA;                        Toast.makeText(getBaseContext(), ""Radio off"",&#xD;&#xA;                                Toast.LENGTH_SHORT).show();&#xD;&#xA;                        break;&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        }, new IntentFilter(SENT));&#xD;&#xA;       //---when the SMS has been delivered---&#xD;&#xA;        registerReceiver(new BroadcastReceiver() {&#xD;&#xA;            @Override&#xD;&#xA;            public void onReceive(Context arg0, Intent arg1) {&#xD;&#xA;                switch (getResultCode()) {&#xD;&#xA;                    case Activity.RESULT_OK:&#xD;&#xA;                        Toast.makeText(getBaseContext(), ""SMS delivered"",&#xD;&#xA;                                Toast.LENGTH_SHORT).show();&#xD;&#xA;                        break;&#xD;&#xA;                    case Activity.RESULT_CANCELED:&#xD;&#xA;                        Toast.makeText(getBaseContext(), ""SMS not delivered"",&#xD;&#xA;                                Toast.LENGTH_SHORT).show();&#xD;&#xA;                        break;&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        }, new IntentFilter(DELIVERED));&#xD;&#xA;        SmsManager sms = SmsManager.getDefault();&#xD;&#xA;        sms.sendTextMessage(phoneNumber, null, message, sentPI, deliveredPI);&#xD;&#xA;    }&#xD;&#xA;     }"
-3501120275259880721,53,10,"        public class ImageAdapter extends BaseAdapter {&#xD;&#xA;        private Context mContext;&#xD;&#xA;    &#xD;&#xA;        public ImageAdapter(Context c) {&#xD;&#xA;            mContext = c;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public int getCount() {&#xD;&#xA;            return mThumbIds.length;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public Object getItem(int position) {&#xD;&#xA;            return null;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public long getItemId(int position) {&#xD;&#xA;            return 0;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // create a new ImageView for each item referenced by the Adapter&#xD;&#xA;        public View getView(int position, View convertView, ViewGroup parent) {&#xD;&#xA;            ImageView imageView;&#xD;&#xA;            if (convertView == null) {  // if it's not recycled, initialize some attributes&#xD;&#xA;                imageView = new ImageView(mContext);&#xD;&#xA;                imageView.setLayoutParams(new GridView.LayoutParams(85, 85));&#xD;&#xA;                imageView.setScaleType(ImageView.ScaleType.CENTER_CROP);&#xD;&#xA;                imageView.setPadding(8, 8, 8, 8);&#xD;&#xA;            } else {&#xD;&#xA;                imageView = (ImageView) convertView;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            imageView.setImageResource(mThumbIds[position]);&#xD;&#xA;            return imageView;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // references to our images&#xD;&#xA;        private Integer[] mThumbIds = {&#xD;&#xA;                R.drawable.sample_2, R.drawable.sample_3,&#xD;&#xA;                R.drawable.sample_4, R.drawable.sample_5,&#xD;&#xA;                R.drawable.sample_6, R.drawable.sample_7,&#xD;&#xA;                R.drawable.sample_0, R.drawable.sample_1,&#xD;&#xA;                R.drawable.sample_2, R.drawable.sample_3,&#xD;&#xA;                R.drawable.sample_4, R.drawable.sample_5,&#xD;&#xA;                R.drawable.sample_6, R.drawable.sample_7,&#xD;&#xA;                R.drawable.sample_0, R.drawable.sample_1,&#xD;&#xA;                R.drawable.sample_2, R.drawable.sample_3,&#xD;&#xA;                R.drawable.sample_4, R.drawable.sample_5,&#xD;&#xA;                R.drawable.sample_6, R.drawable.sample_7&#xD;&#xA;         };&#xD;&#xA;      }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;     "
-4335121165976004866,59,10,"	# Use the front controller as index file. It serves as a fallback solution when&#xD;&#xA;	# every other rewrite/redirect fails (e.g. in an aliased environment without&#xD;&#xA;	# mod_rewrite). Additionally, this reduces the matching process for the&#xD;&#xA;	# start page (path ""/"") because otherwise Apache will apply the rewriting rules&#xD;&#xA;	# to each configured DirectoryIndex file (e.g. index.php, index.html, index.pl).&#xD;&#xA;	DirectoryIndex app.php&#xD;&#xA;	# By default, Apache does not evaluate symbolic links if you did not enable this&#xD;&#xA;	# feature in your server configuration. Uncomment the following line if you&#xD;&#xA;	# install assets as symlinks or if you experience problems related to symlinks&#xD;&#xA;	# when compiling LESS/Sass/CoffeScript assets.&#xD;&#xA;	# Options FollowSymlinks&#xD;&#xA;	# Disabling MultiViews prevents unwanted negotiation, e.g. ""/app"" should not resolve&#xD;&#xA;	# to the front controller ""/app.php"" but be rewritten to ""/app.php/app"".&#xD;&#xA;	<IfModule mod_negotiation.c>&#xD;&#xA;		Options -MultiViews&#xD;&#xA;	</IfModule>&#xD;&#xA;	<IfModule mod_rewrite.c>&#xD;&#xA;		RewriteEngine On&#xD;&#xA;		# Determine the RewriteBase automatically and set it as environment variable.&#xD;&#xA;		# If you are using Apache aliases to do mass virtual hosting or installed the&#xD;&#xA;		# project in a subdirectory, the base path will be prepended to allow proper&#xD;&#xA;		# resolution of the app.php file and to redirect to the correct URI. It will&#xD;&#xA;		# work in environments without path prefix as well, providing a safe, one-size&#xD;&#xA;		# fits all solution. But as you do not need it in this case, you can comment&#xD;&#xA;		# the following 2 lines to eliminate the overhead.&#xD;&#xA;		RewriteCond %{REQUEST_URI}::$1 ^(/.+)/(.*)::\2$&#xD;&#xA;		RewriteRule ^(.*) - [E=BASE:%1]&#xD;&#xA;		# Sets the HTTP_AUTHORIZATION header removed by Apache&#xD;&#xA;		RewriteCond %{HTTP:Authorization} .&#xD;&#xA;		RewriteRule ^ - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]&#xD;&#xA;		# Redirect to URI without front controller to prevent duplicate content&#xD;&#xA;		# (with and without `/app.php`). Only do this redirect on the initial&#xD;&#xA;		# rewrite by Apache and not on subsequent cycles. Otherwise we would get an&#xD;&#xA;		# endless redirect loop (request -> rewrite to front controller ->&#xD;&#xA;		# redirect -> request -> ...).&#xD;&#xA;		# So in case you get a ""too many redirects"" error or you always get redirected&#xD;&#xA;		# to the start page because your Apache does not expose the REDIRECT_STATUS&#xD;&#xA;		# environment variable, you have 2 choices:&#xD;&#xA;		# - disable this feature by commenting the following 2 lines or&#xD;&#xA;		# - use Apache >= 2.3.9 and replace all L flags by END flags and remove the&#xD;&#xA;		#   following RewriteCond (best solution)&#xD;&#xA;		RewriteCond %{ENV:REDIRECT_STATUS} ^$&#xD;&#xA;		RewriteRule ^app\.php(?:/(.*)|$) %{ENV:BASE}/$1 [R=301,L]&#xD;&#xA;		# If the requested filename exists, simply serve it.&#xD;&#xA;		# We only want to let Apache serve files and not directories.&#xD;&#xA;		RewriteCond %{REQUEST_FILENAME} -f&#xD;&#xA;		RewriteRule ^ - [L]&#xD;&#xA;		# Rewrite all other queries to the front controller.&#xD;&#xA;		RewriteRule ^ %{ENV:BASE}/app.php [L]&#xD;&#xA;	</IfModule>&#xD;&#xA;	<IfModule !mod_rewrite.c>&#xD;&#xA;		<IfModule mod_alias.c>&#xD;&#xA;			# When mod_rewrite is not available, we instruct a temporary redirect of&#xD;&#xA;			# the start page to the front controller explicitly so that the website&#xD;&#xA;			# and the generated links can still be used.&#xD;&#xA;			RedirectMatch 302 ^/$ /app.php/&#xD;&#xA;			# RedirectTemp cannot be used instead&#xD;&#xA;		</IfModule>&#xD;&#xA;	</IfModule>"
6499830671807907827,61,10,"    public class CustomListAdapter extends BaseAdapter {&#xD;&#xA;	private Activity activity;&#xD;&#xA;	private LayoutInflater inflater;&#xD;&#xA;	private List<Movie> movieItems;&#xD;&#xA;	ImageLoader imageLoader = AppController.getInstance().getImageLoader();&#xD;&#xA;	&#xD;&#xA;	public CustomListAdapter(Activity activity, List<Movie> movieItems) {&#xD;&#xA;		this.activity = activity;&#xD;&#xA;		this.movieItems = movieItems;&#xD;&#xA;	}&#xD;&#xA;	@Override&#xD;&#xA;	public int getCount() {&#xD;&#xA;		return movieItems.size();&#xD;&#xA;	}&#xD;&#xA;	@Override&#xD;&#xA;	public Object getItem(int location) {&#xD;&#xA;		return movieItems.get(location);&#xD;&#xA;	}&#xD;&#xA;	@Override&#xD;&#xA;	public long getItemId(int position) {&#xD;&#xA;		return position;&#xD;&#xA;	}&#xD;&#xA;	@Override&#xD;&#xA;	public View getView(int position, View convertView, ViewGroup parent) {&#xD;&#xA;		if (inflater == null)&#xD;&#xA;			inflater = (LayoutInflater) activity&#xD;&#xA;					.getSystemService(Context.LAYOUT_INFLATER_SERVICE);&#xD;&#xA;		if (convertView == null)&#xD;&#xA;			convertView = inflater.inflate(R.layout.list_row, null);&#xD;&#xA;		if (imageLoader == null)&#xD;&#xA;			imageLoader = AppController.getInstance().getImageLoader();&#xD;&#xA;		NetworkImageView thumbNail = (NetworkImageView) convertView&#xD;&#xA;				.findViewById(R.id.thumbnail);&#xD;&#xA;		TextView title = (TextView) convertView.findViewById(R.id.title);&#xD;&#xA;		TextView rating = (TextView) convertView.findViewById(R.id.rating);&#xD;&#xA;		TextView genre = (TextView) convertView.findViewById(R.id.genre);&#xD;&#xA;		TextView year = (TextView) convertView.findViewById(R.id.releaseYear);&#xD;&#xA;		// getting movie data for the row&#xD;&#xA;		Movie m = movieItems.get(position);&#xD;&#xA;		// thumbnail image&#xD;&#xA;		thumbNail.setImageUrl(m.getThumbnailUrl(), imageLoader);&#xD;&#xA;		&#xD;&#xA;		// title&#xD;&#xA;		title.setText(m.getTitle());&#xD;&#xA;		&#xD;&#xA;		// rating&#xD;&#xA;		rating.setText(""Rating: "" + String.valueOf(m.getRating()));&#xD;&#xA;		&#xD;&#xA;		// genre&#xD;&#xA;		String genreStr = """";&#xD;&#xA;		for (String str : m.getGenre()) {&#xD;&#xA;			genreStr += str + "", "";&#xD;&#xA;		}&#xD;&#xA;		genreStr = genreStr.length() > 0 ? genreStr.substring(0,&#xD;&#xA;				genreStr.length() - 2) : genreStr;&#xD;&#xA;		genre.setText(genreStr);&#xD;&#xA;		&#xD;&#xA;		// release year&#xD;&#xA;		year.setText(String.valueOf(m.getYear()));&#xD;&#xA;		return convertView;&#xD;&#xA;	}"
-8645068503732615245,64,10,"	{&#xD;&#xA;	   ""results"" : [&#xD;&#xA;		  {&#xD;&#xA;			 ""address_components"" : [&#xD;&#xA;				{&#xD;&#xA;				   ""long_name"" : ""1600"",&#xD;&#xA;				   ""short_name"" : ""1600"",&#xD;&#xA;				   ""types"" : [ ""street_number"" ]&#xD;&#xA;				},&#xD;&#xA;				{&#xD;&#xA;				   ""long_name"" : ""Amphitheatre Pkwy"",&#xD;&#xA;				   ""short_name"" : ""Amphitheatre Pkwy"",&#xD;&#xA;				   ""types"" : [ ""route"" ]&#xD;&#xA;				},&#xD;&#xA;				{&#xD;&#xA;				   ""long_name"" : ""Mountain View"",&#xD;&#xA;				   ""short_name"" : ""Mountain View"",&#xD;&#xA;				   ""types"" : [ ""locality"", ""political"" ]&#xD;&#xA;				},&#xD;&#xA;				{&#xD;&#xA;				   ""long_name"" : ""Santa Clara County"",&#xD;&#xA;				   ""short_name"" : ""Santa Clara County"",&#xD;&#xA;				   ""types"" : [ ""administrative_area_level_2"", ""political"" ]&#xD;&#xA;				},&#xD;&#xA;				{&#xD;&#xA;				   ""long_name"" : ""California"",&#xD;&#xA;				   ""short_name"" : ""CA"",&#xD;&#xA;				   ""types"" : [ ""administrative_area_level_1"", ""political"" ]&#xD;&#xA;				},&#xD;&#xA;				{&#xD;&#xA;				   ""long_name"" : ""United States"",&#xD;&#xA;				   ""short_name"" : ""US"",&#xD;&#xA;				   ""types"" : [ ""country"", ""political"" ]&#xD;&#xA;				},&#xD;&#xA;				{&#xD;&#xA;				   ""long_name"" : ""94043"",&#xD;&#xA;				   ""short_name"" : ""94043"",&#xD;&#xA;				   ""types"" : [ ""postal_code"" ]&#xD;&#xA;				}&#xD;&#xA;			 ],&#xD;&#xA;			 ""formatted_address"" : ""1600 Amphitheatre Parkway, Mountain View, CA 94043, USA"",&#xD;&#xA;			 ""geometry"" : {&#xD;&#xA;				""location"" : {&#xD;&#xA;				   ""lat"" : 37.4224764,&#xD;&#xA;				   ""lng"" : -122.0842499&#xD;&#xA;				},&#xD;&#xA;				""location_type"" : ""ROOFTOP"",&#xD;&#xA;				""viewport"" : {&#xD;&#xA;				   ""northeast"" : {&#xD;&#xA;					  ""lat"" : 37.4238253802915,&#xD;&#xA;					  ""lng"" : -122.0829009197085&#xD;&#xA;				   },&#xD;&#xA;				   ""southwest"" : {&#xD;&#xA;					  ""lat"" : 37.4211274197085,&#xD;&#xA;					  ""lng"" : -122.0855988802915&#xD;&#xA;				   }&#xD;&#xA;				}&#xD;&#xA;			 },&#xD;&#xA;			 ""place_id"" : ""ChIJ2eUgeAK6j4ARbn5u_wAGqWA"",&#xD;&#xA;			 ""types"" : [ ""street_address"" ]&#xD;&#xA;		  }&#xD;&#xA;	   ],&#xD;&#xA;	   ""status"" : ""OK""&#xD;&#xA;	}"
2585552140256729350,69,10,"    import UIKit&#xD;&#xA;    import PushKit&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    class AppDelegate: UIResponder, UIApplicationDelegate,PKPushRegistryDelegate{&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    func application(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?) -> Bool {&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        let types: UIRemoteNotificationType = [.Alert, .Badge, .Sound]&#xD;&#xA;        application.registerForRemoteNotificationTypes(types)&#xD;&#xA;    &#xD;&#xA;    	self. PushKitRegistration()&#xD;&#xA;    &#xD;&#xA;        return true&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    //MARK: - PushKitRegistration&#xD;&#xA;    &#xD;&#xA;    func PushKitRegistration()&#xD;&#xA;    {&#xD;&#xA;    &#xD;&#xA;        let mainQueue = dispatch_get_main_queue()&#xD;&#xA;        // Create a push registry object&#xD;&#xA;        if #available(iOS 8.0, *) {&#xD;&#xA;    &#xD;&#xA;            let voipRegistry: PKPushRegistry = PKPushRegistry(queue: mainQueue)&#xD;&#xA;    &#xD;&#xA;            // Set the registry's delegate to self&#xD;&#xA;    &#xD;&#xA;            voipRegistry.delegate = self&#xD;&#xA;    &#xD;&#xA;            // Set the push type to VoIP&#xD;&#xA;    &#xD;&#xA;            voipRegistry.desiredPushTypes = [PKPushTypeVoIP]&#xD;&#xA;    &#xD;&#xA;        } else {&#xD;&#xA;            // Fallback on earlier versions&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    @available(iOS 8.0, *)&#xD;&#xA;    func pushRegistry(registry: PKPushRegistry!, didUpdatePushCredentials credentials: PKPushCredentials!, forType type: String!) {&#xD;&#xA;        // Register VoIP push token (a property of PKPushCredentials) with server&#xD;&#xA;    &#xD;&#xA;        let hexString : String = UnsafeBufferPointer<UInt8>(start: UnsafePointer(credentials.token.bytes),&#xD;&#xA;            count: credentials.token.length).map { String(format: ""%02x"", $0) }.joinWithSeparator("""")&#xD;&#xA;    &#xD;&#xA;        print(hexString)&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    @available(iOS 8.0, *)&#xD;&#xA;    func pushRegistry(registry: PKPushRegistry!, didReceiveIncomingPushWithPayload payload: PKPushPayload!, forType type: String!) {&#xD;&#xA;        // Process the received push&#xD;&#xA;        // From here you have to schedule your local notification&#xD;&#xA;    &#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    }"
-6977726020854828164,73,10,"    import java.awt.*;&#xD;&#xA;    import java.awt.event.*;&#xD;&#xA;    import java.util.*;&#xD;&#xA;    import javax.swing.*;&#xD;&#xA;    &#xD;&#xA;    public class ComboBoxTwo extends JPanel implements ActionListener&#xD;&#xA;    {&#xD;&#xA;    	private JComboBox<String> mainComboBox;&#xD;&#xA;    	private JComboBox<String> subComboBox;&#xD;&#xA;    	private Hashtable<String, String[]> subItems = new Hashtable<String, String[]>();&#xD;&#xA;    &#xD;&#xA;    	public ComboBoxTwo()&#xD;&#xA;    	{&#xD;&#xA;    		String[] items = { ""Select Item"", ""Color"", ""Shape"", ""Fruit"" };&#xD;&#xA;    		mainComboBox = new JComboBox<String>( items );&#xD;&#xA;    		mainComboBox.addActionListener( this );&#xD;&#xA;    &#xD;&#xA;    		//  prevent action events from being fired when the up/down arrow keys are used&#xD;&#xA;    		mainComboBox.putClientProperty(""JComboBox.isTableCellEditor"", Boolean.TRUE);&#xD;&#xA;    		add( mainComboBox );&#xD;&#xA;    &#xD;&#xA;    		//  Create sub combo box with multiple models&#xD;&#xA;    &#xD;&#xA;    		subComboBox = new JComboBox<String>();&#xD;&#xA;    		subComboBox.setPrototypeDisplayValue(""XXXXXXXXXX""); // JDK1.4&#xD;&#xA;    		add( subComboBox );&#xD;&#xA;    &#xD;&#xA;    		String[] subItems1 = { ""Select Color"", ""Red"", ""Blue"", ""Green"" };&#xD;&#xA;    		subItems.put(items[1], subItems1);&#xD;&#xA;    &#xD;&#xA;    		String[] subItems2 = { ""Select Shape"", ""Circle"", ""Square"", ""Triangle"" };&#xD;&#xA;    		subItems.put(items[2], subItems2);&#xD;&#xA;    &#xD;&#xA;    		String[] subItems3 = { ""Select Fruit"", ""Apple"", ""Orange"", ""Banana"" };&#xD;&#xA;    		subItems.put(items[3], subItems3);&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public void actionPerformed(ActionEvent e)&#xD;&#xA;    	{&#xD;&#xA;    		String item = (String)mainComboBox.getSelectedItem();&#xD;&#xA;    		Object o = subItems.get( item );&#xD;&#xA;    &#xD;&#xA;    		if (o == null)&#xD;&#xA;    		{&#xD;&#xA;    			subComboBox.setModel( new DefaultComboBoxModel() );&#xD;&#xA;    		}&#xD;&#xA;    		else&#xD;&#xA;    		{&#xD;&#xA;    			subComboBox.setModel( new DefaultComboBoxModel( (String[])o ) );&#xD;&#xA;    		}&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	private static void createAndShowUI()&#xD;&#xA;    	{&#xD;&#xA;    		JFrame frame = new JFrame(""SSCCE"");&#xD;&#xA;    		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;&#xA;    		frame.add( new ComboBoxTwo() );&#xD;&#xA;    		frame.setLocationByPlatform( true );&#xD;&#xA;    		frame.pack();&#xD;&#xA;    		frame.setVisible( true );&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public static void main(String[] args)&#xD;&#xA;    	{&#xD;&#xA;    		EventQueue.invokeLater(new Runnable()&#xD;&#xA;    		{&#xD;&#xA;    			public void run()&#xD;&#xA;    			{&#xD;&#xA;    				createAndShowUI();&#xD;&#xA;    			}&#xD;&#xA;    		});&#xD;&#xA;    	}&#xD;&#xA;    }"
1083084350547580752,129,10,"    public class JSONParser {&#xD;&#xA;	&#xD;&#xA;	static InputStream is = null;&#xD;&#xA;    static JSONObject jObj = null;&#xD;&#xA;    static String json = """";&#xD;&#xA; &#xD;&#xA;    // constructor&#xD;&#xA;    public JSONParser() {&#xD;&#xA; &#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    public JSONObject getJSONFromUrl(final String url) {&#xD;&#xA;        // Making HTTP request&#xD;&#xA;        try {&#xD;&#xA;            // Construct the client and the HTTP request.&#xD;&#xA;            DefaultHttpClient httpClient = new DefaultHttpClient();&#xD;&#xA;            HttpPost httpPost = new HttpPost(url);&#xD;&#xA;            // Execute the POST request and store the response locally.&#xD;&#xA;            HttpResponse httpResponse = httpClient.execute(httpPost);&#xD;&#xA;            // Extract data from the response.&#xD;&#xA;            HttpEntity httpEntity = httpResponse.getEntity();&#xD;&#xA;            // Open an inputStream with the data content.&#xD;&#xA;            is = httpEntity.getContent();&#xD;&#xA;        } catch (UnsupportedEncodingException e) {&#xD;&#xA;            e.printStackTrace();&#xD;&#xA;        } catch (ClientProtocolException e) {&#xD;&#xA;            e.printStackTrace();&#xD;&#xA;        } catch (IOException e) {&#xD;&#xA;            e.printStackTrace();&#xD;&#xA;        }&#xD;&#xA;        try {&#xD;&#xA;            // Create a BufferedReader to parse through the inputStream.&#xD;&#xA;            BufferedReader reader = new BufferedReader(new InputStreamReader(&#xD;&#xA;                    is, ""iso-8859-1""), 8);&#xD;&#xA;            // Declare a string builder to help with the parsing.&#xD;&#xA;            StringBuilder sb = new StringBuilder();&#xD;&#xA;            // Declare a string to store the JSON object data in string form.&#xD;&#xA;            String line = null;&#xD;&#xA;            &#xD;&#xA;            // Build the string until null.&#xD;&#xA;            while ((line = reader.readLine()) != null) {&#xD;&#xA;                sb.append(line + ""\n"");&#xD;&#xA;            }&#xD;&#xA;            &#xD;&#xA;            // Close the input stream.&#xD;&#xA;            is.close();&#xD;&#xA;            // Convert the string builder data to an actual string.&#xD;&#xA;            json = sb.toString();&#xD;&#xA;        } catch (Exception e) {&#xD;&#xA;            Log.e(""Buffer Error"", ""Error converting result "" + e.toString());&#xD;&#xA;        }&#xD;&#xA;        // Try to parse the string to a JSON object&#xD;&#xA;        try {&#xD;&#xA;            jObj = new JSONObject(json);&#xD;&#xA;        } catch (JSONException e) {&#xD;&#xA;            Log.e(""JSON Parser"", ""Error parsing data "" + e.toString());&#xD;&#xA;        }&#xD;&#xA;        // Return the JSON Object.&#xD;&#xA;        return jObj;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA; &#xD;&#xA;    // function get json from url&#xD;&#xA;    // by making HTTP POST or GET mehtod&#xD;&#xA;    public JSONObject makeHttpRequest(String url, String method,&#xD;&#xA;            List<NameValuePair> params) {&#xD;&#xA; &#xD;&#xA;        // Making HTTP request&#xD;&#xA;        try {&#xD;&#xA; &#xD;&#xA;            // check for request method&#xD;&#xA;            if(method == ""POST""){&#xD;&#xA;                // request method is POST&#xD;&#xA;                // defaultHttpClient&#xD;&#xA;                DefaultHttpClient httpClient = new DefaultHttpClient();&#xD;&#xA;                HttpPost httpPost = new HttpPost(url);&#xD;&#xA;                httpPost.setEntity(new UrlEncodedFormEntity(params));&#xD;&#xA; &#xD;&#xA;                HttpResponse httpResponse = httpClient.execute(httpPost);&#xD;&#xA;                HttpEntity httpEntity = httpResponse.getEntity();&#xD;&#xA;                is = httpEntity.getContent();&#xD;&#xA; &#xD;&#xA;            }else if(method == ""GET""){&#xD;&#xA;                // request method is GET&#xD;&#xA;                DefaultHttpClient httpClient = new DefaultHttpClient();&#xD;&#xA;                String paramString = URLEncodedUtils.format(params, ""utf-8"");&#xD;&#xA;                url += ""?"" + paramString;&#xD;&#xA;                HttpGet httpGet = new HttpGet(url);&#xD;&#xA; &#xD;&#xA;                HttpResponse httpResponse = httpClient.execute(httpGet);&#xD;&#xA;                HttpEntity httpEntity = httpResponse.getEntity();&#xD;&#xA;                is = httpEntity.getContent();&#xD;&#xA;            }           &#xD;&#xA; &#xD;&#xA;        } catch (UnsupportedEncodingException e) {&#xD;&#xA;            e.printStackTrace();&#xD;&#xA;        } catch (ClientProtocolException e) {&#xD;&#xA;            e.printStackTrace();&#xD;&#xA;        } catch (IOException e) {&#xD;&#xA;            e.printStackTrace();&#xD;&#xA;        }&#xD;&#xA; &#xD;&#xA;        try {&#xD;&#xA;            BufferedReader reader = new BufferedReader(new InputStreamReader(&#xD;&#xA;                    is, ""iso-8859-1""), 8);&#xD;&#xA;            StringBuilder sb = new StringBuilder();&#xD;&#xA;            String line = null;&#xD;&#xA;            while ((line = reader.readLine()) != null) {&#xD;&#xA;                sb.append(line + ""\n"");&#xD;&#xA;            }&#xD;&#xA;            is.close();&#xD;&#xA;            json = sb.toString();&#xD;&#xA;        } catch (Exception e) {&#xD;&#xA;            Log.e(""Buffer Error"", ""Error converting result "" + e.toString());&#xD;&#xA;        }&#xD;&#xA; &#xD;&#xA;        // try parse the string to a JSON object&#xD;&#xA;        try {&#xD;&#xA;            jObj = new JSONObject(json);&#xD;&#xA;        } catch (JSONException e) {&#xD;&#xA;            Log.e(""JSON Parser"", ""Error parsing data "" + e.toString());&#xD;&#xA;        }&#xD;&#xA; &#xD;&#xA;        // return JSON String&#xD;&#xA;        return jObj;&#xD;&#xA; &#xD;&#xA;    }&#xD;&#xA;    }`"
-7207832608141402872,175,10,"    package persistence;&#xD;&#xA;    &#xD;&#xA;    import java.sql.*;&#xD;&#xA;    import java.util.*;&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * util.DatabaseUtils&#xD;&#xA;     * User: Michael&#xD;&#xA;     * Date: Aug 17, 2010&#xD;&#xA;     * Time: 7:58:02 PM&#xD;&#xA;     */&#xD;&#xA;    public class DatabaseUtils {&#xD;&#xA;        private static final String DEFAULT_DRIVER = ""oracle.jdbc.driver.OracleDriver"";&#xD;&#xA;        private static final String DEFAULT_URL = ""jdbc:oracle:thin:@host:1521:database"";&#xD;&#xA;        private static final String DEFAULT_USERNAME = ""username"";&#xD;&#xA;        private static final String DEFAULT_PASSWORD = ""password"";&#xD;&#xA;    /*&#xD;&#xA;        private static final String DEFAULT_DRIVER = ""org.postgresql.Driver"";&#xD;&#xA;        private static final String DEFAULT_URL = ""jdbc:postgresql://localhost:5432/party"";&#xD;&#xA;        private static final String DEFAULT_USERNAME = ""pgsuper"";&#xD;&#xA;        private static final String DEFAULT_PASSWORD = ""pgsuper"";&#xD;&#xA;    */&#xD;&#xA;    /*&#xD;&#xA;        private static final String DEFAULT_DRIVER = ""com.mysql.jdbc.Driver"";&#xD;&#xA;        private static final String DEFAULT_URL = ""jdbc:mysql://localhost:3306/party"";&#xD;&#xA;        private static final String DEFAULT_USERNAME = ""party"";&#xD;&#xA;        private static final String DEFAULT_PASSWORD = ""party"";&#xD;&#xA;    */&#xD;&#xA;    &#xD;&#xA;        public static void main(String[] args) {&#xD;&#xA;            long begTime = System.currentTimeMillis();&#xD;&#xA;    &#xD;&#xA;            String driver = ((args.length > 0) ? args[0] : DEFAULT_DRIVER);&#xD;&#xA;            String url = ((args.length > 1) ? args[1] : DEFAULT_URL);&#xD;&#xA;            String username = ((args.length > 2) ? args[2] : DEFAULT_USERNAME);&#xD;&#xA;            String password = ((args.length > 3) ? args[3] : DEFAULT_PASSWORD);&#xD;&#xA;    &#xD;&#xA;            Connection connection = null;&#xD;&#xA;    &#xD;&#xA;            try {&#xD;&#xA;                connection = createConnection(driver, url, username, password);&#xD;&#xA;                DatabaseMetaData meta = connection.getMetaData();&#xD;&#xA;                System.out.println(meta.getDatabaseProductName());&#xD;&#xA;                System.out.println(meta.getDatabaseProductVersion());&#xD;&#xA;    &#xD;&#xA;                String sqlQuery = ""SELECT PERSON_ID, FIRST_NAME, LAST_NAME FROM PERSON ORDER BY LAST_NAME"";&#xD;&#xA;                System.out.println(""before insert: "" + query(connection, sqlQuery, Collections.EMPTY_LIST));&#xD;&#xA;    &#xD;&#xA;                connection.setAutoCommit(false);&#xD;&#xA;                String sqlUpdate = ""INSERT INTO PERSON(FIRST_NAME, LAST_NAME) VALUES(?,?)"";&#xD;&#xA;                List parameters = Arrays.asList(""Foo"", ""Bar"");&#xD;&#xA;                int numRowsUpdated = update(connection, sqlUpdate, parameters);&#xD;&#xA;                connection.commit();&#xD;&#xA;    &#xD;&#xA;                System.out.println(""# rows inserted: "" + numRowsUpdated);&#xD;&#xA;                System.out.println(""after insert: "" + query(connection, sqlQuery, Collections.EMPTY_LIST));&#xD;&#xA;            } catch (Exception e) {&#xD;&#xA;                rollback(connection);&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            } finally {&#xD;&#xA;                close(connection);&#xD;&#xA;                long endTime = System.currentTimeMillis();&#xD;&#xA;                System.out.println(""wall time: "" + (endTime - begTime) + "" ms"");&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public static Connection createConnection(String driver, String url, String username, String password) throws ClassNotFoundException, SQLException {&#xD;&#xA;            Class.forName(driver);&#xD;&#xA;            if ((username == null) || (password == null) || (username.trim().length() == 0) || (password.trim().length() == 0)) {&#xD;&#xA;                return DriverManager.getConnection(url);&#xD;&#xA;            } else {&#xD;&#xA;                return DriverManager.getConnection(url, username, password);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public static void close(Connection connection) {&#xD;&#xA;            try {&#xD;&#xA;                if (connection != null) {&#xD;&#xA;                    connection.close();&#xD;&#xA;                }&#xD;&#xA;            } catch (SQLException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        public static void close(Statement st) {&#xD;&#xA;            try {&#xD;&#xA;                if (st != null) {&#xD;&#xA;                    st.close();&#xD;&#xA;                }&#xD;&#xA;            } catch (SQLException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public static void close(ResultSet rs) {&#xD;&#xA;            try {&#xD;&#xA;                if (rs != null) {&#xD;&#xA;                    rs.close();&#xD;&#xA;                }&#xD;&#xA;            } catch (SQLException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public static void rollback(Connection connection) {&#xD;&#xA;            try {&#xD;&#xA;                if (connection != null) {&#xD;&#xA;                    connection.rollback();&#xD;&#xA;                }&#xD;&#xA;            } catch (SQLException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public static List<Map<String, Object>> map(ResultSet rs) throws SQLException {&#xD;&#xA;            List<Map<String, Object>> results = new ArrayList<Map<String, Object>>();&#xD;&#xA;            try {&#xD;&#xA;                if (rs != null) {&#xD;&#xA;                    ResultSetMetaData meta = rs.getMetaData();&#xD;&#xA;                    int numColumns = meta.getColumnCount();&#xD;&#xA;                    while (rs.next()) {&#xD;&#xA;                        Map<String, Object> row = new HashMap<String, Object>();&#xD;&#xA;                        for (int i = 1; i <= numColumns; ++i) {&#xD;&#xA;                            String name = meta.getColumnName(i);&#xD;&#xA;                            Object value = rs.getObject(i);&#xD;&#xA;                            row.put(name, value);&#xD;&#xA;                        }&#xD;&#xA;                        results.add(row);&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;            } finally {&#xD;&#xA;                close(rs);&#xD;&#xA;            }&#xD;&#xA;            return results;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public static List<Map<String, Object>> query(Connection connection, String sql, List<Object> parameters) throws SQLException {&#xD;&#xA;            List<Map<String, Object>> results = null;&#xD;&#xA;            PreparedStatement ps = null;&#xD;&#xA;            ResultSet rs = null;&#xD;&#xA;            try {&#xD;&#xA;                ps = connection.prepareStatement(sql);&#xD;&#xA;    &#xD;&#xA;                int i = 0;&#xD;&#xA;                for (Object parameter : parameters) {&#xD;&#xA;                    ps.setObject(++i, parameter);&#xD;&#xA;                }&#xD;&#xA;                rs = ps.executeQuery();&#xD;&#xA;                results = map(rs);&#xD;&#xA;            } finally {&#xD;&#xA;                close(rs);&#xD;&#xA;                close(ps);&#xD;&#xA;            }&#xD;&#xA;            return results;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public static int update(Connection connection, String sql, List<Object> parameters) throws SQLException {&#xD;&#xA;            int numRowsUpdated = 0;&#xD;&#xA;            PreparedStatement ps = null;&#xD;&#xA;            try {&#xD;&#xA;                ps = connection.prepareStatement(sql);&#xD;&#xA;    &#xD;&#xA;                int i = 0;&#xD;&#xA;                for (Object parameter : parameters) {&#xD;&#xA;                    ps.setObject(++i, parameter);&#xD;&#xA;                }&#xD;&#xA;                numRowsUpdated = ps.executeUpdate();&#xD;&#xA;            } finally {&#xD;&#xA;                close(ps);&#xD;&#xA;            }&#xD;&#xA;            return numRowsUpdated;&#xD;&#xA;        }&#xD;&#xA;    }"
7155160577801308826,199,10,"    Sub Copy_To_Workbooks()&#xD;&#xA;    'Note: This macro use the function LastRow&#xD;&#xA;        Dim My_Range As Range&#xD;&#xA;        Dim FieldNum As Long&#xD;&#xA;        Dim FileExtStr As String&#xD;&#xA;        Dim FileFormatNum As Long&#xD;&#xA;        Dim CalcMode As Long&#xD;&#xA;        Dim ViewMode As Long&#xD;&#xA;        Dim ws2 As Worksheet&#xD;&#xA;        Dim MyPath As String&#xD;&#xA;        Dim foldername As String&#xD;&#xA;        Dim Lrow As Long&#xD;&#xA;        Dim cell As Range&#xD;&#xA;        Dim CCount As Long&#xD;&#xA;        Dim WSNew As Worksheet&#xD;&#xA;        Dim ErrNum As Long&#xD;&#xA;    &#xD;&#xA;        'Set filter range on ActiveSheet: A1 is the top left cell of your filter range&#xD;&#xA;        'and the header of the first column, D is the last column in the filter range.&#xD;&#xA;        'You can also add the sheet name to the code like this :&#xD;&#xA;        'Worksheets(""Sheet1"").Range(""A1:D"" & LastRow(Worksheets(""Sheet1"")))&#xD;&#xA;        'No need that the sheet is active then when you run the macro when you use this.&#xD;&#xA;        Set My_Range = Range(""A1:D"" & LastRow(ActiveSheet))&#xD;&#xA;        My_Range.Parent.Select&#xD;&#xA;    &#xD;&#xA;        If ActiveWorkbook.ProtectStructure = True Or _&#xD;&#xA;           My_Range.Parent.ProtectContents = True Then&#xD;&#xA;            MsgBox ""Sorry, not working when the workbook or worksheet is protected"", _&#xD;&#xA;                   vbOKOnly, ""Copy to new workbook""&#xD;&#xA;            Exit Sub&#xD;&#xA;        End If&#xD;&#xA;    &#xD;&#xA;        'This example filters on the first column in the range(change the field if needed)&#xD;&#xA;        'In this case the range starts in A so Field:=1 is column A, 2 = column B, ......&#xD;&#xA;        FieldNum = 1&#xD;&#xA;    &#xD;&#xA;        'Turn off AutoFilter&#xD;&#xA;        My_Range.Parent.AutoFilterMode = False&#xD;&#xA;    &#xD;&#xA;        'Set the file extension/format&#xD;&#xA;        If Val(Application.Version) < 12 Then&#xD;&#xA;            'You use Excel 97-2003&#xD;&#xA;            FileExtStr = "".xls"": FileFormatNum = -4143&#xD;&#xA;        Else&#xD;&#xA;            'You use Excel 2007-2013&#xD;&#xA;            If ActiveWorkbook.FileFormat = 56 Then&#xD;&#xA;                FileExtStr = "".xls"": FileFormatNum = 56&#xD;&#xA;            Else&#xD;&#xA;                FileExtStr = "".xlsx"": FileFormatNum = 51&#xD;&#xA;            End If&#xD;&#xA;        End If&#xD;&#xA;    &#xD;&#xA;        'Change ScreenUpdating, Calculation, EnableEvents, ....&#xD;&#xA;        With Application&#xD;&#xA;            CalcMode = .Calculation&#xD;&#xA;            .Calculation = xlCalculationManual&#xD;&#xA;            .ScreenUpdating = False&#xD;&#xA;            .EnableEvents = False&#xD;&#xA;        End With&#xD;&#xA;        ViewMode = ActiveWindow.View&#xD;&#xA;        ActiveWindow.View = xlNormalView&#xD;&#xA;        ActiveSheet.DisplayPageBreaks = False&#xD;&#xA;    &#xD;&#xA;        'Delete the sheet RDBLogSheet if it exists&#xD;&#xA;        On Error Resume Next&#xD;&#xA;        Application.DisplayAlerts = False&#xD;&#xA;        Sheets(""RDBLogSheet"").Delete&#xD;&#xA;        Application.DisplayAlerts = True&#xD;&#xA;        On Error GoTo 0&#xD;&#xA;    &#xD;&#xA;        ' Add worksheet to copy/Paste the unique list&#xD;&#xA;        Set ws2 = Worksheets.Add(After:=Sheets(Sheets.Count))&#xD;&#xA;        ws2.Name = ""RDBLogSheet""&#xD;&#xA;    &#xD;&#xA;        'Fill in the path\folder where you want the new folder with the files&#xD;&#xA;        'you can use also this ""C:\Users\Ron\test""&#xD;&#xA;        MyPath = Application.DefaultFilePath&#xD;&#xA;    &#xD;&#xA;        'Add a slash at the end if the user forget it&#xD;&#xA;        If Right(MyPath, 1) <> ""\"" Then&#xD;&#xA;            MyPath = MyPath & ""\""&#xD;&#xA;        End If&#xD;&#xA;    &#xD;&#xA;        'Create folder for the new files&#xD;&#xA;        foldername = MyPath & Format(Now, ""yyyy-mm-dd hh-mm-ss"") & ""\""&#xD;&#xA;        MkDir foldername&#xD;&#xA;    &#xD;&#xA;        With ws2&#xD;&#xA;            'first we copy the Unique data from the filter field to ws2&#xD;&#xA;            My_Range.Columns(FieldNum).AdvancedFilter _&#xD;&#xA;                    Action:=xlFilterCopy, _&#xD;&#xA;                    CopyToRange:=.Range(""A3""), Unique:=True&#xD;&#xA;    &#xD;&#xA;            'loop through the unique list in ws2 and filter/copy to a new sheet&#xD;&#xA;            Lrow = .Cells(Rows.Count, ""A"").End(xlUp).Row&#xD;&#xA;            For Each cell In .Range(""A4:A"" & Lrow)&#xD;&#xA;    &#xD;&#xA;                'Filter the range&#xD;&#xA;                My_Range.AutoFilter Field:=FieldNum, Criteria1:=""="" & _&#xD;&#xA;                 Replace(Replace(Replace(cell.Value, ""~"", ""~~""), ""*"", ""~*""), ""?"", ""~?"")&#xD;&#xA;    &#xD;&#xA;                'Check if there are no more then 8192 areas(limit of areas)&#xD;&#xA;                CCount = 0&#xD;&#xA;                On Error Resume Next&#xD;&#xA;                CCount = My_Range.Columns(1).SpecialCells(xlCellTypeVisible) _&#xD;&#xA;                         .Areas(1).Cells.Count&#xD;&#xA;                On Error GoTo 0&#xD;&#xA;                If CCount = 0 Then&#xD;&#xA;                    MsgBox ""There are more than 8192 areas for the value : "" & cell.Value _&#xD;&#xA;                         & vbNewLine & ""It is not possible to copy the visible data."" _&#xD;&#xA;                         & vbNewLine & ""Tip: Sort your data before you use this macro."", _&#xD;&#xA;                           vbOKOnly, ""Split in worksheets""&#xD;&#xA;                Else&#xD;&#xA;                    'Add new workbook with one sheet&#xD;&#xA;                    Set WSNew = Workbooks.Add(xlWBATWorksheet).Worksheets(1)&#xD;&#xA;    &#xD;&#xA;                    'Copy/paste the visible data to the new workbook&#xD;&#xA;                    My_Range.SpecialCells(xlCellTypeVisible).Copy&#xD;&#xA;                    With WSNew.Range(""A1"")&#xD;&#xA;                        ' Paste:=8 will copy the columnwidth in Excel 2000 and higher&#xD;&#xA;                        ' Remove this line if you use Excel 97&#xD;&#xA;                        .PasteSpecial Paste:=8&#xD;&#xA;                        .PasteSpecial xlPasteValues&#xD;&#xA;                        .PasteSpecial xlPasteFormats&#xD;&#xA;                        Application.CutCopyMode = False&#xD;&#xA;                        .Select&#xD;&#xA;                    End With&#xD;&#xA;    &#xD;&#xA;                    'Save the file in the new folder and close it&#xD;&#xA;                    On Error Resume Next&#xD;&#xA;                    WSNew.Parent.SaveAs foldername & _&#xD;&#xA;                                        cell.Value & FileExtStr, FileFormatNum&#xD;&#xA;                    If Err.Number > 0 Then&#xD;&#xA;                        Err.Clear&#xD;&#xA;                        ErrNum = ErrNum + 1&#xD;&#xA;    &#xD;&#xA;                        WSNew.Parent.SaveAs foldername & _&#xD;&#xA;                         ""Error_"" & Format(ErrNum, ""0000"") & FileExtStr, FileFormatNum&#xD;&#xA;    &#xD;&#xA;                        .Cells(cell.Row, ""B"").Formula = ""=Hyperlink("""""" & foldername & _&#xD;&#xA;                          ""Error_"" & Format(ErrNum, ""0000"") & FileExtStr & """""")""&#xD;&#xA;    &#xD;&#xA;                        .Cells(cell.Row, ""A"").Interior.Color = vbRed&#xD;&#xA;                    Else&#xD;&#xA;                        .Cells(cell.Row, ""B"").Formula = _&#xD;&#xA;                        ""=Hyperlink("""""" & foldername & cell.Value & FileExtStr & """""")""&#xD;&#xA;                    End If&#xD;&#xA;    &#xD;&#xA;                    WSNew.Parent.Close False&#xD;&#xA;                    On Error GoTo 0&#xD;&#xA;                End If&#xD;&#xA;    &#xD;&#xA;                'Show all the data in the range&#xD;&#xA;                My_Range.AutoFilter Field:=FieldNum&#xD;&#xA;    &#xD;&#xA;            Next cell&#xD;&#xA;            .Cells(1, ""A"").Value = ""Red cell: can't use the Unique name as file name""&#xD;&#xA;            .Cells(1, ""B"").Value = ""Created Files (Click on the link to open a file)""&#xD;&#xA;            .Cells(3, ""A"").Value = ""Unique Values""&#xD;&#xA;            .Cells(3, ""B"").Value = ""Full Path and File name""&#xD;&#xA;            .Cells(3, ""A"").Font.Bold = True&#xD;&#xA;            .Cells(3, ""B"").Font.Bold = True&#xD;&#xA;            .Columns(""A:B"").AutoFit&#xD;&#xA;    &#xD;&#xA;        End With&#xD;&#xA;    &#xD;&#xA;        'Turn off AutoFilter&#xD;&#xA;        My_Range.Parent.AutoFilterMode = False&#xD;&#xA;    &#xD;&#xA;        If ErrNum > 0 Then&#xD;&#xA;            MsgBox ""Rename every WorkSheet name that start with """"Error_"""" manually"" _&#xD;&#xA;                 & vbNewLine & ""There are characters in the name that are not allowed"" _&#xD;&#xA;                 & vbNewLine & ""in a sheet name or the worksheet already exist.""&#xD;&#xA;        End If&#xD;&#xA;    &#xD;&#xA;        'Restore ScreenUpdating, Calculation, EnableEvents, ....&#xD;&#xA;        My_Range.Parent.Select&#xD;&#xA;        ActiveWindow.View = ViewMode&#xD;&#xA;        ws2.Select&#xD;&#xA;        With Application&#xD;&#xA;            .ScreenUpdating = True&#xD;&#xA;            .EnableEvents = True&#xD;&#xA;            .Calculation = CalcMode&#xD;&#xA;        End With&#xD;&#xA;    &#xD;&#xA;    End Sub&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    Function LastRow(sh As Worksheet)&#xD;&#xA;        On Error Resume Next&#xD;&#xA;        LastRow = sh.Cells.Find(What:=""*"", _&#xD;&#xA;                                After:=sh.Range(""A1""), _&#xD;&#xA;                                Lookat:=xlPart, _&#xD;&#xA;                                LookIn:=xlValues, _&#xD;&#xA;                                SearchOrder:=xlByRows, _&#xD;&#xA;                                SearchDirection:=xlPrevious, _&#xD;&#xA;                                MatchCase:=False).Row&#xD;&#xA;        On Error GoTo 0&#xD;&#xA;    End Function"
1076385828913957821,208,10,"    <string-array name=""CountryCodes"" >&#xD;&#xA;            <item>+93,AF</item>&#xD;&#xA;            <item>+355,AL</item>&#xD;&#xA;            <item>+213,DZ</item>&#xD;&#xA;            <item>+376,AD</item>&#xD;&#xA;            <item>+244,AO</item>&#xD;&#xA;            <item>+672,AQ</item>&#xD;&#xA;            <item>+54,AR</item>&#xD;&#xA;            <item>+374,AM</item>&#xD;&#xA;            <item>+297,AW</item>&#xD;&#xA;            <item>+61,AU</item>&#xD;&#xA;            <item>+43,AT</item>&#xD;&#xA;            <item>+994,AZ</item>&#xD;&#xA;            <item>+973,BH</item>&#xD;&#xA;            <item>+880,BD</item>&#xD;&#xA;            <item>+375,BY</item>&#xD;&#xA;            <item>+32,BE</item>&#xD;&#xA;            <item>+501,BZ</item>&#xD;&#xA;            <item>+229,BJ</item>&#xD;&#xA;            <item>+975,BT</item>&#xD;&#xA;            <item>+591,BO</item>&#xD;&#xA;            <item>+387,BA</item>&#xD;&#xA;            <item>+267,BW</item>&#xD;&#xA;            <item>+55,BR</item>&#xD;&#xA;            <item>+673,BN</item>&#xD;&#xA;            <item>+359,BG</item>&#xD;&#xA;            <item>+226,BF</item>&#xD;&#xA;            <item>+95,MM</item>&#xD;&#xA;            <item>+257,BI</item>&#xD;&#xA;            <item>+855,KH</item>&#xD;&#xA;            <item>+237,CM</item>&#xD;&#xA;            <item>+1,CA</item>&#xD;&#xA;            <item>+238,CV</item>&#xD;&#xA;            <item>+236,CF</item>&#xD;&#xA;            <item>+235,TD</item>&#xD;&#xA;            <item>+56,CL</item>&#xD;&#xA;            <item>+86,CN</item>&#xD;&#xA;            <item>+61,CX</item>&#xD;&#xA;            <item>+61,CC</item>&#xD;&#xA;            <item>+57,CO</item>&#xD;&#xA;            <item>+269,KM</item>&#xD;&#xA;            <item>+242,CG</item>&#xD;&#xA;            <item>+243,CD</item>&#xD;&#xA;            <item>+682,CK</item>&#xD;&#xA;            <item>+506,CR</item>&#xD;&#xA;            <item>+385,HR</item>&#xD;&#xA;            <item>+53,CU</item>&#xD;&#xA;            <item>+357,CY</item>&#xD;&#xA;            <item>+420,CZ</item>&#xD;&#xA;            <item>+45,DK</item>&#xD;&#xA;            <item>+253,DJ</item>&#xD;&#xA;            <item>+670,TL</item>&#xD;&#xA;            <item>+593,EC</item>&#xD;&#xA;            <item>+20,EG</item>&#xD;&#xA;            <item>+503,SV</item>&#xD;&#xA;            <item>+240,GQ</item>&#xD;&#xA;            <item>+291,ER</item>&#xD;&#xA;            <item>+372,EE</item>&#xD;&#xA;            <item>+251,ET</item>&#xD;&#xA;            <item>+500,FK</item>&#xD;&#xA;            <item>+298,FO</item>&#xD;&#xA;            <item>+679,FJ</item>&#xD;&#xA;            <item>+358,FI</item>&#xD;&#xA;            <item>+33,FR</item>&#xD;&#xA;            <item>+689,PF</item>&#xD;&#xA;            <item>+241,GA</item>&#xD;&#xA;            <item>+220,GM</item>&#xD;&#xA;            <item>+995,GE</item>&#xD;&#xA;            <item>+49,DE</item>&#xD;&#xA;            <item>+233,GH</item>&#xD;&#xA;            <item>+350,GI</item>&#xD;&#xA;            <item>+30,GR</item>&#xD;&#xA;            <item>+299,GL</item>&#xD;&#xA;            <item>+502,GT</item>&#xD;&#xA;            <item>+224,GN</item>&#xD;&#xA;            <item>+245,GW</item>&#xD;&#xA;            <item>+592,GY</item>&#xD;&#xA;            <item>+509,HT</item>&#xD;&#xA;            <item>+504,HN</item>&#xD;&#xA;            <item>+852,HK</item>&#xD;&#xA;            <item>+36,HU</item>&#xD;&#xA;            <item>+91,IN</item>&#xD;&#xA;            <item>+62,ID</item>&#xD;&#xA;            <item>+98,IR</item>&#xD;&#xA;            <item>+964,IQ</item>&#xD;&#xA;            <item>+353,IE</item>&#xD;&#xA;            <item>+44,IM</item>&#xD;&#xA;            <item>+972,IL</item>&#xD;&#xA;            <item>+39,IT</item>&#xD;&#xA;            <item>+225,CI</item>&#xD;&#xA;            <item>+81,JP</item>&#xD;&#xA;            <item>+962,JO</item>&#xD;&#xA;            <item>+7,KZ</item>&#xD;&#xA;            <item>+254,KE</item>&#xD;&#xA;            <item>+686,KI</item>&#xD;&#xA;            <item>+965,KW</item>&#xD;&#xA;            <item>+996,KG</item>&#xD;&#xA;            <item>+856,LA</item>&#xD;&#xA;            <item>+371,LV</item>&#xD;&#xA;            <item>+961,LB</item>&#xD;&#xA;            <item>+266,LS</item>&#xD;&#xA;            <item>+231,LR</item>&#xD;&#xA;            <item>+218,LY</item>&#xD;&#xA;            <item>+423,LI</item>&#xD;&#xA;            <item>+370,LT</item>&#xD;&#xA;            <item>+352,LU</item>&#xD;&#xA;            <item>+853,MO</item>&#xD;&#xA;            <item>+389,MK</item>&#xD;&#xA;            <item>+261,MG</item>&#xD;&#xA;            <item>+265,MW</item>&#xD;&#xA;            <item>+60,MY</item>&#xD;&#xA;            <item>+960,MV</item>&#xD;&#xA;            <item>+223,ML</item>&#xD;&#xA;            <item>+356,MT</item>&#xD;&#xA;            <item>+692,MH</item>&#xD;&#xA;            <item>+222,MR</item>&#xD;&#xA;            <item>+230,MU</item>&#xD;&#xA;            <item>+262,YT</item>&#xD;&#xA;            <item>+52,MX</item>&#xD;&#xA;            <item>+691,FM</item>&#xD;&#xA;            <item>+373,MD</item>&#xD;&#xA;            <item>+377,MC</item>&#xD;&#xA;            <item>+976,MN</item>&#xD;&#xA;            <item>+382,ME</item>&#xD;&#xA;            <item>+212,MA</item>&#xD;&#xA;            <item>+258,MZ</item>&#xD;&#xA;            <item>+264,NA</item>&#xD;&#xA;            <item>+674,NR</item>&#xD;&#xA;            <item>+977,NP</item>&#xD;&#xA;            <item>+31,NL</item>&#xD;&#xA;            <item>+599,AN</item>&#xD;&#xA;            <item>+687,NC</item>&#xD;&#xA;            <item>+64,NZ</item>&#xD;&#xA;            <item>+505,NI</item>&#xD;&#xA;            <item>+227,NE</item>&#xD;&#xA;            <item>+234,NG</item>&#xD;&#xA;            <item>+683,NU</item>&#xD;&#xA;            <item>+850,KP</item>&#xD;&#xA;            <item>+47,NO</item>&#xD;&#xA;            <item>+968,OM</item>&#xD;&#xA;            <item>+92,PK</item>&#xD;&#xA;            <item>+680,PW</item>&#xD;&#xA;            <item>+507,PA</item>&#xD;&#xA;            <item>+675,PG</item>&#xD;&#xA;            <item>+595,PY</item>&#xD;&#xA;            <item>+51,PE</item>&#xD;&#xA;            <item>+63,PH</item>&#xD;&#xA;            <item>+870,PN</item>&#xD;&#xA;            <item>+48,PL</item>&#xD;&#xA;            <item>+351,PT</item>&#xD;&#xA;            <item>+1,PR</item>&#xD;&#xA;            <item>+974,QA</item>&#xD;&#xA;            <item>+40,RO</item>&#xD;&#xA;            <item>+7,RU</item>&#xD;&#xA;            <item>+250,RW</item>&#xD;&#xA;            <item>+590,BL</item>&#xD;&#xA;            <item>+685,WS</item>&#xD;&#xA;            <item>+378,SM</item>&#xD;&#xA;            <item>+239,ST</item>&#xD;&#xA;            <item>+966,SA</item>&#xD;&#xA;            <item>+221,SN</item>&#xD;&#xA;            <item>+381,RS</item>&#xD;&#xA;            <item>+248,SC</item>&#xD;&#xA;            <item>+232,SL</item>&#xD;&#xA;            <item>+65,SG</item>&#xD;&#xA;            <item>+421,SK</item>&#xD;&#xA;            <item>+386,SI</item>&#xD;&#xA;            <item>+677,SB</item>&#xD;&#xA;            <item>+252,SO</item>&#xD;&#xA;            <item>+27,ZA</item>&#xD;&#xA;            <item>+82,KR</item>&#xD;&#xA;            <item>+34,ES</item>&#xD;&#xA;            <item>+94,LK</item>&#xD;&#xA;            <item>+290,SH</item>&#xD;&#xA;            <item>+508,PM</item>&#xD;&#xA;            <item>+249,SD</item>&#xD;&#xA;            <item>+597,SR</item>&#xD;&#xA;            <item>+268,SZ</item>&#xD;&#xA;            <item>+46,SE</item>&#xD;&#xA;            <item>+41,CH</item>&#xD;&#xA;            <item>+963,SY</item>&#xD;&#xA;            <item>+886,TW</item>&#xD;&#xA;            <item>+992,TJ</item>&#xD;&#xA;            <item>+255,TZ</item>&#xD;&#xA;            <item>+66,TH</item>&#xD;&#xA;            <item>+228,TG</item>&#xD;&#xA;            <item>+690,TK</item>&#xD;&#xA;            <item>+676,TO</item>&#xD;&#xA;            <item>+216,TN</item>&#xD;&#xA;            <item>+90,TR</item>&#xD;&#xA;            <item>+993,TM</item>&#xD;&#xA;            <item>+688,TV</item>&#xD;&#xA;            <item>+971,AE</item>&#xD;&#xA;            <item>+256,UG</item>&#xD;&#xA;            <item>+44,GB</item>&#xD;&#xA;            <item>+380,UA</item>&#xD;&#xA;            <item>+598,UY</item>&#xD;&#xA;            <item>+1,US</item>&#xD;&#xA;            <item>+998,UZ</item>&#xD;&#xA;            <item>+678,VU</item>&#xD;&#xA;            <item>+39,VA</item>&#xD;&#xA;            <item>+58,VE</item>&#xD;&#xA;            <item>+84,VN</item>&#xD;&#xA;            <item>+681,WF</item>&#xD;&#xA;            <item>+967,YE</item>&#xD;&#xA;            <item>+260,ZM</item>&#xD;&#xA;            <item>+263,ZW</item>&#xD;&#xA;        </string-array>"
-8006589610062984786,26,11,    xlarge screens are at least 960dp x 720dp&#xD;&#xA;    large screens are at least 640dp x 480dp&#xD;&#xA;    normal screens are at least 470dp x 320dp&#xD;&#xA;    small screens are at least 426dp x 320dp&#xD;&#xA;    Generalised Dpi values for screens:&#xD;&#xA;    &#xD;&#xA;    ldpi Resources for low-density (ldpi) screens (~120dpi)&#xD;&#xA;    mdpi Resources for medium-density (mdpi) screens (~160dpi). (This is the baseline     density.)&#xD;&#xA;    hdpi Resources for high-density (hdpi) screens (~240dpi).&#xD;&#xA;    xhdpi Resources for extra high-density (xhdpi) screens (~320dpi).&#xD;&#xA;    Therefore generalised size of your resources (assuming they are full screen):&#xD;&#xA;    &#xD;&#xA;    ldpi&#xD;&#xA;    Vertical = 426 * 120 / 160 = 319.5px&#xD;&#xA;    Horizontal = 320 * 120 / 160 = 240px&#xD;&#xA;    mdpi&#xD;&#xA;    Vertical = 470 * 160 / 160 = 470px&#xD;&#xA;    Horizontal = 320 * 160 / 160 = 320px&#xD;&#xA;    hdpi&#xD;&#xA;    Vertical = 640 * 240 / 160 = 960px&#xD;&#xA;    Horizontal = 480 * 240 / 160 = 720px&#xD;&#xA;    xhdpi&#xD;&#xA;    Vertical = 960 * 320 / 160 = 1920px&#xD;&#xA;    Horizontal = 720 * 320 / 160 = 1440px&#xD;&#xA;    &#xD;&#xA;    px = dp*dpi/160
-6697584344281190150,26,11,"            <?xml version=""1.0"" encoding=""UTF-8""?>&#xD;&#xA;        <web-app version=""3.0"" xmlns=""http://java.sun.com/xml/ns/javaee"" &#xD;&#xA;                 xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" &#xD;&#xA;                 xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"">&#xD;&#xA;            <context-param>&#xD;&#xA;                <param-name>javax.faces.PROJECT_STAGE</param-name>&#xD;&#xA;                <param-value>Development</param-value>&#xD;&#xA;            </context-param>&#xD;&#xA;            <servlet>&#xD;&#xA;                <servlet-name>Faces Servlet</servlet-name>&#xD;&#xA;                <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>&#xD;&#xA;                <load-on-startup>1</load-on-startup>&#xD;&#xA;            </servlet>&#xD;&#xA;            <servlet-mapping>&#xD;&#xA;                <servlet-name>Faces Servlet</servlet-name>&#xD;&#xA;                <url-pattern>/faces/*</url-pattern>&#xD;&#xA;            </servlet-mapping>&#xD;&#xA;            <session-config>&#xD;&#xA;                <session-timeout>&#xD;&#xA;                    30&#xD;&#xA;                </session-timeout>&#xD;&#xA;            </session-config>&#xD;&#xA;            <welcome-file-list>&#xD;&#xA;                <welcome-file>faces/index.xhtml</welcome-file>&#xD;&#xA;            </welcome-file-list>&#xD;&#xA;        </web-app>"
-111703230935110568,27,11,"    NotificationCompat.Builder mBuilder =&#xD;&#xA;            new NotificationCompat.Builder(this)&#xD;&#xA;            .setSmallIcon(R.drawable.notification_icon)&#xD;&#xA;            .setContentTitle(""My notification"")&#xD;&#xA;            .setContentText(""Hello World!"");&#xD;&#xA;    // Creates an explicit intent for an Activity in your app&#xD;&#xA;    Intent resultIntent = new Intent(this, ResultActivity.class);&#xD;&#xA;    &#xD;&#xA;    // The stack builder object will contain an artificial back stack for the&#xD;&#xA;    // started Activity.&#xD;&#xA;    // This ensures that navigating backward from the Activity leads out of&#xD;&#xA;    // your application to the Home screen.&#xD;&#xA;    TaskStackBuilder stackBuilder = TaskStackBuilder.create(this);&#xD;&#xA;    // Adds the back stack for the Intent (but not the Intent itself)&#xD;&#xA;    stackBuilder.addParentStack(ResultActivity.class);&#xD;&#xA;    // Adds the Intent that starts the Activity to the top of the stack&#xD;&#xA;    stackBuilder.addNextIntent(resultIntent);&#xD;&#xA;    PendingIntent resultPendingIntent =&#xD;&#xA;            stackBuilder.getPendingIntent(&#xD;&#xA;                0,&#xD;&#xA;                PendingIntent.FLAG_UPDATE_CURRENT&#xD;&#xA;            );&#xD;&#xA;    mBuilder.setContentIntent(resultPendingIntent);&#xD;&#xA;    NotificationManager mNotificationManager =&#xD;&#xA;        (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);&#xD;&#xA;    // mId allows you to update the notification later on.&#xD;&#xA;    mNotificationManager.notify(mId, mBuilder.build());"
-2514559936805527336,29,11,"	private List<LatLng> decodePoly(String encoded) {&#xD;&#xA;		List<LatLng> poly = new ArrayList<LatLng>();&#xD;&#xA;		int index = 0, len = encoded.length();&#xD;&#xA;		int lat = 0, lng = 0;&#xD;&#xA;		while (index < len) {&#xD;&#xA;			int b, shift = 0, result = 0;&#xD;&#xA;			do {&#xD;&#xA;				b = encoded.charAt(index++) - 63;&#xD;&#xA;				result |= (b & 0x1f) << shift;&#xD;&#xA;				shift += 5;&#xD;&#xA;			} while (b >= 0x20);&#xD;&#xA;			int dlat = ((result & 1) != 0 ? ~(result >> 1) : (result >> 1));&#xD;&#xA;			lat += dlat;&#xD;&#xA;			shift = 0;&#xD;&#xA;			result = 0;&#xD;&#xA;			do {&#xD;&#xA;				b = encoded.charAt(index++) - 63;&#xD;&#xA;				result |= (b & 0x1f) << shift;&#xD;&#xA;				shift += 5;&#xD;&#xA;			} while (b >= 0x20);&#xD;&#xA;			int dlng = ((result & 1) != 0 ? ~(result >> 1) : (result >> 1));&#xD;&#xA;			lng += dlng;&#xD;&#xA;			LatLng p = new LatLng((((double) lat / 1E5)),&#xD;&#xA;					(((double) lng / 1E5)));&#xD;&#xA;			poly.add(p);&#xD;&#xA;		}&#xD;&#xA;		return poly;&#xD;&#xA;	}&#xD;&#xA;           "
7674531739623423590,29,11,"		 <?php &#xD;&#xA;		   $app_id = ""YOUR_APP_ID"";&#xD;&#xA;		   $app_secret = ""YOUR_APP_SECRET"";&#xD;&#xA;		   $my_url = ""YOUR_URL"";&#xD;&#xA;		   session_start();&#xD;&#xA;		   $code = $_REQUEST[""code""];&#xD;&#xA;		   if(empty($code)) {&#xD;&#xA;			 $_SESSION['state'] = md5(uniqid(rand(), TRUE)); //CSRF protection&#xD;&#xA;			 $dialog_url = ""http://www.facebook.com/dialog/oauth?client_id="" &#xD;&#xA;			   . $app_id . ""&redirect_uri="" . urlencode($my_url) . ""&state=""&#xD;&#xA;			   . $_SESSION['state'];&#xD;&#xA;			 echo(""<script> top.location.href='"" . $dialog_url . ""'</script>"");&#xD;&#xA;		   }&#xD;&#xA;		   if($_REQUEST['state'] == $_SESSION['state']) {&#xD;&#xA;			 $token_url = ""https://graph.facebook.com/oauth/access_token?""&#xD;&#xA;			   . ""client_id="" . $app_id . ""&redirect_uri="" . urlencode($my_url)&#xD;&#xA;			   . ""&client_secret="" . $app_secret . ""&code="" . $code;&#xD;&#xA;			 $response = @file_get_contents($token_url);&#xD;&#xA;			 $params = null;&#xD;&#xA;			 parse_str($response, $params);&#xD;&#xA;			 $graph_url = ""https://graph.facebook.com/me?access_token="" &#xD;&#xA;			   . $params['access_token'];&#xD;&#xA;			 $user = json_decode(file_get_contents($graph_url));&#xD;&#xA;			 echo(""Hello "" . $user->name);&#xD;&#xA;		   }&#xD;&#xA;		   else {&#xD;&#xA;			 echo(""The state does not match. You may be a victim of CSRF."");&#xD;&#xA;		   }&#xD;&#xA;		 ?>"
7852862543404096267,32,11,    .arrow-up {&#xD;&#xA;	width: 0; &#xD;&#xA;	height: 0; &#xD;&#xA;	border-left: 5px solid transparent;&#xD;&#xA;	border-right: 5px solid transparent;&#xD;&#xA;	&#xD;&#xA;	border-bottom: 5px solid black;&#xD;&#xA;    }&#xD;&#xA;    .arrow-down {&#xD;&#xA;	width: 0; &#xD;&#xA;	height: 0; &#xD;&#xA;	border-left: 20px solid transparent;&#xD;&#xA;	border-right: 20px solid transparent;&#xD;&#xA;	&#xD;&#xA;	border-top: 20px solid #f00;&#xD;&#xA;    }&#xD;&#xA;    .arrow-right {&#xD;&#xA;	width: 0; &#xD;&#xA;	height: 0; &#xD;&#xA;	border-top: 60px solid transparent;&#xD;&#xA;	border-bottom: 60px solid transparent;&#xD;&#xA;	&#xD;&#xA;	border-left: 60px solid green;&#xD;&#xA;    }&#xD;&#xA;    .arrow-left {&#xD;&#xA;	width: 0; &#xD;&#xA;	height: 0; &#xD;&#xA;	border-top: 10px solid transparent;&#xD;&#xA;	border-bottom: 10px solid transparent; &#xD;&#xA;	&#xD;&#xA;	border-right:10px solid blue; &#xD;&#xA;    }
5646749360045282229,32,11,"	using System;&#xD;&#xA;	using System.IO;&#xD;&#xA;	using System.Net;&#xD;&#xA;	using System.Text;&#xD;&#xA;	namespace Examples.System.Net&#xD;&#xA;	{&#xD;&#xA;		public class WebRequestGetExample&#xD;&#xA;		{&#xD;&#xA;			public static void Main ()&#xD;&#xA;			{&#xD;&#xA;				// Get the object used to communicate with the server.&#xD;&#xA;				FtpWebRequest request = (FtpWebRequest)WebRequest.Create(""ftp://www.contoso.com/test.htm"");&#xD;&#xA;				request.Method = WebRequestMethods.Ftp.UploadFile;&#xD;&#xA;				// This example assumes the FTP site uses anonymous logon.&#xD;&#xA;				request.Credentials = new NetworkCredential (""anonymous"",""janeDoe@contoso.com"");&#xD;&#xA;				&#xD;&#xA;				// Copy the contents of the file to the request stream.&#xD;&#xA;				StreamReader sourceStream = new StreamReader(""testfile.txt"");&#xD;&#xA;				byte [] fileContents = Encoding.UTF8.GetBytes(sourceStream.ReadToEnd());&#xD;&#xA;				sourceStream.Close();&#xD;&#xA;				request.ContentLength = fileContents.Length;&#xD;&#xA;				Stream requestStream = request.GetRequestStream();&#xD;&#xA;				requestStream.Write(fileContents, 0, fileContents.Length);&#xD;&#xA;				requestStream.Close();&#xD;&#xA;				FtpWebResponse response = (FtpWebResponse)request.GetResponse();&#xD;&#xA;		&#xD;&#xA;				Console.WriteLine(""Upload File Complete, status {0}"", response.StatusDescription);&#xD;&#xA;		&#xD;&#xA;				response.Close();&#xD;&#xA;			}&#xD;&#xA;		}&#xD;&#xA;	}"
2174215193564471662,33,11,"				<?xml version=""1.0"" encoding=""UTF-8""?>&#xD;&#xA;				<web-app xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" &#xD;&#xA;				xmlns=""http://java.sun.com/xml/ns/javaee""&#xD;&#xA;				 xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"" &#xD;&#xA;				 id=""WebApp_ID"" version=""3.0"">&#xD;&#xA;				  &#xD;&#xA;				 &#xD;&#xA;					<display-name>Archetype Created Web Application</display-name>&#xD;&#xA;				&#xD;&#xA;					<servlet>&#xD;&#xA;						<servlet-name>dispatcher</servlet-name>&#xD;&#xA;						<servlet-class>&#xD;&#xA;							org.springframework.web.servlet.DispatcherServlet&#xD;&#xA;						</servlet-class>&#xD;&#xA;						<load-on-startup>1</load-on-startup>&#xD;&#xA;					</servlet>&#xD;&#xA;				&#xD;&#xA;					<servlet-mapping>&#xD;&#xA;						<servlet-name>dispatcher</servlet-name>&#xD;&#xA;						<url-pattern>/</url-pattern>&#xD;&#xA;					</servlet-mapping>&#xD;&#xA;				&#xD;&#xA;					<context-param>&#xD;&#xA;						<param-name>contextConfigLocation</param-name>&#xD;&#xA;						<param-value>/WEB-INF/dispatcher-servlet.xml</param-value>&#xD;&#xA;					</context-param>&#xD;&#xA;				&#xD;&#xA;					<listener>&#xD;&#xA;						<listener-class>&#xD;&#xA;							org.springframework.web.context.ContextLoaderListener&#xD;&#xA;						</listener-class>&#xD;&#xA;					</listener>&#xD;&#xA;				</web-app>"
5586944348151920656,33,11,"	<RelativeLayout&#xD;&#xA;    android:id=""@+id/main_layout""&#xD;&#xA;    xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;    xmlns:app=""http://schemas.android.com/apk/res-auto""&#xD;&#xA;    xmlns:tools=""http://schemas.android.com/tools""&#xD;&#xA;    android:layout_width=""match_parent""&#xD;&#xA;    android:layout_height=""match_parent""&#xD;&#xA;    tools:context="".MainActivity"">&#xD;&#xA;    <android.support.v7.widget.Toolbar&#xD;&#xA;        android:id=""@+id/toolbar""&#xD;&#xA;        android:layout_width=""match_parent""&#xD;&#xA;        android:layout_height=""wrap_content""&#xD;&#xA;        android:layout_alignParentTop=""true""&#xD;&#xA;        android:background=""?attr/colorPrimary""&#xD;&#xA;        android:elevation=""6dp""&#xD;&#xA;        android:minHeight=""?attr/actionBarSize""&#xD;&#xA;        android:theme=""@style/ThemeOverlay.AppCompat.Dark.ActionBar""&#xD;&#xA;        app:popupTheme=""@style/ThemeOverlay.AppCompat.Light""/>&#xD;&#xA;    <android.support.design.widget.TabLayout&#xD;&#xA;        android:id=""@+id/tab_layout""&#xD;&#xA;        android:layout_width=""match_parent""&#xD;&#xA;        android:layout_height=""wrap_content""&#xD;&#xA;        android:layout_below=""@+id/toolbar""&#xD;&#xA;        android:background=""?attr/colorPrimary""&#xD;&#xA;        android:elevation=""6dp""&#xD;&#xA;        android:minHeight=""?attr/actionBarSize""&#xD;&#xA;        android:theme=""@style/ThemeOverlay.AppCompat.Dark.ActionBar""/>&#xD;&#xA;    <android.support.v4.view.ViewPager&#xD;&#xA;        android:id=""@+id/pager""&#xD;&#xA;        android:layout_width=""match_parent""&#xD;&#xA;        android:layout_height=""fill_parent""&#xD;&#xA;        android:layout_below=""@id/tab_layout""/>&#xD;&#xA;	</RelativeLayout>"
3121668620564527076,35,11,"    public class SwitchDemo {&#xD;&#xA;        public static void main(String[] args) {&#xD;&#xA;            int month = 8;&#xD;&#xA;            String monthString;&#xD;&#xA;            switch (month) {&#xD;&#xA;                case 1:  monthString = ""January"";&#xD;&#xA;                         break;&#xD;&#xA;                case 2:  monthString = ""February"";&#xD;&#xA;                         break;&#xD;&#xA;                case 3:  monthString = ""March"";&#xD;&#xA;                         break;&#xD;&#xA;                case 4:  monthString = ""April"";&#xD;&#xA;                         break;&#xD;&#xA;                case 5:  monthString = ""May"";&#xD;&#xA;                         break;&#xD;&#xA;                case 6:  monthString = ""June"";&#xD;&#xA;                         break;&#xD;&#xA;                case 7:  monthString = ""July"";&#xD;&#xA;                         break;&#xD;&#xA;                case 8:  monthString = ""August"";&#xD;&#xA;                         break;&#xD;&#xA;                case 9:  monthString = ""September"";&#xD;&#xA;                         break;&#xD;&#xA;                case 10: monthString = ""October"";&#xD;&#xA;                         break;&#xD;&#xA;                case 11: monthString = ""November"";&#xD;&#xA;                         break;&#xD;&#xA;                case 12: monthString = ""December"";&#xD;&#xA;                         break;&#xD;&#xA;                default: monthString = ""Invalid month"";&#xD;&#xA;                         break;&#xD;&#xA;            }&#xD;&#xA;            System.out.println(monthString);&#xD;&#xA;        }&#xD;&#xA;    }"
-541207286924759578,37,11,"    public void Test10Choose5()&#xD;&#xA;    {&#xD;&#xA;       String S;&#xD;&#xA;       int Loop;&#xD;&#xA;       int N = 10;  // Total number of elements in the set.&#xD;&#xA;       int K = 5;  // Total number of elements in each group.&#xD;&#xA;       // Create the bin coeff object required to get all&#xD;&#xA;       // the combos for this N choose K combination.&#xD;&#xA;       BinCoeff<int> BC = new BinCoeff<int>(N, K, false);&#xD;&#xA;       int NumCombos = BinCoeff<int>.GetBinCoeff(N, K);&#xD;&#xA;       // The Kindexes array specifies the indexes for a lexigraphic element.&#xD;&#xA;       int[] KIndexes = new int[K];&#xD;&#xA;       StringBuilder SB = new StringBuilder();&#xD;&#xA;       // Loop thru all the combinations for this N choose K case.&#xD;&#xA;       for (int Combo = 0; Combo < NumCombos; Combo++)&#xD;&#xA;       {&#xD;&#xA;          // Get the k-indexes for this combination.  &#xD;&#xA;          BC.GetKIndexes(Combo, KIndexes);&#xD;&#xA;          // Verify that the Kindexes returned can be used to retrive the&#xD;&#xA;          // rank or lexigraphic order of the KIndexes in the table.&#xD;&#xA;          int Val = BC.GetIndex(true, KIndexes);&#xD;&#xA;          if (Val != Combo)&#xD;&#xA;          {&#xD;&#xA;             S = ""Val of "" + Val.ToString() + "" != Combo Value of "" + Combo.ToString();&#xD;&#xA;             Console.WriteLine(S);&#xD;&#xA;          }&#xD;&#xA;          SB.Remove(0, SB.Length);&#xD;&#xA;          for (Loop = 0; Loop < K; Loop++)&#xD;&#xA;          {&#xD;&#xA;             SB.Append(KIndexes[Loop].ToString());&#xD;&#xA;             if (Loop < K - 1)&#xD;&#xA;                SB.Append("" "");&#xD;&#xA;          }&#xD;&#xA;          S = ""KIndexes = "" + SB.ToString();&#xD;&#xA;          Console.WriteLine(S);&#xD;&#xA;       }&#xD;&#xA;    }"
-5096006919032058695,37,11,"        <?xml version=""1.0"" encoding=""ISO-8859-1""?>&#xD;&#xA;        &#xD;&#xA;        <bookstore>&#xD;&#xA;        &#xD;&#xA;        <book category=""COOKING"">&#xD;&#xA;          <title lang=""en"">Everyday Italian</title>&#xD;&#xA;          <author>Giada De Laurentiis</author>&#xD;&#xA;          <year>2005</year>&#xD;&#xA;          <price>30.00</price>&#xD;&#xA;        </book>&#xD;&#xA;        &#xD;&#xA;        <book category=""CHILDREN"">&#xD;&#xA;          <title lang=""en"">Harry Potter</title>&#xD;&#xA;          <author>J K. Rowling</author>&#xD;&#xA;          <year>2005</year>&#xD;&#xA;          <price>29.99</price>&#xD;&#xA;        </book>&#xD;&#xA;        &#xD;&#xA;        <book category=""WEB"">&#xD;&#xA;          <title lang=""en"">XQuery Kick Start</title>&#xD;&#xA;          <author>James McGovern</author>&#xD;&#xA;          <author>Per Bothner</author>&#xD;&#xA;          <author>Kurt Cagle</author>&#xD;&#xA;          <author>James Linn</author>&#xD;&#xA;          <author>Vaidyanathan Nagarajan</author>&#xD;&#xA;          <year>2003</year>&#xD;&#xA;          <price>49.99</price>&#xD;&#xA;        </book>&#xD;&#xA;        &#xD;&#xA;        <book category=""WEB"">&#xD;&#xA;          <title lang=""en"">Learning XML</title>&#xD;&#xA;          <author>Erik T. Ray</author>&#xD;&#xA;          <year>2003</year>&#xD;&#xA;          <price>39.95</price>&#xD;&#xA;        </book>&#xD;&#xA;    &#xD;&#xA;    </bookstore> "
-609379793514931813,38,11,"     <?php&#xD;&#xA;    // create both cURL resources&#xD;&#xA;    $ch1 = curl_init();&#xD;&#xA;    $ch2 = curl_init();&#xD;&#xA;    &#xD;&#xA;    // set URL and other appropriate options&#xD;&#xA;    curl_setopt($ch1, CURLOPT_URL, ""http://lxr.php.net/"");&#xD;&#xA;    curl_setopt($ch1, CURLOPT_HEADER, 0);&#xD;&#xA;    curl_setopt($ch2, CURLOPT_URL, ""http://www.php.net/"");&#xD;&#xA;    curl_setopt($ch2, CURLOPT_HEADER, 0);&#xD;&#xA;    &#xD;&#xA;    //create the multiple cURL handle&#xD;&#xA;    $mh = curl_multi_init();&#xD;&#xA;    &#xD;&#xA;    //add the two handles&#xD;&#xA;    curl_multi_add_handle($mh,$ch1);&#xD;&#xA;    curl_multi_add_handle($mh,$ch2);&#xD;&#xA;    &#xD;&#xA;    $active = null;&#xD;&#xA;    //execute the handles&#xD;&#xA;    do {&#xD;&#xA;        $mrc = curl_multi_exec($mh, $active);&#xD;&#xA;    } while ($mrc == CURLM_CALL_MULTI_PERFORM);&#xD;&#xA;    &#xD;&#xA;    while ($active && $mrc == CURLM_OK) {&#xD;&#xA;        if (curl_multi_select($mh) != -1) {&#xD;&#xA;            do {&#xD;&#xA;                $mrc = curl_multi_exec($mh, $active);&#xD;&#xA;            } while ($mrc == CURLM_CALL_MULTI_PERFORM);&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    //close the handles&#xD;&#xA;    curl_multi_remove_handle($mh, $ch1);&#xD;&#xA;    curl_multi_remove_handle($mh, $ch2);&#xD;&#xA;    curl_multi_close($mh);&#xD;&#xA;    &#xD;&#xA;    ?>"
-1202560596017833907,38,11,"    <link rel=""stylesheet"" href=""https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"" integrity=""sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm"" crossorigin=""anonymous"">&#xD;&#xA;    <script src=""https://code.jquery.com/jquery-3.2.1.slim.min.js"" integrity=""sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN"" crossorigin=""anonymous""></script>&#xD;&#xA;    <script src=""https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"" integrity=""sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"" crossorigin=""anonymous""></script>&#xD;&#xA;    <script src=""https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"" integrity=""sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"" crossorigin=""anonymous""></script>&#xD;&#xA;    <nav class=""navbar navbar-expand-lg navbar-light bg-light"">&#xD;&#xA;        <a class=""navbar-brand"" href=""#"">Navbar</a>&#xD;&#xA;        <button class=""navbar-toggler"" type=""button"" data-toggle=""collapse"" data-target=""#navbarSupportedContent"" aria-controls=""navbarSupportedContent"" aria-expanded=""false"" aria-label=""Toggle navigation"">&#xD;&#xA;            <span class=""navbar-toggler-icon""></span>&#xD;&#xA;        </button>&#xD;&#xA;        <div class=""collapse navbar-collapse"" id=""navbarSupportedContent"">&#xD;&#xA;            <ul class=""navbar-nav mr-auto"">&#xD;&#xA;                <li class=""nav-item active"">&#xD;&#xA;                    <a class=""nav-link"" href=""#"">Home <span class=""sr-only"">(current)</span></a>&#xD;&#xA;                </li>&#xD;&#xA;                <li class=""nav-item"">&#xD;&#xA;                    <a class=""nav-link"" href=""#"">Link</a>&#xD;&#xA;                </li>&#xD;&#xA;                <li class=""nav-item dropdown"">&#xD;&#xA;                    <a class=""nav-link dropdown-toggle"" href=""#"" id=""navbarDropdown"" role=""button"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">&#xD;&#xA;                        Dropdown&#xD;&#xA;                    </a>&#xD;&#xA;                    <div class=""dropdown-menu"" aria-labelledby=""navbarDropdown"">&#xD;&#xA;                        <a class=""dropdown-item"" href=""#"">Action</a>&#xD;&#xA;                        <a class=""dropdown-item"" href=""#"">Another action</a>&#xD;&#xA;                        <div class=""dropdown-divider""></div>&#xD;&#xA;                        <a class=""dropdown-item"" href=""#"">Something else here</a>&#xD;&#xA;                    </div>&#xD;&#xA;                </li>&#xD;&#xA;                <li class=""nav-item"">&#xD;&#xA;                    <a class=""nav-link disabled"" href=""#"">Disabled</a>&#xD;&#xA;                </li>&#xD;&#xA;            </ul>&#xD;&#xA;            <form class=""form-inline my-2 my-lg-0"">&#xD;&#xA;                <input class=""form-control mr-sm-2"" type=""search"" placeholder=""Search"" aria-label=""Search"">&#xD;&#xA;                <button class=""btn btn-outline-success my-2 my-sm-0"" type=""submit"">Search</button>&#xD;&#xA;            </form>&#xD;&#xA;        </div>&#xD;&#xA;    </nav>"
7313445648673435627,41,11,"         $(function() {&#xD;&#xA;    &#xD;&#xA;        var newHash      = """",&#xD;&#xA;            $mainContent = $(""#main-content""),&#xD;&#xA;            $pageWrap    = $(""#page-wrap""),&#xD;&#xA;            baseHeight   = 0,&#xD;&#xA;            $el;&#xD;&#xA;            &#xD;&#xA;        $pageWrap.height($pageWrap.height());&#xD;&#xA;        baseHeight = $pageWrap.height() - $mainContent.height();&#xD;&#xA;        &#xD;&#xA;        $(""nav"").delegate(""a"", ""click"", function() {&#xD;&#xA;            window.location.hash = $(this).attr(""href"");&#xD;&#xA;            return false;&#xD;&#xA;        });&#xD;&#xA;        &#xD;&#xA;        $(window).bind('hashchange', function(){&#xD;&#xA;        &#xD;&#xA;            newHash = window.location.hash.substring(1);&#xD;&#xA;            &#xD;&#xA;            if (newHash) {&#xD;&#xA;                $mainContent&#xD;&#xA;                    .find(""#guts"")&#xD;&#xA;                    .fadeOut(200, function() {&#xD;&#xA;                        $mainContent.hide().load(newHash + "" #guts"", function() {&#xD;&#xA;                            $mainContent.fadeIn(200, function() {&#xD;&#xA;                                $pageWrap.animate({&#xD;&#xA;                                    height: baseHeight + $mainContent.height() + ""px""&#xD;&#xA;                                });&#xD;&#xA;                            });&#xD;&#xA;                            $(""nav a"").removeClass(""current"");&#xD;&#xA;                            $(""nav a[href=""+newHash+""]"").addClass(""current"");&#xD;&#xA;                        });&#xD;&#xA;                    });&#xD;&#xA;            };&#xD;&#xA;            &#xD;&#xA;        });&#xD;&#xA;        &#xD;&#xA;        $(window).trigger('hashchange');&#xD;&#xA;    &#xD;&#xA;    });"
2344928816584545563,42,11,"    class MySection extends StatelessSection {&#xD;&#xA;    &#xD;&#xA;        String title;&#xD;&#xA;        List<String> list;&#xD;&#xA;    &#xD;&#xA;        public MySection(String title, List<String> list) {&#xD;&#xA;            // call constructor with layout resources for this Section header, footer and items &#xD;&#xA;            super(R.layout.section_header, R.layout.section_item);&#xD;&#xA;            this.title = title;&#xD;&#xA;            this.list = list;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public int getContentItemsTotal() {&#xD;&#xA;            return list.size(); // number of items of this section&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public RecyclerView.ViewHolder getItemViewHolder(View view) {&#xD;&#xA;            // return a custom instance of ViewHolder for the items of this section&#xD;&#xA;            return new MyItemViewHolder(view);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void onBindItemViewHolder(RecyclerView.ViewHolder holder, int position) {&#xD;&#xA;            MyItemViewHolder itemHolder = (MyItemViewHolder) holder;&#xD;&#xA;    &#xD;&#xA;            // bind your view here&#xD;&#xA;            itemHolder.tvItem.setText(list.get(position));&#xD;&#xA;        }&#xD;&#xA;        @Override&#xD;&#xA;        public RecyclerView.ViewHolder getHeaderViewHolder(View view) {&#xD;&#xA;            return new SimpleHeaderViewHolder(view);&#xD;&#xA;        }&#xD;&#xA;        @Override&#xD;&#xA;        public void onBindHeaderViewHolder(RecyclerView.ViewHolder holder) {&#xD;&#xA;            MyHeaderViewHolder headerHolder = (MyHeaderViewHolder) holder;&#xD;&#xA;    &#xD;&#xA;            // bind your header view here&#xD;&#xA;            headerHolder.tvItem.setText(title);&#xD;&#xA;        }&#xD;&#xA;    }"
1313633473575674654,44,11,"    public class HttpHandler {&#xD;&#xA;      private static final String TAG = HttpHandler.class.getSimpleName();&#xD;&#xA;      public HttpHandler() {&#xD;&#xA;      }&#xD;&#xA;      public String makeServiceCall(String reqUrl) {&#xD;&#xA;        String response = null;&#xD;&#xA;        try {&#xD;&#xA;          URL url = new URL(reqUrl);&#xD;&#xA;          HttpURLConnection conn = (HttpURLConnection) url.openConnection();&#xD;&#xA;          conn.setRequestMethod(""GET"");&#xD;&#xA;          // read the response&#xD;&#xA;          InputStream in = new BufferedInputStream(conn.getInputStream());&#xD;&#xA;          response = convertStreamToString(in);&#xD;&#xA;        } catch (MalformedURLException e) {&#xD;&#xA;          Log.e(TAG, ""MalformedURLException: "" + e.getMessage());&#xD;&#xA;        } catch (ProtocolException e) {&#xD;&#xA;          Log.e(TAG, ""ProtocolException: "" + e.getMessage());&#xD;&#xA;        } catch (IOException e) {&#xD;&#xA;          Log.e(TAG, ""IOException: "" + e.getMessage());&#xD;&#xA;        } catch (Exception e) {&#xD;&#xA;          Log.e(TAG, ""Exception: "" + e.getMessage());&#xD;&#xA;        }&#xD;&#xA;        return response;&#xD;&#xA;      }&#xD;&#xA;      private String convertStreamToString(InputStream is) {&#xD;&#xA;        BufferedReader reader = new BufferedReader(new InputStreamReader(is));&#xD;&#xA;        StringBuilder sb = new StringBuilder();&#xD;&#xA;        String line;&#xD;&#xA;        try {&#xD;&#xA;          while ((line = reader.readLine()) != null) {&#xD;&#xA;            sb.append(line).append('\n');&#xD;&#xA;          }&#xD;&#xA;        } catch (IOException e) {&#xD;&#xA;          e.printStackTrace();&#xD;&#xA;        } finally {&#xD;&#xA;          try {&#xD;&#xA;            is.close();&#xD;&#xA;          } catch (IOException e) {&#xD;&#xA;            e.printStackTrace();&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;        return sb.toString();&#xD;&#xA;      }&#xD;&#xA;    }"
6618768693384569066,45,11,"      // Cache selectors&#xD;&#xA;        var lastId,&#xD;&#xA;        topMenu = $(""#top-menu""),&#xD;&#xA;        topMenuHeight = topMenu.outerHeight()+15,&#xD;&#xA;        // All list items&#xD;&#xA;        menuItems = topMenu.find(""a""),&#xD;&#xA;        // Anchors corresponding to menu items&#xD;&#xA;        scrollItems = menuItems.map(function(){&#xD;&#xA;          var item = $($(this).attr(""href""));&#xD;&#xA;          if (item.length) { return item; }&#xD;&#xA;        });&#xD;&#xA;    &#xD;&#xA;        // Bind click handler to menu items&#xD;&#xA;        // so we can get a fancy scroll animation&#xD;&#xA;        menuItems.click(function(e){&#xD;&#xA;        var href = $(this).attr(""href""),&#xD;&#xA;          offsetTop = href === ""#"" ? 0 : $(href).offset().top-topMenuHeight+1;&#xD;&#xA;        $('html, body').stop().animate({ &#xD;&#xA;          scrollTop: offsetTop&#xD;&#xA;        }, 300);&#xD;&#xA;        e.preventDefault();&#xD;&#xA;        });&#xD;&#xA;    &#xD;&#xA;        // Bind to scroll&#xD;&#xA;        $(window).scroll(function(){&#xD;&#xA;        // Get container scroll position&#xD;&#xA;        var fromTop = $(this).scrollTop()+topMenuHeight;&#xD;&#xA;       &#xD;&#xA;        // Get id of current scroll item&#xD;&#xA;        var cur = scrollItems.map(function(){&#xD;&#xA;         if ($(this).offset().top < fromTop)&#xD;&#xA;           return this;&#xD;&#xA;        });&#xD;&#xA;        // Get the id of the current element&#xD;&#xA;        cur = cur[cur.length-1];&#xD;&#xA;        var id = cur && cur.length ? cur[0].id : """";&#xD;&#xA;       &#xD;&#xA;        if (lastId !== id) {&#xD;&#xA;           lastId = id;&#xD;&#xA;           // Set/remove active class&#xD;&#xA;           menuItems&#xD;&#xA;             .parent().removeClass(""active"")&#xD;&#xA;             .end().filter(""[href=#""+id+""]"").parent().addClass(""active"");&#xD;&#xA;       }                   &#xD;&#xA;       });"
3542569812550438770,48,11,"     /**&#xD;&#xA;     * System configuration for Angular 2 samples&#xD;&#xA;     * Adjust as necessary for your application needs.&#xD;&#xA;     */&#xD;&#xA;    (function (global) {&#xD;&#xA;        // map tells the System loader where to look for things&#xD;&#xA;        var map = {&#xD;&#xA;            'app': 'app', // 'dist',&#xD;&#xA;            '@angular': 'node_modules/@angular',&#xD;&#xA;            'angular2-in-memory-web-api': 'node_modules/angular2-in-memory-web-api',&#xD;&#xA;            'rxjs': 'node_modules/rxjs'&#xD;&#xA;        };&#xD;&#xA;        // packages tells the System loader how to load when no filename and/or no extension&#xD;&#xA;        var packages = {&#xD;&#xA;            'app': { main: 'main.js', defaultExtension: 'js' },&#xD;&#xA;            'rxjs': { defaultExtension: 'js' },&#xD;&#xA;            'angular2-in-memory-web-api': { main: 'index.js', defaultExtension: 'js' },&#xD;&#xA;        };&#xD;&#xA;        var ngPackageNames = [&#xD;&#xA;            'common',&#xD;&#xA;            'compiler',&#xD;&#xA;            'core',&#xD;&#xA;            'forms',&#xD;&#xA;            'http',&#xD;&#xA;            'platform-browser',&#xD;&#xA;            'platform-browser-dynamic',&#xD;&#xA;            'router',&#xD;&#xA;            'router-deprecated',&#xD;&#xA;            'upgrade',&#xD;&#xA;        ];&#xD;&#xA;        // Individual files (~300 requests):&#xD;&#xA;        function packIndex(pkgName) {&#xD;&#xA;            packages['@angular/' + pkgName] = { main: 'index.js', defaultExtension: 'js' };&#xD;&#xA;        }&#xD;&#xA;        // Bundled (~40 requests):&#xD;&#xA;        function packUmd(pkgName) {&#xD;&#xA;            packages['@angular/' + pkgName] = { main: '/bundles/' + pkgName + '.umd.js', defaultExtension: 'js' };&#xD;&#xA;        }&#xD;&#xA;        // Most environments should use UMD; some (Karma) need the individual index files&#xD;&#xA;        var setPackageConfig = System.packageWithIndex ? packIndex : packUmd;&#xD;&#xA;        // Add package entries for angular packages&#xD;&#xA;        ngPackageNames.forEach(setPackageConfig);&#xD;&#xA;            var config = {&#xD;&#xA;                map: map,&#xD;&#xA;                packages: packages&#xD;&#xA;            };&#xD;&#xA;        System.config(config);&#xD;&#xA;    })(this);"
-5360559216738676942,48,11,"		$(document).ready(function() {&#xD;&#xA;		  function filterPath(string) {&#xD;&#xA;		  return string&#xD;&#xA;		    .replace(/^\//,'')&#xD;&#xA;		    .replace(/(index|default).[a-zA-Z]{3,4}$/,'')&#xD;&#xA;		    .replace(/\/$/,'');&#xD;&#xA;		  }&#xD;&#xA;		  var locationPath = filterPath(location.pathname);&#xD;&#xA;		  var scrollElem = scrollableElement('html', 'body');&#xD;&#xA;		 &#xD;&#xA;		  $('a[href*=#]').each(function() {&#xD;&#xA;		    var thisPath = filterPath(this.pathname) || locationPath;&#xD;&#xA;		    if (  locationPath == thisPath&#xD;&#xA;		    && (location.hostname == this.hostname || !this.hostname)&#xD;&#xA;		    && this.hash.replace(/#/,'') ) {&#xD;&#xA;		      var $target = $(this.hash), target = this.hash;&#xD;&#xA;		      if (target) {&#xD;&#xA;		        var targetOffset = $target.offset().top;&#xD;&#xA;		        $(this).click(function(event) {&#xD;&#xA;		          event.preventDefault();&#xD;&#xA;		          $(scrollElem).animate({scrollTop: targetOffset}, 400, function() {&#xD;&#xA;		            location.hash = target;&#xD;&#xA;		          });&#xD;&#xA;		        });&#xD;&#xA;		      }&#xD;&#xA;		    }&#xD;&#xA;		  });&#xD;&#xA;		 &#xD;&#xA;		  // use the first element that is ""scrollable""&#xD;&#xA;		  function scrollableElement(els) {&#xD;&#xA;		    for (var i = 0, argLength = arguments.length; i <argLength; i++) {&#xD;&#xA;		      var el = arguments[i],&#xD;&#xA;		          $scrollElement = $(el);&#xD;&#xA;		      if ($scrollElement.scrollTop()> 0) {&#xD;&#xA;		        return el;&#xD;&#xA;		      } else {&#xD;&#xA;		        $scrollElement.scrollTop(1);&#xD;&#xA;		        var isScrollable = $scrollElement.scrollTop()> 0;&#xD;&#xA;		        $scrollElement.scrollTop(0);&#xD;&#xA;		        if (isScrollable) {&#xD;&#xA;		          return el;&#xD;&#xA;		        }&#xD;&#xA;		      }&#xD;&#xA;		    }&#xD;&#xA;		    return [];&#xD;&#xA;		  }&#xD;&#xA;		 &#xD;&#xA;		});	"
-7592715902924177137,53,11,"       public class bitmaptest extends Activity {&#xD;&#xA;        @Override&#xD;&#xA;        public void onCreate(Bundle icicle) {&#xD;&#xA;            super.onCreate(icicle);&#xD;&#xA;            LinearLayout linLayout = new LinearLayout(this);&#xD;&#xA;        &#xD;&#xA;            // load the origial BitMap (500 x 500 px)&#xD;&#xA;            Bitmap bitmapOrg = BitmapFactory.decodeResource(getResources(),&#xD;&#xA;                   R.drawable.android);&#xD;&#xA;        &#xD;&#xA;            int width = bitmapOrg.width();&#xD;&#xA;            int height = bitmapOrg.height();&#xD;&#xA;            int newWidth = 200;&#xD;&#xA;            int newHeight = 200;&#xD;&#xA;        &#xD;&#xA;            // calculate the scale - in this case = 0.4f&#xD;&#xA;            float scaleWidth = ((float) newWidth) / width;&#xD;&#xA;            float scaleHeight = ((float) newHeight) / height;&#xD;&#xA;        &#xD;&#xA;            // createa matrix for the manipulation&#xD;&#xA;            Matrix matrix = new Matrix();&#xD;&#xA;            // resize the bit map&#xD;&#xA;            matrix.postScale(scaleWidth, scaleHeight);&#xD;&#xA;            // rotate the Bitmap&#xD;&#xA;            matrix.postRotate(45);&#xD;&#xA;        &#xD;&#xA;            // recreate the new Bitmap&#xD;&#xA;            Bitmap resizedBitmap = Bitmap.createBitmap(bitmapOrg, 0, 0,&#xD;&#xA;                              width, height, matrix, true);&#xD;&#xA;        &#xD;&#xA;            // make a Drawable from Bitmap to allow to set the BitMap&#xD;&#xA;            // to the ImageView, ImageButton or what ever&#xD;&#xA;            BitmapDrawable bmd = new BitmapDrawable(resizedBitmap);&#xD;&#xA;        &#xD;&#xA;            ImageView imageView = new ImageView(this);&#xD;&#xA;        &#xD;&#xA;            // set the Drawable on the ImageView&#xD;&#xA;            imageView.setImageDrawable(bmd);&#xD;&#xA;        &#xD;&#xA;            // center the Image&#xD;&#xA;            imageView.setScaleType(ScaleType.CENTER);&#xD;&#xA;        &#xD;&#xA;            // add ImageView to the Layout&#xD;&#xA;            linLayout.addView(imageView,&#xD;&#xA;                    new LinearLayout.LayoutParams(&#xD;&#xA;                          LayoutParams.FILL_PARENT, LayoutParams.FILL_PARENT&#xD;&#xA;                    )&#xD;&#xA;            );&#xD;&#xA;        &#xD;&#xA;            // set LinearLayout as ContentView&#xD;&#xA;            setContentView(linLayout);&#xD;&#xA;        }&#xD;&#xA;        }"
-2863627873509093252,54,11,"    <browsers>&#xD;&#xA;		<browser id=""IE11"" parentID=""Mozilla"">&#xD;&#xA;			<identification>&#xD;&#xA;				<userAgent match=""Trident\/7.0; rv:(?'version'(?'major'\d+)(\.(?'minor'\d+)?)(?'letters'\w*))(?'extra'[^)]*)"" />&#xD;&#xA;				<userAgent nonMatch=""IEMobile"" />&#xD;&#xA;			</identification>&#xD;&#xA;			<capture>&#xD;&#xA;				<userAgent match=""Trident/(?'layoutVersion'\d+)"" />&#xD;&#xA;			</capture>&#xD;&#xA;			<capabilities>&#xD;&#xA;				<capability name=""browser"" value=""IE"" />&#xD;&#xA;				<capability name=""layoutEngine"" value=""Trident"" />&#xD;&#xA;				<capability name=""layoutEngineVersion"" value=""${layoutVersion}"" />&#xD;&#xA;				<capability name=""extra"" value=""${extra}"" />&#xD;&#xA;				<capability name=""isColor"" value=""true"" />&#xD;&#xA;				<capability name=""letters"" value=""${letters}"" />&#xD;&#xA;				<capability name=""majorversion"" value=""${major}"" />&#xD;&#xA;				<capability name=""minorversion"" value=""${minor}"" />&#xD;&#xA;				<capability name=""screenBitDepth"" value=""8"" />&#xD;&#xA;				<capability name=""type"" value=""IE${major}"" />&#xD;&#xA;				<capability name=""version"" value=""${version}"" />&#xD;&#xA;			</capabilities>&#xD;&#xA;		</browser>&#xD;&#xA;		<!-- Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11,0) like Gecko -->&#xD;&#xA;		<browser id=""IE110"" parentID=""IE11"">&#xD;&#xA;			<identification>&#xD;&#xA;				<capability name=""majorversion"" match=""11"" />&#xD;&#xA;			</identification>&#xD;&#xA;			<capabilities>&#xD;&#xA;				<capability name=""ecmascriptversion"" value=""3.0"" />&#xD;&#xA;				<capability name=""jscriptversion"" value=""5.6"" />&#xD;&#xA;				<capability name=""javascript"" value=""true"" />&#xD;&#xA;				<capability name=""javascriptversion"" value=""1.5"" />&#xD;&#xA;				<capability name=""msdomversion"" value=""${majorversion}.${minorversion}"" />&#xD;&#xA;				<capability name=""w3cdomversion"" value=""1.0"" />&#xD;&#xA;				<capability name=""ExchangeOmaSupported"" value=""true"" />&#xD;&#xA;				<capability name=""activexcontrols"" value=""true"" />&#xD;&#xA;				<capability name=""backgroundsounds"" value=""true"" />&#xD;&#xA;				<capability name=""cookies"" value=""true"" />&#xD;&#xA;				<capability name=""frames"" value=""true"" />&#xD;&#xA;				<capability name=""javaapplets"" value=""true"" />&#xD;&#xA;				<capability name=""supportsCallback"" value=""true"" />&#xD;&#xA;				<capability name=""supportsFileUpload"" value=""true"" />&#xD;&#xA;				<capability name=""supportsMultilineTextBoxDisplay"" value=""true"" />&#xD;&#xA;				<capability name=""supportsMaintainScrollPositionOnPostback"" value=""true"" />&#xD;&#xA;				<capability name=""supportsVCard"" value=""true"" />&#xD;&#xA;				<capability name=""supportsXmlHttp"" value=""true"" />&#xD;&#xA;				<capability name=""tables"" value=""true"" />&#xD;&#xA;				<capability name=""supportsAccessKeyAttribute"" value=""true"" />&#xD;&#xA;				<capability name=""tagwriter"" value=""System.Web.UI.HtmlTextWriter"" />&#xD;&#xA;				<capability name=""vbscript"" value=""true"" />&#xD;&#xA;			</capabilities>&#xD;&#xA;		</browser>&#xD;&#xA;	</browsers>"
-2070430052607204812,58,11,"        public Location getLocation() {&#xD;&#xA;        try {&#xD;&#xA;            locationManager = (LocationManager) mContext&#xD;&#xA;                    .getSystemService(LOCATION_SERVICE);&#xD;&#xA;    &#xD;&#xA;            // getting GPS status&#xD;&#xA;            isGPSEnabled = locationManager&#xD;&#xA;                    .isProviderEnabled(LocationManager.GPS_PROVIDER);&#xD;&#xA;    &#xD;&#xA;            // getting network status&#xD;&#xA;            isNetworkEnabled = locationManager&#xD;&#xA;                    .isProviderEnabled(LocationManager.NETWORK_PROVIDER);&#xD;&#xA;    &#xD;&#xA;            if (!isGPSEnabled && !isNetworkEnabled) {&#xD;&#xA;                // no network provider is enabled&#xD;&#xA;            } else {&#xD;&#xA;                this.canGetLocation = true;&#xD;&#xA;                if (isNetworkEnabled) {&#xD;&#xA;                    locationManager.requestLocationUpdates(&#xD;&#xA;                            LocationManager.NETWORK_PROVIDER,&#xD;&#xA;                            MIN_TIME_BW_UPDATES,&#xD;&#xA;                            MIN_DISTANCE_CHANGE_FOR_UPDATES, this);&#xD;&#xA;                    Log.d(""Network"", ""Network Enabled"");&#xD;&#xA;                    if (locationManager != null) {&#xD;&#xA;                        location = locationManager&#xD;&#xA;                                .getLastKnownLocation(LocationManager.NETWORK_PROVIDER);&#xD;&#xA;                        if (location != null) {&#xD;&#xA;                            latitude = location.getLatitude();&#xD;&#xA;                            longitude = location.getLongitude();&#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;                // if GPS Enabled get lat/long using GPS Services&#xD;&#xA;                if (isGPSEnabled) {&#xD;&#xA;                    if (location == null) {&#xD;&#xA;                        locationManager.requestLocationUpdates(&#xD;&#xA;                                LocationManager.GPS_PROVIDER,&#xD;&#xA;                                MIN_TIME_BW_UPDATES,&#xD;&#xA;                                MIN_DISTANCE_CHANGE_FOR_UPDATES, this);&#xD;&#xA;                        Log.d(""GPS"", ""GPS Enabled"");&#xD;&#xA;                        if (locationManager != null) {&#xD;&#xA;                            location = locationManager&#xD;&#xA;                                    .getLastKnownLocation(LocationManager.GPS_PROVIDER);&#xD;&#xA;                            if (location != null) {&#xD;&#xA;                                latitude = location.getLatitude();&#xD;&#xA;                                longitude = location.getLongitude();&#xD;&#xA;                            }&#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;        } catch (Exception e) {&#xD;&#xA;            e.printStackTrace();&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        return location;&#xD;&#xA;    }"
-8486655498174608403,62,11,"        public class VerticalTextView extends TextView&#xD;&#xA;        {&#xD;&#xA;            final boolean topDown;&#xD;&#xA;         &#xD;&#xA;            public VerticalTextView( Context context, &#xD;&#xA;                AttributeSet attrs )&#xD;&#xA;            {&#xD;&#xA;                super( context, attrs );&#xD;&#xA;                final int gravity = getGravity();&#xD;&#xA;                if ( Gravity.isVertical( gravity )&#xD;&#xA;                    && ( gravity & Gravity.VERTICAL_GRAVITY_MASK ) &#xD;&#xA;                    == Gravity.BOTTOM )&#xD;&#xA;                {&#xD;&#xA;                    setGravity( &#xD;&#xA;                        ( gravity & Gravity.HORIZONTAL_GRAVITY_MASK )&#xD;&#xA;                            | Gravity.TOP );&#xD;&#xA;                    topDown = false;&#xD;&#xA;                }&#xD;&#xA;                else&#xD;&#xA;                {&#xD;&#xA;                    topDown = true;&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;         &#xD;&#xA;            @Override&#xD;&#xA;            protected void onMeasure( int widthMeasureSpec, &#xD;&#xA;                int heightMeasureSpec )&#xD;&#xA;            {&#xD;&#xA;                super.onMeasure( heightMeasureSpec, &#xD;&#xA;                    widthMeasureSpec );&#xD;&#xA;                setMeasuredDimension( getMeasuredHeight(), &#xD;&#xA;                    getMeasuredWidth() );&#xD;&#xA;            }&#xD;&#xA;         &#xD;&#xA;            @Override&#xD;&#xA;            protected void onDraw( Canvas canvas )&#xD;&#xA;            {&#xD;&#xA;                TextPaint textPaint = getPaint();&#xD;&#xA;                textPaint.setColor( getCurrentTextColor() );&#xD;&#xA;                textPaint.drawableState = getDrawableState();&#xD;&#xA;         &#xD;&#xA;                canvas.save();&#xD;&#xA;         &#xD;&#xA;                if ( topDown )&#xD;&#xA;                {&#xD;&#xA;                    canvas.translate( getWidth(), 0 );&#xD;&#xA;                    canvas.rotate( 90 );&#xD;&#xA;                }&#xD;&#xA;                else&#xD;&#xA;                {&#xD;&#xA;                    canvas.translate( 0, getHeight() );&#xD;&#xA;                    canvas.rotate( -90 );&#xD;&#xA;                }&#xD;&#xA;         &#xD;&#xA;                canvas.translate( getCompoundPaddingLeft(), &#xD;&#xA;                    getExtendedPaddingTop() );&#xD;&#xA;         &#xD;&#xA;                getLayout().draw( canvas );&#xD;&#xA;                canvas.restore();&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    "
6455099309431989084,65,11,"        ( function( $ ) {&#xD;&#xA;    $( document ).ready(function() {&#xD;&#xA;    $('#cssmenu li.has-sub>a').on('click', function(){&#xD;&#xA;    		$(this).removeAttr('href');&#xD;&#xA;    		var element = $(this).parent('li');&#xD;&#xA;    		if (element.hasClass('open')) {&#xD;&#xA;    			element.removeClass('open');&#xD;&#xA;    			element.find('li').removeClass('open');&#xD;&#xA;    			element.find('ul').slideUp();&#xD;&#xA;    		}&#xD;&#xA;    		else {&#xD;&#xA;    			element.addClass('open');&#xD;&#xA;    			element.children('ul').slideDown();&#xD;&#xA;    			element.siblings('li').children('ul').slideUp();&#xD;&#xA;    			element.siblings('li').removeClass('open');&#xD;&#xA;    			element.siblings('li').find('li').removeClass('open');&#xD;&#xA;    			element.siblings('li').find('ul').slideUp();&#xD;&#xA;    		}&#xD;&#xA;    	});&#xD;&#xA;    &#xD;&#xA;    	$('#cssmenu>ul>li.has-sub>a').append('<span class=""holder""></span>');&#xD;&#xA;    &#xD;&#xA;    	(function getColor() {&#xD;&#xA;    		var r, g, b;&#xD;&#xA;    		var textColor = $('#cssmenu').css('color');&#xD;&#xA;    		textColor = textColor.slice(4);&#xD;&#xA;    		r = textColor.slice(0, textColor.indexOf(','));&#xD;&#xA;    		textColor = textColor.slice(textColor.indexOf(' ') + 1);&#xD;&#xA;    		g = textColor.slice(0, textColor.indexOf(','));&#xD;&#xA;    		textColor = textColor.slice(textColor.indexOf(' ') + 1);&#xD;&#xA;    		b = textColor.slice(0, textColor.indexOf(')'));&#xD;&#xA;    		var l = rgbToHsl(r, g, b);&#xD;&#xA;    		if (l > 0.7) {&#xD;&#xA;    			$('#cssmenu>ul>li>a').css('text-shadow', '0 1px 1px rgba(0, 0, 0, .35)');&#xD;&#xA;    			$('#cssmenu>ul>li>a>span').css('border-color', 'rgba(0, 0, 0, .35)');&#xD;&#xA;    		}&#xD;&#xA;    		else&#xD;&#xA;    		{&#xD;&#xA;    			$('#cssmenu>ul>li>a').css('text-shadow', '0 1px 0 rgba(255, 255, 255, .35)');&#xD;&#xA;    			$('#cssmenu>ul>li>a>span').css('border-color', 'rgba(255, 255, 255, .35)');&#xD;&#xA;    		}&#xD;&#xA;    	})();&#xD;&#xA;    &#xD;&#xA;    	function rgbToHsl(r, g, b) {&#xD;&#xA;    	    r /= 255, g /= 255, b /= 255;&#xD;&#xA;    	    var max = Math.max(r, g, b), min = Math.min(r, g, b);&#xD;&#xA;    	    var h, s, l = (max + min) / 2;&#xD;&#xA;    &#xD;&#xA;    	    if(max == min){&#xD;&#xA;    	        h = s = 0;&#xD;&#xA;    	    }&#xD;&#xA;    	    else {&#xD;&#xA;    	        var d = max - min;&#xD;&#xA;    	        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);&#xD;&#xA;    	        switch(max){&#xD;&#xA;    	            case r: h = (g - b) / d + (g < b ? 6 : 0); break;&#xD;&#xA;    	            case g: h = (b - r) / d + 2; break;&#xD;&#xA;    	            case b: h = (r - g) / d + 4; break;&#xD;&#xA;    	        }&#xD;&#xA;    	        h /= 6;&#xD;&#xA;    	    }&#xD;&#xA;    	    return l;&#xD;&#xA;    	}&#xD;&#xA;    });&#xD;&#xA;    } )( jQuery );"
1088522354963272942,71,11,"    import java.awt.*;&#xD;&#xA;    import java.awt.event.*;&#xD;&#xA;    import javax.swing.*;&#xD;&#xA;    import javax.swing.border.*;&#xD;&#xA;    &#xD;&#xA;    public class CalculatorPanel extends JPanel&#xD;&#xA;    {&#xD;&#xA;    	private JTextField display;&#xD;&#xA;    &#xD;&#xA;    	public CalculatorPanel()&#xD;&#xA;    	{&#xD;&#xA;    		Action numberAction = new AbstractAction()&#xD;&#xA;    		{&#xD;&#xA;    			@Override&#xD;&#xA;    			public void actionPerformed(ActionEvent e)&#xD;&#xA;    			{&#xD;&#xA;    				display.setCaretPosition( display.getDocument().getLength() );&#xD;&#xA;    				display.replaceSelection(e.getActionCommand());&#xD;&#xA;    			}&#xD;&#xA;    		};&#xD;&#xA;    &#xD;&#xA;    		setLayout( new BorderLayout() );&#xD;&#xA;    &#xD;&#xA;    		display = new JTextField();&#xD;&#xA;    		display.setEditable( false );&#xD;&#xA;    		display.setHorizontalAlignment(JTextField.RIGHT);&#xD;&#xA;    		add(display, BorderLayout.NORTH);&#xD;&#xA;    &#xD;&#xA;    		JPanel buttonPanel = new JPanel();&#xD;&#xA;    		buttonPanel.setLayout( new GridLayout(0, 5) );&#xD;&#xA;    		add(buttonPanel, BorderLayout.CENTER);&#xD;&#xA;    &#xD;&#xA;    		for (int i = 0; i < 10; i++)&#xD;&#xA;    		{&#xD;&#xA;    			String text = String.valueOf(i);&#xD;&#xA;    			JButton button = new JButton( text );&#xD;&#xA;    			button.addActionListener( numberAction );&#xD;&#xA;    			button.setBorder( new LineBorder(Color.BLACK) );&#xD;&#xA;    			button.setPreferredSize( new Dimension(50, 50) );&#xD;&#xA;    			buttonPanel.add( button );&#xD;&#xA;    &#xD;&#xA;    			InputMap inputMap = button.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);&#xD;&#xA;    			inputMap.put(KeyStroke.getKeyStroke(text), text);&#xD;&#xA;    			inputMap.put(KeyStroke.getKeyStroke(""NUMPAD"" + text), text);&#xD;&#xA;    			button.getActionMap().put(text, numberAction);&#xD;&#xA;    		}&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	private static void createAndShowUI()&#xD;&#xA;    	{&#xD;&#xA;    //		UIManager.put(""Button.margin"", new Insets(10, 10, 10, 10) );&#xD;&#xA;    &#xD;&#xA;    		JFrame frame = new JFrame(""Calculator Panel"");&#xD;&#xA;    		frame.setDefaultCloseOperation( JFrame.EXIT_ON_CLOSE );&#xD;&#xA;    		frame.add( new CalculatorPanel() );&#xD;&#xA;    		frame.pack();&#xD;&#xA;    		frame.setLocationRelativeTo( null );&#xD;&#xA;    		frame.setVisible(true);&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public static void main(String[] args)&#xD;&#xA;    	{&#xD;&#xA;    		EventQueue.invokeLater(new Runnable()&#xD;&#xA;    		{&#xD;&#xA;    			public void run()&#xD;&#xA;    			{&#xD;&#xA;    				createAndShowUI();&#xD;&#xA;    			}&#xD;&#xA;    		});&#xD;&#xA;    	}&#xD;&#xA;    }"
2466295117053806738,77,11,"    Public Class FTP&#xD;&#xA;            '-------------------------[BroCode]--------------------------&#xD;&#xA;            '----------------------------FTP-----------------------------&#xD;&#xA;            Private _credentials As System.Net.NetworkCredential&#xD;&#xA;            Sub New(ByVal _FTPUser As String, ByVal _FTPPass As String)&#xD;&#xA;                setCredentials(_FTPUser, _FTPPass)&#xD;&#xA;            End Sub&#xD;&#xA;            Public Sub UploadFile(ByVal _FileName As String, ByVal _UploadPath As String)&#xD;&#xA;                Dim _FileInfo As New System.IO.FileInfo(_FileName)&#xD;&#xA;                Dim _FtpWebRequest As System.Net.FtpWebRequest = CType(System.Net.FtpWebRequest.Create(New Uri(_UploadPath)), System.Net.FtpWebRequest)&#xD;&#xA;                _FtpWebRequest.Credentials = _credentials&#xD;&#xA;                _FtpWebRequest.KeepAlive = False&#xD;&#xA;                _FtpWebRequest.Timeout = 20000&#xD;&#xA;                _FtpWebRequest.Method = System.Net.WebRequestMethods.Ftp.UploadFile&#xD;&#xA;                _FtpWebRequest.UseBinary = True&#xD;&#xA;                _FtpWebRequest.ContentLength = _FileInfo.Length&#xD;&#xA;                Dim buffLength As Integer = 2048&#xD;&#xA;                Dim buff(buffLength - 1) As Byte&#xD;&#xA;                Dim _FileStream As System.IO.FileStream = _FileInfo.OpenRead()&#xD;&#xA;                Try&#xD;&#xA;                    Dim _Stream As System.IO.Stream = _FtpWebRequest.GetRequestStream()&#xD;&#xA;                    Dim contentLen As Integer = _FileStream.Read(buff, 0, buffLength)&#xD;&#xA;                    Do While contentLen <> 0&#xD;&#xA;                        _Stream.Write(buff, 0, contentLen)&#xD;&#xA;                        contentLen = _FileStream.Read(buff, 0, buffLength)&#xD;&#xA;                    Loop&#xD;&#xA;                    _Stream.Close()&#xD;&#xA;                    _Stream.Dispose()&#xD;&#xA;                    _FileStream.Close()&#xD;&#xA;                    _FileStream.Dispose()&#xD;&#xA;                Catch ex As Exception&#xD;&#xA;                    MessageBox.Show(ex.Message, ""Upload Error: "", MessageBoxButtons.OK, MessageBoxIcon.Error)&#xD;&#xA;                End Try&#xD;&#xA;            End Sub&#xD;&#xA;            Public Sub DownloadFile(ByVal _FileName As String, ByVal _ftpDownloadPath As String)&#xD;&#xA;                Try&#xD;&#xA;                    Dim _request As System.Net.FtpWebRequest = System.Net.WebRequest.Create(_ftpDownloadPath)&#xD;&#xA;                    _request.KeepAlive = False&#xD;&#xA;                    _request.Method = System.Net.WebRequestMethods.Ftp.DownloadFile&#xD;&#xA;                    _request.Credentials = _credentials&#xD;&#xA;                    Dim _response As System.Net.FtpWebResponse = _request.GetResponse()&#xD;&#xA;                    Dim responseStream As System.IO.Stream = _response.GetResponseStream()&#xD;&#xA;                    Dim fs As New System.IO.FileStream(_FileName, System.IO.FileMode.Create)&#xD;&#xA;                    responseStream.CopyTo(fs)&#xD;&#xA;                    responseStream.Close()&#xD;&#xA;                    _response.Close()&#xD;&#xA;                Catch ex As Exception&#xD;&#xA;                    MessageBox.Show(ex.Message, ""Download Error: "", MessageBoxButtons.OK, MessageBoxIcon.Error)&#xD;&#xA;                End Try&#xD;&#xA;            End Sub&#xD;&#xA;            Public Function GetDirectory(ByVal _ftpPath As String) As List(Of String)&#xD;&#xA;                Dim ret As New List(Of String)&#xD;&#xA;                Try&#xD;&#xA;                    Dim _request As System.Net.FtpWebRequest = System.Net.WebRequest.Create(_ftpPath)&#xD;&#xA;                    _request.KeepAlive = False&#xD;&#xA;                    _request.Method = System.Net.WebRequestMethods.Ftp.ListDirectoryDetails&#xD;&#xA;                    _request.Credentials = _credentials&#xD;&#xA;                    Dim _response As System.Net.FtpWebResponse = _request.GetResponse()&#xD;&#xA;                    Dim responseStream As System.IO.Stream = _response.GetResponseStream()&#xD;&#xA;                    Dim _reader As System.IO.StreamReader = New System.IO.StreamReader(responseStream)&#xD;&#xA;                    Dim FileData As String = _reader.ReadToEnd&#xD;&#xA;                    Dim Lines() As String = FileData.Split(New String() {Environment.NewLine}, StringSplitOptions.RemoveEmptyEntries)&#xD;&#xA;                    For Each l As String In Lines&#xD;&#xA;                        ret.Add(l)&#xD;&#xA;                    Next&#xD;&#xA;                    _reader.Close()&#xD;&#xA;                    _response.Close()&#xD;&#xA;                Catch ex As Exception&#xD;&#xA;                    MessageBox.Show(ex.Message, ""Directory Fetch Error: "", MessageBoxButtons.OK, MessageBoxIcon.Error)&#xD;&#xA;                End Try&#xD;&#xA;                Return ret&#xD;&#xA;            End Function&#xD;&#xA;        &#xD;&#xA;            Private Sub setCredentials(ByVal _FTPUser As String, ByVal _FTPPass As String)&#xD;&#xA;                _credentials = New System.Net.NetworkCredential(_FTPUser, _FTPPass)&#xD;&#xA;            End Sub&#xD;&#xA;        End Class"
-8505266165843721687,81,11,"        //jQuery time&#xD;&#xA;    var current_fs, next_fs, previous_fs; //fieldsets&#xD;&#xA;    var left, opacity, scale; //fieldset properties which we will animate&#xD;&#xA;    var animating; //flag to prevent quick multi-click glitches&#xD;&#xA;    &#xD;&#xA;    $("".next"").click(function(){&#xD;&#xA;    	if(animating) return false;&#xD;&#xA;    	animating = true;&#xD;&#xA;    	&#xD;&#xA;    	current_fs = $(this).parent();&#xD;&#xA;    	next_fs = $(this).parent().next();&#xD;&#xA;    	&#xD;&#xA;    	//activate next step on progressbar using the index of next_fs&#xD;&#xA;    	$(""#progressbar li"").eq($(""fieldset"").index(next_fs)).addClass(""active"");&#xD;&#xA;    	&#xD;&#xA;    	//show the next fieldset&#xD;&#xA;    	next_fs.show(); &#xD;&#xA;    	//hide the current fieldset with style&#xD;&#xA;    	current_fs.animate({opacity: 0}, {&#xD;&#xA;    		step: function(now, mx) {&#xD;&#xA;    			//as the opacity of current_fs reduces to 0 - stored in ""now""&#xD;&#xA;    			//1. scale current_fs down to 80%&#xD;&#xA;    			scale = 1 - (1 - now) * 0.2;&#xD;&#xA;    			//2. bring next_fs from the right(50%)&#xD;&#xA;    			left = (now * 50)+""%"";&#xD;&#xA;    			//3. increase opacity of next_fs to 1 as it moves in&#xD;&#xA;    			opacity = 1 - now;&#xD;&#xA;    			current_fs.css({&#xD;&#xA;            'transform': 'scale('+scale+')',&#xD;&#xA;            'position': 'absolute'&#xD;&#xA;          });&#xD;&#xA;    			next_fs.css({'left': left, 'opacity': opacity});&#xD;&#xA;    		}, &#xD;&#xA;    		duration: 800, &#xD;&#xA;    		complete: function(){&#xD;&#xA;    			current_fs.hide();&#xD;&#xA;    			animating = false;&#xD;&#xA;    		}, &#xD;&#xA;    		//this comes from the custom easing plugin&#xD;&#xA;    		easing: 'easeInOutBack'&#xD;&#xA;    	});&#xD;&#xA;    });&#xD;&#xA;    &#xD;&#xA;    $("".previous"").click(function(){&#xD;&#xA;    	if(animating) return false;&#xD;&#xA;    	animating = true;&#xD;&#xA;    	&#xD;&#xA;    	current_fs = $(this).parent();&#xD;&#xA;    	previous_fs = $(this).parent().prev();&#xD;&#xA;    	&#xD;&#xA;    	//de-activate current step on progressbar&#xD;&#xA;    	$(""#progressbar li"").eq($(""fieldset"").index(current_fs)).removeClass(""active"");&#xD;&#xA;    	&#xD;&#xA;    	//show the previous fieldset&#xD;&#xA;    	previous_fs.show(); &#xD;&#xA;    	//hide the current fieldset with style&#xD;&#xA;    	current_fs.animate({opacity: 0}, {&#xD;&#xA;    		step: function(now, mx) {&#xD;&#xA;    			//as the opacity of current_fs reduces to 0 - stored in ""now""&#xD;&#xA;    			//1. scale previous_fs from 80% to 100%&#xD;&#xA;    			scale = 0.8 + (1 - now) * 0.2;&#xD;&#xA;    			//2. take current_fs to the right(50%) - from 0%&#xD;&#xA;    			left = ((1-now) * 50)+""%"";&#xD;&#xA;    			//3. increase opacity of previous_fs to 1 as it moves in&#xD;&#xA;    			opacity = 1 - now;&#xD;&#xA;    			current_fs.css({'left': left});&#xD;&#xA;    			previous_fs.css({'transform': 'scale('+scale+')', 'opacity': opacity});&#xD;&#xA;    		}, &#xD;&#xA;    		duration: 800, &#xD;&#xA;    		complete: function(){&#xD;&#xA;    			current_fs.hide();&#xD;&#xA;    			animating = false;&#xD;&#xA;    		}, &#xD;&#xA;    		//this comes from the custom easing plugin&#xD;&#xA;    		easing: 'easeInOutBack'&#xD;&#xA;    	});&#xD;&#xA;    });&#xD;&#xA;    &#xD;&#xA;    $("".submit"").click(function(){&#xD;&#xA;    	return false;&#xD;&#xA;    })"
-7647513588038494923,85,11,"        #myImg {&#xD;&#xA;            border-radius: 5px;&#xD;&#xA;            cursor: pointer;&#xD;&#xA;            transition: 0.3s;&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        #myImg:hover {opacity: 0.7;}&#xD;&#xA;        &#xD;&#xA;        /* The Modal (background) */&#xD;&#xA;        .modal {&#xD;&#xA;            display: none; /* Hidden by default */&#xD;&#xA;            position: fixed; /* Stay in place */&#xD;&#xA;            z-index: 1; /* Sit on top */&#xD;&#xA;            padding-top: 100px; /* Location of the box */&#xD;&#xA;            left: 0;&#xD;&#xA;            top: 0;&#xD;&#xA;            width: 100%; /* Full width */&#xD;&#xA;            height: 100%; /* Full height */&#xD;&#xA;            overflow: auto; /* Enable scroll if needed */&#xD;&#xA;            background-color: rgb(0,0,0); /* Fallback color */&#xD;&#xA;            background-color: rgba(0,0,0,0.9); /* Black w/ opacity */&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        /* Modal Content (image) */&#xD;&#xA;        .modal-content {&#xD;&#xA;            margin: auto;&#xD;&#xA;            display: block;&#xD;&#xA;            width: 80%;&#xD;&#xA;            max-width: 700px;&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        /* Caption of Modal Image */&#xD;&#xA;        #caption {&#xD;&#xA;            margin: auto;&#xD;&#xA;            display: block;&#xD;&#xA;            width: 80%;&#xD;&#xA;            max-width: 700px;&#xD;&#xA;            text-align: center;&#xD;&#xA;            color: #ccc;&#xD;&#xA;            padding: 10px 0;&#xD;&#xA;            height: 150px;&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        /* Add Animation */&#xD;&#xA;        .modal-content, #caption {    &#xD;&#xA;            -webkit-animation-name: zoom;&#xD;&#xA;            -webkit-animation-duration: 0.6s;&#xD;&#xA;            animation-name: zoom;&#xD;&#xA;            animation-duration: 0.6s;&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        @-webkit-keyframes zoom {&#xD;&#xA;            from {-webkit-transform:scale(0)} &#xD;&#xA;            to {-webkit-transform:scale(1)}&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        @keyframes zoom {&#xD;&#xA;            from {transform:scale(0)} &#xD;&#xA;            to {transform:scale(1)}&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        /* The Close Button */&#xD;&#xA;        .close {&#xD;&#xA;            position: absolute;&#xD;&#xA;            top: 15px;&#xD;&#xA;            right: 35px;&#xD;&#xA;            color: #f1f1f1;&#xD;&#xA;            font-size: 40px;&#xD;&#xA;            font-weight: bold;&#xD;&#xA;            transition: 0.3s;&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        .close:hover,&#xD;&#xA;        .close:focus {&#xD;&#xA;            color: #bbb;&#xD;&#xA;            text-decoration: none;&#xD;&#xA;            cursor: pointer;&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        /* 100% Image Width on Smaller Screens */&#xD;&#xA;        @media only screen and (max-width: 700px){&#xD;&#xA;            .modal-content {&#xD;&#xA;                width: 100%;&#xD;&#xA;            }&#xD;&#xA;        }"
8221637019389083290,92,11,"    enum AESError: Error {&#xD;&#xA;        case KeyError((String, Int))&#xD;&#xA;        case IVError((String, Int))&#xD;&#xA;        case CryptorError((String, Int))&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    // The iv is prefixed to the encrypted data&#xD;&#xA;    func aesCBCEncrypt(data:Data, keyData:Data) throws -> Data {&#xD;&#xA;        let keyLength = keyData.count&#xD;&#xA;        let validKeyLengths = [kCCKeySizeAES128, kCCKeySizeAES192, kCCKeySizeAES256]&#xD;&#xA;        if (validKeyLengths.contains(keyLength) == false) {&#xD;&#xA;            throw AESError.KeyError((""Invalid key length"", keyLength))&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        let ivSize = kCCBlockSizeAES128;&#xD;&#xA;        let cryptLength = size_t(ivSize + data.count + kCCBlockSizeAES128)&#xD;&#xA;        var cryptData = Data(count:cryptLength)&#xD;&#xA;    &#xD;&#xA;        let status = cryptData.withUnsafeMutableBytes {ivBytes in&#xD;&#xA;            SecRandomCopyBytes(kSecRandomDefault, kCCBlockSizeAES128, ivBytes)&#xD;&#xA;        }&#xD;&#xA;        if (status != 0) {&#xD;&#xA;            throw AESError.IVError((""IV generation failed"", Int(status)))&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        var numBytesEncrypted :size_t = 0&#xD;&#xA;        let options   = CCOptions(kCCOptionPKCS7Padding)&#xD;&#xA;    &#xD;&#xA;        let cryptStatus = cryptData.withUnsafeMutableBytes {cryptBytes in&#xD;&#xA;            data.withUnsafeBytes {dataBytes in&#xD;&#xA;                keyData.withUnsafeBytes {keyBytes in&#xD;&#xA;                    CCCrypt(CCOperation(kCCEncrypt),&#xD;&#xA;                            CCAlgorithm(kCCAlgorithmAES),&#xD;&#xA;                            options,&#xD;&#xA;                            keyBytes, keyLength,&#xD;&#xA;                            cryptBytes,&#xD;&#xA;                            dataBytes, data.count,&#xD;&#xA;                            cryptBytes+kCCBlockSizeAES128, cryptLength,&#xD;&#xA;                            &numBytesEncrypted)&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        if UInt32(cryptStatus) == UInt32(kCCSuccess) {&#xD;&#xA;            cryptData.count = numBytesEncrypted + ivSize&#xD;&#xA;        }&#xD;&#xA;        else {&#xD;&#xA;            throw AESError.CryptorError((""Encryption failed"", Int(cryptStatus)))&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        return cryptData;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    // The iv is prefixed to the encrypted data&#xD;&#xA;    func aesCBCDecrypt(data:Data, keyData:Data) throws -> Data? {&#xD;&#xA;        let keyLength = keyData.count&#xD;&#xA;        let validKeyLengths = [kCCKeySizeAES128, kCCKeySizeAES192, kCCKeySizeAES256]&#xD;&#xA;        if (validKeyLengths.contains(keyLength) == false) {&#xD;&#xA;            throw AESError.KeyError((""Invalid key length"", keyLength))&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        let ivSize = kCCBlockSizeAES128;&#xD;&#xA;        let clearLength = size_t(data.count - ivSize)&#xD;&#xA;        var clearData = Data(count:clearLength)&#xD;&#xA;    &#xD;&#xA;        var numBytesDecrypted :size_t = 0&#xD;&#xA;        let options   = CCOptions(kCCOptionPKCS7Padding)&#xD;&#xA;    &#xD;&#xA;        let cryptStatus = clearData.withUnsafeMutableBytes {cryptBytes in&#xD;&#xA;            data.withUnsafeBytes {dataBytes in&#xD;&#xA;                keyData.withUnsafeBytes {keyBytes in&#xD;&#xA;                    CCCrypt(CCOperation(kCCDecrypt),&#xD;&#xA;                            CCAlgorithm(kCCAlgorithmAES128),&#xD;&#xA;                            options,&#xD;&#xA;                            keyBytes, keyLength,&#xD;&#xA;                            dataBytes,&#xD;&#xA;                            dataBytes+kCCBlockSizeAES128, clearLength,&#xD;&#xA;                            cryptBytes, clearLength,&#xD;&#xA;                            &numBytesDecrypted)&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        if UInt32(cryptStatus) == UInt32(kCCSuccess) {&#xD;&#xA;            clearData.count = numBytesDecrypted&#xD;&#xA;        }&#xD;&#xA;        else {&#xD;&#xA;            throw AESError.CryptorError((""Decryption failed"", Int(cryptStatus)))&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        return clearData;&#xD;&#xA;    }"
3919014934972818095,92,11,"    private String selectedImagePath = """";&#xD;&#xA;    	final private int PICK_IMAGE = 1;&#xD;&#xA;    	final private int CAPTURE_IMAGE = 2;&#xD;&#xA;    &#xD;&#xA;    public Uri setImageUri() {&#xD;&#xA;    		// Store image in dcim&#xD;&#xA;    		File file = new File(Environment.getExternalStorageDirectory() + ""/DCIM/"", ""image"" + new Date().getTime() + "".png"");&#xD;&#xA;    		Uri imgUri = Uri.fromFile(file);&#xD;&#xA;    		this.imgPath = file.getAbsolutePath();&#xD;&#xA;    		return imgUri;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	&#xD;&#xA;    	public String getImagePath() {&#xD;&#xA;    		return imgPath;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    btnGallery.setOnClickListener(new OnClickListener() {&#xD;&#xA;    &#xD;&#xA;    			@Override&#xD;&#xA;    			public void onClick(View v) {&#xD;&#xA;    				Intent intent = new Intent();&#xD;&#xA;    				intent.setType(""image/*"");&#xD;&#xA;    				intent.setAction(Intent.ACTION_GET_CONTENT);&#xD;&#xA;    				startActivityForResult(Intent.createChooser(intent, """"), PICK_IMAGE);&#xD;&#xA;    &#xD;&#xA;    			}&#xD;&#xA;    		});&#xD;&#xA;    &#xD;&#xA;    		btnCapture.setOnClickListener(new OnClickListener() {&#xD;&#xA;    &#xD;&#xA;    			@Override&#xD;&#xA;    			public void onClick(View v) {&#xD;&#xA;    				final Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);&#xD;&#xA;    				intent.putExtra(MediaStore.EXTRA_OUTPUT, setImageUri());&#xD;&#xA;    				startActivityForResult(intent, CAPTURE_IMAGE);&#xD;&#xA;    			}&#xD;&#xA;    		});&#xD;&#xA;    &#xD;&#xA;    @Override&#xD;&#xA;    	protected void onActivityResult(int requestCode, int resultCode, Intent data) {&#xD;&#xA;    		if (resultCode != Activity.RESULT_CANCELED) {&#xD;&#xA;    			if (requestCode == PICK_IMAGE) {&#xD;&#xA;    				selectedImagePath = getAbsolutePath(data.getData());&#xD;&#xA;    				imgUser.setImageBitmap(decodeFile(selectedImagePath));&#xD;&#xA;    			} else if (requestCode == CAPTURE_IMAGE) {&#xD;&#xA;    				selectedImagePath = getImagePath();&#xD;&#xA;    				imgUser.setImageBitmap(decodeFile(selectedImagePath));&#xD;&#xA;    			} else {&#xD;&#xA;    				super.onActivityResult(requestCode, resultCode, data);&#xD;&#xA;    			}&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    public Bitmap decodeFile(String path) {&#xD;&#xA;    		try {&#xD;&#xA;    			// Decode image size&#xD;&#xA;    			BitmapFactory.Options o = new BitmapFactory.Options();&#xD;&#xA;    			o.inJustDecodeBounds = true;&#xD;&#xA;    			BitmapFactory.decodeFile(path, o);&#xD;&#xA;    			// The new size we want to scale to&#xD;&#xA;    			final int REQUIRED_SIZE = 70;&#xD;&#xA;    &#xD;&#xA;    			// Find the correct scale value. It should be the power of 2.&#xD;&#xA;    			int scale = 1;&#xD;&#xA;    			while (o.outWidth / scale / 2 >= REQUIRED_SIZE && o.outHeight / scale / 2 >= REQUIRED_SIZE)&#xD;&#xA;    				scale *= 2;&#xD;&#xA;    &#xD;&#xA;    			// Decode with inSampleSize&#xD;&#xA;    			BitmapFactory.Options o2 = new BitmapFactory.Options();&#xD;&#xA;    			o2.inSampleSize = scale;&#xD;&#xA;    			return BitmapFactory.decodeFile(path, o2);&#xD;&#xA;    		} catch (Throwable e) {&#xD;&#xA;    			e.printStackTrace();&#xD;&#xA;    		}&#xD;&#xA;    		return null;&#xD;&#xA;    &#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    public String getAbsolutePath(Uri uri) {&#xD;&#xA;    		String[] projection = { MediaColumns.DATA };&#xD;&#xA;    		@SuppressWarnings(""deprecation"")&#xD;&#xA;    		Cursor cursor = managedQuery(uri, projection, null, null, null);&#xD;&#xA;    		if (cursor != null) {&#xD;&#xA;    			int column_index = cursor.getColumnIndexOrThrow(MediaColumns.DATA);&#xD;&#xA;    			cursor.moveToFirst();&#xD;&#xA;    			return cursor.getString(column_index);&#xD;&#xA;    		} else&#xD;&#xA;    			return null;&#xD;&#xA;    	}"
4300114582394737028,99,11,"    import java.io.BufferedReader;&#xD;&#xA;    import java.io.IOException;&#xD;&#xA;    import java.io.InputStream;&#xD;&#xA;    import java.io.InputStreamReader;&#xD;&#xA;    import java.io.UnsupportedEncodingException;&#xD;&#xA;    import java.util.List;&#xD;&#xA;     &#xD;&#xA;    import org.apache.http.HttpEntity;&#xD;&#xA;    import org.apache.http.HttpResponse;&#xD;&#xA;    import org.apache.http.NameValuePair;&#xD;&#xA;    import org.apache.http.client.ClientProtocolException;&#xD;&#xA;    import org.apache.http.client.entity.UrlEncodedFormEntity;&#xD;&#xA;    import org.apache.http.client.methods.HttpGet;&#xD;&#xA;    import org.apache.http.client.methods.HttpPost;&#xD;&#xA;    import org.apache.http.client.utils.URLEncodedUtils;&#xD;&#xA;    import org.apache.http.impl.client.DefaultHttpClient;&#xD;&#xA;    import org.json.JSONException;&#xD;&#xA;    import org.json.JSONObject;&#xD;&#xA;     &#xD;&#xA;    import android.util.Log;&#xD;&#xA;     &#xD;&#xA;    public class JSONParser {&#xD;&#xA;     &#xD;&#xA;        static InputStream is = null;&#xD;&#xA;        static JSONObject jObj = null;&#xD;&#xA;        static String json = """";&#xD;&#xA;     &#xD;&#xA;        // constructor&#xD;&#xA;        public JSONParser() {&#xD;&#xA;     &#xD;&#xA;        }&#xD;&#xA;     &#xD;&#xA;        // function get json from url&#xD;&#xA;        // by making HTTP POST or GET mehtod&#xD;&#xA;        public JSONObject makeHttpRequest(String url, String method,&#xD;&#xA;                List<NameValuePair> params) {&#xD;&#xA;     &#xD;&#xA;            // Making HTTP request&#xD;&#xA;            try {&#xD;&#xA;     &#xD;&#xA;                // check for request method&#xD;&#xA;                if(method == ""POST""){&#xD;&#xA;                    // request method is POST&#xD;&#xA;                    // defaultHttpClient&#xD;&#xA;                    DefaultHttpClient httpClient = new DefaultHttpClient();&#xD;&#xA;                    HttpPost httpPost = new HttpPost(url);&#xD;&#xA;                    httpPost.setEntity(new UrlEncodedFormEntity(params));&#xD;&#xA;     &#xD;&#xA;                    HttpResponse httpResponse = httpClient.execute(httpPost);&#xD;&#xA;                    HttpEntity httpEntity = httpResponse.getEntity();&#xD;&#xA;                    is = httpEntity.getContent();&#xD;&#xA;     &#xD;&#xA;                }else if(method == ""GET""){&#xD;&#xA;                    // request method is GET&#xD;&#xA;                    DefaultHttpClient httpClient = new DefaultHttpClient();&#xD;&#xA;                    String paramString = URLEncodedUtils.format(params, ""utf-8"");&#xD;&#xA;                    url += ""?"" + paramString;&#xD;&#xA;                    HttpGet httpGet = new HttpGet(url);&#xD;&#xA;     &#xD;&#xA;                    HttpResponse httpResponse = httpClient.execute(httpGet);&#xD;&#xA;                    HttpEntity httpEntity = httpResponse.getEntity();&#xD;&#xA;                    is = httpEntity.getContent();&#xD;&#xA;                }           &#xD;&#xA;     &#xD;&#xA;            } catch (UnsupportedEncodingException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            } catch (ClientProtocolException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            } catch (IOException e) {&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;            }&#xD;&#xA;     &#xD;&#xA;            try {&#xD;&#xA;                BufferedReader reader = new BufferedReader(new InputStreamReader(&#xD;&#xA;                        is, ""iso-8859-1""), 8);&#xD;&#xA;                StringBuilder sb = new StringBuilder();&#xD;&#xA;                String line = null;&#xD;&#xA;                while ((line = reader.readLine()) != null) {&#xD;&#xA;                    sb.append(line + ""\n"");&#xD;&#xA;                }&#xD;&#xA;                is.close();&#xD;&#xA;                json = sb.toString();&#xD;&#xA;            } catch (Exception e) {&#xD;&#xA;                Log.e(""Buffer Error"", ""Error converting result "" + e.toString());&#xD;&#xA;            }&#xD;&#xA;     &#xD;&#xA;            // try parse the string to a JSON object&#xD;&#xA;            try {&#xD;&#xA;                jObj = new JSONObject(json);&#xD;&#xA;            } &#xD;&#xA;            catch (JSONException e) {&#xD;&#xA;                Log.e(""JSON Parser"", ""Error parsing data "" + e.toString());&#xD;&#xA;            }&#xD;&#xA;     &#xD;&#xA;            // return JSON String&#xD;&#xA;            return jObj;&#xD;&#xA;     &#xD;&#xA;        }&#xD;&#xA;    }"
1699072126166540125,20,12,    08 02 22 97 38 15 00 40 00 75 04 05 07 78 52 12 50 77 91 08&#xD;&#xA;    49 49 99 40 17 81 18 57 60 87 17 40 98 43 69 48 04 56 62 00&#xD;&#xA;    81 49 31 73 55 79 14 29 93 71 40 67 53 88 30 03 49 13 36 65&#xD;&#xA;    52 70 95 23 04 60 11 42 69 24 68 56 01 32 56 71 37 02 36 91&#xD;&#xA;    22 31 16 71 51 67 63 89 41 92 36 54 22 40 40 28 66 33 13 80&#xD;&#xA;    24 47 32 60 99 03 45 02 44 75 33 53 78 36 84 20 35 17 12 50&#xD;&#xA;    32 98 81 28 64 23 67 10 26 38 40 67 59 54 70 66 18 38 64 70&#xD;&#xA;    67 26 20 68 02 62 12 20 95 63 94 39 63 08 40 91 66 49 94 21&#xD;&#xA;    24 55 58 05 66 73 99 26 97 17 78 78 96 83 14 88 34 89 63 72&#xD;&#xA;    21 36 23 09 75 00 76 44 20 45 35 14 00 61 33 97 34 31 33 95&#xD;&#xA;    78 17 53 28 22 75 31 67 15 94 03 80 04 62 16 14 09 53 56 92&#xD;&#xA;    16 39 05 42 96 35 31 47 55 58 88 24 00 17 54 24 36 29 85 57&#xD;&#xA;    86 56 00 48 35 71 89 07 05 44 44 37 44 60 21 58 51 54 17 58&#xD;&#xA;    19 80 81 68 05 94 47 69 28 73 92 13 86 52 17 77 04 89 55 40&#xD;&#xA;    04 52 08 83 97 35 99 16 07 97 57 32 16 26 26 79 33 27 98 66&#xD;&#xA;    88 36 68 87 57 62 20 72 03 46 33 67 46 55 12 32 63 93 53 69&#xD;&#xA;    04 42 16 73 38 25 39 11 24 94 72 18 08 46 29 32 40 62 76 36&#xD;&#xA;    20 69 36 41 72 30 23 88 34 62 99 69 82 67 59 85 74 04 36 16&#xD;&#xA;    20 73 35 29 78 31 90 01 74 31 49 71 48 86 81 16 23 57 05 54&#xD;&#xA;    01 70 54 71 83 51 54 69 16 92 33 48 61 43 52 01 89 19 67 48
-5424967405858791886,24,12,"    CREATE FUNCTION levenshtein( s1 VARCHAR(255), s2 VARCHAR(255) )  RETURNS INT  DETERMINISTIC  BEGIN    DECLARE s1_len , s2_len, i, j, c, c_temp, cost INT;    DECLARE s1_char CHAR;    -- max strlen=255    DECLARE cv0, cv1 VARBINARY(256);    SET s1_len = CHAR_LENGTH(s1), s2_len = CHAR_LENGTH(s2), cv1 = 0x00, j = 1, i = 1, c = >0;    IF s1 = s2 THEN&#xD;&#xA;         RETURN 0;    ELSEIF s1_len = 0 THEN&#xD;&#xA;         RETURN s2_len;    ELSEIF s2_len = 0 THEN&#xD;&#xA;         RETURN s1_len;    ELSE&#xD;&#xA;         WHILE j <= s2_len DO&#xD;&#xA;           SET cv1 = CONCAT(cv1, UNHEX(HEX(j))), j = j + 1;&#xD;&#xA;         END WHILE;&#xD;&#xA;         WHILE i <= s1_len DO&#xD;&#xA;           SET s1_char = SUBSTRING(s1, i, 1), c = i, cv0 = UNHEX(HEX(i)), j = 1;&#xD;&#xA;           WHILE j <= s2_len DO&#xD;&#xA;             SET c = c + 1;&#xD;&#xA;             IF s1_char = SUBSTRING(s2, j, 1) THEN &#xD;&#xA;               SET cost = 0; ELSE SET cost = 1;&#xD;&#xA;             END IF;&#xD;&#xA;             SET c_temp = CONV(HEX(SUBSTRING(cv1, j, 1)), 16, 10) + cost;&#xD;&#xA;             IF c > c_temp THEN SET c = c_temp; END IF;&#xD;&#xA;               SET c_temp = CONV(HEX(SUBSTRING(cv1, j+1, 1)), 16, 10) + 1;&#xD;&#xA;               IF c > c_temp THEN &#xD;&#xA;                 SET c = c_temp; &#xD;&#xA;               END IF;&#xD;&#xA;               SET cv0 = CONCAT(cv0, UNHEX(HEX(c))), j = j + 1;&#xD;&#xA;           END WHILE;&#xD;&#xA;           SET cv1 = cv0, i = i + 1;&#xD;&#xA;         END WHILE;    END IF;    RETURN c;  END;"
-6758955095952414576,26,12,"    <ul class=""nav"">&#xD;&#xA;        <li>&#xD;&#xA;            <a href=""#"">Menu 1</a>&#xD;&#xA;            <ul>&#xD;&#xA;                <li><a href=""#"">Sub Menu Item</a></li>&#xD;&#xA;                <li><a href=""#"">Sub Menu Item</a></li>&#xD;&#xA;                <li><a href=""#"">Sub Menu Item</a></li>&#xD;&#xA;            </ul>&#xD;&#xA;        </li>&#xD;&#xA;        <li>&#xD;&#xA;            <a href=""#"">Menu 2</a>&#xD;&#xA;            <ul>&#xD;&#xA;                <li><a href=""#"">Sub Menu Item</a></li>&#xD;&#xA;                <li><a href=""#"">Sub Menu Item</a></li>&#xD;&#xA;                <li><a href=""#"">Sub Menu Item</a></li>&#xD;&#xA;            </ul>&#xD;&#xA;        </li>&#xD;&#xA;        <li>&#xD;&#xA;            <a href=""#"">Menu 3</a>&#xD;&#xA;            <ul>&#xD;&#xA;                <li><a href=""#"">Sub Menu Item</a></li>&#xD;&#xA;                <li><a href=""#"">Sub Menu Item</a></li>&#xD;&#xA;                <li><a href=""#"">Sub Menu Item</a></li>&#xD;&#xA;            </ul>&#xD;&#xA;        </li>&#xD;&#xA;    </ul>"
-6868263799955184175,27,12,"    Public Function FormatHourMinute( _&#xD;&#xA;      ByVal datTime As Date, _&#xD;&#xA;      Optional ByVal strSeparator As String = "":"") _&#xD;&#xA;      As String&#xD;&#xA;      &#xD;&#xA;    ' Returns count of days, hours and minutes of datTime&#xD;&#xA;    ' converted to hours and minutes as a formatted string&#xD;&#xA;    ' with an optional choice of time separator.&#xD;&#xA;    '&#xD;&#xA;    ' Example:&#xD;&#xA;    '   datTime: #10:03# + #20:01#&#xD;&#xA;    '   returns: 30:04&#xD;&#xA;    '&#xD;&#xA;    ' 2005-02-05. Cactus Data ApS, CPH.&#xD;&#xA;    &#xD;&#xA;      Dim strHour       As String&#xD;&#xA;      Dim strMinute     As String&#xD;&#xA;      Dim strHourMinute As String&#xD;&#xA;      &#xD;&#xA;      strHour = CStr(Fix(datTime) * 24 + Hour(datTime))&#xD;&#xA;      ' Add leading zero to minute count when needed.&#xD;&#xA;      strMinute = Right(""0"" & CStr(Minute(datTime)), 2)&#xD;&#xA;      strHourMinute = strHour & strSeparator & strMinute&#xD;&#xA;      &#xD;&#xA;      FormatHourMinute = strHourMinute&#xD;&#xA;      &#xD;&#xA;    End Function"
-2912468926532364860,33,12,"         <header class=""navbar navbar-fixed-top navbar-inverse"">&#xD;&#xA;         <div class=""navbar-inner"">&#xD;&#xA;         <div class=""container"">&#xD;&#xA;         <%= link_to ""sample app"", root_path, id: ""logo"" %>&#xD;&#xA;         <nav>&#xD;&#xA;         <ul class=""nav pull-right"">&#xD;&#xA;          <li><%= link_to ""Home"", root_path %></li>&#xD;&#xA;          <li><%= link_to ""Help"", help_path %></li>&#xD;&#xA;          &#xD;&#xA;          <% if signed_in? %>&#xD;&#xA;            <li><%= link_to ""Users"", '#' %></li>&#xD;&#xA;            <li id=""fat-menu"" class=""dropdown"">&#xD;&#xA;              <a href=""#"" class=""dropdown-toggle"" data-toggle=""dropdown"">&#xD;&#xA;                Account <b class=""caret""></b>&#xD;&#xA;              </a>&#xD;&#xA;              <ul class=""dropdown-menu"">&#xD;&#xA;                <li><%= link_to ""Profile"", current_user %></li>&#xD;&#xA;                <li><%= link_to ""Settings"", '#' %></li>&#xD;&#xA;                <li class=""divider""></li>&#xD;&#xA;                <li>&#xD;&#xA;                  <%= link_to ""Sign out"", signout_path, method: ""delete"" %>&#xD;&#xA;                </li>&#xD;&#xA;              </ul>&#xD;&#xA;            </li>&#xD;&#xA;          <% else %>&#xD;&#xA;            <li><%= link_to ""Sign in"", signin_path %></li>&#xD;&#xA;          <% end %>&#xD;&#xA;        &#xD;&#xA;         </ul>&#xD;&#xA;          </nav>&#xD;&#xA;          </div>&#xD;&#xA;         </div>&#xD;&#xA;          </header>"
5801209099507432854,33,12,"	<?xml version=""1.0"" encoding=""utf-8""?>&#xD;&#xA;	<menu xmlns:android=""http://schemas.android.com/apk/res/android"">&#xD;&#xA;		<group android:checkableBehavior=""single"">&#xD;&#xA;			<item&#xD;&#xA;				android:id=""@+id/nav_camera""&#xD;&#xA;				android:icon=""@drawable/ic_menu_camera""&#xD;&#xA;				android:title=""Import""/>&#xD;&#xA;			<item&#xD;&#xA;				android:id=""@+id/nav_gallery""&#xD;&#xA;				android:icon=""@drawable/ic_menu_gallery""&#xD;&#xA;				android:title=""Gallery""/>&#xD;&#xA;			<item&#xD;&#xA;				android:id=""@+id/nav_slideshow""&#xD;&#xA;				android:icon=""@drawable/ic_menu_slideshow""&#xD;&#xA;				android:title=""Slideshow""/>&#xD;&#xA;			<item&#xD;&#xA;				android:id=""@+id/nav_manage""&#xD;&#xA;				android:icon=""@drawable/ic_menu_manage""&#xD;&#xA;				android:title=""Tools""/>&#xD;&#xA;		</group>&#xD;&#xA;		<item android:title=""Communicate"">&#xD;&#xA;			<menu>&#xD;&#xA;				<item&#xD;&#xA;					android:id=""@+id/nav_share""&#xD;&#xA;					android:icon=""@drawable/ic_menu_share""&#xD;&#xA;					android:title=""Share""/>&#xD;&#xA;				<item&#xD;&#xA;					android:id=""@+id/nav_send""&#xD;&#xA;					android:icon=""@drawable/ic_menu_send""&#xD;&#xA;					android:title=""Send""/>&#xD;&#xA;			</menu>&#xD;&#xA;		</item>&#xD;&#xA;	</menu>"
6119085803383659086,35,12,"    CREATE FUNCTION [dbo].[DelimitedSplit8K] (@pString VARCHAR(8000), @pDelimiter CHAR(1))&#xD;&#xA;    --WARNING!!! DO NOT USE MAX DATA-TYPES HERE!  IT WILL KILL PERFORMANCE!&#xD;&#xA;    &#xD;&#xA;    RETURNS TABLE WITH SCHEMABINDING AS&#xD;&#xA;    RETURN&#xD;&#xA;    &#xD;&#xA;    /* ""Inline"" CTE Driven ""Tally Table"" produces values from 1 up to 10,000... enough to cover VARCHAR(8000)*/&#xD;&#xA;    &#xD;&#xA;      WITH E1(N) AS (&#xD;&#xA;                     SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1 UNION ALL&#xD;&#xA;                     SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1 UNION ALL&#xD;&#xA;                     SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1&#xD;&#xA;                    ),                          --10E+1 or 10 rows&#xD;&#xA;           E2(N) AS (SELECT 1 FROM E1 a, E1 b), --10E+2 or 100 rows&#xD;&#xA;           E4(N) AS (SELECT 1 FROM E2 a, E2 b), --10E+4 or 10,000 rows max&#xD;&#xA;     cteTally(N) AS (--==== This provides the ""base"" CTE and limits the number of rows right up front&#xD;&#xA;                         -- for both a performance gain and prevention of accidental ""overruns""&#xD;&#xA;                     SELECT TOP (ISNULL(DATALENGTH(@pString),0)) ROW_NUMBER() OVER (ORDER BY (SELECT NULL)) FROM E4&#xD;&#xA;                    ),&#xD;&#xA;    cteStart(N1) AS (--==== This returns N+1 (starting position of each ""element"" just once for each delimiter)&#xD;&#xA;                     SELECT 1 UNION ALL&#xD;&#xA;                     SELECT t.N+1 FROM cteTally t WHERE SUBSTRING(@pString,t.N,1) = @pDelimiter&#xD;&#xA;                    ),&#xD;&#xA;    cteLen(N1,L1) AS(--==== Return start and length (for use in substring)&#xD;&#xA;                     SELECT s.N1,&#xD;&#xA;                            ISNULL(NULLIF(CHARINDEX(@pDelimiter,@pString,s.N1),0)-s.N1,8000)&#xD;&#xA;                       FROM cteStart s&#xD;&#xA;                    )&#xD;&#xA;    --===== Do the actual split. The ISNULL/NULLIF combo handles the length for the final element when no delimiter is found.&#xD;&#xA;     SELECT ItemNumber = ROW_NUMBER() OVER(ORDER BY l.N1),&#xD;&#xA;            Item       = SUBSTRING(@pString, l.N1, l.L1)&#xD;&#xA;       FROM cteLen l&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    GO"
-1597356366449470711,38,12,"        <?xml version=""1.0""?>&#xD;&#xA;    <configuration>&#xD;&#xA;      &#xD;&#xA;    &#xD;&#xA;      <appSettings>&#xD;&#xA;        <add key=""aspnet:UseTaskFriendlySynchronizationContext"" value=""true"" />&#xD;&#xA;      </appSettings>&#xD;&#xA;      <system.web>&#xD;&#xA;        &#xD;&#xA;        <compilation debug=""true"" targetFramework=""4.5"" />&#xD;&#xA;        <httpRuntime targetFramework=""4.5""/>&#xD;&#xA;      </system.web>&#xD;&#xA;      <system.serviceModel>&#xD;&#xA;        <behaviors>&#xD;&#xA;          <serviceBehaviors>&#xD;&#xA;            <behavior>&#xD;&#xA;              <!-- To avoid disclosing metadata information, set the values below to false before deployment -->&#xD;&#xA;              <serviceMetadata httpGetEnabled=""true"" httpsGetEnabled=""true""/>&#xD;&#xA;              <!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->&#xD;&#xA;              <serviceDebug includeExceptionDetailInFaults=""false""/>&#xD;&#xA;            </behavior>&#xD;&#xA;          </serviceBehaviors>&#xD;&#xA;        </behaviors>&#xD;&#xA;        <protocolMapping>&#xD;&#xA;            <add binding=""basicHttpsBinding"" scheme=""https"" />&#xD;&#xA;        </protocolMapping>    &#xD;&#xA;        <serviceHostingEnvironment aspNetCompatibilityEnabled=""true"" multipleSiteBindingsEnabled=""true"" />&#xD;&#xA;      </system.serviceModel>&#xD;&#xA;      <system.webServer>&#xD;&#xA;        <modules runAllManagedModulesForAllRequests=""true""/>&#xD;&#xA;        <!--&#xD;&#xA;            To browse web app root directory during debugging, set the value below to true.&#xD;&#xA;            Set to false before deployment to avoid disclosing web app folder information.&#xD;&#xA;          -->&#xD;&#xA;        <directoryBrowse enabled=""true""/>&#xD;&#xA;      </system.webServer>&#xD;&#xA;    &#xD;&#xA;    </configuration>"
5174581932147568955,38,12,"       class PInfo {&#xD;&#xA;        private String appname = """";&#xD;&#xA;        private String pname = """";&#xD;&#xA;        private String versionName = """";&#xD;&#xA;        private int versionCode = 0;&#xD;&#xA;        private Drawable icon;&#xD;&#xA;        private void prettyPrint() {&#xD;&#xA;            Log.v(appname + ""\t"" + pname + ""\t"" + versionName + ""\t"" + versionCode);&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    private ArrayList<PInfo> getPackages() {&#xD;&#xA;        ArrayList<PInfo> apps = getInstalledApps(false); /* false = no system packages */&#xD;&#xA;        final int max = apps.size();&#xD;&#xA;        for (int i=0; i<max; i++) {&#xD;&#xA;            apps.get(i).prettyPrint();&#xD;&#xA;        }&#xD;&#xA;        return apps;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    private ArrayList<PInfo> getInstalledApps(boolean getSysPackages) {&#xD;&#xA;        ArrayList<PInfo> res = new ArrayList<PInfo>();        &#xD;&#xA;        List<PackageInfo> packs = getPackageManager().getInstalledPackages(0);&#xD;&#xA;        for(int i=0;i<packs.size();i++) {&#xD;&#xA;            PackageInfo p = packs.get(i);&#xD;&#xA;            if ((!getSysPackages) && (p.versionName == null)) {&#xD;&#xA;                continue ;&#xD;&#xA;            }&#xD;&#xA;            PInfo newInfo = new PInfo();&#xD;&#xA;            newInfo.appname = p.applicationInfo.loadLabel(getPackageManager()).toString();&#xD;&#xA;            newInfo.pname = p.packageName;&#xD;&#xA;            newInfo.versionName = p.versionName;&#xD;&#xA;            newInfo.versionCode = p.versionCode;&#xD;&#xA;            newInfo.icon = p.applicationInfo.loadIcon(getPackageManager());&#xD;&#xA;            res.add(newInfo);&#xD;&#xA;        }&#xD;&#xA;        return res; &#xD;&#xA;    }"
-8587218224722151642,38,12,"    /* The Modal (background) */&#xD;&#xA;        .modal {&#xD;&#xA;            display: none; /* Hidden by default */&#xD;&#xA;            position: fixed; /* Stay in place */&#xD;&#xA;            z-index: 1; /* Sit on top */&#xD;&#xA;            padding-top: 100px; /* Location of the box */&#xD;&#xA;            left: 0;&#xD;&#xA;            top: 0;&#xD;&#xA;            width: 100%; /* Full width */&#xD;&#xA;            height: 100%; /* Full height */&#xD;&#xA;            overflow: auto; /* Enable scroll if needed */&#xD;&#xA;            background-color: rgb(0,0,0); /* Fallback color */&#xD;&#xA;            background-color: rgba(0,0,0,0.4); /* Black w/ opacity */&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        /* Modal Content */&#xD;&#xA;        .modal-content {&#xD;&#xA;            background-color: #fefefe;&#xD;&#xA;            margin: auto;&#xD;&#xA;            padding: 20px;&#xD;&#xA;            border: 1px solid #888;&#xD;&#xA;            width: 80%;&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        /* The Close Button */&#xD;&#xA;        .close {&#xD;&#xA;            color: #aaaaaa;&#xD;&#xA;            float: right;&#xD;&#xA;            font-size: 28px;&#xD;&#xA;            font-weight: bold;&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        .close:hover,&#xD;&#xA;        .close:focus {&#xD;&#xA;            color: #000;&#xD;&#xA;            text-decoration: none;&#xD;&#xA;            cursor: pointer;&#xD;&#xA;        }"
-6922994943158487033,43,12,"        function getTimeRemaining(endtime) {&#xD;&#xA;          var t = Date.parse(endtime) - Date.parse(new Date());&#xD;&#xA;          var seconds = Math.floor((t / 1000) % 60);&#xD;&#xA;          var minutes = Math.floor((t / 1000 / 60) % 60);&#xD;&#xA;          var hours = Math.floor((t / (1000 * 60 * 60)) % 24);&#xD;&#xA;          var days = Math.floor(t / (1000 * 60 * 60 * 24));&#xD;&#xA;          return {&#xD;&#xA;            'total': t,&#xD;&#xA;            'days': days,&#xD;&#xA;            'hours': hours,&#xD;&#xA;            'minutes': minutes,&#xD;&#xA;            'seconds': seconds&#xD;&#xA;          };&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        function initializeClock(id, endtime) {&#xD;&#xA;          var clock = document.getElementById(id);&#xD;&#xA;          var daysSpan = clock.querySelector('.days');&#xD;&#xA;          var hoursSpan = clock.querySelector('.hours');&#xD;&#xA;          var minutesSpan = clock.querySelector('.minutes');&#xD;&#xA;          var secondsSpan = clock.querySelector('.seconds');&#xD;&#xA;        &#xD;&#xA;          function updateClock() {&#xD;&#xA;            var t = getTimeRemaining(endtime);&#xD;&#xA;        &#xD;&#xA;            daysSpan.innerHTML = t.days;&#xD;&#xA;            hoursSpan.innerHTML = ('0' + t.hours).slice(-2);&#xD;&#xA;            minutesSpan.innerHTML = ('0' + t.minutes).slice(-2);&#xD;&#xA;            secondsSpan.innerHTML = ('0' + t.seconds).slice(-2);&#xD;&#xA;        &#xD;&#xA;            if (t.total <= 0) {&#xD;&#xA;              clearInterval(timeinterval);&#xD;&#xA;            }&#xD;&#xA;          }&#xD;&#xA;        &#xD;&#xA;          updateClock();&#xD;&#xA;          var timeinterval = setInterval(updateClock, 1000);&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        var deadline = new Date(Date.parse(new Date()) + 15 * 24 * 60 * 60 * 1000);&#xD;&#xA;        initializeClock('clockdiv', deadline);&#xD;&#xA;        &#xD;&#xA;        "
-7317379377815570479,46,12,"        <!DOCTYPE html>&#xD;&#xA;	<html> &#xD;&#xA;	<head> &#xD;&#xA;	  <meta http-equiv=""content-type"" content=""text/html; charset=UTF-8"" /> &#xD;&#xA;	  <title>Google Maps Multiple Markers</title> &#xD;&#xA;	  <script src=""http://maps.google.com/maps/api/js?sensor=false"" &#xD;&#xA;	          type=""text/javascript""></script>&#xD;&#xA;	</head> &#xD;&#xA;	<body>&#xD;&#xA;	  <div id=""map"" style=""width: 500px; height: 400px;""></div>&#xD;&#xA;	&#xD;&#xA;	  <script type=""text/javascript"">&#xD;&#xA;	    var locations = [&#xD;&#xA;	      ['Bondi Beach', -33.890542, 151.274856, 4],&#xD;&#xA;	      ['Coogee Beach', -33.923036, 151.259052, 5],&#xD;&#xA;	      ['Cronulla Beach', -34.028249, 151.157507, 3],&#xD;&#xA;	      ['Manly Beach', -33.80010128657071, 151.28747820854187, 2],&#xD;&#xA;	      ['Maroubra Beach', -33.950198, 151.259302, 1]&#xD;&#xA;	    ];&#xD;&#xA;	&#xD;&#xA;	    var map = new google.maps.Map(document.getElementById('map'), {&#xD;&#xA;	      zoom: 10,&#xD;&#xA;	      center: new google.maps.LatLng(-33.92, 151.25),&#xD;&#xA;	      mapTypeId: google.maps.MapTypeId.ROADMAP&#xD;&#xA;	    });&#xD;&#xA;	&#xD;&#xA;		    var infowindow = new google.maps.InfoWindow();	&#xD;&#xA;	&#xD;&#xA;	    var marker, i;&#xD;&#xA;	&#xD;&#xA;		    for (i = 0; i < locations.length; i++) {  &#xD;&#xA;	      marker = new google.maps.Marker({&#xD;&#xA;	        position: new google.maps.LatLng(locations[i][1], locations[i][2]),&#xD;&#xA;	        map: map&#xD;&#xA;	      });&#xD;&#xA;	&#xD;&#xA;	      google.maps.event.addListener(marker, 'click', (function(marker, i) {&#xD;&#xA;	        return function() {&#xD;&#xA;	          infowindow.setContent(locations[i][0]);&#xD;&#xA;	          infowindow.open(map, marker);&#xD;&#xA;	        }&#xD;&#xA;	      })(marker, i));&#xD;&#xA;	    }&#xD;&#xA;	  </script>&#xD;&#xA;	</body>&#xD;&#xA;	</html>"
-8646903668668004088,47,12,"	import java.io.File;&#xD;&#xA;	import java.io.IOException;&#xD;&#xA;	import mf.javax.xml.transform.Source;&#xD;&#xA;	import mf.javax.xml.transform.stream.StreamSource;&#xD;&#xA;	import mf.javax.xml.validation.Schema;&#xD;&#xA;	import mf.javax.xml.validation.SchemaFactory;&#xD;&#xA;	import mf.javax.xml.validation.Validator;&#xD;&#xA;	import mf.org.apache.xerces.jaxp.validation.XMLSchemaFactory;&#xD;&#xA;	import org.xml.sax.SAXException;&#xD;&#xA;	/**&#xD;&#xA;	 * A Utility to help with xml communication validation.&#xD;&#xA;	 */public class XmlUtil {&#xD;&#xA;		/**&#xD;&#xA;		 * Validation method. &#xD;&#xA;		 * &#xD;&#xA;		 * @param xmlFilePath The xml file we are trying to validate.&#xD;&#xA;		 * @param xmlSchemaFilePath The schema file we are using for the validation. This method assumes the schema file is valid.&#xD;&#xA;		 * @return True if valid, false if not valid or bad parse or exception/error during parse. &#xD;&#xA;		 */&#xD;&#xA;		public static boolean validate(String xmlFilePath, String xmlSchemaFilePath) {&#xD;&#xA;			&#xD;&#xA;			// Try the validation, we assume that if there are any issues with the validation&#xD;&#xA;			// process that the input is invalid.&#xD;&#xA;			try {&#xD;&#xA;				SchemaFactory  factory = new XMLSchemaFactory();&#xD;&#xA;				Source schemaFile = new StreamSource(new File(xmlSchemaFilePath));&#xD;&#xA;				Source xmlSource = new StreamSource(new File(xmlFilePath));&#xD;&#xA;				Schema schema = factory.newSchema(schemaFile);&#xD;&#xA;				Validator validator = schema.newValidator();&#xD;&#xA;				validator.validate(xmlSource);&#xD;&#xA;			} catch (SAXException e) {&#xD;&#xA;				return false;&#xD;&#xA;			} catch (IOException e) {&#xD;&#xA;				return false;&#xD;&#xA;			} catch (Exception e) {&#xD;&#xA;				// Catches everything beyond: SAXException, and IOException.&#xD;&#xA;				e.printStackTrace();&#xD;&#xA;				return false;&#xD;&#xA;			} catch (Error e) {&#xD;&#xA;				// Needed this for debugging when I was having issues with my 1st set of code.&#xD;&#xA;				e.printStackTrace();&#xD;&#xA;				return false;&#xD;&#xA;			}&#xD;&#xA;			&#xD;&#xA;			return true;&#xD;&#xA;		}&#xD;&#xA;	}"
-1615581821004062709,55,12,"    .switch {&#xD;&#xA;        position: relative;&#xD;&#xA;        display: inline-block;&#xD;&#xA;        width: 60px;&#xD;&#xA;        height: 34px;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .switch input {display:none;}&#xD;&#xA;    &#xD;&#xA;    .slider {&#xD;&#xA;        position: absolute;&#xD;&#xA;        cursor: pointer;&#xD;&#xA;        top: 0;&#xD;&#xA;        left: 0;&#xD;&#xA;        right: 0;&#xD;&#xA;        bottom: 0;&#xD;&#xA;        background-color: #ccc;&#xD;&#xA;        -webkit-transition: .4s;&#xD;&#xA;        transition: .4s;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .slider:before {&#xD;&#xA;        position: absolute;&#xD;&#xA;        content: """";&#xD;&#xA;        height: 26px;&#xD;&#xA;        width: 26px;&#xD;&#xA;        left: 4px;&#xD;&#xA;        bottom: 4px;&#xD;&#xA;        background-color: white;&#xD;&#xA;        -webkit-transition: .4s;&#xD;&#xA;        transition: .4s;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    input:checked + .slider {&#xD;&#xA;        background-color: #2196F3;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    input:focus + .slider {&#xD;&#xA;        box-shadow: 0 0 1px #2196F3;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    input:checked + .slider:before {&#xD;&#xA;        -webkit-transform: translateX(26px);&#xD;&#xA;        -ms-transform: translateX(26px);&#xD;&#xA;        transform: translateX(26px);&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    /* Rounded sliders */&#xD;&#xA;    .slider.round {&#xD;&#xA;        border-radius: 34px;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .slider.round:before {&#xD;&#xA;        border-radius: 50%;&#xD;&#xA;    }"
3898449443350863010,58,12,"      //---sends an SMS message to another device---&#xD;&#xA;      private void sendSMS(String phoneNumber, String message) {&#xD;&#xA;          String SENT = ""SMS_SENT"";&#xD;&#xA;          String DELIVERED = ""SMS_DELIVERED"";&#xD;&#xA;    &#xD;&#xA;          PendingIntent sentPI = PendingIntent.getBroadcast(this, 0,&#xD;&#xA;          new Intent(SENT), 0);&#xD;&#xA;    &#xD;&#xA;          PendingIntent deliveredPI = PendingIntent.getBroadcast(this, 0,&#xD;&#xA;          new Intent(DELIVERED), 0);&#xD;&#xA;    &#xD;&#xA;          //---when the SMS has been sent---&#xD;&#xA;          registerReceiver(new BroadcastReceiver() {@Override&#xD;&#xA;              public void onReceive(Context arg0, Intent arg1) {&#xD;&#xA;                  switch (getResultCode()) {&#xD;&#xA;                      case Activity.RESULT_OK:&#xD;&#xA;                          Toast.makeText(getBaseContext(), ""SMS sent"",&#xD;&#xA;                          Toast.LENGTH_SHORT).show();&#xD;&#xA;                          break;&#xD;&#xA;                      case SmsManager.RESULT_ERROR_GENERIC_FAILURE:&#xD;&#xA;                          Toast.makeText(getBaseContext(), ""Generic failure"",&#xD;&#xA;                          Toast.LENGTH_SHORT).show();&#xD;&#xA;                          break;&#xD;&#xA;                      case SmsManager.RESULT_ERROR_NO_SERVICE:&#xD;&#xA;                          Toast.makeText(getBaseContext(), ""No service"",&#xD;&#xA;                          Toast.LENGTH_SHORT).show();&#xD;&#xA;                          break;&#xD;&#xA;                      case SmsManager.RESULT_ERROR_NULL_PDU:&#xD;&#xA;                          Toast.makeText(getBaseContext(), ""Null PDU"",&#xD;&#xA;                          Toast.LENGTH_SHORT).show();&#xD;&#xA;                          break;&#xD;&#xA;                      case SmsManager.RESULT_ERROR_RADIO_OFF:&#xD;&#xA;                          Toast.makeText(getBaseContext(), ""Radio off"",&#xD;&#xA;                          Toast.LENGTH_SHORT).show();&#xD;&#xA;                          break;&#xD;&#xA;                  }&#xD;&#xA;              }&#xD;&#xA;          }, new IntentFilter(SENT));&#xD;&#xA;    &#xD;&#xA;          //---when the SMS has been delivered---&#xD;&#xA;          registerReceiver(new BroadcastReceiver() {@Override&#xD;&#xA;              public void onReceive(Context arg0, Intent arg1) {&#xD;&#xA;                  switch (getResultCode()) {&#xD;&#xA;                      case Activity.RESULT_OK:&#xD;&#xA;                          Toast.makeText(getBaseContext(), ""SMS delivered"",&#xD;&#xA;                          Toast.LENGTH_SHORT).show();&#xD;&#xA;                          break;&#xD;&#xA;                      case Activity.RESULT_CANCELED:&#xD;&#xA;                          Toast.makeText(getBaseContext(), ""SMS not delivered"",&#xD;&#xA;                          Toast.LENGTH_SHORT).show();&#xD;&#xA;                          break;&#xD;&#xA;                  }&#xD;&#xA;              }&#xD;&#xA;          }, new IntentFilter(DELIVERED));&#xD;&#xA;    &#xD;&#xA;          SmsManager sms = SmsManager.getDefault();&#xD;&#xA;          sms.sendTextMessage(phoneNumber, null, message, sentPI, deliveredPI);&#xD;&#xA;      } "
729890472680266984,58,12,"                <nav class=""navbar navbar-default"">&#xD;&#xA;               <div class=""container-fluid"">&#xD;&#xA;               <!-- Brand and toggle get grouped for better mobile display -->&#xD;&#xA;              <div class=""navbar-header"">&#xD;&#xA;              <button type=""button"" class=""navbar-toggle collapsed"" data-     &#xD;&#xA;              toggle=""collapse"" data-target=""#bs-example-navbar-collapse-1""   &#xD;&#xA;             aria-expanded=""false"">&#xD;&#xA;        <span class=""sr-only"">Toggle navigation</span>&#xD;&#xA;        <span class=""icon-bar""></span>&#xD;&#xA;        <span class=""icon-bar""></span>&#xD;&#xA;        <span class=""icon-bar""></span>&#xD;&#xA;      </button>&#xD;&#xA;      <a class=""navbar-brand"" href=""#"">Brand</a>&#xD;&#xA;    </div>&#xD;&#xA;    <!-- Collect the nav links, forms, and other content for toggling -->&#xD;&#xA;    <div class=""collapse navbar-collapse"" id=""bs-example-navbar-collapse-1"">&#xD;&#xA;      <ul class=""nav navbar-nav"">&#xD;&#xA;        <li class=""active""><a href=""#"">Link <span class=""sr-only"">(current)</span></a></li>&#xD;&#xA;        <li><a href=""#"">Link</a></li>&#xD;&#xA;        <li class=""dropdown"">&#xD;&#xA;          <a href=""#"" class=""dropdown-toggle"" data-toggle=""dropdown""    &#xD;&#xA;         role=""button"" aria-haspopup=""true"" aria-expanded=""false"">Dropdown <span  &#xD;&#xA;          class=""caret""></span></a>&#xD;&#xA;          <ul class=""dropdown-menu"">&#xD;&#xA;            <li><a href=""#"">Action</a></li>&#xD;&#xA;            <li><a href=""#"">Another action</a></li>&#xD;&#xA;            <li><a href=""#"">Something else here</a></li>&#xD;&#xA;            <li role=""separator"" class=""divider""></li>&#xD;&#xA;            <li><a href=""#"">Separated link</a></li>&#xD;&#xA;            <li role=""separator"" class=""divider""></li>&#xD;&#xA;            <li><a href=""#"">One more separated link</a></li>&#xD;&#xA;          </ul>&#xD;&#xA;        </li>&#xD;&#xA;      </ul>&#xD;&#xA;      <form class=""navbar-form navbar-left"" role=""search"">&#xD;&#xA;        <div class=""form-group"">&#xD;&#xA;          <input type=""text"" class=""form-control"" placeholder=""Search"">&#xD;&#xA;        </div>&#xD;&#xA;        <button type=""submit"" class=""btn btn-default"">Submit</button>&#xD;&#xA;      </form>&#xD;&#xA;      <ul class=""nav navbar-nav navbar-right"">&#xD;&#xA;        <li><a href=""#"">Link</a></li>&#xD;&#xA;        <li class=""dropdown"">&#xD;&#xA;          <a href=""#"" class=""dropdown-toggle"" data-toggle=""dropdown""   &#xD;&#xA;         role=""button"" aria-haspopup=""true"" aria-expanded=""false"">Dropdown <span &#xD;&#xA;           class=""caret""></span></a>&#xD;&#xA;          <ul class=""dropdown-menu"">&#xD;&#xA;            <li><a href=""#"">Action</a></li>&#xD;&#xA;            <li><a href=""#"">Another action</a></li>&#xD;&#xA;            <li><a href=""#"">Something else here</a></li>&#xD;&#xA;            <li role=""separator"" class=""divider""></li>&#xD;&#xA;            <li><a href=""#"">Separated link</a></li>&#xD;&#xA;          </ul>&#xD;&#xA;               </li>&#xD;&#xA;              </ul>&#xD;&#xA;            </div><!-- /.navbar-collapse -->&#xD;&#xA;              </div><!-- /.container-fluid -->&#xD;&#xA;              </nav>"
-7840579383099964643,58,12,"    import java.io.File;&#xD;&#xA;    &#xD;&#xA;    import javax.xml.XMLConstants;&#xD;&#xA;    import javax.xml.parsers.DocumentBuilder;&#xD;&#xA;    import javax.xml.parsers.DocumentBuilderFactory;&#xD;&#xA;    import javax.xml.transform.Source;&#xD;&#xA;    import javax.xml.transform.dom.DOMSource;&#xD;&#xA;    import javax.xml.transform.stream.StreamSource;&#xD;&#xA;    import javax.xml.validation.Schema;&#xD;&#xA;    import javax.xml.validation.SchemaFactory;&#xD;&#xA;    import javax.xml.validation.Validator;&#xD;&#xA;    &#xD;&#xA;    import org.w3c.dom.Document;&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * A Utility to help with xml communication validation.&#xD;&#xA;     */&#xD;&#xA;    public class XmlUtil {&#xD;&#xA;    &#xD;&#xA;    	/**&#xD;&#xA;    	 * Validation method. &#xD;&#xA;    	 * Base code/example from: http://docs.oracle.com/javase/1.5.0/docs/api/javax/xml/validation/package-summary.html&#xD;&#xA;    	 * &#xD;&#xA;    	 * @param xmlFilePath The xml file we are trying to validate.&#xD;&#xA;    	 * @param xmlSchemaFilePath The schema file we are using for the validation. This method assumes the schema file is valid.&#xD;&#xA;    	 * @return True if valid, false if not valid or bad parse. &#xD;&#xA;    	 */&#xD;&#xA;    	public static boolean validate(String xmlFilePath, String xmlSchemaFilePath) {&#xD;&#xA;    		&#xD;&#xA;    	    // parse an XML document into a DOM tree&#xD;&#xA;    	    DocumentBuilder parser = null;&#xD;&#xA;    	    Document document;&#xD;&#xA;    &#xD;&#xA;    	    // Try the validation, we assume that if there are any issues with the validation&#xD;&#xA;    	    // process that the input is invalid.&#xD;&#xA;    	    try {&#xD;&#xA;    		    // validate the DOM tree&#xD;&#xA;    			parser = DocumentBuilderFactory.newInstance().newDocumentBuilder();&#xD;&#xA;    			document = parser.parse(new File(xmlFilePath));&#xD;&#xA;    			&#xD;&#xA;    			// create a SchemaFactory capable of understanding WXS schemas&#xD;&#xA;    		    SchemaFactory factory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);&#xD;&#xA;    &#xD;&#xA;    		    // load a WXS schema, represented by a Schema instance&#xD;&#xA;    		    Source schemaFile = new StreamSource(new File(xmlSchemaFilePath));&#xD;&#xA;    		    Schema schema = factory.newSchema(schemaFile);&#xD;&#xA;    &#xD;&#xA;    		    // create a Validator instance, which can be used to validate an instance document&#xD;&#xA;    		    Validator validator = schema.newValidator();&#xD;&#xA;    	    	validator.validate(new DOMSource(document));&#xD;&#xA;    	    } catch (Exception e) {&#xD;&#xA;    			// Catches: SAXException, ParserConfigurationException, and IOException.&#xD;&#xA;    	    	return false;&#xD;&#xA;    		}     &#xD;&#xA;    	    &#xD;&#xA;    	    return true;&#xD;&#xA;    	}&#xD;&#xA;    }"
1966019011790069011,62,12,"	import java.io.IOException;&#xD;&#xA;	import java.util.StringTokenizer;&#xD;&#xA;	import org.apache.hadoop.conf.Configuration;&#xD;&#xA;	import org.apache.hadoop.fs.Path;&#xD;&#xA;	import org.apache.hadoop.io.IntWritable;&#xD;&#xA;	import org.apache.hadoop.io.Text;&#xD;&#xA;	import org.apache.hadoop.mapreduce.Job;&#xD;&#xA;	import org.apache.hadoop.mapreduce.Mapper;&#xD;&#xA;	import org.apache.hadoop.mapreduce.Reducer;&#xD;&#xA;	import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;&#xD;&#xA;	import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;&#xD;&#xA;	public class WordCount {&#xD;&#xA;	   public static class TokenizerMapper extends Mapper<Object, Text, Text, IntWritable>&#xD;&#xA;	   {&#xD;&#xA;		  private final static IntWritable one = new IntWritable(1);&#xD;&#xA;		  private Text word = new Text();&#xD;&#xA;		  &#xD;&#xA;		  public void map(Object key, Text value, Context context) throws IOException, InterruptedException &#xD;&#xA;		  {&#xD;&#xA;			 StringTokenizer itr = new StringTokenizer(value.toString());&#xD;&#xA;			 while (itr.hasMoreTokens()) &#xD;&#xA;			 {&#xD;&#xA;				word.set(itr.nextToken());&#xD;&#xA;				context.write(word, one);&#xD;&#xA;			 }&#xD;&#xA;		  }&#xD;&#xA;	   }&#xD;&#xA;	   &#xD;&#xA;	   public static class IntSumReducer extends Reducer<Text,IntWritable,Text,IntWritable> &#xD;&#xA;	   {&#xD;&#xA;		  private IntWritable result = new IntWritable();&#xD;&#xA;		  public void reduce(Text key, Iterable<IntWritable> values, Context context) throws IOException, InterruptedException &#xD;&#xA;		  {&#xD;&#xA;			 int sum = 0;&#xD;&#xA;			 for (IntWritable val : values) &#xD;&#xA;			 {&#xD;&#xA;				sum += val.get();&#xD;&#xA;			 }&#xD;&#xA;			 result.set(sum);&#xD;&#xA;			 context.write(key, result);&#xD;&#xA;		  }&#xD;&#xA;	   }&#xD;&#xA;	   &#xD;&#xA;	   public static void main(String[] args) throws Exception &#xD;&#xA;	   {&#xD;&#xA;		  Configuration conf = new Configuration();&#xD;&#xA;		  Job job = Job.getInstance(conf, ""word count"");&#xD;&#xA;			&#xD;&#xA;		  job.setJarByClass(WordCount.class);&#xD;&#xA;		  job.setMapperClass(TokenizerMapper.class);&#xD;&#xA;		  job.setCombinerClass(IntSumReducer.class);&#xD;&#xA;		  job.setReducerClass(IntSumReducer.class);&#xD;&#xA;			&#xD;&#xA;		  job.setOutputKeyClass(Text.class);&#xD;&#xA;		  job.setOutputValueClass(IntWritable.class);&#xD;&#xA;			&#xD;&#xA;		  FileInputFormat.addInputPath(job, new Path(args[0]));&#xD;&#xA;		  FileOutputFormat.setOutputPath(job, new Path(args[1]));&#xD;&#xA;			&#xD;&#xA;		  System.exit(job.waitForCompletion(true) ? 0 : 1);&#xD;&#xA;	   }&#xD;&#xA;	}"
6737965886511205011,69,12,"     <section class="""">&#xD;&#xA;          <div class=""container"">&#xD;&#xA;            <table>&#xD;&#xA;              <thead>&#xD;&#xA;                <tr class=""header"">&#xD;&#xA;                  <th>&#xD;&#xA;                    Table attribute name&#xD;&#xA;                    <div>Table attribute name</div>&#xD;&#xA;                  </th>&#xD;&#xA;                  <th>&#xD;&#xA;                    Value&#xD;&#xA;                    <div>Value</div>&#xD;&#xA;                  </th>&#xD;&#xA;                  <th>&#xD;&#xA;                    Description&#xD;&#xA;                    <div>Description</div>&#xD;&#xA;                  </th>&#xD;&#xA;                </tr>&#xD;&#xA;              </thead>&#xD;&#xA;              <tbody>&#xD;&#xA;                <tr>&#xD;&#xA;                  <td>align</td>&#xD;&#xA;                  <td>left, center, right</td>&#xD;&#xA;                  <td>Not supported in HTML5. Deprecated in HTML 4.01. Specifies the alignment of a table according to surrounding text</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                  <td>bgcolor</td>&#xD;&#xA;                  <td>rgb(x,x,x), #xxxxxx, colorname</td>&#xD;&#xA;                  <td>Not supported in HTML5. Deprecated in HTML 4.01. Specifies the background color for a table</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                  <td>border</td>&#xD;&#xA;                  <td>1,""""</td>&#xD;&#xA;                  <td>Specifies whether the table cells should have borders or not</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                  <td>cellpadding</td>&#xD;&#xA;                  <td>pixels</td>&#xD;&#xA;                  <td>Not supported in HTML5. Specifies the space between the cell wall and the cell content</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                  <td>cellspacing</td>&#xD;&#xA;                  <td>pixels</td>&#xD;&#xA;                  <td>Not supported in HTML5. Specifies the space between cells</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                  <td>frame</td>&#xD;&#xA;                  <td>void, above, below, hsides, lhs, rhs, vsides, box, border</td>&#xD;&#xA;                  <td>Not supported in HTML5. Specifies which parts of the outside borders that should be visible</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                  <td>rules</td>&#xD;&#xA;                  <td>none, groups, rows, cols, all</td>&#xD;&#xA;                  <td>Not supported in HTML5. Specifies which parts of the inside borders that should be visible</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                  <td>summary</td>&#xD;&#xA;                  <td>text</td>&#xD;&#xA;                  <td>Not supported in HTML5. Specifies a summary of the content of a table</td>&#xD;&#xA;                </tr>&#xD;&#xA;                <tr>&#xD;&#xA;                  <td>width</td>&#xD;&#xA;                  <td>pixels, %</td>&#xD;&#xA;                  <td>Not supported in HTML5. Specifies the width of a table</td>&#xD;&#xA;                </tr>&#xD;&#xA;              </tbody>&#xD;&#xA;            </table>&#xD;&#xA;          </div>&#xD;&#xA;        </section>"
-2125346407208814319,380,12,"        {&#xD;&#xA;     ""name"": ""flare"",&#xD;&#xA;     ""children"": [&#xD;&#xA;      {&#xD;&#xA;       ""name"": ""analytics"",&#xD;&#xA;       ""children"": [&#xD;&#xA;        {&#xD;&#xA;         ""name"": ""cluster"",&#xD;&#xA;         ""children"": [&#xD;&#xA;          {""name"": ""AgglomerativeCluster"", ""size"": 3938},&#xD;&#xA;          {""name"": ""CommunityStructure"", ""size"": 3812},&#xD;&#xA;          {""name"": ""HierarchicalCluster"", ""size"": 6714},&#xD;&#xA;          {""name"": ""MergeEdge"", ""size"": 743}&#xD;&#xA;         ]&#xD;&#xA;        },&#xD;&#xA;        {&#xD;&#xA;         ""name"": ""graph"",&#xD;&#xA;         ""children"": [&#xD;&#xA;          {""name"": ""BetweennessCentrality"", ""size"": 3534},&#xD;&#xA;          {""name"": ""LinkDistance"", ""size"": 5731},&#xD;&#xA;          {""name"": ""MaxFlowMinCut"", ""size"": 7840},&#xD;&#xA;          {""name"": ""ShortestPaths"", ""size"": 5914},&#xD;&#xA;          {""name"": ""SpanningTree"", ""size"": 3416}&#xD;&#xA;         ]&#xD;&#xA;        },&#xD;&#xA;        {&#xD;&#xA;         ""name"": ""optimization"",&#xD;&#xA;         ""children"": [&#xD;&#xA;          {""name"": ""AspectRatioBanker"", ""size"": 7074}&#xD;&#xA;         ]&#xD;&#xA;        }&#xD;&#xA;       ]&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;       ""name"": ""animate"",&#xD;&#xA;       ""children"": [&#xD;&#xA;        {""name"": ""Easing"", ""size"": 17010},&#xD;&#xA;        {""name"": ""FunctionSequence"", ""size"": 5842},&#xD;&#xA;        {&#xD;&#xA;         ""name"": ""interpolate"",&#xD;&#xA;         ""children"": [&#xD;&#xA;          {""name"": ""ArrayInterpolator"", ""size"": 1983},&#xD;&#xA;          {""name"": ""ColorInterpolator"", ""size"": 2047},&#xD;&#xA;          {""name"": ""DateInterpolator"", ""size"": 1375},&#xD;&#xA;          {""name"": ""Interpolator"", ""size"": 8746},&#xD;&#xA;          {""name"": ""MatrixInterpolator"", ""size"": 2202},&#xD;&#xA;          {""name"": ""NumberInterpolator"", ""size"": 1382},&#xD;&#xA;          {""name"": ""ObjectInterpolator"", ""size"": 1629},&#xD;&#xA;          {""name"": ""PointInterpolator"", ""size"": 1675},&#xD;&#xA;          {""name"": ""RectangleInterpolator"", ""size"": 2042}&#xD;&#xA;         ]&#xD;&#xA;        },&#xD;&#xA;        {""name"": ""ISchedulable"", ""size"": 1041},&#xD;&#xA;        {""name"": ""Parallel"", ""size"": 5176},&#xD;&#xA;        {""name"": ""Pause"", ""size"": 449},&#xD;&#xA;        {""name"": ""Scheduler"", ""size"": 5593},&#xD;&#xA;        {""name"": ""Sequence"", ""size"": 5534},&#xD;&#xA;        {""name"": ""Transition"", ""size"": 9201},&#xD;&#xA;        {""name"": ""Transitioner"", ""size"": 19975},&#xD;&#xA;        {""name"": ""TransitionEvent"", ""size"": 1116},&#xD;&#xA;        {""name"": ""Tween"", ""size"": 6006}&#xD;&#xA;       ]&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;       ""name"": ""data"",&#xD;&#xA;       ""children"": [&#xD;&#xA;        {&#xD;&#xA;         ""name"": ""converters"",&#xD;&#xA;         ""children"": [&#xD;&#xA;          {""name"": ""Converters"", ""size"": 721},&#xD;&#xA;          {""name"": ""DelimitedTextConverter"", ""size"": 4294},&#xD;&#xA;          {""name"": ""GraphMLConverter"", ""size"": 9800},&#xD;&#xA;          {""name"": ""IDataConverter"", ""size"": 1314},&#xD;&#xA;          {""name"": ""JSONConverter"", ""size"": 2220}&#xD;&#xA;         ]&#xD;&#xA;        },&#xD;&#xA;        {""name"": ""DataField"", ""size"": 1759},&#xD;&#xA;        {""name"": ""DataSchema"", ""size"": 2165},&#xD;&#xA;        {""name"": ""DataSet"", ""size"": 586},&#xD;&#xA;        {""name"": ""DataSource"", ""size"": 3331},&#xD;&#xA;        {""name"": ""DataTable"", ""size"": 772},&#xD;&#xA;        {""name"": ""DataUtil"", ""size"": 3322}&#xD;&#xA;       ]&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;       ""name"": ""display"",&#xD;&#xA;       ""children"": [&#xD;&#xA;        {""name"": ""DirtySprite"", ""size"": 8833},&#xD;&#xA;        {""name"": ""LineSprite"", ""size"": 1732},&#xD;&#xA;        {""name"": ""RectSprite"", ""size"": 3623},&#xD;&#xA;        {""name"": ""TextSprite"", ""size"": 10066}&#xD;&#xA;       ]&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;       ""name"": ""flex"",&#xD;&#xA;       ""children"": [&#xD;&#xA;        {""name"": ""FlareVis"", ""size"": 4116}&#xD;&#xA;       ]&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;       ""name"": ""physics"",&#xD;&#xA;       ""children"": [&#xD;&#xA;        {""name"": ""DragForce"", ""size"": 1082},&#xD;&#xA;        {""name"": ""GravityForce"", ""size"": 1336},&#xD;&#xA;        {""name"": ""IForce"", ""size"": 319},&#xD;&#xA;        {""name"": ""NBodyForce"", ""size"": 10498},&#xD;&#xA;        {""name"": ""Particle"", ""size"": 2822},&#xD;&#xA;        {""name"": ""Simulation"", ""size"": 9983},&#xD;&#xA;        {""name"": ""Spring"", ""size"": 2213},&#xD;&#xA;        {""name"": ""SpringForce"", ""size"": 1681}&#xD;&#xA;       ]&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;       ""name"": ""query"",&#xD;&#xA;       ""children"": [&#xD;&#xA;        {""name"": ""AggregateExpression"", ""size"": 1616},&#xD;&#xA;        {""name"": ""And"", ""size"": 1027},&#xD;&#xA;        {""name"": ""Arithmetic"", ""size"": 3891},&#xD;&#xA;        {""name"": ""Average"", ""size"": 891},&#xD;&#xA;        {""name"": ""BinaryExpression"", ""size"": 2893},&#xD;&#xA;        {""name"": ""Comparison"", ""size"": 5103},&#xD;&#xA;        {""name"": ""CompositeExpression"", ""size"": 3677},&#xD;&#xA;        {""name"": ""Count"", ""size"": 781},&#xD;&#xA;        {""name"": ""DateUtil"", ""size"": 4141},&#xD;&#xA;        {""name"": ""Distinct"", ""size"": 933},&#xD;&#xA;        {""name"": ""Expression"", ""size"": 5130},&#xD;&#xA;        {""name"": ""ExpressionIterator"", ""size"": 3617},&#xD;&#xA;        {""name"": ""Fn"", ""size"": 3240},&#xD;&#xA;        {""name"": ""If"", ""size"": 2732},&#xD;&#xA;        {""name"": ""IsA"", ""size"": 2039},&#xD;&#xA;        {""name"": ""Literal"", ""size"": 1214},&#xD;&#xA;        {""name"": ""Match"", ""size"": 3748},&#xD;&#xA;        {""name"": ""Maximum"", ""size"": 843},&#xD;&#xA;        {&#xD;&#xA;         ""name"": ""methods"",&#xD;&#xA;         ""children"": [&#xD;&#xA;          {""name"": ""add"", ""size"": 593},&#xD;&#xA;          {""name"": ""and"", ""size"": 330},&#xD;&#xA;          {""name"": ""average"", ""size"": 287},&#xD;&#xA;          {""name"": ""count"", ""size"": 277},&#xD;&#xA;          {""name"": ""distinct"", ""size"": 292},&#xD;&#xA;          {""name"": ""div"", ""size"": 595},&#xD;&#xA;          {""name"": ""eq"", ""size"": 594},&#xD;&#xA;          {""name"": ""fn"", ""size"": 460},&#xD;&#xA;          {""name"": ""gt"", ""size"": 603},&#xD;&#xA;          {""name"": ""gte"", ""size"": 625},&#xD;&#xA;          {""name"": ""iff"", ""size"": 748},&#xD;&#xA;          {""name"": ""isa"", ""size"": 461},&#xD;&#xA;          {""name"": ""lt"", ""size"": 597},&#xD;&#xA;          {""name"": ""lte"", ""size"": 619},&#xD;&#xA;          {""name"": ""max"", ""size"": 283},&#xD;&#xA;          {""name"": ""min"", ""size"": 283},&#xD;&#xA;          {""name"": ""mod"", ""size"": 591},&#xD;&#xA;          {""name"": ""mul"", ""size"": 603},&#xD;&#xA;          {""name"": ""neq"", ""size"": 599},&#xD;&#xA;          {""name"": ""not"", ""size"": 386},&#xD;&#xA;          {""name"": ""or"", ""size"": 323},&#xD;&#xA;          {""name"": ""orderby"", ""size"": 307},&#xD;&#xA;          {""name"": ""range"", ""size"": 772},&#xD;&#xA;          {""name"": ""select"", ""size"": 296},&#xD;&#xA;          {""name"": ""stddev"", ""size"": 363},&#xD;&#xA;          {""name"": ""sub"", ""size"": 600},&#xD;&#xA;          {""name"": ""sum"", ""size"": 280},&#xD;&#xA;          {""name"": ""update"", ""size"": 307},&#xD;&#xA;          {""name"": ""variance"", ""size"": 335},&#xD;&#xA;          {""name"": ""where"", ""size"": 299},&#xD;&#xA;          {""name"": ""xor"", ""size"": 354},&#xD;&#xA;          {""name"": ""_"", ""size"": 264}&#xD;&#xA;         ]&#xD;&#xA;        },&#xD;&#xA;        {""name"": ""Minimum"", ""size"": 843},&#xD;&#xA;        {""name"": ""Not"", ""size"": 1554},&#xD;&#xA;        {""name"": ""Or"", ""size"": 970},&#xD;&#xA;        {""name"": ""Query"", ""size"": 13896},&#xD;&#xA;        {""name"": ""Range"", ""size"": 1594},&#xD;&#xA;        {""name"": ""StringUtil"", ""size"": 4130},&#xD;&#xA;        {""name"": ""Sum"", ""size"": 791},&#xD;&#xA;        {""name"": ""Variable"", ""size"": 1124},&#xD;&#xA;        {""name"": ""Variance"", ""size"": 1876},&#xD;&#xA;        {""name"": ""Xor"", ""size"": 1101}&#xD;&#xA;       ]&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;       ""name"": ""scale"",&#xD;&#xA;       ""children"": [&#xD;&#xA;        {""name"": ""IScaleMap"", ""size"": 2105},&#xD;&#xA;        {""name"": ""LinearScale"", ""size"": 1316},&#xD;&#xA;        {""name"": ""LogScale"", ""size"": 3151},&#xD;&#xA;        {""name"": ""OrdinalScale"", ""size"": 3770},&#xD;&#xA;        {""name"": ""QuantileScale"", ""size"": 2435},&#xD;&#xA;        {""name"": ""QuantitativeScale"", ""size"": 4839},&#xD;&#xA;        {""name"": ""RootScale"", ""size"": 1756},&#xD;&#xA;        {""name"": ""Scale"", ""size"": 4268},&#xD;&#xA;        {""name"": ""ScaleType"", ""size"": 1821},&#xD;&#xA;        {""name"": ""TimeScale"", ""size"": 5833}&#xD;&#xA;       ]&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;       ""name"": ""util"",&#xD;&#xA;       ""children"": [&#xD;&#xA;        {""name"": ""Arrays"", ""size"": 8258},&#xD;&#xA;        {""name"": ""Colors"", ""size"": 10001},&#xD;&#xA;        {""name"": ""Dates"", ""size"": 8217},&#xD;&#xA;        {""name"": ""Displays"", ""size"": 12555},&#xD;&#xA;        {""name"": ""Filter"", ""size"": 2324},&#xD;&#xA;        {""name"": ""Geometry"", ""size"": 10993},&#xD;&#xA;        {&#xD;&#xA;         ""name"": ""heap"",&#xD;&#xA;         ""children"": [&#xD;&#xA;          {""name"": ""FibonacciHeap"", ""size"": 9354},&#xD;&#xA;          {""name"": ""HeapNode"", ""size"": 1233}&#xD;&#xA;         ]&#xD;&#xA;        },&#xD;&#xA;        {""name"": ""IEvaluable"", ""size"": 335},&#xD;&#xA;        {""name"": ""IPredicate"", ""size"": 383},&#xD;&#xA;        {""name"": ""IValueProxy"", ""size"": 874},&#xD;&#xA;        {&#xD;&#xA;         ""name"": ""math"",&#xD;&#xA;         ""children"": [&#xD;&#xA;          {""name"": ""DenseMatrix"", ""size"": 3165},&#xD;&#xA;          {""name"": ""IMatrix"", ""size"": 2815},&#xD;&#xA;          {""name"": ""SparseMatrix"", ""size"": 3366}&#xD;&#xA;         ]&#xD;&#xA;        },&#xD;&#xA;        {""name"": ""Maths"", ""size"": 17705},&#xD;&#xA;        {""name"": ""Orientation"", ""size"": 1486},&#xD;&#xA;        {&#xD;&#xA;         ""name"": ""palette"",&#xD;&#xA;         ""children"": [&#xD;&#xA;          {""name"": ""ColorPalette"", ""size"": 6367},&#xD;&#xA;          {""name"": ""Palette"", ""size"": 1229},&#xD;&#xA;          {""name"": ""ShapePalette"", ""size"": 2059},&#xD;&#xA;          {""name"": ""SizePalette"", ""size"": 2291}&#xD;&#xA;         ]&#xD;&#xA;        },&#xD;&#xA;        {""name"": ""Property"", ""size"": 5559},&#xD;&#xA;        {""name"": ""Shapes"", ""size"": 19118},&#xD;&#xA;        {""name"": ""Sort"", ""size"": 6887},&#xD;&#xA;        {""name"": ""Stats"", ""size"": 6557},&#xD;&#xA;        {""name"": ""Strings"", ""size"": 22026}&#xD;&#xA;       ]&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;       ""name"": ""vis"",&#xD;&#xA;       ""children"": [&#xD;&#xA;        {&#xD;&#xA;         ""name"": ""axis"",&#xD;&#xA;         ""children"": [&#xD;&#xA;          {""name"": ""Axes"", ""size"": 1302},&#xD;&#xA;          {""name"": ""Axis"", ""size"": 24593},&#xD;&#xA;          {""name"": ""AxisGridLine"", ""size"": 652},&#xD;&#xA;          {""name"": ""AxisLabel"", ""size"": 636},&#xD;&#xA;          {""name"": ""CartesianAxes"", ""size"": 6703}&#xD;&#xA;         ]&#xD;&#xA;        },&#xD;&#xA;        {&#xD;&#xA;         ""name"": ""controls"",&#xD;&#xA;         ""children"": [&#xD;&#xA;          {""name"": ""AnchorControl"", ""size"": 2138},&#xD;&#xA;          {""name"": ""ClickControl"", ""size"": 3824},&#xD;&#xA;          {""name"": ""Control"", ""size"": 1353},&#xD;&#xA;          {""name"": ""ControlList"", ""size"": 4665},&#xD;&#xA;          {""name"": ""DragControl"", ""size"": 2649},&#xD;&#xA;          {""name"": ""ExpandControl"", ""size"": 2832},&#xD;&#xA;          {""name"": ""HoverControl"", ""size"": 4896},&#xD;&#xA;          {""name"": ""IControl"", ""size"": 763},&#xD;&#xA;          {""name"": ""PanZoomControl"", ""size"": 5222},&#xD;&#xA;          {""name"": ""SelectionControl"", ""size"": 7862},&#xD;&#xA;          {""name"": ""TooltipControl"", ""size"": 8435}&#xD;&#xA;         ]&#xD;&#xA;        },&#xD;&#xA;        {&#xD;&#xA;         ""name"": ""data"",&#xD;&#xA;         ""children"": [&#xD;&#xA;          {""name"": ""Data"", ""size"": 20544},&#xD;&#xA;          {""name"": ""DataList"", ""size"": 19788},&#xD;&#xA;          {""name"": ""DataSprite"", ""size"": 10349},&#xD;&#xA;          {""name"": ""EdgeSprite"", ""size"": 3301},&#xD;&#xA;          {""name"": ""NodeSprite"", ""size"": 19382},&#xD;&#xA;          {&#xD;&#xA;           ""name"": ""render"",&#xD;&#xA;           ""children"": [&#xD;&#xA;            {""name"": ""ArrowType"", ""size"": 698},&#xD;&#xA;            {""name"": ""EdgeRenderer"", ""size"": 5569},&#xD;&#xA;            {""name"": ""IRenderer"", ""size"": 353},&#xD;&#xA;            {""name"": ""ShapeRenderer"", ""size"": 2247}&#xD;&#xA;           ]&#xD;&#xA;          },&#xD;&#xA;          {""name"": ""ScaleBinding"", ""size"": 11275},&#xD;&#xA;          {""name"": ""Tree"", ""size"": 7147},&#xD;&#xA;          {""name"": ""TreeBuilder"", ""size"": 9930}&#xD;&#xA;         ]&#xD;&#xA;        },&#xD;&#xA;        {&#xD;&#xA;         ""name"": ""events"",&#xD;&#xA;         ""children"": [&#xD;&#xA;          {""name"": ""DataEvent"", ""size"": 2313},&#xD;&#xA;          {""name"": ""SelectionEvent"", ""size"": 1880},&#xD;&#xA;          {""name"": ""TooltipEvent"", ""size"": 1701},&#xD;&#xA;          {""name"": ""VisualizationEvent"", ""size"": 1117}&#xD;&#xA;         ]&#xD;&#xA;        },&#xD;&#xA;        {&#xD;&#xA;         ""name"": ""legend"",&#xD;&#xA;         ""children"": [&#xD;&#xA;          {""name"": ""Legend"", ""size"": 20859},&#xD;&#xA;          {""name"": ""LegendItem"", ""size"": 4614},&#xD;&#xA;          {""name"": ""LegendRange"", ""size"": 10530}&#xD;&#xA;         ]&#xD;&#xA;        },&#xD;&#xA;        {&#xD;&#xA;         ""name"": ""operator"",&#xD;&#xA;         ""children"": [&#xD;&#xA;          {&#xD;&#xA;           ""name"": ""distortion"",&#xD;&#xA;           ""children"": [&#xD;&#xA;            {""name"": ""BifocalDistortion"", ""size"": 4461},&#xD;&#xA;            {""name"": ""Distortion"", ""size"": 6314},&#xD;&#xA;            {""name"": ""FisheyeDistortion"", ""size"": 3444}&#xD;&#xA;           ]&#xD;&#xA;          },&#xD;&#xA;          {&#xD;&#xA;           ""name"": ""encoder"",&#xD;&#xA;           ""children"": [&#xD;&#xA;            {""name"": ""ColorEncoder"", ""size"": 3179},&#xD;&#xA;            {""name"": ""Encoder"", ""size"": 4060},&#xD;&#xA;            {""name"": ""PropertyEncoder"", ""size"": 4138},&#xD;&#xA;            {""name"": ""ShapeEncoder"", ""size"": 1690},&#xD;&#xA;            {""name"": ""SizeEncoder"", ""size"": 1830}&#xD;&#xA;           ]&#xD;&#xA;          },&#xD;&#xA;          {&#xD;&#xA;           ""name"": ""filter"",&#xD;&#xA;           ""children"": [&#xD;&#xA;            {""name"": ""FisheyeTreeFilter"", ""size"": 5219},&#xD;&#xA;            {""name"": ""GraphDistanceFilter"", ""size"": 3165},&#xD;&#xA;            {""name"": ""VisibilityFilter"", ""size"": 3509}&#xD;&#xA;           ]&#xD;&#xA;          },&#xD;&#xA;          {""name"": ""IOperator"", ""size"": 1286},&#xD;&#xA;          {&#xD;&#xA;           ""name"": ""label"",&#xD;&#xA;           ""children"": [&#xD;&#xA;            {""name"": ""Labeler"", ""size"": 9956},&#xD;&#xA;            {""name"": ""RadialLabeler"", ""size"": 3899},&#xD;&#xA;            {""name"": ""StackedAreaLabeler"", ""size"": 3202}&#xD;&#xA;           ]&#xD;&#xA;          },&#xD;&#xA;          {&#xD;&#xA;           ""name"": ""layout"",&#xD;&#xA;           ""children"": [&#xD;&#xA;            {""name"": ""AxisLayout"", ""size"": 6725},&#xD;&#xA;            {""name"": ""BundledEdgeRouter"", ""size"": 3727},&#xD;&#xA;            {""name"": ""CircleLayout"", ""size"": 9317},&#xD;&#xA;            {""name"": ""CirclePackingLayout"", ""size"": 12003},&#xD;&#xA;            {""name"": ""DendrogramLayout"", ""size"": 4853},&#xD;&#xA;            {""name"": ""ForceDirectedLayout"", ""size"": 8411},&#xD;&#xA;            {""name"": ""IcicleTreeLayout"", ""size"": 4864},&#xD;&#xA;            {""name"": ""IndentedTreeLayout"", ""size"": 3174},&#xD;&#xA;            {""name"": ""Layout"", ""size"": 7881},&#xD;&#xA;            {""name"": ""NodeLinkTreeLayout"", ""size"": 12870},&#xD;&#xA;            {""name"": ""PieLayout"", ""size"": 2728},&#xD;&#xA;            {""name"": ""RadialTreeLayout"", ""size"": 12348},&#xD;&#xA;            {""name"": ""RandomLayout"", ""size"": 870},&#xD;&#xA;            {""name"": ""StackedAreaLayout"", ""size"": 9121},&#xD;&#xA;            {""name"": ""TreeMapLayout"", ""size"": 9191}&#xD;&#xA;           ]&#xD;&#xA;          },&#xD;&#xA;          {""name"": ""Operator"", ""size"": 2490},&#xD;&#xA;          {""name"": ""OperatorList"", ""size"": 5248},&#xD;&#xA;          {""name"": ""OperatorSequence"", ""size"": 4190},&#xD;&#xA;          {""name"": ""OperatorSwitch"", ""size"": 2581},&#xD;&#xA;          {""name"": ""SortOperator"", ""size"": 2023}&#xD;&#xA;         ]&#xD;&#xA;        },&#xD;&#xA;        {""name"": ""Visualization"", ""size"": 16540}&#xD;&#xA;       ]&#xD;&#xA;      }&#xD;&#xA;     ]&#xD;&#xA;    }"
-3788590211217673651,174,12,"                    public class ColorPickerDialog extends Dialog {&#xD;&#xA;                     public interface OnColorChangedListener {&#xD;&#xA;                      void colorChanged(int color);&#xD;&#xA;                      }&#xD;&#xA;                         private OnColorChangedListener mListener;&#xD;&#xA;                            private int mInitialColor;&#xD;&#xA;                        private static class ColorPickerView extends View {&#xD;&#xA;                        private Paint mPaint;&#xD;&#xA;                        private Paint mCenterPaint;&#xD;&#xA;                       private final int[] mColors;&#xD;&#xA;                       private OnColorChangedListener mListener;&#xD;&#xA;    ColorPickerView(Context c, OnColorChangedListener l, int color) {&#xD;&#xA;        super(c);&#xD;&#xA;        mListener = l;&#xD;&#xA;        mColors = new int[] {&#xD;&#xA;            0xFFFF0000, 0xFFFF00FF, 0xFF0000FF, 0xFF00FFFF, 0xFF00FF00,&#xD;&#xA;            0xFFFFFF00, 0xFFFF0000&#xD;&#xA;        };&#xD;&#xA;        Shader s = new SweepGradient(0, 0, mColors, null);&#xD;&#xA;        mPaint = new Paint(Paint.ANTI_ALIAS_FLAG);&#xD;&#xA;        mPaint.setShader(s);&#xD;&#xA;        mPaint.setStyle(Paint.Style.STROKE);&#xD;&#xA;        mPaint.setStrokeWidth(32);&#xD;&#xA;        mCenterPaint = new Paint(Paint.ANTI_ALIAS_FLAG);&#xD;&#xA;        mCenterPaint.setColor(color);&#xD;&#xA;        mCenterPaint.setStrokeWidth(5);&#xD;&#xA;    }&#xD;&#xA;    private boolean mTrackingCenter;&#xD;&#xA;    private boolean mHighlightCenter;&#xD;&#xA;    @Override&#xD;&#xA;    protected void onDraw(Canvas canvas) {&#xD;&#xA;        float r = CENTER_X - mPaint.getStrokeWidth()*0.5f;&#xD;&#xA;        canvas.translate(CENTER_X, CENTER_X);&#xD;&#xA;        canvas.drawOval(new RectF(-r, -r, r, r), mPaint);&#xD;&#xA;        canvas.drawCircle(0, 0, CENTER_RADIUS, mCenterPaint);&#xD;&#xA;        if (mTrackingCenter) {&#xD;&#xA;            int c = mCenterPaint.getColor();&#xD;&#xA;            mCenterPaint.setStyle(Paint.Style.STROKE);&#xD;&#xA;            if (mHighlightCenter) {&#xD;&#xA;                mCenterPaint.setAlpha(0xFF);&#xD;&#xA;            } else {&#xD;&#xA;                mCenterPaint.setAlpha(0x80);&#xD;&#xA;            }&#xD;&#xA;            canvas.drawCircle(0, 0,&#xD;&#xA;                              CENTER_RADIUS + mCenterPaint.getStrokeWidth(),&#xD;&#xA;                              mCenterPaint);&#xD;&#xA;            mCenterPaint.setStyle(Paint.Style.FILL);&#xD;&#xA;            mCenterPaint.setColor(c);&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    @Override&#xD;&#xA;    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {&#xD;&#xA;        setMeasuredDimension(CENTER_X*2, CENTER_Y*2);&#xD;&#xA;    }&#xD;&#xA;    private static final int CENTER_X = 100;&#xD;&#xA;    private static final int CENTER_Y = 100;&#xD;&#xA;    private static final int CENTER_RADIUS = 32;&#xD;&#xA;    private int floatToByte(float x) {&#xD;&#xA;        int n = java.lang.Math.round(x);&#xD;&#xA;        return n;&#xD;&#xA;    }&#xD;&#xA;    private int pinToByte(int n) {&#xD;&#xA;        if (n < 0) {&#xD;&#xA;            n = 0;&#xD;&#xA;        } else if (n > 255) {&#xD;&#xA;            n = 255;&#xD;&#xA;        }&#xD;&#xA;        return n;&#xD;&#xA;    }&#xD;&#xA;    private int ave(int s, int d, float p) {&#xD;&#xA;        return s + java.lang.Math.round(p * (d - s));&#xD;&#xA;    }&#xD;&#xA;    private int interpColor(int colors[], float unit) {&#xD;&#xA;        if (unit <= 0) {&#xD;&#xA;            return colors[0];&#xD;&#xA;        }&#xD;&#xA;        if (unit >= 1) {&#xD;&#xA;            return colors[colors.length - 1];&#xD;&#xA;        }&#xD;&#xA;        float p = unit * (colors.length - 1);&#xD;&#xA;        int i = (int)p;&#xD;&#xA;        p -= i;&#xD;&#xA;        // now p is just the fractional part [0...1) and i is the index&#xD;&#xA;        int c0 = colors[i];&#xD;&#xA;        int c1 = colors[i+1];&#xD;&#xA;        int a = ave(Color.alpha(c0), Color.alpha(c1), p);&#xD;&#xA;        int r = ave(Color.red(c0), Color.red(c1), p);&#xD;&#xA;        int g = ave(Color.green(c0), Color.green(c1), p);&#xD;&#xA;        int b = ave(Color.blue(c0), Color.blue(c1), p);&#xD;&#xA;        return Color.argb(a, r, g, b);&#xD;&#xA;    }&#xD;&#xA;    private int rotateColor(int color, float rad) {&#xD;&#xA;        float deg = rad * 180 / 3.1415927f;&#xD;&#xA;        int r = Color.red(color);&#xD;&#xA;        int g = Color.green(color);&#xD;&#xA;        int b = Color.blue(color);&#xD;&#xA;        ColorMatrix cm = new ColorMatrix();&#xD;&#xA;        ColorMatrix tmp = new ColorMatrix();&#xD;&#xA;        cm.setRGB2YUV();&#xD;&#xA;        tmp.setRotate(0, deg);&#xD;&#xA;        cm.postConcat(tmp);&#xD;&#xA;        tmp.setYUV2RGB();&#xD;&#xA;        cm.postConcat(tmp);&#xD;&#xA;        final float[] a = cm.getArray();&#xD;&#xA;        int ir = floatToByte(a[0] * r +  a[1] * g +  a[2] * b);&#xD;&#xA;        int ig = floatToByte(a[5] * r +  a[6] * g +  a[7] * b);&#xD;&#xA;        int ib = floatToByte(a[10] * r + a[11] * g + a[12] * b);&#xD;&#xA;        return Color.argb(Color.alpha(color), pinToByte(ir),&#xD;&#xA;                          pinToByte(ig), pinToByte(ib));&#xD;&#xA;    }&#xD;&#xA;    private static final float PI = 3.1415926f;&#xD;&#xA;    @Override&#xD;&#xA;    public boolean onTouchEvent(MotionEvent event) {&#xD;&#xA;        float x = event.getX() - CENTER_X;&#xD;&#xA;        float y = event.getY() - CENTER_Y;&#xD;&#xA;        boolean inCenter = java.lang.Math.sqrt(x*x + y*y) <= CENTER_RADIUS;&#xD;&#xA;        switch (event.getAction()) {&#xD;&#xA;            case MotionEvent.ACTION_DOWN:&#xD;&#xA;                mTrackingCenter = inCenter;&#xD;&#xA;                if (inCenter) {&#xD;&#xA;                    mHighlightCenter = true;&#xD;&#xA;                    invalidate();&#xD;&#xA;                    break;&#xD;&#xA;                }&#xD;&#xA;            case MotionEvent.ACTION_MOVE:&#xD;&#xA;                if (mTrackingCenter) {&#xD;&#xA;                    if (mHighlightCenter != inCenter) {&#xD;&#xA;                        mHighlightCenter = inCenter;&#xD;&#xA;                        invalidate();&#xD;&#xA;                    }&#xD;&#xA;                } else {&#xD;&#xA;                    float angle = (float)java.lang.Math.atan2(y, x);&#xD;&#xA;                    // need to turn angle [-PI ... PI] into unit [0....1]&#xD;&#xA;                    float unit = angle/(2*PI);&#xD;&#xA;                    if (unit < 0) {&#xD;&#xA;                        unit += 1;&#xD;&#xA;                    }&#xD;&#xA;                    mCenterPaint.setColor(interpColor(mColors, unit));&#xD;&#xA;                    invalidate();&#xD;&#xA;                }&#xD;&#xA;                break;&#xD;&#xA;            case MotionEvent.ACTION_UP:&#xD;&#xA;                if (mTrackingCenter) {&#xD;&#xA;                    if (inCenter) {&#xD;&#xA;                        mListener.colorChanged(mCenterPaint.getColor());&#xD;&#xA;                    }&#xD;&#xA;                    mTrackingCenter = false;    // so we draw w/o halo&#xD;&#xA;                    invalidate();&#xD;&#xA;                }&#xD;&#xA;                break;&#xD;&#xA;        }&#xD;&#xA;        return true;&#xD;&#xA;       }&#xD;&#xA;      }&#xD;&#xA;                 public ColorPickerDialog(Context context,&#xD;&#xA;                         OnColorChangedListener listener,&#xD;&#xA;                         int initialColor) {&#xD;&#xA;                         super(context);&#xD;&#xA;                         mListener = listener;&#xD;&#xA;                         mInitialColor = initialColor;&#xD;&#xA;                     }&#xD;&#xA;                         @Override&#xD;&#xA;                        protected void onCreate(Bundle savedInstanceState) {&#xD;&#xA;                        super.onCreate(savedInstanceState);&#xD;&#xA;                        OnColorChangedListener l = new OnColorChangedListener() {&#xD;&#xA;                        public void colorChanged(int color) {&#xD;&#xA;                         mListener.colorChanged(color);&#xD;&#xA;                         dismiss();&#xD;&#xA;           }&#xD;&#xA;         };&#xD;&#xA;           setContentView(new ColorPickerView(getContext(), l, mInitialColor));&#xD;&#xA;           setTitle(""Pick a Color"");&#xD;&#xA;          }&#xD;&#xA;         }"
-5289338946355220245,20,13,"	fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;&#xD;&#xA;	fastcgi_param  QUERY_STRING       $query_string;&#xD;&#xA;	fastcgi_param  REQUEST_METHOD     $request_method;&#xD;&#xA;	fastcgi_param  CONTENT_TYPE       $content_type;&#xD;&#xA;	fastcgi_param  CONTENT_LENGTH     $content_length;&#xD;&#xA;	fastcgi_param  SCRIPT_NAME        $fastcgi_script_name;&#xD;&#xA;	fastcgi_param  REQUEST_URI        $request_uri;&#xD;&#xA;	fastcgi_param  DOCUMENT_URI       $document_uri;&#xD;&#xA;	fastcgi_param  DOCUMENT_ROOT      $document_root;&#xD;&#xA;	fastcgi_param  SERVER_PROTOCOL    $server_protocol;&#xD;&#xA;	fastcgi_param  HTTPS              $https if_not_empty;&#xD;&#xA;	fastcgi_param  GATEWAY_INTERFACE  CGI/1.1;&#xD;&#xA;	fastcgi_param  SERVER_SOFTWARE    nginx/$nginx_version;&#xD;&#xA;	fastcgi_param  REMOTE_ADDR        $remote_addr;&#xD;&#xA;	fastcgi_param  REMOTE_PORT        $remote_port;&#xD;&#xA;	fastcgi_param  SERVER_ADDR        $server_addr;&#xD;&#xA;	fastcgi_param  SERVER_PORT        $server_port;&#xD;&#xA;	fastcgi_param  SERVER_NAME        $server_name;&#xD;&#xA;	# PHP only, required if PHP was built with --enable-force-cgi-redirect&#xD;&#xA;	fastcgi_param  REDIRECT_STATUS    200;"
-9071905053464819722,22,13,"	<web-app id=""WebApp_ID"" version=""2.4""&#xD;&#xA;		xmlns=""http://java.sun.com/xml/ns/j2ee"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""&#xD;&#xA;		xsi:schemaLocation=""http://java.sun.com/xml/ns/j2ee &#xD;&#xA;		http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"">&#xD;&#xA;		<display-name>Spring Web MVC Application</display-name>&#xD;&#xA;		<servlet>&#xD;&#xA;			<servlet-name>mvc-dispatcher</servlet-name>&#xD;&#xA;			<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>&#xD;&#xA;			<load-on-startup>1</load-on-startup>&#xD;&#xA;		</servlet>&#xD;&#xA;		<servlet-mapping>&#xD;&#xA;			<servlet-name>mvc-dispatcher</servlet-name>&#xD;&#xA;			<url-pattern>/</url-pattern>&#xD;&#xA;		</servlet-mapping>&#xD;&#xA;		<context-param>&#xD;&#xA;			<param-name>contextConfigLocation</param-name>&#xD;&#xA;			<param-value>/WEB-INF/mvc-dispatcher-servlet.xml</param-value>&#xD;&#xA;		</context-param>&#xD;&#xA;		<listener>&#xD;&#xA;			<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>&#xD;&#xA;		</listener>&#xD;&#xA;	</web-app>"
2086059755164670601,24,13,"        <?xml version=""1.0"" encoding=""UTF-8""?>&#xD;&#xA;    <web-app version=""3.1"" xmlns=""http://xmlns.jcp.org/xml/ns/javaee"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"">&#xD;&#xA;        <context-param>&#xD;&#xA;            <param-name>javax.faces.PROJECT_STAGE</param-name>&#xD;&#xA;            <param-value>Development</param-value>&#xD;&#xA;        </context-param>&#xD;&#xA;        <servlet>&#xD;&#xA;            <servlet-name>Faces Servlet</servlet-name>&#xD;&#xA;            <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>&#xD;&#xA;            <load-on-startup>1</load-on-startup>&#xD;&#xA;        </servlet>&#xD;&#xA;        <servlet-mapping>&#xD;&#xA;            <servlet-name>Faces Servlet</servlet-name>&#xD;&#xA;            <url-pattern>/faces/*</url-pattern>&#xD;&#xA;        </servlet-mapping>&#xD;&#xA;        <session-config>&#xD;&#xA;            <session-timeout>&#xD;&#xA;                30&#xD;&#xA;            </session-timeout>&#xD;&#xA;        </session-config>&#xD;&#xA;        <welcome-file-list>&#xD;&#xA;            <welcome-file>faces/index.xhtml</welcome-file>&#xD;&#xA;        </welcome-file-list>&#xD;&#xA;    </web-app>"
7514142415491004797,26,13,"          <div class=""accordion"" id=""accordion2"">&#xD;&#xA;      <div class=""accordion-group"">&#xD;&#xA;        <div class=""accordion-heading"">&#xD;&#xA;          <a class=""accordion-toggle"" data-toggle=""collapse"" data-parent=""#accordion2"" href=""#collapseOne"">&#xD;&#xA;            Collapsible Group Item #1&#xD;&#xA;          </a>&#xD;&#xA;        </div>&#xD;&#xA;        <div id=""collapseOne"" class=""accordion-body collapse in"">&#xD;&#xA;          <div class=""accordion-inner"">&#xD;&#xA;            Anim pariatur cliche...&#xD;&#xA;          </div>&#xD;&#xA;        </div>&#xD;&#xA;      </div>&#xD;&#xA;      <div class=""accordion-group"">&#xD;&#xA;        <div class=""accordion-heading"">&#xD;&#xA;          <a class=""accordion-toggle"" data-toggle=""collapse"" data-parent=""#accordion2"" href=""#collapseTwo"">&#xD;&#xA;            Collapsible Group Item #2&#xD;&#xA;          </a>&#xD;&#xA;        </div>&#xD;&#xA;        <div id=""collapseTwo"" class=""accordion-body collapse"">&#xD;&#xA;          <div class=""accordion-inner"">&#xD;&#xA;            Anim pariatur cliche...&#xD;&#xA;          </div>&#xD;&#xA;        </div>&#xD;&#xA;      </div>&#xD;&#xA;    </div>"
3362072076072154396,28,13,"      <?xml version=""1.0"" encoding=""utf-8""?>&#xD;&#xA;      <RelativeLayout xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;       android:layout_width=""fill_parent""&#xD;&#xA;       android:layout_height=""fill_parent"" >&#xD;&#xA; &#xD;&#xA;       <ImageView&#xD;&#xA;          android:id=""@+id/image""&#xD;&#xA;          android:layout_width=""wrap_content""&#xD;&#xA;          android:layout_height=""wrap_content""&#xD;&#xA;          android:layout_marginRight=""5dp"" />&#xD;&#xA;      <TextView&#xD;&#xA;        android:id=""@+id/text""&#xD;&#xA;        android:layout_width=""fill_parent""&#xD;&#xA;        android:layout_height=""wrap_content""&#xD;&#xA;        android:textColor=""#FFF"" &#xD;&#xA;        android:layout_toRightOf=""@+id/image""/>&#xD;&#xA; &#xD;&#xA;     <Button&#xD;&#xA;        android:id=""@+id/dialogButtonOK""&#xD;&#xA;        android:layout_width=""100px""&#xD;&#xA;        android:layout_height=""wrap_content""&#xD;&#xA;        android:text="" Ok ""&#xD;&#xA;        android:layout_marginTop=""5dp""&#xD;&#xA;        android:layout_marginRight=""5dp""&#xD;&#xA;        android:layout_below=""@+id/image""&#xD;&#xA;        />&#xD;&#xA;     &#xD;&#xA;      </RelativeLayout>"
-4393918666313296034,28,13,"			<table width=""300"" border=""0"" align=""center"" cellpadding=""0"" cellspacing=""1"" bgcolor=""#CCCCCC"">&#xD;&#xA;			<tr>&#xD;&#xA;			<form name=""form1"" method=""post"" action=""checklogin.php"">&#xD;&#xA;			<td>&#xD;&#xA;			<table width=""100%"" border=""0"" cellpadding=""3"" cellspacing=""1"" bgcolor=""#FFFFFF"">&#xD;&#xA;			<tr>&#xD;&#xA;			<td colspan=""3""><strong>Member Login </strong></td>&#xD;&#xA;			</tr>&#xD;&#xA;			<tr>&#xD;&#xA;			<td width=""78"">Username</td>&#xD;&#xA;			<td width=""6"">:</td>&#xD;&#xA;			<td width=""294""><input name=""myusername"" type=""text"" id=""myusername""></td>&#xD;&#xA;			</tr>&#xD;&#xA;			<tr>&#xD;&#xA;			<td>Password</td>&#xD;&#xA;			<td>:</td>&#xD;&#xA;			<td><input name=""mypassword"" type=""text"" id=""mypassword""></td>&#xD;&#xA;			</tr>&#xD;&#xA;			<tr>&#xD;&#xA;			<td>&nbsp;</td>&#xD;&#xA;			<td>&nbsp;</td>&#xD;&#xA;			<td><input type=""submit"" name=""Submit"" value=""Login""></td>&#xD;&#xA;			</tr>&#xD;&#xA;			</table>&#xD;&#xA;			</td>&#xD;&#xA;			</form>&#xD;&#xA;			</tr>&#xD;&#xA;			</table>"
-4002221584401690815,29,13,        Array&#xD;&#xA;        (&#xD;&#xA;        [browser_name_regex] => ^mozilla/5\.0 (windows; .; windows nt 5\.1; .*rv:.*) gecko/.* firefox/0\.9.*$&#xD;&#xA;        [browser_name_pattern] => Mozilla/5.0 (Windows; ?; Windows NT 5.1; *rv:*) Gecko/* Firefox/0.9*&#xD;&#xA;        [parent] => Firefox 0.9&#xD;&#xA;        [platform] => WinXP&#xD;&#xA;        [browser] => Firefox&#xD;&#xA;        [version] => 0.9&#xD;&#xA;        [majorver] => 0&#xD;&#xA;        [minorver] => 9&#xD;&#xA;        [cssversion] => 2&#xD;&#xA;        [frames] => 1&#xD;&#xA;        [iframes] => 1&#xD;&#xA;        [tables] => 1&#xD;&#xA;        [cookies] => 1&#xD;&#xA;        [backgroundsounds] =>&#xD;&#xA;        [vbscript] =>&#xD;&#xA;        [javascript] => 1&#xD;&#xA;        [javaapplets] => 1&#xD;&#xA;        [activexcontrols] =>&#xD;&#xA;        [cdf] =>&#xD;&#xA;        [aol] =>&#xD;&#xA;        [beta] => 1&#xD;&#xA;        [win16] =>&#xD;&#xA;        [crawler] =>&#xD;&#xA;        [stripper] =>&#xD;&#xA;        [wap] =>&#xD;&#xA;        [netclr] =>&#xD;&#xA;    )
-5246819627672708070,32,13,"       <android.support.design.widget.CoordinatorLayout xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;        xmlns:app=""http://schemas.android.com/apk/res-auto""&#xD;&#xA;        android:layout_width=""match_parent""&#xD;&#xA;        android:layout_height=""match_parent"">&#xD;&#xA;     &#xD;&#xA;        <android.support.design.widget.AppBarLayout&#xD;&#xA;            android:layout_width=""match_parent""&#xD;&#xA;            android:layout_height=""wrap_content""&#xD;&#xA;            android:theme=""@style/ThemeOverlay.AppCompat.Dark.ActionBar"">&#xD;&#xA;     &#xD;&#xA;            <android.support.v7.widget.Toolbar&#xD;&#xA;                android:id=""@+id/toolbar""&#xD;&#xA;                android:layout_width=""match_parent""&#xD;&#xA;                android:layout_height=""?attr/actionBarSize""&#xD;&#xA;                android:background=""?attr/colorPrimary""&#xD;&#xA;                app:layout_scrollFlags=""scroll|enterAlways""&#xD;&#xA;                app:popupTheme=""@style/ThemeOverlay.AppCompat.Light"" />&#xD;&#xA;     &#xD;&#xA;            <android.support.design.widget.TabLayout&#xD;&#xA;                android:id=""@+id/tabs""&#xD;&#xA;                android:layout_width=""match_parent""&#xD;&#xA;                android:layout_height=""wrap_content""&#xD;&#xA;                app:tabMode=""fixed""&#xD;&#xA;                app:tabGravity=""fill""/>&#xD;&#xA;        </android.support.design.widget.AppBarLayout>&#xD;&#xA;     &#xD;&#xA;        <android.support.v4.view.ViewPager&#xD;&#xA;            android:id=""@+id/viewpager""&#xD;&#xA;            android:layout_width=""match_parent""&#xD;&#xA;            android:layout_height=""match_parent""&#xD;&#xA;            app:layout_behavior=""@string/appbar_scrolling_view_behavior""  />&#xD;&#xA;    </android.support.design.widget.CoordinatorLayout>"
-5194176476170190495,33,13,"	<android.support.v4.app.FragmentTabHost&#xD;&#xA;	    xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;	    android:id=""@android:id/tabhost""&#xD;&#xA;	    android:layout_width=""match_parent""&#xD;&#xA;	    android:layout_height=""match_parent"">&#xD;&#xA;	&#xD;&#xA;	<LinearLayout&#xD;&#xA;	    android:orientation=""vertical""&#xD;&#xA;	    android:layout_width=""match_parent""&#xD;&#xA;	    android:layout_height=""match_parent"">&#xD;&#xA;	&#xD;&#xA;	    <TabWidget&#xD;&#xA;	        android:id=""@android:id/tabs""&#xD;&#xA;	&#xD;&#xA;	        android:orientation=""horizontal""&#xD;&#xA;	        android:layout_width=""match_parent""&#xD;&#xA;	        android:layout_height=""wrap_content""&#xD;&#xA;	        android:layout_weight=""0""/>&#xD;&#xA;	&#xD;&#xA;	    <FrameLayout&#xD;&#xA;	        android:id=""@android:id/tabcontent""&#xD;&#xA;	        android:layout_width=""0dp""&#xD;&#xA;	        android:layout_height=""0dp""&#xD;&#xA;	        android:layout_weight=""0""/>&#xD;&#xA;	&#xD;&#xA;	    <FrameLayout&#xD;&#xA;	        android:id=""@+id/realtabcontent""&#xD;&#xA;	        android:layout_width=""match_parent""&#xD;&#xA;	        android:layout_height=""0dp""&#xD;&#xA;	        android:layout_weight=""1""/>&#xD;&#xA;	&#xD;&#xA;	</LinearLayout>&#xD;&#xA;	</android.support.v4.app.FragmentTabHost>"
-5151139722399446198,34,13,"       <?xml version=""1.0"" encoding=""utf-8""?>&#xD;&#xA;    <LinearLayout xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;        android:layout_width=""match_parent""&#xD;&#xA;        android:layout_height=""@dimen/nav_header_height""&#xD;&#xA;        android:background=""@drawable/side_nav_bar""&#xD;&#xA;        android:gravity=""bottom""&#xD;&#xA;        android:orientation=""vertical""&#xD;&#xA;        android:paddingBottom=""@dimen/activity_vertical_margin""&#xD;&#xA;        android:paddingLeft=""@dimen/activity_horizontal_margin""&#xD;&#xA;        android:paddingRight=""@dimen/activity_horizontal_margin""&#xD;&#xA;        android:paddingTop=""@dimen/activity_vertical_margin""&#xD;&#xA;        android:theme=""@style/ThemeOverlay.AppCompat.Dark"">&#xD;&#xA;    &#xD;&#xA;        <ImageView&#xD;&#xA;            android:id=""@+id/imageView""&#xD;&#xA;            android:layout_width=""wrap_content""&#xD;&#xA;            android:layout_height=""wrap_content""&#xD;&#xA;            android:paddingTop=""@dimen/nav_header_vertical_spacing""&#xD;&#xA;            android:src=""@android:drawable/sym_def_app_icon"" />&#xD;&#xA;    &#xD;&#xA;        <TextView&#xD;&#xA;            android:layout_width=""match_parent""&#xD;&#xA;            android:layout_height=""wrap_content""&#xD;&#xA;            android:paddingTop=""@dimen/nav_header_vertical_spacing""&#xD;&#xA;            android:text=""Android Studio""&#xD;&#xA;            android:textAppearance=""@style/TextAppearance.AppCompat.Body1"" />&#xD;&#xA;    &#xD;&#xA;        <TextView&#xD;&#xA;            android:id=""@+id/textView""&#xD;&#xA;            android:layout_width=""wrap_content""&#xD;&#xA;            android:layout_height=""wrap_content""&#xD;&#xA;            android:text=""android.studio@android.com"" />&#xD;&#xA;    &#xD;&#xA;    </LinearLayout>"
-2913057195498192580,35,13,"    $(document).ajaxSend(function(event, xhr, settings) {&#xD;&#xA;        function getCookie(name) {&#xD;&#xA;	    var cookieValue = null;&#xD;&#xA;	    if (document.cookie && document.cookie != '') {&#xD;&#xA;	        var cookies = document.cookie.split(';');&#xD;&#xA;	        for (var i = 0; i < cookies.length; i++) {&#xD;&#xA;	            var cookie = jQuery.trim(cookies[i]);&#xD;&#xA;	            // Does this cookie string begin with the name we want?&#xD;&#xA;	            if (cookie.substring(0, name.length + 1) == (name + '=')) {&#xD;&#xA;	                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));&#xD;&#xA;	                break;&#xD;&#xA;	            }&#xD;&#xA;	        }&#xD;&#xA;	    }&#xD;&#xA;	    return cookieValue;&#xD;&#xA;        }&#xD;&#xA;        function sameOrigin(url) {&#xD;&#xA;	    // url could be relative or scheme relative or absolute&#xD;&#xA;	    var host = document.location.host; // host + port&#xD;&#xA;	    var protocol = document.location.protocol;&#xD;&#xA;	    var sr_origin = '//' + host;&#xD;&#xA;	    var origin = protocol + sr_origin;&#xD;&#xA;	    // Allow absolute or scheme relative URLs to same origin&#xD;&#xA;	    return (url == origin || url.slice(0, origin.length + 1) == origin + '/') ||&#xD;&#xA;	        (url == sr_origin || url.slice(0, sr_origin.length + 1) == sr_origin + '/') ||&#xD;&#xA;	        // or any other URL that isn't scheme relative or absolute i.e relative.&#xD;&#xA;	        !(/^(\/\/|http:|https:).*/.test(url));&#xD;&#xA;        }&#xD;&#xA;        function safeMethod(method) {&#xD;&#xA;	    return (/^(GET|HEAD|OPTIONS|TRACE)$/.test(method));&#xD;&#xA;        }&#xD;&#xA;        if (!safeMethod(settings.type) && sameOrigin(settings.url)) {&#xD;&#xA;	    xhr.setRequestHeader(""X-CSRFToken"", getCookie('csrftoken'));&#xD;&#xA;        }&#xD;&#xA;    });"
5400442872229692969,40,13,"    jQuery(document).ready(function ($) {&#xD;&#xA;    	  $('#checkbox').change(function(){&#xD;&#xA;    	    setInterval(function () {&#xD;&#xA;    	        moveRight();&#xD;&#xA;    	    }, 3000);&#xD;&#xA;    	  });&#xD;&#xA;    	  &#xD;&#xA;    		var slideCount = $('#slider > ul > li').length;&#xD;&#xA;    		var slideWidth = $('#slider > ul > li').width();&#xD;&#xA;    		var slideHeight = $('#slider > ul > li').height();&#xD;&#xA;    		var sliderUlWidth = slideCount * slideWidth;&#xD;&#xA;    		&#xD;&#xA;    		$('#slider').css({ width: slideWidth, height: slideHeight });&#xD;&#xA;    		&#xD;&#xA;    		$('#slider > ul').css({ width: sliderUlWidth, marginLeft: - slideWidth });&#xD;&#xA;    		&#xD;&#xA;    	    $('#slider > ul > li:last-child').prependTo('#slider > ul');&#xD;&#xA;    	    function moveLeft() {&#xD;&#xA;    	        $('#slider > ul').animate({&#xD;&#xA;    	            left: + slideWidth&#xD;&#xA;    	        }, 200, function () {&#xD;&#xA;    	            $('#slider > ul > li:last-child').prependTo('#slider > ul');&#xD;&#xA;    	            $('#slider > ul').css('left', '');&#xD;&#xA;    	        });&#xD;&#xA;    	    };&#xD;&#xA;    	    function moveRight() {&#xD;&#xA;    	        $('#slider > ul').animate({&#xD;&#xA;    	            left: - slideWidth&#xD;&#xA;    	        }, 200, function () {&#xD;&#xA;    	            $('#slider > ul > li:first-child').appendTo('#slider > ul');&#xD;&#xA;    	            $('#slider > ul').css('left', '');&#xD;&#xA;    	        });&#xD;&#xA;    	    };&#xD;&#xA;    	    $('a.control_prev').click(function () {&#xD;&#xA;    	        moveLeft();&#xD;&#xA;    	    });&#xD;&#xA;    	    $('a.control_next').click(function () {&#xD;&#xA;    	        moveRight();&#xD;&#xA;    	    });&#xD;&#xA;    	});    "
-5585415507527294882,47,13,"        public class NavDrawerListAdapter extends BaseAdapter {&#xD;&#xA;	&#xD;&#xA;	private Context context;&#xD;&#xA;	private ArrayList<NavDrawerItem> navDrawerItems;&#xD;&#xA;	&#xD;&#xA;	public NavDrawerListAdapter(Context context, ArrayList<NavDrawerItem> navDrawerItems){&#xD;&#xA;		this.context = context;&#xD;&#xA;		this.navDrawerItems = navDrawerItems;&#xD;&#xA;	}&#xD;&#xA;	@Override&#xD;&#xA;	public int getCount() {&#xD;&#xA;		return navDrawerItems.size();&#xD;&#xA;	}&#xD;&#xA;	@Override&#xD;&#xA;	public Object getItem(int position) {		&#xD;&#xA;		return navDrawerItems.get(position);&#xD;&#xA;	}&#xD;&#xA;	@Override&#xD;&#xA;	public long getItemId(int position) {&#xD;&#xA;		return position;&#xD;&#xA;	}&#xD;&#xA;	@Override&#xD;&#xA;	public View getView(int position, View convertView, ViewGroup parent) {&#xD;&#xA;		if (convertView == null) {&#xD;&#xA;            LayoutInflater mInflater = (LayoutInflater)&#xD;&#xA;                    context.getSystemService(Activity.LAYOUT_INFLATER_SERVICE);&#xD;&#xA;            convertView = mInflater.inflate(R.layout.drawer_list_item, null);&#xD;&#xA;        }&#xD;&#xA;         &#xD;&#xA;        ImageView imgIcon = (ImageView) convertView.findViewById(R.id.icon);&#xD;&#xA;        TextView txtTitle = (TextView) convertView.findViewById(R.id.title);&#xD;&#xA;        TextView txtCount = (TextView) convertView.findViewById(R.id.counter);&#xD;&#xA;         &#xD;&#xA;        imgIcon.setImageResource(navDrawerItems.get(position).getIcon());        &#xD;&#xA;        txtTitle.setText(navDrawerItems.get(position).getTitle());&#xD;&#xA;        &#xD;&#xA;        // displaying count&#xD;&#xA;        // check whether it set visible or not&#xD;&#xA;        if(navDrawerItems.get(position).getCounterVisibility()){&#xD;&#xA;        	txtCount.setText(navDrawerItems.get(position).getCount());&#xD;&#xA;        }else{&#xD;&#xA;        	// hide the counter view&#xD;&#xA;        	txtCount.setVisibility(View.GONE);&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        return convertView;&#xD;&#xA;	}"
1398549363707357171,48,13,"    public abstract class AbstractFacade<T> {&#xD;&#xA;        private Class<T> entityClass;&#xD;&#xA;        &#xD;&#xA;        public AbstractFacade(Class<T> entityClass) {&#xD;&#xA;            this.entityClass = entityClass;&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        protected abstract EntityManager getEntityManager();&#xD;&#xA;        &#xD;&#xA;        public void create(T entity) {&#xD;&#xA;            getEntityManager().persist(entity);&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        public void edit(T entity) {&#xD;&#xA;            getEntityManager().merge(entity);&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        public void remove(T entity) {&#xD;&#xA;            getEntityManager().remove(getEntityManager().merge(entity));&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        public T find(Object id) {&#xD;&#xA;            return getEntityManager().find(entityClass, id);&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        public List<T> findAll() {&#xD;&#xA;            javax.persistence.criteria.CriteriaQuery cq = getEntityManager().getCriteriaBuilder().createQuery();&#xD;&#xA;            cq.select(cq.from(entityClass));&#xD;&#xA;            return getEntityManager().createQuery(cq).getResultList();&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        public List<T> findRange(int[] range) {&#xD;&#xA;            javax.persistence.criteria.CriteriaQuery cq = getEntityManager().getCriteriaBuilder().createQuery();&#xD;&#xA;            cq.select(cq.from(entityClass));&#xD;&#xA;            javax.persistence.Query q = getEntityManager().createQuery(cq);&#xD;&#xA;            q.setMaxResults(range[1] - range[0] + 1);&#xD;&#xA;            q.setFirstResult(range[0]);&#xD;&#xA;            return q.getResultList();&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        public int count() {&#xD;&#xA;            javax.persistence.criteria.CriteriaQuery cq = getEntityManager().getCriteriaBuilder().createQuery();&#xD;&#xA;            javax.persistence.criteria.Root<T> rt = cq.from(entityClass);&#xD;&#xA;            cq.select(getEntityManager().getCriteriaBuilder().count(rt));&#xD;&#xA;            javax.persistence.Query q = getEntityManager().createQuery(cq);&#xD;&#xA;            return ((Long) q.getSingleResult()).intValue();&#xD;&#xA;        }&#xD;&#xA;    }"
8505451040105906471,65,13,"    HelpMsg = vbcrlf & ""  ShVerb"" & vbcrlf & vbcrlf & ""  David Candy 2014"" & vbcrlf & vbcrlf & ""  Lists or runs an explorer verb (right click menu) on a file or folder"" & vbcrlf  & vbcrlf & ""    ShVerb <filename> [verb]"" & vbcrlf & vbcrlf & ""  Used without a verb it lists the verbs available for the file or folder"" & vbcrlf & vbcrlf&#xD;&#xA;    HelpMsg = HelpMsg & ""  The program lists most verbs but only ones above the first separator"" & vbcrlf & ""  of the menu work when used this way"" & vbcrlf & vbcrlf &#xD;&#xA;    HelpMsg = HelpMsg & ""  The Properties verb can be used. However the program has to keep running"" & vbcrlf & ""  to hold the properties dialog open. It keeps running by displaying"" & vbcrlf & ""  a message box."" &#xD;&#xA;    Set objShell = CreateObject(""Shell.Application"")&#xD;&#xA;    Set Ag = WScript.Arguments &#xD;&#xA;    set WshShell = WScript.CreateObject(""WScript.Shell"") &#xD;&#xA;    Set fso = CreateObject(""Scripting.FileSystemObject"")&#xD;&#xA;    &#xD;&#xA;    	If Ag.count = 0 then &#xD;&#xA;    		wscript.echo ""  ShVerb - No file specified""&#xD;&#xA;    		wscript.echo HelpMsg &#xD;&#xA;    		wscript.quit&#xD;&#xA;    	Else If Ag.count = 1 then &#xD;&#xA;    		If LCase(Replace(Ag(0),""-"", ""/"")) = ""/h"" or Replace(Ag(0),""-"", ""/"") = ""/?"" then &#xD;&#xA;    			wscript.echo HelpMsg &#xD;&#xA;    			wscript.quit&#xD;&#xA;    		End If&#xD;&#xA;    	ElseIf Ag.count > 2 then &#xD;&#xA;    		wscript.echo vbcrlf & ""  ShVerb - To many parameters"" & vbcrlf & ""  Use quotes around filenames and verbs containing spaces""  & vbcrlf&#xD;&#xA;    		wscript.echo HelpMsg &#xD;&#xA;    		wscript.quit&#xD;&#xA;    	End If&#xD;&#xA;    &#xD;&#xA;    	If fso.DriveExists(Ag(0)) = True then&#xD;&#xA;    		Set objFolder = objShell.Namespace(fso.GetFileName(Ag(0)))&#xD;&#xA;    '		Set objFolderItem = objFolder.ParseName(fso.GetFileName(Ag(0)))&#xD;&#xA;    		Set objFolderItem = objFolder.self&#xD;&#xA;    		msgbox ag(0)&#xD;&#xA;    	ElseIf fso.FolderExists(Ag(0)) = True then&#xD;&#xA;    		Set objFolder = objShell.Namespace(fso.GetParentFolderName(Ag(0)))&#xD;&#xA;    		Set objFolderItem = objFolder.ParseName(fso.GetFileName(Ag(0)))&#xD;&#xA;    	ElseIf fso.fileExists(Ag(0)) = True then&#xD;&#xA;    		Set objFolder = objShell.Namespace(fso.GetParentFolderName(Ag(0)))&#xD;&#xA;    		Set objFolderItem = objFolder.ParseName(fso.GetFileName(Ag(0)))&#xD;&#xA;    	Else&#xD;&#xA;    		wscript.echo ""  ShVerb - "" & Ag(0) & "" not found""&#xD;&#xA;    		wscript.echo HelpMsg &#xD;&#xA;    		wscript.quit&#xD;&#xA;    	End If&#xD;&#xA;    &#xD;&#xA;    	Set objVerbs = objFolderItem.Verbs&#xD;&#xA;    	'If only one argument list verbs for that item&#xD;&#xA;    &#xD;&#xA;    	If Ag.count = 1 then&#xD;&#xA;    		For Each cmd in objFolderItem.Verbs&#xD;&#xA;    			If len(cmd) <> 0 then CmdList = CmdList & vbcrlf & replace(cmd.name, ""&"", """") &#xD;&#xA;    		Next&#xD;&#xA;    		wscript.echo mid(CmdList, 2)&#xD;&#xA;    &#xD;&#xA;    	'If two arguments do verbs for that item&#xD;&#xA;    &#xD;&#xA;    	ElseIf Ag.count = 2 then&#xD;&#xA;    		For Each cmd in objFolderItem.Verbs&#xD;&#xA;    			If lcase(replace(cmd, ""&"", """")) = LCase(Ag(1)) then &#xD;&#xA;    				wscript.echo Cmd.doit &#xD;&#xA;    				Exit For&#xD;&#xA;    			End If&#xD;&#xA;    		Next&#xD;&#xA;    	'Properties is special cased. Script has to stay running for Properties dialog to show.&#xD;&#xA;    		If Lcase(Ag(1)) = ""properties"" then&#xD;&#xA;    			WSHShell.AppActivate(ObjFolderItem.Name & "" Properties"")&#xD;&#xA;    			msgbox ""This message box has to stay open to keep the "" & ObjFolderItem.Name & "" Properties dialog open.""&#xD;&#xA;    		End If	&#xD;&#xA;    	End If&#xD;&#xA;    End If"
-2343943253355592725,66,13,"    #primary_nav_wrap&#xD;&#xA;    {&#xD;&#xA;    	margin-top:15px&#xD;&#xA;    }&#xD;&#xA;    #primary_nav_wrap ul&#xD;&#xA;    {&#xD;&#xA;    	list-style:none;&#xD;&#xA;    	position:relative;&#xD;&#xA;    	float:left;&#xD;&#xA;    	margin:0;&#xD;&#xA;    	padding:0&#xD;&#xA;    }&#xD;&#xA;    #primary_nav_wrap ul a&#xD;&#xA;    {&#xD;&#xA;    	display:block;&#xD;&#xA;    	color:#333;&#xD;&#xA;    	text-decoration:none;&#xD;&#xA;    	font-weight:700;&#xD;&#xA;    	font-size:12px;&#xD;&#xA;    	line-height:32px;&#xD;&#xA;    	padding:0 15px;&#xD;&#xA;    	font-family:""HelveticaNeue"",""Helvetica Neue"",Helvetica,Arial,sans-serif&#xD;&#xA;    }&#xD;&#xA;    #primary_nav_wrap ul li&#xD;&#xA;    {&#xD;&#xA;    	position:relative;&#xD;&#xA;    	float:left;&#xD;&#xA;    	margin:0;&#xD;&#xA;    	padding:0&#xD;&#xA;    }&#xD;&#xA;    #primary_nav_wrap ul li.current-menu-item&#xD;&#xA;    {&#xD;&#xA;    	background:#ddd&#xD;&#xA;    }&#xD;&#xA;    #primary_nav_wrap ul li:hover&#xD;&#xA;    {&#xD;&#xA;    	background:#f6f6f6&#xD;&#xA;    }&#xD;&#xA;    #primary_nav_wrap ul ul&#xD;&#xA;    {&#xD;&#xA;    	display:none;&#xD;&#xA;    	position:absolute;&#xD;&#xA;    	top:100%;&#xD;&#xA;    	left:0;&#xD;&#xA;    	background:#fff;&#xD;&#xA;    	padding:0&#xD;&#xA;    }&#xD;&#xA;    #primary_nav_wrap ul ul li&#xD;&#xA;    {&#xD;&#xA;    	float:none;&#xD;&#xA;    	width:200px&#xD;&#xA;    }&#xD;&#xA;    #primary_nav_wrap ul ul a&#xD;&#xA;    {&#xD;&#xA;    	line-height:120%;&#xD;&#xA;    	padding:10px 15px&#xD;&#xA;    }&#xD;&#xA;    #primary_nav_wrap ul ul ul&#xD;&#xA;    {&#xD;&#xA;    	top:0;&#xD;&#xA;    	left:100%&#xD;&#xA;    }&#xD;&#xA;    #primary_nav_wrap ul li:hover > ul&#xD;&#xA;    {&#xD;&#xA;    	display:block&#xD;&#xA;    }"
2901132856883216168,75,13,"    Public Function RowCounter( _&#xD;&#xA;      ByVal strKey As String, _&#xD;&#xA;      ByVal booReset As Boolean, _&#xD;&#xA;      Optional ByVal strGroupKey As String) _&#xD;&#xA;      As Long&#xD;&#xA;      &#xD;&#xA;    ' Builds consecutive RowIDs in select, append or create query&#xD;&#xA;    ' with the possibility of automatic reset.&#xD;&#xA;    ' Optionally a grouping key can be passed to reset the row count&#xD;&#xA;    ' for every group key.&#xD;&#xA;    '&#xD;&#xA;    ' Usage (typical select query):&#xD;&#xA;    '   SELECT RowCounter(CStr([ID]),False) AS RowID, *&#xD;&#xA;    '   FROM tblSomeTable&#xD;&#xA;    '   WHERE (RowCounter(CStr([ID]),False) <> RowCounter("""",True));&#xD;&#xA;    '&#xD;&#xA;    ' Usage (with group key):&#xD;&#xA;    '   SELECT RowCounter(CStr([ID]),False,CStr[GroupID])) AS RowID, *&#xD;&#xA;    '   FROM tblSomeTable&#xD;&#xA;    '   WHERE (RowCounter(CStr([ID]),False) <> RowCounter("""",True));&#xD;&#xA;    '&#xD;&#xA;    ' The Where statement resets the counter when the query is run&#xD;&#xA;    ' and is needed for browsing a select query.&#xD;&#xA;    '&#xD;&#xA;    ' Usage (typical append query, manual reset):&#xD;&#xA;    ' 1. Reset counter manually:&#xD;&#xA;    '   Call RowCounter(vbNullString, False)&#xD;&#xA;    ' 2. Run query:&#xD;&#xA;    '   INSERT INTO tblTemp ( RowID )&#xD;&#xA;    '   SELECT RowCounter(CStr([ID]),False) AS RowID, *&#xD;&#xA;    '   FROM tblSomeTable;&#xD;&#xA;    '&#xD;&#xA;    ' Usage (typical append query, automatic reset):&#xD;&#xA;    '   INSERT INTO tblTemp ( RowID )&#xD;&#xA;    '   SELECT RowCounter(CStr([ID]),False) AS RowID, *&#xD;&#xA;    '   FROM tblSomeTable&#xD;&#xA;    '   WHERE (RowCounter("""",True)=0);&#xD;&#xA;    '&#xD;&#xA;    ' 2002-04-13. Cactus Data ApS. CPH&#xD;&#xA;    ' 2002-09-09. Str() sometimes fails. Replaced with CStr().&#xD;&#xA;    ' 2005-10-21. Str(col.Count + 1) reduced to col.Count + 1.&#xD;&#xA;    ' 2008-02-27. Optional group parameter added.&#xD;&#xA;    ' 2010-08-04. Corrected that group key missed first row in group.&#xD;&#xA;    &#xD;&#xA;      Static col      As New Collection&#xD;&#xA;      Static strGroup As String&#xD;&#xA;      &#xD;&#xA;      On Error GoTo Err_RowCounter&#xD;&#xA;      &#xD;&#xA;      If booReset = True Then&#xD;&#xA;        Set col = Nothing&#xD;&#xA;      ElseIf strGroup <> strGroupKey Then&#xD;&#xA;        Set col = Nothing&#xD;&#xA;        strGroup = strGroupKey&#xD;&#xA;        col.Add 1, strKey&#xD;&#xA;      Else&#xD;&#xA;        col.Add col.Count + 1, strKey&#xD;&#xA;      End If&#xD;&#xA;      &#xD;&#xA;      RowCounter = col(strKey)&#xD;&#xA;      &#xD;&#xA;    Exit_RowCounter:&#xD;&#xA;      Exit Function&#xD;&#xA;      &#xD;&#xA;    Err_RowCounter:&#xD;&#xA;      Select Case Err&#xD;&#xA;        Case 457&#xD;&#xA;          ' Key is present.&#xD;&#xA;          Resume Next&#xD;&#xA;        Case Else&#xD;&#xA;          ' Some other error.&#xD;&#xA;          Resume Exit_RowCounter&#xD;&#xA;      End Select&#xD;&#xA;    &#xD;&#xA;    End Function"
-8798156796475072968,148,13,"    @if (@X)==(@Y) @end /* Harmless hybrid line that begins a JScript comment&#xD;&#xA;    &#xD;&#xA;    ::************ Documentation ***********&#xD;&#xA;    :::&#xD;&#xA;    :::REPL  Search  Replace  [Options  [SourceVar]]&#xD;&#xA;    :::REPL  /?&#xD;&#xA;    :::&#xD;&#xA;    :::  Performs a global search and replace operation on each line of input from&#xD;&#xA;    :::  stdin and prints the result to stdout.&#xD;&#xA;    :::&#xD;&#xA;    :::  Each parameter may be optionally enclosed by double quotes. The double&#xD;&#xA;    :::  quotes are not considered part of the argument. The quotes are required&#xD;&#xA;    :::  if the parameter contains a batch token delimiter like space, tab, comma,&#xD;&#xA;    :::  semicolon. The quotes should also be used if the argument contains a&#xD;&#xA;    :::  batch special character like &, |, etc. so that the special character&#xD;&#xA;    :::  does not need to be escaped with ^.&#xD;&#xA;    :::&#xD;&#xA;    :::  If called with a single argument of /? then prints help documentation&#xD;&#xA;    :::  to stdout.&#xD;&#xA;    :::&#xD;&#xA;    :::  Search  - By default this is a case sensitive JScript (ECMA) regular&#xD;&#xA;    :::            expression expressed as a string.&#xD;&#xA;    :::&#xD;&#xA;    :::            JScript syntax documentation is available at&#xD;&#xA;    :::            http://msdn.microsoft.com/en-us/library/ae5bf541(v=vs.80).aspx&#xD;&#xA;    :::&#xD;&#xA;    :::  Replace - By default this is the string to be used as a replacement for&#xD;&#xA;    :::            each found search expression. Full support is provided for&#xD;&#xA;    :::            substituion patterns available to the JScript replace method.&#xD;&#xA;    :::            A $ literal can be escaped as $$. An empty replacement string&#xD;&#xA;    :::            must be represented as """".&#xD;&#xA;    :::&#xD;&#xA;    :::            Replace substitution pattern syntax is documented at&#xD;&#xA;    :::            http://msdn.microsoft.com/en-US/library/efy6s3e6(v=vs.80).aspx&#xD;&#xA;    :::&#xD;&#xA;    :::  Options - An optional string of characters used to alter the behavior&#xD;&#xA;    :::            of REPL. The option characters are case insensitive, and may&#xD;&#xA;    :::            appear in any order.&#xD;&#xA;    :::&#xD;&#xA;    :::            I - Makes the search case-insensitive.&#xD;&#xA;    :::&#xD;&#xA;    :::            L - The Search is treated as a string literal instead of a&#xD;&#xA;    :::                regular expression. Also, all $ found in Replace are&#xD;&#xA;    :::                treated as $ literals.&#xD;&#xA;    :::&#xD;&#xA;    :::            E - Search and Replace represent the name of environment&#xD;&#xA;    :::                variables that contain the respective values. An undefined&#xD;&#xA;    :::                variable is treated as an empty string.&#xD;&#xA;    :::&#xD;&#xA;    :::            M - Multi-line mode. The entire contents of stdin is read and&#xD;&#xA;    :::                processed in one pass instead of line by line. ^ anchors&#xD;&#xA;    :::                the beginning of a line and $ anchors the end of a line.&#xD;&#xA;    :::&#xD;&#xA;    :::            X - Enables extended substitution pattern syntax with support&#xD;&#xA;    :::                for the following escape sequences:&#xD;&#xA;    :::&#xD;&#xA;    :::                \\     -  Backslash&#xD;&#xA;    :::                \b     -  Backspace&#xD;&#xA;    :::                \f     -  Formfeed&#xD;&#xA;    :::                \n     -  Newline&#xD;&#xA;    :::                \r     -  Carriage Return&#xD;&#xA;    :::                \t     -  Horizontal Tab&#xD;&#xA;    :::                \v     -  Vertical Tab&#xD;&#xA;    :::                \xnn   -  Ascii (Latin 1) character expressed as 2 hex digits&#xD;&#xA;    :::                \unnnn -  Unicode character expressed as 4 hex digits&#xD;&#xA;    :::&#xD;&#xA;    :::                Escape sequences are supported even when the L option is used.&#xD;&#xA;    :::&#xD;&#xA;    :::            S - The source is read from an environment variable instead of&#xD;&#xA;    :::                from stdin. The name of the source environment variable is&#xD;&#xA;    :::                specified in the next argument after the option string.&#xD;&#xA;    :::&#xD;&#xA;     &#xD;&#xA;    ::************ Batch portion ***********&#xD;&#xA;    @echo off&#xD;&#xA;    if .%2 equ . (&#xD;&#xA;      if ""%~1"" equ ""/?"" (&#xD;&#xA;        findstr ""^:::"" ""%~f0"" | cscript //E:JScript //nologo ""%~f0"" ""^:::"" """"&#xD;&#xA;        exit /b 0&#xD;&#xA;      ) else (&#xD;&#xA;        call :err ""Insufficient arguments""&#xD;&#xA;        exit /b 1&#xD;&#xA;      )&#xD;&#xA;    )&#xD;&#xA;    echo(%~3|findstr /i ""[^SMILEX]"" >nul && (&#xD;&#xA;      call :err ""Invalid option(s)""&#xD;&#xA;      exit /b 1&#xD;&#xA;    )&#xD;&#xA;    cscript //E:JScript //nologo ""%~f0"" %*&#xD;&#xA;    exit /b 0&#xD;&#xA;    &#xD;&#xA;    :err&#xD;&#xA;    >&2 echo ERROR: %~1. Use REPL /? to get help.&#xD;&#xA;    exit /b&#xD;&#xA;    &#xD;&#xA;    ************* JScript portion **********/&#xD;&#xA;    var env=WScript.CreateObject(""WScript.Shell"").Environment(""Process"");&#xD;&#xA;    var args=WScript.Arguments;&#xD;&#xA;    var search=args.Item(0);&#xD;&#xA;    var replace=args.Item(1);&#xD;&#xA;    var options=""g"";&#xD;&#xA;    if (args.length>2) {&#xD;&#xA;      options+=args.Item(2).toLowerCase();&#xD;&#xA;    }&#xD;&#xA;    var multi=(options.indexOf(""m"")>=0);&#xD;&#xA;    var srcVar=(options.indexOf(""s"")>=0);&#xD;&#xA;    if (srcVar) {&#xD;&#xA;      options=options.replace(/s/g,"""");&#xD;&#xA;    }&#xD;&#xA;    if (options.indexOf(""e"")>=0) {&#xD;&#xA;      options=options.replace(/e/g,"""");&#xD;&#xA;      search=env(search);&#xD;&#xA;      replace=env(replace);&#xD;&#xA;    }&#xD;&#xA;    if (options.indexOf(""l"")>=0) {&#xD;&#xA;      options=options.replace(/l/g,"""");&#xD;&#xA;      search=search.replace(/([.^$*+?()[{\\|])/g,""\\$1"");&#xD;&#xA;      replace=replace.replace(/\$/g,""$$$$"");&#xD;&#xA;    }&#xD;&#xA;    if (options.indexOf(""x"")>=0) {&#xD;&#xA;      options=options.replace(/x/g,"""");&#xD;&#xA;      replace=replace.replace(/\\\\/g,""\\B"");&#xD;&#xA;      replace=replace.replace(/\\b/g,""\b"");&#xD;&#xA;      replace=replace.replace(/\\f/g,""\f"");&#xD;&#xA;      replace=replace.replace(/\\n/g,""\n"");&#xD;&#xA;      replace=replace.replace(/\\r/g,""\r"");&#xD;&#xA;      replace=replace.replace(/\\t/g,""\t"");&#xD;&#xA;      replace=replace.replace(/\\v/g,""\v"");&#xD;&#xA;      replace=replace.replace(/\\x[0-9a-fA-F]{2}|\\u[0-9a-fA-F]{4}/g,&#xD;&#xA;        function($0,$1,$2){&#xD;&#xA;          return String.fromCharCode(parseInt(""0x""+$0.substring(2)));&#xD;&#xA;        }&#xD;&#xA;      );&#xD;&#xA;      replace=replace.replace(/\\B/g,""\\"");&#xD;&#xA;    }&#xD;&#xA;    var search=new RegExp(search,options);&#xD;&#xA;    &#xD;&#xA;    if (srcVar) {&#xD;&#xA;      WScript.Stdout.Write(env(args.Item(3)).replace(search,replace));&#xD;&#xA;    } else {&#xD;&#xA;      while (!WScript.StdIn.AtEndOfStream) {&#xD;&#xA;        if (multi) {&#xD;&#xA;          WScript.Stdout.Write(WScript.StdIn.ReadAll().replace(search,replace));&#xD;&#xA;        } else {&#xD;&#xA;          WScript.Stdout.WriteLine(WScript.StdIn.ReadLine().replace(search,replace));&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;    }"
4576360444073857241,164,13,"        public class GPSTracker extends Service implements LocationListener {&#xD;&#xA;	private final Context mContext;&#xD;&#xA;	// flag for GPS status&#xD;&#xA;	boolean isGPSEnabled = false;&#xD;&#xA;	// flag for network status&#xD;&#xA;	boolean isNetworkEnabled = false;&#xD;&#xA;	// flag for GPS status&#xD;&#xA;	boolean canGetLocation = false;&#xD;&#xA;	Location location; // location&#xD;&#xA;	double latitude; // latitude&#xD;&#xA;	double longitude; // longitude&#xD;&#xA;	// The minimum distance to change Updates in meters&#xD;&#xA;	private static final long MIN_DISTANCE_CHANGE_FOR_UPDATES = 10; // 10 meters&#xD;&#xA;	// The minimum time between updates in milliseconds&#xD;&#xA;	private static final long MIN_TIME_BW_UPDATES = 1000 * 60 * 1; // 1 minute&#xD;&#xA;	// Declaring a Location Manager&#xD;&#xA;	protected LocationManager locationManager;&#xD;&#xA;	public GPSTracker(Context context) {&#xD;&#xA;		this.mContext = context;&#xD;&#xA;		getLocation();&#xD;&#xA;	}&#xD;&#xA;	public Location getLocation() {&#xD;&#xA;		try {&#xD;&#xA;			locationManager = (LocationManager) mContext&#xD;&#xA;					.getSystemService(LOCATION_SERVICE);&#xD;&#xA;			// getting GPS status&#xD;&#xA;			isGPSEnabled = locationManager&#xD;&#xA;					.isProviderEnabled(LocationManager.GPS_PROVIDER);&#xD;&#xA;			// getting network status&#xD;&#xA;			isNetworkEnabled = locationManager&#xD;&#xA;					.isProviderEnabled(LocationManager.NETWORK_PROVIDER);&#xD;&#xA;			if (!isGPSEnabled && !isNetworkEnabled) {&#xD;&#xA;				// no network provider is enabled&#xD;&#xA;			} else {&#xD;&#xA;				this.canGetLocation = true;&#xD;&#xA;				if (isNetworkEnabled) {&#xD;&#xA;					locationManager.requestLocationUpdates(&#xD;&#xA;							LocationManager.NETWORK_PROVIDER,&#xD;&#xA;							MIN_TIME_BW_UPDATES,&#xD;&#xA;							MIN_DISTANCE_CHANGE_FOR_UPDATES, this);&#xD;&#xA;					Log.d(""Network"", ""Network"");&#xD;&#xA;					if (locationManager != null) {&#xD;&#xA;						location = locationManager&#xD;&#xA;								.getLastKnownLocation(LocationManager.NETWORK_PROVIDER);&#xD;&#xA;						if (location != null) {&#xD;&#xA;							latitude = location.getLatitude();&#xD;&#xA;							longitude = location.getLongitude();&#xD;&#xA;						}&#xD;&#xA;					}&#xD;&#xA;				}&#xD;&#xA;				// if GPS Enabled get lat/long using GPS Services&#xD;&#xA;				if (isGPSEnabled) {&#xD;&#xA;					if (location == null) {&#xD;&#xA;						locationManager.requestLocationUpdates(&#xD;&#xA;								LocationManager.GPS_PROVIDER,&#xD;&#xA;								MIN_TIME_BW_UPDATES,&#xD;&#xA;								MIN_DISTANCE_CHANGE_FOR_UPDATES, this);&#xD;&#xA;						Log.d(""GPS Enabled"", ""GPS Enabled"");&#xD;&#xA;						if (locationManager != null) {&#xD;&#xA;							location = locationManager&#xD;&#xA;									.getLastKnownLocation(LocationManager.GPS_PROVIDER);&#xD;&#xA;							if (location != null) {&#xD;&#xA;								latitude = location.getLatitude();&#xD;&#xA;								longitude = location.getLongitude();&#xD;&#xA;							}&#xD;&#xA;						}&#xD;&#xA;					}&#xD;&#xA;				}&#xD;&#xA;			}&#xD;&#xA;		} catch (Exception e) {&#xD;&#xA;			e.printStackTrace();&#xD;&#xA;		}&#xD;&#xA;		return location;&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	/**&#xD;&#xA;	 * Stop using GPS listener&#xD;&#xA;	 * Calling this function will stop using GPS in your app&#xD;&#xA;	 * */&#xD;&#xA;	public void stopUsingGPS(){&#xD;&#xA;		if(locationManager != null){&#xD;&#xA;			locationManager.removeUpdates(GPSTracker.this);&#xD;&#xA;		}		&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	/**&#xD;&#xA;	 * Function to get latitude&#xD;&#xA;	 * */&#xD;&#xA;	public double getLatitude(){&#xD;&#xA;		if(location != null){&#xD;&#xA;			latitude = location.getLatitude();&#xD;&#xA;		}&#xD;&#xA;		&#xD;&#xA;		// return latitude&#xD;&#xA;		return latitude;&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	/**&#xD;&#xA;	 * Function to get longitude&#xD;&#xA;	 * */&#xD;&#xA;	public double getLongitude(){&#xD;&#xA;		if(location != null){&#xD;&#xA;			longitude = location.getLongitude();&#xD;&#xA;		}&#xD;&#xA;		&#xD;&#xA;		// return longitude&#xD;&#xA;		return longitude;&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	/**&#xD;&#xA;	 * Function to check GPS/wifi enabled&#xD;&#xA;	 * @return boolean&#xD;&#xA;	 * */&#xD;&#xA;	public boolean canGetLocation() {&#xD;&#xA;		return this.canGetLocation;&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	/**&#xD;&#xA;	 * Function to show settings alert dialog&#xD;&#xA;	 * On pressing Settings button will lauch Settings Options&#xD;&#xA;	 * */&#xD;&#xA;	public void showSettingsAlert(){&#xD;&#xA;		AlertDialog.Builder alertDialog = new AlertDialog.Builder(mContext);&#xD;&#xA;   	 &#xD;&#xA;        // Setting Dialog Title&#xD;&#xA;        alertDialog.setTitle(""GPS is settings"");&#xD;&#xA; &#xD;&#xA;        // Setting Dialog Message&#xD;&#xA;        alertDialog.setMessage(""GPS is not enabled. Do you want to go to settings menu?"");&#xD;&#xA; &#xD;&#xA;        // On pressing Settings button&#xD;&#xA;        alertDialog.setPositiveButton(""Settings"", new DialogInterface.OnClickListener() {&#xD;&#xA;            public void onClick(DialogInterface dialog,int which) {&#xD;&#xA;            	Intent intent = new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS);&#xD;&#xA;            	mContext.startActivity(intent);&#xD;&#xA;            }&#xD;&#xA;        });&#xD;&#xA; &#xD;&#xA;        // on pressing cancel button&#xD;&#xA;        alertDialog.setNegativeButton(""Cancel"", new DialogInterface.OnClickListener() {&#xD;&#xA;            public void onClick(DialogInterface dialog, int which) {&#xD;&#xA;            dialog.cancel();&#xD;&#xA;            }&#xD;&#xA;        });&#xD;&#xA; &#xD;&#xA;        // Showing Alert Message&#xD;&#xA;        alertDialog.show();&#xD;&#xA;	}&#xD;&#xA;	@Override&#xD;&#xA;	public void onLocationChanged(Location location) {&#xD;&#xA;	}&#xD;&#xA;	@Override&#xD;&#xA;	public void onProviderDisabled(String provider) {&#xD;&#xA;	}&#xD;&#xA;	@Override&#xD;&#xA;	public void onProviderEnabled(String provider) {&#xD;&#xA;	}&#xD;&#xA;	@Override&#xD;&#xA;	public void onStatusChanged(String provider, int status, Bundle extras) {&#xD;&#xA;	}&#xD;&#xA;	@Override&#xD;&#xA;	public IBinder onBind(Intent arg0) {&#xD;&#xA;		return null;&#xD;&#xA;	}"
-8789434266838724920,20,14,"	<toolkit:TransitionService.NavigationInTransition>&#xD;&#xA;		<toolkit:NavigationInTransition>&#xD;&#xA;			<toolkit:NavigationInTransition.Backward>&#xD;&#xA;				<toolkit:TurnstileTransition Mode=""BackwardIn""/>&#xD;&#xA;			</toolkit:NavigationInTransition.Backward>&#xD;&#xA;			<toolkit:NavigationInTransition.Forward>&#xD;&#xA;				<toolkit:TurnstileTransition Mode=""ForwardIn""/>&#xD;&#xA;			</toolkit:NavigationInTransition.Forward>&#xD;&#xA;		</toolkit:NavigationInTransition>&#xD;&#xA;	</toolkit:TransitionService.NavigationInTransition>&#xD;&#xA;	<toolkit:TransitionService.NavigationOutTransition>&#xD;&#xA;		<toolkit:NavigationOutTransition>&#xD;&#xA;			<toolkit:NavigationOutTransition.Backward>&#xD;&#xA;				<toolkit:TurnstileTransition Mode=""BackwardOut""/>&#xD;&#xA;			</toolkit:NavigationOutTransition.Backward>&#xD;&#xA;			<toolkit:NavigationOutTransition.Forward>&#xD;&#xA;				<toolkit:TurnstileTransition Mode=""ForwardOut""/>&#xD;&#xA;			</toolkit:NavigationOutTransition.Forward>&#xD;&#xA;		</toolkit:NavigationOutTransition>&#xD;&#xA;	</toolkit:TransitionService.NavigationOutTransition>"
-9160469124068047417,27,14,"        <?xml version=""1.0"" encoding=""UTF-8""?>&#xD;&#xA;        <web-app version=""3.0"" xmlns=""http://java.sun.com/xml/ns/javaee"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"">&#xD;&#xA;            <context-param>&#xD;&#xA;                <param-name>contextConfigLocation</param-name>&#xD;&#xA;                <param-value>/WEB-INF/applicationContext.xml</param-value>&#xD;&#xA;            </context-param>&#xD;&#xA;            <listener>&#xD;&#xA;                <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>&#xD;&#xA;            </listener>&#xD;&#xA;            <servlet>&#xD;&#xA;                <servlet-name>dispatcher</servlet-name>&#xD;&#xA;                <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>&#xD;&#xA;                <load-on-startup>2</load-on-startup>&#xD;&#xA;            </servlet>&#xD;&#xA;            <servlet-mapping>&#xD;&#xA;                <servlet-name>dispatcher</servlet-name>&#xD;&#xA;                <url-pattern>*.htm</url-pattern>&#xD;&#xA;            </servlet-mapping>&#xD;&#xA;            <session-config>&#xD;&#xA;                <session-timeout>&#xD;&#xA;                    30&#xD;&#xA;                </session-timeout>&#xD;&#xA;            </session-config>&#xD;&#xA;            <welcome-file-list>&#xD;&#xA;                <welcome-file>redirect.jsp</welcome-file>&#xD;&#xA;            </welcome-file-list>&#xD;&#xA;        </web-app>"
9119938339663565259,31,14,"         <script>&#xD;&#xA;    $(function() {&#xD;&#xA;    var availableTags = [&#xD;&#xA;    ""ActionScript"",&#xD;&#xA;    ""AppleScript"",&#xD;&#xA;    ""Asp"",&#xD;&#xA;    ""BASIC"",&#xD;&#xA;    ""C"",&#xD;&#xA;    ""C++"",&#xD;&#xA;    ""Clojure"",&#xD;&#xA;    ""COBOL"",&#xD;&#xA;    ""ColdFusion"",&#xD;&#xA;    ""Erlang"",&#xD;&#xA;    ""Fortran"",&#xD;&#xA;    ""Groovy"",&#xD;&#xA;    ""Haskell"",&#xD;&#xA;    ""Java"",&#xD;&#xA;    ""JavaScript"",&#xD;&#xA;    ""Lisp"",&#xD;&#xA;    ""Perl"",&#xD;&#xA;    ""PHP"",&#xD;&#xA;    ""Python"",&#xD;&#xA;    ""Ruby"",&#xD;&#xA;    ""Scala"",&#xD;&#xA;    ""Scheme""&#xD;&#xA;    ];&#xD;&#xA;    $( ""#tags"" ).autocomplete({&#xD;&#xA;    source: availableTags&#xD;&#xA;    });&#xD;&#xA;    });&#xD;&#xA;    </script>"
8243950880252242804,35,14,"        // Load CAs from an InputStream&#xD;&#xA;        // (could be from a resource or ByteArrayInputStream or ...)&#xD;&#xA;        CertificateFactory cf = CertificateFactory.getInstance(""X.509"");&#xD;&#xA;        // From https://www.washington.edu/itconnect/security/ca/load-der.crt&#xD;&#xA;        InputStream caInput = new BufferedInputStream(new FileInputStream(""load-der.crt""));&#xD;&#xA;        Certificate ca;&#xD;&#xA;        try {&#xD;&#xA;            ca = cf.generateCertificate(caInput);&#xD;&#xA;            System.out.println(""ca="" + ((X509Certificate) ca).getSubjectDN());&#xD;&#xA;        } finally {&#xD;&#xA;            caInput.close();&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        // Create a KeyStore containing our trusted CAs&#xD;&#xA;        String keyStoreType = KeyStore.getDefaultType();&#xD;&#xA;        KeyStore keyStore = KeyStore.getInstance(keyStoreType);&#xD;&#xA;        keyStore.load(null, null);&#xD;&#xA;        keyStore.setCertificateEntry(""ca"", ca);&#xD;&#xA;        &#xD;&#xA;        // Create a TrustManager that trusts the CAs in our KeyStore&#xD;&#xA;        String tmfAlgorithm = TrustManagerFactory.getDefaultAlgorithm();&#xD;&#xA;        TrustManagerFactory tmf = TrustManagerFactory.getInstance(tmfAlgorithm);&#xD;&#xA;        tmf.init(keyStore);&#xD;&#xA;        &#xD;&#xA;        // Create an SSLContext that uses our TrustManager&#xD;&#xA;        SSLContext context = SSLContext.getInstance(""TLS"");&#xD;&#xA;        context.init(null, tmf.getTrustManagers(), null);&#xD;&#xA;        &#xD;&#xA;        // Tell the URLConnection to use a SocketFactory from our SSLContext&#xD;&#xA;        URL url = new URL(""https://certs.cac.washington.edu/CAtest/"");&#xD;&#xA;        HttpsURLConnection urlConnection =&#xD;&#xA;            (HttpsURLConnection)url.openConnection();&#xD;&#xA;        urlConnection.setSSLSocketFactory(context.getSocketFactory());&#xD;&#xA;        InputStream in = urlConnection.getInputStream();&#xD;&#xA;        copyInputStreamToOutputStream(in, System.out);"
-8042916622722991446,36,14,"	-optimizationpasses 5&#xD;&#xA;	-dontusemixedcaseclassnames&#xD;&#xA;	-dontskipnonpubliclibraryclasses&#xD;&#xA;	-dontpreverify&#xD;&#xA;	-verbose&#xD;&#xA;	-optimizations !code/simplification/arithmetic,!field/*,!class/merging/*&#xD;&#xA;	&#xD;&#xA;	-keep public class * extends android.app.Activity&#xD;&#xA;	-keep public class * extends android.app.Application&#xD;&#xA;	-keep public class * extends android.app.Service&#xD;&#xA;	-keep public class * extends android.content.BroadcastReceiver&#xD;&#xA;	-keep public class * extends android.content.ContentProvider&#xD;&#xA;	-keep public class * extends android.app.backup.BackupAgentHelper&#xD;&#xA;	-keep public class * extends android.preference.Preference&#xD;&#xA;	-keep public class com.android.vending.licensing.ILicensingService&#xD;&#xA;	&#xD;&#xA;	-keepclasseswithmembernames class * {&#xD;&#xA;	    native <methods>;&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	-keepclasseswithmembernames class * {&#xD;&#xA;	    public <init>(android.content.Context, android.util.AttributeSet);&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	-keepclasseswithmembernames class * {&#xD;&#xA;	    public <init>(android.content.Context, android.util.AttributeSet, int);&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	-keepclassmembers enum * {&#xD;&#xA;	    public static **[] values();&#xD;&#xA;	    public static ** valueOf(java.lang.String);&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	-keep class * implements android.os.Parcelable {&#xD;&#xA;	  public static final android.os.Parcelable$Creator *;&#xD;&#xA;	}"
-4956683048141027990,40,14,"      -optimizationpasses 5&#xD;&#xA;      -dontusemixedcaseclassnames&#xD;&#xA;      -dontskipnonpubliclibraryclasses&#xD;&#xA;      -dontpreverify&#xD;&#xA;      -verbose&#xD;&#xA;      -optimizations !code/simplification/arithmetic,!field/*,!class/merging/*&#xD;&#xA; &#xD;&#xA;      -keep public class * extends android.app.Activity&#xD;&#xA;      -keep public class * extends android.app.Application&#xD;&#xA;      -keep public class * extends android.app.Service&#xD;&#xA;      -keep public class * extends android.content.BroadcastReceiver&#xD;&#xA;      -keep public class * extends android.content.ContentProvider&#xD;&#xA;      -keep public class * extends android.app.backup.BackupAgentHelper&#xD;&#xA;      -keep public class * extends android.preference.Preference&#xD;&#xA;      -keep public class com.android.vending.licensing.ILicensingService&#xD;&#xA; &#xD;&#xA;      -keepclasseswithmembernames class * {&#xD;&#xA;          native <methods>;&#xD;&#xA;      }&#xD;&#xA; &#xD;&#xA;      -keepclasseswithmembers class * {&#xD;&#xA;          public <init>(android.content.Context, android.util.AttributeSet);&#xD;&#xA;      }&#xD;&#xA; &#xD;&#xA;      -keepclasseswithmembers class * {&#xD;&#xA;          public <init>(android.content.Context, android.util.AttributeSet, int);&#xD;&#xA;      }&#xD;&#xA; &#xD;&#xA;      -keepclassmembers class * extends android.app.Activity {&#xD;&#xA;         public void *(android.view.View);&#xD;&#xA;      }&#xD;&#xA; &#xD;&#xA;      -keepclassmembers enum * {&#xD;&#xA;          public static **[] values();&#xD;&#xA;          public static ** valueOf(java.lang.String);&#xD;&#xA;      }&#xD;&#xA; &#xD;&#xA;      -keep class * implements android.os.Parcelable {&#xD;&#xA;        public static final android.os.Parcelable$Creator *;&#xD;&#xA;      }"
3148100725669038565,44,14,"        public class MySingleton {&#xD;&#xA;        private static MySingleton mInstance;&#xD;&#xA;        private RequestQueue mRequestQueue;&#xD;&#xA;        private ImageLoader mImageLoader;&#xD;&#xA;        private static Context mCtx;&#xD;&#xA;        private MySingleton(Context context) {&#xD;&#xA;            mCtx = context;&#xD;&#xA;            mRequestQueue = getRequestQueue();&#xD;&#xA;            mImageLoader = new ImageLoader(mRequestQueue,&#xD;&#xA;                    new ImageLoader.ImageCache() {&#xD;&#xA;                        private final LruCache<String, Bitmap>&#xD;&#xA;                                cache = new LruCache<String, Bitmap>(20);&#xD;&#xA;                        @Override&#xD;&#xA;                        public Bitmap getBitmap(String url) {&#xD;&#xA;                            return cache.get(url);&#xD;&#xA;                        }&#xD;&#xA;                        @Override&#xD;&#xA;                        public void putBitmap(String url, Bitmap bitmap) {&#xD;&#xA;                            cache.put(url, bitmap);&#xD;&#xA;                        }&#xD;&#xA;                    });&#xD;&#xA;        }&#xD;&#xA;        public static synchronized MySingleton getInstance(Context context) {&#xD;&#xA;            if (mInstance == null) {&#xD;&#xA;                mInstance = new MySingleton(context);&#xD;&#xA;            }&#xD;&#xA;            return mInstance;&#xD;&#xA;        }&#xD;&#xA;        public RequestQueue getRequestQueue() {&#xD;&#xA;            if (mRequestQueue == null) {&#xD;&#xA;                // getApplicationContext() is key, it keeps you from leaking the&#xD;&#xA;                // Activity or BroadcastReceiver if someone passes one in.&#xD;&#xA;                mRequestQueue = &#xD;&#xA;               Volley.newRequestQueue(mCtx.getApplicationContext());&#xD;&#xA;            }&#xD;&#xA;            return mRequestQueue;&#xD;&#xA;        }&#xD;&#xA;        public <T> void addToRequestQueue(Request<T> req) {&#xD;&#xA;            getRequestQueue().add(req);&#xD;&#xA;        }&#xD;&#xA;        public ImageLoader getImageLoader() {&#xD;&#xA;            return mImageLoader;&#xD;&#xA;        }&#xD;&#xA;    }"
-7993532256955465403,45,14,"	<!DOCTYPE html>&#xD;&#xA;	<html>&#xD;&#xA;	  <body>&#xD;&#xA;		<!-- 1. The <iframe> (and video player) will replace this <div> tag. -->&#xD;&#xA;		<div id=""player""></div>&#xD;&#xA;		<script>&#xD;&#xA;		  // 2. This code loads the IFrame Player API code asynchronously.&#xD;&#xA;		  var tag = document.createElement('script');&#xD;&#xA;		  tag.src = ""https://www.youtube.com/iframe_api"";&#xD;&#xA;		  var firstScriptTag = document.getElementsByTagName('script')[0];&#xD;&#xA;		  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);&#xD;&#xA;		  // 3. This function creates an <iframe> (and YouTube player)&#xD;&#xA;		  //    after the API code downloads.&#xD;&#xA;		  var player;&#xD;&#xA;		  function onYouTubeIframeAPIReady() {&#xD;&#xA;			player = new YT.Player('player', {&#xD;&#xA;			  height: '390',&#xD;&#xA;			  width: '640',&#xD;&#xA;			  videoId: 'M7lc1UVf-VE',&#xD;&#xA;			  events: {&#xD;&#xA;				'onReady': onPlayerReady,&#xD;&#xA;				'onStateChange': onPlayerStateChange&#xD;&#xA;			  }&#xD;&#xA;			});&#xD;&#xA;		  }&#xD;&#xA;		  // 4. The API will call this function when the video player is ready.&#xD;&#xA;		  function onPlayerReady(event) {&#xD;&#xA;			event.target.playVideo();&#xD;&#xA;		  }&#xD;&#xA;		  // 5. The API calls this function when the player's state changes.&#xD;&#xA;		  //    The function indicates that when playing a video (state=1),&#xD;&#xA;		  //    the player should play for six seconds and then stop.&#xD;&#xA;		  var done = false;&#xD;&#xA;		  function onPlayerStateChange(event) {&#xD;&#xA;			if (event.data == YT.PlayerState.PLAYING && !done) {&#xD;&#xA;			  setTimeout(stopVideo, 6000);&#xD;&#xA;			  done = true;&#xD;&#xA;			}&#xD;&#xA;		  }&#xD;&#xA;		  function stopVideo() {&#xD;&#xA;			player.stopVideo();&#xD;&#xA;		  }&#xD;&#xA;		</script>&#xD;&#xA;	  </body>&#xD;&#xA;	</html>"
3053607402054489305,57,14,"    html, body{&#xD;&#xA;      margin:0;&#xD;&#xA;      padding:0;&#xD;&#xA;      height:100%;&#xD;&#xA;    }&#xD;&#xA;    section {&#xD;&#xA;      position: relative;&#xD;&#xA;      border: 1px solid #000;&#xD;&#xA;      padding-top: 37px;&#xD;&#xA;      background: #500;&#xD;&#xA;    }&#xD;&#xA;    section.positioned {&#xD;&#xA;      position: absolute;&#xD;&#xA;      top:100px;&#xD;&#xA;      left:100px;&#xD;&#xA;      width:800px;&#xD;&#xA;      box-shadow: 0 0 15px #333;&#xD;&#xA;    }&#xD;&#xA;    .container {&#xD;&#xA;      overflow-y: auto;&#xD;&#xA;      height: 200px;&#xD;&#xA;    }&#xD;&#xA;    table {&#xD;&#xA;      border-spacing: 0;&#xD;&#xA;      width:100%;&#xD;&#xA;    }&#xD;&#xA;    td + td {&#xD;&#xA;      border-left:1px solid #eee;&#xD;&#xA;    }&#xD;&#xA;    td, th {&#xD;&#xA;      border-bottom:1px solid #eee;&#xD;&#xA;      background: #ddd;&#xD;&#xA;      color: #000;&#xD;&#xA;      padding: 10px 25px;&#xD;&#xA;    }&#xD;&#xA;    th {&#xD;&#xA;      height: 0;&#xD;&#xA;      line-height: 0;&#xD;&#xA;      padding-top: 0;&#xD;&#xA;      padding-bottom: 0;&#xD;&#xA;      color: transparent;&#xD;&#xA;      border: none;&#xD;&#xA;      white-space: nowrap;&#xD;&#xA;    }&#xD;&#xA;    th div{&#xD;&#xA;      position: absolute;&#xD;&#xA;      background: transparent;&#xD;&#xA;      color: #fff;&#xD;&#xA;      padding: 9px 25px;&#xD;&#xA;      top: 0;&#xD;&#xA;      margin-left: -25px;&#xD;&#xA;      line-height: normal;&#xD;&#xA;      border-left: 1px solid #800;&#xD;&#xA;    }&#xD;&#xA;    th:first-child div{&#xD;&#xA;      border: none;&#xD;&#xA;    }"
-3346273856353424080,87,14,"    import java.awt.*;&#xD;&#xA;    import java.awt.event.*;&#xD;&#xA;    import java.util.List;&#xD;&#xA;    import java.util.ArrayList;&#xD;&#xA;    import javax.swing.*;&#xD;&#xA;    import javax.swing.event.*;&#xD;&#xA;    &#xD;&#xA;    public class DataEntered implements DocumentListener&#xD;&#xA;    {&#xD;&#xA;    	private JButton button;&#xD;&#xA;    	private List<JTextField> textFields = new ArrayList<JTextField>();&#xD;&#xA;    &#xD;&#xA;    	public DataEntered(JButton button)&#xD;&#xA;    	{&#xD;&#xA;    		this.button = button;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public void addTextField(JTextField textField)&#xD;&#xA;    	{&#xD;&#xA;    		textFields.add( textField );&#xD;&#xA;    		textField.getDocument().addDocumentListener( this );&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public boolean isDataEntered()&#xD;&#xA;    	{&#xD;&#xA;    		for (JTextField textField : textFields)&#xD;&#xA;    		{&#xD;&#xA;    			if (textField.getText().trim().length() == 0)&#xD;&#xA;    				return false;&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		return true;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	@Override&#xD;&#xA;    	public void insertUpdate(DocumentEvent e)&#xD;&#xA;    	{&#xD;&#xA;    		checkData();&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	@Override&#xD;&#xA;    	public void removeUpdate(DocumentEvent e)&#xD;&#xA;    	{&#xD;&#xA;    		checkData();&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	@Override&#xD;&#xA;    	public void changedUpdate(DocumentEvent e) {}&#xD;&#xA;    &#xD;&#xA;    	private void checkData()&#xD;&#xA;    	{&#xD;&#xA;    		button.setEnabled( isDataEntered() );&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	private static void createAndShowUI()&#xD;&#xA;    	{&#xD;&#xA;    		JButton submit = new JButton( ""Submit"" );&#xD;&#xA;    		submit.setEnabled( false );&#xD;&#xA;    &#xD;&#xA;    		JTextField textField1 = new JTextField(10);&#xD;&#xA;    		JTextField textField2 = new JTextField(10);&#xD;&#xA;    &#xD;&#xA;    		DataEntered de = new DataEntered( submit );&#xD;&#xA;    		de.addTextField( textField1 );&#xD;&#xA;    		de.addTextField( textField2 );&#xD;&#xA;    &#xD;&#xA;    		JFrame frame = new JFrame(""SSCCE"");&#xD;&#xA;    		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;&#xA;    		frame.add(textField1, BorderLayout.WEST);&#xD;&#xA;    		frame.add(textField2, BorderLayout.EAST);&#xD;&#xA;    		frame.add(submit, BorderLayout.SOUTH);&#xD;&#xA;    		frame.pack();&#xD;&#xA;    		frame.setLocationByPlatform( true );&#xD;&#xA;    		frame.setVisible( true );&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public static void main(String[] args)&#xD;&#xA;    	{&#xD;&#xA;    		EventQueue.invokeLater(new Runnable()&#xD;&#xA;    		{&#xD;&#xA;    			public void run()&#xD;&#xA;    			{&#xD;&#xA;    				createAndShowUI();&#xD;&#xA;    			}&#xD;&#xA;    		});&#xD;&#xA;    	}&#xD;&#xA;    }"
-11398081000933035,23,15,"        <!-- Button trigger modal -->&#xD;&#xA;    <button type=""button"" class=""btn btn-primary btn-lg"" data-toggle=""modal"" data-target=""#myModal"">&#xD;&#xA;      Launch demo modal&#xD;&#xA;    </button>&#xD;&#xA;     &#xD;&#xA;    <!-- Modal -->&#xD;&#xA;    <div class=""modal fade"" id=""myModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"">&#xD;&#xA;      <div class=""modal-dialog"" role=""document"">&#xD;&#xA;        <div class=""modal-content"">&#xD;&#xA;          <div class=""modal-header"">&#xD;&#xA;            <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close""><span aria-hidden=""true"">&times;</span></button>&#xD;&#xA;            <h4 class=""modal-title"" id=""myModalLabel"">Modal title</h4>&#xD;&#xA;          </div>&#xD;&#xA;          <div class=""modal-body"">&#xD;&#xA;            ...&#xD;&#xA;          </div>&#xD;&#xA;          <div class=""modal-footer"">&#xD;&#xA;            <button type=""button"" class=""btn btn-default"" data-dismiss=""modal"">Close</button>&#xD;&#xA;            <button type=""button"" class=""btn btn-primary"">Save changes</button>&#xD;&#xA;          </div>&#xD;&#xA;        </div>&#xD;&#xA;      </div>&#xD;&#xA;    </div>"
-5410818288417065699,29,15,"     On Error Resume Next&#xD;&#xA;     Set File = WScript.CreateObject(""Microsoft.XMLHTTP"")&#xD;&#xA;     File.Open ""GET"", ""http://www.microsoft.com/en-au/default.aspx"", False&#xD;&#xA;     'This is IE 8 headers&#xD;&#xA;     File.setRequestHeader ""User-Agent"", ""Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0; .NET CLR 1.1.4322; .NET CLR 3.5.30729; .NET CLR 3.0.30618; .NET4.0C; .NET4.0E; BCD2000; BCD2000)""&#xD;&#xA;     File.Send&#xD;&#xA;     If err.number <> 0 then &#xD;&#xA;        line =""""&#xD;&#xA;        Line  = Line &  vbcrlf & """" &#xD;&#xA;        Line  = Line &  vbcrlf & ""Error getting file"" &#xD;&#xA;        Line  = Line &  vbcrlf & ""=================="" &#xD;&#xA;        Line  = Line &  vbcrlf & """" &#xD;&#xA;        Line  = Line &  vbcrlf & ""Error "" & err.number & ""(0x"" & hex(err.number) & "") "" & err.description &#xD;&#xA;        Line  = Line &  vbcrlf & ""Source "" & err.source &#xD;&#xA;        Line  = Line &  vbcrlf & """" &#xD;&#xA;        Line  = Line &  vbcrlf & ""HTTP Error "" & File.Status & "" "" & File.StatusText&#xD;&#xA;        Line  = Line &  vbcrlf &  File.getAllResponseHeaders&#xD;&#xA;        wscript.echo Line&#xD;&#xA;        Err.clear&#xD;&#xA;        wscript.quit&#xD;&#xA;     End If&#xD;&#xA;     &#xD;&#xA;    On Error Goto 0&#xD;&#xA;     &#xD;&#xA;     Set BS = CreateObject(""ADODB.Stream"")&#xD;&#xA;     BS.type = 1&#xD;&#xA;     BS.open&#xD;&#xA;     BS.Write File.ResponseBody&#xD;&#xA;     BS.SaveToFile ""c:\users\test.txt"", 2"
948447975576275073,36,15,"    Dim HTMLDoc As HTMLDocument&#xD;&#xA;    Dim oBrowser As InternetExplorer&#xD;&#xA;    Sub Login_2_Website()&#xD;&#xA;    &#xD;&#xA;    Dim oHTML_Element As IHTMLElement&#xD;&#xA;    Dim sURL As String&#xD;&#xA;    &#xD;&#xA;    On Error GoTo Err_Clear&#xD;&#xA;    sURL = ""https://www.google.com/accounts/Login""&#xD;&#xA;    Set oBrowser = New InternetExplorer&#xD;&#xA;    oBrowser.Silent = True&#xD;&#xA;    oBrowser.timeout = 60&#xD;&#xA;    oBrowser.navigate sURL&#xD;&#xA;    oBrowser.Visible = True&#xD;&#xA;    &#xD;&#xA;    Do&#xD;&#xA;    ' Wait till the Browser is loaded&#xD;&#xA;    Loop Until oBrowser.readyState = READYSTATE_COMPLETE&#xD;&#xA;    &#xD;&#xA;    Set HTMLDoc = oBrowser.Document&#xD;&#xA;    &#xD;&#xA;    HTMLDoc.all.Email.Value = ""sample@vbadud.com""&#xD;&#xA;    HTMLDoc.all.passwd.Value = ""*****""&#xD;&#xA;    &#xD;&#xA;    For Each oHTML_Element In HTMLDoc.getElementsByTagName(""input"")&#xD;&#xA;    If oHTML_Element.Type = ""submit"" Then oHTML_Element.Click: Exit For&#xD;&#xA;    Next&#xD;&#xA;    &#xD;&#xA;    ' oBrowser.Refresh ' Refresh If Needed&#xD;&#xA;    Err_Clear:&#xD;&#xA;    If Err <> 0 Then&#xD;&#xA;    Debug.Assert Err = 0&#xD;&#xA;    Err.Clear&#xD;&#xA;    Resume Next&#xD;&#xA;    End If&#xD;&#xA;    End Sub"
-2193151277330483166,45,15,"    - (UIImage*)screenshot &#xD;&#xA;    {&#xD;&#xA;        // Create a graphics context with the target size&#xD;&#xA;        // On iOS 4 and later, use UIGraphicsBeginImageContextWithOptions to take the scale into consideration&#xD;&#xA;        // On iOS prior to 4, fall back to use UIGraphicsBeginImageContext&#xD;&#xA;        CGSize imageSize = [[UIScreen mainScreen] bounds].size;&#xD;&#xA;        if (NULL != UIGraphicsBeginImageContextWithOptions)&#xD;&#xA;            UIGraphicsBeginImageContextWithOptions(imageSize, NO, 0);&#xD;&#xA;        else&#xD;&#xA;            UIGraphicsBeginImageContext(imageSize);&#xD;&#xA;        &#xD;&#xA;        CGContextRef context = UIGraphicsGetCurrentContext();&#xD;&#xA;        &#xD;&#xA;        // Iterate over every window from back to front&#xD;&#xA;        for (UIWindow *window in [[UIApplication sharedApplication] windows]) &#xD;&#xA;        {&#xD;&#xA;            if (![window respondsToSelector:@selector(screen)] || [window screen] == [UIScreen mainScreen])&#xD;&#xA;            {&#xD;&#xA;                // -renderInContext: renders in the coordinate space of the layer,&#xD;&#xA;                // so we must first apply the layer's geometry to the graphics context&#xD;&#xA;                CGContextSaveGState(context);&#xD;&#xA;                // Center the context around the window's anchor point&#xD;&#xA;                CGContextTranslateCTM(context, [window center].x, [window center].y);&#xD;&#xA;                // Apply the window's transform about the anchor point&#xD;&#xA;                CGContextConcatCTM(context, [window transform]);&#xD;&#xA;                // Offset by the portion of the bounds left of and above the anchor point&#xD;&#xA;                CGContextTranslateCTM(context,&#xD;&#xA;                                      -[window bounds].size.width * [[window layer] anchorPoint].x,&#xD;&#xA;                                      -[window bounds].size.height * [[window layer] anchorPoint].y);&#xD;&#xA;                &#xD;&#xA;                // Render the layer hierarchy to the current context&#xD;&#xA;                [[window layer] renderInContext:context];&#xD;&#xA;                &#xD;&#xA;                // Restore the context&#xD;&#xA;                CGContextRestoreGState(context);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        // Retrieve the screenshot image&#xD;&#xA;        UIImage *image = UIGraphicsGetImageFromCurrentImageContext();&#xD;&#xA;        &#xD;&#xA;        UIGraphicsEndImageContext();&#xD;&#xA;        &#xD;&#xA;        return image;&#xD;&#xA;    }"
-234620642798312536,87,15,"    ' Converts a value of any type to its string representation.&#xD;&#xA;    ' The function can be concatenated into an SQL expression as is&#xD;&#xA;    ' without any delimiters or leading/trailing white-space.&#xD;&#xA;    '&#xD;&#xA;    ' Examples:&#xD;&#xA;    '   SQL = ""Select * From TableTest Where [Amount]>"" & CSql(12.5) & ""And [DueDate]<"" & CSql(Date) & """"&#xD;&#xA;    '   SQL -> Select * From TableTest Where [Amount]> 12.5 And [DueDate]< #2016/01/30 00:00:00#&#xD;&#xA;    '&#xD;&#xA;    '   SQL = ""Insert Into TableTest ( [Street] ) Values ("" & CSql("" "") & "")""&#xD;&#xA;    '   SQL -> Insert Into TableTest ( [Street] ) Values ( Null )&#xD;&#xA;    '&#xD;&#xA;    ' Trims text variables for leading/trailing Space and secures single quotes.&#xD;&#xA;    ' Replaces zero length strings with Null.&#xD;&#xA;    ' Formats date/time variables as safe string expressions.&#xD;&#xA;    ' Uses Str to format decimal values to string expressions.&#xD;&#xA;    ' Returns Null for values that cannot be expressed with a string expression.&#xD;&#xA;    '&#xD;&#xA;    ' 2016-01-30. Gustav Brock, Cactus Data ApS, CPH.&#xD;&#xA;    '&#xD;&#xA;    Public Function CSql( _&#xD;&#xA;        ByVal Value As Variant) _&#xD;&#xA;        As String&#xD;&#xA;        &#xD;&#xA;        Const vbLongLong    As Integer = 20&#xD;&#xA;        Const SqlNull       As String = "" Null""&#xD;&#xA;        &#xD;&#xA;        Dim Sql             As String&#xD;&#xA;        Dim LongLong        As Integer&#xD;&#xA;        &#xD;&#xA;        #If Win32 Then&#xD;&#xA;            LongLong = vbLongLong&#xD;&#xA;        #End If&#xD;&#xA;        #If Win64 Then&#xD;&#xA;            LongLong = VBA.vbLongLong&#xD;&#xA;        #End If&#xD;&#xA;    &#xD;&#xA;        Select Case VarType(Value)&#xD;&#xA;            Case vbEmpty            '    0  Empty (uninitialized).&#xD;&#xA;                Sql = SqlNull&#xD;&#xA;            Case vbNull             '    1  Null (no valid data).&#xD;&#xA;                Sql = SqlNull&#xD;&#xA;            Case vbInteger          '    2  Integer.&#xD;&#xA;                Sql = Str(Value)&#xD;&#xA;            Case vbLong             '    3  Long integer.&#xD;&#xA;                Sql = Str(Value)&#xD;&#xA;            Case vbSingle           '    4  Single-precision floating-point number.&#xD;&#xA;                Sql = Str(Value)&#xD;&#xA;            Case vbDouble           '    5  Double-precision floating-point number.&#xD;&#xA;                Sql = Str(Value)&#xD;&#xA;            Case vbCurrency         '    6  Currency.&#xD;&#xA;                Sql = Str(Value)&#xD;&#xA;            Case vbDate             '    7  Date.&#xD;&#xA;                Sql = Format(Value, "" \#yyyy\/mm\/dd hh\:nn\:ss\#"")&#xD;&#xA;            Case vbString           '    8  String.&#xD;&#xA;                Sql = Replace(Trim(Value), ""'"", ""''"")&#xD;&#xA;                If Sql = """" Then&#xD;&#xA;                    Sql = SqlNull&#xD;&#xA;                Else&#xD;&#xA;                    Sql = "" '"" & Sql & ""'""&#xD;&#xA;                End If&#xD;&#xA;            Case vbObject           '    9  Object.&#xD;&#xA;                Sql = SqlNull&#xD;&#xA;            Case vbError            '   10  Error.&#xD;&#xA;                Sql = SqlNull&#xD;&#xA;            Case vbBoolean          '   11  Boolean.&#xD;&#xA;                Sql = Str(Abs(Value))&#xD;&#xA;            Case vbVariant          '   12  Variant (used only with arrays of variants).&#xD;&#xA;                Sql = SqlNull&#xD;&#xA;            Case vbDataObject       '   13  A data access object.&#xD;&#xA;                Sql = SqlNull&#xD;&#xA;            Case vbDecimal          '   14  Decimal.&#xD;&#xA;                Sql = Str(Value)&#xD;&#xA;            Case vbByte             '   17  Byte.&#xD;&#xA;                Sql = Str(Value)&#xD;&#xA;            Case LongLong           '   20  LongLong integer (Valid on 64-bit platforms only).&#xD;&#xA;                Sql = Str(Value)&#xD;&#xA;            Case vbUserDefinedType  '   36  Variants that contain user-defined types.&#xD;&#xA;                Sql = SqlNull&#xD;&#xA;            Case vbArray            ' 8192  Array.&#xD;&#xA;                Sql = SqlNull&#xD;&#xA;            Case Else               '       Should not happen.&#xD;&#xA;                Sql = SqlNull&#xD;&#xA;        End Select&#xD;&#xA;    &#xD;&#xA;        CSql = Sql & "" ""&#xD;&#xA;        &#xD;&#xA;    End Function"
7634855721834100918,209,15,"	############################################&#xD;&#xA;	## uncomment these lines for CGI mode&#xD;&#xA;	## make sure to specify the correct cgi php binary file name&#xD;&#xA;	## it might be /cgi-bin/php-cgi&#xD;&#xA;	&#xD;&#xA;	#    Action php5-cgi /cgi-bin/php5-cgi&#xD;&#xA;	#    AddHandler php5-cgi .php&#xD;&#xA;	&#xD;&#xA;	############################################&#xD;&#xA;	## GoDaddy specific options&#xD;&#xA;	&#xD;&#xA;	#   Options -MultiViews&#xD;&#xA;	&#xD;&#xA;	## you might also need to add this line to php.ini&#xD;&#xA;	##     cgi.fix_pathinfo = 1&#xD;&#xA;	## if it still doesn't work, rename php.ini to php5.ini&#xD;&#xA;	&#xD;&#xA;	############################################&#xD;&#xA;	## this line is specific for 1and1 hosting&#xD;&#xA;	&#xD;&#xA;	    #AddType x-mapp-php5 .php&#xD;&#xA;	    #AddHandler x-mapp-php5 .php&#xD;&#xA;	&#xD;&#xA;	############################################&#xD;&#xA;	## default index file&#xD;&#xA;	&#xD;&#xA;	    DirectoryIndex index.php&#xD;&#xA;	&#xD;&#xA;	<IfModule mod_php5.c>&#xD;&#xA;	&#xD;&#xA;	############################################&#xD;&#xA;	## adjust memory limit&#xD;&#xA;	&#xD;&#xA;	#    php_value memory_limit 64M&#xD;&#xA;	    php_value memory_limit 256M&#xD;&#xA;	    php_value max_execution_time 18000&#xD;&#xA;	&#xD;&#xA;	############################################&#xD;&#xA;	## disable magic quotes for php request vars&#xD;&#xA;	&#xD;&#xA;	    php_flag magic_quotes_gpc off&#xD;&#xA;	&#xD;&#xA;	############################################&#xD;&#xA;	## disable automatic session start&#xD;&#xA;	## before autoload was initialized&#xD;&#xA;	&#xD;&#xA;	    php_flag session.auto_start off&#xD;&#xA;	&#xD;&#xA;	############################################&#xD;&#xA;	## enable resulting html compression&#xD;&#xA;	&#xD;&#xA;	    #php_flag zlib.output_compression on&#xD;&#xA;	&#xD;&#xA;	###########################################&#xD;&#xA;	# disable user agent verification to not break multiple image upload&#xD;&#xA;	&#xD;&#xA;	    php_flag suhosin.session.cryptua off&#xD;&#xA;	&#xD;&#xA;	###########################################&#xD;&#xA;	# turn off compatibility with PHP4 when dealing with objects&#xD;&#xA;	&#xD;&#xA;	    php_flag zend.ze1_compatibility_mode Off&#xD;&#xA;	&#xD;&#xA;	</IfModule>&#xD;&#xA;	&#xD;&#xA;	<IfModule mod_security.c>&#xD;&#xA;	###########################################&#xD;&#xA;	# disable POST processing to not break multiple image upload&#xD;&#xA;	&#xD;&#xA;	    SecFilterEngine Off&#xD;&#xA;	    SecFilterScanPOST Off&#xD;&#xA;	</IfModule>&#xD;&#xA;	&#xD;&#xA;	<IfModule mod_deflate.c>&#xD;&#xA;	&#xD;&#xA;	############################################&#xD;&#xA;	## enable apache served files compression&#xD;&#xA;	## http://developer.yahoo.com/performance/rules.html#gzip&#xD;&#xA;	&#xD;&#xA;	    # Insert filter on all content&#xD;&#xA;	    ###SetOutputFilter DEFLATE&#xD;&#xA;	    # Insert filter on selected content types only&#xD;&#xA;	    #AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css text/javascript&#xD;&#xA;	&#xD;&#xA;	    # Netscape 4.x has some problems...&#xD;&#xA;	    #BrowserMatch ^Mozilla/4 gzip-only-text/html&#xD;&#xA;	&#xD;&#xA;	    # Netscape 4.06-4.08 have some more problems&#xD;&#xA;	    #BrowserMatch ^Mozilla/4\.0[678] no-gzip&#xD;&#xA;	&#xD;&#xA;	    # MSIE masquerades as Netscape, but it is fine&#xD;&#xA;	    #BrowserMatch \bMSIE !no-gzip !gzip-only-text/html&#xD;&#xA;	&#xD;&#xA;	    # Don't compress images&#xD;&#xA;	    #SetEnvIfNoCase Request_URI \.(?:gif|jpe?g|png)$ no-gzip dont-vary&#xD;&#xA;	&#xD;&#xA;	    # Make sure proxies don't deliver the wrong content&#xD;&#xA;	    #Header append Vary User-Agent env=!dont-vary&#xD;&#xA;	&#xD;&#xA;	</IfModule>&#xD;&#xA;	&#xD;&#xA;	<IfModule mod_ssl.c>&#xD;&#xA;	&#xD;&#xA;	############################################&#xD;&#xA;	## make HTTPS env vars available for CGI mode&#xD;&#xA;	&#xD;&#xA;	    SSLOptions StdEnvVars&#xD;&#xA;	&#xD;&#xA;	</IfModule>&#xD;&#xA;	&#xD;&#xA;	<IfModule mod_rewrite.c>&#xD;&#xA;	&#xD;&#xA;	############################################&#xD;&#xA;	## enable rewrites&#xD;&#xA;	&#xD;&#xA;	    Options +FollowSymLinks&#xD;&#xA;	    RewriteEngine on&#xD;&#xA;	&#xD;&#xA;	############################################&#xD;&#xA;	## you can put here your magento root folder&#xD;&#xA;	## path relative to web root&#xD;&#xA;	&#xD;&#xA;	    #RewriteBase /magento/&#xD;&#xA;	&#xD;&#xA;	############################################&#xD;&#xA;	## uncomment next line to enable light API calls processing&#xD;&#xA;	&#xD;&#xA;	#    RewriteRule ^api/([a-z][0-9a-z_]+)/?$ api.php?type=$1 [QSA,L]&#xD;&#xA;	&#xD;&#xA;	############################################&#xD;&#xA;	## rewrite API2 calls to api.php (by now it is REST only)&#xD;&#xA;	&#xD;&#xA;	    RewriteRule ^api/rest api.php?type=rest [QSA,L]&#xD;&#xA;	&#xD;&#xA;	############################################&#xD;&#xA;	## workaround for HTTP authorization&#xD;&#xA;	## in CGI environment&#xD;&#xA;	&#xD;&#xA;	    RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]&#xD;&#xA;	&#xD;&#xA;	############################################&#xD;&#xA;	## TRACE and TRACK HTTP methods disabled to prevent XSS attacks&#xD;&#xA;	&#xD;&#xA;	    RewriteCond %{REQUEST_METHOD} ^TRAC[EK]&#xD;&#xA;	    RewriteRule .* - [L,R=405]&#xD;&#xA;	&#xD;&#xA;	############################################&#xD;&#xA;	## redirect for mobile user agents&#xD;&#xA;	&#xD;&#xA;	    #RewriteCond %{REQUEST_URI} !^/mobiledirectoryhere/.*$&#xD;&#xA;	    #RewriteCond %{HTTP_USER_AGENT} ""android|blackberry|ipad|iphone|ipod|iemobile|opera mobile|palmos|webos|googlebot-mobile"" [NC]&#xD;&#xA;	    #RewriteRule ^(.*)$ /mobiledirectoryhere/ [L,R=302]&#xD;&#xA;	&#xD;&#xA;	############################################&#xD;&#xA;	## always send 404 on missing files in these folders&#xD;&#xA;	&#xD;&#xA;	    RewriteCond %{REQUEST_URI} !^/(media|skin|js)/&#xD;&#xA;	&#xD;&#xA;	############################################&#xD;&#xA;	## never rewrite for existing files, directories and links&#xD;&#xA;	&#xD;&#xA;	    RewriteCond %{REQUEST_FILENAME} !-f&#xD;&#xA;	    RewriteCond %{REQUEST_FILENAME} !-d&#xD;&#xA;	    RewriteCond %{REQUEST_FILENAME} !-l&#xD;&#xA;	&#xD;&#xA;	############################################&#xD;&#xA;	## rewrite everything else to index.php&#xD;&#xA;	&#xD;&#xA;	    RewriteRule .* index.php [L]&#xD;&#xA;	&#xD;&#xA;	</IfModule>&#xD;&#xA;	&#xD;&#xA;	&#xD;&#xA;	############################################&#xD;&#xA;	## Prevent character encoding issues from server overrides&#xD;&#xA;	## If you still have problems, use the second line instead&#xD;&#xA;	&#xD;&#xA;	    AddDefaultCharset Off&#xD;&#xA;	    #AddDefaultCharset UTF-8&#xD;&#xA;	&#xD;&#xA;	<IfModule mod_expires.c>&#xD;&#xA;	&#xD;&#xA;	############################################&#xD;&#xA;	## Add default Expires header&#xD;&#xA;	## http://developer.yahoo.com/performance/rules.html#expires&#xD;&#xA;	&#xD;&#xA;	    ExpiresDefault ""access plus 1 year""&#xD;&#xA;	&#xD;&#xA;	</IfModule>&#xD;&#xA;	&#xD;&#xA;	############################################&#xD;&#xA;	## By default allow all access&#xD;&#xA;	&#xD;&#xA;	    Order allow,deny&#xD;&#xA;	    Allow from all&#xD;&#xA;	&#xD;&#xA;	###########################################&#xD;&#xA;	## Deny access to release notes to prevent disclosure of the installed Magento version&#xD;&#xA;	&#xD;&#xA;	    <Files RELEASE_NOTES.txt>&#xD;&#xA;	        order allow,deny&#xD;&#xA;	        deny from all&#xD;&#xA;	    </Files>&#xD;&#xA;	&#xD;&#xA;	############################################&#xD;&#xA;	## If running in cluster environment, uncomment this&#xD;&#xA;	## http://developer.yahoo.com/performance/rules.html#etags&#xD;&#xA;	&#xD;&#xA;	    #FileETag none"
2617362622770643235,40,16,    <settings>&#xD;&#xA;    	<mirrors>&#xD;&#xA;    		<mirror>&#xD;&#xA;    		<!--This sends everything else to /public -->&#xD;&#xA;    			<id>nexus</id>&#xD;&#xA;    			<mirrorOf>*</mirrorOf>&#xD;&#xA;    			<url>http://localhost:8081/nexus/content/groups/public</url>&#xD;&#xA;    		</mirror>&#xD;&#xA;    	</mirrors>&#xD;&#xA;    &#xD;&#xA;    	<profiles>&#xD;&#xA;    		<profile>&#xD;&#xA;    			<id>nexus</id>&#xD;&#xA;    			<!--Enable snapshots for the built in central repo to direct -->&#xD;&#xA;    			<!--all requests to nexus via the mirror -->&#xD;&#xA;    			<repositories>&#xD;&#xA;    				<repository>&#xD;&#xA;    				<id>central</id>&#xD;&#xA;    				<url>http://central</url>&#xD;&#xA;    				<releases><enabled>true</enabled></releases>&#xD;&#xA;    				<snapshots><enabled>true</enabled></snapshots>&#xD;&#xA;    				</repository>&#xD;&#xA;    			</repositories>&#xD;&#xA;    &#xD;&#xA;    			<pluginRepositories>&#xD;&#xA;    				<pluginRepository>&#xD;&#xA;    					<id>central</id>&#xD;&#xA;    					<url>http://central</url>&#xD;&#xA;    					<releases><enabled>true</enabled></releases>&#xD;&#xA;    					<snapshots><enabled>true</enabled></snapshots>&#xD;&#xA;    				</pluginRepository>&#xD;&#xA;    			</pluginRepositories>&#xD;&#xA;    		</profile>&#xD;&#xA;    	</profiles>&#xD;&#xA;    &#xD;&#xA;    	<activeProfiles>&#xD;&#xA;    	<!--make the profile active all the time -->&#xD;&#xA;    		<activeProfile>nexus</activeProfile>&#xD;&#xA;    	</activeProfiles>&#xD;&#xA;    </settings>
-6714517673976532930,46,16,"			<?php &#xD;&#xA;			//define the receiver of the email &#xD;&#xA;			$to = 'youraddress@example.com'; &#xD;&#xA;			//define the subject of the email &#xD;&#xA;			$subject = 'Test email with attachment'; &#xD;&#xA;			//create a boundary string. It must be unique &#xD;&#xA;			//so we use the MD5 algorithm to generate a random hash &#xD;&#xA;			$random_hash = md5(date('r', time())); &#xD;&#xA;			//define the headers we want passed. Note that they are separated with \r\n &#xD;&#xA;			$headers = ""From: webmaster@example.com\r\nReply-To: webmaster@example.com""; &#xD;&#xA;			//add boundary string and mime type specification &#xD;&#xA;			$headers .= ""\r\nContent-Type: multipart/mixed; boundary=\""PHP-mixed-"".$random_hash.""\""""; &#xD;&#xA;			//read the atachment file contents into a string,&#xD;&#xA;			//encode it with MIME base64,&#xD;&#xA;			//and split it into smaller chunks&#xD;&#xA;			$attachment = chunk_split(base64_encode(file_get_contents('attachment.zip'))); &#xD;&#xA;			//define the body of the message. &#xD;&#xA;			ob_start(); //Turn on output buffering &#xD;&#xA;			?> &#xD;&#xA;			--PHP-mixed-<?php echo $random_hash; ?>  &#xD;&#xA;			Content-Type: multipart/alternative; boundary=""PHP-alt-<?php echo $random_hash; ?>"" &#xD;&#xA;			--PHP-alt-<?php echo $random_hash; ?>  &#xD;&#xA;			Content-Type: text/plain; charset=""iso-8859-1"" &#xD;&#xA;			Content-Transfer-Encoding: 7bit&#xD;&#xA;			Hello World!!! &#xD;&#xA;			This is simple text email message. &#xD;&#xA;			--PHP-alt-<?php echo $random_hash; ?>  &#xD;&#xA;			Content-Type: text/html; charset=""iso-8859-1"" &#xD;&#xA;			Content-Transfer-Encoding: 7bit&#xD;&#xA;			<h2>Hello World!</h2> &#xD;&#xA;			<p>This is something with <b>HTML</b> formatting.</p> &#xD;&#xA;			--PHP-alt-<?php echo $random_hash; ?>-- &#xD;&#xA;			--PHP-mixed-<?php echo $random_hash; ?>  &#xD;&#xA;			Content-Type: application/zip; name=""attachment.zip""  &#xD;&#xA;			Content-Transfer-Encoding: base64  &#xD;&#xA;			Content-Disposition: attachment  &#xD;&#xA;			<?php echo $attachment; ?> &#xD;&#xA;			--PHP-mixed-<?php echo $random_hash; ?>-- &#xD;&#xA;			<?php &#xD;&#xA;			//copy current buffer contents into $message variable and delete current output buffer &#xD;&#xA;			$message = ob_get_clean(); &#xD;&#xA;			//send the email &#xD;&#xA;			$mail_sent = @mail( $to, $subject, $message, $headers ); &#xD;&#xA;			//if the message is sent successfully print ""Mail sent"". Otherwise print ""Mail failed"" &#xD;&#xA;			echo $mail_sent ? ""Mail sent"" : ""Mail failed""; &#xD;&#xA;			?>"
-2122432285354034163,68,16,"	user www-data;&#xD;&#xA;	worker_processes auto;&#xD;&#xA;	pid /run/nginx.pid;&#xD;&#xA;	events {&#xD;&#xA;		worker_connections 768;&#xD;&#xA;		# multi_accept on;&#xD;&#xA;	}&#xD;&#xA;	http {&#xD;&#xA;		##&#xD;&#xA;		# Basic Settings&#xD;&#xA;		##&#xD;&#xA;		sendfile on;&#xD;&#xA;		tcp_nopush on;&#xD;&#xA;		tcp_nodelay on;&#xD;&#xA;		keepalive_timeout 65;&#xD;&#xA;		types_hash_max_size 2048;&#xD;&#xA;		# server_tokens off;&#xD;&#xA;		server_names_hash_bucket_size 64;&#xD;&#xA;		# server_name_in_redirect off;&#xD;&#xA;		include /etc/nginx/mime.types;&#xD;&#xA;		default_type application/octet-stream;&#xD;&#xA;		##&#xD;&#xA;		# SSL Settings&#xD;&#xA;		##&#xD;&#xA;		ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE&#xD;&#xA;		ssl_prefer_server_ciphers on;&#xD;&#xA;		##&#xD;&#xA;		# Logging Settings&#xD;&#xA;		##&#xD;&#xA;		access_log /var/log/nginx/access.log;&#xD;&#xA;		error_log /var/log/nginx/error.log;&#xD;&#xA;		##&#xD;&#xA;		# Gzip Settings&#xD;&#xA;		##&#xD;&#xA;		gzip on;&#xD;&#xA;		gzip_disable ""msie6"";&#xD;&#xA;		# gzip_vary on;&#xD;&#xA;		# gzip_proxied any;&#xD;&#xA;		# gzip_comp_level 6;&#xD;&#xA;		# gzip_buffers 16 8k;&#xD;&#xA;		# gzip_http_version 1.1;&#xD;&#xA;		# gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;&#xD;&#xA;		##&#xD;&#xA;		# Virtual Host Configs&#xD;&#xA;		##&#xD;&#xA;		include /etc/nginx/conf.d/*.conf;&#xD;&#xA;		include /etc/nginx/sites-enabled/*;&#xD;&#xA;	}&#xD;&#xA;	#mail {&#xD;&#xA;	#	# See sample authentication script at:&#xD;&#xA;	#	# http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript&#xD;&#xA;	# &#xD;&#xA;	#	# auth_http localhost/auth.php;&#xD;&#xA;	#	# pop3_capabilities ""TOP"" ""USER"";&#xD;&#xA;	#	# imap_capabilities ""IMAP4rev1"" ""UIDPLUS"";&#xD;&#xA;	# &#xD;&#xA;	#	server {&#xD;&#xA;	#		listen     localhost:110;&#xD;&#xA;	#		protocol   pop3;&#xD;&#xA;	#		proxy      on;&#xD;&#xA;	#	}&#xD;&#xA;	# &#xD;&#xA;	#	server {&#xD;&#xA;	#		listen     localhost:143;&#xD;&#xA;	#		protocol   imap;&#xD;&#xA;	#		proxy      on;&#xD;&#xA;	#	}&#xD;&#xA;	#}"
-863274064103839464,38,17,"       public static int calculateInSampleSize(&#xD;&#xA;                    BitmapFactory.Options options, int reqWidth, int reqHeight) {&#xD;&#xA;            // Raw height and width of image&#xD;&#xA;            final int height = options.outHeight;&#xD;&#xA;            final int width = options.outWidth;&#xD;&#xA;            int inSampleSize = 1;&#xD;&#xA;        &#xD;&#xA;            if (height > reqHeight || width > reqWidth) {&#xD;&#xA;        &#xD;&#xA;                final int halfHeight = height / 2;&#xD;&#xA;                final int halfWidth = width / 2;&#xD;&#xA;        &#xD;&#xA;                // Calculate the largest inSampleSize value that is a power of 2 and keeps both&#xD;&#xA;                // height and width larger than the requested height and width.&#xD;&#xA;                while ((halfHeight / inSampleSize) > reqHeight&#xD;&#xA;                        && (halfWidth / inSampleSize) > reqWidth) {&#xD;&#xA;                    inSampleSize *= 2;&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            return inSampleSize;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    public static Bitmap decodeSampledBitmapFromResource(Resources res, int resId,&#xD;&#xA;            int reqWidth, int reqHeight) {&#xD;&#xA;    &#xD;&#xA;        // First decode with inJustDecodeBounds=true to check dimensions&#xD;&#xA;        final BitmapFactory.Options options = new BitmapFactory.Options();&#xD;&#xA;        options.inJustDecodeBounds = true;&#xD;&#xA;        BitmapFactory.decodeResource(res, resId, options);&#xD;&#xA;    &#xD;&#xA;        // Calculate inSampleSize&#xD;&#xA;        options.inSampleSize = calculateInSampleSize(options, reqWidth, reqHeight);&#xD;&#xA;    &#xD;&#xA;        // Decode bitmap with inSampleSize set&#xD;&#xA;        options.inJustDecodeBounds = false;&#xD;&#xA;        return BitmapFactory.decodeResource(res, resId, options);&#xD;&#xA;    }"
-7955177556723432162,44,17,"        <?xml version=""1.0"" encoding=""utf-8""?>&#xD;&#xA;    <manifest xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;        package=""com.geeklabs.map""&#xD;&#xA;        android:versionCode=""1""&#xD;&#xA;        android:versionName=""1.0"" >&#xD;&#xA;    &#xD;&#xA;        <uses-sdk&#xD;&#xA;            android:minSdkVersion=""8""&#xD;&#xA;            android:targetSdkVersion=""18"" />&#xD;&#xA;    &#xD;&#xA;        <uses-feature&#xD;&#xA;            android:glEsVersion=""0x00020000""&#xD;&#xA;            android:required=""true"" />&#xD;&#xA;    &#xD;&#xA;        <uses-permission android:name=""android.permission.INTERNET"" />&#xD;&#xA;        <uses-permission android:name=""android.permission.ACCESS_NETWORK_STATE"" />&#xD;&#xA;        <uses-permission android:name=""android.permission.WRITE_EXTERNAL_STORAGE"" />&#xD;&#xA;        <uses-permission android:name=""com.google.android.providers.gsf.permission.READ_GSERVICES"" />&#xD;&#xA;        <uses-permission android:name=""android.permission.ACCESS_COARSE_LOCATION"" />&#xD;&#xA;        <uses-permission android:name=""android.permission.ACCESS_FINE_LOCATION"" />&#xD;&#xA;    &#xD;&#xA;        <application&#xD;&#xA;            android:allowBackup=""true""&#xD;&#xA;            android:icon=""@drawable/ic_launcher""&#xD;&#xA;            android:label=""@string/app_name""&#xD;&#xA;            android:theme=""@style/AppTheme"" >&#xD;&#xA;            <activity&#xD;&#xA;                android:name=""com.geeklabs.map.MainActivity""&#xD;&#xA;                android:label=""@string/app_name"" >&#xD;&#xA;                <intent-filter>&#xD;&#xA;                    <action android:name=""android.intent.action.MAIN"" />&#xD;&#xA;    &#xD;&#xA;                    <category android:name=""android.intent.category.LAUNCHER"" />&#xD;&#xA;                </intent-filter>&#xD;&#xA;            </activity>&#xD;&#xA;            &#xD;&#xA;            <meta-data&#xD;&#xA;        android:name=""com.google.android.maps.v2.API_KEY""&#xD;&#xA;        android:value=""replace with your API key""/>&#xD;&#xA;            &#xD;&#xA;        </application>&#xD;&#xA;    &#xD;&#xA;    </manifest>&#xD;&#xA;    "
7836666580979170565,111,17,     /* Smartphones (portrait and landscape) ----------- */&#xD;&#xA;    @media only screen and (min-device-width : 320px) and (max-device-width : 480px) {&#xD;&#xA;    /* Styles */&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    /* Smartphones (landscape) ----------- */&#xD;&#xA;    @media only screen and (min-width : 321px) {&#xD;&#xA;    /* Styles */&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    /* Smartphones (portrait) ----------- */&#xD;&#xA;    @media only screen and (max-width : 320px) {&#xD;&#xA;    /* Styles */&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    /* iPads (portrait and landscape) ----------- */&#xD;&#xA;    @media only screen and (min-device-width : 768px) and (max-device-width : 1024px) {&#xD;&#xA;    /* Styles */&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    /* iPads (landscape) ----------- */&#xD;&#xA;    @media only screen and (min-device-width : 768px) and (max-device-width : 1024px) and (orientation : landscape) {&#xD;&#xA;    /* Styles */&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    /* iPads (portrait) ----------- */&#xD;&#xA;    @media only screen and (min-device-width : 768px) and (max-device-width : 1024px) and (orientation : portrait) {&#xD;&#xA;    /* Styles */&#xD;&#xA;    }&#xD;&#xA;    /**********&#xD;&#xA;    iPad 3&#xD;&#xA;    **********/&#xD;&#xA;    @media only screen and (min-device-width : 768px) and (max-device-width : 1024px) and (orientation : landscape) and (-webkit-min-device-pixel-ratio : 2) {&#xD;&#xA;    /* Styles */&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    @media only screen and (min-device-width : 768px) and (max-device-width : 1024px) and (orientation : portrait) and (-webkit-min-device-pixel-ratio : 2) {&#xD;&#xA;    /* Styles */&#xD;&#xA;    }&#xD;&#xA;    /* Desktops and laptops ----------- */&#xD;&#xA;    @media only screen  and (min-width : 1224px) {&#xD;&#xA;    /* Styles */&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    /* Large screens ----------- */&#xD;&#xA;    @media only screen  and (min-width : 1824px) {&#xD;&#xA;    /* Styles */&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    /* iPhone 4 ----------- */&#xD;&#xA;    @media only screen and (min-device-width : 320px) and (max-device-width : 480px) and (orientation : landscape) and (-webkit-min-device-pixel-ratio : 2) {&#xD;&#xA;    /* Styles */&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    @media only screen and (min-device-width : 320px) and (max-device-width : 480px) and (orientation : portrait) and (-webkit-min-device-pixel-ratio : 2) {&#xD;&#xA;    /* Styles */&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    /* iPhone 5 ----------- */&#xD;&#xA;    @media only screen and (min-device-width: 320px) and (max-device-height: 568px) and (orientation : landscape) and (-webkit-device-pixel-ratio: 2){&#xD;&#xA;    /* Styles */&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    @media only screen and (min-device-width: 320px) and (max-device-height: 568px) and (orientation : portrait) and (-webkit-device-pixel-ratio: 2){&#xD;&#xA;    /* Styles */&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    /* iPhone 6 ----------- */&#xD;&#xA;    @media only screen and (min-device-width: 375px) and (max-device-height: 667px) and (orientation : landscape) and (-webkit-device-pixel-ratio: 2){&#xD;&#xA;    /* Styles */&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    @media only screen and (min-device-width: 375px) and (max-device-height: 667px) and (orientation : portrait) and (-webkit-device-pixel-ratio: 2){&#xD;&#xA;    /* Styles */&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    /* iPhone 6+ ----------- */&#xD;&#xA;    @media only screen and (min-device-width: 414px) and (max-device-height: 736px) and (orientation : landscape) and (-webkit-device-pixel-ratio: 2){&#xD;&#xA;    /* Styles */&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    @media only screen and (min-device-width: 414px) and (max-device-height: 736px) and (orientation : portrait) and (-webkit-device-pixel-ratio: 2){&#xD;&#xA;    /* Styles */&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    /* Samsung Galaxy S3 ----------- */&#xD;&#xA;    @media only screen and (min-device-width: 320px) and (max-device-height: 640px) and (orientation : landscape) and (-webkit-device-pixel-ratio: 2){&#xD;&#xA;    /* Styles */&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    @media only screen and (min-device-width: 320px) and (max-device-height: 640px) and (orientation : portrait) and (-webkit-device-pixel-ratio: 2){&#xD;&#xA;    /* Styles */&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    /* Samsung Galaxy S4 ----------- */&#xD;&#xA;    @media only screen and (min-device-width: 320px) and (max-device-height: 640px) and (orientation : landscape) and (-webkit-device-pixel-ratio: 3){&#xD;&#xA;    /* Styles */&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    @media only screen and (min-device-width: 320px) and (max-device-height: 640px) and (orientation : portrait) and (-webkit-device-pixel-ratio: 3){&#xD;&#xA;    /* Styles */&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    /* Samsung Galaxy S5 ----------- */&#xD;&#xA;    @media only screen and (min-device-width: 360px) and (max-device-height: 640px) and (orientation : landscape) and (-webkit-device-pixel-ratio: 3){&#xD;&#xA;    /* Styles */&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    @media only screen and (min-device-width: 360px) and (max-device-height: 640px) and (orientation : portrait) and (-webkit-device-pixel-ratio: 3){&#xD;&#xA;    /* Styles */&#xD;&#xA;    }
-5807378027115125291,67,18,"          public class JSONParser {&#xD;&#xA;	static InputStream is = null;&#xD;&#xA;	static JSONObject jObj = null;&#xD;&#xA;	static String json = """";&#xD;&#xA;	// constructor&#xD;&#xA;	public JSONParser() {&#xD;&#xA;	}&#xD;&#xA;	// function get json from url&#xD;&#xA;	// by making HTTP POST or GET method&#xD;&#xA;	public JSONObject makeHttpRequest(String url, String method,&#xD;&#xA;			List<NameValuePair> params) {&#xD;&#xA;		// Making HTTP request&#xD;&#xA;		try {&#xD;&#xA;			&#xD;&#xA;			// check for request method&#xD;&#xA;			if(method == ""POST""){&#xD;&#xA;				// request method is POST&#xD;&#xA;				// defaultHttpClient&#xD;&#xA;				DefaultHttpClient httpClient = new DefaultHttpClient();&#xD;&#xA;				HttpPost httpPost = new HttpPost(url);&#xD;&#xA;				httpPost.setEntity(new UrlEncodedFormEntity(params));&#xD;&#xA;				HttpResponse httpResponse = httpClient.execute(httpPost);&#xD;&#xA;				HttpEntity httpEntity = httpResponse.getEntity();&#xD;&#xA;				is = httpEntity.getContent();&#xD;&#xA;				&#xD;&#xA;			}else if(method == ""GET""){&#xD;&#xA;				// request method is GET&#xD;&#xA;				DefaultHttpClient httpClient = new DefaultHttpClient();&#xD;&#xA;				String paramString = URLEncodedUtils.format(params, ""utf-8"");&#xD;&#xA;				url += ""?"" + paramString;&#xD;&#xA;				HttpGet httpGet = new HttpGet(url);&#xD;&#xA;				HttpResponse httpResponse = httpClient.execute(httpGet);&#xD;&#xA;				HttpEntity httpEntity = httpResponse.getEntity();&#xD;&#xA;				is = httpEntity.getContent();&#xD;&#xA;			}			&#xD;&#xA;			&#xD;&#xA;		} catch (UnsupportedEncodingException e) {&#xD;&#xA;			e.printStackTrace();&#xD;&#xA;		} catch (ClientProtocolException e) {&#xD;&#xA;			e.printStackTrace();&#xD;&#xA;		} catch (IOException e) {&#xD;&#xA;			e.printStackTrace();&#xD;&#xA;		}&#xD;&#xA;		try {&#xD;&#xA;			BufferedReader reader = new BufferedReader(new InputStreamReader(&#xD;&#xA;					is, ""iso-8859-1""), 8);&#xD;&#xA;			StringBuilder sb = new StringBuilder();&#xD;&#xA;			String line = null;&#xD;&#xA;			while ((line = reader.readLine()) != null) {&#xD;&#xA;				sb.append(line + ""\n"");&#xD;&#xA;			}&#xD;&#xA;			is.close();&#xD;&#xA;			json = sb.toString();&#xD;&#xA;		} catch (Exception e) {&#xD;&#xA;			Log.e(""Buffer Error"", ""Error converting result "" + e.toString());&#xD;&#xA;		}&#xD;&#xA;		// try parse the string to a JSON object&#xD;&#xA;		try {&#xD;&#xA;			jObj = new JSONObject(json);&#xD;&#xA;		} catch (JSONException e) {&#xD;&#xA;			Log.e(""JSON Parser"", ""Error parsing data "" + e.toString());&#xD;&#xA;		}&#xD;&#xA;		// return JSON String&#xD;&#xA;		return jObj;&#xD;&#xA;	}&#xD;&#xA;    }&#xD;&#xA;   "
8547478478564576102,68,18,"     public class ServiceHandler {&#xD;&#xA;	 static String response = null;&#xD;&#xA;	    public final static int GET = 1;&#xD;&#xA;	    public final static int POST = 2;&#xD;&#xA;	 &#xD;&#xA;	    public ServiceHandler() {&#xD;&#xA;	 &#xD;&#xA;	    }&#xD;&#xA;	 &#xD;&#xA;	    /**&#xD;&#xA;	     * Making service call&#xD;&#xA;	     * @url - url to make request&#xD;&#xA;	     * @method - http request method&#xD;&#xA;	     * */&#xD;&#xA;	    public String makeServiceCall(String url, int method) {&#xD;&#xA;	        return this.makeServiceCall(url, method, null);&#xD;&#xA;	    }&#xD;&#xA;	 &#xD;&#xA;	    /**&#xD;&#xA;	     * Making service call&#xD;&#xA;	     * @url - url to make request&#xD;&#xA;	     * @method - http request method&#xD;&#xA;	     * @params - http request params&#xD;&#xA;	     * */&#xD;&#xA;	    public String makeServiceCall(String url, int method,&#xD;&#xA;	            List<NameValuePair> params) {&#xD;&#xA;	        try {&#xD;&#xA;	            // http client&#xD;&#xA;	            DefaultHttpClient httpClient = new DefaultHttpClient();&#xD;&#xA;	            HttpEntity httpEntity = null;&#xD;&#xA;	            HttpResponse httpResponse = null;&#xD;&#xA;	             &#xD;&#xA;	            // Checking http request method type&#xD;&#xA;	            if (method == POST) {&#xD;&#xA;	                HttpPost httpPost = new HttpPost(url);&#xD;&#xA;	                // adding post params&#xD;&#xA;	                if (params != null) {&#xD;&#xA;	                    httpPost.setEntity(new UrlEncodedFormEntity(params));&#xD;&#xA;	                }&#xD;&#xA;	 &#xD;&#xA;	                httpResponse = httpClient.execute(httpPost);&#xD;&#xA;	 &#xD;&#xA;	            } else if (method == GET) {&#xD;&#xA;	                // appending params to url&#xD;&#xA;	                if (params != null) {&#xD;&#xA;	                    String paramString = URLEncodedUtils&#xD;&#xA;	                            .format(params, ""utf-8"");&#xD;&#xA;	                    url += ""?"" + paramString;&#xD;&#xA;	                }&#xD;&#xA;	                HttpGet httpGet = new HttpGet(url);&#xD;&#xA;	 &#xD;&#xA;	                httpResponse = httpClient.execute(httpGet);&#xD;&#xA;	 &#xD;&#xA;	            }&#xD;&#xA;	            httpEntity = httpResponse.getEntity();&#xD;&#xA;	            response = EntityUtils.toString(httpEntity);&#xD;&#xA;	 &#xD;&#xA;	        } catch (UnsupportedEncodingException e) {&#xD;&#xA;	            e.printStackTrace();&#xD;&#xA;	        } catch (ClientProtocolException e) {&#xD;&#xA;	            e.printStackTrace();&#xD;&#xA;	        } catch (IOException e) {&#xD;&#xA;	            e.printStackTrace();&#xD;&#xA;	        }&#xD;&#xA;	         &#xD;&#xA;	        return response;&#xD;&#xA;	 &#xD;&#xA;	    }"
1090486747863262817,49,19,"		.modalDialog {&#xD;&#xA;		position: fixed;&#xD;&#xA;		font-family: Arial, Helvetica, sans-serif;&#xD;&#xA;		top: 0;&#xD;&#xA;		right: 0;&#xD;&#xA;		bottom: 0;&#xD;&#xA;		left: 0;&#xD;&#xA;		background: rgba(0,0,0,0.8);&#xD;&#xA;		z-index: 99999;&#xD;&#xA;		opacity:0;&#xD;&#xA;		-webkit-transition: opacity 400ms ease-in;&#xD;&#xA;		-moz-transition: opacity 400ms ease-in;&#xD;&#xA;		transition: opacity 400ms ease-in;&#xD;&#xA;		pointer-events: none;&#xD;&#xA;	}&#xD;&#xA;	.modalDialog:target {&#xD;&#xA;		opacity:1;&#xD;&#xA;		pointer-events: auto;&#xD;&#xA;	}&#xD;&#xA;	.modalDialog > div {&#xD;&#xA;		width: 400px;&#xD;&#xA;		position: relative;&#xD;&#xA;		margin: 10% auto;&#xD;&#xA;		padding: 5px 20px 13px 20px;&#xD;&#xA;		border-radius: 10px;&#xD;&#xA;		background: #fff;&#xD;&#xA;		background: -moz-linear-gradient(#fff, #999);&#xD;&#xA;		background: -webkit-linear-gradient(#fff, #999);&#xD;&#xA;		background: -o-linear-gradient(#fff, #999);&#xD;&#xA;	}&#xD;&#xA;	.close {&#xD;&#xA;		background: #606061;&#xD;&#xA;		color: #FFFFFF;&#xD;&#xA;		line-height: 25px;&#xD;&#xA;		position: absolute;&#xD;&#xA;		right: -12px;&#xD;&#xA;		text-align: center;&#xD;&#xA;		top: -10px;&#xD;&#xA;		width: 24px;&#xD;&#xA;		text-decoration: none;&#xD;&#xA;		font-weight: bold;&#xD;&#xA;		-webkit-border-radius: 12px;&#xD;&#xA;		-moz-border-radius: 12px;&#xD;&#xA;		border-radius: 12px;&#xD;&#xA;		-moz-box-shadow: 1px 1px 3px #000;&#xD;&#xA;		-webkit-box-shadow: 1px 1px 3px #000;&#xD;&#xA;		box-shadow: 1px 1px 3px #000;&#xD;&#xA;	}&#xD;&#xA;	.close:hover { background: #00d9ff; }"
4399038646876727212,72,19,"	import java.io.BufferedReader;&#xD;&#xA;	import java.io.IOException;&#xD;&#xA;	import java.io.InputStream;&#xD;&#xA;	import java.io.InputStreamReader;&#xD;&#xA;	import java.io.UnsupportedEncodingException;&#xD;&#xA;	&#xD;&#xA;	import org.apache.http.HttpEntity;&#xD;&#xA;	import org.apache.http.HttpResponse;&#xD;&#xA;	import org.apache.http.client.ClientProtocolException;&#xD;&#xA;	import org.apache.http.client.methods.HttpPost;&#xD;&#xA;	import org.apache.http.impl.client.DefaultHttpClient;&#xD;&#xA;	import org.json.JSONException;&#xD;&#xA;	import org.json.JSONObject;&#xD;&#xA;	&#xD;&#xA;	import android.util.Log;&#xD;&#xA;	 &#xD;&#xA;	public class JSONParser {&#xD;&#xA;	 &#xD;&#xA;	    static InputStream is = null;&#xD;&#xA;	    static JSONObject jObj = null;&#xD;&#xA;	    static String json = """";&#xD;&#xA;	 &#xD;&#xA;	    // constructor&#xD;&#xA;	    public JSONParser() {&#xD;&#xA;	 &#xD;&#xA;	    }&#xD;&#xA;	 &#xD;&#xA;	    public JSONObject getJSONFromUrl(String url) { &#xD;&#xA;	        // Making HTTP request&#xD;&#xA;	        try {&#xD;&#xA;	            // defaultHttpClient&#xD;&#xA;	            DefaultHttpClient httpClient = new DefaultHttpClient();&#xD;&#xA;	            HttpPost httpPost = new HttpPost(url);&#xD;&#xA;	 &#xD;&#xA;	            HttpResponse httpResponse = httpClient.execute(httpPost);&#xD;&#xA;	            HttpEntity httpEntity = httpResponse.getEntity();&#xD;&#xA;	            is = httpEntity.getContent();           &#xD;&#xA;	 &#xD;&#xA;	        } catch (UnsupportedEncodingException e) {&#xD;&#xA;	            e.printStackTrace();&#xD;&#xA;	        } catch (ClientProtocolException e) {&#xD;&#xA;	            e.printStackTrace();&#xD;&#xA;	        } catch (IOException e) {&#xD;&#xA;	            e.printStackTrace();&#xD;&#xA;	        }&#xD;&#xA;	 &#xD;&#xA;	        try {&#xD;&#xA;	            BufferedReader reader = new BufferedReader(new InputStreamReader(&#xD;&#xA;	                    is, ""iso-8859-1""), 8);&#xD;&#xA;	            StringBuilder sb = new StringBuilder();&#xD;&#xA;	            String line = null;&#xD;&#xA;	            while ((line = reader.readLine()) != null) {&#xD;&#xA;	                sb.append(line + ""n"");&#xD;&#xA;	            }&#xD;&#xA;	            is.close();&#xD;&#xA;	            json = sb.toString();&#xD;&#xA;	        } catch (Exception e) {&#xD;&#xA;	            Log.e(""Buffer Error"", ""Error converting result "" + e.toString());&#xD;&#xA;	        }&#xD;&#xA;	 &#xD;&#xA;	        // try parse the string to a JSON object&#xD;&#xA;	        try {&#xD;&#xA;	            jObj = new JSONObject(json);&#xD;&#xA;	        } catch (JSONException e) {&#xD;&#xA;	            Log.e(""JSON Parser"", ""Error parsing data "" + e.toString());&#xD;&#xA;	        }&#xD;&#xA;	 &#xD;&#xA;	        // return JSON String&#xD;&#xA;			return jObj;&#xD;&#xA;	&#xD;&#xA;		}&#xD;&#xA;	}"
9202823679458084878,116,19,"    Sub Basic_Example_1()&#xD;&#xA;        Dim MyPath As String, FilesInPath As String&#xD;&#xA;        Dim MyFiles() As String&#xD;&#xA;        Dim SourceRcount As Long, Fnum As Long&#xD;&#xA;        Dim mybook As Workbook, BaseWks As Worksheet&#xD;&#xA;        Dim sourceRange As Range, destrange As Range&#xD;&#xA;        Dim rnum As Long, CalcMode As Long&#xD;&#xA;    &#xD;&#xA;        'Fill in the path\folder where the files are&#xD;&#xA;        MyPath = ""C:\Users\Ron\test""&#xD;&#xA;    &#xD;&#xA;        'Add a slash at the end if the user forget it&#xD;&#xA;        If Right(MyPath, 1) <> ""\"" Then&#xD;&#xA;            MyPath = MyPath & ""\""&#xD;&#xA;        End If&#xD;&#xA;    &#xD;&#xA;        'If there are no Excel files in the folder exit the sub&#xD;&#xA;        FilesInPath = Dir(MyPath & ""*.xl*"")&#xD;&#xA;        If FilesInPath = """" Then&#xD;&#xA;            MsgBox ""No files found""&#xD;&#xA;            Exit Sub&#xD;&#xA;        End If&#xD;&#xA;    &#xD;&#xA;        'Fill the array(myFiles)with the list of Excel files in the folder&#xD;&#xA;        Fnum = 0&#xD;&#xA;        Do While FilesInPath <> """"&#xD;&#xA;            Fnum = Fnum + 1&#xD;&#xA;            ReDim Preserve MyFiles(1 To Fnum)&#xD;&#xA;            MyFiles(Fnum) = FilesInPath&#xD;&#xA;            FilesInPath = Dir()&#xD;&#xA;        Loop&#xD;&#xA;    &#xD;&#xA;        'Change ScreenUpdating, Calculation and EnableEvents&#xD;&#xA;        With Application&#xD;&#xA;            CalcMode = .Calculation&#xD;&#xA;            .Calculation = xlCalculationManual&#xD;&#xA;            .ScreenUpdating = False&#xD;&#xA;            .EnableEvents = False&#xD;&#xA;        End With&#xD;&#xA;    &#xD;&#xA;        'Add a new workbook with one sheet&#xD;&#xA;        Set BaseWks = Workbooks.Add(xlWBATWorksheet).Worksheets(1)&#xD;&#xA;        rnum = 1&#xD;&#xA;    &#xD;&#xA;        'Loop through all files in the array(myFiles)&#xD;&#xA;        If Fnum > 0 Then&#xD;&#xA;            For Fnum = LBound(MyFiles) To UBound(MyFiles)&#xD;&#xA;                Set mybook = Nothing&#xD;&#xA;                On Error Resume Next&#xD;&#xA;                Set mybook = Workbooks.Open(MyPath & MyFiles(Fnum))&#xD;&#xA;                On Error GoTo 0&#xD;&#xA;    &#xD;&#xA;                If Not mybook Is Nothing Then&#xD;&#xA;    &#xD;&#xA;                    On Error Resume Next&#xD;&#xA;    &#xD;&#xA;                    With mybook.Worksheets(1)&#xD;&#xA;                        Set sourceRange = .Range(""A1:C1"")&#xD;&#xA;                    End With&#xD;&#xA;    &#xD;&#xA;                    If Err.Number > 0 Then&#xD;&#xA;                        Err.Clear&#xD;&#xA;                        Set sourceRange = Nothing&#xD;&#xA;                    Else&#xD;&#xA;                        'if SourceRange use all columns then skip this file&#xD;&#xA;                        If sourceRange.Columns.Count >= BaseWks.Columns.Count Then&#xD;&#xA;                            Set sourceRange = Nothing&#xD;&#xA;                        End If&#xD;&#xA;                    End If&#xD;&#xA;                    On Error GoTo 0&#xD;&#xA;    &#xD;&#xA;                    If Not sourceRange Is Nothing Then&#xD;&#xA;    &#xD;&#xA;                        SourceRcount = sourceRange.Rows.Count&#xD;&#xA;    &#xD;&#xA;                        If rnum + SourceRcount >= BaseWks.Rows.Count Then&#xD;&#xA;                            MsgBox ""Sorry there are not enough rows in the sheet""&#xD;&#xA;                            BaseWks.Columns.AutoFit&#xD;&#xA;                            mybook.Close savechanges:=False&#xD;&#xA;                            GoTo ExitTheSub&#xD;&#xA;                        Else&#xD;&#xA;    &#xD;&#xA;                            'Copy the file name in column A&#xD;&#xA;                            With sourceRange&#xD;&#xA;                                BaseWks.cells(rnum, ""A""). _&#xD;&#xA;                                        Resize(.Rows.Count).Value = MyFiles(Fnum)&#xD;&#xA;                            End With&#xD;&#xA;    &#xD;&#xA;                            'Set the destrange&#xD;&#xA;                            Set destrange = BaseWks.Range(""B"" & rnum)&#xD;&#xA;    &#xD;&#xA;                            'we copy the values from the sourceRange to the destrange&#xD;&#xA;                            With sourceRange&#xD;&#xA;                                Set destrange = destrange. _&#xD;&#xA;                                                Resize(.Rows.Count, .Columns.Count)&#xD;&#xA;                            End With&#xD;&#xA;                            destrange.Value = sourceRange.Value&#xD;&#xA;    &#xD;&#xA;                            rnum = rnum + SourceRcount&#xD;&#xA;                        End If&#xD;&#xA;                    End If&#xD;&#xA;                    mybook.Close savechanges:=False&#xD;&#xA;                End If&#xD;&#xA;    &#xD;&#xA;            Next Fnum&#xD;&#xA;            BaseWks.Columns.AutoFit&#xD;&#xA;        End If&#xD;&#xA;    &#xD;&#xA;    ExitTheSub:&#xD;&#xA;        'Restore ScreenUpdating, Calculation and EnableEvents&#xD;&#xA;        With Application&#xD;&#xA;            .ScreenUpdating = True&#xD;&#xA;            .EnableEvents = True&#xD;&#xA;            .Calculation = CalcMode&#xD;&#xA;        End With&#xD;&#xA;    End Sub"
-35831981428005911,37,20,"	{&#xD;&#xA;		""store"": {&#xD;&#xA;			""book"": [&#xD;&#xA;				{&#xD;&#xA;					""category"": ""reference"",&#xD;&#xA;					""author"": ""Nigel Rees"",&#xD;&#xA;					""title"": ""Sayings of the Century"",&#xD;&#xA;					""price"": 8.95&#xD;&#xA;				},&#xD;&#xA;				{&#xD;&#xA;					""category"": ""fiction"",&#xD;&#xA;					""author"": ""Evelyn Waugh"",&#xD;&#xA;					""title"": ""Sword of Honour"",&#xD;&#xA;					""price"": 12.99&#xD;&#xA;				},&#xD;&#xA;				{&#xD;&#xA;					""category"": ""fiction"",&#xD;&#xA;					""author"": ""Herman Melville"",&#xD;&#xA;					""title"": ""Moby Dick"",&#xD;&#xA;					""isbn"": ""0-553-21311-3"",&#xD;&#xA;					""price"": 8.99&#xD;&#xA;				},&#xD;&#xA;				{&#xD;&#xA;					""category"": ""fiction"",&#xD;&#xA;					""author"": ""J. R. R. Tolkien"",&#xD;&#xA;					""title"": ""The Lord of the Rings"",&#xD;&#xA;					""isbn"": ""0-395-19395-8"",&#xD;&#xA;					""price"": 22.99&#xD;&#xA;				}&#xD;&#xA;			],&#xD;&#xA;			""bicycle"": {&#xD;&#xA;				""color"": ""red"",&#xD;&#xA;				""price"": 19.95&#xD;&#xA;			}&#xD;&#xA;		},&#xD;&#xA;		""expensive"": 10&#xD;&#xA;	}"
-4458403169525607496,43,20,"    public class AppController  extends Application{&#xD;&#xA;    public static final String TAG = AppController.class&#xD;&#xA;            .getSimpleName();&#xD;&#xA;    private RequestQueue mRequestQueue;&#xD;&#xA;    private ImageLoader mImageLoader;&#xD;&#xA;    private static AppController mInstance;&#xD;&#xA;    @Override&#xD;&#xA;    public void onCreate() {&#xD;&#xA;        super.onCreate();&#xD;&#xA;        mInstance = this;&#xD;&#xA;    }&#xD;&#xA;    public static synchronized AppController getInstance() {&#xD;&#xA;        return mInstance;&#xD;&#xA;    }&#xD;&#xA;    public RequestQueue getRequestQueue() {&#xD;&#xA;        if (mRequestQueue == null) {&#xD;&#xA;            mRequestQueue = Volley.newRequestQueue(getApplicationContext());&#xD;&#xA;        }&#xD;&#xA;        return mRequestQueue;&#xD;&#xA;    }&#xD;&#xA;    public ImageLoader getImageLoader() {&#xD;&#xA;        getRequestQueue();&#xD;&#xA;        if (mImageLoader == null) {&#xD;&#xA;            mImageLoader = new ImageLoader(this.mRequestQueue,&#xD;&#xA;                    new LruBitmapCache());&#xD;&#xA;        }&#xD;&#xA;        return this.mImageLoader;&#xD;&#xA;    }&#xD;&#xA;    public <T> void addToRequestQueue(Request<T> req, String tag) {&#xD;&#xA;        // set the default tag if tag is empty&#xD;&#xA;        req.setTag(TextUtils.isEmpty(tag) ? TAG : tag);&#xD;&#xA;        getRequestQueue().add(req);&#xD;&#xA;    }&#xD;&#xA;    public <T> void addToRequestQueue(Request<T> req) {&#xD;&#xA;        req.setTag(TAG);&#xD;&#xA;        getRequestQueue().add(req);&#xD;&#xA;    }&#xD;&#xA;    public void cancelPendingRequests(Object tag) {&#xD;&#xA;        if (mRequestQueue != null) {&#xD;&#xA;            mRequestQueue.cancelAll(tag);&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    }"
5443102060230891058,54,20,"    Sub Send_Files()&#xD;&#xA;    'Working in Excel 2000-2016&#xD;&#xA;    'For Tips see: http://www.rondebruin.nl/win/winmail/Outlook/tips.htm&#xD;&#xA;        Dim OutApp As Object&#xD;&#xA;        Dim OutMail As Object&#xD;&#xA;        Dim sh As Worksheet&#xD;&#xA;        Dim cell As Range&#xD;&#xA;        Dim FileCell As Range&#xD;&#xA;        Dim rng As Range&#xD;&#xA;    &#xD;&#xA;        With Application&#xD;&#xA;            .EnableEvents = False&#xD;&#xA;            .ScreenUpdating = False&#xD;&#xA;        End With&#xD;&#xA;    &#xD;&#xA;        Set sh = Sheets(""Sheet1"")&#xD;&#xA;    &#xD;&#xA;        Set OutApp = CreateObject(""Outlook.Application"")&#xD;&#xA;    &#xD;&#xA;        For Each cell In sh.Columns(""B"").Cells.SpecialCells(xlCellTypeConstants)&#xD;&#xA;    &#xD;&#xA;            'Enter the path/file names in the C:Z column in each row&#xD;&#xA;            Set rng = sh.Cells(cell.Row, 1).Range(""C1:Z1"")&#xD;&#xA;    &#xD;&#xA;            If cell.Value Like ""?*@?*.?*"" And _&#xD;&#xA;               Application.WorksheetFunction.CountA(rng) > 0 Then&#xD;&#xA;                Set OutMail = OutApp.CreateItem(0)&#xD;&#xA;    &#xD;&#xA;                With OutMail&#xD;&#xA;                    .to = cell.Value&#xD;&#xA;                    .Subject = ""Testfile""&#xD;&#xA;                    .Body = ""Hi "" & cell.Offset(0, -1).Value&#xD;&#xA;    &#xD;&#xA;                    For Each FileCell In rng.SpecialCells(xlCellTypeConstants)&#xD;&#xA;                        If Trim(FileCell) <> """" Then&#xD;&#xA;                            If Dir(FileCell.Value) <> """" Then&#xD;&#xA;                                .Attachments.Add FileCell.Value&#xD;&#xA;                            End If&#xD;&#xA;                        End If&#xD;&#xA;                    Next FileCell&#xD;&#xA;    &#xD;&#xA;                    .Send  'Or use .Display&#xD;&#xA;                End With&#xD;&#xA;    &#xD;&#xA;                Set OutMail = Nothing&#xD;&#xA;            End If&#xD;&#xA;        Next cell&#xD;&#xA;    &#xD;&#xA;        Set OutApp = Nothing&#xD;&#xA;        With Application&#xD;&#xA;            .EnableEvents = True&#xD;&#xA;            .ScreenUpdating = True&#xD;&#xA;        End With&#xD;&#xA;    End Sub"
-2052795834881556512,166,20,"    public class GPSTracker extends Service implements LocationListener {&#xD;&#xA;	private final Context mContext;&#xD;&#xA;	// flag for GPS status&#xD;&#xA;	boolean isGPSEnabled = false;&#xD;&#xA;	// flag for network status&#xD;&#xA;	boolean isNetworkEnabled = false;&#xD;&#xA;	// flag for GPS status&#xD;&#xA;	boolean canGetLocation = false;&#xD;&#xA;	Location location; // location&#xD;&#xA;	double latitude; // latitude&#xD;&#xA;	double longitude; // longitude&#xD;&#xA;	// The minimum distance to change Updates in meters&#xD;&#xA;	private static final long MIN_DISTANCE_CHANGE_FOR_UPDATES = 10; // 10 meters&#xD;&#xA;	// The minimum time between updates in milliseconds&#xD;&#xA;	private static final long MIN_TIME_BW_UPDATES = 1000 * 60 * 1; // 1 minute&#xD;&#xA;	// Declaring a Location Manager&#xD;&#xA;	protected LocationManager locationManager;&#xD;&#xA;	public GPSTracker(Context context) {&#xD;&#xA;		this.mContext = context;&#xD;&#xA;		getLocation();&#xD;&#xA;	}&#xD;&#xA;	public Location getLocation() {&#xD;&#xA;		try {&#xD;&#xA;			locationManager = (LocationManager) mContext&#xD;&#xA;					.getSystemService(LOCATION_SERVICE);&#xD;&#xA;			// getting GPS status&#xD;&#xA;			isGPSEnabled = locationManager&#xD;&#xA;					.isProviderEnabled(LocationManager.GPS_PROVIDER);&#xD;&#xA;			// getting network status&#xD;&#xA;			isNetworkEnabled = locationManager&#xD;&#xA;					.isProviderEnabled(LocationManager.NETWORK_PROVIDER);&#xD;&#xA;			if (!isGPSEnabled && !isNetworkEnabled) {&#xD;&#xA;				// no network provider is enabled&#xD;&#xA;			} else {&#xD;&#xA;				this.canGetLocation = true;&#xD;&#xA;				// First get location from Network Provider&#xD;&#xA;				if (isNetworkEnabled) {&#xD;&#xA;					locationManager.requestLocationUpdates(&#xD;&#xA;							LocationManager.NETWORK_PROVIDER,&#xD;&#xA;							MIN_TIME_BW_UPDATES,&#xD;&#xA;							MIN_DISTANCE_CHANGE_FOR_UPDATES, this);&#xD;&#xA;					Log.d(""Network"", ""Network"");&#xD;&#xA;					if (locationManager != null) {&#xD;&#xA;						location = locationManager&#xD;&#xA;								.getLastKnownLocation(LocationManager.NETWORK_PROVIDER);&#xD;&#xA;						if (location != null) {&#xD;&#xA;							latitude = location.getLatitude();&#xD;&#xA;							longitude = location.getLongitude();&#xD;&#xA;						}&#xD;&#xA;					}&#xD;&#xA;				}&#xD;&#xA;				// if GPS Enabled get lat/long using GPS Services&#xD;&#xA;				if (isGPSEnabled) {&#xD;&#xA;					if (location == null) {&#xD;&#xA;						locationManager.requestLocationUpdates(&#xD;&#xA;								LocationManager.GPS_PROVIDER,&#xD;&#xA;								MIN_TIME_BW_UPDATES,&#xD;&#xA;								MIN_DISTANCE_CHANGE_FOR_UPDATES, this);&#xD;&#xA;						Log.d(""GPS Enabled"", ""GPS Enabled"");&#xD;&#xA;						if (locationManager != null) {&#xD;&#xA;							location = locationManager&#xD;&#xA;									.getLastKnownLocation(LocationManager.GPS_PROVIDER);&#xD;&#xA;							if (location != null) {&#xD;&#xA;								latitude = location.getLatitude();&#xD;&#xA;								longitude = location.getLongitude();&#xD;&#xA;							}&#xD;&#xA;						}&#xD;&#xA;					}&#xD;&#xA;				}&#xD;&#xA;			}&#xD;&#xA;		} catch (Exception e) {&#xD;&#xA;			e.printStackTrace();&#xD;&#xA;		}&#xD;&#xA;		return location;&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	/**&#xD;&#xA;	 * Stop using GPS listener&#xD;&#xA;	 * Calling this function will stop using GPS in your app&#xD;&#xA;	 * */&#xD;&#xA;	public void stopUsingGPS(){&#xD;&#xA;		if(locationManager != null){&#xD;&#xA;			locationManager.removeUpdates(GPSTracker.this);&#xD;&#xA;		}		&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	/**&#xD;&#xA;	 * Function to get latitude&#xD;&#xA;	 * */&#xD;&#xA;	public double getLatitude(){&#xD;&#xA;		if(location != null){&#xD;&#xA;			latitude = location.getLatitude();&#xD;&#xA;		}&#xD;&#xA;		&#xD;&#xA;		// return latitude&#xD;&#xA;		return latitude;&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	/**&#xD;&#xA;	 * Function to get longitude&#xD;&#xA;	 * */&#xD;&#xA;	public double getLongitude(){&#xD;&#xA;		if(location != null){&#xD;&#xA;			longitude = location.getLongitude();&#xD;&#xA;		}&#xD;&#xA;		&#xD;&#xA;		// return longitude&#xD;&#xA;		return longitude;&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	/**&#xD;&#xA;	 * Function to check GPS/wifi enabled&#xD;&#xA;	 * @return boolean&#xD;&#xA;	 * */&#xD;&#xA;	public boolean canGetLocation() {&#xD;&#xA;		return this.canGetLocation;&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	/**&#xD;&#xA;	 * Function to show settings alert dialog&#xD;&#xA;	 * On pressing Settings button will lauch Settings Options&#xD;&#xA;	 * */&#xD;&#xA;	public void showSettingsAlert(){&#xD;&#xA;		AlertDialog.Builder alertDialog = new AlertDialog.Builder(mContext);&#xD;&#xA;   	 &#xD;&#xA;        // Setting Dialog Title&#xD;&#xA;        alertDialog.setTitle(""GPS is settings"");&#xD;&#xA; &#xD;&#xA;        // Setting Dialog Message&#xD;&#xA;        alertDialog.setMessage(""GPS is not enabled. Do you want to go to settings menu?"");&#xD;&#xA; &#xD;&#xA;        // On pressing Settings button&#xD;&#xA;        alertDialog.setPositiveButton(""Settings"", new DialogInterface.OnClickListener() {&#xD;&#xA;            public void onClick(DialogInterface dialog,int which) {&#xD;&#xA;            	Intent intent = new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS);&#xD;&#xA;            	mContext.startActivity(intent);&#xD;&#xA;            }&#xD;&#xA;        });&#xD;&#xA; &#xD;&#xA;        // on pressing cancel button&#xD;&#xA;        alertDialog.setNegativeButton(""Cancel"", new DialogInterface.OnClickListener() {&#xD;&#xA;            public void onClick(DialogInterface dialog, int which) {&#xD;&#xA;            dialog.cancel();&#xD;&#xA;            }&#xD;&#xA;        });&#xD;&#xA; &#xD;&#xA;        // Showing Alert Message&#xD;&#xA;        alertDialog.show();&#xD;&#xA;	}&#xD;&#xA;	@Override&#xD;&#xA;	public void onLocationChanged(Location location) {&#xD;&#xA;	}&#xD;&#xA;	@Override&#xD;&#xA;	public void onProviderDisabled(String provider) {&#xD;&#xA;	}&#xD;&#xA;	@Override&#xD;&#xA;	public void onProviderEnabled(String provider) {&#xD;&#xA;	}&#xD;&#xA;	@Override&#xD;&#xA;	public void onStatusChanged(String provider, int status, Bundle extras) {&#xD;&#xA;	}&#xD;&#xA;	@Override&#xD;&#xA;	public IBinder onBind(Intent arg0) {&#xD;&#xA;		return null;&#xD;&#xA;	}&#xD;&#xA;    }"
1593540098395404012,24,21,"        <?xml version=""1.0""?>&#xD;&#xA;        <data>&#xD;&#xA;            <country name=""Liechtenstein"">&#xD;&#xA;                <rank>1</rank>&#xD;&#xA;                <year>2008</year>&#xD;&#xA;                <gdppc>141100</gdppc>&#xD;&#xA;                <neighbor name=""Austria"" direction=""E""/>&#xD;&#xA;                <neighbor name=""Switzerland"" direction=""W""/>&#xD;&#xA;            </country>&#xD;&#xA;            <country name=""Singapore"">&#xD;&#xA;                <rank>4</rank>&#xD;&#xA;                <year>2011</year>&#xD;&#xA;                <gdppc>59900</gdppc>&#xD;&#xA;                <neighbor name=""Malaysia"" direction=""N""/>&#xD;&#xA;            </country>&#xD;&#xA;            <country name=""Panama"">&#xD;&#xA;                <rank>68</rank>&#xD;&#xA;                <year>2011</year>&#xD;&#xA;                <gdppc>13600</gdppc>&#xD;&#xA;                <neighbor name=""Costa Rica"" direction=""W""/>&#xD;&#xA;                <neighbor name=""Colombia"" direction=""E""/>&#xD;&#xA;            </country>&#xD;&#xA;        </data>&#xD;&#xA;   "
5168938712808145599,83,22,"		public class ExpandableListAdapter extends BaseExpandableListAdapter {&#xD;&#xA;			private Context _context;&#xD;&#xA;			private List<String> _listDataHeader; // header titles&#xD;&#xA;			// child data in format of header title, child title&#xD;&#xA;			private HashMap<String, List<String>> _listDataChild;&#xD;&#xA;			public ExpandableListAdapter(Context context,&#xD;&#xA;					List<String> listDataHeader,&#xD;&#xA;					HashMap<String, List<String>> listChildData) {&#xD;&#xA;				this._context = context;&#xD;&#xA;				this._listDataHeader = listDataHeader;&#xD;&#xA;				this._listDataChild = listChildData;&#xD;&#xA;			}&#xD;&#xA;			@Override&#xD;&#xA;			public Object getChild(int groupPosition, int childPosititon) {&#xD;&#xA;				return this._listDataChild.get(&#xD;&#xA;						this._listDataHeader.get(groupPosition)).get(&#xD;&#xA;						childPosititon);&#xD;&#xA;			}&#xD;&#xA;			@Override&#xD;&#xA;			public long getChildId(int groupPosition, int childPosition) {&#xD;&#xA;				return childPosition;&#xD;&#xA;			}&#xD;&#xA;			@Override&#xD;&#xA;			public View getChildView(int groupPosition,&#xD;&#xA;					final int childPosition, boolean isLastChild,&#xD;&#xA;					View convertView, ViewGroup parent) {&#xD;&#xA;				final String childText = (String) getChild(groupPosition,&#xD;&#xA;						childPosition);&#xD;&#xA;				if (convertView == null) {&#xD;&#xA;					LayoutInflater infalInflater = (LayoutInflater) this._context&#xD;&#xA;							.getSystemService(Context.LAYOUT_INFLATER_SERVICE);&#xD;&#xA;					convertView = infalInflater.inflate(R.layout.list_item,&#xD;&#xA;							null);&#xD;&#xA;				}&#xD;&#xA;				TextView txtListChild = (TextView) convertView&#xD;&#xA;						.findViewById(R.id.lblListItem);&#xD;&#xA;				txtListChild.setText(childText);&#xD;&#xA;				return convertView;&#xD;&#xA;			}&#xD;&#xA;			@Override&#xD;&#xA;			public int getChildrenCount(int groupPosition) {&#xD;&#xA;				return this._listDataChild.get(&#xD;&#xA;						this._listDataHeader.get(groupPosition)).size();&#xD;&#xA;			}&#xD;&#xA;			@Override&#xD;&#xA;			public Object getGroup(int groupPosition) {&#xD;&#xA;				return this._listDataHeader.get(groupPosition);&#xD;&#xA;			}&#xD;&#xA;			@Override&#xD;&#xA;			public int getGroupCount() {&#xD;&#xA;				return this._listDataHeader.size();&#xD;&#xA;			}&#xD;&#xA;			@Override&#xD;&#xA;			public long getGroupId(int groupPosition) {&#xD;&#xA;				return groupPosition;&#xD;&#xA;			}&#xD;&#xA;			@Override&#xD;&#xA;			public View getGroupView(int groupPosition, boolean isExpanded,&#xD;&#xA;					View convertView, ViewGroup parent) {&#xD;&#xA;				String headerTitle = (String) getGroup(groupPosition);&#xD;&#xA;				if (convertView == null) {&#xD;&#xA;					LayoutInflater infalInflater = (LayoutInflater) this._context&#xD;&#xA;							.getSystemService(Context.LAYOUT_INFLATER_SERVICE);&#xD;&#xA;					convertView = infalInflater.inflate(R.layout.list_group,&#xD;&#xA;							null);&#xD;&#xA;				}&#xD;&#xA;				TextView lblListHeader = (TextView) convertView&#xD;&#xA;						.findViewById(R.id.lblListHeader);&#xD;&#xA;				lblListHeader.setTypeface(null, Typeface.BOLD);&#xD;&#xA;				lblListHeader.setText(headerTitle);&#xD;&#xA;				return convertView;&#xD;&#xA;			}&#xD;&#xA;			@Override&#xD;&#xA;			public boolean hasStableIds() {&#xD;&#xA;				return false;&#xD;&#xA;			}&#xD;&#xA;			@Override&#xD;&#xA;			public boolean isChildSelectable(int groupPosition,&#xD;&#xA;					int childPosition) {&#xD;&#xA;				return true;&#xD;&#xA;			}&#xD;&#xA;		}&#xD;&#xA;	"
2696803902754219593,24,23,"	<android.support.v4.widget.DrawerLayout&#xD;&#xA;	    xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;	    android:id=""@+id/drawer_layout""&#xD;&#xA;	    android:layout_width=""match_parent""&#xD;&#xA;	    android:layout_height=""match_parent"">&#xD;&#xA;	&#xD;&#xA;	    <!-- Framelayout to display Fragments -->&#xD;&#xA;	    <FrameLayout&#xD;&#xA;	        android:id=""@+id/frame_container""&#xD;&#xA;	        android:layout_width=""match_parent""&#xD;&#xA;	        android:layout_height=""match_parent"" />&#xD;&#xA;	&#xD;&#xA;	    <!-- Listview to display slider menu -->&#xD;&#xA;	    <ListView&#xD;&#xA;	        android:id=""@+id/list_slidermenu""&#xD;&#xA;	        android:layout_width=""240dp""&#xD;&#xA;	        android:layout_height=""match_parent""&#xD;&#xA;	        android:layout_gravity=""start""&#xD;&#xA;	        android:choiceMode=""singleChoice""&#xD;&#xA;	        android:divider=""@color/list_divider""&#xD;&#xA;	        android:dividerHeight=""1dp""        &#xD;&#xA;	        android:listSelector=""@drawable/list_selector""&#xD;&#xA;	        android:background=""@color/list_background""/>&#xD;&#xA;	</android.support.v4.widget.DrawerLayout>"
-4214310502996553040,30,23,"        <IfModule mod_deflate.c>&#xD;&#xA;      # Compress HTML, CSS, JavaScript, Text, XML and fonts&#xD;&#xA;      AddOutputFilterByType DEFLATE application/javascript&#xD;&#xA;      AddOutputFilterByType DEFLATE application/rss+xml&#xD;&#xA;      AddOutputFilterByType DEFLATE application/vnd.ms-fontobject&#xD;&#xA;      AddOutputFilterByType DEFLATE application/x-font&#xD;&#xA;      AddOutputFilterByType DEFLATE application/x-font-opentype&#xD;&#xA;      AddOutputFilterByType DEFLATE application/x-font-otf&#xD;&#xA;      AddOutputFilterByType DEFLATE application/x-font-truetype&#xD;&#xA;      AddOutputFilterByType DEFLATE application/x-font-ttf&#xD;&#xA;      AddOutputFilterByType DEFLATE application/x-javascript&#xD;&#xA;      AddOutputFilterByType DEFLATE application/xhtml+xml&#xD;&#xA;      AddOutputFilterByType DEFLATE application/xml&#xD;&#xA;      AddOutputFilterByType DEFLATE font/opentype&#xD;&#xA;      AddOutputFilterByType DEFLATE font/otf&#xD;&#xA;      AddOutputFilterByType DEFLATE font/ttf&#xD;&#xA;      AddOutputFilterByType DEFLATE image/svg+xml&#xD;&#xA;      AddOutputFilterByType DEFLATE image/x-icon&#xD;&#xA;      AddOutputFilterByType DEFLATE text/css&#xD;&#xA;      AddOutputFilterByType DEFLATE text/html&#xD;&#xA;      AddOutputFilterByType DEFLATE text/javascript&#xD;&#xA;      AddOutputFilterByType DEFLATE text/plain&#xD;&#xA;      AddOutputFilterByType DEFLATE text/xml&#xD;&#xA;    &#xD;&#xA;      # Remove browser bugs (only needed for really old browsers)&#xD;&#xA;      BrowserMatch ^Mozilla/4 gzip-only-text/html&#xD;&#xA;      BrowserMatch ^Mozilla/4\.0[678] no-gzip&#xD;&#xA;      BrowserMatch \bMSIE !no-gzip !gzip-only-text/html&#xD;&#xA;      Header append Vary User-Agent&#xD;&#xA;    </IfModule>"
-4516195111866622003,41,23,"	<?php&#xD;&#xA;	// multiple recipients&#xD;&#xA;	$to  = 'aidan@example.com' . ', '; // note the comma&#xD;&#xA;	$to .= 'wez@example.com';&#xD;&#xA;	// subject&#xD;&#xA;	$subject = 'Birthday Reminders for August';&#xD;&#xA;	// message&#xD;&#xA;	$message = '&#xD;&#xA;	<html>&#xD;&#xA;	<head>&#xD;&#xA;	  <title>Birthday Reminders for August</title>&#xD;&#xA;	</head>&#xD;&#xA;	<body>&#xD;&#xA;	  <p>Here are the birthdays upcoming in August!</p>&#xD;&#xA;	  <table>&#xD;&#xA;		<tr>&#xD;&#xA;		  <th>Person</th><th>Day</th><th>Month</th><th>Year</th>&#xD;&#xA;		</tr>&#xD;&#xA;		<tr>&#xD;&#xA;		  <td>Joe</td><td>3rd</td><td>August</td><td>1970</td>&#xD;&#xA;		</tr>&#xD;&#xA;		<tr>&#xD;&#xA;		  <td>Sally</td><td>17th</td><td>August</td><td>1973</td>&#xD;&#xA;		</tr>&#xD;&#xA;	  </table>&#xD;&#xA;	</body>&#xD;&#xA;	</html>&#xD;&#xA;	';&#xD;&#xA;	// To send HTML mail, the Content-type header must be set&#xD;&#xA;	$headers  = 'MIME-Version: 1.0' . ""\r\n"";&#xD;&#xA;	$headers .= 'Content-type: text/html; charset=iso-8859-1' . ""\r\n"";&#xD;&#xA;	// Additional headers&#xD;&#xA;	$headers .= 'To: Mary <mary@example.com>, Kelly <kelly@example.com>' . ""\r\n"";&#xD;&#xA;	$headers .= 'From: Birthday Reminder <birthday@example.com>' . ""\r\n"";&#xD;&#xA;	$headers .= 'Cc: birthdayarchive@example.com' . ""\r\n"";&#xD;&#xA;	$headers .= 'Bcc: birthdaycheck@example.com' . ""\r\n"";&#xD;&#xA;	// Mail it&#xD;&#xA;	mail($to, $subject, $message, $headers);&#xD;&#xA;	?>&#xD;&#xA; &#xD;&#xA; "
2223157217290753146,28,24,"            <?xml version=""1.0"" encoding=""UTF-8""?>&#xD;&#xA;        <web-app version=""3.1"" xmlns=""http://xmlns.jcp.org/xml/ns/javaee"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"">&#xD;&#xA;            <context-param>&#xD;&#xA;                <param-name>contextConfigLocation</param-name>&#xD;&#xA;                <param-value>/WEB-INF/applicationContext.xml</param-value>&#xD;&#xA;            </context-param>&#xD;&#xA;            <listener>&#xD;&#xA;                <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>&#xD;&#xA;            </listener>&#xD;&#xA;            <servlet>&#xD;&#xA;                <servlet-name>dispatcher</servlet-name>&#xD;&#xA;                <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>&#xD;&#xA;                <load-on-startup>2</load-on-startup>&#xD;&#xA;            </servlet>&#xD;&#xA;            <servlet-mapping>&#xD;&#xA;                <servlet-name>dispatcher</servlet-name>&#xD;&#xA;                <url-pattern>*.htm</url-pattern>&#xD;&#xA;            </servlet-mapping>&#xD;&#xA;            <session-config>&#xD;&#xA;                <session-timeout>&#xD;&#xA;                    30&#xD;&#xA;                </session-timeout>&#xD;&#xA;            </session-config>&#xD;&#xA;            <welcome-file-list>&#xD;&#xA;                <welcome-file>redirect.jsp</welcome-file>&#xD;&#xA;            </welcome-file-list>&#xD;&#xA;        </web-app>&#xD;&#xA;    "
4363154865873797243,46,24,"        .dropdown-submenu {&#xD;&#xA;        position: relative; &#xD;&#xA;        }&#xD;&#xA;        .dropdown-submenu > .dropdown-menu {&#xD;&#xA;            top: 0;&#xD;&#xA;            left: 100%;&#xD;&#xA;            margin-top: -6px;&#xD;&#xA;            margin-left: -1px;&#xD;&#xA;            -webkit-border-radius: 0 6px 6px 6px;&#xD;&#xA;            -moz-border-radius: 0 6px 6px;&#xD;&#xA;            border-radius: 0 6px 6px 6px;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        .dropdown-submenu:hover > .dropdown-menu {&#xD;&#xA;            display: block;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        .dropdown-submenu > a:after {&#xD;&#xA;            display: block;&#xD;&#xA;            content: "" "";&#xD;&#xA;            float: right;&#xD;&#xA;            width: 0;&#xD;&#xA;            height: 0;&#xD;&#xA;            border-color: transparent;&#xD;&#xA;            border-style: solid;&#xD;&#xA;            border-width: 5px 0 5px 5px;&#xD;&#xA;            border-left-color: #ccc;&#xD;&#xA;            margin-top: 5px;&#xD;&#xA;            margin-right: -10px;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        .dropdown-submenu:hover > a:after {&#xD;&#xA;            border-left-color: #fff;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        .dropdown-submenu.pull-left {&#xD;&#xA;            float: none;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;            .dropdown-submenu.pull-left > .dropdown-menu {&#xD;&#xA;                left: -100%;&#xD;&#xA;                margin-left: 10px;&#xD;&#xA;                -webkit-border-radius: 6px 0 6px 6px;&#xD;&#xA;                -moz-border-radius: 6px 0 6px 6px;&#xD;&#xA;                border-radius: 6px 0 6px 6px;&#xD;&#xA;            }"
-8295062948747500768,21,25,        100% — FF&#xD;&#xA;		95% — F2&#xD;&#xA;		90% — E6&#xD;&#xA;		85% — D9&#xD;&#xA;		80% — CC&#xD;&#xA;		75% — BF&#xD;&#xA;		70% — B3&#xD;&#xA;		65% — A6&#xD;&#xA;		60% — 99&#xD;&#xA;		55% — 8C&#xD;&#xA;		50% — 80&#xD;&#xA;		45% — 73&#xD;&#xA;		40% — 66&#xD;&#xA;		35% — 59&#xD;&#xA;		30% — 4D&#xD;&#xA;		25% — 40&#xD;&#xA;		20% — 33&#xD;&#xA;		15% — 26&#xD;&#xA;		10% — 1A&#xD;&#xA;		5% — 0D&#xD;&#xA;		0% — 00
4710517518590047171,32,26,"        <filter>&#xD;&#xA;          <filter-name>CorsFilter</filter-name>&#xD;&#xA;          <filter-class>org.apache.catalina.filters.CorsFilter</filter-class>&#xD;&#xA;          <init-param>&#xD;&#xA;            <param-name>cors.allowed.origins</param-name>&#xD;&#xA;            <param-value>*</param-value>&#xD;&#xA;          </init-param>&#xD;&#xA;          <init-param>&#xD;&#xA;            <param-name>cors.allowed.methods</param-name>&#xD;&#xA;            <param-value>GET,POST,HEAD,OPTIONS,PUT</param-value>&#xD;&#xA;          </init-param>&#xD;&#xA;          <init-param>&#xD;&#xA;            <param-name>cors.allowed.headers</param-name>&#xD;&#xA;            <param-value>Content-Type,X-Requested-With,accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers</param-value>&#xD;&#xA;          </init-param>&#xD;&#xA;          <init-param>&#xD;&#xA;            <param-name>cors.exposed.headers</param-name>&#xD;&#xA;            <param-value>Access-Control-Allow-Origin,Access-Control-Allow-Credentials</param-value>&#xD;&#xA;          </init-param>&#xD;&#xA;          <init-param>&#xD;&#xA;            <param-name>cors.support.credentials</param-name>&#xD;&#xA;            <param-value>true</param-value>&#xD;&#xA;          </init-param>&#xD;&#xA;          <init-param>&#xD;&#xA;            <param-name>cors.preflight.maxage</param-name>&#xD;&#xA;            <param-value>10</param-value>&#xD;&#xA;          </init-param>&#xD;&#xA;        </filter>&#xD;&#xA;        <filter-mapping>&#xD;&#xA;          <filter-name>CorsFilter</filter-name>&#xD;&#xA;          <url-pattern>/*</url-pattern>&#xD;&#xA;        </filter-mapping>"
-1151016766288813810,83,26,"	public class XMLParser {&#xD;&#xA;		// constructor&#xD;&#xA;		public XMLParser() {&#xD;&#xA;		}&#xD;&#xA;		/**&#xD;&#xA;		 * Getting XML from URL making HTTP request&#xD;&#xA;		 *&#xD;&#xA;		 * @param url string&#xD;&#xA;		 */&#xD;&#xA;		public String getXmlFromUrl(String url) {&#xD;&#xA;			String xml = null;&#xD;&#xA;			try {&#xD;&#xA;				// defaultHttpClient&#xD;&#xA;				DefaultHttpClient httpClient = new DefaultHttpClient();&#xD;&#xA;				HttpPost httpPost = new HttpPost(url);&#xD;&#xA;				HttpResponse httpResponse = httpClient.execute(httpPost);&#xD;&#xA;				HttpEntity httpEntity = httpResponse.getEntity();&#xD;&#xA;				xml = EntityUtils.toString(httpEntity);&#xD;&#xA;			} catch (UnsupportedEncodingException e) {&#xD;&#xA;				e.printStackTrace();&#xD;&#xA;			} catch (ClientProtocolException e) {&#xD;&#xA;				e.printStackTrace();&#xD;&#xA;			} catch (IOException e) {&#xD;&#xA;				e.printStackTrace();&#xD;&#xA;			}&#xD;&#xA;			// return XML&#xD;&#xA;			return xml;&#xD;&#xA;		}&#xD;&#xA;		/**&#xD;&#xA;		 * Getting XML DOM element&#xD;&#xA;		 *&#xD;&#xA;		 * @param XML string&#xD;&#xA;		 */&#xD;&#xA;		public Document getDomElement(String xml) {&#xD;&#xA;			Document doc = null;&#xD;&#xA;			DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();&#xD;&#xA;			try {&#xD;&#xA;				DocumentBuilder db = dbf.newDocumentBuilder();&#xD;&#xA;				InputSource is = new InputSource();&#xD;&#xA;				is.setCharacterStream(new StringReader(xml));&#xD;&#xA;				doc = db.parse(is);&#xD;&#xA;			} catch (ParserConfigurationException e) {&#xD;&#xA;				Log.e(""Error: "", e.getMessage());&#xD;&#xA;				return null;&#xD;&#xA;			} catch (SAXException e) {&#xD;&#xA;				Log.e(""Error: "", e.getMessage());&#xD;&#xA;				return null;&#xD;&#xA;			} catch (IOException e) {&#xD;&#xA;				Log.e(""Error: "", e.getMessage());&#xD;&#xA;				return null;&#xD;&#xA;			}&#xD;&#xA;			return doc;&#xD;&#xA;		}&#xD;&#xA;		/**&#xD;&#xA;		 * Getting node value&#xD;&#xA;		 *&#xD;&#xA;		 * @param elem element&#xD;&#xA;		 */&#xD;&#xA;		public final String getElementValue(Node elem) {&#xD;&#xA;			Node child;&#xD;&#xA;			if (elem != null) {&#xD;&#xA;				if (elem.hasChildNodes()) {&#xD;&#xA;					for (child = elem.getFirstChild(); child != null;&#xD;&#xA;							child = child.getNextSibling()) {&#xD;&#xA;						if (child.getNodeType() == Node.TEXT_NODE) {&#xD;&#xA;							return child.getNodeValue();&#xD;&#xA;						}&#xD;&#xA;					}&#xD;&#xA;				}&#xD;&#xA;			}&#xD;&#xA;			return """";&#xD;&#xA;		}&#xD;&#xA;		/**&#xD;&#xA;		 * Getting node value&#xD;&#xA;		 *&#xD;&#xA;		 * @param Element node&#xD;&#xA;		 * @param key string&#xD;&#xA;		 */&#xD;&#xA;		public String getValue(Element item, String str) {&#xD;&#xA;			NodeList n = item.getElementsByTagName(str);&#xD;&#xA;			return this.getElementValue(n.item(0));&#xD;&#xA;		}&#xD;&#xA;	}"
70514364019997140,47,27,"	public class JSONParser {&#xD;&#xA;	static InputStream is = null;&#xD;&#xA;	static JSONObject jObj = null;&#xD;&#xA;	static String json = """";&#xD;&#xA;	// constructor&#xD;&#xA;	public JSONParser() {&#xD;&#xA;	}&#xD;&#xA;	public JSONObject getJSONFromUrl(String url, List<NameValuePair> params) {&#xD;&#xA;		// Making HTTP request&#xD;&#xA;		try {&#xD;&#xA;			// defaultHttpClient&#xD;&#xA;			DefaultHttpClient httpClient = new DefaultHttpClient();&#xD;&#xA;			HttpPost httpPost = new HttpPost(url);&#xD;&#xA;			httpPost.setEntity(new UrlEncodedFormEntity(params));&#xD;&#xA;			HttpResponse httpResponse = httpClient.execute(httpPost);&#xD;&#xA;			HttpEntity httpEntity = httpResponse.getEntity();&#xD;&#xA;			is = httpEntity.getContent();&#xD;&#xA;		} catch (UnsupportedEncodingException e) {&#xD;&#xA;			e.printStackTrace();&#xD;&#xA;		} catch (ClientProtocolException e) {&#xD;&#xA;			e.printStackTrace();&#xD;&#xA;		} catch (IOException e) {&#xD;&#xA;			e.printStackTrace();&#xD;&#xA;		}&#xD;&#xA;		try {&#xD;&#xA;			BufferedReader reader = new BufferedReader(new InputStreamReader(&#xD;&#xA;					is, ""iso-8859-1""), 8);&#xD;&#xA;			StringBuilder sb = new StringBuilder();&#xD;&#xA;			String line = null;&#xD;&#xA;			while ((line = reader.readLine()) != null) {&#xD;&#xA;				sb.append(line + ""\n"");&#xD;&#xA;			}&#xD;&#xA;			is.close();&#xD;&#xA;			json = sb.toString();&#xD;&#xA;			Log.e(""JSON"", json);&#xD;&#xA;		} catch (Exception e) {&#xD;&#xA;			Log.e(""Buffer Error"", ""Error converting result "" + e.toString());&#xD;&#xA;		}&#xD;&#xA;		// try parse the string to a JSON object&#xD;&#xA;		try {&#xD;&#xA;			jObj = new JSONObject(json);			&#xD;&#xA;		} catch (JSONException e) {&#xD;&#xA;			Log.e(""JSON Parser"", ""Error parsing data "" + e.toString());&#xD;&#xA;		}&#xD;&#xA;		// return JSON String&#xD;&#xA;		return jObj;&#xD;&#xA;	}"
-1167812417924453365,22,30,"	# SQLite version 3.x&#xD;&#xA;	#   gem install sqlite3&#xD;&#xA;	#&#xD;&#xA;	#   Ensure the SQLite 3 gem is defined in your Gemfile&#xD;&#xA;	#   gem 'sqlite3'&#xD;&#xA;	#&#xD;&#xA;	default: &default&#xD;&#xA;	  adapter: sqlite3&#xD;&#xA;	  pool: 5&#xD;&#xA;	  timeout: 5000&#xD;&#xA;	development:&#xD;&#xA;	  <<: *default&#xD;&#xA;	  database: db/development.sqlite3&#xD;&#xA;	# Warning: The database defined as ""test"" will be erased and&#xD;&#xA;	# re-generated from your development database when you run ""rake"".&#xD;&#xA;	# Do not set this db to the same as development or production.&#xD;&#xA;	test:&#xD;&#xA;	  <<: *default&#xD;&#xA;	  database: db/test.sqlite3&#xD;&#xA;	production:&#xD;&#xA;	  <<: *default&#xD;&#xA;	  database: db/production.sqlite3"
-8110747859698983069,34,31,"    Function TEXTJOIN(delim As String, skipblank As Boolean, arr)&#xD;&#xA;        Dim d As Long&#xD;&#xA;        Dim c As Long&#xD;&#xA;        Dim arr2()&#xD;&#xA;        Dim t As Long, y As Long&#xD;&#xA;        t = -1&#xD;&#xA;        y = -1&#xD;&#xA;        If TypeName(arr) = ""Range"" Then&#xD;&#xA;            arr2 = arr.Value&#xD;&#xA;        Else&#xD;&#xA;            arr2 = arr&#xD;&#xA;        End If&#xD;&#xA;        On Error Resume Next&#xD;&#xA;        t = UBound(arr2, 2)&#xD;&#xA;        y = UBound(arr2, 1)&#xD;&#xA;        On Error GoTo 0&#xD;&#xA;        &#xD;&#xA;        If t >= 0 And y >= 0 Then&#xD;&#xA;            For c = LBound(arr2, 1) To UBound(arr2, 1)&#xD;&#xA;                For d = LBound(arr2, 1) To UBound(arr2, 2)&#xD;&#xA;                    If arr2(c, d) <> """" Or Not skipblank Then&#xD;&#xA;                        TEXTJOIN = TEXTJOIN & arr2(c, d) & delim&#xD;&#xA;                    End If&#xD;&#xA;                Next d&#xD;&#xA;            Next c&#xD;&#xA;        Else&#xD;&#xA;            For c = LBound(arr2) To UBound(arr2)&#xD;&#xA;                If arr2(c) <> """" Or Not skipblank Then&#xD;&#xA;                    TEXTJOIN = TEXTJOIN & arr2(c) & delim&#xD;&#xA;                End If&#xD;&#xA;            Next c&#xD;&#xA;        End If&#xD;&#xA;        TEXTJOIN = Left(TEXTJOIN, Len(TEXTJOIN) - Len(delim))&#xD;&#xA;    End Function"
4868597549705666100,47,35,"        <?php&#xD;&#xA;        $target_dir = ""uploads/"";&#xD;&#xA;        $target_file = $target_dir . basename($_FILES[""fileToUpload""][""name""]);&#xD;&#xA;        $uploadOk = 1;&#xD;&#xA;        $imageFileType = pathinfo($target_file,PATHINFO_EXTENSION);&#xD;&#xA;        // Check if image file is a actual image or fake image&#xD;&#xA;        if(isset($_POST[""submit""])) {&#xD;&#xA;        $check = getimagesize($_FILES[""fileToUpload""][""tmp_name""]);&#xD;&#xA;        if($check !== false) {&#xD;&#xA;            echo ""File is an image - "" . $check[""mime""] . ""."";&#xD;&#xA;            $uploadOk = 1;&#xD;&#xA;        } else {&#xD;&#xA;            echo ""File is not an image."";&#xD;&#xA;            $uploadOk = 0;&#xD;&#xA;        }&#xD;&#xA;        }&#xD;&#xA;        // Check if file already exists&#xD;&#xA;        if (file_exists($target_file)) {&#xD;&#xA;        echo ""Sorry, file already exists."";&#xD;&#xA;        $uploadOk = 0;&#xD;&#xA;        }&#xD;&#xA;         // Check file size&#xD;&#xA;         if ($_FILES[""fileToUpload""][""size""] > 500000) {&#xD;&#xA;        echo ""Sorry, your file is too large."";&#xD;&#xA;        $uploadOk = 0;&#xD;&#xA;         }&#xD;&#xA;        // Allow certain file formats&#xD;&#xA;        if($imageFileType != ""jpg"" && $imageFileType != ""png"" && $imageFileType != &#xD;&#xA;         ""jpeg""&#xD;&#xA;        && $imageFileType != ""gif"" ) {&#xD;&#xA;        echo ""Sorry, only JPG, JPEG, PNG & GIF files are allowed."";&#xD;&#xA;        $uploadOk = 0;&#xD;&#xA;         }&#xD;&#xA;        // Check if $uploadOk is set to 0 by an error&#xD;&#xA;        if ($uploadOk == 0) {&#xD;&#xA;        echo ""Sorry, your file was not uploaded."";&#xD;&#xA;        // if everything is ok, try to upload file&#xD;&#xA;        } else {&#xD;&#xA;         if (move_uploaded_file($_FILES[""fileToUpload""][""tmp_name""], $target_file)) &#xD;&#xA;       {&#xD;&#xA;            echo ""The file "". basename( $_FILES[""fileToUpload""][""name""]). "" has been &#xD;&#xA;        uploaded."";&#xD;&#xA;        } else {&#xD;&#xA;            echo ""Sorry, there was an error uploading your file."";&#xD;&#xA;        }&#xD;&#xA;        }&#xD;&#xA;        ?>"
-3812640104739559772,26,36,"    # SQLite version 3.x&#xD;&#xA;    #   gem install sqlite3&#xD;&#xA;    #&#xD;&#xA;    #   Ensure the SQLite 3 gem is defined in your Gemfile&#xD;&#xA;    #   gem 'sqlite3'&#xD;&#xA;    development:&#xD;&#xA;      adapter: sqlite3&#xD;&#xA;          database: db/development.sqlite3&#xD;&#xA;      pool: 5&#xD;&#xA;      timeout: 5000&#xD;&#xA;    &#xD;&#xA;    # Warning: The database defined as ""test"" will be erased and&#xD;&#xA;    # re-generated from your development database when you run ""rake"".&#xD;&#xA;    # Do not set this db to the same as development or production.&#xD;&#xA;    test:&#xD;&#xA;      adapter: sqlite3&#xD;&#xA;      database: db/test.sqlite3&#xD;&#xA;      pool: 5&#xD;&#xA;      timeout: 5000&#xD;&#xA;    &#xD;&#xA;    production:&#xD;&#xA;      adapter: sqlite3&#xD;&#xA;      database: db/production.sqlite3&#xD;&#xA;      pool: 5&#xD;&#xA;      timeout: 5000&#xD;&#xA;    "
-1344748958488021703,65,37,"	public class JSONParser {static InputStream is = null;&#xD;&#xA;	static JSONObject jObj = null;&#xD;&#xA;	static String json = """";&#xD;&#xA;	// constructor&#xD;&#xA;	public JSONParser() {&#xD;&#xA;	}&#xD;&#xA;	// function get json from url&#xD;&#xA;	// by making HTTP POST or GET mehtod&#xD;&#xA;	public JSONObject makeHttpRequest(String url, String method,&#xD;&#xA;			List<NameValuePair> params) {&#xD;&#xA;		// Making HTTP request&#xD;&#xA;		try {&#xD;&#xA;			&#xD;&#xA;			// check for request method&#xD;&#xA;			if(method == ""POST""){&#xD;&#xA;				// request method is POST&#xD;&#xA;				// defaultHttpClient&#xD;&#xA;				DefaultHttpClient httpClient = new DefaultHttpClient();&#xD;&#xA;				HttpPost httpPost = new HttpPost(url);&#xD;&#xA;				httpPost.setEntity(new UrlEncodedFormEntity(params));&#xD;&#xA;				HttpResponse httpResponse = httpClient.execute(httpPost);&#xD;&#xA;				HttpEntity httpEntity = httpResponse.getEntity();&#xD;&#xA;				is = httpEntity.getContent();&#xD;&#xA;				&#xD;&#xA;			}else if(method == ""GET""){&#xD;&#xA;				// request method is GET&#xD;&#xA;				DefaultHttpClient httpClient = new DefaultHttpClient();&#xD;&#xA;				String paramString = URLEncodedUtils.format(params, ""utf-8"");&#xD;&#xA;				url += ""?"" + paramString;&#xD;&#xA;				HttpGet httpGet = new HttpGet(url);&#xD;&#xA;				HttpResponse httpResponse = httpClient.execute(httpGet);&#xD;&#xA;				HttpEntity httpEntity = httpResponse.getEntity();&#xD;&#xA;				is = httpEntity.getContent();&#xD;&#xA;			}			&#xD;&#xA;			&#xD;&#xA;		} catch (UnsupportedEncodingException e) {&#xD;&#xA;			e.printStackTrace();&#xD;&#xA;		} catch (ClientProtocolException e) {&#xD;&#xA;			e.printStackTrace();&#xD;&#xA;		} catch (IOException e) {&#xD;&#xA;			e.printStackTrace();&#xD;&#xA;		}&#xD;&#xA;		try {&#xD;&#xA;			BufferedReader reader = new BufferedReader(new InputStreamReader(&#xD;&#xA;					is, ""iso-8859-1""), 8);&#xD;&#xA;			StringBuilder sb = new StringBuilder();&#xD;&#xA;			String line = null;&#xD;&#xA;			while ((line = reader.readLine()) != null) {&#xD;&#xA;				sb.append(line + ""\n"");&#xD;&#xA;			}&#xD;&#xA;			is.close();&#xD;&#xA;			json = sb.toString();&#xD;&#xA;		} catch (Exception e) {&#xD;&#xA;			Log.e(""Buffer Error"", ""Error converting result "" + e.toString());&#xD;&#xA;		}&#xD;&#xA;		// try parse the string to a JSON object&#xD;&#xA;		try {&#xD;&#xA;			jObj = new JSONObject(json);&#xD;&#xA;		} catch (JSONException e) {&#xD;&#xA;			Log.e(""JSON Parser"", ""Error parsing data "" + e.toString());&#xD;&#xA;		}&#xD;&#xA;		// return JSON String&#xD;&#xA;		return jObj;&#xD;&#xA;	}&#xD;&#xA;}"
-4242441376643794959,20,38,"     <android.support.v4.widget.DrawerLayout&#xD;&#xA;        xmlns:android=""http://schemas.android.com/apk/res/android""&#xD;&#xA;        android:id=""@+id/drawer_layout""&#xD;&#xA;        android:layout_width=""match_parent""&#xD;&#xA;        android:layout_height=""match_parent"">&#xD;&#xA;        <!-- The main content view -->&#xD;&#xA;        <FrameLayout&#xD;&#xA;            android:id=""@+id/content_frame""&#xD;&#xA;            android:layout_width=""match_parent""&#xD;&#xA;            android:layout_height=""match_parent"" />&#xD;&#xA;        <!-- The navigation drawer -->&#xD;&#xA;        <ListView android:id=""@+id/left_drawer""&#xD;&#xA;            android:layout_width=""240dp""&#xD;&#xA;            android:layout_height=""match_parent""&#xD;&#xA;            android:layout_gravity=""start""&#xD;&#xA;            android:choiceMode=""singleChoice""&#xD;&#xA;            android:divider=""@android:color/transparent""&#xD;&#xA;            android:dividerHeight=""0dp""&#xD;&#xA;            android:background=""#111""/>&#xD;&#xA;    </android.support.v4.widget.DrawerLayout>"
490449213296150202,46,45,"	public class JSONParser {&#xD;&#xA;	  static InputStream is = null;&#xD;&#xA;	  static JSONObject jObj = null;&#xD;&#xA;	  static String json = """";&#xD;&#xA;	  // constructor&#xD;&#xA;	  public JSONParser() {&#xD;&#xA;	  }&#xD;&#xA;	  public JSONObject getJSONFromUrl(String url) {&#xD;&#xA;	    // Making HTTP request&#xD;&#xA;	    try {&#xD;&#xA;	      // defaultHttpClient&#xD;&#xA;	      DefaultHttpClient httpClient = new DefaultHttpClient();&#xD;&#xA;	      HttpPost httpPost = new HttpPost(url);&#xD;&#xA;	      HttpResponse httpResponse = httpClient.execute(httpPost);&#xD;&#xA;	      HttpEntity httpEntity = httpResponse.getEntity();&#xD;&#xA;	      is = httpEntity.getContent();&#xD;&#xA;	    } catch (UnsupportedEncodingException e) {&#xD;&#xA;	      e.printStackTrace();&#xD;&#xA;	    } catch (ClientProtocolException e) {&#xD;&#xA;	      e.printStackTrace();&#xD;&#xA;	    } catch (IOException e) {&#xD;&#xA;	      e.printStackTrace();&#xD;&#xA;	    }&#xD;&#xA;	    try {&#xD;&#xA;	      BufferedReader reader = new BufferedReader(new InputStreamReader(&#xD;&#xA;	          is, ""iso-8859-1""), 8);&#xD;&#xA;	      StringBuilder sb = new StringBuilder();&#xD;&#xA;	      String line = null;&#xD;&#xA;	      while ((line = reader.readLine()) != null) {&#xD;&#xA;	        sb.append(line + ""n"");&#xD;&#xA;	      }&#xD;&#xA;	      is.close();&#xD;&#xA;	      json = sb.toString();&#xD;&#xA;	    } catch (Exception e) {&#xD;&#xA;	      Log.e(""Buffer Error"", ""Error converting result "" + e.toString());&#xD;&#xA;	    }&#xD;&#xA;	    // try parse the string to a JSON object&#xD;&#xA;	    try {&#xD;&#xA;	      jObj = new JSONObject(json);&#xD;&#xA;	    } catch (JSONException e) {&#xD;&#xA;	      Log.e(""JSON Parser"", ""Error parsing data "" + e.toString());&#xD;&#xA;	    }&#xD;&#xA;	    // return JSON String&#xD;&#xA;	    return jObj;&#xD;&#xA;	  }&#xD;&#xA;	}"
6255419687323887306,33,54,"	<IfModule mod_rewrite.c>&#xD;&#xA;	    RewriteEngine On&#xD;&#xA;	    RewriteBase /&#xD;&#xA;	&#xD;&#xA;	    #Removes access to the system folder by users.&#xD;&#xA;	    #Additionally this will allow you to create a System.php controller,&#xD;&#xA;	    #previously this would not have been possible.&#xD;&#xA;	    #'system' can be replaced if you have renamed your system folder.&#xD;&#xA;	    RewriteCond %{REQUEST_URI} ^system.*&#xD;&#xA;	    RewriteRule ^(.*)$ /index.php?/$1 [L]&#xD;&#xA;	    &#xD;&#xA;	    #When your application folder isn't in the system folder&#xD;&#xA;	    #This snippet prevents user access to the application folder&#xD;&#xA;	    #Submitted by: Fabdrol&#xD;&#xA;	    #Rename 'application' to your applications folder name.&#xD;&#xA;	    RewriteCond %{REQUEST_URI} ^application.*&#xD;&#xA;	    RewriteRule ^(.*)$ /index.php?/$1 [L]&#xD;&#xA;	&#xD;&#xA;	    #Checks to see if the user is attempting to access a valid file,&#xD;&#xA;	    #such as an image or css document, if this isn't true it sends the&#xD;&#xA;	    #request to index.php&#xD;&#xA;	    RewriteCond %{REQUEST_FILENAME} !-f&#xD;&#xA;	    RewriteCond %{REQUEST_FILENAME} !-d&#xD;&#xA;	    RewriteRule ^(.*)$ index.php?/$1 [L]&#xD;&#xA;	</IfModule>&#xD;&#xA;	&#xD;&#xA;	<IfModule !mod_rewrite.c>&#xD;&#xA;	    # If we don't have mod_rewrite installed, all 404's&#xD;&#xA;	    # can be sent to index.php, and everything works as normal.&#xD;&#xA;	    # Submitted by: ElliotHaughin&#xD;&#xA;	&#xD;&#xA;	    ErrorDocument 404 /index.php&#xD;&#xA;	</IfModule> "
159097874188000167,47,55,"	/* http://meyerweb.com/eric/tools/css/reset/ &#xD;&#xA;	   v2.0 | 20110126&#xD;&#xA;	   License: none (public domain)&#xD;&#xA;	*/&#xD;&#xA;	html, body, div, span, applet, object, iframe,&#xD;&#xA;	h1, h2, h3, h4, h5, h6, p, blockquote, pre,&#xD;&#xA;	a, abbr, acronym, address, big, cite, code,&#xD;&#xA;	del, dfn, em, img, ins, kbd, q, s, samp,&#xD;&#xA;	small, strike, strong, sub, sup, tt, var,&#xD;&#xA;	b, u, i, center,&#xD;&#xA;	dl, dt, dd, ol, ul, li,&#xD;&#xA;	fieldset, form, label, legend,&#xD;&#xA;	table, caption, tbody, tfoot, thead, tr, th, td,&#xD;&#xA;	article, aside, canvas, details, embed, &#xD;&#xA;	figure, figcaption, footer, header, hgroup, &#xD;&#xA;	menu, nav, output, ruby, section, summary,&#xD;&#xA;	time, mark, audio, video {&#xD;&#xA;		margin: 0;&#xD;&#xA;		padding: 0;&#xD;&#xA;		border: 0;&#xD;&#xA;		font-size: 100%;&#xD;&#xA;		font: inherit;&#xD;&#xA;		vertical-align: baseline;&#xD;&#xA;	}&#xD;&#xA;	/* HTML5 display-role reset for older browsers */&#xD;&#xA;	article, aside, details, figcaption, figure, &#xD;&#xA;	footer, header, hgroup, menu, nav, section {&#xD;&#xA;		display: block;&#xD;&#xA;	}&#xD;&#xA;	body {&#xD;&#xA;		line-height: 1;&#xD;&#xA;	}&#xD;&#xA;	ol, ul {&#xD;&#xA;		list-style: none;&#xD;&#xA;	}&#xD;&#xA;	blockquote, q {&#xD;&#xA;		quotes: none;&#xD;&#xA;	}&#xD;&#xA;	blockquote:before, blockquote:after,&#xD;&#xA;	q:before, q:after {&#xD;&#xA;		content: '';&#xD;&#xA;		content: none;&#xD;&#xA;	}&#xD;&#xA;	table {&#xD;&#xA;		border-collapse: collapse;&#xD;&#xA;		border-spacing: 0;&#xD;&#xA;	}"
-5008848529347854688,30,79,"	<?xml version=""1.0"" encoding=""UTF-8""?>&#xD;&#xA;	<web-app version=""2.5"" xmlns=""http://java.sun.com/xml/ns/javaee""&#xD;&#xA;		xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""&#xD;&#xA;		xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"">&#xD;&#xA;		<!-- The definition of the Root Spring Container shared by all Servlets and Filters -->&#xD;&#xA;		<context-param>&#xD;&#xA;			<param-name>contextConfigLocation</param-name>&#xD;&#xA;			<param-value>/WEB-INF/spring/root-context.xml</param-value>&#xD;&#xA;		</context-param>&#xD;&#xA;		&#xD;&#xA;		<!-- Creates the Spring Container shared by all Servlets and Filters -->&#xD;&#xA;		<listener>&#xD;&#xA;			<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>&#xD;&#xA;		</listener>&#xD;&#xA;		<!-- Processes application requests -->&#xD;&#xA;		<servlet>&#xD;&#xA;			<servlet-name>appServlet</servlet-name>&#xD;&#xA;			<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>&#xD;&#xA;			<init-param>&#xD;&#xA;				<param-name>contextConfigLocation</param-name>&#xD;&#xA;				<param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value>&#xD;&#xA;			</init-param>&#xD;&#xA;			<load-on-startup>1</load-on-startup>&#xD;&#xA;		</servlet>&#xD;&#xA;			&#xD;&#xA;		<servlet-mapping>&#xD;&#xA;			<servlet-name>appServlet</servlet-name>&#xD;&#xA;			<url-pattern>/</url-pattern>&#xD;&#xA;		</servlet-mapping>&#xD;&#xA;	</web-app>"
